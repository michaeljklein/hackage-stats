
==================== FINAL INTERFACE ====================
2016-06-06 22:29:20.832415 UTC

interface main@main:Main 7103
  interface hash: 0d5d7ddcba18625d81bdc03f78e4b182
  ABI hash: c825e2ed6947e6c4beed44ff9b54b62b
  export-list hash: 6ea2e8af35bde2eff637d42400db3a6f
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 46b100c730d2bd2ae8db22a248211044
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.addRepo
  Main.fromBool
  Main.main
  Main.maybeParse
  Main.numberWithGithub
module dependencies:
package dependencies: StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh
                      aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3 base-4.8.2.0
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      comonad-4.2.7.2@comon_ANDyj4wNB0X1DshTxn1Ec7
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_GjopTtscFPI3wCyb9R8zUx
                      curl-1.3.8@curl_9JZlSJNY6JRIY3XmrL566R
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      free-4.12.4@free_6zsT0eU8oWW5hSQkbU0iac ghc-prim-0.4.0.0
                      hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      kan-extensions-4.2.3@kanex_93YChxpKCPfJOIja4yoAht
                      lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      process-1.2.3.0@proce_52AgREEfSrnJLlkGV9YZZJ
                      profunctors-5.2@profu_3mp9Et5di2eBw26qSk1FvQ
                      reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0
                      semigroupoids-5.0.1@semig_GGZAZT6nvE937zJVPqetuF
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unix-2.7.1.0@unix_KZL8h98IqDM57kQSPo1mKx
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.ByteString.Char8
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text.Internal
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9:Data.Reflection
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh:Data.Functor.Rep
                         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Wrapped
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Data.Repo
                         hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Package
                         kan-extensions-4.2.3@kanex_93YChxpKCPfJOIja4yoAht:Data.Functor.Yoneda
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.At
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Internal.Indexed
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Internal.Zoom
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Reified
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Tuple
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Wrapped
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         profunctors-5.2@profu_3mp9Et5di2eBw26qSk1FvQ:Data.Profunctor.Rep
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.List.NonEmpty
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson da66cb8f2b2fdb2aafcbaaa65fa7f5d3
import  -/  aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Encode.ByteString 111c67f21a9fffb86b60d666be8bed88
import  -/  attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text 68a500a0786bd3fa6da78261acf98592
import  -/  attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Text.Internal 960680a239563945b7eb3154e9a4c083
import  -/  base-4.8.2.0:Control.Monad 480c5067477275068c9b98be08410df9
import  -/  base-4.8.2.0:Data.Either e8724afd65fd432cfe9a54014f5f762d
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.Function 6b13a8d3a5e3bd757a91434dce3fc7f3
import  -/  base-4.8.2.0:Data.List 3f0782c8d4bf50eecefcd5ea1798aac8
import  -/  base-4.8.2.0:Data.Maybe 1cb58de2b04ee3c0c0a7dc9201184aff
import  -/  base-4.8.2.0:Data.Traversable 7576318f4ef8587ad947f87012b65abf
import  -/  base-4.8.2.0:Data.Tuple 012ad951a59a9d85fe1de36a2f012986
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Real 1281efa9baf803bc7859d7efb89a38b3
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  base-4.8.2.0:System.Environment ba6e36000c8274703cf7786fbe8d0f6c
import  -/  base-4.8.2.0:System.IO e7c9ddd0b9319c17e6733109efa94847
import  -/  base-4.8.2.0:Text.Read ef0ef92fb7358ae94bab089940adfd2a
import  -/  bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Lazy 9c2dd9a3ab1c17d5026a1c481c7a8877
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  ghc-prim-0.4.0.0:GHC.Types 6b27fb3fdbd0e3f0925a4496c66513bb
import  -/  hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Data.Repo 4fee9d2c852c72dad1fa8108ad6fb8d0
import  -/  hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Mathematica d684edad2cef62777821267010663b79
import  -/  hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Package 0e0bbc4265da232cf4cc3f17ec84b8dd
import  -/  hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Parse fc12b4def24ad1e040917109b27b9662
import  -/  hackage-info-0.1.0.0@hacka_8AzqFXcXsXI1zCeqNUsPcm:Process a1c7e3bb5801ae494aad6c68b2a5261f
import  -/  integer-gmp-1.0.0.0:GHC.Integer.Type 371e90fe753f08ddedf0d2657a9ef5c4
import  -/  lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens 07d031cce67e87456c9d6084392593e3
import  -/  lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Getter 4c081d3b941b269a5209c05f7643b5da
import  -/  lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Setter 5997523bb3ea0a10c599ac652315c3db
import  -/  text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text 455542f1de38979f085463a75ea8fadc
0100ca21e8521cbddf01ab4089424fa6
  $sencode2 :: [Package.Package] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Package.Package] ->
                 case Main.$wa w of ww { (##) ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
ec010403f0d32943fe290bea8668e154
  $sencode3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0) -}
aab600f360a3e22c9af4b39901f599d3
  $sencode4 ::
    GHC.Types.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
00c2f55dcd2321a4a6e985fd26e97135
  $wa :: [Package.Package] -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Package.Package] ->
                 case GHC.ST.runSTRep
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case Main.$sencode4
                                @ s
                                GHC.Types.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                    @ Data.Aeson.Types.Internal.Value
                                    0
                                    0
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                     (GHC.ST.ST
                                                                                        s)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 Main.$sencode3)
                                (GHC.Base.map
                                   @ Package.Package
                                   @ Data.Aeson.Types.Internal.Value
                                   Package.$fToJSONPackage_$ctoJSON
                                   w)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv6 ipv7 ->
                         case ipv7 of wild5 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv6
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                 (# dt #) }) -}
f2a458f73d73086789bef14da4c6d4b6
  $wa1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Integer.Type.Integer
    -> GHC.Base.Maybe GHC.Base.String
    -> [GHC.Base.String]
    -> GHC.Base.String
    -> GHC.Base.Maybe Data.Repo.Repo
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Package.Package #)
  {- Arity: 8,
     Strictness: <L,1*U><L,U><L,U><S,U><L,U><L,U><L,U><L,U>,
     Inline: [0],
     Unfolding: (\ w :: GHC.Base.String
                   w1 :: GHC.Base.String
                   ww :: GHC.Integer.Type.Integer
                   ww1 :: GHC.Base.Maybe GHC.Base.String
                   ww2 :: [GHC.Base.String]
                   ww3 :: GHC.Base.String
                   ww4 :: GHC.Base.Maybe Data.Repo.Repo
                   w2 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case ww1 of wild {
                   GHC.Base.Nothing
                   -> (# w2,
                         Package.Package (GHC.Base.Nothing @ GHC.Base.String) ww2 ww3 ww4 #)
                   GHC.Base.Just g
                   -> case GHC.Integer.Type.eqInteger#
                             (GHC.Integer.Type.modInteger ww Main.addRepo9)
                             Main.addRepo8 of wild1 { DEFAULT ->
                      let {
                        $w$j :: GHC.Prim.State# GHC.Prim.RealWorld
                                -> (# GHC.Prim.State# GHC.Prim.RealWorld, Package.Package #)
                          {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                        = \ w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 (case GHC.Show.$w$cshowsPrec1
                                         0
                                         ww
                                         (GHC.Types.[] @ GHC.Types.Char) of ww5 { (#,#) ww6 ww7 ->
                                  GHC.Base.++
                                    @ GHC.Types.Char
                                    (GHC.Types.: @ GHC.Types.Char ww6 ww7)
                                    (GHC.CString.unpackAppendCString#
                                       ": "#
                                       (GHC.Base.++
                                          @ GHC.Types.Char
                                          GHC.Show.$fShowMaybe1
                                          (GHC.Types.:
                                             @ GHC.Types.Char
                                             GHC.Show.shows6
                                             (GHC.Show.showLitString g Main.addRepo7)))) })
                                 GHC.Types.True
                                 w3 of ds1 { (#,#) ipv ipv1 ->
                          case Process.curl1 w w1 g ipv of ds2 { (#,#) ipv2 ipv3 ->
                          case GHC.IO.Handle.Text.hPutStr2
                                 GHC.IO.Handle.FD.stdout
                                 (case ipv3 of wild2 {
                                    GHC.Base.Nothing -> GHC.Show.$fShowMaybe3
                                    GHC.Base.Just b1
                                    -> GHC.Base.++
                                         @ GHC.Types.Char
                                         GHC.Show.$fShowMaybe1
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString b1 Main.addRepo7)) })
                                 GHC.Types.True
                                 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                          (# ipv4,
                             Package.Package
                               wild
                               ww2
                               ww3
                               (case ipv3 of wild2 {
                                  GHC.Base.Nothing -> GHC.Base.Nothing @ Data.Repo.Repo
                                  GHC.Base.Just x
                                  -> case Main.addRepo2 x of wild3 {
                                       Data.Either.Left ds -> GHC.Base.Nothing @ Data.Repo.Repo
                                       Data.Either.Right ipv6
                                       -> GHC.Base.Just @ Data.Repo.Repo ipv6 } }) #) } } }
                      } in
                      case GHC.Prim.tagToEnum# @ GHC.Types.Bool wild1 of wild2 {
                        GHC.Types.False -> $w$j w2
                        GHC.Types.True
                        -> case GHC.IO.Handle.Internals.wantReadableHandle_1
                                  @ GHC.Base.String
                                  GHC.IO.Handle.Text.hGetLine4
                                  GHC.IO.Handle.FD.stdin
                                  GHC.IO.Handle.Text.hGetLine2
                                    `cast`
                                  (<GHC.IO.Handle.Types.Handle__>_R
                                   ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Base.String>_R))
                                  w2 of ds1 { (#,#) ipv ipv1 ->
                           $w$j ipv } } } }) -}
61e08ea98f8c06b292ab33dd330b5a88
  addRepo ::
    GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Integer.Type.Integer, Package.Package)
    -> GHC.Types.IO Package.Package
  {- Arity: 4,
     Strictness: <L,1*U><L,U><S(LS(SLLL)),1*U(U,1*U(U,U,U,U))><L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.addRepo1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <(GHC.Integer.Type.Integer, Package.Package)>_R
                 ->_R Sym (GHC.Types.NTCo:IO[0] <Package.Package>_R)) -}
80b00c6fff2b3b31ddf1647f4865701e
  addRepo1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> (GHC.Integer.Type.Integer, Package.Package)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Package.Package #)
  {- Arity: 4,
     Strictness: <L,1*U><L,U><S(LS(SLLL)),1*U(U,1*U(U,U,U,U))><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ w :: GHC.Base.String
                   w1 :: GHC.Base.String
                   w2 :: (GHC.Integer.Type.Integer, Package.Package)
                   w3 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case w2 of ww { (,) ww1 ww2 ->
                 case ww2 of ww3 { Package.Package ww4 ww5 ww6 ww7 ->
                 Main.$wa1 w w1 ww1 ww4 ww5 ww6 ww7 w3 } }) -}
288eb8e8257f87aafd7652786c0b5371
  addRepo2 ::
    GHC.Base.String
    -> Data.Either.Either GHC.Base.String Data.Repo.Repo
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ x :: GHC.Base.String ->
                 case Parse.$wa7
                        @ Data.Repo.Repo
                        (case GHC.ST.runSTRep
                                @ Data.Text.Internal.Text
                                (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                                 Main.addRepo6
                                   @ s1
                                   (Data.Text.Array.MArray @ s1 ipv1)
                                   Main.addRepo5
                                   x
                                   0
                                   ipv }) of wild { Data.Text.Internal.Text dt dt1 dt2 ->
                         (Data.Attoparsec.Text.Buffer.Buf dt dt1 dt2 dt2 0)
                           `cast`
                         (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))) })
                        0
                        Data.Attoparsec.Internal.Types.Complete
                        (Data.Attoparsec.Text.Internal.failK @ Data.Repo.Repo)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> [GHC.Base.String]
                               -> GHC.Base.String
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text Data.Repo.Repo>_R)
                        (Data.Attoparsec.Text.Internal.successK @ Data.Repo.Repo)
                          `cast`
                        (Sub (Sym (Data.Attoparsec.Internal.Types.TFCo:R:StateText[0]))
                         ->_R <Data.Attoparsec.Internal.Types.Pos
                               -> Data.Attoparsec.Internal.Types.More
                               -> Data.Repo.Repo
                               -> Data.Attoparsec.Internal.Types.IResult
                                    Data.Text.Internal.Text Data.Repo.Repo>_R) of wild {
                   Data.Attoparsec.Internal.Types.Fail ds ds1 err
                   -> case ds1 of wild1 {
                        [] -> Data.Either.Left @ GHC.Base.String @ Data.Repo.Repo err
                        : ipv ipv1
                        -> Data.Either.Left
                             @ GHC.Base.String
                             @ Data.Repo.Repo
                             (GHC.Base.++
                                @ GHC.Types.Char
                                (Data.OldList.intercalate_$spoly_go
                                   @ GHC.Types.Char
                                   ipv
                                   (Data.OldList.prependToAll
                                      @ [GHC.Types.Char]
                                      Main.addRepo4
                                      ipv1))
                                (GHC.CString.unpackAppendCString# ": "# err)) }
                   Data.Attoparsec.Internal.Types.Partial ipv -> Main.addRepo3
                   Data.Attoparsec.Internal.Types.Done ds a23
                   -> Data.Either.Right @ GHC.Base.String @ Data.Repo.Repo a23 }) -}
383e6d09f24cf0d48c6e664924cdaaea
  addRepo3 :: Data.Either.Either GHC.Base.String Data.Repo.Repo
  {- Strictness: b -}
2b22a2a4937377b3226727a88b469694
  addRepo4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# " > "#) -}
5284d9cb863c4c7cf39a5404fdd96cd8
  addRepo5 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
be7d87050bd870535a13c903f3b06e7a
  addRepo6 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
40d7f76cf495051956e2a98914efa161
  addRepo7 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
7d1c2b3924c1cdc33c9809bf18d6f017
  addRepo8 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 0) -}
8158d20232758eaafaf747e7b3f2b626
  addRepo9 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1000) -}
1bcf95e7a4ad6a4d2289fa0958159668
  fromBool :: GHC.Num.Num a => GHC.Types.Bool -> a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <S(LLLLLLC(S)),1*U(A,A,A,A,A,A,1*C1(U))><S,1*U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a1 $dNum :: GHC.Num.Num a1 ds :: GHC.Types.Bool ->
                 case ds of wild {
                   GHC.Types.False -> GHC.Num.fromInteger @ a1 $dNum Main.addRepo8
                   GHC.Types.True
                   -> GHC.Num.fromInteger @ a1 $dNum Main.fromBool1 }) -}
d38598fbafbb44732db51f1192887ff0
  fromBool1 :: GHC.Integer.Type.Integer
  {- HasNoCafRefs, Unfolding: (__integer 1) -}
ee6590a2ab0ffaa5074d93f2d3fc4c03
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
e3bd864fe81295cabb6b36ca45539f6f
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U> -}
20688fff09df92565d9be8c5f0313411
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
d6b0eb4a6de580bda00a7992bf4935f2
  maybeParse :: GHC.Base.String -> GHC.Base.Maybe Data.Repo.Repo
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: InlineRule (1, True, False)
                (\ s :: GHC.Base.String ->
                 case Main.addRepo2 s of wild {
                   Data.Either.Left ds -> GHC.Base.Nothing @ Data.Repo.Repo
                   Data.Either.Right ipv -> GHC.Base.Just @ Data.Repo.Repo ipv }) -}
f680d27852d602ab44bfef84ef851423
  numberWithGithub :: [Package.Package] -> GHC.Integer.Type.Integer
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ x :: [Package.Package] ->
                 Main.numberWithGithub_go x Main.addRepo8) -}
d7dd3dee379b61ebaa59cfd83c4b27da
  numberWithGithub_go ::
    [Package.Package]
    -> GHC.Integer.Type.Integer -> GHC.Integer.Type.Integer
  {- Arity: 2, Strictness: <S,1*U><S,1*U> -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

