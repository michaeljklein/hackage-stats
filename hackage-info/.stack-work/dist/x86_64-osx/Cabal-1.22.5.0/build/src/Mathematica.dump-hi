
==================== FINAL INTERFACE ====================
2016-06-06 22:29:13.831107 UTC

interface hacka_8AzqFXcXsXI1zCeqNUsPcm:Mathematica 7103
  interface hash: a85d19246654e5b5615f58e105f058d4
  ABI hash: d684edad2cef62777821267010663b79
  export-list hash: 1c901fae2793588e5e5ead6f1d2c07c4
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: baee81d3951e853149cec6bd5cf452ef
  sig of: Nothing
  used TH splices: False
  where
exports:
  Mathematica.packageToArcs
  Mathematica.toCSV
  Mathematica.toMathematicaArcs
  Mathematica.toMathematicaGraph
  Mathematica.toMathematicaList
module dependencies: Data.Repo Package
package dependencies: StateVar-1.1.0.4@State_IOvB80WkYNkEizdt0JVpzy
                      adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh
                      aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv
                      array-0.5.1.0@array_67iodizgJQIIxYVTp4emlA
                      attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3 base-4.8.2.0
                      base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx
                      bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2
                      binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi
                      bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6
                      comonad-4.2.7.2@comon_ANDyj4wNB0X1DshTxn1Ec7
                      containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU
                      contravariant-1.4@contr_GjopTtscFPI3wCyb9R8zUx
                      deepseq-1.4.1.1@deeps_6vMKxt5sPFR0XsbRWvvq59
                      distributive-0.5.0.2@distr_55SIdsoyihS4jXBaaVvPQX
                      dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui
                      exceptions-0.8.2.1@excep_6lgwjdgwblY7rzh5s6SLd8
                      free-4.12.4@free_6zsT0eU8oWW5hSQkbU0iac ghc-prim-0.4.0.0
                      hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I integer-gmp-1.0.0.0
                      kan-extensions-4.2.3@kanex_93YChxpKCPfJOIja4yoAht
                      lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH
                      mtl-2.2.1@mtl_Aue4leSeVkpKLsfHIV51E8
                      prelude-extras-0.4.0.3@prelu_1gQpKVfMHul71LsAFgGRhv
                      pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC
                      primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3
                      profunctors-5.2@profu_3mp9Et5di2eBw26qSk1FvQ
                      reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9
                      scientific-0.3.4.6@scien_5s26qRhE5w04kI4pP1Rtwm
                      semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0
                      semigroupoids-5.0.1@semig_GGZAZT6nvE937zJVPqetuF
                      stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD
                      tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6 template-haskell-2.10.0.0
                      text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne
                      time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn
                      transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF
                      unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j
                      vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln
orphans: aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Generic
         aeson-0.9.0.1@aeson_DFvprtDBUdB2suCwa7lgtv:Data.Aeson.Types.Instances
         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.ByteString.Char8
         base-4.8.2.0:GHC.Base base-4.8.2.0:GHC.Float
         base-orphans-0.5.4@baseo_0gFtKFBT26OGSKHmmdqdfx:Data.Orphans
         binary-0.7.5.0@binar_3uXFWMoAGBg0xKP9MHKRwi:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6VWy06pWzJq9evDvK2d4w6:Data.ByteString.Builder
         hashable-1.2.4.0@hasha_EalUWgp8NarBYWPbvYAD8I:Data.Hashable.Generic
         reflection-2.1.2@refle_Is9SiIf9zRHG2wDNDxPaS9:Data.Reflection
         stm-2.4.4.1@stm_EyxFXFfnfY05IrjGaqCxeD:Control.Monad.STM
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Show
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.Format.Parse
         time-1.5.0.1@time_FTheb6LSxyX1UABIbBXRfn:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_GZTjP9K5WFq01xC9BAGQpF:Control.Monad.Trans.Error
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Fusion.Bundle
         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
family instance modules: adjunctions-4.3@adjun_9cH29t7MfJW4aX0z24PvBh:Data.Functor.Rep
                         attoparsec-0.13.0.2@attop_41FU8li3hiTHrQHazQNzh3:Data.Attoparsec.Internal.Types
                         base-4.8.2.0:Control.Applicative base-4.8.2.0:Data.Either
                         base-4.8.2.0:Data.Functor.Identity base-4.8.2.0:Data.Monoid
                         base-4.8.2.0:Data.Type.Equality base-4.8.2.0:Data.Void
                         base-4.8.2.0:GHC.Exts base-4.8.2.0:GHC.Generics
                         base-4.8.2.0:GHC.TypeLits
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Biff
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Clown
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Flip
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Join
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Joker
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Product
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Sum
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Tannen
                         bifunctors-5.2@bifun_AiMzIElJnc7BX2vj1Bxgh2:Data.Bifunctor.Wrapped
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntMap.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.IntSet.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Map.Base
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Sequence
                         containers-0.5.6.2@conta_2C3ZI8RgPO2LBMidXKTvIU:Data.Set.Base
                         dlist-0.7.1.2@dlist_AO7XAasbAeyL0XLKeq1Aui:Data.DList
                         hacka_8AzqFXcXsXI1zCeqNUsPcm:Data.Repo
                         hacka_8AzqFXcXsXI1zCeqNUsPcm:Package
                         kan-extensions-4.2.3@kanex_93YChxpKCPfJOIja4yoAht:Data.Functor.Yoneda
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.At
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Internal.Indexed
                         lens-4.13@lens_Ci1bEHnvDxuGKIIh54LOWH:Control.Lens.Tuple
                         pretty-1.1.2.0@prett_JItwetRppk1H5Uq3xbjDGC:Text.PrettyPrint.HughesPJ
                         primitive-0.6.1.0@primi_EphY2c7CCxSCBKjAN0YTR3:Control.Monad.Primitive
                         profunctors-5.2@profu_3mp9Et5di2eBw26qSk1FvQ:Data.Profunctor.Rep
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.List.NonEmpty
                         semigroups-0.18.1@semig_G8J7ers5FBV50jV0jAmDo0:Data.Semigroup
                         tagged-0.8.4@tagge_LPeicl3HxVfGUMMwMEsAE6:Data.Tagged
                         template-haskell-2.10.0.0:Language.Haskell.TH.Syntax
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text
                         text-1.2.2.1@text_HmqVQnZSpjaC156ABqPhne:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_Kh4ayEkEku2Hr3yyCwld2j:Data.HashSet
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Primitive
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Storable
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed
                         vector-0.11.0.0@vecto_LmZ3LQW4ivu8MsQuVgukln:Data.Vector.Unboxed.Base
import  -/  base-4.8.2.0:Data.Foldable 2ce969969ad5231eb40bd713f94f05ad
import  -/  base-4.8.2.0:Data.OldList d8fd80b0e14aa085ce6219cd89dad356
import  -/  base-4.8.2.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.2.0:GHC.List 0c736920522bbd14b770342776012ab6
import  -/  base-4.8.2.0:GHC.Show 0e1d8380a8fb0cfb07ebeda3b70cbf38
import  -/  base-4.8.2.0:Prelude 694dcaf039efe62df1c44834e2dbd2fb
import  -/  Package 0e0bbc4265da232cf4cc3f17ec84b8dd
  exports: 1f621f444eb21da6858ea5feceb2328b
  Package 2bfe18792d75d35272aa3fe549899ee8
  _dependencies 0f5a8a144371cbdf0c54be779589dc38
  _name a9ae1ef6fca7b34140ca2849822e2d1d
f9958b8a7251979e34ffa3ce0ebcd2ea
  $wtoMathematicaArcs ::
    [GHC.Base.String] -> GHC.Base.String -> [[GHC.Types.Char]]
  {- Arity: 2, Strictness: <S,1*U><L,U>, Inline: [0],
     Unfolding: (\ ww :: [GHC.Base.String] ww1 :: GHC.Base.String ->
                 GHC.Base.map
                   @ [GHC.Types.Char]
                   @ [GHC.Types.Char]
                   (\ x :: [GHC.Types.Char] ->
                    GHC.CString.unpackAppendCString#
                      "DirectedEdge["#
                      (GHC.Base.++
                         @ GHC.Types.Char
                         (GHC.Types.:
                            @ GHC.Types.Char
                            GHC.Show.shows6
                            (GHC.Show.showLitString ww1 Mathematica.toMathematicaArcs2))
                         (GHC.CString.unpackAppendCString#
                            ", "#
                            (GHC.Base.++
                               @ GHC.Types.Char
                               (GHC.Types.:
                                  @ GHC.Types.Char
                                  GHC.Show.shows6
                                  (GHC.Show.showLitString x Mathematica.toMathematicaArcs2))
                               Mathematica.toMathematicaArcs1))))
                   ww) -}
636e123a733868c397c9d86e38495138
  packageToArcs ::
    Package.Package -> [(GHC.Base.String, GHC.Base.String)]
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ p :: Package.Package ->
                 case p of wild { Package.Package ds1 ds2 ds3 ds4 ->
                 GHC.Base.build
                   @ (GHC.Base.String, GHC.Base.String)
                   (\ @ b1
                      c :: (GHC.Base.String, GHC.Base.String) -> b1 -> b1[OneShot]
                      n :: b1[OneShot] ->
                    GHC.Base.foldr
                      @ [GHC.Types.Char]
                      @ b1
                      (GHC.Base.mapFB
                         @ (GHC.Base.String, GHC.Base.String)
                         @ b1
                         @ [GHC.Types.Char]
                         c
                         (\ ds :: GHC.Base.String -> (ds3, ds)))
                      n
                      ds2) }) -}
e8d9ea6022e5ef724f25ba9101301a20
  toCSV :: [Package.Package] -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U>,
     Unfolding: (\ x :: [Package.Package] ->
                 Data.OldList.unlines (Mathematica.toCSV_go x)) -}
fba499c3be1304c86c87aa728a7164ee
  toCSV_go :: [Package.Package] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U> -}
e7aeb5945b44b913d8794e50600f632f
  toMathematicaArcs :: Package.Package -> [GHC.Base.String]
  {- Arity: 1, Strictness: <S(LSLL),1*U(A,1*U,U,A)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Package.Package ->
                 case w of ww { Package.Package ww1 ww2 ww3 ww4 ->
                 Mathematica.$wtoMathematicaArcs ww2 ww3 }) -}
8a53ebc2d680d1f18b46bcdfefd44979
  toMathematicaArcs1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "]"#) -}
4c0694a6b404976fed2c3839f1c8c37b
  toMathematicaArcs2 :: [GHC.Types.Char]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ GHC.Types.Char
                   GHC.Show.shows6
                   (GHC.Types.[] @ GHC.Types.Char)) -}
5503d19a18cabf7e56526b7c1e7b6c9e
  toMathematicaGraph :: [Package.Package] -> GHC.Base.String
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ x :: [Package.Package] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   Mathematica.toMathematicaGraph2
                   (GHC.Base.++
                      @ GHC.Types.Char
                      (Mathematica.toMathematicaGraph_$stoMathematicaList
                         (Mathematica.toMathematicaGraph_go x))
                      Mathematica.toMathematicaArcs1)) -}
cb1b2cf5ea1ed9033a47a949393106e6
  toMathematicaGraph1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
1b96ad8d63546f4eedc9cf2734d0a8cc
  toMathematicaGraph2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Graph["#) -}
63d6ad1668f45a8d94396a9b46491560
  toMathematicaGraph_$stoMathematicaList ::
    [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ xs :: [[GHC.Types.Char]] ->
                 case GHC.CString.unpackAppendCString#
                        "{"#
                        (Mathematica.toMathematicaGraph_go1 xs) of wild {
                   [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                   : x xs1
                   -> case GHC.List.init1 @ GHC.Types.Char x xs1 of wild1 {
                        [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                        : x1 xs2
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             (GHC.List.init1 @ GHC.Types.Char x1 xs2)
                             Mathematica.toMathematicaGraph1 } }) -}
1187be34aee1cac990dd6f94340c79e2
  toMathematicaGraph_go :: [Package.Package] -> [[GHC.Types.Char]]
  {- Arity: 1, Strictness: <S,1*U> -}
a8ea0533b693124bce34f48e3b63fc5b
  toMathematicaGraph_go1 :: [[GHC.Types.Char]] -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <S,1*U> -}
84704c40b795bb0580e5c41ed0b5c7f0
  toMathematicaList ::
    Data.Foldable.Foldable t => t [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2,
     Strictness: <L,1*U(A,A,1*C1(C1(C1(U))),A,A,A,A,A,A,A,A,A,A,A,A,A)><L,U>,
     Unfolding: (\ @ (t :: * -> *)
                   $dFoldable :: Data.Foldable.Foldable t
                   xs :: t [GHC.Types.Char] ->
                 case GHC.CString.unpackAppendCString#
                        "{"#
                        (Data.Foldable.foldr
                           @ t
                           $dFoldable
                           @ [GHC.Types.Char]
                           @ [GHC.Types.Char]
                           Mathematica.toMathematicaList1
                           (GHC.Types.[] @ GHC.Types.Char)
                           xs) of wild {
                   [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                   : x xs1
                   -> case GHC.List.init1 @ GHC.Types.Char x xs1 of wild1 {
                        [] -> case GHC.List.init2 ret_ty [GHC.Types.Char] of {}
                        : x1 xs2
                        -> GHC.Base.++
                             @ GHC.Types.Char
                             (GHC.List.init1 @ GHC.Types.Char x1 xs2)
                             Mathematica.toMathematicaGraph1 } }) -}
523dc78ef17de9afe05e2b00ed8acb84
  toMathematicaList1 ::
    [GHC.Types.Char] -> [GHC.Types.Char] -> [GHC.Types.Char]
  {- Arity: 2,
     Unfolding: (\ x :: [GHC.Types.Char] b2 :: [GHC.Types.Char] ->
                 GHC.Base.++
                   @ GHC.Types.Char
                   x
                   (GHC.Base.++
                      @ GHC.Types.Char
                      Mathematica.toMathematicaList2
                      b2)) -}
fc2e1512f86aca90cc2c0731d818b71b
  toMathematicaList2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
"SPEC toMathematicaList @ []" [ALWAYS] forall $dFoldable :: Data.Foldable.Foldable
                                                              []
  Mathematica.toMathematicaList @ [] $dFoldable
  = Mathematica.toMathematicaGraph_$stoMathematicaList
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

