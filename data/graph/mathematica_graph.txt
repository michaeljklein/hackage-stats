Graph[{DirectedEdge["3d-graphics-examples", "base"], DirectedEdge["3d-graphics-examples", "GLUT"], DirectedEdge["3d-graphics-examples", "OpenGL"], DirectedEdge["3d-graphics-examples", "random"], DirectedEdge["3dmodels", "attoparsec"], DirectedEdge["3dmodels", "base"], DirectedEdge["3dmodels", "bytestring"], DirectedEdge["3dmodels", "linear"], DirectedEdge["3dmodels", "packer"], DirectedEdge["4Blocks", "base"], DirectedEdge["4Blocks", "cairo"], DirectedEdge["4Blocks", "containers"], DirectedEdge["4Blocks", "gtk"], DirectedEdge["4Blocks", "mtl"], DirectedEdge["AAI", "base"], DirectedEdge["ABList", "base"], DirectedEdge["ABList", "linear"], DirectedEdge["ABList", "newtype"], DirectedEdge["AC-Angle", "base"], DirectedEdge["AC-Boolean", "base"], DirectedEdge["AC-BuildPlatform", "base"], DirectedEdge["AC-Colour", "base"], DirectedEdge["AC-EasyRaster-GTK", "array"], DirectedEdge["AC-EasyRaster-GTK", "base"], DirectedEdge["AC-EasyRaster-GTK", "gtk"], DirectedEdge["AC-HalfInteger", "base"], DirectedEdge["AC-MiniTest", "base"], DirectedEdge["AC-MiniTest", "transformers"], DirectedEdge["AC-PPM", "base"], DirectedEdge["AC-PPM", "bytestring"], DirectedEdge["AC-Random", "base"], DirectedEdge["AC-Terminal", "ansi-terminal"], DirectedEdge["AC-Terminal", "base"], DirectedEdge["AC-VanillaArray", "base"], DirectedEdge["AC-VanillaArray", "ghc-prim"], DirectedEdge["AC-Vector", "base"], DirectedEdge["AC-Vector-Fancy", "AC-Angle"], DirectedEdge["AC-Vector-Fancy", "AC-Vector"], DirectedEdge["AC-Vector-Fancy", "base"], DirectedEdge["ACME", "base"], DirectedEdge["ACME", "list-extras"], DirectedEdge["ACME", "mtl"], DirectedEdge["ACME", "random"], DirectedEdge["ACME", "random-shuffle"], DirectedEdge["ACME", "void"], DirectedEdge["ADPfusion", "base"], DirectedEdge["ADPfusion", "bits"], DirectedEdge["ADPfusion", "containers"], DirectedEdge["ADPfusion", "mmorph"], DirectedEdge["ADPfusion", "mtl"], DirectedEdge["ADPfusion", "OrderedBits"], DirectedEdge["ADPfusion", "primitive"], DirectedEdge["ADPfusion", "PrimitiveArray"], DirectedEdge["ADPfusion", "QuickCheck"], DirectedEdge["ADPfusion", "strict"], DirectedEdge["ADPfusion", "template-haskell"], DirectedEdge["ADPfusion", "th-orphans"], DirectedEdge["ADPfusion", "transformers"], DirectedEdge["ADPfusion", "tuple"], DirectedEdge["ADPfusion", "vector"], DirectedEdge["AERN-Basics", "base"], DirectedEdge["AERN-Basics", "containers"], DirectedEdge["AERN-Basics", "criterion"], DirectedEdge["AERN-Basics", "deepseq"], DirectedEdge["AERN-Basics", "directory"], DirectedEdge["AERN-Basics", "QuickCheck"], DirectedEdge["AERN-Basics", "random"], DirectedEdge["AERN-Basics", "test-framework"], DirectedEdge["AERN-Net", "AERN-Real"], DirectedEdge["AERN-Net", "AERN-RnToRm"], DirectedEdge["AERN-Net", "base"], DirectedEdge["AERN-Net", "binary"], DirectedEdge["AERN-Net", "containers"], DirectedEdge["AERN-Net", "html"], DirectedEdge["AERN-Net", "stm"], DirectedEdge["AERN-Net", "time"], DirectedEdge["AERN-Real", "AERN-Basics"], DirectedEdge["AERN-Real", "base"], DirectedEdge["AERN-Real", "criterion"], DirectedEdge["AERN-Real", "QuickCheck"], DirectedEdge["AERN-Real", "test-framework"], DirectedEdge["AERN-Real-Double", "AERN-Basics"], DirectedEdge["AERN-Real-Double", "AERN-Real"], DirectedEdge["AERN-Real-Double", "AERN-Real-Interval"], DirectedEdge["AERN-Real-Double", "base"], DirectedEdge["AERN-Real-Double", "criterion"], DirectedEdge["AERN-Real-Double", "ieee-utils"], DirectedEdge["AERN-Real-Double", "QuickCheck"], DirectedEdge["AERN-Real-Double", "test-framework"], DirectedEdge["AERN-Real-Interval", "AERN-Basics"], DirectedEdge["AERN-Real-Interval", "AERN-Real"], DirectedEdge["AERN-Real-Interval", "base"], DirectedEdge["AERN-Real-Interval", "deepseq"], DirectedEdge["AERN-Real-Interval", "QuickCheck"], DirectedEdge["AERN-Real-Interval", "test-framework"], DirectedEdge["AERN-RnToRm", "AERN-Real"], DirectedEdge["AERN-RnToRm", "base"], DirectedEdge["AERN-RnToRm", "binary"], DirectedEdge["AERN-RnToRm", "containers"], DirectedEdge["AERN-RnToRm", "directory"], DirectedEdge["AERN-RnToRm", "filepath"], DirectedEdge["AERN-RnToRm", "html"], DirectedEdge["AERN-RnToRm", "QuickCheck"], DirectedEdge["AERN-RnToRm", "time"], DirectedEdge["AERN-RnToRm-Plot", "AERN-Real"], DirectedEdge["AERN-RnToRm-Plot", "AERN-RnToRm"], DirectedEdge["AERN-RnToRm-Plot", "base"], DirectedEdge["AERN-RnToRm-Plot", "binary"], DirectedEdge["AERN-RnToRm-Plot", "containers"], DirectedEdge["AERN-RnToRm-Plot", "directory"], DirectedEdge["AERN-RnToRm-Plot", "filepath"], DirectedEdge["AERN-RnToRm-Plot", "glade"], DirectedEdge["AERN-RnToRm-Plot", "glib"], DirectedEdge["AERN-RnToRm-Plot", "gtk"], DirectedEdge["AERN-RnToRm-Plot", "gtkglext"], DirectedEdge["AERN-RnToRm-Plot", "mtl"], DirectedEdge["AERN-RnToRm-Plot", "OpenGL"], DirectedEdge["AERN-RnToRm-Plot", "stm"], DirectedEdge["AERN-RnToRm-Plot", "time"], DirectedEdge["AES", "base"], DirectedEdge["AES", "bytestring"], DirectedEdge["AES", "cereal"], DirectedEdge["AES", "monads-tf"], DirectedEdge["AES", "random"], DirectedEdge["AES", "transformers"], DirectedEdge["AFSM", "base"], DirectedEdge["AGI", "base"], DirectedEdge["AGI", "mtl"], DirectedEdge["AGI", "network"], DirectedEdge["AGI", "parsec"], DirectedEdge["AGI", "random"], DirectedEdge["AGI", "syb"], DirectedEdge["AGI", "unix"], DirectedEdge["ALUT", "ALUT"], DirectedEdge["ALUT", "base"], DirectedEdge["ALUT", "OpenAL"], DirectedEdge["ALUT", "pretty"], DirectedEdge["ALUT", "StateVar"], DirectedEdge["ALUT", "transformers"], DirectedEdge["AMI", "base"], DirectedEdge["AMI", "bytestring"], DirectedEdge["AMI", "containers"], DirectedEdge["AMI", "mtl"], DirectedEdge["AMI", "network"], DirectedEdge["AMI", "stm"], DirectedEdge["ANum", "base"], DirectedEdge["ASN1", "base"], DirectedEdge["ASN1", "containers"], DirectedEdge["ASN1", "HUnit"], DirectedEdge["ASN1", "mtl"], DirectedEdge["ASN1", "NewBinary"], DirectedEdge["ASN1", "old-time"], DirectedEdge["ASN1", "pretty"], DirectedEdge["ASN1", "QuickCheck"], DirectedEdge["AVar", "base"], DirectedEdge["AWin32Console", "base"], DirectedEdge["AWin32Console", "regex-compat"], DirectedEdge["AbortT-monadstf", "AbortT-transformers"], DirectedEdge["AbortT-monadstf", "base"], DirectedEdge["AbortT-monadstf", "monads-tf"], DirectedEdge["AbortT-mtl", "AbortT-transformers"], DirectedEdge["AbortT-mtl", "base"], DirectedEdge["AbortT-mtl", "mtl"], DirectedEdge["AbortT-transformers", "base"], DirectedEdge["AbortT-transformers", "transformers"], DirectedEdge["ActionKid", "base"], DirectedEdge["ActionKid", "containers"], DirectedEdge["ActionKid", "gloss"], DirectedEdge["ActionKid", "gloss-juicy"], DirectedEdge["ActionKid", "lens"], DirectedEdge["ActionKid", "mtl"], DirectedEdge["ActionKid", "OpenGL"], DirectedEdge["ActionKid", "StateVar"], DirectedEdge["ActionKid", "template-haskell"], DirectedEdge["Adaptive", "base"], DirectedEdge["Adaptive-Blaisorblade", "base"], DirectedEdge["Advgame", "base"], DirectedEdge["Advgame", "mtl"], DirectedEdge["AesonBson", "aeson"], DirectedEdge["AesonBson", "attoparsec"], DirectedEdge["AesonBson", "base"], DirectedEdge["AesonBson", "bson"], DirectedEdge["AesonBson", "unordered-containers"], DirectedEdge["AesonBson", "vector"], DirectedEdge["Agata", "testing-feat"], DirectedEdge["Agata", "base"], DirectedEdge["Agata", "containers"], DirectedEdge["Agata", "mtl"], DirectedEdge["Agata", "QuickCheck"], DirectedEdge["Agata", "tagged"], DirectedEdge["Agata", "template-haskell"], DirectedEdge["Agda", "Agda"], DirectedEdge["Agda", "array"], DirectedEdge["Agda", "base"], DirectedEdge["Agda", "base-orphans"], DirectedEdge["Agda", "binary"], DirectedEdge["Agda", "boxes"], DirectedEdge["Agda", "bytestring"], DirectedEdge["Agda", "containers"], DirectedEdge["Agda", "data-hash"], DirectedEdge["Agda", "deepseq"], DirectedEdge["Agda", "directory"], DirectedEdge["Agda", "EdisonAPI"], DirectedEdge["Agda", "EdisonCore"], DirectedEdge["Agda", "edit-distance"], DirectedEdge["Agda", "equivalence"], DirectedEdge["Agda", "filemanip"], DirectedEdge["Agda", "filepath"], DirectedEdge["Agda", "geniplate-mirror"], DirectedEdge["Agda", "hashable"], DirectedEdge["Agda", "hashtables"], DirectedEdge["Agda", "haskeline"], DirectedEdge["Agda", "haskell-src-exts"], DirectedEdge["Agda", "monadplus"], DirectedEdge["Agda", "mtl"], DirectedEdge["Agda", "parallel"], DirectedEdge["Agda", "pretty"], DirectedEdge["Agda", "process"], DirectedEdge["Agda", "QuickCheck"], DirectedEdge["Agda", "strict"], DirectedEdge["Agda", "template-haskell"], DirectedEdge["Agda", "text"], DirectedEdge["Agda", "time"], DirectedEdge["Agda", "transformers"], DirectedEdge["Agda", "transformers-compat"], DirectedEdge["Agda", "unordered-containers"], DirectedEdge["Agda", "void"], DirectedEdge["Agda", "xhtml"], DirectedEdge["Agda", "zlib"], DirectedEdge["Agda-executable", "Agda"], DirectedEdge["Agda-executable", "Agda"], DirectedEdge["Agda-executable", "base"], DirectedEdge["AhoCorasick", "array"], DirectedEdge["AhoCorasick", "base"], DirectedEdge["AhoCorasick", "hashable"], DirectedEdge["AhoCorasick", "mtl"], DirectedEdge["AhoCorasick", "unordered-containers"], DirectedEdge["AlgorithmW", "base"], DirectedEdge["AlgorithmW", "containers"], DirectedEdge["AlgorithmW", "mtl"], DirectedEdge["AlgorithmW", "pretty"], DirectedEdge["AlignmentAlgorithms", "ADPfusion"], DirectedEdge["AlignmentAlgorithms", "base"], DirectedEdge["AlignmentAlgorithms", "containers"], DirectedEdge["AlignmentAlgorithms", "fmlist"], DirectedEdge["AlignmentAlgorithms", "FormalGrammars"], DirectedEdge["AlignmentAlgorithms", "GrammarProducts"], DirectedEdge["AlignmentAlgorithms", "PrimitiveArray"], DirectedEdge["AlignmentAlgorithms", "vector"], DirectedEdge["Allure", "base"], DirectedEdge["Allure", "containers"], DirectedEdge["Allure", "enummapset-th"], DirectedEdge["Allure", "filepath"], DirectedEdge["Allure", "LambdaHack"], DirectedEdge["Allure", "template-haskell"], DirectedEdge["Allure", "text"], DirectedEdge["AndroidViewHierarchyImporter", "base"], DirectedEdge["AndroidViewHierarchyImporter", "bytestring"], DirectedEdge["AndroidViewHierarchyImporter", "cmdtheline"], DirectedEdge["AndroidViewHierarchyImporter", "containers"], DirectedEdge["AndroidViewHierarchyImporter", "mtl"], DirectedEdge["AndroidViewHierarchyImporter", "network"], DirectedEdge["AndroidViewHierarchyImporter", "opml"], DirectedEdge["AndroidViewHierarchyImporter", "pretty"], DirectedEdge["AndroidViewHierarchyImporter", "process"], DirectedEdge["AndroidViewHierarchyImporter", "QuickCheck"], DirectedEdge["AndroidViewHierarchyImporter", "split"], DirectedEdge["AndroidViewHierarchyImporter", "transformers"], DirectedEdge["AndroidViewHierarchyImporter", "xml"], DirectedEdge["Animas", "base"], DirectedEdge["Animas", "random"], DirectedEdge["Annotations", "base"], DirectedEdge["Annotations", "mtl"], DirectedEdge["Annotations", "multirec"], DirectedEdge["Annotations", "parsec"], DirectedEdge["Ansi2Html", "base"], DirectedEdge["Ansi2Html", "mtl"], DirectedEdge["Ansi2Html", "parsec"], DirectedEdge["Ansi2Html", "xhtml"], DirectedEdge["ApplePush", "base"], DirectedEdge["ApplePush", "binary"], DirectedEdge["ApplePush", "bytestring"], DirectedEdge["ApplePush", "json"], DirectedEdge["ApplePush", "mtl"], DirectedEdge["ApplePush", "network"], DirectedEdge["AppleScript", "base"], DirectedEdge["AppleScript", "bytestring"], DirectedEdge["AppleScript", "conduit"], DirectedEdge["AppleScript", "data-default"], DirectedEdge["AppleScript", "directory"], DirectedEdge["AppleScript", "haskell-src-meta"], DirectedEdge["AppleScript", "mtl"], DirectedEdge["AppleScript", "network"], DirectedEdge["AppleScript", "template-haskell"], DirectedEdge["AppleScript", "text"], DirectedEdge["AppleScript", "text-format"], DirectedEdge["ApproxFun-hs", "base"], DirectedEdge["ApproxFun-hs", "vector"], DirectedEdge["ArrayRef", "base"], DirectedEdge["ArrowVHDL", "base"], DirectedEdge["ArrowVHDL", "process"], DirectedEdge["AspectAG", "base"], DirectedEdge["AspectAG", "containers"], DirectedEdge["AspectAG", "HList"], DirectedEdge["AspectAG", "mtl"], DirectedEdge["AspectAG", "template-haskell"], DirectedEdge["AttoBencode", "attoparsec"], DirectedEdge["AttoBencode", "base"], DirectedEdge["AttoBencode", "blaze-builder"], DirectedEdge["AttoBencode", "blaze-textual"], DirectedEdge["AttoBencode", "bytestring"], DirectedEdge["AttoBencode", "containers"], DirectedEdge["AttoJson", "aeson"], DirectedEdge["AttoJson", "attoparsec"], DirectedEdge["AttoJson", "base"], DirectedEdge["AttoJson", "bytestring"], DirectedEdge["AttoJson", "bytestring-show"], DirectedEdge["AttoJson", "containers"], DirectedEdge["AttoJson", "mtl"], DirectedEdge["AttoJson", "utf8-string"], DirectedEdge["Attrac", "array"], DirectedEdge["Attrac", "base"], DirectedEdge["Attrac", "colour"], DirectedEdge["Attrac", "GLUT"], DirectedEdge["Attrac", "OpenGL"], DirectedEdge["Attrac", "random"], DirectedEdge["Aurochs", "base"], DirectedEdge["Aurochs", "containers"], DirectedEdge["Aurochs", "parsec"], DirectedEdge["Aurochs", "pretty"], DirectedEdge["AutoForms", "array"], DirectedEdge["AutoForms", "base"], DirectedEdge["AutoForms", "mtl"], DirectedEdge["AutoForms", "syb-with-class"], DirectedEdge["AutoForms", "template-haskell"], DirectedEdge["AutoForms", "wx"], DirectedEdge["AutoForms", "wxcore"], DirectedEdge["AvlTree", "base"], DirectedEdge["AvlTree", "COrdering"], DirectedEdge["BASIC", "base"], DirectedEdge["BASIC", "containers"], DirectedEdge["BASIC", "llvm"], DirectedEdge["BASIC", "random"], DirectedEdge["BASIC", "timeit"], DirectedEdge["BCMtools", "base"], DirectedEdge["BCMtools", "BCMtools"], DirectedEdge["BCMtools", "bytestring"], DirectedEdge["BCMtools", "bytestring-lexing"], DirectedEdge["BCMtools", "cereal"], DirectedEdge["BCMtools", "colour"], DirectedEdge["BCMtools", "conduit"], DirectedEdge["BCMtools", "conduit-extra"], DirectedEdge["BCMtools", "data-default-class"], DirectedEdge["BCMtools", "matrices"], DirectedEdge["BCMtools", "optparse-applicative"], DirectedEdge["BCMtools", "resourcet"], DirectedEdge["BCMtools", "split"], DirectedEdge["BCMtools", "transformers"], DirectedEdge["BCMtools", "unordered-containers"], DirectedEdge["BCMtools", "vector"], DirectedEdge["BCMtools", "zlib"], DirectedEdge["BNFC", "array"], DirectedEdge["BNFC", "base"], DirectedEdge["BNFC", "containers"], DirectedEdge["BNFC", "deepseq"], DirectedEdge["BNFC", "directory"], DirectedEdge["BNFC", "filepath"], DirectedEdge["BNFC", "mtl"], DirectedEdge["BNFC", "pretty"], DirectedEdge["BNFC", "process"], DirectedEdge["BNFC-meta", "alex-meta"], DirectedEdge["BNFC-meta", "array"], DirectedEdge["BNFC-meta", "base"], DirectedEdge["BNFC-meta", "happy-meta"], DirectedEdge["BNFC-meta", "haskell-src-meta"], DirectedEdge["BNFC-meta", "syb"], DirectedEdge["BNFC-meta", "template-haskell"], DirectedEdge["Baggins", "base"], DirectedEdge["Baggins", "cairo"], DirectedEdge["Baggins", "containers"], DirectedEdge["Baggins", "mtl"], DirectedEdge["Bang", "base"], DirectedEdge["Bang", "bifunctors"], DirectedEdge["Bang", "hmidi"], DirectedEdge["Bang", "mtl"], DirectedEdge["Bang", "stm"], DirectedEdge["Bang", "time"], DirectedEdge["Bang", "transformers"], DirectedEdge["Barracuda", "adhoc-network"], DirectedEdge["Barracuda", "array"], DirectedEdge["Barracuda", "base"], DirectedEdge["Barracuda", "bytestring"], DirectedEdge["Barracuda", "containers"], DirectedEdge["Barracuda", "Crypto"], DirectedEdge["Barracuda", "dataenc"], DirectedEdge["Barracuda", "directory"], DirectedEdge["Barracuda", "filepath"], DirectedEdge["Barracuda", "gtk"], DirectedEdge["Barracuda", "HaXml"], DirectedEdge["Barracuda", "heap"], DirectedEdge["Barracuda", "hsgnutls"], DirectedEdge["Barracuda", "mtl"], DirectedEdge["Barracuda", "network"], DirectedEdge["Barracuda", "old-locale"], DirectedEdge["Barracuda", "parsec"], DirectedEdge["Barracuda", "random"], DirectedEdge["Barracuda", "regex-compat"], DirectedEdge["Barracuda", "stm"], DirectedEdge["Barracuda", "time"], DirectedEdge["Barracuda", "unix"], DirectedEdge["Barracuda", "utf8-string"], DirectedEdge["Barracuda", "xml-parsec"], DirectedEdge["Befunge93", "array"], DirectedEdge["Befunge93", "base"], DirectedEdge["Befunge93", "mtl"], DirectedEdge["Befunge93", "random"], DirectedEdge["BenchmarkHistory", "base"], DirectedEdge["BenchmarkHistory", "bytestring"], DirectedEdge["BenchmarkHistory", "cassava"], DirectedEdge["BenchmarkHistory", "deepseq"], DirectedEdge["BenchmarkHistory", "directory"], DirectedEdge["BenchmarkHistory", "statistics"], DirectedEdge["BenchmarkHistory", "time"], DirectedEdge["BenchmarkHistory", "vector"], DirectedEdge["BerkeleyDB", "base"], DirectedEdge["BerkeleyDB", "bytestring"], DirectedEdge["BerkeleyDB", "extensible-exceptions"], DirectedEdge["BerkeleyDBXML", "base"], DirectedEdge["BerkeleyDBXML", "BerkeleyDB"], DirectedEdge["BerkeleyDBXML", "bytestring"], DirectedEdge["BerlekampAlgorithm", "base"], DirectedEdge["BerlekampAlgorithm", "besout"], DirectedEdge["BiGUL", "base"], DirectedEdge["BiGUL", "containers"], DirectedEdge["BiGUL", "mtl"], DirectedEdge["BiGUL", "pretty"], DirectedEdge["BiGUL", "template-haskell"], DirectedEdge["BigPixel", "array"], DirectedEdge["BigPixel", "base"], DirectedEdge["BigPixel", "bmp"], DirectedEdge["BigPixel", "bytestring"], DirectedEdge["BigPixel", "gloss"], DirectedEdge["Binpack", "base"], DirectedEdge["Biobase", "array"], DirectedEdge["Biobase", "base"], DirectedEdge["Biobase", "bytestring"], DirectedEdge["Biobase", "containers"], DirectedEdge["Biobase", "deepseq"], DirectedEdge["Biobase", "directory"], DirectedEdge["Biobase", "either-unwrap"], DirectedEdge["Biobase", "file-embed"], DirectedEdge["Biobase", "filemanip"], DirectedEdge["Biobase", "filepath"], DirectedEdge["Biobase", "ghc-prim"], DirectedEdge["Biobase", "HsTools"], DirectedEdge["Biobase", "mtl"], DirectedEdge["Biobase", "parsec"], DirectedEdge["Biobase", "ParsecTools"], DirectedEdge["Biobase", "primitive"], DirectedEdge["Biobase", "PrimitiveArray"], DirectedEdge["Biobase", "split"], DirectedEdge["Biobase", "tuple"], DirectedEdge["Biobase", "utility-ht"], DirectedEdge["Biobase", "vector"], DirectedEdge["Biobase", "vector-read-instances"], DirectedEdge["Biobase", "zlib"], DirectedEdge["BiobaseBlast", "array"], DirectedEdge["BiobaseBlast", "base"], DirectedEdge["BiobaseBlast", "BiobaseXNA"], DirectedEdge["BiobaseBlast", "containers"], DirectedEdge["BiobaseDotP", "base"], DirectedEdge["BiobaseDotP", "bytestring"], DirectedEdge["BiobaseDotP", "iteratee"], DirectedEdge["BiobaseFR3D", "base"], DirectedEdge["BiobaseFR3D", "BiobaseXNA"], DirectedEdge["BiobaseFR3D", "bytestring"], DirectedEdge["BiobaseFR3D", "containers"], DirectedEdge["BiobaseFR3D", "filemanip"], DirectedEdge["BiobaseFR3D", "iteratee"], DirectedEdge["BiobaseFR3D", "tuple"], DirectedEdge["BiobaseFasta", "base"], DirectedEdge["BiobaseFasta", "biocore"], DirectedEdge["BiobaseFasta", "bytestring"], DirectedEdge["BiobaseFasta", "cmdargs"], DirectedEdge["BiobaseFasta", "conduit"], DirectedEdge["BiobaseFasta", "containers"], DirectedEdge["BiobaseFasta", "transformers"], DirectedEdge["BiobaseInfernal", "attoparsec"], DirectedEdge["BiobaseInfernal", "attoparsec-conduit"], DirectedEdge["BiobaseInfernal", "base"], DirectedEdge["BiobaseInfernal", "BiobaseXNA"], DirectedEdge["BiobaseInfernal", "biocore"], DirectedEdge["BiobaseInfernal", "bytestring"], DirectedEdge["BiobaseInfernal", "bytestring-lexing"], DirectedEdge["BiobaseInfernal", "conduit"], DirectedEdge["BiobaseInfernal", "containers"], DirectedEdge["BiobaseInfernal", "either-unwrap"], DirectedEdge["BiobaseInfernal", "lens"], DirectedEdge["BiobaseInfernal", "primitive"], DirectedEdge["BiobaseInfernal", "PrimitiveArray"], DirectedEdge["BiobaseInfernal", "repa"], DirectedEdge["BiobaseInfernal", "transformers"], DirectedEdge["BiobaseInfernal", "tuple"], DirectedEdge["BiobaseInfernal", "vector"], DirectedEdge["BiobaseMAF", "base"], DirectedEdge["BiobaseMAF", "bytestring"], DirectedEdge["BiobaseMAF", "containers"], DirectedEdge["BiobaseMAF", "iteratee"], DirectedEdge["BiobaseNewick", "aeson"], DirectedEdge["BiobaseNewick", "attoparsec"], DirectedEdge["BiobaseNewick", "base"], DirectedEdge["BiobaseNewick", "binary"], DirectedEdge["BiobaseNewick", "cereal"], DirectedEdge["BiobaseNewick", "cereal-text"], DirectedEdge["BiobaseNewick", "containers"], DirectedEdge["BiobaseNewick", "fgl"], DirectedEdge["BiobaseNewick", "ForestStructures"], DirectedEdge["BiobaseNewick", "QuickCheck"], DirectedEdge["BiobaseNewick", "text"], DirectedEdge["BiobaseNewick", "text-binary"], DirectedEdge["BiobaseNewick", "vector"], DirectedEdge["BiobaseTrainingData", "base"], DirectedEdge["BiobaseTrainingData", "BiobaseDotP"], DirectedEdge["BiobaseTrainingData", "BiobaseFR3D"], DirectedEdge["BiobaseTrainingData", "BiobaseXNA"], DirectedEdge["BiobaseTrainingData", "bytestring"], DirectedEdge["BiobaseTrainingData", "cmdargs"], DirectedEdge["BiobaseTrainingData", "either-unwrap"], DirectedEdge["BiobaseTrainingData", "iteratee"], DirectedEdge["BiobaseTrainingData", "vector"], DirectedEdge["BiobaseTurner", "base"], DirectedEdge["BiobaseTurner", "BiobaseXNA"], DirectedEdge["BiobaseTurner", "bytestring"], DirectedEdge["BiobaseTurner", "bytestring-lexing"], DirectedEdge["BiobaseTurner", "conduit"], DirectedEdge["BiobaseTurner", "containers"], DirectedEdge["BiobaseTurner", "filepath"], DirectedEdge["BiobaseTurner", "lens"], DirectedEdge["BiobaseTurner", "primitive"], DirectedEdge["BiobaseTurner", "PrimitiveArray"], DirectedEdge["BiobaseTurner", "repa"], DirectedEdge["BiobaseTurner", "split"], DirectedEdge["BiobaseTurner", "vector"], DirectedEdge["BiobaseTypes", "aeson"], DirectedEdge["BiobaseTypes", "base"], DirectedEdge["BiobaseTypes", "binary"], DirectedEdge["BiobaseTypes", "cereal"], DirectedEdge["BiobaseTypes", "cereal-text"], DirectedEdge["BiobaseTypes", "data-default"], DirectedEdge["BiobaseTypes", "deepseq"], DirectedEdge["BiobaseTypes", "hashable"], DirectedEdge["BiobaseTypes", "log-domain"], DirectedEdge["BiobaseTypes", "primitive"], DirectedEdge["BiobaseTypes", "PrimitiveArray"], DirectedEdge["BiobaseTypes", "QuickCheck"], DirectedEdge["BiobaseTypes", "stringable"], DirectedEdge["BiobaseTypes", "text"], DirectedEdge["BiobaseTypes", "text-binary"], DirectedEdge["BiobaseTypes", "vector"], DirectedEdge["BiobaseTypes", "vector-binary-instances"], DirectedEdge["BiobaseTypes", "vector-th-unbox"], DirectedEdge["BiobaseVienna", "base"], DirectedEdge["BiobaseVienna", "BiobaseTurner"], DirectedEdge["BiobaseVienna", "BiobaseXNA"], DirectedEdge["BiobaseVienna", "primitive"], DirectedEdge["BiobaseVienna", "PrimitiveArray"], DirectedEdge["BiobaseVienna", "vector"], DirectedEdge["BiobaseXNA", "aeson"], DirectedEdge["BiobaseXNA", "base"], DirectedEdge["BiobaseXNA", "bimaps"], DirectedEdge["BiobaseXNA", "binary"], DirectedEdge["BiobaseXNA", "BiobaseXNA"], DirectedEdge["BiobaseXNA", "bytes"], DirectedEdge["BiobaseXNA", "bytestring"], DirectedEdge["BiobaseXNA", "cereal"], DirectedEdge["BiobaseXNA", "cereal-vector"], DirectedEdge["BiobaseXNA", "cmdargs"], DirectedEdge["BiobaseXNA", "containers"], DirectedEdge["BiobaseXNA", "csv"], DirectedEdge["BiobaseXNA", "deepseq"], DirectedEdge["BiobaseXNA", "file-embed"], DirectedEdge["BiobaseXNA", "hashable"], DirectedEdge["BiobaseXNA", "lens"], DirectedEdge["BiobaseXNA", "primitive"], DirectedEdge["BiobaseXNA", "PrimitiveArray"], DirectedEdge["BiobaseXNA", "split"], DirectedEdge["BiobaseXNA", "text"], DirectedEdge["BiobaseXNA", "tuple"], DirectedEdge["BiobaseXNA", "vector"], DirectedEdge["BiobaseXNA", "vector-binary-instances"], DirectedEdge["BiobaseXNA", "vector-th-unbox"], DirectedEdge["BirdPP", "base"], DirectedEdge["BitSyntax", "base"], DirectedEdge["BitSyntax", "bytestring"], DirectedEdge["BitSyntax", "QuickCheck"], DirectedEdge["BitSyntax", "template-haskell"], DirectedEdge["Bitly", "base"], DirectedEdge["Bitly", "HTTP"], DirectedEdge["BlastHTTP", "base"], DirectedEdge["BlastHTTP", "biocore"], DirectedEdge["BlastHTTP", "biofasta"], DirectedEdge["BlastHTTP", "blastxml"], DirectedEdge["BlastHTTP", "bytestring"], DirectedEdge["BlastHTTP", "conduit"], DirectedEdge["BlastHTTP", "HTTP"], DirectedEdge["BlastHTTP", "http-conduit"], DirectedEdge["BlastHTTP", "hxt"], DirectedEdge["BlastHTTP", "mtl"], DirectedEdge["BlastHTTP", "network"], DirectedEdge["BlastHTTP", "transformers"], DirectedEdge["Blobs", "base"], DirectedEdge["Blobs", "containers"], DirectedEdge["Blobs", "directory"], DirectedEdge["Blobs", "HaXml"], DirectedEdge["Blobs", "polyparse"], DirectedEdge["Blobs", "pretty"], DirectedEdge["Blobs", "wx"], DirectedEdge["Blobs", "wxcore"], DirectedEdge["BlogLiterately", "base"], DirectedEdge["BlogLiterately", "blaze-html"], DirectedEdge["BlogLiterately", "BlogLiterately"], DirectedEdge["BlogLiterately", "bool-extras"], DirectedEdge["BlogLiterately", "bytestring"], DirectedEdge["BlogLiterately", "cmdargs"], DirectedEdge["BlogLiterately", "containers"], DirectedEdge["BlogLiterately", "data-default"], DirectedEdge["BlogLiterately", "directory"], DirectedEdge["BlogLiterately", "filepath"], DirectedEdge["BlogLiterately", "HaXml"], DirectedEdge["BlogLiterately", "haxr"], DirectedEdge["BlogLiterately", "highlighting-kate"], DirectedEdge["BlogLiterately", "hscolour"], DirectedEdge["BlogLiterately", "HTTP"], DirectedEdge["BlogLiterately", "lens"], DirectedEdge["BlogLiterately", "mtl"], DirectedEdge["BlogLiterately", "pandoc"], DirectedEdge["BlogLiterately", "pandoc-citeproc"], DirectedEdge["BlogLiterately", "pandoc-types"], DirectedEdge["BlogLiterately", "parsec"], DirectedEdge["BlogLiterately", "process"], DirectedEdge["BlogLiterately", "split"], DirectedEdge["BlogLiterately", "strict"], DirectedEdge["BlogLiterately", "tagsoup"], DirectedEdge["BlogLiterately", "temporary"], DirectedEdge["BlogLiterately", "transformers"], DirectedEdge["BlogLiterately-diagrams", "base"], DirectedEdge["BlogLiterately-diagrams", "BlogLiterately"], DirectedEdge["BlogLiterately-diagrams", "BlogLiterately-diagrams"], DirectedEdge["BlogLiterately-diagrams", "containers"], DirectedEdge["BlogLiterately-diagrams", "diagrams-builder"], DirectedEdge["BlogLiterately-diagrams", "diagrams-lib"], DirectedEdge["BlogLiterately-diagrams", "diagrams-rasterific"], DirectedEdge["BlogLiterately-diagrams", "directory"], DirectedEdge["BlogLiterately-diagrams", "filepath"], DirectedEdge["BlogLiterately-diagrams", "JuicyPixels"], DirectedEdge["BlogLiterately-diagrams", "pandoc"], DirectedEdge["BlogLiterately-diagrams", "safe"], DirectedEdge["BluePrintCSS", "base"], DirectedEdge["BluePrintCSS", "blaze-html"], DirectedEdge["BluePrintCSS", "hsx"], DirectedEdge["BluePrintCSS", "mtl"], DirectedEdge["Bookshelf", "base"], DirectedEdge["Bookshelf", "containers"], DirectedEdge["Bookshelf", "directory"], DirectedEdge["Bookshelf", "filepath"], DirectedEdge["Bookshelf", "pandoc"], DirectedEdge["Bookshelf", "pandoc-citeproc"], DirectedEdge["Bookshelf", "pandoc-types"], DirectedEdge["Bookshelf", "parseargs"], DirectedEdge["Boolean", "base"], DirectedEdge["BoundedChan", "array"], DirectedEdge["BoundedChan", "base"], DirectedEdge["Bravo", "base"], DirectedEdge["Bravo", "haskell-src-exts"], DirectedEdge["Bravo", "haskell-src-meta"], DirectedEdge["Bravo", "mtl"], DirectedEdge["Bravo", "parsec"], DirectedEdge["Bravo", "syb"], DirectedEdge["Bravo", "template-haskell"], DirectedEdge["BufferedSocket", "base"], DirectedEdge["BufferedSocket", "bytestring"], DirectedEdge["BufferedSocket", "network"], DirectedEdge["BufferedSocket", "text"], DirectedEdge["Buster", "base"], DirectedEdge["Buster", "bytestring"], DirectedEdge["Buster", "conduit"], DirectedEdge["Buster", "data-default"], DirectedEdge["Buster", "errors"], DirectedEdge["Buster", "hinotify"], DirectedEdge["Buster", "hslogger"], DirectedEdge["Buster", "http-conduit"], DirectedEdge["Buster", "http-types"], DirectedEdge["Buster", "transformers"], DirectedEdge["Buster", "unbounded-delays"], DirectedEdge["Buster", "unix"], DirectedEdge["Buster", "yaml"], DirectedEdge["CBOR", "base"], DirectedEdge["CBOR", "binary"], DirectedEdge["CBOR", "binary-bits"], DirectedEdge["CBOR", "bytestring"], DirectedEdge["CC-delcont", "base"], DirectedEdge["CC-delcont", "mtl"], DirectedEdge["CC-delcont-alt", "base"], DirectedEdge["CC-delcont-alt", "CC-delcont-cxe"], DirectedEdge["CC-delcont-alt", "CC-delcont-exc"], DirectedEdge["CC-delcont-alt", "CC-delcont-ref"], DirectedEdge["CC-delcont-alt", "mtl"], DirectedEdge["CC-delcont-cxe", "base"], DirectedEdge["CC-delcont-cxe", "mtl"], DirectedEdge["CC-delcont-exc", "base"], DirectedEdge["CC-delcont-exc", "mtl"], DirectedEdge["CC-delcont-ref", "base"], DirectedEdge["CC-delcont-ref", "mtl"], DirectedEdge["CC-delcont-ref-tf", "base"], DirectedEdge["CC-delcont-ref-tf", "ref-tf"], DirectedEdge["CC-delcont-ref-tf", "transformers"], DirectedEdge["CCA", "array"], DirectedEdge["CCA", "base"], DirectedEdge["CCA", "containers"], DirectedEdge["CCA", "ghc-prim"], DirectedEdge["CCA", "haskell-src"], DirectedEdge["CCA", "syb"], DirectedEdge["CCA", "template-haskell"], DirectedEdge["CHXHtml", "base"], DirectedEdge["CHXHtml", "bytestring"], DirectedEdge["CHXHtml", "hxt-regex-xmlschema"], DirectedEdge["CHXHtml", "utf8-string"], DirectedEdge["CLASE", "base"], DirectedEdge["CLASE", "containers"], DirectedEdge["CLASE", "filepath"], DirectedEdge["CLASE", "mtl"], DirectedEdge["CLASE", "parsec"], DirectedEdge["CLASE", "template-haskell"], DirectedEdge["CLI", "base"], DirectedEdge["CLI", "directory"], DirectedEdge["CLI", "split"], DirectedEdge["CLI", "time"], DirectedEdge["CMCompare", "array"], DirectedEdge["CMCompare", "base"], DirectedEdge["CMCompare", "BiobaseInfernal"], DirectedEdge["CMCompare", "BiobaseXNA"], DirectedEdge["CMCompare", "cmdargs"], DirectedEdge["CMCompare", "containers"], DirectedEdge["CMCompare", "lens"], DirectedEdge["CMQ", "base"], DirectedEdge["CMQ", "bytestring"], DirectedEdge["CMQ", "cereal"], DirectedEdge["CMQ", "containers"], DirectedEdge["CMQ", "iproute"], DirectedEdge["CMQ", "mtl"], DirectedEdge["CMQ", "network"], DirectedEdge["CMQ", "PSQueue"], DirectedEdge["CMQ", "stm"], DirectedEdge["CMQ", "time"], DirectedEdge["COrdering", "base"], DirectedEdge["CPBrainfuck", "base"], DirectedEdge["CPL", "array"], DirectedEdge["CPL", "base"], DirectedEdge["CPL", "containers"], DirectedEdge["CPL", "haskeline"], DirectedEdge["CPL", "mtl"], DirectedEdge["CPL", "parsec"], DirectedEdge["CPL", "readline"], DirectedEdge["CSPM-CoreLanguage", "base"], DirectedEdge["CSPM-FiringRules", "base"], DirectedEdge["CSPM-FiringRules", "containers"], DirectedEdge["CSPM-FiringRules", "CSPM-CoreLanguage"], DirectedEdge["CSPM-FiringRules", "mtl"], DirectedEdge["CSPM-FiringRules", "parallel-tree-search"], DirectedEdge["CSPM-FiringRules", "QuickCheck"], DirectedEdge["CSPM-FiringRules", "random"], DirectedEdge["CSPM-FiringRules", "tree-monad"], DirectedEdge["CSPM-Frontend", "array"], DirectedEdge["CSPM-Frontend", "base"], DirectedEdge["CSPM-Frontend", "containers"], DirectedEdge["CSPM-Frontend", "dlist"], DirectedEdge["CSPM-Frontend", "either"], DirectedEdge["CSPM-Frontend", "ghc-prim"], DirectedEdge["CSPM-Frontend", "mtl"], DirectedEdge["CSPM-Frontend", "prettyclass"], DirectedEdge["CSPM-Frontend", "syb"], DirectedEdge["CSPM-Frontend", "transformers"], DirectedEdge["CSPM-Interpreter", "array"], DirectedEdge["CSPM-Interpreter", "base"], DirectedEdge["CSPM-Interpreter", "containers"], DirectedEdge["CSPM-Interpreter", "CSPM-CoreLanguage"], DirectedEdge["CSPM-Interpreter", "CSPM-Frontend"], DirectedEdge["CSPM-Interpreter", "mtl"], DirectedEdge["CSPM-Interpreter", "prettyclass"], DirectedEdge["CSPM-Interpreter", "syb"], DirectedEdge["CSPM-ToProlog", "array"], DirectedEdge["CSPM-ToProlog", "base"], DirectedEdge["CSPM-ToProlog", "containers"], DirectedEdge["CSPM-ToProlog", "CSPM-Frontend"], DirectedEdge["CSPM-ToProlog", "ghc-prim"], DirectedEdge["CSPM-ToProlog", "pretty"], DirectedEdge["CSPM-cspm", "base"], DirectedEdge["CSPM-cspm", "cmdargs"], DirectedEdge["CSPM-cspm", "containers"], DirectedEdge["CSPM-cspm", "CSPM-CoreLanguage"], DirectedEdge["CSPM-cspm", "CSPM-FiringRules"], DirectedEdge["CSPM-cspm", "CSPM-Frontend"], DirectedEdge["CSPM-cspm", "CSPM-Interpreter"], DirectedEdge["CSPM-cspm", "CSPM-ToProlog"], DirectedEdge["CSPM-cspm", "hslua"], DirectedEdge["CSPM-cspm", "parallel"], DirectedEdge["CSPM-cspm", "pretty"], DirectedEdge["CSPM-cspm", "prettyclass"], DirectedEdge["CSPM-cspm", "syb"], DirectedEdge["CSPM-cspm", "transformers"], DirectedEdge["CSPM-cspm", "xml"], DirectedEdge["CTRex", "base"], DirectedEdge["CTRex", "containers"], DirectedEdge["CTRex", "hashable"], DirectedEdge["CTRex", "mtl"], DirectedEdge["CTRex", "unordered-containers"], DirectedEdge["CV", "array"], DirectedEdge["CV", "base"], DirectedEdge["CV", "binary"], DirectedEdge["CV", "bindings-DSL"], DirectedEdge["CV", "carray"], DirectedEdge["CV", "containers"], DirectedEdge["CV", "deepseq"], DirectedEdge["CV", "directory"], DirectedEdge["CV", "filepath"], DirectedEdge["CV", "lazysmallcheck"], DirectedEdge["CV", "mtl"], DirectedEdge["CV", "mwc-random"], DirectedEdge["CV", "parallel"], DirectedEdge["CV", "parallel-io"], DirectedEdge["CV", "primitive"], DirectedEdge["CV", "QuickCheck"], DirectedEdge["CV", "storable-complex"], DirectedEdge["CV", "storable-tuple"], DirectedEdge["CV", "vector"], DirectedEdge["Cabal", "array"], DirectedEdge["Cabal", "base"], DirectedEdge["Cabal", "binary"], DirectedEdge["Cabal", "bytestring"], DirectedEdge["Cabal", "containers"], DirectedEdge["Cabal", "deepseq"], DirectedEdge["Cabal", "directory"], DirectedEdge["Cabal", "filepath"], DirectedEdge["Cabal", "ghc-prim"], DirectedEdge["Cabal", "pretty"], DirectedEdge["Cabal", "process"], DirectedEdge["Cabal", "time"], DirectedEdge["Cabal", "unix"], DirectedEdge["Cabal-ide-backend", "array"], DirectedEdge["Cabal-ide-backend", "base"], DirectedEdge["Cabal-ide-backend", "binary"], DirectedEdge["Cabal-ide-backend", "bytestring"], DirectedEdge["Cabal-ide-backend", "containers"], DirectedEdge["Cabal-ide-backend", "deepseq"], DirectedEdge["Cabal-ide-backend", "directory"], DirectedEdge["Cabal-ide-backend", "filepath"], DirectedEdge["Cabal-ide-backend", "ghc-prim"], DirectedEdge["Cabal-ide-backend", "pretty"], DirectedEdge["Cabal-ide-backend", "process"], DirectedEdge["Cabal-ide-backend", "time"], DirectedEdge["Cabal-ide-backend", "unix"], DirectedEdge["CabalSearch", "base"], DirectedEdge["CabalSearch", "bytestring"], DirectedEdge["CabalSearch", "directory"], DirectedEdge["CabalSearch", "filepath"], DirectedEdge["CabalSearch", "HDBC"], DirectedEdge["CabalSearch", "process"], DirectedEdge["CabalSearch", "unix"], DirectedEdge["Capabilities", "base"], DirectedEdge["Capabilities", "compdata"], DirectedEdge["Capabilities", "directory"], DirectedEdge["Capabilities", "free"], DirectedEdge["Capabilities", "unix"], DirectedEdge["Cardinality", "base"], DirectedEdge["Cardinality", "containers"], DirectedEdge["Cardinality", "mtl"], DirectedEdge["CarneadesDSL", "base"], DirectedEdge["CarneadesDSL", "containers"], DirectedEdge["CarneadesDSL", "fgl"], DirectedEdge["CarneadesDSL", "parsec"], DirectedEdge["CarneadesIntoDung", "base"], DirectedEdge["CarneadesIntoDung", "CarneadesDSL"], DirectedEdge["CarneadesIntoDung", "cmdargs"], DirectedEdge["CarneadesIntoDung", "containers"], DirectedEdge["CarneadesIntoDung", "Dung"], DirectedEdge["CarneadesIntoDung", "fgl"], DirectedEdge["Cartesian", "base"], DirectedEdge["Cartesian", "lens"], DirectedEdge["Cartesian", "template-haskell"], DirectedEdge["Cascade", "base"], DirectedEdge["Cascade", "comonad"], DirectedEdge["Cascade", "ghc-prim"], DirectedEdge["Cascade", "mtl"], DirectedEdge["Cascade", "void"], DirectedEdge["Catana", "base"], DirectedEdge["Catana", "mtl"], DirectedEdge["ChannelT", "base"], DirectedEdge["ChannelT", "free"], DirectedEdge["ChannelT", "mmorph"], DirectedEdge["ChannelT", "mtl"], DirectedEdge["ChannelT", "transformers-base"], DirectedEdge["Chart", "array"], DirectedEdge["Chart", "base"], DirectedEdge["Chart", "colour"], DirectedEdge["Chart", "data-default-class"], DirectedEdge["Chart", "lens"], DirectedEdge["Chart", "mtl"], DirectedEdge["Chart", "old-locale"], DirectedEdge["Chart", "operational"], DirectedEdge["Chart", "time"], DirectedEdge["Chart", "vector"], DirectedEdge["Chart-cairo", "array"], DirectedEdge["Chart-cairo", "base"], DirectedEdge["Chart-cairo", "cairo"], DirectedEdge["Chart-cairo", "Chart"], DirectedEdge["Chart-cairo", "colour"], DirectedEdge["Chart-cairo", "data-default-class"], DirectedEdge["Chart-cairo", "lens"], DirectedEdge["Chart-cairo", "mtl"], DirectedEdge["Chart-cairo", "old-locale"], DirectedEdge["Chart-cairo", "operational"], DirectedEdge["Chart-cairo", "time"], DirectedEdge["Chart-diagrams", "base"], DirectedEdge["Chart-diagrams", "blaze-markup"], DirectedEdge["Chart-diagrams", "bytestring"], DirectedEdge["Chart-diagrams", "Chart"], DirectedEdge["Chart-diagrams", "colour"], DirectedEdge["Chart-diagrams", "containers"], DirectedEdge["Chart-diagrams", "data-default-class"], DirectedEdge["Chart-diagrams", "diagrams-core"], DirectedEdge["Chart-diagrams", "diagrams-lib"], DirectedEdge["Chart-diagrams", "diagrams-postscript"], DirectedEdge["Chart-diagrams", "diagrams-svg"], DirectedEdge["Chart-diagrams", "lens"], DirectedEdge["Chart-diagrams", "mtl"], DirectedEdge["Chart-diagrams", "old-locale"], DirectedEdge["Chart-diagrams", "operational"], DirectedEdge["Chart-diagrams", "svg-builder"], DirectedEdge["Chart-diagrams", "SVGFonts"], DirectedEdge["Chart-diagrams", "text"], DirectedEdge["Chart-diagrams", "time"], DirectedEdge["Chart-gtk", "array"], DirectedEdge["Chart-gtk", "base"], DirectedEdge["Chart-gtk", "cairo"], DirectedEdge["Chart-gtk", "Chart"], DirectedEdge["Chart-gtk", "Chart-cairo"], DirectedEdge["Chart-gtk", "colour"], DirectedEdge["Chart-gtk", "data-default-class"], DirectedEdge["Chart-gtk", "gtk"], DirectedEdge["Chart-gtk", "mtl"], DirectedEdge["Chart-gtk", "old-locale"], DirectedEdge["Chart-gtk", "time"], DirectedEdge["Chart-simple", "array"], DirectedEdge["Chart-simple", "base"], DirectedEdge["Chart-simple", "cairo"], DirectedEdge["Chart-simple", "Chart"], DirectedEdge["Chart-simple", "Chart-cairo"], DirectedEdge["Chart-simple", "Chart-gtk"], DirectedEdge["Chart-simple", "colour"], DirectedEdge["Chart-simple", "data-default-class"], DirectedEdge["Chart-simple", "gtk"], DirectedEdge["Chart-simple", "mtl"], DirectedEdge["Chart-simple", "old-locale"], DirectedEdge["Chart-simple", "time"], DirectedEdge["ChasingBottoms", "base"], DirectedEdge["ChasingBottoms", "containers"], DirectedEdge["ChasingBottoms", "mtl"], DirectedEdge["ChasingBottoms", "QuickCheck"], DirectedEdge["ChasingBottoms", "random"], DirectedEdge["ChasingBottoms", "syb"], DirectedEdge["CheatSheet", "base"], DirectedEdge["CheatSheet", "containers"], DirectedEdge["CheatSheet", "directory"], DirectedEdge["Checked", "base"], DirectedEdge["Checked", "text"], DirectedEdge["Chitra", "base"], DirectedEdge["Chitra", "binary"], DirectedEdge["Chitra", "bytestring"], DirectedEdge["Chitra", "mtl"], DirectedEdge["Chitra", "network"], DirectedEdge["ChristmasTree", "base"], DirectedEdge["ChristmasTree", "containers"], DirectedEdge["ChristmasTree", "fgl"], DirectedEdge["ChristmasTree", "template-haskell"], DirectedEdge["ChristmasTree", "TTTAS"], DirectedEdge["ChristmasTree", "uulib"], DirectedEdge["CirruParser", "cirru-parser"], DirectedEdge["CirruParser", "aeson"], DirectedEdge["CirruParser", "base"], DirectedEdge["CirruParser", "text"], DirectedEdge["CirruParser", "vector"], DirectedEdge["ClassLaws", "base"], DirectedEdge["ClassLaws", "ChasingBottoms"], DirectedEdge["ClassLaws", "mtl"], DirectedEdge["ClassLaws", "QuickCheck"], DirectedEdge["ClassyPrelude", "base"], DirectedEdge["ClassyPrelude", "strict"], DirectedEdge["Clean", "definitive-base"], DirectedEdge["Clean", "base"], DirectedEdge["Clean", "containers"], DirectedEdge["Clipboard", "base"], DirectedEdge["Clipboard", "directory"], DirectedEdge["Clipboard", "unix"], DirectedEdge["Clipboard", "utf8-string"], DirectedEdge["ClustalParser", "base"], DirectedEdge["ClustalParser", "ClustalParser"], DirectedEdge["ClustalParser", "cmdargs"], DirectedEdge["ClustalParser", "either-unwrap"], DirectedEdge["ClustalParser", "parsec"], DirectedEdge["ClustalParser", "vector"], DirectedEdge["Coadjute", "array"], DirectedEdge["Coadjute", "base"], DirectedEdge["Coadjute", "bytestring"], DirectedEdge["Coadjute", "bytestring-csv"], DirectedEdge["Coadjute", "containers"], DirectedEdge["Coadjute", "directory"], DirectedEdge["Coadjute", "fgl"], DirectedEdge["Coadjute", "filepath"], DirectedEdge["Coadjute", "mtl"], DirectedEdge["Coadjute", "old-time"], DirectedEdge["Coadjute", "pretty"], DirectedEdge["Coadjute", "safe"], DirectedEdge["Coadjute", "utf8-string"], DirectedEdge["Codec-Compression-LZF", "base"], DirectedEdge["Codec-Image-DevIL", "array"], DirectedEdge["Codec-Image-DevIL", "base"], DirectedEdge["Combinatorrent", "array"], DirectedEdge["Combinatorrent", "attoparsec"], DirectedEdge["Combinatorrent", "base"], DirectedEdge["Combinatorrent", "bytestring"], DirectedEdge["Combinatorrent", "cereal"], DirectedEdge["Combinatorrent", "containers"], DirectedEdge["Combinatorrent", "deepseq"], DirectedEdge["Combinatorrent", "directory"], DirectedEdge["Combinatorrent", "filepath"], DirectedEdge["Combinatorrent", "hopenssl"], DirectedEdge["Combinatorrent", "hslogger"], DirectedEdge["Combinatorrent", "HTTP"], DirectedEdge["Combinatorrent", "HUnit"], DirectedEdge["Combinatorrent", "mtl"], DirectedEdge["Combinatorrent", "network"], DirectedEdge["Combinatorrent", "network-bytestring"], DirectedEdge["Combinatorrent", "parsec"], DirectedEdge["Combinatorrent", "pretty"], DirectedEdge["Combinatorrent", "PSQueue"], DirectedEdge["Combinatorrent", "QuickCheck"], DirectedEdge["Combinatorrent", "random"], DirectedEdge["Combinatorrent", "random-shuffle"], DirectedEdge["Combinatorrent", "stm"], DirectedEdge["Combinatorrent", "test-framework"], DirectedEdge["Combinatorrent", "test-framework-hunit"], DirectedEdge["Combinatorrent", "time"], DirectedEdge["Command", "system-command"], DirectedEdge["Command", "base"], DirectedEdge["Command", "directory"], DirectedEdge["Command", "process"], DirectedEdge["Commando", "base"], DirectedEdge["Commando", "data-default"], DirectedEdge["Commando", "fsnotify"], DirectedEdge["Commando", "optparse-applicative"], DirectedEdge["Commando", "process"], DirectedEdge["Commando", "system-fileio"], DirectedEdge["Commando", "system-filepath"], DirectedEdge["Commando", "text"], DirectedEdge["ComonadSheet", "applicative-numbers"], DirectedEdge["ComonadSheet", "base"], DirectedEdge["ComonadSheet", "comonad"], DirectedEdge["ComonadSheet", "containers"], DirectedEdge["ComonadSheet", "distributive"], DirectedEdge["ComonadSheet", "IndexedList"], DirectedEdge["ComonadSheet", "NestedFunctor"], DirectedEdge["ComonadSheet", "PeanoWitnesses"], DirectedEdge["ComonadSheet", "Stream"], DirectedEdge["ComonadSheet", "Tape"], DirectedEdge["ComonadSheet", "transformers"], DirectedEdge["ConcurrentUtils", "array"], DirectedEdge["ConcurrentUtils", "base"], DirectedEdge["ConcurrentUtils", "binary"], DirectedEdge["ConcurrentUtils", "bytestring"], DirectedEdge["ConcurrentUtils", "containers"], DirectedEdge["ConcurrentUtils", "crypto-random"], DirectedEdge["ConcurrentUtils", "cryptohash"], DirectedEdge["ConcurrentUtils", "list-extras"], DirectedEdge["ConcurrentUtils", "MonadRandom"], DirectedEdge["ConcurrentUtils", "monads-tf"], DirectedEdge["ConcurrentUtils", "network"], DirectedEdge["ConcurrentUtils", "parallel"], DirectedEdge["ConcurrentUtils", "process"], DirectedEdge["ConcurrentUtils", "reexport-crypto-random"], DirectedEdge["ConcurrentUtils", "RSA"], DirectedEdge["ConcurrentUtils", "securemem"], DirectedEdge["ConcurrentUtils", "tagged"], DirectedEdge["Concurrential", "async"], DirectedEdge["Concurrential", "base"], DirectedEdge["Condor", "base"], DirectedEdge["Condor", "binary"], DirectedEdge["Condor", "containers"], DirectedEdge["Condor", "directory"], DirectedEdge["Condor", "filepath"], DirectedEdge["Condor", "glider-nlp"], DirectedEdge["Condor", "text"], DirectedEdge["ConfigFile", "base"], DirectedEdge["ConfigFile", "containers"], DirectedEdge["ConfigFile", "HUnit"], DirectedEdge["ConfigFile", "MissingH"], DirectedEdge["ConfigFile", "mtl"], DirectedEdge["ConfigFile", "parsec"], DirectedEdge["ConfigFile", "testpack"], DirectedEdge["ConfigFileTH", "base"], DirectedEdge["ConfigFileTH", "ConfigFile"], DirectedEdge["ConfigFileTH", "parsec"], DirectedEdge["ConfigFileTH", "template-haskell"], DirectedEdge["Configger", "base"], DirectedEdge["Configger", "Dangerous"], DirectedEdge["Configger", "MissingH"], DirectedEdge["Configger", "mtl"], DirectedEdge["Configger", "parsec"], DirectedEdge["Configurable", "base"], DirectedEdge["ConsStream", "base"], DirectedEdge["ConsStream", "Stream"], DirectedEdge["Conscript", "base"], DirectedEdge["Conscript", "process"], DirectedEdge["ConstraintKinds", "base"], DirectedEdge["ConstraintKinds", "dlist"], DirectedEdge["ConstraintKinds", "ghc-prim"], DirectedEdge["ConstraintKinds", "vector"], DirectedEdge["Consumer", "base"], DirectedEdge["Consumer", "mtl"], DirectedEdge["ContArrow", "arrows"], DirectedEdge["ContArrow", "base"], DirectedEdge["ContextAlgebra", "base"], DirectedEdge["ContextAlgebra", "containers"], DirectedEdge["ContextAlgebra", "lattices"], DirectedEdge["ContextAlgebra", "multiset"], DirectedEdge["Contract", "base"], DirectedEdge["Contract", "template-haskell"], DirectedEdge["Control-Engine", "base"], DirectedEdge["Control-Engine", "BoundedChan"], DirectedEdge["Control-Engine", "stm"], DirectedEdge["Control-Monad-MultiPass", "array"], DirectedEdge["Control-Monad-MultiPass", "base"], DirectedEdge["Control-Monad-MultiPass", "containers"], DirectedEdge["Control-Monad-MultiPass", "mtl"], DirectedEdge["Control-Monad-ST2", "array"], DirectedEdge["Control-Monad-ST2", "base"], DirectedEdge["Control-Monad-ST2", "QuickCheck"], DirectedEdge["Control-Monad-ST2", "SafeSemaphore"], DirectedEdge["CoreDump", "base"], DirectedEdge["CoreDump", "ghc"], DirectedEdge["CoreDump", "pretty"], DirectedEdge["CoreDump", "pretty-show"], DirectedEdge["CoreErlang", "base"], DirectedEdge["CoreErlang", "parsec"], DirectedEdge["CoreErlang", "pretty"], DirectedEdge["CoreFoundation", "base"], DirectedEdge["CoreFoundation", "bytestring"], DirectedEdge["CoreFoundation", "containers"], DirectedEdge["CoreFoundation", "deepseq"], DirectedEdge["CoreFoundation", "filepath"], DirectedEdge["CoreFoundation", "network"], DirectedEdge["CoreFoundation", "property-list"], DirectedEdge["CoreFoundation", "tagged"], DirectedEdge["CoreFoundation", "text"], DirectedEdge["CoreFoundation", "time"], DirectedEdge["CoreFoundation", "transformers"], DirectedEdge["CoreFoundation", "vector"], DirectedEdge["Coroutine", "base"], DirectedEdge["CouchDB", "base"], DirectedEdge["CouchDB", "bytestring"], DirectedEdge["CouchDB", "containers"], DirectedEdge["CouchDB", "HTTP"], DirectedEdge["CouchDB", "json"], DirectedEdge["CouchDB", "mtl"], DirectedEdge["CouchDB", "network"], DirectedEdge["CouchDB", "network-uri"], DirectedEdge["CouchDB", "utf8-string"], DirectedEdge["Craft3e", "base"], DirectedEdge["Craft3e", "HUnit"], DirectedEdge["Craft3e", "mtl"], DirectedEdge["Craft3e", "old-locale"], DirectedEdge["Craft3e", "QuickCheck"], DirectedEdge["Craft3e", "time"], DirectedEdge["Crypto", "array"], DirectedEdge["Crypto", "base"], DirectedEdge["Crypto", "HUnit"], DirectedEdge["Crypto", "pretty"], DirectedEdge["Crypto", "QuickCheck"], DirectedEdge["Crypto", "random"], DirectedEdge["CurryDB", "array"], DirectedEdge["CurryDB", "async"], DirectedEdge["CurryDB", "attoparsec"], DirectedEdge["CurryDB", "attoparsec-conduit"], DirectedEdge["CurryDB", "base"], DirectedEdge["CurryDB", "binary"], DirectedEdge["CurryDB", "blaze-builder"], DirectedEdge["CurryDB", "blaze-textual"], DirectedEdge["CurryDB", "bytestring"], DirectedEdge["CurryDB", "conduit"], DirectedEdge["CurryDB", "containers"], DirectedEdge["CurryDB", "CurryDB"], DirectedEdge["CurryDB", "data-default"], DirectedEdge["CurryDB", "fast-logger"], DirectedEdge["CurryDB", "hashable"], DirectedEdge["CurryDB", "lens"], DirectedEdge["CurryDB", "lifted-base"], DirectedEdge["CurryDB", "monad-control"], DirectedEdge["CurryDB", "monad-logger"], DirectedEdge["CurryDB", "mtl"], DirectedEdge["CurryDB", "network"], DirectedEdge["CurryDB", "network-conduit"], DirectedEdge["CurryDB", "optparse-applicative"], DirectedEdge["CurryDB", "stm"], DirectedEdge["CurryDB", "system-fileio"], DirectedEdge["CurryDB", "system-filepath"], DirectedEdge["CurryDB", "template-haskell"], DirectedEdge["CurryDB", "text"], DirectedEdge["CurryDB", "time"], DirectedEdge["CurryDB", "transformers"], DirectedEdge["CurryDB", "transformers-base"], DirectedEdge["CurryDB", "unordered-containers"], DirectedEdge["DAG-Tournament", "base"], DirectedEdge["DAG-Tournament", "cairo"], DirectedEdge["DAG-Tournament", "containers"], DirectedEdge["DAG-Tournament", "directory"], DirectedEdge["DAG-Tournament", "filepath"], DirectedEdge["DAG-Tournament", "gtk"], DirectedEdge["DAG-Tournament", "mtl"], DirectedEdge["DAG-Tournament", "time"], DirectedEdge["DAV", "base"], DirectedEdge["DAV", "bytestring"], DirectedEdge["DAV", "case-insensitive"], DirectedEdge["DAV", "containers"], DirectedEdge["DAV", "data-default"], DirectedEdge["DAV", "exceptions"], DirectedEdge["DAV", "http-client"], DirectedEdge["DAV", "http-client-tls"], DirectedEdge["DAV", "http-types"], DirectedEdge["DAV", "lens"], DirectedEdge["DAV", "mtl"], DirectedEdge["DAV", "mtl-compat"], DirectedEdge["DAV", "network"], DirectedEdge["DAV", "network-uri"], DirectedEdge["DAV", "optparse-applicative"], DirectedEdge["DAV", "transformers"], DirectedEdge["DAV", "transformers-base"], DirectedEdge["DAV", "transformers-compat"], DirectedEdge["DAV", "utf8-string"], DirectedEdge["DAV", "xml-conduit"], DirectedEdge["DAV", "xml-hamlet"], DirectedEdge["DBlimited", "base"], DirectedEdge["DBlimited", "containers"], DirectedEdge["DBlimited", "parsec"], DirectedEdge["DBus", "base"], DirectedEdge["DBus", "bytestring"], DirectedEdge["DCFL", "base"], DirectedEdge["DCFL", "deepseq"], DirectedEdge["DCFL", "HUnit"], DirectedEdge["DCFL", "parallel"], DirectedEdge["DCFL", "random"], DirectedEdge["DMuCheck", "base"], DirectedEdge["DMuCheck", "binary"], DirectedEdge["DMuCheck", "directory"], DirectedEdge["DMuCheck", "distributed-process"], DirectedEdge["DMuCheck", "distributed-process-simplelocalnet"], DirectedEdge["DMuCheck", "hint"], DirectedEdge["DMuCheck", "MuCheck"], DirectedEdge["DMuCheck", "MuCheck-Hspec"], DirectedEdge["DMuCheck", "MuCheck-HUnit"], DirectedEdge["DMuCheck", "MuCheck-QuickCheck"], DirectedEdge["DMuCheck", "MuCheck-SmallCheck"], DirectedEdge["DMuCheck", "network-transport-tcp"], DirectedEdge["DMuCheck", "unix"], DirectedEdge["DOM", "base"], DirectedEdge["DOM", "mtl"], DirectedEdge["DOM", "WebBits"], DirectedEdge["DP", "array"], DirectedEdge["DP", "base"], DirectedEdge["DP", "containers"], DirectedEdge["DP", "list-tries"], DirectedEdge["DP", "mtl"], DirectedEdge["DP", "QuickCheck"], DirectedEdge["DP", "safe"], DirectedEdge["DP", "semiring"], DirectedEdge["DPM", "array"], DirectedEdge["DPM", "base"], DirectedEdge["DPM", "bytestring"], DirectedEdge["DPM", "containers"], DirectedEdge["DPM", "convertible"], DirectedEdge["DPM", "darcs"], DirectedEdge["DPM", "directory"], DirectedEdge["DPM", "DPM"], DirectedEdge["DPM", "filepath"], DirectedEdge["DPM", "HSH"], DirectedEdge["DPM", "HTF"], DirectedEdge["DPM", "HTTP"], DirectedEdge["DPM", "mtl"], DirectedEdge["DPM", "network"], DirectedEdge["DPM", "old-locale"], DirectedEdge["DPM", "pretty"], DirectedEdge["DPM", "process"], DirectedEdge["DPM", "regex-posix"], DirectedEdge["DPM", "split"], DirectedEdge["DPM", "syb"], DirectedEdge["DPM", "time"], DirectedEdge["DPM", "unix"], DirectedEdge["DRBG", "base"], DirectedEdge["DRBG", "bytestring"], DirectedEdge["DRBG", "cereal"], DirectedEdge["DRBG", "crypto-api"], DirectedEdge["DRBG", "cryptohash-cryptoapi"], DirectedEdge["DRBG", "entropy"], DirectedEdge["DRBG", "mtl"], DirectedEdge["DRBG", "parallel"], DirectedEdge["DRBG", "prettyclass"], DirectedEdge["DRBG", "tagged"], DirectedEdge["DSA", "base"], DirectedEdge["DSA", "binary"], DirectedEdge["DSA", "bytestring"], DirectedEdge["DSA", "crypto-api"], DirectedEdge["DSA", "crypto-pubkey-types"], DirectedEdge["DSA", "ghc-prim"], DirectedEdge["DSA", "integer-gmp"], DirectedEdge["DSA", "SHA"], DirectedEdge["DSA", "tagged"], DirectedEdge["DSH", "aeson"], DirectedEdge["DSH", "algebra-dag"], DirectedEdge["DSH", "ansi-wl-pprint"], DirectedEdge["DSH", "base"], DirectedEdge["DSH", "bytestring"], DirectedEdge["DSH", "containers"], DirectedEdge["DSH", "Decimal"], DirectedEdge["DSH", "dlist"], DirectedEdge["DSH", "either"], DirectedEdge["DSH", "hashable"], DirectedEdge["DSH", "HUnit"], DirectedEdge["DSH", "kure"], DirectedEdge["DSH", "mtl"], DirectedEdge["DSH", "process"], DirectedEdge["DSH", "QuickCheck"], DirectedEdge["DSH", "random"], DirectedEdge["DSH", "semigroups"], DirectedEdge["DSH", "template-haskell"], DirectedEdge["DSH", "test-framework"], DirectedEdge["DSH", "test-framework-hunit"], DirectedEdge["DSH", "text"], DirectedEdge["DSH", "time"], DirectedEdge["DSH", "unordered-containers"], DirectedEdge["DSH", "vector"], DirectedEdge["DSTM", "base"], DirectedEdge["DSTM", "containers"], DirectedEdge["DSTM", "network"], DirectedEdge["DSTM", "process"], DirectedEdge["DSTM", "unix"], DirectedEdge["DTC", "base"], DirectedEdge["DTC", "haskell-src-exts"], DirectedEdge["Dangerous", "base"], DirectedEdge["Dangerous", "MaybeT"], DirectedEdge["Dangerous", "mtl"], DirectedEdge["Dao", "array"], DirectedEdge["Dao", "base"], DirectedEdge["Dao", "binary"], DirectedEdge["Dao", "bytestring"], DirectedEdge["Dao", "containers"], DirectedEdge["Dao", "Crypto"], DirectedEdge["Dao", "deepseq"], DirectedEdge["Dao", "directory"], DirectedEdge["Dao", "filepath"], DirectedEdge["Dao", "mtl"], DirectedEdge["Dao", "process"], DirectedEdge["Dao", "random"], DirectedEdge["Dao", "time"], DirectedEdge["Dao", "transformers"], DirectedEdge["Dao", "utf8-string"], DirectedEdge["DarcsHelpers", "base"], DirectedEdge["DarcsHelpers", "HaXml"], DirectedEdge["DarcsHelpers", "mtl"], DirectedEdge["DarcsHelpers", "parsec"], DirectedEdge["DarcsHelpers", "safe"], DirectedEdge["DarcsHelpers", "xml-parsec"], DirectedEdge["Data-Hash-Consistent", "base"], DirectedEdge["Data-Hash-Consistent", "bytestring"], DirectedEdge["Data-Hash-Consistent", "digest"], DirectedEdge["Data-Hash-Consistent", "utf8-string"], DirectedEdge["Data-Hash-Consistent", "vector"], DirectedEdge["Data-Hash-Consistent", "vector-algorithms"], DirectedEdge["Data-Rope", "data-rope"], DirectedEdge["Data-Rope", "base"], DirectedEdge["Data-Rope", "bytestring"], DirectedEdge["Data-Rope", "unix"], DirectedEdge["DataTreeView", "base"], DirectedEdge["DataTreeView", "bytestring"], DirectedEdge["DataTreeView", "containers"], DirectedEdge["DataTreeView", "deepseq"], DirectedEdge["DataTreeView", "glib"], DirectedEdge["DataTreeView", "gtk"], DirectedEdge["DataTreeView", "lifted-base"], DirectedEdge["DataTreeView", "ListLike"], DirectedEdge["DataTreeView", "MissingH"], DirectedEdge["DataTreeView", "monad-control"], DirectedEdge["DataTreeView", "mtl"], DirectedEdge["DataTreeView", "syb"], DirectedEdge["DataTreeView", "transformers-base"], DirectedEdge["Deadpan-DDP", "aeson"], DirectedEdge["Deadpan-DDP", "base"], DirectedEdge["Deadpan-DDP", "base64-bytestring"], DirectedEdge["Deadpan-DDP", "bytestring"], DirectedEdge["Deadpan-DDP", "containers"], DirectedEdge["Deadpan-DDP", "hashable"], DirectedEdge["Deadpan-DDP", "haskeline"], DirectedEdge["Deadpan-DDP", "lens"], DirectedEdge["Deadpan-DDP", "mtl"], DirectedEdge["Deadpan-DDP", "network"], DirectedEdge["Deadpan-DDP", "network-uri"], DirectedEdge["Deadpan-DDP", "random"], DirectedEdge["Deadpan-DDP", "safe"], DirectedEdge["Deadpan-DDP", "scientific"], DirectedEdge["Deadpan-DDP", "stm"], DirectedEdge["Deadpan-DDP", "text"], DirectedEdge["Deadpan-DDP", "time"], DirectedEdge["Deadpan-DDP", "transformers"], DirectedEdge["Deadpan-DDP", "unordered-containers"], DirectedEdge["Deadpan-DDP", "vector"], DirectedEdge["Deadpan-DDP", "websockets"], DirectedEdge["DebugTraceHelpers", "base"], DirectedEdge["DebugTraceHelpers", "mtl"], DirectedEdge["Decimal", "base"], DirectedEdge["Decimal", "deepseq"], DirectedEdge["DecisionTree", "base"], DirectedEdge["DecisionTree", "containers"], DirectedEdge["DeepArrow", "base"], DirectedEdge["DeepArrow", "haskell-src"], DirectedEdge["DeepArrow", "mtl"], DirectedEdge["DeepArrow", "TypeCompose"], DirectedEdge["DefendTheKing", "base"], DirectedEdge["DefendTheKing", "binary"], DirectedEdge["DefendTheKing", "bytestring"], DirectedEdge["DefendTheKing", "containers"], DirectedEdge["DefendTheKing", "GLUT"], DirectedEdge["DefendTheKing", "HTTP"], DirectedEdge["DefendTheKing", "MaybeT"], DirectedEdge["DefendTheKing", "mtl"], DirectedEdge["DefendTheKing", "network"], DirectedEdge["DefendTheKing", "peakachu"], DirectedEdge["DefendTheKing", "random"], DirectedEdge["DefendTheKing", "time"], DirectedEdge["DefendTheKing", "utility-ht"], DirectedEdge["DefendTheKing", "zlib"], DirectedEdge["Delta-Lambda", "base"], DirectedEdge["Delta-Lambda", "bytestring"], DirectedEdge["Delta-Lambda", "cereal"], DirectedEdge["Delta-Lambda", "cpphs"], DirectedEdge["Delta-Lambda", "filepath"], DirectedEdge["Delta-Lambda", "haskeline"], DirectedEdge["Delta-Lambda", "megaparsec"], DirectedEdge["Delta-Lambda", "mtl"], DirectedEdge["Delta-Lambda", "options"], DirectedEdge["Delta-Lambda", "parallel"], DirectedEdge["Delta-Lambda", "text"], DirectedEdge["Delta-Lambda", "wl-pprint"], DirectedEdge["DescriptiveKeys", "base"], DirectedEdge["DescriptiveKeys", "containers"], DirectedEdge["DescriptiveKeys", "xmonad"], DirectedEdge["DescriptiveKeys", "xmonad-contrib"], DirectedEdge["Dflow", "base"], DirectedEdge["Dflow", "containers"], DirectedEdge["Dflow", "QuickCheck"], DirectedEdge["Dflow", "stm"], DirectedEdge["Dflow", "time"], DirectedEdge["Diff", "array"], DirectedEdge["Diff", "base"], DirectedEdge["Diff", "pretty"], DirectedEdge["DifferenceLogic", "base"], DirectedEdge["DifferenceLogic", "containers"], DirectedEdge["DifferenceLogic", "fgl"], DirectedEdge["DifferenceLogic", "FirstOrderTheory"], DirectedEdge["DifferenceLogic", "HUnit"], DirectedEdge["DifferentialEvolution", "base"], DirectedEdge["DifferentialEvolution", "deepseq"], DirectedEdge["DifferentialEvolution", "fclabels"], DirectedEdge["DifferentialEvolution", "mtl"], DirectedEdge["DifferentialEvolution", "mwc-random"], DirectedEdge["DifferentialEvolution", "parallel"], DirectedEdge["DifferentialEvolution", "primitive"], DirectedEdge["DifferentialEvolution", "vector"], DirectedEdge["Digit", "digit"], DirectedEdge["Digit", "base"], DirectedEdge["Digit", "HUnit"], DirectedEdge["Digit", "QuickCheck"], DirectedEdge["Digit", "test-framework"], DirectedEdge["Digit", "test-framework-hunit"], DirectedEdge["DigitalOcean", "aeson"], DirectedEdge["DigitalOcean", "base"], DirectedEdge["DigitalOcean", "bytestring"], DirectedEdge["DigitalOcean", "containers"], DirectedEdge["DigitalOcean", "exceptions"], DirectedEdge["DigitalOcean", "lens"], DirectedEdge["DigitalOcean", "mtl"], DirectedEdge["DigitalOcean", "text"], DirectedEdge["DigitalOcean", "transformers"], DirectedEdge["DigitalOcean", "unordered-containers"], DirectedEdge["DigitalOcean", "vector"], DirectedEdge["DigitalOcean", "wreq"], DirectedEdge["DimensionalHash", "base"], DirectedEdge["DirectSound", "base"], DirectedEdge["DisTract", "base"], DirectedEdge["DisTract", "Cabal"], DirectedEdge["DisTract", "chunks"], DirectedEdge["DisTract", "containers"], DirectedEdge["DisTract", "directory"], DirectedEdge["DisTract", "filepath"], DirectedEdge["DisTract", "hinstaller"], DirectedEdge["DisTract", "old-locale"], DirectedEdge["DisTract", "parsec"], DirectedEdge["DisTract", "pretty"], DirectedEdge["DisTract", "process"], DirectedEdge["DisTract", "template-haskell"], DirectedEdge["DisTract", "time"], DirectedEdge["DisTract", "xhtml"], DirectedEdge["DiscussionSupportSystem", "base"], DirectedEdge["DiscussionSupportSystem", "blaze-html"], DirectedEdge["DiscussionSupportSystem", "blaze-markup"], DirectedEdge["DiscussionSupportSystem", "html"], DirectedEdge["DiscussionSupportSystem", "parsers"], DirectedEdge["Dish", "base"], DirectedEdge["Dish", "bytestring"], DirectedEdge["Dish", "Dish"], DirectedEdge["Dist", "base"], DirectedEdge["Dist", "containers"], DirectedEdge["Dist", "MonadRandom"], DirectedEdge["DistanceTransform", "base"], DirectedEdge["DistanceTransform", "primitive"], DirectedEdge["DistanceTransform", "vector"], DirectedEdge["DistanceUnits", "base"], DirectedEdge["DnaProteinAlignment", "ADPfusion"], DirectedEdge["DnaProteinAlignment", "ansi-wl-pprint"], DirectedEdge["DnaProteinAlignment", "array"], DirectedEdge["DnaProteinAlignment", "base"], DirectedEdge["DnaProteinAlignment", "BiobaseBlast"], DirectedEdge["DnaProteinAlignment", "BiobaseFasta"], DirectedEdge["DnaProteinAlignment", "BiobaseXNA"], DirectedEdge["DnaProteinAlignment", "biocore"], DirectedEdge["DnaProteinAlignment", "bytestring"], DirectedEdge["DnaProteinAlignment", "cmdargs"], DirectedEdge["DnaProteinAlignment", "conduit"], DirectedEdge["DnaProteinAlignment", "dlist"], DirectedEdge["DnaProteinAlignment", "DnaProteinAlignment"], DirectedEdge["DnaProteinAlignment", "parallel"], DirectedEdge["DnaProteinAlignment", "PrimitiveArray"], DirectedEdge["DnaProteinAlignment", "repa"], DirectedEdge["DnaProteinAlignment", "split"], DirectedEdge["DnaProteinAlignment", "vector"], DirectedEdge["DocTest", "doctest"], DirectedEdge["DocTest", "base"], DirectedEdge["DocTest", "containers"], DirectedEdge["DocTest", "ghc"], DirectedEdge["DocTest", "ghc-paths"], DirectedEdge["DocTest", "haddock"], DirectedEdge["DocTest", "HUnit"], DirectedEdge["DocTest", "process"], DirectedEdge["Docs", "base"], DirectedEdge["Docs", "html"], DirectedEdge["DrHylo", "array"], DirectedEdge["DrHylo", "base"], DirectedEdge["DrHylo", "containers"], DirectedEdge["DrHylo", "haskell-src-exts"], DirectedEdge["DrHylo", "mtl"], DirectedEdge["DrHylo", "pointless-haskell"], DirectedEdge["DrHylo", "pretty"], DirectedEdge["DrHylo", "syb"], DirectedEdge["DrIFT", "base"], DirectedEdge["DrIFT", "DrIFT"], DirectedEdge["DrIFT", "filepath"], DirectedEdge["DrIFT", "old-time"], DirectedEdge["DrIFT", "process"], DirectedEdge["DrIFT", "random"], DirectedEdge["DrIFT-cabalized", "DrIFT"], DirectedEdge["DrIFT-cabalized", "base"], DirectedEdge["DrIFT-cabalized", "old-time"], DirectedEdge["DrIFT-cabalized", "process"], DirectedEdge["DrIFT-cabalized", "random"], DirectedEdge["Dung", "base"], DirectedEdge["Dung", "cmdargs"], DirectedEdge["Dung", "containers"], DirectedEdge["Dung", "parsec"], DirectedEdge["Dust", "base"], DirectedEdge["Dust", "binary"], DirectedEdge["Dust", "bytestring"], DirectedEdge["Dust", "cereal"], DirectedEdge["Dust", "containers"], DirectedEdge["Dust", "crypto-api"], DirectedEdge["Dust", "directory"], DirectedEdge["Dust", "Dust-crypto"], DirectedEdge["Dust", "entropy"], DirectedEdge["Dust", "ghc-prim"], DirectedEdge["Dust", "network"], DirectedEdge["Dust", "random"], DirectedEdge["Dust", "random-extras"], DirectedEdge["Dust", "random-fu"], DirectedEdge["Dust", "random-source"], DirectedEdge["Dust", "split"], DirectedEdge["Dust", "threefish"], DirectedEdge["Dust-crypto", "base"], DirectedEdge["Dust-crypto", "binary"], DirectedEdge["Dust-crypto", "bytestring"], DirectedEdge["Dust-crypto", "cereal"], DirectedEdge["Dust-crypto", "containers"], DirectedEdge["Dust-crypto", "crypto-api"], DirectedEdge["Dust-crypto", "cryptohash"], DirectedEdge["Dust-crypto", "directory"], DirectedEdge["Dust-crypto", "entropy"], DirectedEdge["Dust-crypto", "ghc-prim"], DirectedEdge["Dust-crypto", "network"], DirectedEdge["Dust-crypto", "random"], DirectedEdge["Dust-crypto", "random-extras"], DirectedEdge["Dust-crypto", "random-fu"], DirectedEdge["Dust-crypto", "random-source"], DirectedEdge["Dust-crypto", "skein"], DirectedEdge["Dust-crypto", "split"], DirectedEdge["Dust-crypto", "threefish"], DirectedEdge["Dust-tools", "base"], DirectedEdge["Dust-tools", "binary"], DirectedEdge["Dust-tools", "bytestring"], DirectedEdge["Dust-tools", "cereal"], DirectedEdge["Dust-tools", "containers"], DirectedEdge["Dust-tools", "csv"], DirectedEdge["Dust-tools", "directory"], DirectedEdge["Dust-tools", "Dust"], DirectedEdge["Dust-tools", "Dust-crypto"], DirectedEdge["Dust-tools", "entropy"], DirectedEdge["Dust-tools", "ghc-prim"], DirectedEdge["Dust-tools", "network"], DirectedEdge["Dust-tools", "random"], DirectedEdge["Dust-tools", "random-extras"], DirectedEdge["Dust-tools", "random-fu"], DirectedEdge["Dust-tools", "random-source"], DirectedEdge["Dust-tools", "split"], DirectedEdge["Dust-tools-pcap", "base"], DirectedEdge["Dust-tools-pcap", "binary"], DirectedEdge["Dust-tools-pcap", "bytestring"], DirectedEdge["Dust-tools-pcap", "cereal"], DirectedEdge["Dust-tools-pcap", "containers"], DirectedEdge["Dust-tools-pcap", "csv"], DirectedEdge["Dust-tools-pcap", "directory"], DirectedEdge["Dust-tools-pcap", "Dust"], DirectedEdge["Dust-tools-pcap", "Dust-crypto"], DirectedEdge["Dust-tools-pcap", "Dust-tools"], DirectedEdge["Dust-tools-pcap", "entropy"], DirectedEdge["Dust-tools-pcap", "ghc-prim"], DirectedEdge["Dust-tools-pcap", "network"], DirectedEdge["Dust-tools-pcap", "pcap"], DirectedEdge["Dust-tools-pcap", "random"], DirectedEdge["Dust-tools-pcap", "random-extras"], DirectedEdge["Dust-tools-pcap", "random-fu"], DirectedEdge["Dust-tools-pcap", "random-source"], DirectedEdge["Dust-tools-pcap", "split"], DirectedEdge["DynamicTimeWarp", "array"], DirectedEdge["DynamicTimeWarp", "base"], DirectedEdge["DynamicTimeWarp", "criterion"], DirectedEdge["DynamicTimeWarp", "QuickCheck"], DirectedEdge["DynamicTimeWarp", "random"], DirectedEdge["DynamicTimeWarp", "vector"], DirectedEdge["DysFRP", "base"], DirectedEdge["DysFRP", "contravariant"], DirectedEdge["DysFRP", "mtl"], DirectedEdge["DysFRP", "time"], DirectedEdge["DysFRP", "transformers"], DirectedEdge["DysFRP-Cairo", "base"], DirectedEdge["DysFRP-Cairo", "cairo"], DirectedEdge["DysFRP-Cairo", "DysFRP"], DirectedEdge["DysFRP-Cairo", "gtk"], DirectedEdge["DysFRP-Cairo", "mtl"], DirectedEdge["DysFRP-Craftwerk", "base"], DirectedEdge["DysFRP-Craftwerk", "cairo"], DirectedEdge["DysFRP-Craftwerk", "containers"], DirectedEdge["DysFRP-Craftwerk", "craftwerk"], DirectedEdge["DysFRP-Craftwerk", "craftwerk-gtk"], DirectedEdge["DysFRP-Craftwerk", "DysFRP"], DirectedEdge["DysFRP-Craftwerk", "DysFRP-Cairo"], DirectedEdge["DysFRP-Craftwerk", "gtk"], DirectedEdge["EEConfig", "base"], DirectedEdge["EEConfig", "containers"], DirectedEdge["Earley", "base"], DirectedEdge["Earley", "Earley"], DirectedEdge["Earley", "ListLike"], DirectedEdge["Earley", "unordered-containers"], DirectedEdge["Ebnf2ps", "array"], DirectedEdge["Ebnf2ps", "base"], DirectedEdge["Ebnf2ps", "containers"], DirectedEdge["Ebnf2ps", "directory"], DirectedEdge["Ebnf2ps", "old-time"], DirectedEdge["Ebnf2ps", "unix"], DirectedEdge["EdisonAPI", "base"], DirectedEdge["EdisonAPI", "mtl"], DirectedEdge["EdisonCore", "array"], DirectedEdge["EdisonCore", "base"], DirectedEdge["EdisonCore", "containers"], DirectedEdge["EdisonCore", "EdisonAPI"], DirectedEdge["EdisonCore", "mtl"], DirectedEdge["EdisonCore", "QuickCheck"], DirectedEdge["EditTimeReport", "array"], DirectedEdge["EditTimeReport", "base"], DirectedEdge["EditTimeReport", "containers"], DirectedEdge["EditTimeReport", "csv"], DirectedEdge["EditTimeReport", "directory"], DirectedEdge["EditTimeReport", "editline"], DirectedEdge["EditTimeReport", "filepath"], DirectedEdge["EditTimeReport", "html"], DirectedEdge["EditTimeReport", "pretty"], DirectedEdge["EditTimeReport", "xhtml"], DirectedEdge["EitherT", "either"], DirectedEdge["EitherT", "base"], DirectedEdge["EitherT", "monad-control"], DirectedEdge["EitherT", "transformers"], DirectedEdge["EitherT", "transformers-base"], DirectedEdge["Elm", "elm-compiler"], DirectedEdge["Elm", "aeson"], DirectedEdge["Elm", "aeson-pretty"], DirectedEdge["Elm", "base"], DirectedEdge["Elm", "binary"], DirectedEdge["Elm", "blaze-html"], DirectedEdge["Elm", "blaze-markup"], DirectedEdge["Elm", "bytestring"], DirectedEdge["Elm", "cheapskate"], DirectedEdge["Elm", "cmdargs"], DirectedEdge["Elm", "containers"], DirectedEdge["Elm", "directory"], DirectedEdge["Elm", "filepath"], DirectedEdge["Elm", "highlighting-kate"], DirectedEdge["Elm", "indents"], DirectedEdge["Elm", "language-ecmascript"], DirectedEdge["Elm", "language-glsl"], DirectedEdge["Elm", "mtl"], DirectedEdge["Elm", "parsec"], DirectedEdge["Elm", "pretty"], DirectedEdge["Elm", "text"], DirectedEdge["Elm", "transformers"], DirectedEdge["Elm", "union-find"], DirectedEdge["Elm", "unordered-containers"], DirectedEdge["Emping", "array"], DirectedEdge["Emping", "base"], DirectedEdge["Emping", "containers"], DirectedEdge["Emping", "fgl"], DirectedEdge["Emping", "gtk"], DirectedEdge["Emping", "mtl"], DirectedEdge["Emping", "parsec"], DirectedEdge["Encode", "base"], DirectedEdge["Encode", "Cabal"], DirectedEdge["Encode", "containers"], DirectedEdge["Encode", "mtl"], DirectedEdge["EntrezHTTP", "base"], DirectedEdge["EntrezHTTP", "biocore"], DirectedEdge["EntrezHTTP", "bytestring"], DirectedEdge["EntrezHTTP", "conduit"], DirectedEdge["EntrezHTTP", "HTTP"], DirectedEdge["EntrezHTTP", "http-conduit"], DirectedEdge["EntrezHTTP", "hxt"], DirectedEdge["EntrezHTTP", "mtl"], DirectedEdge["EntrezHTTP", "network"], DirectedEdge["EntrezHTTP", "Taxonomy"], DirectedEdge["EntrezHTTP", "transformers"], DirectedEdge["EnumContainers", "base"], DirectedEdge["EnumContainers", "containers"], DirectedEdge["EnumContainers", "deepseq"], DirectedEdge["EnumMap", "base"], DirectedEdge["EnumMap", "containers"], DirectedEdge["Eq", "array"], DirectedEdge["Eq", "base"], DirectedEdge["Eq", "containers"], DirectedEdge["Eq", "filepath"], DirectedEdge["Eq", "HaXml"], DirectedEdge["Eq", "mtl"], DirectedEdge["Eq", "parsec"], DirectedEdge["Eq", "template-haskell"], DirectedEdge["Eq", "transformers"], DirectedEdge["EqualitySolver", "base"], DirectedEdge["EqualitySolver", "containers"], DirectedEdge["EqualitySolver", "HUnit"], DirectedEdge["EqualitySolver", "mtl"], DirectedEdge["EqualitySolver", "union-find-array"], DirectedEdge["EsounD", "base"], DirectedEdge["EsounD", "base-unicode-symbols"], DirectedEdge["EsounD", "bindings-EsounD"], DirectedEdge["EsounD", "monad-control"], DirectedEdge["EsounD", "network"], DirectedEdge["EsounD", "regions"], DirectedEdge["EsounD", "safer-file-handles"], DirectedEdge["EsounD", "storablevector"], DirectedEdge["EsounD", "transformers"], DirectedEdge["EsounD", "unix"], DirectedEdge["EstProgress", "ansi-terminal"], DirectedEdge["EstProgress", "base"], DirectedEdge["EstProgress", "mtl"], DirectedEdge["EtaMOO", "array"], DirectedEdge["EtaMOO", "async"], DirectedEdge["EtaMOO", "base"], DirectedEdge["EtaMOO", "bytestring"], DirectedEdge["EtaMOO", "case-insensitive"], DirectedEdge["EtaMOO", "containers"], DirectedEdge["EtaMOO", "cryptonite"], DirectedEdge["EtaMOO", "hashable"], DirectedEdge["EtaMOO", "haskeline"], DirectedEdge["EtaMOO", "memory"], DirectedEdge["EtaMOO", "mtl"], DirectedEdge["EtaMOO", "network"], DirectedEdge["EtaMOO", "parsec"], DirectedEdge["EtaMOO", "pipes"], DirectedEdge["EtaMOO", "pipes-bytestring"], DirectedEdge["EtaMOO", "pipes-concurrency"], DirectedEdge["EtaMOO", "pipes-network"], DirectedEdge["EtaMOO", "random"], DirectedEdge["EtaMOO", "stm"], DirectedEdge["EtaMOO", "stm-chans"], DirectedEdge["EtaMOO", "text"], DirectedEdge["EtaMOO", "time"], DirectedEdge["EtaMOO", "transformers"], DirectedEdge["EtaMOO", "unix"], DirectedEdge["EtaMOO", "unordered-containers"], DirectedEdge["EtaMOO", "vcache"], DirectedEdge["EtaMOO", "vector"], DirectedEdge["Etage", "base"], DirectedEdge["Etage", "containers"], DirectedEdge["Etage", "ghc"], DirectedEdge["Etage", "mtl"], DirectedEdge["Etage", "operational"], DirectedEdge["Etage", "random"], DirectedEdge["Etage", "SafeSemaphore"], DirectedEdge["Etage", "time"], DirectedEdge["Etage", "unix"], DirectedEdge["Etage-Graph", "array"], DirectedEdge["Etage-Graph", "base"], DirectedEdge["Etage-Graph", "containers"], DirectedEdge["Etage-Graph", "deepseq"], DirectedEdge["Etage-Graph", "Etage"], DirectedEdge["Etage-Graph", "Etage-Graph"], DirectedEdge["Etage-Graph", "fgl"], DirectedEdge["Etage-Graph", "mtl"], DirectedEdge["Etage-Graph", "parallel"], DirectedEdge["Etage-Graph", "random"], DirectedEdge["Etage-Graph", "time"], DirectedEdge["Eternal10Seconds", "base"], DirectedEdge["Eternal10Seconds", "SDL"], DirectedEdge["Eternal10Seconds", "SDL-mixer"], DirectedEdge["Etherbunny", "base"], DirectedEdge["Etherbunny", "binary"], DirectedEdge["Etherbunny", "bytestring"], DirectedEdge["Etherbunny", "network"], DirectedEdge["Etherbunny", "pcap"], DirectedEdge["EuroIT", "base"], DirectedEdge["Euterpea", "array"], DirectedEdge["Euterpea", "arrows"], DirectedEdge["Euterpea", "base"], DirectedEdge["Euterpea", "bytestring"], DirectedEdge["Euterpea", "containers"], DirectedEdge["Euterpea", "deepseq"], DirectedEdge["Euterpea", "ghc-prim"], DirectedEdge["Euterpea", "HCodecs"], DirectedEdge["Euterpea", "heap"], DirectedEdge["Euterpea", "PortMidi"], DirectedEdge["Euterpea", "random"], DirectedEdge["Euterpea", "stm"], DirectedEdge["EventSocket", "base"], DirectedEdge["EventSocket", "bytestring"], DirectedEdge["EventSocket", "containers"], DirectedEdge["EventSocket", "mtl"], DirectedEdge["EventSocket", "network"], DirectedEdge["Extra", "base"], DirectedEdge["Extra", "bytestring"], DirectedEdge["Extra", "bzlib"], DirectedEdge["Extra", "containers"], DirectedEdge["Extra", "directory"], DirectedEdge["Extra", "filepath"], DirectedEdge["Extra", "HUnit"], DirectedEdge["Extra", "mtl"], DirectedEdge["Extra", "network"], DirectedEdge["Extra", "network-uri"], DirectedEdge["Extra", "old-locale"], DirectedEdge["Extra", "old-time"], DirectedEdge["Extra", "pretty"], DirectedEdge["Extra", "process"], DirectedEdge["Extra", "QuickCheck"], DirectedEdge["Extra", "random"], DirectedEdge["Extra", "regex-compat"], DirectedEdge["Extra", "time"], DirectedEdge["Extra", "unix"], DirectedEdge["Extra", "Unixutils"], DirectedEdge["Extra", "zlib"], DirectedEdge["FComp", "array"], DirectedEdge["FComp", "base"], DirectedEdge["FComp", "binary"], DirectedEdge["FComp", "deepseq"], DirectedEdge["FComp", "ghc-prim"], DirectedEdge["FComp", "HarmTrace-Base"], DirectedEdge["FComp", "haskore"], DirectedEdge["FComp", "instant-generics"], DirectedEdge["FComp", "ListLike"], DirectedEdge["FComp", "midi"], DirectedEdge["FComp", "mtl"], DirectedEdge["FComp", "QuickCheck"], DirectedEdge["FComp", "random"], DirectedEdge["FComp", "template-haskell"], DirectedEdge["FComp", "time"], DirectedEdge["FComp", "uu-parsinglib"], DirectedEdge["FM-SBLEX", "array"], DirectedEdge["FM-SBLEX", "base"], DirectedEdge["FM-SBLEX", "containers"], DirectedEdge["FModExRaw", "base"], DirectedEdge["FPretty", "base"], DirectedEdge["FPretty", "containers"], DirectedEdge["FTGL", "base"], DirectedEdge["FTGL-bytestring", "base"], DirectedEdge["FTGL-bytestring", "bytestring"], DirectedEdge["FTGL-bytestring", "StateVar-transformer"], DirectedEdge["FTGL-bytestring", "transformers"], DirectedEdge["FTPLine", "ansi-terminal"], DirectedEdge["FTPLine", "base"], DirectedEdge["FTPLine", "bytestring"], DirectedEdge["FTPLine", "directory"], DirectedEdge["FTPLine", "ftphs"], DirectedEdge["FTPLine", "haskeline"], DirectedEdge["FTPLine", "mtl"], DirectedEdge["FTPLine", "network"], DirectedEdge["FTPLine", "strict"], DirectedEdge["Facts", "AC-Angle"], DirectedEdge["Facts", "base"], DirectedEdge["Facts", "containers"], DirectedEdge["Facts", "digits"], DirectedEdge["Facts", "QuickCheck"], DirectedEdge["Facts", "template-haskell"], DirectedEdge["FailureT", "transformers"], DirectedEdge["FailureT", "base"], DirectedEdge["FailureT", "base-unicode-symbols"], DirectedEdge["FailureT", "mmtl"], DirectedEdge["FastxPipe", "pipes-fastx"], DirectedEdge["FastxPipe", "attoparsec"], DirectedEdge["FastxPipe", "base"], DirectedEdge["FastxPipe", "blaze-builder"], DirectedEdge["FastxPipe", "bytestring"], DirectedEdge["FastxPipe", "pipes"], DirectedEdge["FastxPipe", "pipes-attoparsec"], DirectedEdge["FastxPipe", "pipes-bytestring"], DirectedEdge["FenwickTree", "base"], DirectedEdge["FenwickTree", "QuickCheck"], DirectedEdge["FenwickTree", "template-haskell"], DirectedEdge["FermatsLastMargin", "base"], DirectedEdge["FermatsLastMargin", "HAppS-Data"], DirectedEdge["FermatsLastMargin", "HAppS-IxSet"], DirectedEdge["FermatsLastMargin", "HAppS-Server"], DirectedEdge["FermatsLastMargin", "HAppS-State"], DirectedEdge["FermatsLastMargin", "HAppS-Util"], DirectedEdge["FermatsLastMargin", "HaXml"], DirectedEdge["FermatsLastMargin", "mtl"], DirectedEdge["FermatsLastMargin", "old-time"], DirectedEdge["FermatsLastMargin", "random"], DirectedEdge["FermatsLastMargin", "syb-with-class"], DirectedEdge["FermatsLastMargin", "template-haskell"], DirectedEdge["FerryCore", "base"], DirectedEdge["FerryCore", "containers"], DirectedEdge["FerryCore", "HaXml"], DirectedEdge["FerryCore", "mtl"], DirectedEdge["FerryCore", "parsec"], DirectedEdge["FerryCore", "pretty"], DirectedEdge["FerryCore", "TableAlgebra"], DirectedEdge["FerryCore", "template-haskell"], DirectedEdge["Feval", "base"], DirectedEdge["Feval", "containers"], DirectedEdge["Feval", "mtl"], DirectedEdge["Feval", "parsec"], DirectedEdge["FieldTrip", "base"], DirectedEdge["FieldTrip", "GLUT"], DirectedEdge["FieldTrip", "graphicsFormats"], DirectedEdge["FieldTrip", "MemoTrie"], DirectedEdge["FieldTrip", "old-time"], DirectedEdge["FieldTrip", "OpenGL"], DirectedEdge["FieldTrip", "TypeCompose"], DirectedEdge["FieldTrip", "vector-space"], DirectedEdge["FileManip", "filemanip"], DirectedEdge["FileManip", "base"], DirectedEdge["FileManip", "bytestring"], DirectedEdge["FileManip", "directory"], DirectedEdge["FileManip", "extensible-exceptions"], DirectedEdge["FileManip", "filepath"], DirectedEdge["FileManip", "mtl"], DirectedEdge["FileManip", "unix"], DirectedEdge["FileManipCompat", "base"], DirectedEdge["FileManipCompat", "bytestring"], DirectedEdge["FileManipCompat", "directory"], DirectedEdge["FileManipCompat", "filepath"], DirectedEdge["FileManipCompat", "mtl"], DirectedEdge["FileManipCompat", "unix-compat"], DirectedEdge["FilePather", "filepather"], DirectedEdge["FilePather", "base"], DirectedEdge["FilePather", "comonad"], DirectedEdge["FilePather", "comonad-transformers"], DirectedEdge["FilePather", "data-lens"], DirectedEdge["FilePather", "directory"], DirectedEdge["FilePather", "filepath"], DirectedEdge["FilePather", "mtl"], DirectedEdge["FilePather", "transformers"], DirectedEdge["FileSystem", "base"], DirectedEdge["FileSystem", "binary"], DirectedEdge["FileSystem", "bytestring"], DirectedEdge["FileSystem", "directory"], DirectedEdge["FileSystem", "filepath"], DirectedEdge["FileSystem", "mtl"], DirectedEdge["FileSystem", "old-time"], DirectedEdge["Finance-Quote-Yahoo", "base"], DirectedEdge["Finance-Quote-Yahoo", "bytestring"], DirectedEdge["Finance-Quote-Yahoo", "http-conduit"], DirectedEdge["Finance-Quote-Yahoo", "network"], DirectedEdge["Finance-Quote-Yahoo", "old-locale"], DirectedEdge["Finance-Quote-Yahoo", "time"], DirectedEdge["Finance-Treasury", "base"], DirectedEdge["Finance-Treasury", "containers"], DirectedEdge["Finance-Treasury", "HTTP"], DirectedEdge["Finance-Treasury", "HTTP-Simple"], DirectedEdge["Finance-Treasury", "hxt"], DirectedEdge["Finance-Treasury", "hxt-filter"], DirectedEdge["Finance-Treasury", "network"], DirectedEdge["Finance-Treasury", "old-locale"], DirectedEdge["Finance-Treasury", "time"], DirectedEdge["FindBin", "base"], DirectedEdge["FindBin", "directory"], DirectedEdge["FindBin", "filepath"], DirectedEdge["FiniteMap", "containers"], DirectedEdge["FiniteMap", "base"], DirectedEdge["FirstOrderTheory", "base"], DirectedEdge["FirstOrderTheory", "containers"], DirectedEdge["FirstOrderTheory", "Proper"], DirectedEdge["FixedPoint-simple", "base"], DirectedEdge["FixedPoint-simple", "deepseq"], DirectedEdge["FixedPoint-simple", "template-haskell"], DirectedEdge["Flippi", "base"], DirectedEdge["Flippi", "cgi"], DirectedEdge["Flippi", "containers"], DirectedEdge["Flippi", "directory"], DirectedEdge["Flippi", "old-time"], DirectedEdge["Flippi", "parsec"], DirectedEdge["Flippi", "xhtml"], DirectedEdge["Focus", "base"], DirectedEdge["Focus", "MissingH"], DirectedEdge["Focus", "split"], DirectedEdge["Folly", "base"], DirectedEdge["Folly", "containers"], DirectedEdge["Folly", "HUnit"], DirectedEdge["Folly", "parsec"], DirectedEdge["FontyFruity", "base"], DirectedEdge["FontyFruity", "binary"], DirectedEdge["FontyFruity", "bytestring"], DirectedEdge["FontyFruity", "containers"], DirectedEdge["FontyFruity", "deepseq"], DirectedEdge["FontyFruity", "directory"], DirectedEdge["FontyFruity", "filepath"], DirectedEdge["FontyFruity", "text"], DirectedEdge["FontyFruity", "vector"], DirectedEdge["FontyFruity", "xml"], DirectedEdge["ForSyDe", "array"], DirectedEdge["ForSyDe", "base"], DirectedEdge["ForSyDe", "containers"], DirectedEdge["ForSyDe", "directory"], DirectedEdge["ForSyDe", "filepath"], DirectedEdge["ForSyDe", "mtl"], DirectedEdge["ForSyDe", "old-time"], DirectedEdge["ForSyDe", "parameterized-data"], DirectedEdge["ForSyDe", "pretty"], DirectedEdge["ForSyDe", "process"], DirectedEdge["ForSyDe", "random"], DirectedEdge["ForSyDe", "regex-posix"], DirectedEdge["ForSyDe", "template-haskell"], DirectedEdge["ForSyDe", "type-level"], DirectedEdge["ForestStructures", "base"], DirectedEdge["ForestStructures", "containers"], DirectedEdge["ForestStructures", "fgl"], DirectedEdge["ForestStructures", "unordered-containers"], DirectedEdge["ForestStructures", "vector"], DirectedEdge["ForestStructures", "vector-th-unbox"], DirectedEdge["ForkableT", "base"], DirectedEdge["ForkableT", "monad-control"], DirectedEdge["ForkableT", "mtl"], DirectedEdge["ForkableT", "resourcet"], DirectedEdge["FormalGrammars", "ADPfusion"], DirectedEdge["FormalGrammars", "ansi-wl-pprint"], DirectedEdge["FormalGrammars", "base"], DirectedEdge["FormalGrammars", "bytestring"], DirectedEdge["FormalGrammars", "cmdargs"], DirectedEdge["FormalGrammars", "containers"], DirectedEdge["FormalGrammars", "data-default"], DirectedEdge["FormalGrammars", "FormalGrammars"], DirectedEdge["FormalGrammars", "HaTeX"], DirectedEdge["FormalGrammars", "lens"], DirectedEdge["FormalGrammars", "mtl"], DirectedEdge["FormalGrammars", "parsers"], DirectedEdge["FormalGrammars", "PrimitiveArray"], DirectedEdge["FormalGrammars", "semigroups"], DirectedEdge["FormalGrammars", "template-haskell"], DirectedEdge["FormalGrammars", "text"], DirectedEdge["FormalGrammars", "transformers"], DirectedEdge["FormalGrammars", "trifecta"], DirectedEdge["FormalGrammars", "unordered-containers"], DirectedEdge["FormalGrammars", "vector"], DirectedEdge["Foster", "array"], DirectedEdge["Foster", "base"], DirectedEdge["Foster", "cmdtheline"], DirectedEdge["Foster", "containers"], DirectedEdge["Foster", "random"], DirectedEdge["Foster", "strict"], DirectedEdge["FpMLv53", "base"], DirectedEdge["FpMLv53", "HaXml"], DirectedEdge["FractalArt", "base"], DirectedEdge["FractalArt", "directory"], DirectedEdge["FractalArt", "filepath"], DirectedEdge["FractalArt", "JuicyPixels"], DirectedEdge["FractalArt", "mwc-random"], DirectedEdge["FractalArt", "primitive"], DirectedEdge["FractalArt", "random"], DirectedEdge["FractalArt", "vector"], DirectedEdge["Fractaler", "base"], DirectedEdge["Fractaler", "FTGL"], DirectedEdge["Fractaler", "GLFW-b"], DirectedEdge["Fractaler", "OpenGLRaw"], DirectedEdge["Fractaler", "parallel"], DirectedEdge["Fractaler", "random"], DirectedEdge["Fractaler", "time"], DirectedEdge["Frames", "base"], DirectedEdge["Frames", "ghc-prim"], DirectedEdge["Frames", "pipes"], DirectedEdge["Frames", "primitive"], DirectedEdge["Frames", "readable"], DirectedEdge["Frames", "template-haskell"], DirectedEdge["Frames", "text"], DirectedEdge["Frames", "transformers"], DirectedEdge["Frames", "vector"], DirectedEdge["Frames", "vinyl"], DirectedEdge["Frank", "base"], DirectedEdge["Frank", "mtl"], DirectedEdge["Frank", "newtype"], DirectedEdge["Frank", "she"], DirectedEdge["Frank", "void"], DirectedEdge["FreeTypeGL", "FTGL"], DirectedEdge["FreeTypeGL", "base"], DirectedEdge["FreeTypeGL", "FreeTypeGL"], DirectedEdge["FreeTypeGL", "GLFW-b"], DirectedEdge["FreeTypeGL", "OpenGL"], DirectedEdge["FunGEn", "base"], DirectedEdge["FunGEn", "base-compat"], DirectedEdge["FunGEn", "FunGEn"], DirectedEdge["FunGEn", "GLUT"], DirectedEdge["FunGEn", "OpenGL"], DirectedEdge["FunGEn", "random"], DirectedEdge["Fungi", "base"], DirectedEdge["Fungi", "bytestring"], DirectedEdge["Fungi", "containers"], DirectedEdge["Fungi", "directory"], DirectedEdge["Fungi", "filepath"], DirectedEdge["Fungi", "ListZipper"], DirectedEdge["Fungi", "mtl"], DirectedEdge["Fungi", "mwc-random"], DirectedEdge["Fungi", "old-time"], DirectedEdge["Fungi", "process"], DirectedEdge["Fungi", "random"], DirectedEdge["Fungi", "transformers"], DirectedEdge["Fungi", "tuple"], DirectedEdge["GA", "base"], DirectedEdge["GA", "directory"], DirectedEdge["GA", "random"], DirectedEdge["GA", "transformers"], DirectedEdge["GGg", "base"], DirectedEdge["GGg", "bimap"], DirectedEdge["GHood", "array"], DirectedEdge["GHood", "base"], DirectedEdge["GHood", "process"], DirectedEdge["GLFW", "base"], DirectedEdge["GLFW", "OpenGL"], DirectedEdge["GLFW-OGL", "base"], DirectedEdge["GLFW-OGL", "mtl"], DirectedEdge["GLFW-OGL", "OGL"], DirectedEdge["GLFW-b", "base"], DirectedEdge["GLFW-b", "bindings-GLFW"], DirectedEdge["GLFW-b-demo", "base"], DirectedEdge["GLFW-b-demo", "GLFW-b"], DirectedEdge["GLFW-b-demo", "mtl"], DirectedEdge["GLFW-b-demo", "OpenGL"], DirectedEdge["GLFW-b-demo", "pretty"], DirectedEdge["GLFW-b-demo", "stm"], DirectedEdge["GLFW-b-demo", "transformers"], DirectedEdge["GLFW-task", "base"], DirectedEdge["GLFW-task", "GLFW"], DirectedEdge["GLFW-task", "monad-task"], DirectedEdge["GLFW-task", "OpenGL"], DirectedEdge["GLFW-task", "transformers"], DirectedEdge["GLHUI", "base"], DirectedEdge["GLM", "aeson"], DirectedEdge["GLM", "base"], DirectedEdge["GLM", "bytestring"], DirectedEdge["GLM", "GLM"], DirectedEdge["GLM", "interpolate"], DirectedEdge["GLM", "lens"], DirectedEdge["GLM", "mtl"], DirectedEdge["GLM", "parsec"], DirectedEdge["GLM", "QuickCheck"], DirectedEdge["GLM", "test-framework"], DirectedEdge["GLM", "test-framework-th"], DirectedEdge["GLM", "transformers"], DirectedEdge["GLMatrix", "base"], DirectedEdge["GLMatrix", "OpenGLRaw"], DirectedEdge["GLURaw", "base"], DirectedEdge["GLURaw", "OpenGLRaw"], DirectedEdge["GLURaw", "transformers"], DirectedEdge["GLUT", "array"], DirectedEdge["GLUT", "base"], DirectedEdge["GLUT", "bytestring"], DirectedEdge["GLUT", "containers"], DirectedEdge["GLUT", "GLUT"], DirectedEdge["GLUT", "OpenGL"], DirectedEdge["GLUT", "OpenGLRaw"], DirectedEdge["GLUT", "random"], DirectedEdge["GLUT", "StateVar"], DirectedEdge["GLUT", "transformers"], DirectedEdge["GLUtil", "array"], DirectedEdge["GLUtil", "base"], DirectedEdge["GLUtil", "bytestring"], DirectedEdge["GLUtil", "containers"], DirectedEdge["GLUtil", "directory"], DirectedEdge["GLUtil", "filepath"], DirectedEdge["GLUtil", "hpp"], DirectedEdge["GLUtil", "JuicyPixels"], DirectedEdge["GLUtil", "linear"], DirectedEdge["GLUtil", "OpenGL"], DirectedEdge["GLUtil", "OpenGLRaw"], DirectedEdge["GLUtil", "transformers"], DirectedEdge["GLUtil", "vector"], DirectedEdge["GPX", "base"], DirectedEdge["GPX", "comonad"], DirectedEdge["GPX", "comonad-transformers"], DirectedEdge["GPX", "containers"], DirectedEdge["GPX", "data-lens"], DirectedEdge["GPX", "hxt"], DirectedEdge["GPX", "newtype"], DirectedEdge["GPX", "xsd"], DirectedEdge["GPipe", "base"], DirectedEdge["GPipe", "Boolean"], DirectedEdge["GPipe", "containers"], DirectedEdge["GPipe", "exception-transformers"], DirectedEdge["GPipe", "gl"], DirectedEdge["GPipe", "hashtables"], DirectedEdge["GPipe", "linear"], DirectedEdge["GPipe", "transformers"], DirectedEdge["GPipe-Collada", "array"], DirectedEdge["GPipe-Collada", "base"], DirectedEdge["GPipe-Collada", "containers"], DirectedEdge["GPipe-Collada", "GPipe"], DirectedEdge["GPipe-Collada", "HaXml"], DirectedEdge["GPipe-Collada", "mtl"], DirectedEdge["GPipe-Collada", "Vec"], DirectedEdge["GPipe-Examples", "base"], DirectedEdge["GPipe-Examples", "GLUT"], DirectedEdge["GPipe-Examples", "GPipe"], DirectedEdge["GPipe-Examples", "GPipe-TextureLoad"], DirectedEdge["GPipe-Examples", "Vec"], DirectedEdge["GPipe-Examples", "Vec-Transform"], DirectedEdge["GPipe-GLFW", "base"], DirectedEdge["GPipe-GLFW", "GLFW-b"], DirectedEdge["GPipe-GLFW", "GPipe"], DirectedEdge["GPipe-GLFW", "transformers"], DirectedEdge["GPipe-TextureLoad", "base"], DirectedEdge["GPipe-TextureLoad", "bitmap"], DirectedEdge["GPipe-TextureLoad", "GPipe"], DirectedEdge["GPipe-TextureLoad", "stb-image"], DirectedEdge["GTALib", "base"], DirectedEdge["GTALib", "containers"], DirectedEdge["GTALib", "deepseq"], DirectedEdge["GTALib", "parallel"], DirectedEdge["GTALib", "template-haskell"], DirectedEdge["Gamgine", "array"], DirectedEdge["Gamgine", "base"], DirectedEdge["Gamgine", "bytestring"], DirectedEdge["Gamgine", "composition"], DirectedEdge["Gamgine", "cpphs"], DirectedEdge["Gamgine", "data-lens"], DirectedEdge["Gamgine", "directory"], DirectedEdge["Gamgine", "filepath"], DirectedEdge["Gamgine", "GLFW-b"], DirectedEdge["Gamgine", "ListZipper"], DirectedEdge["Gamgine", "mtl"], DirectedEdge["Gamgine", "OpenGLRaw"], DirectedEdge["Gamgine", "parsec"], DirectedEdge["Gamgine", "pretty-show"], DirectedEdge["Gamgine", "StateVar"], DirectedEdge["Gamgine", "time"], DirectedEdge["Gamgine", "unordered-containers"], DirectedEdge["Gamgine", "utility-ht"], DirectedEdge["Gamgine", "Vec"], DirectedEdge["Gamgine", "zlib"], DirectedEdge["Ganymede", "base"], DirectedEdge["Ganymede", "containers"], DirectedEdge["Ganymede", "directory"], DirectedEdge["Ganymede", "filepath"], DirectedEdge["Ganymede", "mtl"], DirectedEdge["Ganymede", "parsec"], DirectedEdge["Ganymede", "transformers"], DirectedEdge["GaussQuadIntegration", "base"], DirectedEdge["GeBoP", "array"], DirectedEdge["GeBoP", "base"], DirectedEdge["GeBoP", "directory"], DirectedEdge["GeBoP", "random"], DirectedEdge["GeBoP", "wx"], DirectedEdge["GeBoP", "wxcore"], DirectedEdge["GenI", "base"], DirectedEdge["GenI", "binary"], DirectedEdge["GenI", "bytestring"], DirectedEdge["GenI", "cabal-macosx"], DirectedEdge["GenI", "containers"], DirectedEdge["GenI", "deepseq"], DirectedEdge["GenI", "directory"], DirectedEdge["GenI", "errors"], DirectedEdge["GenI", "filepath"], DirectedEdge["GenI", "GenI"], DirectedEdge["GenI", "hslogger"], DirectedEdge["GenI", "json"], DirectedEdge["GenI", "mtl"], DirectedEdge["GenI", "old-locale"], DirectedEdge["GenI", "ordered"], DirectedEdge["GenI", "parsec"], DirectedEdge["GenI", "process"], DirectedEdge["GenI", "syb"], DirectedEdge["GenI", "text"], DirectedEdge["GenI", "time"], DirectedEdge["GenI", "transformers"], DirectedEdge["GenI", "yaml-light"], DirectedEdge["GenSmsPdu", "base"], DirectedEdge["GenSmsPdu", "QuickCheck"], DirectedEdge["GenSmsPdu", "random"], DirectedEdge["Genbank", "base"], DirectedEdge["Genbank", "biocore"], DirectedEdge["Genbank", "biofasta"], DirectedEdge["Genbank", "bytestring"], DirectedEdge["Genbank", "cmdargs"], DirectedEdge["Genbank", "Genbank"], DirectedEdge["Genbank", "parsec"], DirectedEdge["Genbank", "split"], DirectedEdge["GeneralTicTacToe", "base"], DirectedEdge["GenericPretty", "base"], DirectedEdge["GenericPretty", "ghc-prim"], DirectedEdge["GenericPretty", "pretty"], DirectedEdge["GenussFold", "ADPfusion"], DirectedEdge["GenussFold", "ansi-wl-pprint"], DirectedEdge["GenussFold", "base"], DirectedEdge["GenussFold", "bytestring"], DirectedEdge["GenussFold", "cmdargs"], DirectedEdge["GenussFold", "containers"], DirectedEdge["GenussFold", "data-default"], DirectedEdge["GenussFold", "FormalGrammars"], DirectedEdge["GenussFold", "GenussFold"], DirectedEdge["GenussFold", "lens"], DirectedEdge["GenussFold", "mtl"], DirectedEdge["GenussFold", "PrimitiveArray"], DirectedEdge["GenussFold", "semigroups"], DirectedEdge["GenussFold", "template-haskell"], DirectedEdge["GenussFold", "text"], DirectedEdge["GenussFold", "transformers"], DirectedEdge["GenussFold", "unordered-containers"], DirectedEdge["GenussFold", "vector"], DirectedEdge["GeoIp", "base"], DirectedEdge["GeoIp", "bytestring"], DirectedEdge["GeoIp", "bytestring-mmap"], DirectedEdge["GeoIp", "syb"], DirectedEdge["GeocoderOpenCage", "aeson"], DirectedEdge["GeocoderOpenCage", "base"], DirectedEdge["GeocoderOpenCage", "bytestring"], DirectedEdge["GeocoderOpenCage", "HTTP"], DirectedEdge["GeocoderOpenCage", "text"], DirectedEdge["Geodetic", "geodetic"], DirectedEdge["Geodetic", "base"], DirectedEdge["GeomPredicates", "base"], DirectedEdge["GeomPredicates-SSE", "base"], DirectedEdge["GeomPredicates-SSE", "GeomPredicates"], DirectedEdge["GiST", "base"], DirectedEdge["GiST", "text"], DirectedEdge["Gifcurry", "base"], DirectedEdge["Gifcurry", "cmdargs"], DirectedEdge["Gifcurry", "directory"], DirectedEdge["Gifcurry", "process"], DirectedEdge["Gifcurry", "temporary"], DirectedEdge["GiveYouAHead", "base"], DirectedEdge["GiveYouAHead", "directory"], DirectedEdge["GiveYouAHead", "extra"], DirectedEdge["GiveYouAHead", "old-time"], DirectedEdge["GiveYouAHead", "process"], DirectedEdge["Glob", "base"], DirectedEdge["Glob", "containers"], DirectedEdge["Glob", "directory"], DirectedEdge["Glob", "dlist"], DirectedEdge["Glob", "filepath"], DirectedEdge["Glob", "transformers"], DirectedEdge["GlomeTrace", "array"], DirectedEdge["GlomeTrace", "base"], DirectedEdge["GlomeTrace", "GlomeVec"], DirectedEdge["GlomeVec", "array"], DirectedEdge["GlomeVec", "base"], DirectedEdge["GlomeView", "base"], DirectedEdge["GlomeView", "deepseq"], DirectedEdge["GlomeView", "GlomeTrace"], DirectedEdge["GlomeView", "GlomeVec"], DirectedEdge["GlomeView", "monad-par"], DirectedEdge["GlomeView", "random"], DirectedEdge["GlomeView", "SDL"], DirectedEdge["GlomeView", "time"], DirectedEdge["GlomeView", "vector"], DirectedEdge["GoogleChart", "base"], DirectedEdge["GoogleDirections", "AttoJson"], DirectedEdge["GoogleDirections", "base"], DirectedEdge["GoogleDirections", "bytestring"], DirectedEdge["GoogleDirections", "containers"], DirectedEdge["GoogleDirections", "dataenc"], DirectedEdge["GoogleDirections", "download-curl"], DirectedEdge["GoogleSB", "base"], DirectedEdge["GoogleSB", "binary"], DirectedEdge["GoogleSB", "Crypto"], DirectedEdge["GoogleSB", "HTTP"], DirectedEdge["GoogleSB", "mtl"], DirectedEdge["GoogleSB", "network"], DirectedEdge["GoogleSB", "split"], DirectedEdge["GoogleSuggest", "base"], DirectedEdge["GoogleSuggest", "dataenc"], DirectedEdge["GoogleSuggest", "download-curl"], DirectedEdge["GoogleSuggest", "utf8-string"], DirectedEdge["GoogleSuggest", "xml"], DirectedEdge["GoogleTranslate", "AttoJson"], DirectedEdge["GoogleTranslate", "base"], DirectedEdge["GoogleTranslate", "bytestring"], DirectedEdge["GoogleTranslate", "dataenc"], DirectedEdge["GoogleTranslate", "download-curl"], DirectedEdge["GotoT-transformers", "base"], DirectedEdge["GotoT-transformers", "transformers"], DirectedEdge["GrammarProducts", "ADPfusion"], DirectedEdge["GrammarProducts", "ansi-wl-pprint"], DirectedEdge["GrammarProducts", "base"], DirectedEdge["GrammarProducts", "bytestring"], DirectedEdge["GrammarProducts", "containers"], DirectedEdge["GrammarProducts", "data-default"], DirectedEdge["GrammarProducts", "FormalGrammars"], DirectedEdge["GrammarProducts", "lens"], DirectedEdge["GrammarProducts", "newtype"], DirectedEdge["GrammarProducts", "parsers"], DirectedEdge["GrammarProducts", "PrimitiveArray"], DirectedEdge["GrammarProducts", "semigroups"], DirectedEdge["GrammarProducts", "template-haskell"], DirectedEdge["GrammarProducts", "transformers"], DirectedEdge["GrammarProducts", "trifecta"], DirectedEdge["Graph500", "array"], DirectedEdge["Graph500", "base"], DirectedEdge["Graph500", "containers"], DirectedEdge["Graph500", "mtl"], DirectedEdge["Graph500", "random"], DirectedEdge["GraphHammer", "array"], DirectedEdge["GraphHammer", "base"], DirectedEdge["GraphHammer", "containers"], DirectedEdge["GraphHammer", "mtl"], DirectedEdge["GraphHammer", "stm"], DirectedEdge["GraphHammer", "time"], DirectedEdge["GraphHammer-examples", "array"], DirectedEdge["GraphHammer-examples", "base"], DirectedEdge["GraphHammer-examples", "containers"], DirectedEdge["GraphHammer-examples", "GraphHammer"], DirectedEdge["GraphHammer-examples", "mtl"], DirectedEdge["GraphSCC", "array"], DirectedEdge["GraphSCC", "base"], DirectedEdge["GraphSCC", "containers"], DirectedEdge["Graphalyze", "array"], DirectedEdge["Graphalyze", "base"], DirectedEdge["Graphalyze", "bktrees"], DirectedEdge["Graphalyze", "containers"], DirectedEdge["Graphalyze", "directory"], DirectedEdge["Graphalyze", "fgl"], DirectedEdge["Graphalyze", "filepath"], DirectedEdge["Graphalyze", "graphviz"], DirectedEdge["Graphalyze", "old-locale"], DirectedEdge["Graphalyze", "pandoc"], DirectedEdge["Graphalyze", "process"], DirectedEdge["Graphalyze", "random"], DirectedEdge["Graphalyze", "text"], DirectedEdge["Graphalyze", "time"], DirectedEdge["Grempa", "array"], DirectedEdge["Grempa", "base"], DirectedEdge["Grempa", "containers"], DirectedEdge["Grempa", "mtl"], DirectedEdge["Grempa", "QuickCheck"], DirectedEdge["Grempa", "template-haskell"], DirectedEdge["Grempa", "th-lift"], DirectedEdge["GroteTrap", "base"], DirectedEdge["GroteTrap", "mtl"], DirectedEdge["GroteTrap", "parsec"], DirectedEdge["GroteTrap", "QuickCheck"], DirectedEdge["GroteTrap", "syb"], DirectedEdge["Grow", "array"], DirectedEdge["Grow", "base"], DirectedEdge["Grow", "bytestring"], DirectedEdge["Grow", "clock"], DirectedEdge["Grow", "containers"], DirectedEdge["Grow", "deepseq"], DirectedEdge["Grow", "definitive-base"], DirectedEdge["Grow", "definitive-filesystem"], DirectedEdge["Grow", "definitive-parser"], DirectedEdge["Grow", "definitive-reactive"], DirectedEdge["Grow", "directory"], DirectedEdge["Grow", "filepath"], DirectedEdge["Grow", "old-locale"], DirectedEdge["Grow", "primitive"], DirectedEdge["Grow", "process"], DirectedEdge["Grow", "time"], DirectedEdge["Grow", "unix"], DirectedEdge["Grow", "vector"], DirectedEdge["GrowlNotify", "base"], DirectedEdge["GrowlNotify", "binary"], DirectedEdge["GrowlNotify", "bytestring"], DirectedEdge["GrowlNotify", "Crypto"], DirectedEdge["GrowlNotify", "network"], DirectedEdge["Gtk2hsGenerics", "array"], DirectedEdge["Gtk2hsGenerics", "base"], DirectedEdge["Gtk2hsGenerics", "cairo"], DirectedEdge["Gtk2hsGenerics", "containers"], DirectedEdge["Gtk2hsGenerics", "glib"], DirectedEdge["Gtk2hsGenerics", "gtk"], DirectedEdge["Gtk2hsGenerics", "mtl"], DirectedEdge["GtkGLTV", "base"], DirectedEdge["GtkGLTV", "bitmap"], DirectedEdge["GtkGLTV", "bitmap-opengl"], DirectedEdge["GtkGLTV", "gtk"], DirectedEdge["GtkGLTV", "gtkglext"], DirectedEdge["GtkGLTV", "GtkTV"], DirectedEdge["GtkGLTV", "OpenGL"], DirectedEdge["GtkGLTV", "stb-image"], DirectedEdge["GtkGLTV", "time"], DirectedEdge["GtkTV", "base"], DirectedEdge["GtkTV", "gtk"], DirectedEdge["GtkTV", "time"], DirectedEdge["GtkTV", "TV"], DirectedEdge["GtkTV", "TypeCompose"], DirectedEdge["GtkTV", "vector-space"], DirectedEdge["GuiHaskell", "base"], DirectedEdge["GuiHaskell", "containers"], DirectedEdge["GuiHaskell", "directory"], DirectedEdge["GuiHaskell", "filepath"], DirectedEdge["GuiHaskell", "glade"], DirectedEdge["GuiHaskell", "gtk"], DirectedEdge["GuiHaskell", "parsec"], DirectedEdge["GuiHaskell", "process"], DirectedEdge["GuiHaskell", "proplang"], DirectedEdge["GuiTV", "base"], DirectedEdge["GuiTV", "DeepArrow"], DirectedEdge["GuiTV", "phooey"], DirectedEdge["GuiTV", "TV"], DirectedEdge["GuiTV", "TypeCompose"], DirectedEdge["H", "base"], DirectedEdge["H", "bytestring"], DirectedEdge["H", "cmdargs"], DirectedEdge["H", "file-embed"], DirectedEdge["H", "inline-r"], DirectedEdge["H", "pretty"], DirectedEdge["H", "process"], DirectedEdge["H", "temporary"], DirectedEdge["H", "vector"], DirectedEdge["HARM", "array"], DirectedEdge["HARM", "base"], DirectedEdge["HAppS-Data", "happstack-data"], DirectedEdge["HAppS-Data", "base"], DirectedEdge["HAppS-Data", "binary"], DirectedEdge["HAppS-Data", "bytestring"], DirectedEdge["HAppS-Data", "containers"], DirectedEdge["HAppS-Data", "HAppS-Util"], DirectedEdge["HAppS-Data", "HaXml"], DirectedEdge["HAppS-Data", "mtl"], DirectedEdge["HAppS-Data", "pretty"], DirectedEdge["HAppS-Data", "syb"], DirectedEdge["HAppS-Data", "syb-with-class"], DirectedEdge["HAppS-Data", "template-haskell"], DirectedEdge["HAppS-IxSet", "happstack-ixset"], DirectedEdge["HAppS-IxSet", "base"], DirectedEdge["HAppS-IxSet", "containers"], DirectedEdge["HAppS-IxSet", "HAppS-Data"], DirectedEdge["HAppS-IxSet", "HAppS-State"], DirectedEdge["HAppS-IxSet", "HAppS-Util"], DirectedEdge["HAppS-IxSet", "hslogger"], DirectedEdge["HAppS-IxSet", "mtl"], DirectedEdge["HAppS-IxSet", "syb"], DirectedEdge["HAppS-IxSet", "syb-with-class"], DirectedEdge["HAppS-IxSet", "template-haskell"], DirectedEdge["HAppS-Server", "happstack-server"], DirectedEdge["HAppS-Server", "base"], DirectedEdge["HAppS-Server", "bytestring"], DirectedEdge["HAppS-Server", "containers"], DirectedEdge["HAppS-Server", "directory"], DirectedEdge["HAppS-Server", "HAppS-Data"], DirectedEdge["HAppS-Server", "HAppS-IxSet"], DirectedEdge["HAppS-Server", "HAppS-State"], DirectedEdge["HAppS-Server", "HAppS-Util"], DirectedEdge["HAppS-Server", "HaXml"], DirectedEdge["HAppS-Server", "hslogger"], DirectedEdge["HAppS-Server", "html"], DirectedEdge["HAppS-Server", "HTTP"], DirectedEdge["HAppS-Server", "mtl"], DirectedEdge["HAppS-Server", "network"], DirectedEdge["HAppS-Server", "old-locale"], DirectedEdge["HAppS-Server", "old-time"], DirectedEdge["HAppS-Server", "parsec"], DirectedEdge["HAppS-Server", "process"], DirectedEdge["HAppS-Server", "random"], DirectedEdge["HAppS-Server", "syb"], DirectedEdge["HAppS-Server", "template-haskell"], DirectedEdge["HAppS-Server", "unix"], DirectedEdge["HAppS-Server", "xhtml"], DirectedEdge["HAppS-State", "happstack-state"], DirectedEdge["HAppS-State", "base"], DirectedEdge["HAppS-State", "binary"], DirectedEdge["HAppS-State", "bytestring"], DirectedEdge["HAppS-State", "containers"], DirectedEdge["HAppS-State", "directory"], DirectedEdge["HAppS-State", "filepath"], DirectedEdge["HAppS-State", "HAppS-Data"], DirectedEdge["HAppS-State", "HAppS-Util"], DirectedEdge["HAppS-State", "HaXml"], DirectedEdge["HAppS-State", "hslogger"], DirectedEdge["HAppS-State", "hspread"], DirectedEdge["HAppS-State", "mtl"], DirectedEdge["HAppS-State", "network"], DirectedEdge["HAppS-State", "old-locale"], DirectedEdge["HAppS-State", "old-time"], DirectedEdge["HAppS-State", "random"], DirectedEdge["HAppS-State", "stm"], DirectedEdge["HAppS-State", "syb"], DirectedEdge["HAppS-State", "template-haskell"], DirectedEdge["HAppS-State", "unix"], DirectedEdge["HAppS-Util", "happstack-util"], DirectedEdge["HAppS-Util", "array"], DirectedEdge["HAppS-Util", "base"], DirectedEdge["HAppS-Util", "bytestring"], DirectedEdge["HAppS-Util", "directory"], DirectedEdge["HAppS-Util", "hslogger"], DirectedEdge["HAppS-Util", "mtl"], DirectedEdge["HAppS-Util", "old-time"], DirectedEdge["HAppS-Util", "process"], DirectedEdge["HAppS-Util", "template-haskell"], DirectedEdge["HAppSHelpers", "happstack-helpers"], DirectedEdge["HCL", "base"], DirectedEdge["HCL", "containers"], DirectedEdge["HCL", "mtl"], DirectedEdge["HCL", "QuickCheck"], DirectedEdge["HCL", "random"], DirectedEdge["HCard", "base"], DirectedEdge["HCard", "mtl"], DirectedEdge["HCard", "QuickCheck"], DirectedEdge["HCard", "random"], DirectedEdge["HCard", "random-shuffle"], DirectedEdge["HCodecs", "array"], DirectedEdge["HCodecs", "base"], DirectedEdge["HCodecs", "bytestring"], DirectedEdge["HCodecs", "QuickCheck"], DirectedEdge["HCodecs", "random"], DirectedEdge["HDBC", "base"], DirectedEdge["HDBC", "bytestring"], DirectedEdge["HDBC", "containers"], DirectedEdge["HDBC", "convertible"], DirectedEdge["HDBC", "HUnit"], DirectedEdge["HDBC", "mtl"], DirectedEdge["HDBC", "old-locale"], DirectedEdge["HDBC", "old-time"], DirectedEdge["HDBC", "QuickCheck"], DirectedEdge["HDBC", "testpack"], DirectedEdge["HDBC", "text"], DirectedEdge["HDBC", "time"], DirectedEdge["HDBC", "utf8-string"], DirectedEdge["HDBC-mysql", "base"], DirectedEdge["HDBC-mysql", "bytestring"], DirectedEdge["HDBC-mysql", "HDBC"], DirectedEdge["HDBC-mysql", "time"], DirectedEdge["HDBC-mysql", "utf8-string"], DirectedEdge["HDBC-odbc", "base"], DirectedEdge["HDBC-odbc", "bytestring"], DirectedEdge["HDBC-odbc", "concurrent-extra"], DirectedEdge["HDBC-odbc", "containers"], DirectedEdge["HDBC-odbc", "convertible"], DirectedEdge["HDBC-odbc", "HDBC"], DirectedEdge["HDBC-odbc", "HDBC-odbc"], DirectedEdge["HDBC-odbc", "HUnit"], DirectedEdge["HDBC-odbc", "mtl"], DirectedEdge["HDBC-odbc", "old-locale"], DirectedEdge["HDBC-odbc", "old-time"], DirectedEdge["HDBC-odbc", "QuickCheck"], DirectedEdge["HDBC-odbc", "random"], DirectedEdge["HDBC-odbc", "resource-pool"], DirectedEdge["HDBC-odbc", "testpack"], DirectedEdge["HDBC-odbc", "time"], DirectedEdge["HDBC-odbc", "utf8-string"], DirectedEdge["HDBC-postgresql", "base"], DirectedEdge["HDBC-postgresql", "bytestring"], DirectedEdge["HDBC-postgresql", "containers"], DirectedEdge["HDBC-postgresql", "convertible"], DirectedEdge["HDBC-postgresql", "HDBC"], DirectedEdge["HDBC-postgresql", "HUnit"], DirectedEdge["HDBC-postgresql", "mtl"], DirectedEdge["HDBC-postgresql", "old-locale"], DirectedEdge["HDBC-postgresql", "old-time"], DirectedEdge["HDBC-postgresql", "parsec"], DirectedEdge["HDBC-postgresql", "QuickCheck"], DirectedEdge["HDBC-postgresql", "testpack"], DirectedEdge["HDBC-postgresql", "time"], DirectedEdge["HDBC-postgresql", "utf8-string"], DirectedEdge["HDBC-postgresql-hstore", "attoparsec"], DirectedEdge["HDBC-postgresql-hstore", "base"], DirectedEdge["HDBC-postgresql-hstore", "containers"], DirectedEdge["HDBC-postgresql-hstore", "HDBC"], DirectedEdge["HDBC-postgresql-hstore", "text"], DirectedEdge["HDBC-session", "base"], DirectedEdge["HDBC-session", "HDBC"], DirectedEdge["HDBC-sqlite3", "base"], DirectedEdge["HDBC-sqlite3", "bytestring"], DirectedEdge["HDBC-sqlite3", "containers"], DirectedEdge["HDBC-sqlite3", "convertible"], DirectedEdge["HDBC-sqlite3", "HDBC"], DirectedEdge["HDBC-sqlite3", "HUnit"], DirectedEdge["HDBC-sqlite3", "mtl"], DirectedEdge["HDBC-sqlite3", "old-locale"], DirectedEdge["HDBC-sqlite3", "old-time"], DirectedEdge["HDBC-sqlite3", "testpack"], DirectedEdge["HDBC-sqlite3", "time"], DirectedEdge["HDBC-sqlite3", "utf8-string"], DirectedEdge["HDRUtils", "array"], DirectedEdge["HDRUtils", "base"], DirectedEdge["HDRUtils", "colour"], DirectedEdge["HDRUtils", "containers"], DirectedEdge["HDRUtils", "mtl"], DirectedEdge["HDRUtils", "unix"], DirectedEdge["HERA", "base"], DirectedEdge["HFrequencyQueue", "base"], DirectedEdge["HFrequencyQueue", "c-storable-deriving"], DirectedEdge["HFuse", "base"], DirectedEdge["HFuse", "bytestring"], DirectedEdge["HFuse", "HFuse"], DirectedEdge["HFuse", "unix"], DirectedEdge["HGL", "array"], DirectedEdge["HGL", "base"], DirectedEdge["HGamer3D", "base"], DirectedEdge["HGamer3D", "bytestring"], DirectedEdge["HGamer3D", "cereal"], DirectedEdge["HGamer3D", "clock"], DirectedEdge["HGamer3D", "containers"], DirectedEdge["HGamer3D", "directory"], DirectedEdge["HGamer3D", "filepath"], DirectedEdge["HGamer3D", "fresco-binding"], DirectedEdge["HGamer3D", "messagepack"], DirectedEdge["HGamer3D", "text"], DirectedEdge["HGamer3D", "vect"], DirectedEdge["HGamer3D-API", "HGamer3D"], DirectedEdge["HGamer3D-API", "base"], DirectedEdge["HGamer3D-API", "HGamer3D-Data"], DirectedEdge["HGamer3D-API", "HGamer3D-Ogre-Binding"], DirectedEdge["HGamer3D-API", "HGamer3D-SFML-Binding"], DirectedEdge["HGamer3D-Audio", "HGamer3D"], DirectedEdge["HGamer3D-Audio", "base"], DirectedEdge["HGamer3D-Audio", "containers"], DirectedEdge["HGamer3D-Audio", "HGamer3D-Common"], DirectedEdge["HGamer3D-Audio", "HGamer3D-Data"], DirectedEdge["HGamer3D-Audio", "HGamer3D-SFML-Binding"], DirectedEdge["HGamer3D-Bullet-Binding", "base"], DirectedEdge["HGamer3D-Bullet-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-CAudio-Binding", "HGamer3D-SFML-Binding"], DirectedEdge["HGamer3D-CAudio-Binding", "base"], DirectedEdge["HGamer3D-CAudio-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-CEGUI-Binding", "HGamer3D"], DirectedEdge["HGamer3D-CEGUI-Binding", "base"], DirectedEdge["HGamer3D-CEGUI-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-Common", "HGamer3D"], DirectedEdge["HGamer3D-Common", "base"], DirectedEdge["HGamer3D-Common", "clock"], DirectedEdge["HGamer3D-Common", "containers"], DirectedEdge["HGamer3D-Common", "directory"], DirectedEdge["HGamer3D-Common", "filepath"], DirectedEdge["HGamer3D-Common", "FindBin"], DirectedEdge["HGamer3D-Common", "HGamer3D-Data"], DirectedEdge["HGamer3D-Common", "stm"], DirectedEdge["HGamer3D-Common", "vect"], DirectedEdge["HGamer3D-Data", "HGamer3D"], DirectedEdge["HGamer3D-Data", "base"], DirectedEdge["HGamer3D-Data", "clock"], DirectedEdge["HGamer3D-Data", "containers"], DirectedEdge["HGamer3D-Data", "directory"], DirectedEdge["HGamer3D-Data", "filepath"], DirectedEdge["HGamer3D-Data", "FindBin"], DirectedEdge["HGamer3D-Data", "stm"], DirectedEdge["HGamer3D-Data", "vect"], DirectedEdge["HGamer3D-Enet-Binding", "HGamer3D"], DirectedEdge["HGamer3D-Enet-Binding", "base"], DirectedEdge["HGamer3D-Enet-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-GUI", "HGamer3D-Graphics3D"], DirectedEdge["HGamer3D-GUI", "base"], DirectedEdge["HGamer3D-GUI", "HGamer3D-CEGUI-Binding"], DirectedEdge["HGamer3D-GUI", "HGamer3D-Data"], DirectedEdge["HGamer3D-GUI", "HGamer3D-WinEvent"], DirectedEdge["HGamer3D-GUI", "split"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D"], DirectedEdge["HGamer3D-Graphics3D", "base"], DirectedEdge["HGamer3D-Graphics3D", "containers"], DirectedEdge["HGamer3D-Graphics3D", "directory"], DirectedEdge["HGamer3D-Graphics3D", "filepath"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D-CEGUI-Binding"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D-Common"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D-Data"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D-Ogre-Binding"], DirectedEdge["HGamer3D-Graphics3D", "HGamer3D-SDL2-Binding"], DirectedEdge["HGamer3D-Graphics3D", "mtl"], DirectedEdge["HGamer3D-Graphics3D", "split"], DirectedEdge["HGamer3D-Graphics3D", "transformers"], DirectedEdge["HGamer3D-InputSystem", "HGamer3D"], DirectedEdge["HGamer3D-InputSystem", "base"], DirectedEdge["HGamer3D-InputSystem", "HGamer3D-Common"], DirectedEdge["HGamer3D-InputSystem", "HGamer3D-Data"], DirectedEdge["HGamer3D-InputSystem", "HGamer3D-SDL2-Binding"], DirectedEdge["HGamer3D-InputSystem", "HGamer3D-SFML-Binding"], DirectedEdge["HGamer3D-Network", "HGamer3D"], DirectedEdge["HGamer3D-Network", "base"], DirectedEdge["HGamer3D-Network", "HGamer3D-Common"], DirectedEdge["HGamer3D-Network", "HGamer3D-Data"], DirectedEdge["HGamer3D-Network", "HGamer3D-Enet-Binding"], DirectedEdge["HGamer3D-OIS-Binding", "HGamer3D-SFML-Binding"], DirectedEdge["HGamer3D-OIS-Binding", "base"], DirectedEdge["HGamer3D-OIS-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-OIS-Binding", "HGamer3D-Ogre-Binding"], DirectedEdge["HGamer3D-Ogre-Binding", "HGamer3D"], DirectedEdge["HGamer3D-Ogre-Binding", "base"], DirectedEdge["HGamer3D-Ogre-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-Ogre-Binding", "mtl"], DirectedEdge["HGamer3D-Ogre-Binding", "transformers"], DirectedEdge["HGamer3D-SDL2-Binding", "HGamer3D"], DirectedEdge["HGamer3D-SDL2-Binding", "base"], DirectedEdge["HGamer3D-SDL2-Binding", "bytestring"], DirectedEdge["HGamer3D-SDL2-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-SDL2-Binding", "utf8-string"], DirectedEdge["HGamer3D-SFML-Binding", "HGamer3D"], DirectedEdge["HGamer3D-SFML-Binding", "base"], DirectedEdge["HGamer3D-SFML-Binding", "HGamer3D-Data"], DirectedEdge["HGamer3D-WinEvent", "HGamer3D-Graphics3D"], DirectedEdge["HGamer3D-WinEvent", "base"], DirectedEdge["HGamer3D-WinEvent", "HGamer3D-Data"], DirectedEdge["HGamer3D-WinEvent", "HGamer3D-SDL2-Binding"], DirectedEdge["HGamer3D-WinEvent", "text"], DirectedEdge["HGamer3D-Wire", "HGamer3D"], DirectedEdge["HGamer3D-Wire", "base"], DirectedEdge["HGamer3D-Wire", "containers"], DirectedEdge["HGamer3D-Wire", "HGamer3D"], DirectedEdge["HGamer3D-Wire", "HGamer3D-Audio"], DirectedEdge["HGamer3D-Wire", "HGamer3D-Data"], DirectedEdge["HGamer3D-Wire", "HGamer3D-GUI"], DirectedEdge["HGamer3D-Wire", "HGamer3D-InputSystem"], DirectedEdge["HGamer3D-Wire", "HGamer3D-WinEvent"], DirectedEdge["HGamer3D-Wire", "mtl"], DirectedEdge["HGamer3D-Wire", "netwire"], DirectedEdge["HGamer3D-Wire", "transformers"], DirectedEdge["HGraphStorage", "base"], DirectedEdge["HGraphStorage", "binary"], DirectedEdge["HGraphStorage", "bytestring"], DirectedEdge["HGraphStorage", "containers"], DirectedEdge["HGraphStorage", "data-default"], DirectedEdge["HGraphStorage", "directory"], DirectedEdge["HGraphStorage", "filepath"], DirectedEdge["HGraphStorage", "lifted-base"], DirectedEdge["HGraphStorage", "monad-control"], DirectedEdge["HGraphStorage", "monad-logger"], DirectedEdge["HGraphStorage", "resourcet"], DirectedEdge["HGraphStorage", "text"], DirectedEdge["HGraphStorage", "transformers"], DirectedEdge["HGraphStorage", "transformers-base"], DirectedEdge["HHDL", "base"], DirectedEdge["HHDL", "containers"], DirectedEdge["HHDL", "mtl"], DirectedEdge["HHDL", "template-haskell"], DirectedEdge["HJScript", "base"], DirectedEdge["HJScript", "HJavaScript"], DirectedEdge["HJScript", "hsp"], DirectedEdge["HJScript", "mtl"], DirectedEdge["HJScript", "text"], DirectedEdge["HJVM", "base"], DirectedEdge["HJVM", "containers"], DirectedEdge["HJVM", "filepath"], DirectedEdge["HJVM", "haskell-src-exts"], DirectedEdge["HJVM", "mtl"], DirectedEdge["HJVM", "parsec"], DirectedEdge["HJVM", "process"], DirectedEdge["HJVM", "transformers"], DirectedEdge["HJavaScript", "base"], DirectedEdge["HJavaScript", "pretty"], DirectedEdge["HLearn-algebra", "subhask"], DirectedEdge["HLearn-algebra", "base"], DirectedEdge["HLearn-algebra", "ConstraintKinds"], DirectedEdge["HLearn-algebra", "containers"], DirectedEdge["HLearn-algebra", "deepseq"], DirectedEdge["HLearn-algebra", "hashable"], DirectedEdge["HLearn-algebra", "MonadRandom"], DirectedEdge["HLearn-algebra", "parallel"], DirectedEdge["HLearn-algebra", "random"], DirectedEdge["HLearn-algebra", "template-haskell"], DirectedEdge["HLearn-algebra", "vector"], DirectedEdge["HLearn-algebra", "vector-heterogenous"], DirectedEdge["HLearn-approximation", "base"], DirectedEdge["HLearn-approximation", "ConstraintKinds"], DirectedEdge["HLearn-approximation", "containers"], DirectedEdge["HLearn-approximation", "heap"], DirectedEdge["HLearn-approximation", "HLearn-algebra"], DirectedEdge["HLearn-approximation", "HLearn-datastructures"], DirectedEdge["HLearn-approximation", "HLearn-distributions"], DirectedEdge["HLearn-approximation", "list-extras"], DirectedEdge["HLearn-approximation", "vector"], DirectedEdge["HLearn-classification", "base"], DirectedEdge["HLearn-classification", "binary"], DirectedEdge["HLearn-classification", "bytestring"], DirectedEdge["HLearn-classification", "ConstraintKinds"], DirectedEdge["HLearn-classification", "containers"], DirectedEdge["HLearn-classification", "deepseq"], DirectedEdge["HLearn-classification", "dlist"], DirectedEdge["HLearn-classification", "hashable"], DirectedEdge["HLearn-classification", "HLearn-algebra"], DirectedEdge["HLearn-classification", "HLearn-distributions"], DirectedEdge["HLearn-classification", "list-extras"], DirectedEdge["HLearn-classification", "logfloat"], DirectedEdge["HLearn-classification", "math-functions"], DirectedEdge["HLearn-classification", "MonadRandom"], DirectedEdge["HLearn-classification", "normaldistribution"], DirectedEdge["HLearn-classification", "parsec"], DirectedEdge["HLearn-classification", "primitive"], DirectedEdge["HLearn-classification", "QuickCheck"], DirectedEdge["HLearn-classification", "statistics"], DirectedEdge["HLearn-classification", "vector"], DirectedEdge["HLearn-classification", "vector-th-unbox"], DirectedEdge["HLearn-datastructures", "base"], DirectedEdge["HLearn-datastructures", "ConstraintKinds"], DirectedEdge["HLearn-datastructures", "containers"], DirectedEdge["HLearn-datastructures", "deepseq"], DirectedEdge["HLearn-datastructures", "HLearn-algebra"], DirectedEdge["HLearn-datastructures", "list-extras"], DirectedEdge["HLearn-datastructures", "MonadRandom"], DirectedEdge["HLearn-datastructures", "QuickCheck"], DirectedEdge["HLearn-datastructures", "vector"], DirectedEdge["HLearn-distributions", "array"], DirectedEdge["HLearn-distributions", "base"], DirectedEdge["HLearn-distributions", "ConstraintKinds"], DirectedEdge["HLearn-distributions", "containers"], DirectedEdge["HLearn-distributions", "deepseq"], DirectedEdge["HLearn-distributions", "erf"], DirectedEdge["HLearn-distributions", "gamma"], DirectedEdge["HLearn-distributions", "graphviz"], DirectedEdge["HLearn-distributions", "HLearn-algebra"], DirectedEdge["HLearn-distributions", "HLearn-datastructures"], DirectedEdge["HLearn-distributions", "hmatrix"], DirectedEdge["HLearn-distributions", "list-extras"], DirectedEdge["HLearn-distributions", "math-functions"], DirectedEdge["HLearn-distributions", "MonadRandom"], DirectedEdge["HLearn-distributions", "normaldistribution"], DirectedEdge["HLearn-distributions", "process"], DirectedEdge["HLearn-distributions", "QuickCheck"], DirectedEdge["HLearn-distributions", "statistics"], DirectedEdge["HLearn-distributions", "template-haskell"], DirectedEdge["HLearn-distributions", "vector"], DirectedEdge["HLearn-distributions", "vector-th-unbox"], DirectedEdge["HList", "array"], DirectedEdge["HList", "base"], DirectedEdge["HList", "base-orphans"], DirectedEdge["HList", "ghc-prim"], DirectedEdge["HList", "mtl"], DirectedEdge["HList", "profunctors"], DirectedEdge["HList", "tagged"], DirectedEdge["HList", "template-haskell"], DirectedEdge["HListPP", "applicative-quoters"], DirectedEdge["HListPP", "base"], DirectedEdge["HListPP", "regex-applicative"], DirectedEdge["HLogger", "hlogger"], DirectedEdge["HLogger", "base"], DirectedEdge["HLogger", "old-locale"], DirectedEdge["HLogger", "time"], DirectedEdge["HMap", "base"], DirectedEdge["HMap", "data-default"], DirectedEdge["HMap", "hashable"], DirectedEdge["HMap", "mtl"], DirectedEdge["HMap", "unordered-containers"], DirectedEdge["HNM", "base"], DirectedEdge["HNM", "containers"], DirectedEdge["HNM", "directory"], DirectedEdge["HNM", "glib"], DirectedEdge["HNM", "gtk"], DirectedEdge["HNM", "mtl"], DirectedEdge["HNM", "process"], DirectedEdge["HNM", "regex-posix"], DirectedEdge["HNM", "unix"], DirectedEdge["HODE", "array"], DirectedEdge["HODE", "base"], DirectedEdge["HOpenCV", "allocated-processor"], DirectedEdge["HOpenCV", "base"], DirectedEdge["HOpenCV", "vector-space"], DirectedEdge["HPDF", "array"], DirectedEdge["HPDF", "base"], DirectedEdge["HPDF", "base64-bytestring"], DirectedEdge["HPDF", "binary"], DirectedEdge["HPDF", "bytestring"], DirectedEdge["HPDF", "containers"], DirectedEdge["HPDF", "errors"], DirectedEdge["HPDF", "mtl"], DirectedEdge["HPDF", "random"], DirectedEdge["HPDF", "vector"], DirectedEdge["HPDF", "zlib"], DirectedEdge["HPath", "base"], DirectedEdge["HPath", "Cabal"], DirectedEdge["HPath", "containers"], DirectedEdge["HPath", "directory"], DirectedEdge["HPath", "filepath"], DirectedEdge["HPath", "haskell-src-exts"], DirectedEdge["HPath", "mtl"], DirectedEdge["HPath", "parsec"], DirectedEdge["HPath", "utf8-string"], DirectedEdge["HPi", "base"], DirectedEdge["HPi", "bytestring"], DirectedEdge["HPlot", "base"], DirectedEdge["HPlot", "glade"], DirectedEdge["HPlot", "glib"], DirectedEdge["HPlot", "gtk"], DirectedEdge["HPong", "base"], DirectedEdge["HPong", "data-accessor"], DirectedEdge["HPong", "data-accessor-template"], DirectedEdge["HPong", "GLFW"], DirectedEdge["HPong", "OpenGL"], DirectedEdge["HROOT", "base"], DirectedEdge["HROOT", "fficxx-runtime"], DirectedEdge["HROOT", "HROOT-core"], DirectedEdge["HROOT", "HROOT-graf"], DirectedEdge["HROOT", "HROOT-hist"], DirectedEdge["HROOT", "HROOT-io"], DirectedEdge["HROOT", "HROOT-math"], DirectedEdge["HROOT-core", "base"], DirectedEdge["HROOT-core", "fficxx-runtime"], DirectedEdge["HROOT-graf", "base"], DirectedEdge["HROOT-graf", "fficxx-runtime"], DirectedEdge["HROOT-graf", "HROOT-core"], DirectedEdge["HROOT-graf", "HROOT-hist"], DirectedEdge["HROOT-hist", "base"], DirectedEdge["HROOT-hist", "fficxx-runtime"], DirectedEdge["HROOT-hist", "HROOT-core"], DirectedEdge["HROOT-io", "base"], DirectedEdge["HROOT-io", "fficxx-runtime"], DirectedEdge["HROOT-io", "HROOT-core"], DirectedEdge["HROOT-math", "base"], DirectedEdge["HROOT-math", "fficxx-runtime"], DirectedEdge["HROOT-math", "HROOT-core"], DirectedEdge["HRay", "array"], DirectedEdge["HRay", "base"], DirectedEdge["HRay", "directory"], DirectedEdge["HSFFIG", "array"], DirectedEdge["HSFFIG", "base"], DirectedEdge["HSFFIG", "Cabal"], DirectedEdge["HSFFIG", "containers"], DirectedEdge["HSFFIG", "directory"], DirectedEdge["HSFFIG", "filepath"], DirectedEdge["HSFFIG", "parsec"], DirectedEdge["HSFFIG", "process"], DirectedEdge["HSFFIG", "unix"], DirectedEdge["HSGEP", "base"], DirectedEdge["HSGEP", "csv"], DirectedEdge["HSGEP", "monad-mersenne-random"], DirectedEdge["HSGEP", "mtl"], DirectedEdge["HSGEP", "split"], DirectedEdge["HSGEP", "vector"], DirectedEdge["HSH", "base"], DirectedEdge["HSH", "bytestring"], DirectedEdge["HSH", "directory"], DirectedEdge["HSH", "filepath"], DirectedEdge["HSH", "hslogger"], DirectedEdge["HSH", "HUnit"], DirectedEdge["HSH", "MissingH"], DirectedEdge["HSH", "mtl"], DirectedEdge["HSH", "process"], DirectedEdge["HSH", "regex-base"], DirectedEdge["HSH", "regex-compat"], DirectedEdge["HSH", "regex-posix"], DirectedEdge["HSH", "testpack"], DirectedEdge["HSH", "unix"], DirectedEdge["HSHHelpers", "base"], DirectedEdge["HSHHelpers", "bytestring"], DirectedEdge["HSHHelpers", "DebugTraceHelpers"], DirectedEdge["HSHHelpers", "directory"], DirectedEdge["HSHHelpers", "filepath"], DirectedEdge["HSHHelpers", "HSH"], DirectedEdge["HSHHelpers", "HStringTemplateHelpers"], DirectedEdge["HSHHelpers", "MissingH"], DirectedEdge["HSHHelpers", "mtl"], DirectedEdge["HSHHelpers", "regex-pcre"], DirectedEdge["HSHHelpers", "unix"], DirectedEdge["HSet", "base"], DirectedEdge["HSet", "containers"], DirectedEdge["HSet", "hashable"], DirectedEdge["HSet", "hashtables"], DirectedEdge["HSlippyMap", "base"], DirectedEdge["HSmarty", "aeson"], DirectedEdge["HSmarty", "attoparsec"], DirectedEdge["HSmarty", "attoparsec-expr"], DirectedEdge["HSmarty", "base"], DirectedEdge["HSmarty", "HTTP"], DirectedEdge["HSmarty", "mtl"], DirectedEdge["HSmarty", "scientific"], DirectedEdge["HSmarty", "text"], DirectedEdge["HSmarty", "unordered-containers"], DirectedEdge["HSmarty", "vector"], DirectedEdge["HSoundFile", "sndfile-enumerators"], DirectedEdge["HSoundFile", "base"], DirectedEdge["HSoundFile", "binary"], DirectedEdge["HSoundFile", "bytestring"], DirectedEdge["HSoundFile", "filepath"], DirectedEdge["HSoundFile", "mtl"], DirectedEdge["HSoundFile", "parallel"], DirectedEdge["HStringTemplate", "array"], DirectedEdge["HStringTemplate", "base"], DirectedEdge["HStringTemplate", "blaze-builder"], DirectedEdge["HStringTemplate", "bytestring"], DirectedEdge["HStringTemplate", "containers"], DirectedEdge["HStringTemplate", "deepseq"], DirectedEdge["HStringTemplate", "directory"], DirectedEdge["HStringTemplate", "filepath"], DirectedEdge["HStringTemplate", "mtl"], DirectedEdge["HStringTemplate", "old-locale"], DirectedEdge["HStringTemplate", "parsec"], DirectedEdge["HStringTemplate", "pretty"], DirectedEdge["HStringTemplate", "syb"], DirectedEdge["HStringTemplate", "template-haskell"], DirectedEdge["HStringTemplate", "text"], DirectedEdge["HStringTemplate", "time"], DirectedEdge["HStringTemplate", "void"], DirectedEdge["HStringTemplateHelpers", "base"], DirectedEdge["HStringTemplateHelpers", "containers"], DirectedEdge["HStringTemplateHelpers", "directory"], DirectedEdge["HStringTemplateHelpers", "FileManipCompat"], DirectedEdge["HStringTemplateHelpers", "filepath"], DirectedEdge["HStringTemplateHelpers", "HSH"], DirectedEdge["HStringTemplateHelpers", "HStringTemplate"], DirectedEdge["HStringTemplateHelpers", "mtl"], DirectedEdge["HStringTemplateHelpers", "safe"], DirectedEdge["HStringTemplateHelpers", "strict"], DirectedEdge["HSvm", "base"], DirectedEdge["HSvm", "containers"], DirectedEdge["HTF", "aeson"], DirectedEdge["HTF", "array"], DirectedEdge["HTF", "base"], DirectedEdge["HTF", "base64-bytestring"], DirectedEdge["HTF", "bytestring"], DirectedEdge["HTF", "containers"], DirectedEdge["HTF", "cpphs"], DirectedEdge["HTF", "Diff"], DirectedEdge["HTF", "directory"], DirectedEdge["HTF", "haskell-src"], DirectedEdge["HTF", "HTF"], DirectedEdge["HTF", "HUnit"], DirectedEdge["HTF", "lifted-base"], DirectedEdge["HTF", "monad-control"], DirectedEdge["HTF", "mtl"], DirectedEdge["HTF", "old-time"], DirectedEdge["HTF", "pretty"], DirectedEdge["HTF", "process"], DirectedEdge["HTF", "QuickCheck"], DirectedEdge["HTF", "random"], DirectedEdge["HTF", "regex-compat"], DirectedEdge["HTF", "text"], DirectedEdge["HTF", "time"], DirectedEdge["HTF", "unix"], DirectedEdge["HTF", "vector"], DirectedEdge["HTF", "xmlgen"], DirectedEdge["HTTP", "array"], DirectedEdge["HTTP", "base"], DirectedEdge["HTTP", "bytestring"], DirectedEdge["HTTP", "mtl"], DirectedEdge["HTTP", "network"], DirectedEdge["HTTP", "network-uri"], DirectedEdge["HTTP", "parsec"], DirectedEdge["HTTP", "time"], DirectedEdge["HTTP-Simple", "HTTP"], DirectedEdge["HTTP-Simple", "base"], DirectedEdge["HTTP-Simple", "HTTP"], DirectedEdge["HTTP-Simple", "network"], DirectedEdge["HTab", "base"], DirectedEdge["HTab", "cmdargs"], DirectedEdge["HTab", "containers"], DirectedEdge["HTab", "deepseq"], DirectedEdge["HTab", "hylolib"], DirectedEdge["HTab", "mtl"], DirectedEdge["HTab", "strict"], DirectedEdge["HTicTacToe", "array"], DirectedEdge["HTicTacToe", "base"], DirectedEdge["HTicTacToe", "mtl"], DirectedEdge["HTicTacToe", "random"], DirectedEdge["HTicTacToe", "SDL"], DirectedEdge["HTicTacToe", "SDL-image"], DirectedEdge["HTicTacToe", "SDL-ttf"], DirectedEdge["HUnit", "base"], DirectedEdge["HUnit", "deepseq"], DirectedEdge["HUnit-Diff", "ansi-terminal"], DirectedEdge["HUnit-Diff", "base"], DirectedEdge["HUnit-Diff", "Diff"], DirectedEdge["HUnit-Diff", "groom"], DirectedEdge["HUnit-Diff", "HUnit"], DirectedEdge["HUnit-Plus", "base"], DirectedEdge["HUnit-Plus", "bytestring"], DirectedEdge["HUnit-Plus", "Cabal"], DirectedEdge["HUnit-Plus", "cmdargs"], DirectedEdge["HUnit-Plus", "containers"], DirectedEdge["HUnit-Plus", "hashable"], DirectedEdge["HUnit-Plus", "hexpat"], DirectedEdge["HUnit-Plus", "hostname"], DirectedEdge["HUnit-Plus", "parsec"], DirectedEdge["HUnit-Plus", "time"], DirectedEdge["HUnit-Plus", "timeit"], DirectedEdge["HUnit-approx", "base"], DirectedEdge["HUnit-approx", "HUnit"], DirectedEdge["HXMPP", "pontarius-xmpp"], DirectedEdge["HXMPP", "base"], DirectedEdge["HXMPP", "base64-string"], DirectedEdge["HXMPP", "binary"], DirectedEdge["HXMPP", "bytestring"], DirectedEdge["HXMPP", "crypto-api"], DirectedEdge["HXMPP", "enumerator"], DirectedEdge["HXMPP", "HLogger"], DirectedEdge["HXMPP", "network"], DirectedEdge["HXMPP", "random"], DirectedEdge["HXMPP", "regex-posix"], DirectedEdge["HXMPP", "text"], DirectedEdge["HXMPP", "transformers"], DirectedEdge["HXMPP", "utf8-string"], DirectedEdge["HXMPP", "xml-enumerator"], DirectedEdge["HXMPP", "xml-types"], DirectedEdge["HXQ", "array"], DirectedEdge["HXQ", "base"], DirectedEdge["HXQ", "haskeline"], DirectedEdge["HXQ", "HDBC"], DirectedEdge["HXQ", "HDBC-odbc"], DirectedEdge["HXQ", "HTTP"], DirectedEdge["HXQ", "mtl"], DirectedEdge["HXQ", "regex-base"], DirectedEdge["HXQ", "regex-compat"], DirectedEdge["HXQ", "template-haskell"], DirectedEdge["HaLeX", "base"], DirectedEdge["HaLeX", "mtl"], DirectedEdge["HaMinitel", "base"], DirectedEdge["HaMinitel", "bytestring"], DirectedEdge["HaMinitel", "serialport"], DirectedEdge["HaMinitel", "stm"], DirectedEdge["HaPy", "base"], DirectedEdge["HaPy", "template-haskell"], DirectedEdge["HaPy", "th-lift"], DirectedEdge["HaRe", "array"], DirectedEdge["HaRe", "base"], DirectedEdge["HaRe", "Cabal"], DirectedEdge["HaRe", "cabal-helper"], DirectedEdge["HaRe", "containers"], DirectedEdge["HaRe", "directory"], DirectedEdge["HaRe", "filepath"], DirectedEdge["HaRe", "ghc"], DirectedEdge["HaRe", "ghc-exactprint"], DirectedEdge["HaRe", "ghc-mod"], DirectedEdge["HaRe", "ghc-paths"], DirectedEdge["HaRe", "ghc-prim"], DirectedEdge["HaRe", "ghc-syb-utils"], DirectedEdge["HaRe", "HaRe"], DirectedEdge["HaRe", "hslogger"], DirectedEdge["HaRe", "monad-control"], DirectedEdge["HaRe", "monoid-extras"], DirectedEdge["HaRe", "mtl"], DirectedEdge["HaRe", "old-time"], DirectedEdge["HaRe", "parsec"], DirectedEdge["HaRe", "pretty"], DirectedEdge["HaRe", "rosezipper"], DirectedEdge["HaRe", "semigroups"], DirectedEdge["HaRe", "Strafunski-StrategyLib"], DirectedEdge["HaRe", "syb"], DirectedEdge["HaRe", "syz"], DirectedEdge["HaRe", "time"], DirectedEdge["HaRe", "transformers"], DirectedEdge["HaRe", "transformers-base"], DirectedEdge["HaTeX", "base"], DirectedEdge["HaTeX", "bytestring"], DirectedEdge["HaTeX", "containers"], DirectedEdge["HaTeX", "matrix"], DirectedEdge["HaTeX", "parsec"], DirectedEdge["HaTeX", "QuickCheck"], DirectedEdge["HaTeX", "text"], DirectedEdge["HaTeX", "transformers"], DirectedEdge["HaTeX", "wl-pprint-extras"], DirectedEdge["HaTeX-meta", "base"], DirectedEdge["HaTeX-meta", "Cabal"], DirectedEdge["HaTeX-meta", "containers"], DirectedEdge["HaTeX-meta", "directory"], DirectedEdge["HaTeX-meta", "filepath"], DirectedEdge["HaTeX-meta", "ghc"], DirectedEdge["HaTeX-meta", "haddock"], DirectedEdge["HaTeX-meta", "haskell-src-exts"], DirectedEdge["HaTeX-meta", "mtl"], DirectedEdge["HaTeX-meta", "parsec"], DirectedEdge["HaTeX-qq", "antiquoter"], DirectedEdge["HaTeX-qq", "base"], DirectedEdge["HaTeX-qq", "haskell-src-meta"], DirectedEdge["HaTeX-qq", "HaTeX"], DirectedEdge["HaTeX-qq", "template-haskell"], DirectedEdge["HaTeX-qq", "text"], DirectedEdge["HaTeX-qq", "uniplate"], DirectedEdge["HaVSA", "base"], DirectedEdge["HaVSA", "HUnit"], DirectedEdge["HaVSA", "logict"], DirectedEdge["HaVSA", "QuickCheck"], DirectedEdge["HaVSA", "test-framework"], DirectedEdge["HaVSA", "test-framework-hunit"], DirectedEdge["HaVSA", "test-framework-quickcheck"], DirectedEdge["HaXml", "base"], DirectedEdge["HaXml", "bytestring"], DirectedEdge["HaXml", "containers"], DirectedEdge["HaXml", "directory"], DirectedEdge["HaXml", "filepath"], DirectedEdge["HaXml", "HaXml"], DirectedEdge["HaXml", "polyparse"], DirectedEdge["HaXml", "pretty"], DirectedEdge["HaXml", "random"], DirectedEdge["Hach", "base"], DirectedEdge["Hach", "containers"], DirectedEdge["Hach", "network"], DirectedEdge["Hach", "old-locale"], DirectedEdge["Hach", "text"], DirectedEdge["Hach", "time"], DirectedEdge["Hach", "vty"], DirectedEdge["Hach", "vty-ui"], DirectedEdge["HackMail", "base"], DirectedEdge["HackMail", "Crypto"], DirectedEdge["HackMail", "directory"], DirectedEdge["HackMail", "hdaemonize"], DirectedEdge["HackMail", "hint"], DirectedEdge["HackMail", "mtl"], DirectedEdge["HackMail", "old-time"], DirectedEdge["HackMail", "parsec"], DirectedEdge["Haggressive", "base"], DirectedEdge["Haggressive", "bytestring"], DirectedEdge["Haggressive", "Cabal"], DirectedEdge["Haggressive", "cassava"], DirectedEdge["Haggressive", "containers"], DirectedEdge["Haggressive", "directory"], DirectedEdge["Haggressive", "Haggressive"], DirectedEdge["Haggressive", "HUnit"], DirectedEdge["Haggressive", "PSQueue"], DirectedEdge["Haggressive", "text"], DirectedEdge["Haggressive", "tokenize"], DirectedEdge["Haggressive", "tuple"], DirectedEdge["Haggressive", "vector"], DirectedEdge["HandlerSocketClient", "base"], DirectedEdge["HandlerSocketClient", "bytestring"], DirectedEdge["HandlerSocketClient", "network"], DirectedEdge["HandsomeSoup", "base"], DirectedEdge["HandsomeSoup", "containers"], DirectedEdge["HandsomeSoup", "HandsomeSoup"], DirectedEdge["HandsomeSoup", "HTTP"], DirectedEdge["HandsomeSoup", "hxt"], DirectedEdge["HandsomeSoup", "hxt-http"], DirectedEdge["HandsomeSoup", "mtl"], DirectedEdge["HandsomeSoup", "network"], DirectedEdge["HandsomeSoup", "network-uri"], DirectedEdge["HandsomeSoup", "parsec"], DirectedEdge["HandsomeSoup", "transformers"], DirectedEdge["Hangman", "base"], DirectedEdge["Hangman", "random"], DirectedEdge["Hangman", "transformers"], DirectedEdge["HarmTrace", "array"], DirectedEdge["HarmTrace", "base"], DirectedEdge["HarmTrace", "binary"], DirectedEdge["HarmTrace", "cmdargs"], DirectedEdge["HarmTrace", "deepseq"], DirectedEdge["HarmTrace", "Diff"], DirectedEdge["HarmTrace", "directory"], DirectedEdge["HarmTrace", "filepath"], DirectedEdge["HarmTrace", "ghc-prim"], DirectedEdge["HarmTrace", "HarmTrace-Base"], DirectedEdge["HarmTrace", "HCodecs"], DirectedEdge["HarmTrace", "hmatrix"], DirectedEdge["HarmTrace", "hmatrix-gsl-stats"], DirectedEdge["HarmTrace", "instant-generics"], DirectedEdge["HarmTrace", "ListLike"], DirectedEdge["HarmTrace", "mtl"], DirectedEdge["HarmTrace", "parallel"], DirectedEdge["HarmTrace", "parseargs"], DirectedEdge["HarmTrace", "process"], DirectedEdge["HarmTrace", "sox"], DirectedEdge["HarmTrace", "template-haskell"], DirectedEdge["HarmTrace", "uu-parsinglib"], DirectedEdge["HarmTrace", "vector"], DirectedEdge["HarmTrace-Base", "base"], DirectedEdge["HarmTrace-Base", "binary"], DirectedEdge["HarmTrace-Base", "containers"], DirectedEdge["HarmTrace-Base", "ghc-prim"], DirectedEdge["HarmTrace-Base", "ListLike"], DirectedEdge["HarmTrace-Base", "uu-parsinglib"], DirectedEdge["HasGP", "base"], DirectedEdge["HasGP", "hmatrix"], DirectedEdge["HasGP", "hmatrix-special"], DirectedEdge["HasGP", "mtl"], DirectedEdge["HasGP", "parsec"], DirectedEdge["HasGP", "random"], DirectedEdge["Haschoo", "array"], DirectedEdge["Haschoo", "base"], DirectedEdge["Haschoo", "list-tries"], DirectedEdge["Haschoo", "monad-loops"], DirectedEdge["Haschoo", "mtl"], DirectedEdge["Haschoo", "numbers"], DirectedEdge["Haschoo", "parsec"], DirectedEdge["Hashell", "base"], DirectedEdge["Hashell", "directory"], DirectedEdge["Hashell", "ghc"], DirectedEdge["Hashell", "parsec"], DirectedEdge["Hashell", "process"], DirectedEdge["Hashell", "readline"], DirectedEdge["Hashell", "regex-compat"], DirectedEdge["Hashell", "unix"], DirectedEdge["HaskRel", "base"], DirectedEdge["HaskRel", "containers"], DirectedEdge["HaskRel", "directory"], DirectedEdge["HaskRel", "ghc-prim"], DirectedEdge["HaskRel", "HList"], DirectedEdge["HaskRel", "tagged"], DirectedEdge["HaskellForMaths", "array"], DirectedEdge["HaskellForMaths", "base"], DirectedEdge["HaskellForMaths", "containers"], DirectedEdge["HaskellForMaths", "random"], DirectedEdge["HaskellLM", "base"], DirectedEdge["HaskellLM", "hmatrix"], DirectedEdge["HaskellNN", "base"], DirectedEdge["HaskellNN", "hmatrix"], DirectedEdge["HaskellNN", "random"], DirectedEdge["HaskellNet", "array"], DirectedEdge["HaskellNet", "base"], DirectedEdge["HaskellNet", "base64-string"], DirectedEdge["HaskellNet", "bytestring"], DirectedEdge["HaskellNet", "cryptohash"], DirectedEdge["HaskellNet", "mime-mail"], DirectedEdge["HaskellNet", "mtl"], DirectedEdge["HaskellNet", "network"], DirectedEdge["HaskellNet", "old-time"], DirectedEdge["HaskellNet", "pretty"], DirectedEdge["HaskellNet", "text"], DirectedEdge["HaskellNet-SSL", "base"], DirectedEdge["HaskellNet-SSL", "bytestring"], DirectedEdge["HaskellNet-SSL", "connection"], DirectedEdge["HaskellNet-SSL", "data-default"], DirectedEdge["HaskellNet-SSL", "HaskellNet"], DirectedEdge["HaskellNet-SSL", "network"], DirectedEdge["HaskellNet-SSL", "tls"], DirectedEdge["HaskellTorrent", "base"], DirectedEdge["HaskellTorrent", "bytestring"], DirectedEdge["HaskellTorrent", "cereal"], DirectedEdge["HaskellTorrent", "cml"], DirectedEdge["HaskellTorrent", "containers"], DirectedEdge["HaskellTorrent", "directory"], DirectedEdge["HaskellTorrent", "hopenssl"], DirectedEdge["HaskellTorrent", "hslogger"], DirectedEdge["HaskellTorrent", "HTTP"], DirectedEdge["HaskellTorrent", "HUnit"], DirectedEdge["HaskellTorrent", "mtl"], DirectedEdge["HaskellTorrent", "network"], DirectedEdge["HaskellTorrent", "parsec"], DirectedEdge["HaskellTorrent", "pretty"], DirectedEdge["HaskellTorrent", "QuickCheck"], DirectedEdge["HaskellTorrent", "random"], DirectedEdge["HaskellTorrent", "random-shuffle"], DirectedEdge["HaskellTorrent", "test-framework"], DirectedEdge["HaskellTorrent", "test-framework-hunit"], DirectedEdge["HaskellTorrent", "time"], DirectedEdge["HaskellTutorials", "base"], DirectedEdge["HaskellTutorials", "cmdargs"], DirectedEdge["HaskellTutorials", "text"], DirectedEdge["Haskelloids", "base"], DirectedEdge["Haskelloids", "containers"], DirectedEdge["Haskelloids", "HGL"], DirectedEdge["Haskelloids", "hmatrix"], DirectedEdge["Haskelloids", "MonadRandom"], DirectedEdge["Haskelloids", "random"], DirectedEdge["Haskelloids", "Yampa"], DirectedEdge["Hate", "base"], DirectedEdge["Hate", "bytestring"], DirectedEdge["Hate", "GLFW-b"], DirectedEdge["Hate", "GLUtil"], DirectedEdge["Hate", "Hate"], DirectedEdge["Hate", "hpp"], DirectedEdge["Hate", "JuicyPixels"], DirectedEdge["Hate", "JuicyPixels-util"], DirectedEdge["Hate", "lens"], DirectedEdge["Hate", "mtl"], DirectedEdge["Hate", "multimap"], DirectedEdge["Hate", "OpenGL"], DirectedEdge["Hate", "random"], DirectedEdge["Hate", "stm"], DirectedEdge["Hate", "transformers"], DirectedEdge["Hate", "vect"], DirectedEdge["Hate", "vect-opengl"], DirectedEdge["Hate", "vector"], DirectedEdge["Hawk", "base"], DirectedEdge["Hawk", "bytestring"], DirectedEdge["Hawk", "bytestring-trie"], DirectedEdge["Hawk", "cgi"], DirectedEdge["Hawk", "containers"], DirectedEdge["Hawk", "convertible"], DirectedEdge["Hawk", "data-default"], DirectedEdge["Hawk", "dataenc"], DirectedEdge["Hawk", "directory"], DirectedEdge["Hawk", "filepath"], DirectedEdge["Hawk", "hack"], DirectedEdge["Hawk", "HDBC"], DirectedEdge["Hawk", "hslogger"], DirectedEdge["Hawk", "hslogger-template"], DirectedEdge["Hawk", "HTTP"], DirectedEdge["Hawk", "hxt"], DirectedEdge["Hawk", "json-b"], DirectedEdge["Hawk", "MonadCatchIO-mtl"], DirectedEdge["Hawk", "mtl"], DirectedEdge["Hawk", "network"], DirectedEdge["Hawk", "regex-posix"], DirectedEdge["Hawk", "SHA"], DirectedEdge["Hawk", "template-haskell"], DirectedEdge["Hawk", "time"], DirectedEdge["Hawk", "utf8-string"], DirectedEdge["Hayoo", "base"], DirectedEdge["Hayoo", "binary"], DirectedEdge["Hayoo", "bytestring"], DirectedEdge["Hayoo", "bzlib"], DirectedEdge["Hayoo", "containers"], DirectedEdge["Hayoo", "data-lens"], DirectedEdge["Hayoo", "data-lens-template"], DirectedEdge["Hayoo", "deepseq"], DirectedEdge["Hayoo", "enummapset"], DirectedEdge["Hayoo", "filepath"], DirectedEdge["Hayoo", "heist"], DirectedEdge["Hayoo", "Holumbus-Searchengine"], DirectedEdge["Hayoo", "hxt"], DirectedEdge["Hayoo", "hxt-cache"], DirectedEdge["Hayoo", "hxt-charproperties"], DirectedEdge["Hayoo", "hxt-curl"], DirectedEdge["Hayoo", "hxt-http"], DirectedEdge["Hayoo", "hxt-regex-xmlschema"], DirectedEdge["Hayoo", "hxt-unicode"], DirectedEdge["Hayoo", "hxt-xpath"], DirectedEdge["Hayoo", "json"], DirectedEdge["Hayoo", "MonadCatchIO-transformers"], DirectedEdge["Hayoo", "mtl"], DirectedEdge["Hayoo", "network"], DirectedEdge["Hayoo", "old-time"], DirectedEdge["Hayoo", "parsec"], DirectedEdge["Hayoo", "process"], DirectedEdge["Hayoo", "snap"], DirectedEdge["Hayoo", "snap-core"], DirectedEdge["Hayoo", "snap-server"], DirectedEdge["Hayoo", "tar"], DirectedEdge["Hayoo", "text"], DirectedEdge["Hayoo", "transformers"], DirectedEdge["Hayoo", "xhtml-combinators"], DirectedEdge["Hayoo", "zlib"], DirectedEdge["Hclip", "base"], DirectedEdge["Hclip", "mtl"], DirectedEdge["Hclip", "process"], DirectedEdge["Hclip", "strict"], DirectedEdge["Hedi", "base"], DirectedEdge["Hedi", "editline"], DirectedEdge["Hedi", "mtl"], DirectedEdge["Hedi", "parsec"], DirectedEdge["Hedi", "pretty"], DirectedEdge["Hedi", "process"], DirectedEdge["Hedi", "QuickCheck"], DirectedEdge["Hedi", "regex-posix"], DirectedEdge["HerbiePlugin", "base"], DirectedEdge["HerbiePlugin", "deepseq"], DirectedEdge["HerbiePlugin", "directory"], DirectedEdge["HerbiePlugin", "ghc"], DirectedEdge["HerbiePlugin", "mtl"], DirectedEdge["HerbiePlugin", "process"], DirectedEdge["HerbiePlugin", "split"], DirectedEdge["HerbiePlugin", "sqlite-simple"], DirectedEdge["HerbiePlugin", "template-haskell"], DirectedEdge["HerbiePlugin", "text"], DirectedEdge["Hermes", "AES"], DirectedEdge["Hermes", "base"], DirectedEdge["Hermes", "bytestring"], DirectedEdge["Hermes", "cereal"], DirectedEdge["Hermes", "containers"], DirectedEdge["Hermes", "hslogger"], DirectedEdge["Hermes", "monads-tf"], DirectedEdge["Hermes", "network"], DirectedEdge["Hermes", "old-time"], DirectedEdge["Hermes", "random"], DirectedEdge["Hermes", "random-shuffle"], DirectedEdge["Hermes", "RSA"], DirectedEdge["Hermes", "stm"], DirectedEdge["Hermes", "syb"], DirectedEdge["Hermes", "time"], DirectedEdge["Hermes", "transformers"], DirectedEdge["Hermes", "unamb"], DirectedEdge["Hermes", "yjtools"], DirectedEdge["Hieroglyph", "array"], DirectedEdge["Hieroglyph", "base"], DirectedEdge["Hieroglyph", "buster"], DirectedEdge["Hieroglyph", "bytestring"], DirectedEdge["Hieroglyph", "cairo"], DirectedEdge["Hieroglyph", "colour"], DirectedEdge["Hieroglyph", "containers"], DirectedEdge["Hieroglyph", "glib"], DirectedEdge["Hieroglyph", "GLUT"], DirectedEdge["Hieroglyph", "gtk"], DirectedEdge["Hieroglyph", "gtkglext"], DirectedEdge["Hieroglyph", "IfElse"], DirectedEdge["Hieroglyph", "mtl"], DirectedEdge["Hieroglyph", "OpenGL"], DirectedEdge["Hieroglyph", "parallel"], DirectedEdge["Hieroglyph", "pretty"], DirectedEdge["Hieroglyph", "random"], DirectedEdge["HiggsSet", "base"], DirectedEdge["HiggsSet", "bytestring"], DirectedEdge["HiggsSet", "containers"], DirectedEdge["HiggsSet", "deepseq"], DirectedEdge["HiggsSet", "mtl"], DirectedEdge["HiggsSet", "text"], DirectedEdge["HiggsSet", "th-expand-syns"], DirectedEdge["HiggsSet", "TrieMap"], DirectedEdge["HiggsSet", "vector"], DirectedEdge["Hipmunk", "array"], DirectedEdge["Hipmunk", "base"], DirectedEdge["Hipmunk", "containers"], DirectedEdge["Hipmunk", "StateVar"], DirectedEdge["Hipmunk", "transformers"], DirectedEdge["HipmunkPlayground", "base"], DirectedEdge["HipmunkPlayground", "containers"], DirectedEdge["HipmunkPlayground", "GLFW"], DirectedEdge["HipmunkPlayground", "Hipmunk"], DirectedEdge["HipmunkPlayground", "OpenGL"], DirectedEdge["HipmunkPlayground", "StateVar"], DirectedEdge["HipmunkPlayground", "transformers"], DirectedEdge["Hish", "base"], DirectedEdge["Hish", "directory"], DirectedEdge["Hish", "MissingH"], DirectedEdge["Hish", "process"], DirectedEdge["Hish", "regex-tdfa"], DirectedEdge["Hish", "time"], DirectedEdge["Histogram", "base"], DirectedEdge["Histogram", "containers"], DirectedEdge["Histogram", "gnuplot"], DirectedEdge["Hmpf", "base"], DirectedEdge["Hmpf", "ConfigFile"], DirectedEdge["Hmpf", "Crypto"], DirectedEdge["Hmpf", "HTTP"], DirectedEdge["Hmpf", "mtl"], DirectedEdge["Hmpf", "network"], DirectedEdge["Hmpf", "time"], DirectedEdge["Hmpf", "unix"], DirectedEdge["Hmpf", "utf8-string"], DirectedEdge["Hoed", "adjunctions"], DirectedEdge["Hoed", "array"], DirectedEdge["Hoed", "base"], DirectedEdge["Hoed", "bytestring"], DirectedEdge["Hoed", "cereal"], DirectedEdge["Hoed", "containers"], DirectedEdge["Hoed", "deepseq"], DirectedEdge["Hoed", "directory"], DirectedEdge["Hoed", "extensible-exceptions"], DirectedEdge["Hoed", "filepath"], DirectedEdge["Hoed", "FPretty"], DirectedEdge["Hoed", "GLUT"], DirectedEdge["Hoed", "Hoed"], DirectedEdge["Hoed", "indents"], DirectedEdge["Hoed", "lazysmallcheck"], DirectedEdge["Hoed", "libgraph"], DirectedEdge["Hoed", "monad-loops"], DirectedEdge["Hoed", "mtl"], DirectedEdge["Hoed", "network"], DirectedEdge["Hoed", "OpenGL"], DirectedEdge["Hoed", "parsec"], DirectedEdge["Hoed", "process"], DirectedEdge["Hoed", "QuickCheck"], DirectedEdge["Hoed", "random"], DirectedEdge["Hoed", "RBTree"], DirectedEdge["Hoed", "regex-posix"], DirectedEdge["Hoed", "SDL"], DirectedEdge["Hoed", "SDL-image"], DirectedEdge["Hoed", "SDL-mixer"], DirectedEdge["Hoed", "template-haskell"], DirectedEdge["Hoed", "threepenny-gui"], DirectedEdge["Hoed", "time"], DirectedEdge["Hoed", "transformers"], DirectedEdge["Hoed", "unix"], DirectedEdge["Hoed", "utf8-string"], DirectedEdge["HoleyMonoid", "base"], DirectedEdge["Holumbus-Distribution", "array"], DirectedEdge["Holumbus-Distribution", "base"], DirectedEdge["Holumbus-Distribution", "binary"], DirectedEdge["Holumbus-Distribution", "bytestring"], DirectedEdge["Holumbus-Distribution", "containers"], DirectedEdge["Holumbus-Distribution", "deepseq"], DirectedEdge["Holumbus-Distribution", "hslogger"], DirectedEdge["Holumbus-Distribution", "hxt"], DirectedEdge["Holumbus-Distribution", "network"], DirectedEdge["Holumbus-Distribution", "random"], DirectedEdge["Holumbus-Distribution", "readline"], DirectedEdge["Holumbus-Distribution", "stm"], DirectedEdge["Holumbus-Distribution", "time"], DirectedEdge["Holumbus-Distribution", "unix"], DirectedEdge["Holumbus-MapReduce", "base"], DirectedEdge["Holumbus-MapReduce", "binary"], DirectedEdge["Holumbus-MapReduce", "bytestring"], DirectedEdge["Holumbus-MapReduce", "containers"], DirectedEdge["Holumbus-MapReduce", "deepseq"], DirectedEdge["Holumbus-MapReduce", "directory"], DirectedEdge["Holumbus-MapReduce", "extensible-exceptions"], DirectedEdge["Holumbus-MapReduce", "Holumbus-Distribution"], DirectedEdge["Holumbus-MapReduce", "Holumbus-Storage"], DirectedEdge["Holumbus-MapReduce", "hslogger"], DirectedEdge["Holumbus-MapReduce", "hxt"], DirectedEdge["Holumbus-MapReduce", "network"], DirectedEdge["Holumbus-MapReduce", "readline"], DirectedEdge["Holumbus-MapReduce", "time"], DirectedEdge["Holumbus-MapReduce", "unix"], DirectedEdge["Holumbus-Searchengine", "base"], DirectedEdge["Holumbus-Searchengine", "binary"], DirectedEdge["Holumbus-Searchengine", "bytestring"], DirectedEdge["Holumbus-Searchengine", "bzlib"], DirectedEdge["Holumbus-Searchengine", "containers"], DirectedEdge["Holumbus-Searchengine", "deepseq"], DirectedEdge["Holumbus-Searchengine", "directory"], DirectedEdge["Holumbus-Searchengine", "enummapset"], DirectedEdge["Holumbus-Searchengine", "filepath"], DirectedEdge["Holumbus-Searchengine", "hslogger"], DirectedEdge["Holumbus-Searchengine", "hxt"], DirectedEdge["Holumbus-Searchengine", "hxt-cache"], DirectedEdge["Holumbus-Searchengine", "hxt-curl"], DirectedEdge["Holumbus-Searchengine", "hxt-regex-xmlschema"], DirectedEdge["Holumbus-Searchengine", "hxt-unicode"], DirectedEdge["Holumbus-Searchengine", "mtl"], DirectedEdge["Holumbus-Searchengine", "network"], DirectedEdge["Holumbus-Searchengine", "parallel"], DirectedEdge["Holumbus-Searchengine", "parsec"], DirectedEdge["Holumbus-Searchengine", "process"], DirectedEdge["Holumbus-Searchengine", "SHA"], DirectedEdge["Holumbus-Searchengine", "unix"], DirectedEdge["Holumbus-Storage", "base"], DirectedEdge["Holumbus-Storage", "binary"], DirectedEdge["Holumbus-Storage", "bytestring"], DirectedEdge["Holumbus-Storage", "containers"], DirectedEdge["Holumbus-Storage", "directory"], DirectedEdge["Holumbus-Storage", "Holumbus-Distribution"], DirectedEdge["Holumbus-Storage", "hslogger"], DirectedEdge["Holumbus-Storage", "hxt"], DirectedEdge["Holumbus-Storage", "network"], DirectedEdge["Holumbus-Storage", "random"], DirectedEdge["Holumbus-Storage", "time"], DirectedEdge["Holumbus-Storage", "unix"], DirectedEdge["Homology", "base"], DirectedEdge["Homology", "containers"], DirectedEdge["Homology", "vector"], DirectedEdge["HongoDB", "attoparsec"], DirectedEdge["HongoDB", "attoparsec-binary"], DirectedEdge["HongoDB", "base"], DirectedEdge["HongoDB", "blaze-builder"], DirectedEdge["HongoDB", "bytestring"], DirectedEdge["HongoDB", "directory"], DirectedEdge["HongoDB", "enumerator"], DirectedEdge["HongoDB", "hashable"], DirectedEdge["HongoDB", "monad-control"], DirectedEdge["HongoDB", "mtl"], DirectedEdge["HongoDB", "unix"], DirectedEdge["HongoDB", "unix-bytestring"], DirectedEdge["HongoDB", "unordered-containers"], DirectedEdge["HostAndPort", "base"], DirectedEdge["HostAndPort", "parsec"], DirectedEdge["Hricket", "base"], DirectedEdge["Hricket", "containers"], DirectedEdge["Hs2lib", "array"], DirectedEdge["Hs2lib", "base"], DirectedEdge["Hs2lib", "cereal"], DirectedEdge["Hs2lib", "containers"], DirectedEdge["Hs2lib", "directory"], DirectedEdge["Hs2lib", "filepath"], DirectedEdge["Hs2lib", "ghc"], DirectedEdge["Hs2lib", "ghc-paths"], DirectedEdge["Hs2lib", "haddock"], DirectedEdge["Hs2lib", "haskell-src-exts"], DirectedEdge["Hs2lib", "mtl"], DirectedEdge["Hs2lib", "old-locale"], DirectedEdge["Hs2lib", "process"], DirectedEdge["Hs2lib", "QuickCheck"], DirectedEdge["Hs2lib", "random"], DirectedEdge["Hs2lib", "syb"], DirectedEdge["Hs2lib", "time"], DirectedEdge["HsASA", "array"], DirectedEdge["HsASA", "base"], DirectedEdge["HsASA", "random"], DirectedEdge["HsHaruPDF", "base"], DirectedEdge["HsHyperEstraier", "base"], DirectedEdge["HsHyperEstraier", "base-unicode-symbols"], DirectedEdge["HsHyperEstraier", "bytestring"], DirectedEdge["HsHyperEstraier", "network"], DirectedEdge["HsHyperEstraier", "text"], DirectedEdge["HsJudy", "base"], DirectedEdge["HsJudy", "bytestring"], DirectedEdge["HsJudy", "containers"], DirectedEdge["HsOpenSSL", "base"], DirectedEdge["HsOpenSSL", "bytestring"], DirectedEdge["HsOpenSSL", "ghc-prim"], DirectedEdge["HsOpenSSL", "integer"], DirectedEdge["HsOpenSSL", "integer-gmp"], DirectedEdge["HsOpenSSL", "network"], DirectedEdge["HsOpenSSL", "old-locale"], DirectedEdge["HsOpenSSL", "time"], DirectedEdge["HsOpenSSL-x509-system", "base"], DirectedEdge["HsOpenSSL-x509-system", "bytestring"], DirectedEdge["HsOpenSSL-x509-system", "HsOpenSSL"], DirectedEdge["HsOpenSSL-x509-system", "process"], DirectedEdge["HsOpenSSL-x509-system", "unix"], DirectedEdge["HsParrot", "base"], DirectedEdge["HsParrot", "bytestring"], DirectedEdge["HsParrot", "HsSyck"], DirectedEdge["HsParrot", "pretty"], DirectedEdge["HsParrot", "pugs-DrIFT"], DirectedEdge["HsPerl5", "base"], DirectedEdge["HsSVN", "base"], DirectedEdge["HsSVN", "bytestring"], DirectedEdge["HsSVN", "mtl"], DirectedEdge["HsSVN", "stm"], DirectedEdge["HsSyck", "base"], DirectedEdge["HsSyck", "bytestring"], DirectedEdge["HsSyck", "hashtables"], DirectedEdge["HsSyck", "syb"], DirectedEdge["HsSyck", "utf8-string"], DirectedEdge["HsTools", "base"], DirectedEdge["HsTools", "ghc-prim"], DirectedEdge["Hsed", "array"], DirectedEdge["Hsed", "base"], DirectedEdge["Hsed", "bytestring"], DirectedEdge["Hsed", "cmdargs"], DirectedEdge["Hsed", "data-accessor"], DirectedEdge["Hsed", "data-accessor-template"], DirectedEdge["Hsed", "data-accessor-transformers"], DirectedEdge["Hsed", "directory"], DirectedEdge["Hsed", "filepath"], DirectedEdge["Hsed", "Glob"], DirectedEdge["Hsed", "GotoT-transformers"], DirectedEdge["Hsed", "mtl"], DirectedEdge["Hsed", "parsec"], DirectedEdge["Hsed", "regex-base"], DirectedEdge["Hsed", "regex-compat"], DirectedEdge["Hsed", "regex-posix"], DirectedEdge["Hsmtlib", "base"], DirectedEdge["Hsmtlib", "containers"], DirectedEdge["Hsmtlib", "parsec"], DirectedEdge["Hsmtlib", "pretty"], DirectedEdge["Hsmtlib", "process"], DirectedEdge["Hsmtlib", "smtLib"], DirectedEdge["Hsmtlib", "transformers"], DirectedEdge["HueAPI", "aeson"], DirectedEdge["HueAPI", "base"], DirectedEdge["HueAPI", "containers"], DirectedEdge["HueAPI", "lens"], DirectedEdge["HueAPI", "lens-aeson"], DirectedEdge["HueAPI", "mtl"], DirectedEdge["HueAPI", "transformers"], DirectedEdge["HueAPI", "wreq"], DirectedEdge["HulkImport", "attoparsec"], DirectedEdge["HulkImport", "base"], DirectedEdge["HulkImport", "HulkImport"], DirectedEdge["HulkImport", "pretty"], DirectedEdge["HulkImport", "text"], DirectedEdge["Hungarian-Munkres", "base"], DirectedEdge["IDynamic", "base"], DirectedEdge["IDynamic", "containers"], DirectedEdge["IDynamic", "directory"], DirectedEdge["IFS", "array"], DirectedEdge["IFS", "base"], DirectedEdge["IFS", "bytestring"], DirectedEdge["IFS", "containers"], DirectedEdge["IFS", "random"], DirectedEdge["INblobs", "base"], DirectedEdge["INblobs", "containers"], DirectedEdge["INblobs", "directory"], DirectedEdge["INblobs", "HaXml"], DirectedEdge["INblobs", "polyparse"], DirectedEdge["INblobs", "pretty"], DirectedEdge["INblobs", "process"], DirectedEdge["INblobs", "wx"], DirectedEdge["INblobs", "wxcore"], DirectedEdge["IOR", "base"], DirectedEdge["IOR", "mtl"], DirectedEdge["IORefCAS", "atomic-primops"], DirectedEdge["IORefCAS", "base"], DirectedEdge["IORefCAS", "bits-atomic"], DirectedEdge["IORefCAS", "ghc-prim"], DirectedEdge["IOSpec", "base"], DirectedEdge["IOSpec", "mtl"], DirectedEdge["IOSpec", "QuickCheck"], DirectedEdge["IOSpec", "Stream"], DirectedEdge["IPv6Addr", "attoparsec"], DirectedEdge["IPv6Addr", "base"], DirectedEdge["IPv6Addr", "iproute"], DirectedEdge["IPv6Addr", "network"], DirectedEdge["IPv6Addr", "network-info"], DirectedEdge["IPv6Addr", "random"], DirectedEdge["IPv6Addr", "text"], DirectedEdge["IcoGrid", "array"], DirectedEdge["IcoGrid", "base"], DirectedEdge["IcoGrid", "GlomeVec"], DirectedEdge["IfElse", "base"], DirectedEdge["IfElse", "mtl"], DirectedEdge["Imlib", "array"], DirectedEdge["Imlib", "base"], DirectedEdge["ImperativeHaskell", "base"], DirectedEdge["ImperativeHaskell", "mtl"], DirectedEdge["ImperativeHaskell", "template-haskell"], DirectedEdge["IndentParser", "base"], DirectedEdge["IndentParser", "parsec"], DirectedEdge["IndexedList", "base"], DirectedEdge["IndexedList", "PeanoWitnesses"], DirectedEdge["InfixApplicative", "base"], DirectedEdge["Interpolation", "base"], DirectedEdge["Interpolation", "haskell-src-meta"], DirectedEdge["Interpolation", "syb"], DirectedEdge["Interpolation", "template-haskell"], DirectedEdge["Interpolation-maxs", "base"], DirectedEdge["Interpolation-maxs", "syb"], DirectedEdge["Interpolation-maxs", "template-haskell"], DirectedEdge["IntervalMap", "base"], DirectedEdge["IntervalMap", "containers"], DirectedEdge["IntervalMap", "deepseq"], DirectedEdge["Irc", "base"], DirectedEdge["Irc", "data-default"], DirectedEdge["Irc", "mtl"], DirectedEdge["Irc", "network"], DirectedEdge["Irc", "transformers"], DirectedEdge["IrrHaskell", "base"], DirectedEdge["IrrHaskell", "random"], DirectedEdge["IrrHaskell", "time"], DirectedEdge["IsNull", "base"], DirectedEdge["IsNull", "base-compat"], DirectedEdge["IsNull", "bytestring"], DirectedEdge["IsNull", "containers"], DirectedEdge["IsNull", "text"], DirectedEdge["JSON-Combinator", "lens"], DirectedEdge["JSON-Combinator", "aeson"], DirectedEdge["JSON-Combinator", "attoparsec"], DirectedEdge["JSON-Combinator", "base"], DirectedEdge["JSON-Combinator", "bytestring"], DirectedEdge["JSON-Combinator", "bytestring-trie"], DirectedEdge["JSON-Combinator", "containers"], DirectedEdge["JSON-Combinator", "failure"], DirectedEdge["JSON-Combinator", "hjson"], DirectedEdge["JSON-Combinator", "json"], DirectedEdge["JSON-Combinator", "JSONb"], DirectedEdge["JSON-Combinator", "parsec"], DirectedEdge["JSON-Combinator", "text"], DirectedEdge["JSON-Combinator", "vector"], DirectedEdge["JSON-Combinator-Examples", "lens"], DirectedEdge["JSON-Combinator-Examples", "base"], DirectedEdge["JSON-Combinator-Examples", "bytestring"], DirectedEdge["JSON-Combinator-Examples", "json"], DirectedEdge["JSON-Combinator-Examples", "JSON-Combinator"], DirectedEdge["JSON-Combinator-Examples", "JSONb"], DirectedEdge["JSONb", "attoparsec"], DirectedEdge["JSONb", "base"], DirectedEdge["JSONb", "bytestring"], DirectedEdge["JSONb", "bytestring-nums"], DirectedEdge["JSONb", "bytestring-trie"], DirectedEdge["JSONb", "containers"], DirectedEdge["JSONb", "utf8-string"], DirectedEdge["JYU-Utils", "array"], DirectedEdge["JYU-Utils", "base"], DirectedEdge["JYU-Utils", "binary"], DirectedEdge["JYU-Utils", "bytestring"], DirectedEdge["JYU-Utils", "containers"], DirectedEdge["JYU-Utils", "deepseq"], DirectedEdge["JYU-Utils", "directory"], DirectedEdge["JYU-Utils", "filepath"], DirectedEdge["JYU-Utils", "lazysmallcheck"], DirectedEdge["JYU-Utils", "mtl"], DirectedEdge["JYU-Utils", "mwc-random"], DirectedEdge["JYU-Utils", "parallel"], DirectedEdge["JYU-Utils", "process"], DirectedEdge["JYU-Utils", "QuickCheck"], DirectedEdge["JYU-Utils", "random"], DirectedEdge["JYU-Utils", "stm"], DirectedEdge["JYU-Utils", "template-haskell"], DirectedEdge["JYU-Utils", "unix"], DirectedEdge["JYU-Utils", "zlib"], DirectedEdge["JackMiniMix", "jackminimix"], DirectedEdge["JackMiniMix", "base"], DirectedEdge["JackMiniMix", "hosc"], DirectedEdge["Javasf", "javasf"], DirectedEdge["Javasf", "base"], DirectedEdge["Javasf", "binary"], DirectedEdge["Javasf", "bytestring"], DirectedEdge["Javasf", "language-java-classfile"], DirectedEdge["Javav", "javav"], DirectedEdge["Javav", "base"], DirectedEdge["JsContracts", "base"], DirectedEdge["JsContracts", "containers"], DirectedEdge["JsContracts", "directory"], DirectedEdge["JsContracts", "filepath"], DirectedEdge["JsContracts", "mtl"], DirectedEdge["JsContracts", "parsec"], DirectedEdge["JsContracts", "pretty"], DirectedEdge["JsContracts", "syb"], DirectedEdge["JsContracts", "WebBits"], DirectedEdge["JsContracts", "WebBits-Html"], DirectedEdge["JsonGrammar", "aeson"], DirectedEdge["JsonGrammar", "attoparsec"], DirectedEdge["JsonGrammar", "base"], DirectedEdge["JsonGrammar", "bytestring"], DirectedEdge["JsonGrammar", "containers"], DirectedEdge["JsonGrammar", "language-typescript"], DirectedEdge["JsonGrammar", "mtl"], DirectedEdge["JsonGrammar", "stack-prism"], DirectedEdge["JsonGrammar", "text"], DirectedEdge["JsonGrammar", "unordered-containers"], DirectedEdge["JsonGrammar", "vector"], DirectedEdge["JuicyPixels", "base"], DirectedEdge["JuicyPixels", "binary"], DirectedEdge["JuicyPixels", "bytestring"], DirectedEdge["JuicyPixels", "containers"], DirectedEdge["JuicyPixels", "deepseq"], DirectedEdge["JuicyPixels", "mmap"], DirectedEdge["JuicyPixels", "mtl"], DirectedEdge["JuicyPixels", "primitive"], DirectedEdge["JuicyPixels", "transformers"], DirectedEdge["JuicyPixels", "vector"], DirectedEdge["JuicyPixels", "zlib"], DirectedEdge["JuicyPixels-canvas", "base"], DirectedEdge["JuicyPixels-canvas", "containers"], DirectedEdge["JuicyPixels-canvas", "JuicyPixels"], DirectedEdge["JuicyPixels-extra", "base"], DirectedEdge["JuicyPixels-extra", "JuicyPixels"], DirectedEdge["JuicyPixels-repa", "base"], DirectedEdge["JuicyPixels-repa", "bytestring"], DirectedEdge["JuicyPixels-repa", "JuicyPixels"], DirectedEdge["JuicyPixels-repa", "repa"], DirectedEdge["JuicyPixels-repa", "vector"], DirectedEdge["JuicyPixels-scale-dct", "base"], DirectedEdge["JuicyPixels-scale-dct", "base-compat"], DirectedEdge["JuicyPixels-scale-dct", "carray"], DirectedEdge["JuicyPixels-scale-dct", "fft"], DirectedEdge["JuicyPixels-scale-dct", "JuicyPixels"], DirectedEdge["JuicyPixels-util", "base"], DirectedEdge["JuicyPixels-util", "JuicyPixels"], DirectedEdge["JuicyPixels-util", "vector"], DirectedEdge["JunkDB", "aeson"], DirectedEdge["JunkDB", "base"], DirectedEdge["JunkDB", "binary"], DirectedEdge["JunkDB", "bytestring"], DirectedEdge["JunkDB", "conduit"], DirectedEdge["JunkDB", "data-default"], DirectedEdge["JunkDB", "directory"], DirectedEdge["JunkDB", "filepath"], DirectedEdge["JunkDB", "mtl"], DirectedEdge["JunkDB", "network"], DirectedEdge["JunkDB", "resourcet"], DirectedEdge["JunkDB-driver-gdbm", "base"], DirectedEdge["JunkDB-driver-gdbm", "bytestring"], DirectedEdge["JunkDB-driver-gdbm", "conduit"], DirectedEdge["JunkDB-driver-gdbm", "directory"], DirectedEdge["JunkDB-driver-gdbm", "filepath"], DirectedEdge["JunkDB-driver-gdbm", "JunkDB"], DirectedEdge["JunkDB-driver-gdbm", "mtl"], DirectedEdge["JunkDB-driver-gdbm", "resourcet"], DirectedEdge["JunkDB-driver-hashtables", "base"], DirectedEdge["JunkDB-driver-hashtables", "bytestring"], DirectedEdge["JunkDB-driver-hashtables", "conduit"], DirectedEdge["JunkDB-driver-hashtables", "hashable"], DirectedEdge["JunkDB-driver-hashtables", "hashtables"], DirectedEdge["JunkDB-driver-hashtables", "JunkDB"], DirectedEdge["JunkDB-driver-hashtables", "mtl"], DirectedEdge["JunkDB-driver-hashtables", "resourcet"], DirectedEdge["JustParse", "base"], DirectedEdge["KMP", "array"], DirectedEdge["KMP", "base"], DirectedEdge["KSP", "base"], DirectedEdge["Kalman", "base"], DirectedEdge["Kalman", "hmatrix"], DirectedEdge["KdTree", "base"], DirectedEdge["KdTree", "QuickCheck"], DirectedEdge["Ketchup", "base"], DirectedEdge["Ketchup", "base64-bytestring"], DirectedEdge["Ketchup", "bytestring"], DirectedEdge["Ketchup", "directory"], DirectedEdge["Ketchup", "mime-types"], DirectedEdge["Ketchup", "network"], DirectedEdge["Ketchup", "text"], DirectedEdge["KiCS", "base"], DirectedEdge["KiCS", "containers"], DirectedEdge["KiCS", "curry-base"], DirectedEdge["KiCS", "curry-frontend"], DirectedEdge["KiCS", "directory"], DirectedEdge["KiCS", "filepath"], DirectedEdge["KiCS", "ghc-paths"], DirectedEdge["KiCS", "network"], DirectedEdge["KiCS", "old-time"], DirectedEdge["KiCS", "process"], DirectedEdge["KiCS", "random"], DirectedEdge["KiCS", "readline"], DirectedEdge["KiCS", "syb"], DirectedEdge["KiCS", "unix"], DirectedEdge["KiCS-debugger", "base"], DirectedEdge["KiCS-debugger", "containers"], DirectedEdge["KiCS-debugger", "curry-base"], DirectedEdge["KiCS-debugger", "directory"], DirectedEdge["KiCS-debugger", "filepath"], DirectedEdge["KiCS-debugger", "haskell-src"], DirectedEdge["KiCS-debugger", "KiCS"], DirectedEdge["KiCS-debugger", "KiCS-prophecy"], DirectedEdge["KiCS-debugger", "mtl"], DirectedEdge["KiCS-debugger", "readline"], DirectedEdge["KiCS-debugger", "syb"], DirectedEdge["KiCS-prophecy", "base"], DirectedEdge["KiCS-prophecy", "filepath"], DirectedEdge["KiCS-prophecy", "KiCS"], DirectedEdge["Kleislify", "base"], DirectedEdge["Konf", "base"], DirectedEdge["Konf", "containers"], DirectedEdge["Konf", "parsec"], DirectedEdge["Kriens", "base"], DirectedEdge["KyotoCabinet", "base"], DirectedEdge["KyotoCabinet", "bytestring"], DirectedEdge["KyotoCabinet", "extensible-exceptions"], DirectedEdge["L-seed", "base"], DirectedEdge["L-seed", "cairo"], DirectedEdge["L-seed", "containers"], DirectedEdge["L-seed", "gtk"], DirectedEdge["L-seed", "HDBC"], DirectedEdge["L-seed", "HDBC-odbc"], DirectedEdge["L-seed", "json"], DirectedEdge["L-seed", "mtl"], DirectedEdge["L-seed", "old-time"], DirectedEdge["L-seed", "parsec"], DirectedEdge["L-seed", "random"], DirectedEdge["L-seed", "random-shuffle"], DirectedEdge["LATS", "base"], DirectedEdge["LATS", "constraint-classes"], DirectedEdge["LATS", "hmatrix"], DirectedEdge["LATS", "semigroups"], DirectedEdge["LATS", "vector"], DirectedEdge["LDAP", "base"], DirectedEdge["LRU", "base"], DirectedEdge["LRU", "containers"], DirectedEdge["LRU", "QuickCheck"], DirectedEdge["LTree", "base"], DirectedEdge["LTree", "transformers"], DirectedEdge["LambdaCalculator", "base"], DirectedEdge["LambdaCalculator", "binary"], DirectedEdge["LambdaCalculator", "bytestring"], DirectedEdge["LambdaCalculator", "haskeline"], DirectedEdge["LambdaCalculator", "mtl"], DirectedEdge["LambdaCalculator", "parsec"], DirectedEdge["LambdaCalculator", "pretty"], DirectedEdge["LambdaDB", "base"], DirectedEdge["LambdaDB", "containers"], DirectedEdge["LambdaDB", "LambdaDB"], DirectedEdge["LambdaDB", "transformers"], DirectedEdge["LambdaHack", "array"], DirectedEdge["LambdaHack", "assert-failure"], DirectedEdge["LambdaHack", "async"], DirectedEdge["LambdaHack", "base"], DirectedEdge["LambdaHack", "binary"], DirectedEdge["LambdaHack", "bytestring"], DirectedEdge["LambdaHack", "containers"], DirectedEdge["LambdaHack", "data-default"], DirectedEdge["LambdaHack", "deepseq"], DirectedEdge["LambdaHack", "directory"], DirectedEdge["LambdaHack", "enummapset-th"], DirectedEdge["LambdaHack", "filepath"], DirectedEdge["LambdaHack", "ghc-prim"], DirectedEdge["LambdaHack", "gtk"], DirectedEdge["LambdaHack", "hashable"], DirectedEdge["LambdaHack", "hsini"], DirectedEdge["LambdaHack", "keys"], DirectedEdge["LambdaHack", "LambdaHack"], DirectedEdge["LambdaHack", "miniutter"], DirectedEdge["LambdaHack", "mtl"], DirectedEdge["LambdaHack", "old-time"], DirectedEdge["LambdaHack", "pretty-show"], DirectedEdge["LambdaHack", "random"], DirectedEdge["LambdaHack", "stm"], DirectedEdge["LambdaHack", "template-haskell"], DirectedEdge["LambdaHack", "text"], DirectedEdge["LambdaHack", "transformers"], DirectedEdge["LambdaHack", "unordered-containers"], DirectedEdge["LambdaHack", "vector"], DirectedEdge["LambdaHack", "vector-binary-instances"], DirectedEdge["LambdaHack", "zlib"], DirectedEdge["LambdaINet", "base"], DirectedEdge["LambdaINet", "containers"], DirectedEdge["LambdaINet", "GLFW"], DirectedEdge["LambdaINet", "GLFW-task"], DirectedEdge["LambdaINet", "monad-task"], DirectedEdge["LambdaINet", "mtl"], DirectedEdge["LambdaINet", "OpenGL"], DirectedEdge["LambdaINet", "transformers"], DirectedEdge["LambdaINet", "vector"], DirectedEdge["LambdaNet", "base"], DirectedEdge["LambdaNet", "binary"], DirectedEdge["LambdaNet", "bytestring"], DirectedEdge["LambdaNet", "hmatrix"], DirectedEdge["LambdaNet", "random"], DirectedEdge["LambdaNet", "random-shuffle"], DirectedEdge["LambdaNet", "split"], DirectedEdge["LambdaPrettyQuote", "base"], DirectedEdge["LambdaPrettyQuote", "DebugTraceHelpers"], DirectedEdge["LambdaPrettyQuote", "HUnit"], DirectedEdge["LambdaPrettyQuote", "lambda-ast"], DirectedEdge["LambdaPrettyQuote", "mtl"], DirectedEdge["LambdaPrettyQuote", "parsec"], DirectedEdge["LambdaPrettyQuote", "QuickCheck"], DirectedEdge["LambdaPrettyQuote", "syb"], DirectedEdge["LambdaPrettyQuote", "template-haskell"], DirectedEdge["LambdaPrettyQuote", "test-framework"], DirectedEdge["LambdaPrettyQuote", "test-framework-hunit"], DirectedEdge["LambdaPrettyQuote", "transformers"], DirectedEdge["LambdaPrettyQuote", "tuple"], DirectedEdge["LambdaPrettyQuote", "uniplate"], DirectedEdge["LambdaShell", "base"], DirectedEdge["LambdaShell", "containers"], DirectedEdge["LambdaShell", "mtl"], DirectedEdge["LambdaShell", "parsec"], DirectedEdge["LambdaShell", "Shellac"], DirectedEdge["LambdaShell", "Shellac-compatline"], DirectedEdge["Lambdajudge", "base"], DirectedEdge["Lambdajudge", "filepath"], DirectedEdge["Lambdajudge", "hspec"], DirectedEdge["Lambdajudge", "mtl"], DirectedEdge["Lambdajudge", "process"], DirectedEdge["Lambdajudge", "text"], DirectedEdge["Lambdaya", "base"], DirectedEdge["Lambdaya", "binary"], DirectedEdge["Lambdaya", "mtl"], DirectedEdge["Lambdaya", "network"], DirectedEdge["Lambdaya", "pipes"], DirectedEdge["Lambdaya", "pipes-binary"], DirectedEdge["Lambdaya", "pipes-network"], DirectedEdge["Lambdaya", "pipes-parse"], DirectedEdge["Lambdaya", "unix"], DirectedEdge["LargeCardinalHierarchy", "base"], DirectedEdge["Lastik", "base"], DirectedEdge["Lastik", "bytestring"], DirectedEdge["Lastik", "containers"], DirectedEdge["Lastik", "directory"], DirectedEdge["Lastik", "filemanip"], DirectedEdge["Lastik", "filepath"], DirectedEdge["Lastik", "process"], DirectedEdge["Lastik", "SHA"], DirectedEdge["Lastik", "zip-archive"], DirectedEdge["Lattices", "array"], DirectedEdge["Lattices", "base"], DirectedEdge["Lattices", "HaskellForMaths"], DirectedEdge["Lazy-Pbkdf2", "base"], DirectedEdge["Lazy-Pbkdf2", "binary"], DirectedEdge["Lazy-Pbkdf2", "bytestring"], DirectedEdge["Lazy-Pbkdf2", "SHA"], DirectedEdge["LazyVault", "base"], DirectedEdge["LazyVault", "directory"], DirectedEdge["LazyVault", "filepath"], DirectedEdge["LazyVault", "unix"], DirectedEdge["Level0", "base"], DirectedEdge["Level0", "directory"], DirectedEdge["Level0", "random"], DirectedEdge["Level0", "SDL"], DirectedEdge["Level0", "SDL-ttf"], DirectedEdge["LibClang", "base"], DirectedEdge["LibClang", "bytestring"], DirectedEdge["LibClang", "filepath"], DirectedEdge["LibClang", "hashable"], DirectedEdge["LibClang", "mtl"], DirectedEdge["LibClang", "resourcet"], DirectedEdge["LibClang", "text"], DirectedEdge["LibClang", "time"], DirectedEdge["LibClang", "transformers"], DirectedEdge["LibClang", "transformers-base"], DirectedEdge["LibClang", "vector"], DirectedEdge["LibZip", "base"], DirectedEdge["LibZip", "bindings-libzip"], DirectedEdge["LibZip", "bytestring"], DirectedEdge["LibZip", "filepath"], DirectedEdge["LibZip", "mtl"], DirectedEdge["LibZip", "time"], DirectedEdge["LibZip", "utf8-string"], DirectedEdge["Limit", "base"], DirectedEdge["LinearSplit", "array"], DirectedEdge["LinearSplit", "base"], DirectedEdge["LinearSplit", "cmdargs"], DirectedEdge["LinearSplit", "QuickCheck"], DirectedEdge["LinguisticsTypes", "aeson"], DirectedEdge["LinguisticsTypes", "base"], DirectedEdge["LinguisticsTypes", "bimaps"], DirectedEdge["LinguisticsTypes", "binary"], DirectedEdge["LinguisticsTypes", "bytestring"], DirectedEdge["LinguisticsTypes", "cereal"], DirectedEdge["LinguisticsTypes", "cereal-text"], DirectedEdge["LinguisticsTypes", "deepseq"], DirectedEdge["LinguisticsTypes", "hashable"], DirectedEdge["LinguisticsTypes", "intern"], DirectedEdge["LinguisticsTypes", "log-domain"], DirectedEdge["LinguisticsTypes", "QuickCheck"], DirectedEdge["LinguisticsTypes", "stringable"], DirectedEdge["LinguisticsTypes", "text"], DirectedEdge["LinguisticsTypes", "text-binary"], DirectedEdge["LinguisticsTypes", "vector-th-unbox"], DirectedEdge["LinkChecker", "base"], DirectedEdge["LinkChecker", "containers"], DirectedEdge["LinkChecker", "HTTP"], DirectedEdge["LinkChecker", "mtl"], DirectedEdge["LinkChecker", "network"], DirectedEdge["LinkChecker", "tagsoup"], DirectedEdge["List", "base"], DirectedEdge["List", "transformers"], DirectedEdge["ListLike", "array"], DirectedEdge["ListLike", "base"], DirectedEdge["ListLike", "bytestring"], DirectedEdge["ListLike", "containers"], DirectedEdge["ListLike", "dlist"], DirectedEdge["ListLike", "fmlist"], DirectedEdge["ListLike", "text"], DirectedEdge["ListLike", "vector"], DirectedEdge["ListTree", "base"], DirectedEdge["ListTree", "directory"], DirectedEdge["ListTree", "filepath"], DirectedEdge["ListTree", "List"], DirectedEdge["ListTree", "transformers"], DirectedEdge["ListWriter", "base"], DirectedEdge["ListWriter", "mtl"], DirectedEdge["ListZipper", "base"], DirectedEdge["ListZipper", "QuickCheck"], DirectedEdge["Logic", "base"], DirectedEdge["LogicGrowsOnTrees", "AbortT-mtl"], DirectedEdge["LogicGrowsOnTrees", "AbortT-transformers"], DirectedEdge["LogicGrowsOnTrees", "base"], DirectedEdge["LogicGrowsOnTrees", "bytestring"], DirectedEdge["LogicGrowsOnTrees", "cereal"], DirectedEdge["LogicGrowsOnTrees", "cmdtheline"], DirectedEdge["LogicGrowsOnTrees", "composition"], DirectedEdge["LogicGrowsOnTrees", "containers"], DirectedEdge["LogicGrowsOnTrees", "data-ivar"], DirectedEdge["LogicGrowsOnTrees", "derive"], DirectedEdge["LogicGrowsOnTrees", "directory"], DirectedEdge["LogicGrowsOnTrees", "hslogger"], DirectedEdge["LogicGrowsOnTrees", "hslogger-template"], DirectedEdge["LogicGrowsOnTrees", "lens"], DirectedEdge["LogicGrowsOnTrees", "LogicGrowsOnTrees"], DirectedEdge["LogicGrowsOnTrees", "MonadCatchIO-transformers"], DirectedEdge["LogicGrowsOnTrees", "monoid-statistics"], DirectedEdge["LogicGrowsOnTrees", "mtl"], DirectedEdge["LogicGrowsOnTrees", "multiset"], DirectedEdge["LogicGrowsOnTrees", "old-locale"], DirectedEdge["LogicGrowsOnTrees", "operational"], DirectedEdge["LogicGrowsOnTrees", "prefix-units"], DirectedEdge["LogicGrowsOnTrees", "pretty"], DirectedEdge["LogicGrowsOnTrees", "PSQueue"], DirectedEdge["LogicGrowsOnTrees", "sequential-index"], DirectedEdge["LogicGrowsOnTrees", "split"], DirectedEdge["LogicGrowsOnTrees", "stm"], DirectedEdge["LogicGrowsOnTrees", "time"], DirectedEdge["LogicGrowsOnTrees", "transformers"], DirectedEdge["LogicGrowsOnTrees", "void"], DirectedEdge["LogicGrowsOnTrees", "yjtools"], DirectedEdge["LogicGrowsOnTrees-MPI", "base"], DirectedEdge["LogicGrowsOnTrees-MPI", "bytestring"], DirectedEdge["LogicGrowsOnTrees-MPI", "cereal"], DirectedEdge["LogicGrowsOnTrees-MPI", "cmdtheline"], DirectedEdge["LogicGrowsOnTrees-MPI", "containers"], DirectedEdge["LogicGrowsOnTrees-MPI", "data-ivar"], DirectedEdge["LogicGrowsOnTrees-MPI", "derive"], DirectedEdge["LogicGrowsOnTrees-MPI", "hslogger"], DirectedEdge["LogicGrowsOnTrees-MPI", "hslogger-template"], DirectedEdge["LogicGrowsOnTrees-MPI", "LogicGrowsOnTrees"], DirectedEdge["LogicGrowsOnTrees-MPI", "LogicGrowsOnTrees-MPI"], DirectedEdge["LogicGrowsOnTrees-MPI", "MonadCatchIO-transformers"], DirectedEdge["LogicGrowsOnTrees-MPI", "stm"], DirectedEdge["LogicGrowsOnTrees-MPI", "transformers"], DirectedEdge["LogicGrowsOnTrees-network", "base"], DirectedEdge["LogicGrowsOnTrees-network", "cereal"], DirectedEdge["LogicGrowsOnTrees-network", "cmdtheline"], DirectedEdge["LogicGrowsOnTrees-network", "composition"], DirectedEdge["LogicGrowsOnTrees-network", "containers"], DirectedEdge["LogicGrowsOnTrees-network", "hslogger"], DirectedEdge["LogicGrowsOnTrees-network", "hslogger-template"], DirectedEdge["LogicGrowsOnTrees-network", "lens"], DirectedEdge["LogicGrowsOnTrees-network", "LogicGrowsOnTrees"], DirectedEdge["LogicGrowsOnTrees-network", "LogicGrowsOnTrees-network"], DirectedEdge["LogicGrowsOnTrees-network", "MonadCatchIO-transformers"], DirectedEdge["LogicGrowsOnTrees-network", "mtl"], DirectedEdge["LogicGrowsOnTrees-network", "network"], DirectedEdge["LogicGrowsOnTrees-network", "pretty"], DirectedEdge["LogicGrowsOnTrees-network", "transformers"], DirectedEdge["LogicGrowsOnTrees-processes", "base"], DirectedEdge["LogicGrowsOnTrees-processes", "bytestring"], DirectedEdge["LogicGrowsOnTrees-processes", "cereal"], DirectedEdge["LogicGrowsOnTrees-processes", "cmdtheline"], DirectedEdge["LogicGrowsOnTrees-processes", "containers"], DirectedEdge["LogicGrowsOnTrees-processes", "filepath"], DirectedEdge["LogicGrowsOnTrees-processes", "FindBin"], DirectedEdge["LogicGrowsOnTrees-processes", "hslogger"], DirectedEdge["LogicGrowsOnTrees-processes", "hslogger-template"], DirectedEdge["LogicGrowsOnTrees-processes", "LogicGrowsOnTrees"], DirectedEdge["LogicGrowsOnTrees-processes", "LogicGrowsOnTrees-processes"], DirectedEdge["LogicGrowsOnTrees-processes", "MonadCatchIO-transformers"], DirectedEdge["LogicGrowsOnTrees-processes", "process"], DirectedEdge["LogicGrowsOnTrees-processes", "transformers"], DirectedEdge["LslPlus", "array"], DirectedEdge["LslPlus", "base"], DirectedEdge["LslPlus", "bytestring"], DirectedEdge["LslPlus", "containers"], DirectedEdge["LslPlus", "directory"], DirectedEdge["LslPlus", "filepath"], DirectedEdge["LslPlus", "HaXml"], DirectedEdge["LslPlus", "mtl"], DirectedEdge["LslPlus", "network"], DirectedEdge["LslPlus", "old-time"], DirectedEdge["LslPlus", "parsec"], DirectedEdge["LslPlus", "random"], DirectedEdge["LslPlus", "syb"], DirectedEdge["LslPlus", "template-haskell"], DirectedEdge["LslPlus", "utf8-string"], DirectedEdge["Lucu", "base"], DirectedEdge["Lucu", "base-unicode-symbols"], DirectedEdge["Lucu", "base64-bytestring"], DirectedEdge["Lucu", "bytestring"], DirectedEdge["Lucu", "containers"], DirectedEdge["Lucu", "directory"], DirectedEdge["Lucu", "filepath"], DirectedEdge["Lucu", "haskell-src"], DirectedEdge["Lucu", "HsOpenSSL"], DirectedEdge["Lucu", "hxt"], DirectedEdge["Lucu", "mtl"], DirectedEdge["Lucu", "network"], DirectedEdge["Lucu", "stm"], DirectedEdge["Lucu", "time"], DirectedEdge["Lucu", "time-http"], DirectedEdge["Lucu", "unix"], DirectedEdge["Lucu", "zlib"], DirectedEdge["MASMGen", "base"], DirectedEdge["MASMGen", "containers"], DirectedEdge["MASMGen", "mtl"], DirectedEdge["MC-Fold-DP", "base"], DirectedEdge["MC-Fold-DP", "Biobase"], DirectedEdge["MC-Fold-DP", "cmdargs"], DirectedEdge["MC-Fold-DP", "PrimitiveArray"], DirectedEdge["MC-Fold-DP", "split"], DirectedEdge["MC-Fold-DP", "tuple"], DirectedEdge["MC-Fold-DP", "vector"], DirectedEdge["MFlow", "base"], DirectedEdge["MFlow", "blaze-html"], DirectedEdge["MFlow", "blaze-markup"], DirectedEdge["MFlow", "bytestring"], DirectedEdge["MFlow", "case-insensitive"], DirectedEdge["MFlow", "clientsession"], DirectedEdge["MFlow", "conduit"], DirectedEdge["MFlow", "conduit-extra"], DirectedEdge["MFlow", "containers"], DirectedEdge["MFlow", "directory"], DirectedEdge["MFlow", "extensible-exceptions"], DirectedEdge["MFlow", "http-types"], DirectedEdge["MFlow", "monadloc"], DirectedEdge["MFlow", "mtl"], DirectedEdge["MFlow", "old-time"], DirectedEdge["MFlow", "parsec"], DirectedEdge["MFlow", "pwstore-fast"], DirectedEdge["MFlow", "random"], DirectedEdge["MFlow", "RefSerialize"], DirectedEdge["MFlow", "resourcet"], DirectedEdge["MFlow", "stm"], DirectedEdge["MFlow", "TCache"], DirectedEdge["MFlow", "text"], DirectedEdge["MFlow", "time"], DirectedEdge["MFlow", "transformers"], DirectedEdge["MFlow", "utf8-string"], DirectedEdge["MFlow", "vector"], DirectedEdge["MFlow", "wai"], DirectedEdge["MFlow", "wai-extra"], DirectedEdge["MFlow", "warp"], DirectedEdge["MFlow", "warp-tls"], DirectedEdge["MFlow", "Workflow"], DirectedEdge["MHask", "base"], DirectedEdge["MHask", "transformers"], DirectedEdge["MSQueue", "base"], DirectedEdge["MSQueue", "ghc-prim"], DirectedEdge["MSQueue", "monad-loops"], DirectedEdge["MSQueue", "ref-mtl"], DirectedEdge["MSQueue", "stm"], DirectedEdge["MTGBuilder", "base"], DirectedEdge["MTGBuilder", "containers"], DirectedEdge["MTGBuilder", "mtl"], DirectedEdge["MTGBuilder", "parsec"], DirectedEdge["MagicHaskeller", "abstract-par"], DirectedEdge["MagicHaskeller", "array"], DirectedEdge["MagicHaskeller", "base"], DirectedEdge["MagicHaskeller", "bytestring"], DirectedEdge["MagicHaskeller", "cgi"], DirectedEdge["MagicHaskeller", "containers"], DirectedEdge["MagicHaskeller", "directory"], DirectedEdge["MagicHaskeller", "extensible-exceptions"], DirectedEdge["MagicHaskeller", "ghc"], DirectedEdge["MagicHaskeller", "ghc-paths"], DirectedEdge["MagicHaskeller", "hashable"], DirectedEdge["MagicHaskeller", "haskell-src"], DirectedEdge["MagicHaskeller", "hint"], DirectedEdge["MagicHaskeller", "html"], DirectedEdge["MagicHaskeller", "MagicHaskeller"], DirectedEdge["MagicHaskeller", "monad-par"], DirectedEdge["MagicHaskeller", "mtl"], DirectedEdge["MagicHaskeller", "mueval"], DirectedEdge["MagicHaskeller", "network"], DirectedEdge["MagicHaskeller", "network-uri"], DirectedEdge["MagicHaskeller", "pretty"], DirectedEdge["MagicHaskeller", "process"], DirectedEdge["MagicHaskeller", "random"], DirectedEdge["MagicHaskeller", "syb"], DirectedEdge["MagicHaskeller", "template-haskell"], DirectedEdge["MagicHaskeller", "tf-random"], DirectedEdge["MagicHaskeller", "time"], DirectedEdge["MagicHaskeller", "transformers"], DirectedEdge["MagicHaskeller", "unix"], DirectedEdge["MailchimpSimple", "aeson"], DirectedEdge["MailchimpSimple", "aeson-lens"], DirectedEdge["MailchimpSimple", "base"], DirectedEdge["MailchimpSimple", "base16-bytestring"], DirectedEdge["MailchimpSimple", "bytestring"], DirectedEdge["MailchimpSimple", "cryptohash"], DirectedEdge["MailchimpSimple", "directory"], DirectedEdge["MailchimpSimple", "filepath"], DirectedEdge["MailchimpSimple", "http-conduit"], DirectedEdge["MailchimpSimple", "http-types"], DirectedEdge["MailchimpSimple", "lens"], DirectedEdge["MailchimpSimple", "safe"], DirectedEdge["MailchimpSimple", "text"], DirectedEdge["MailchimpSimple", "time"], DirectedEdge["MailchimpSimple", "transformers"], DirectedEdge["MailchimpSimple", "vector"], DirectedEdge["MaybeT", "base"], DirectedEdge["MaybeT", "mtl"], DirectedEdge["MaybeT-monads-tf", "monads-tf"], DirectedEdge["MaybeT-monads-tf", "base"], DirectedEdge["MaybeT-monads-tf", "monads-tf"], DirectedEdge["MaybeT-monads-tf", "transformers"], DirectedEdge["MaybeT-transformers", "base"], DirectedEdge["MaybeT-transformers", "monads-fd"], DirectedEdge["MaybeT-transformers", "transformers"], DirectedEdge["MazesOfMonad", "array"], DirectedEdge["MazesOfMonad", "base"], DirectedEdge["MazesOfMonad", "containers"], DirectedEdge["MazesOfMonad", "directory"], DirectedEdge["MazesOfMonad", "filepath"], DirectedEdge["MazesOfMonad", "HUnit"], DirectedEdge["MazesOfMonad", "mtl"], DirectedEdge["MazesOfMonad", "old-locale"], DirectedEdge["MazesOfMonad", "pretty"], DirectedEdge["MazesOfMonad", "random"], DirectedEdge["MazesOfMonad", "regex-posix"], DirectedEdge["MazesOfMonad", "time"], DirectedEdge["MeanShift", "base"], DirectedEdge["MeanShift", "vector"], DirectedEdge["Measure", "base"], DirectedEdge["MemoTrie", "base"], DirectedEdge["MemoTrie", "MemoTrie"], DirectedEdge["MemoTrie", "void"], DirectedEdge["MetaHDBC", "base"], DirectedEdge["MetaHDBC", "convertible"], DirectedEdge["MetaHDBC", "hashtables"], DirectedEdge["MetaHDBC", "HDBC"], DirectedEdge["MetaHDBC", "HDBC-odbc"], DirectedEdge["MetaHDBC", "mtl"], DirectedEdge["MetaHDBC", "template-haskell"], DirectedEdge["MetaObject", "base"], DirectedEdge["MetaObject", "containers"], DirectedEdge["MetaObject", "stringtable-atom"], DirectedEdge["Metrics", "base"], DirectedEdge["Metrics", "hstats"], DirectedEdge["Mhailist", "base"], DirectedEdge["Mhailist", "binary"], DirectedEdge["Mhailist", "bytestring"], DirectedEdge["Mhailist", "directory"], DirectedEdge["Mhailist", "filepath"], DirectedEdge["Mhailist", "HUnit"], DirectedEdge["Mhailist", "mtl"], DirectedEdge["Mhailist", "old-locale"], DirectedEdge["Mhailist", "process"], DirectedEdge["Mhailist", "time"], DirectedEdge["Michelangelo", "base"], DirectedEdge["Michelangelo", "bytestring"], DirectedEdge["Michelangelo", "containers"], DirectedEdge["Michelangelo", "GLUtil"], DirectedEdge["Michelangelo", "lens"], DirectedEdge["Michelangelo", "linear"], DirectedEdge["Michelangelo", "OpenGL"], DirectedEdge["Michelangelo", "OpenGLRaw"], DirectedEdge["Michelangelo", "WaveFront"], DirectedEdge["MicrosoftTranslator", "aeson"], DirectedEdge["MicrosoftTranslator", "base"], DirectedEdge["MicrosoftTranslator", "bytestring"], DirectedEdge["MicrosoftTranslator", "datetime"], DirectedEdge["MicrosoftTranslator", "exceptions"], DirectedEdge["MicrosoftTranslator", "http-client"], DirectedEdge["MicrosoftTranslator", "lens"], DirectedEdge["MicrosoftTranslator", "text"], DirectedEdge["MicrosoftTranslator", "transformers"], DirectedEdge["MicrosoftTranslator", "url"], DirectedEdge["MicrosoftTranslator", "wreq"], DirectedEdge["MicrosoftTranslator", "xml"], DirectedEdge["MiniAgda", "array"], DirectedEdge["MiniAgda", "base"], DirectedEdge["MiniAgda", "containers"], DirectedEdge["MiniAgda", "haskell-src-exts"], DirectedEdge["MiniAgda", "mtl"], DirectedEdge["MiniAgda", "pretty"], DirectedEdge["MissingH", "array"], DirectedEdge["MissingH", "base"], DirectedEdge["MissingH", "containers"], DirectedEdge["MissingH", "directory"], DirectedEdge["MissingH", "filepath"], DirectedEdge["MissingH", "hslogger"], DirectedEdge["MissingH", "HUnit"], DirectedEdge["MissingH", "mtl"], DirectedEdge["MissingH", "network"], DirectedEdge["MissingH", "old-locale"], DirectedEdge["MissingH", "old-time"], DirectedEdge["MissingH", "parsec"], DirectedEdge["MissingH", "process"], DirectedEdge["MissingH", "random"], DirectedEdge["MissingH", "regex-compat"], DirectedEdge["MissingH", "time"], DirectedEdge["MissingH", "unix"], DirectedEdge["MissingK", "base"], DirectedEdge["MissingK", "glib"], DirectedEdge["MissingK", "template-haskell"], DirectedEdge["MissingM", "base"], DirectedEdge["MissingPy", "anydbm"], DirectedEdge["MissingPy", "base"], DirectedEdge["MissingPy", "MissingH"], DirectedEdge["Modulo", "base"], DirectedEdge["Modulo", "numeric-prelude"], DirectedEdge["Moe", "base"], DirectedEdge["Moe", "GLUT"], DirectedEdge["Moe", "random"], DirectedEdge["MoeDict", "aeson"], DirectedEdge["MoeDict", "base"], DirectedEdge["MoeDict", "bytestring"], DirectedEdge["MoeDict", "containers"], DirectedEdge["MoeDict", "text"], DirectedEdge["MoeDict", "unordered-containers"], DirectedEdge["MonadCatchIO-mtl", "exceptions"], DirectedEdge["MonadCatchIO-mtl", "base"], DirectedEdge["MonadCatchIO-mtl", "extensible-exceptions"], DirectedEdge["MonadCatchIO-mtl", "MonadCatchIO-transformers"], DirectedEdge["MonadCatchIO-mtl-foreign", "base"], DirectedEdge["MonadCatchIO-mtl-foreign", "MonadCatchIO-mtl"], DirectedEdge["MonadCatchIO-mtl-foreign", "mtl"], DirectedEdge["MonadCatchIO-mtl-foreign", "primitive"], DirectedEdge["MonadCatchIO-transformers", "exceptions"], DirectedEdge["MonadCatchIO-transformers", "base"], DirectedEdge["MonadCatchIO-transformers", "extensible-exceptions"], DirectedEdge["MonadCatchIO-transformers", "monads-tf"], DirectedEdge["MonadCatchIO-transformers", "transformers"], DirectedEdge["MonadCatchIO-transformers-foreign", "base"], DirectedEdge["MonadCatchIO-transformers-foreign", "MonadCatchIO-transformers"], DirectedEdge["MonadCatchIO-transformers-foreign", "primitive"], DirectedEdge["MonadCatchIO-transformers-foreign", "transformers"], DirectedEdge["MonadCompose", "base"], DirectedEdge["MonadCompose", "data-default"], DirectedEdge["MonadCompose", "ghc-prim"], DirectedEdge["MonadCompose", "kan-extensions"], DirectedEdge["MonadCompose", "mmorph"], DirectedEdge["MonadCompose", "monad-products"], DirectedEdge["MonadCompose", "mtl"], DirectedEdge["MonadCompose", "parallel"], DirectedEdge["MonadCompose", "random"], DirectedEdge["MonadCompose", "transformers"], DirectedEdge["MonadCompose", "transformers-compat"], DirectedEdge["MonadLab", "base"], DirectedEdge["MonadLab", "parsec"], DirectedEdge["MonadLab", "process"], DirectedEdge["MonadLab", "template-haskell"], DirectedEdge["MonadPrompt", "base"], DirectedEdge["MonadPrompt", "mtl"], DirectedEdge["MonadRandom", "base"], DirectedEdge["MonadRandom", "mtl"], DirectedEdge["MonadRandom", "random"], DirectedEdge["MonadRandom", "transformers"], DirectedEdge["MonadRandom", "transformers-compat"], DirectedEdge["MonadRandomLazy", "base"], DirectedEdge["MonadRandomLazy", "MonadRandom"], DirectedEdge["MonadRandomLazy", "mtl"], DirectedEdge["MonadRandomLazy", "random"], DirectedEdge["MonadStack", "base"], DirectedEdge["MonadStack", "mtl"], DirectedEdge["Monadius", "array"], DirectedEdge["Monadius", "base"], DirectedEdge["Monadius", "directory"], DirectedEdge["Monadius", "GLUT"], DirectedEdge["Monadius", "OpenGL"], DirectedEdge["Monaris", "array"], DirectedEdge["Monaris", "base"], DirectedEdge["Monaris", "containers"], DirectedEdge["Monaris", "directory"], DirectedEdge["Monaris", "free"], DirectedEdge["Monaris", "free-game"], DirectedEdge["Monaris", "mtl"], DirectedEdge["Monatron", "base"], DirectedEdge["Monatron-IO", "base"], DirectedEdge["Monatron-IO", "Monatron"], DirectedEdge["Monatron-IO", "transformers"], DirectedEdge["Monocle", "base"], DirectedEdge["Monocle", "containers"], DirectedEdge["Monocle", "mtl"], DirectedEdge["MorseCode", "base"], DirectedEdge["MorseCode", "containers"], DirectedEdge["MorseCode", "split"], DirectedEdge["MuCheck", "base"], DirectedEdge["MuCheck", "directory"], DirectedEdge["MuCheck", "hashable"], DirectedEdge["MuCheck", "haskell-src-exts"], DirectedEdge["MuCheck", "hint"], DirectedEdge["MuCheck", "mtl"], DirectedEdge["MuCheck", "random"], DirectedEdge["MuCheck", "syb"], DirectedEdge["MuCheck", "temporary"], DirectedEdge["MuCheck", "time"], DirectedEdge["MuCheck-HUnit", "base"], DirectedEdge["MuCheck-HUnit", "HUnit"], DirectedEdge["MuCheck-HUnit", "MuCheck"], DirectedEdge["MuCheck-Hspec", "base"], DirectedEdge["MuCheck-Hspec", "hspec"], DirectedEdge["MuCheck-Hspec", "hspec-core"], DirectedEdge["MuCheck-Hspec", "MuCheck"], DirectedEdge["MuCheck-QuickCheck", "base"], DirectedEdge["MuCheck-QuickCheck", "MuCheck"], DirectedEdge["MuCheck-QuickCheck", "QuickCheck"], DirectedEdge["MuCheck-SmallCheck", "base"], DirectedEdge["MuCheck-SmallCheck", "MuCheck"], DirectedEdge["MuCheck-SmallCheck", "smallcheck"], DirectedEdge["Munkres", "array"], DirectedEdge["Munkres", "base"], DirectedEdge["Munkres", "random"], DirectedEdge["Munkres-simple", "array"], DirectedEdge["Munkres-simple", "base"], DirectedEdge["Munkres-simple", "bimap"], DirectedEdge["Munkres-simple", "containers"], DirectedEdge["Munkres-simple", "Munkres"], DirectedEdge["MusicBrainz", "aeson"], DirectedEdge["MusicBrainz", "base"], DirectedEdge["MusicBrainz", "bytestring"], DirectedEdge["MusicBrainz", "conduit"], DirectedEdge["MusicBrainz", "conduit-extra"], DirectedEdge["MusicBrainz", "HTTP"], DirectedEdge["MusicBrainz", "http-conduit"], DirectedEdge["MusicBrainz", "http-types"], DirectedEdge["MusicBrainz", "monad-control"], DirectedEdge["MusicBrainz", "resourcet"], DirectedEdge["MusicBrainz", "text"], DirectedEdge["MusicBrainz", "time"], DirectedEdge["MusicBrainz", "time-locale-compat"], DirectedEdge["MusicBrainz", "transformers"], DirectedEdge["MusicBrainz", "vector"], DirectedEdge["MusicBrainz", "xml-conduit"], DirectedEdge["MusicBrainz", "xml-types"], DirectedEdge["MusicBrainz-libdiscid", "base"], DirectedEdge["MusicBrainz-libdiscid", "containers"], DirectedEdge["MusicBrainz-libdiscid", "vector"], DirectedEdge["MyPrimes", "base"], DirectedEdge["MyPrimes", "containers"], DirectedEdge["MyPrimes", "MyPrimes"], DirectedEdge["NGrams", "base"], DirectedEdge["NGrams", "HCL"], DirectedEdge["NGrams", "HTTP"], DirectedEdge["NGrams", "network"], DirectedEdge["NGrams", "regex-compat"], DirectedEdge["NTRU", "arithmoi"], DirectedEdge["NTRU", "base"], DirectedEdge["NTRU", "bytestring"], DirectedEdge["NTRU", "containers"], DirectedEdge["NTRU", "crypto-api"], DirectedEdge["NTRU", "polynomial"], DirectedEdge["NTRU", "random"], DirectedEdge["NTRU", "SHA"], DirectedEdge["NTRU", "split"], DirectedEdge["NXT", "base"], DirectedEdge["NXT", "bytestring"], DirectedEdge["NXT", "filepath"], DirectedEdge["NXT", "mtl"], DirectedEdge["NXT", "NXT"], DirectedEdge["NXT", "serialport"], DirectedEdge["NXT", "time"], DirectedEdge["NXT", "unix"], DirectedEdge["NXTDSL", "attoparsec"], DirectedEdge["NXTDSL", "base"], DirectedEdge["NXTDSL", "hashable"], DirectedEdge["NXTDSL", "mtl"], DirectedEdge["NXTDSL", "resourcet"], DirectedEdge["NXTDSL", "stm"], DirectedEdge["NXTDSL", "text"], DirectedEdge["NXTDSL", "unordered-containers"], DirectedEdge["NanoProlog", "base"], DirectedEdge["NanoProlog", "containers"], DirectedEdge["NanoProlog", "ListLike"], DirectedEdge["NanoProlog", "uu-parsinglib"], DirectedEdge["NaturalLanguageAlphabets", "aeson"], DirectedEdge["NaturalLanguageAlphabets", "array"], DirectedEdge["NaturalLanguageAlphabets", "attoparsec"], DirectedEdge["NaturalLanguageAlphabets", "base"], DirectedEdge["NaturalLanguageAlphabets", "bimaps"], DirectedEdge["NaturalLanguageAlphabets", "binary"], DirectedEdge["NaturalLanguageAlphabets", "bytestring"], DirectedEdge["NaturalLanguageAlphabets", "cereal"], DirectedEdge["NaturalLanguageAlphabets", "cereal-text"], DirectedEdge["NaturalLanguageAlphabets", "deepseq"], DirectedEdge["NaturalLanguageAlphabets", "file-embed"], DirectedEdge["NaturalLanguageAlphabets", "hashable"], DirectedEdge["NaturalLanguageAlphabets", "intern"], DirectedEdge["NaturalLanguageAlphabets", "LinguisticsTypes"], DirectedEdge["NaturalLanguageAlphabets", "QuickCheck"], DirectedEdge["NaturalLanguageAlphabets", "stringable"], DirectedEdge["NaturalLanguageAlphabets", "system-filepath"], DirectedEdge["NaturalLanguageAlphabets", "text"], DirectedEdge["NaturalLanguageAlphabets", "text-binary"], DirectedEdge["NaturalLanguageAlphabets", "unordered-containers"], DirectedEdge["NaturalLanguageAlphabets", "vector"], DirectedEdge["NaturalLanguageAlphabets", "vector-th-unbox"], DirectedEdge["NaturalSort", "base"], DirectedEdge["NaturalSort", "bytestring"], DirectedEdge["NaturalSort", "QuickCheck"], DirectedEdge["NaturalSort", "strict"], DirectedEdge["NearContextAlgebra", "base"], DirectedEdge["NearContextAlgebra", "containers"], DirectedEdge["NearContextAlgebra", "ContextAlgebra"], DirectedEdge["NearContextAlgebra", "lattices"], DirectedEdge["NearContextAlgebra", "multiset"], DirectedEdge["NearContextAlgebra", "QuickCheck"], DirectedEdge["Neks", "base"], DirectedEdge["Neks", "bytestring"], DirectedEdge["Neks", "cereal"], DirectedEdge["Neks", "containers"], DirectedEdge["Neks", "directory"], DirectedEdge["Neks", "hashable"], DirectedEdge["Neks", "messagepack"], DirectedEdge["Neks", "network"], DirectedEdge["Neks", "stm"], DirectedEdge["Neks", "vector"], DirectedEdge["NestedFunctor", "base"], DirectedEdge["NestedFunctor", "comonad"], DirectedEdge["NestedFunctor", "distributive"], DirectedEdge["NestedSampling", "base"], DirectedEdge["NestedSampling", "random"], DirectedEdge["NestedSampling", "vector"], DirectedEdge["NetSNMP", "base"], DirectedEdge["NetSNMP", "bytestring"], DirectedEdge["Network-NineP", "base"], DirectedEdge["Network-NineP", "binary"], DirectedEdge["Network-NineP", "bytestring"], DirectedEdge["Network-NineP", "containers"], DirectedEdge["Network-NineP", "convertible"], DirectedEdge["Network-NineP", "exceptions"], DirectedEdge["Network-NineP", "monad-loops"], DirectedEdge["Network-NineP", "monad-peel"], DirectedEdge["Network-NineP", "mstate"], DirectedEdge["Network-NineP", "mtl"], DirectedEdge["Network-NineP", "network"], DirectedEdge["Network-NineP", "NineP"], DirectedEdge["Network-NineP", "regex-posix"], DirectedEdge["Network-NineP", "stateref"], DirectedEdge["Network-NineP", "transformers"], DirectedEdge["NewBinary", "array"], DirectedEdge["NewBinary", "base"], DirectedEdge["NewBinary", "integer"], DirectedEdge["NineP", "base"], DirectedEdge["NineP", "binary"], DirectedEdge["NineP", "bytestring"], DirectedEdge["Ninjas", "base"], DirectedEdge["Ninjas", "binary"], DirectedEdge["Ninjas", "bytestring"], DirectedEdge["Ninjas", "containers"], DirectedEdge["Ninjas", "filepath"], DirectedEdge["Ninjas", "gloss"], DirectedEdge["Ninjas", "network"], DirectedEdge["Ninjas", "networked-game"], DirectedEdge["Ninjas", "random"], DirectedEdge["NoSlow", "array"], DirectedEdge["NoSlow", "base"], DirectedEdge["NoSlow", "containers"], DirectedEdge["NoSlow", "criterion"], DirectedEdge["NoSlow", "dph-base"], DirectedEdge["NoSlow", "dph-prim-seq"], DirectedEdge["NoSlow", "statistics"], DirectedEdge["NoSlow", "storablevector"], DirectedEdge["NoSlow", "template-haskell"], DirectedEdge["NoSlow", "uvector"], DirectedEdge["NoSlow", "vector"], DirectedEdge["NoTrace", "base"], DirectedEdge["Noise", "array"], DirectedEdge["Noise", "base"], DirectedEdge["Noise", "data-default"], DirectedEdge["Noise", "vector"], DirectedEdge["Nomyx", "base"], DirectedEdge["Nomyx", "directory"], DirectedEdge["Nomyx", "exceptions"], DirectedEdge["Nomyx", "filepath"], DirectedEdge["Nomyx", "hint-server"], DirectedEdge["Nomyx", "mtl"], DirectedEdge["Nomyx", "network"], DirectedEdge["Nomyx", "Nomyx-Core"], DirectedEdge["Nomyx", "Nomyx-Language"], DirectedEdge["Nomyx", "Nomyx-Web"], DirectedEdge["Nomyx", "safe"], DirectedEdge["Nomyx", "stm"], DirectedEdge["Nomyx", "time"], DirectedEdge["Nomyx-Core", "acid-state"], DirectedEdge["Nomyx-Core", "aeson"], DirectedEdge["Nomyx-Core", "base"], DirectedEdge["Nomyx-Core", "blaze-html"], DirectedEdge["Nomyx-Core", "blaze-markup"], DirectedEdge["Nomyx-Core", "bytestring"], DirectedEdge["Nomyx-Core", "data-lens"], DirectedEdge["Nomyx-Core", "data-lens-fd"], DirectedEdge["Nomyx-Core", "data-lens-template"], DirectedEdge["Nomyx-Core", "DebugTraceHelpers"], DirectedEdge["Nomyx-Core", "deepseq"], DirectedEdge["Nomyx-Core", "directory"], DirectedEdge["Nomyx-Core", "either-unwrap"], DirectedEdge["Nomyx-Core", "exceptions"], DirectedEdge["Nomyx-Core", "filepath"], DirectedEdge["Nomyx-Core", "happstack-authenticate"], DirectedEdge["Nomyx-Core", "hint"], DirectedEdge["Nomyx-Core", "hint-server"], DirectedEdge["Nomyx-Core", "hscolour"], DirectedEdge["Nomyx-Core", "ixset"], DirectedEdge["Nomyx-Core", "mime-mail"], DirectedEdge["Nomyx-Core", "MissingH"], DirectedEdge["Nomyx-Core", "mtl"], DirectedEdge["Nomyx-Core", "network"], DirectedEdge["Nomyx-Core", "Nomyx-Language"], DirectedEdge["Nomyx-Core", "old-locale"], DirectedEdge["Nomyx-Core", "random"], DirectedEdge["Nomyx-Core", "safe"], DirectedEdge["Nomyx-Core", "safecopy"], DirectedEdge["Nomyx-Core", "stm"], DirectedEdge["Nomyx-Core", "tar"], DirectedEdge["Nomyx-Core", "template-haskell"], DirectedEdge["Nomyx-Core", "temporary"], DirectedEdge["Nomyx-Core", "text"], DirectedEdge["Nomyx-Core", "time"], DirectedEdge["Nomyx-Core", "unix"], DirectedEdge["Nomyx-Language", "base"], DirectedEdge["Nomyx-Language", "Boolean"], DirectedEdge["Nomyx-Language", "containers"], DirectedEdge["Nomyx-Language", "data-lens"], DirectedEdge["Nomyx-Language", "data-lens-fd"], DirectedEdge["Nomyx-Language", "data-lens-template"], DirectedEdge["Nomyx-Language", "DebugTraceHelpers"], DirectedEdge["Nomyx-Language", "ghc"], DirectedEdge["Nomyx-Language", "mtl"], DirectedEdge["Nomyx-Language", "old-locale"], DirectedEdge["Nomyx-Language", "random"], DirectedEdge["Nomyx-Language", "safe"], DirectedEdge["Nomyx-Language", "time"], DirectedEdge["Nomyx-Language", "time-recurrence"], DirectedEdge["Nomyx-Rules", "Nomyx-Language"], DirectedEdge["Nomyx-Rules", "base"], DirectedEdge["Nomyx-Rules", "containers"], DirectedEdge["Nomyx-Rules", "ghc"], DirectedEdge["Nomyx-Rules", "hint-server"], DirectedEdge["Nomyx-Rules", "hslogger"], DirectedEdge["Nomyx-Rules", "mtl"], DirectedEdge["Nomyx-Rules", "old-locale"], DirectedEdge["Nomyx-Rules", "safe"], DirectedEdge["Nomyx-Rules", "stm"], DirectedEdge["Nomyx-Rules", "time"], DirectedEdge["Nomyx-Rules", "time-recurrence"], DirectedEdge["Nomyx-Web", "base"], DirectedEdge["Nomyx-Web", "blaze-html"], DirectedEdge["Nomyx-Web", "blaze-markup"], DirectedEdge["Nomyx-Web", "bytestring"], DirectedEdge["Nomyx-Web", "data-lens"], DirectedEdge["Nomyx-Web", "data-lens-fd"], DirectedEdge["Nomyx-Web", "fb"], DirectedEdge["Nomyx-Web", "filepath"], DirectedEdge["Nomyx-Web", "happstack-authenticate"], DirectedEdge["Nomyx-Web", "happstack-server"], DirectedEdge["Nomyx-Web", "hscolour"], DirectedEdge["Nomyx-Web", "mtl"], DirectedEdge["Nomyx-Web", "Nomyx-Core"], DirectedEdge["Nomyx-Web", "Nomyx-Language"], DirectedEdge["Nomyx-Web", "old-locale"], DirectedEdge["Nomyx-Web", "reform"], DirectedEdge["Nomyx-Web", "reform-blaze"], DirectedEdge["Nomyx-Web", "reform-happstack"], DirectedEdge["Nomyx-Web", "safe"], DirectedEdge["Nomyx-Web", "split"], DirectedEdge["Nomyx-Web", "stm"], DirectedEdge["Nomyx-Web", "text"], DirectedEdge["Nomyx-Web", "time"], DirectedEdge["Nomyx-Web", "web-routes"], DirectedEdge["Nomyx-Web", "web-routes-happstack"], DirectedEdge["Nomyx-Web", "web-routes-regular"], DirectedEdge["Nomyx-Web", "web-routes-th"], DirectedEdge["NonEmpty", "base"], DirectedEdge["NonEmptyList", "semigroups"], DirectedEdge["NonEmptyList", "base"], DirectedEdge["NonEmptyList", "category-extras"], DirectedEdge["NonEmptyList", "QuickCheck"], DirectedEdge["NonEmptyList", "Semigroup"], DirectedEdge["NonEmptyList", "test-framework"], DirectedEdge["NonEmptyList", "test-framework-hunit"], DirectedEdge["NumInstances", "base"], DirectedEdge["NumLazyByteString", "base"], DirectedEdge["NumLazyByteString", "binary"], DirectedEdge["NumLazyByteString", "bytestring"], DirectedEdge["NumberSieves", "array"], DirectedEdge["NumberSieves", "base"], DirectedEdge["NumberTheory", "base"], DirectedEdge["NumberTheory", "containers"], DirectedEdge["NumberTheory", "primes"], DirectedEdge["Numbers", "base"], DirectedEdge["Numbers", "random"], DirectedEdge["Nussinov78", "ADPfusion"], DirectedEdge["Nussinov78", "base"], DirectedEdge["Nussinov78", "ghc-prim"], DirectedEdge["Nussinov78", "mtl"], DirectedEdge["Nussinov78", "primitive"], DirectedEdge["Nussinov78", "PrimitiveArray"], DirectedEdge["Nussinov78", "vector"], DirectedEdge["Nutri", "base"], DirectedEdge["OGL", "base"], DirectedEdge["OGL", "mtl"], DirectedEdge["OSM", "base"], DirectedEdge["OSM", "comonad-transformers"], DirectedEdge["OSM", "containers"], DirectedEdge["OSM", "data-lens"], DirectedEdge["OSM", "hxt"], DirectedEdge["OSM", "newtype"], DirectedEdge["OTP", "base"], DirectedEdge["OTP", "Crypto"], DirectedEdge["OTP", "time"], DirectedEdge["Object", "base"], DirectedEdge["Object", "containers"], DirectedEdge["Object", "ghc"], DirectedEdge["Object", "template-haskell"], DirectedEdge["ObjectName", "base"], DirectedEdge["ObjectName", "transformers"], DirectedEdge["Obsidian", "base"], DirectedEdge["Obsidian", "containers"], DirectedEdge["Obsidian", "cuda"], DirectedEdge["Obsidian", "language-c-quote"], DirectedEdge["Obsidian", "mainland-pretty"], DirectedEdge["Obsidian", "mtl"], DirectedEdge["Obsidian", "mwc-random"], DirectedEdge["Obsidian", "process"], DirectedEdge["Obsidian", "rdtsc"], DirectedEdge["Obsidian", "text"], DirectedEdge["Obsidian", "value-supply"], DirectedEdge["Obsidian", "vector"], DirectedEdge["Octree", "AC-Vector"], DirectedEdge["Octree", "base"], DirectedEdge["Octree", "QuickCheck"], DirectedEdge["OddWord", "base"], DirectedEdge["Omega", "base"], DirectedEdge["Omega", "containers"], DirectedEdge["OneTuple", "base"], DirectedEdge["OpenAFP", "array"], DirectedEdge["OpenAFP", "base"], DirectedEdge["OpenAFP", "binary"], DirectedEdge["OpenAFP", "bytestring"], DirectedEdge["OpenAFP", "containers"], DirectedEdge["OpenAFP", "directory"], DirectedEdge["OpenAFP", "hashable"], DirectedEdge["OpenAFP", "hashtables"], DirectedEdge["OpenAFP", "mtl"], DirectedEdge["OpenAFP", "process"], DirectedEdge["OpenAFP", "regex-compat"], DirectedEdge["OpenAFP-Utils", "base"], DirectedEdge["OpenAFP-Utils", "binary"], DirectedEdge["OpenAFP-Utils", "bytestring"], DirectedEdge["OpenAFP-Utils", "containers"], DirectedEdge["OpenAFP-Utils", "directory"], DirectedEdge["OpenAFP-Utils", "filepath"], DirectedEdge["OpenAFP-Utils", "hashable"], DirectedEdge["OpenAFP-Utils", "line2pdf"], DirectedEdge["OpenAFP-Utils", "OpenAFP"], DirectedEdge["OpenAFP-Utils", "regex-base"], DirectedEdge["OpenAFP-Utils", "regex-posix"], DirectedEdge["OpenAFP-Utils", "text"], DirectedEdge["OpenAFP-Utils", "text-locale-encoding"], DirectedEdge["OpenAFP-Utils", "xhtml"], DirectedEdge["OpenAL", "base"], DirectedEdge["OpenAL", "ObjectName"], DirectedEdge["OpenAL", "OpenAL"], DirectedEdge["OpenAL", "OpenGL"], DirectedEdge["OpenAL", "StateVar"], DirectedEdge["OpenAL", "transformers"], DirectedEdge["OpenCL", "base"], DirectedEdge["OpenCL", "bytestring"], DirectedEdge["OpenCL", "mtl"], DirectedEdge["OpenCLRaw", "base"], DirectedEdge["OpenCLRaw", "bytestring"], DirectedEdge["OpenCLRaw", "mtl"], DirectedEdge["OpenCLWrappers", "base"], DirectedEdge["OpenCLWrappers", "bytestring"], DirectedEdge["OpenCLWrappers", "mtl"], DirectedEdge["OpenGL", "base"], DirectedEdge["OpenGL", "bytestring"], DirectedEdge["OpenGL", "containers"], DirectedEdge["OpenGL", "GLURaw"], DirectedEdge["OpenGL", "ObjectName"], DirectedEdge["OpenGL", "OpenGLRaw"], DirectedEdge["OpenGL", "StateVar"], DirectedEdge["OpenGL", "text"], DirectedEdge["OpenGL", "transformers"], DirectedEdge["OpenGLCheck", "base"], DirectedEdge["OpenGLCheck", "checkers"], DirectedEdge["OpenGLCheck", "OpenGL"], DirectedEdge["OpenGLCheck", "QuickCheck"], DirectedEdge["OpenGLRaw", "base"], DirectedEdge["OpenGLRaw", "bytestring"], DirectedEdge["OpenGLRaw", "containers"], DirectedEdge["OpenGLRaw", "fixed"], DirectedEdge["OpenGLRaw", "half"], DirectedEdge["OpenGLRaw", "text"], DirectedEdge["OpenGLRaw", "transformers"], DirectedEdge["OpenGLRaw21", "OpenGLRaw"], DirectedEdge["OpenSCAD", "base"], DirectedEdge["OpenSCAD", "colour"], DirectedEdge["OpenSCAD", "containers"], DirectedEdge["OpenSCAD", "filepath"], DirectedEdge["OpenSCAD", "semigroups"], DirectedEdge["OpenVG", "base"], DirectedEdge["OpenVG", "GLUT"], DirectedEdge["OpenVG", "OpenGL"], DirectedEdge["OpenVG", "OpenGLRaw"], DirectedEdge["OpenVG", "OpenVGRaw"], DirectedEdge["OpenVGRaw", "base"], DirectedEdge["OpenVGRaw", "OpenGLRaw"], DirectedEdge["Operads", "array"], DirectedEdge["Operads", "base"], DirectedEdge["Operads", "containers"], DirectedEdge["Operads", "mtl"], DirectedEdge["OptDir", "base"], DirectedEdge["OptDir", "hashable"], DirectedEdge["OptDir", "syb"], DirectedEdge["OrPatterns", "base"], DirectedEdge["OrPatterns", "containers"], DirectedEdge["OrPatterns", "haskell-src-exts"], DirectedEdge["OrPatterns", "haskell-src-meta"], DirectedEdge["OrPatterns", "mtl"], DirectedEdge["OrPatterns", "split"], DirectedEdge["OrPatterns", "syb"], DirectedEdge["OrPatterns", "template-haskell"], DirectedEdge["OrchestrateDB", "aeson"], DirectedEdge["OrchestrateDB", "base"], DirectedEdge["OrchestrateDB", "bytestring"], DirectedEdge["OrchestrateDB", "HTTP"], DirectedEdge["OrchestrateDB", "http-conduit"], DirectedEdge["OrchestrateDB", "http-types"], DirectedEdge["OrchestrateDB", "lifted-base"], DirectedEdge["OrderedBits", "base"], DirectedEdge["OrderedBits", "bits"], DirectedEdge["OrderedBits", "primitive"], DirectedEdge["OrderedBits", "vector"], DirectedEdge["OrderedBits", "vector-algorithms"], DirectedEdge["Ordinals", "base"], DirectedEdge["PArrows", "base"], DirectedEdge["PArrows", "containers"], DirectedEdge["PArrows", "ghc-prim"], DirectedEdge["PArrows", "mtl"], DirectedEdge["PBKDF2", "pbkdf"], DirectedEdge["PBKDF2", "scrypt"], DirectedEdge["PBKDF2", "bcrypt"], DirectedEdge["PBKDF2", "base"], DirectedEdge["PBKDF2", "binary"], DirectedEdge["PBKDF2", "bytestring"], DirectedEdge["PBKDF2", "Crypto"], DirectedEdge["PBKDF2", "random"], DirectedEdge["PCLT", "base"], DirectedEdge["PCLT", "bytestring"], DirectedEdge["PCLT", "containers"], DirectedEdge["PCLT", "mtl"], DirectedEdge["PCLT", "utf8-string"], DirectedEdge["PCLT-DB", "base"], DirectedEdge["PCLT-DB", "bytestring"], DirectedEdge["PCLT-DB", "containers"], DirectedEdge["PCLT-DB", "convertible"], DirectedEdge["PCLT-DB", "HDBC"], DirectedEdge["PCLT-DB", "HDBC-postgresql"], DirectedEdge["PCLT-DB", "mtl"], DirectedEdge["PCLT-DB", "PCLT"], DirectedEdge["PDBtools", "base"], DirectedEdge["PDBtools", "bytestring"], DirectedEdge["PDBtools", "containers"], DirectedEdge["PSQueue", "base"], DirectedEdge["PTQ", "base"], DirectedEdge["PTQ", "containers"], DirectedEdge["PTQ", "mtl"], DirectedEdge["PTQ", "network"], DirectedEdge["PTQ", "network-uri"], DirectedEdge["PTQ", "xml"], DirectedEdge["PUH-Project", "base"], DirectedEdge["PUH-Project", "bytestring"], DirectedEdge["PUH-Project", "containers"], DirectedEdge["PUH-Project", "directory"], DirectedEdge["PUH-Project", "mime-mail"], DirectedEdge["PUH-Project", "network"], DirectedEdge["PUH-Project", "old-locale"], DirectedEdge["PUH-Project", "persistent"], DirectedEdge["PUH-Project", "persistent-sqlite"], DirectedEdge["PUH-Project", "persistent-template"], DirectedEdge["PUH-Project", "pwstore-fast"], DirectedEdge["PUH-Project", "random"], DirectedEdge["PUH-Project", "smtp-mail"], DirectedEdge["PUH-Project", "text"], DirectedEdge["PUH-Project", "time"], DirectedEdge["PUH-Project", "transformers"], DirectedEdge["PageIO", "array"], DirectedEdge["PageIO", "attoparsec"], DirectedEdge["PageIO", "base"], DirectedEdge["PageIO", "base64-string"], DirectedEdge["PageIO", "bytestring"], DirectedEdge["PageIO", "containers"], DirectedEdge["PageIO", "directory"], DirectedEdge["PageIO", "iconv"], DirectedEdge["PageIO", "network"], DirectedEdge["PageIO", "old-time"], DirectedEdge["PageIO", "regex-base"], DirectedEdge["PageIO", "regex-compat"], DirectedEdge["PageIO", "regex-tdfa"], DirectedEdge["PageIO", "sqlite"], DirectedEdge["PageIO", "stringtable-atom"], DirectedEdge["PageIO", "utf8-string"], DirectedEdge["PageIO", "uuid"], DirectedEdge["Paillier", "base"], DirectedEdge["Paillier", "crypto-numbers"], DirectedEdge["Paillier", "crypto-random"], DirectedEdge["PandocAgda", "Agda"], DirectedEdge["PandocAgda", "base"], DirectedEdge["PandocAgda", "containers"], DirectedEdge["PandocAgda", "directory"], DirectedEdge["PandocAgda", "filepath"], DirectedEdge["PandocAgda", "mtl"], DirectedEdge["PandocAgda", "old-time"], DirectedEdge["PandocAgda", "pandoc"], DirectedEdge["PandocAgda", "pandoc-types"], DirectedEdge["PandocAgda", "PandocAgda"], DirectedEdge["PandocAgda", "QuickCheck"], DirectedEdge["PandocAgda", "text"], DirectedEdge["PandocAgda", "time"], DirectedEdge["PandocAgda", "xhtml"], DirectedEdge["Paraiso", "array"], DirectedEdge["Paraiso", "base"], DirectedEdge["Paraiso", "containers"], DirectedEdge["Paraiso", "directory"], DirectedEdge["Paraiso", "failure"], DirectedEdge["Paraiso", "fgl"], DirectedEdge["Paraiso", "filepath"], DirectedEdge["Paraiso", "mtl"], DirectedEdge["Paraiso", "numeric-prelude"], DirectedEdge["Paraiso", "random"], DirectedEdge["Paraiso", "text"], DirectedEdge["Paraiso", "typelevel-tensor"], DirectedEdge["Paraiso", "vector"], DirectedEdge["Parry", "base"], DirectedEdge["Parry", "binary"], DirectedEdge["Parry", "bytestring"], DirectedEdge["Parry", "containers"], DirectedEdge["Parry", "directory"], DirectedEdge["Parry", "ghc-prim"], DirectedEdge["Parry", "network"], DirectedEdge["Parry", "old-locale"], DirectedEdge["Parry", "process"], DirectedEdge["Parry", "random"], DirectedEdge["Parry", "RSA"], DirectedEdge["Parry", "SafeSemaphore"], DirectedEdge["Parry", "time"], DirectedEdge["Parry", "unix"], DirectedEdge["ParsecTools", "base"], DirectedEdge["ParsecTools", "parsec"], DirectedEdge["ParserFunction", "attoparsec"], DirectedEdge["ParserFunction", "base"], DirectedEdge["ParserFunction", "containers"], DirectedEdge["ParserFunction", "parsec"], DirectedEdge["PartialTypeSignatures", "base"], DirectedEdge["PartialTypeSignatures", "containers"], DirectedEdge["PartialTypeSignatures", "syb"], DirectedEdge["PartialTypeSignatures", "template-haskell"], DirectedEdge["PasswordGenerator", "base"], DirectedEdge["PasswordGenerator", "QuickCheck"], DirectedEdge["PastePipe", "base"], DirectedEdge["PastePipe", "cmdargs"], DirectedEdge["PastePipe", "HTTP"], DirectedEdge["PastePipe", "network"], DirectedEdge["PastePipe", "network-uri"], DirectedEdge["PastePipe", "PastePipe"], DirectedEdge["Pathfinder", "base"], DirectedEdge["Pathfinder", "bytestring"], DirectedEdge["Pathfinder", "text"], DirectedEdge["Peano", "base"], DirectedEdge["PeanoWitnesses", "base"], DirectedEdge["PerfectHash", "array"], DirectedEdge["PerfectHash", "base"], DirectedEdge["PerfectHash", "binary"], DirectedEdge["PerfectHash", "bytestring"], DirectedEdge["PerfectHash", "containers"], DirectedEdge["PerfectHash", "digest"], DirectedEdge["PerfectHash", "time"], DirectedEdge["PermuteEffects", "base"], DirectedEdge["PermuteEffects", "ReplicateEffects"], DirectedEdge["Phsu", "acid-state"], DirectedEdge["Phsu", "aeson"], DirectedEdge["Phsu", "base"], DirectedEdge["Phsu", "blaze-html"], DirectedEdge["Phsu", "blaze-markup"], DirectedEdge["Phsu", "containers"], DirectedEdge["Phsu", "curl"], DirectedEdge["Phsu", "filepath"], DirectedEdge["Phsu", "friendly-time"], DirectedEdge["Phsu", "happstack-server"], DirectedEdge["Phsu", "happstack-server-tls"], DirectedEdge["Phsu", "lifted-base"], DirectedEdge["Phsu", "MissingH"], DirectedEdge["Phsu", "monad-control"], DirectedEdge["Phsu", "mtl"], DirectedEdge["Phsu", "network"], DirectedEdge["Phsu", "network-uri"], DirectedEdge["Phsu", "old-locale"], DirectedEdge["Phsu", "process"], DirectedEdge["Phsu", "regex-base"], DirectedEdge["Phsu", "regex-pcre"], DirectedEdge["Phsu", "safecopy"], DirectedEdge["Phsu", "string-conversions"], DirectedEdge["Phsu", "temporary"], DirectedEdge["Phsu", "text"], DirectedEdge["Phsu", "time"], DirectedEdge["Pipe", "base"], DirectedEdge["Pipe", "filepath"], DirectedEdge["Pipe", "process"], DirectedEdge["Pipe", "unix"], DirectedEdge["Piso", "base"], DirectedEdge["Piso", "template-haskell"], DirectedEdge["PlayHangmanGame", "base"], DirectedEdge["PlayHangmanGame", "containers"], DirectedEdge["PlayHangmanGame", "directory"], DirectedEdge["PlayHangmanGame", "mtl"], DirectedEdge["PlayHangmanGame", "random"], DirectedEdge["PlayHangmanGame", "regex-compat"], DirectedEdge["PlayingCards", "base"], DirectedEdge["PlayingCards", "HUnit"], DirectedEdge["PlayingCards", "MonadRandom"], DirectedEdge["PlayingCards", "QuickCheck"], DirectedEdge["PlayingCards", "random-shuffle"], DirectedEdge["Plot-ho-matic", "base"], DirectedEdge["Plot-ho-matic", "bytestring"], DirectedEdge["Plot-ho-matic", "cairo"], DirectedEdge["Plot-ho-matic", "cereal"], DirectedEdge["Plot-ho-matic", "Chart"], DirectedEdge["Plot-ho-matic", "Chart-cairo"], DirectedEdge["Plot-ho-matic", "containers"], DirectedEdge["Plot-ho-matic", "data-default-class"], DirectedEdge["Plot-ho-matic", "generic-accessors"], DirectedEdge["Plot-ho-matic", "glib"], DirectedEdge["Plot-ho-matic", "lens"], DirectedEdge["Plot-ho-matic", "Plot-ho-matic"], DirectedEdge["Plot-ho-matic", "text"], DirectedEdge["Plot-ho-matic", "time"], DirectedEdge["Plot-ho-matic", "transformers"], DirectedEdge["Plot-ho-matic", "vector"], DirectedEdge["PlslTools", "array"], DirectedEdge["PlslTools", "base"], DirectedEdge["PlslTools", "directory"], DirectedEdge["PlslTools", "filepath"], DirectedEdge["PlslTools", "old-locale"], DirectedEdge["PlslTools", "old-time"], DirectedEdge["PlslTools", "parsec"], DirectedEdge["PlslTools", "process"], DirectedEdge["PlslTools", "random"], DirectedEdge["Plural", "base"], DirectedEdge["Plural", "containers"], DirectedEdge["Plural", "regex-tdfa"], DirectedEdge["Pollutocracy", "array"], DirectedEdge["Pollutocracy", "base"], DirectedEdge["Pollutocracy", "clock"], DirectedEdge["Pollutocracy", "GLUT"], DirectedEdge["Pollutocracy", "random"], DirectedEdge["PortFusion", "base"], DirectedEdge["PortFusion", "bytestring"], DirectedEdge["PortFusion", "network"], DirectedEdge["PortFusion", "splice"], DirectedEdge["PortMidi", "base"], DirectedEdge["PostgreSQL", "base"], DirectedEdge["PostgreSQL", "mtl"], DirectedEdge["PrimitiveArray", "aeson"], DirectedEdge["PrimitiveArray", "base"], DirectedEdge["PrimitiveArray", "binary"], DirectedEdge["PrimitiveArray", "bits"], DirectedEdge["PrimitiveArray", "cereal"], DirectedEdge["PrimitiveArray", "cereal-vector"], DirectedEdge["PrimitiveArray", "deepseq"], DirectedEdge["PrimitiveArray", "hashable"], DirectedEdge["PrimitiveArray", "OrderedBits"], DirectedEdge["PrimitiveArray", "primitive"], DirectedEdge["PrimitiveArray", "QuickCheck"], DirectedEdge["PrimitiveArray", "vector"], DirectedEdge["PrimitiveArray", "vector-binary-instances"], DirectedEdge["PrimitiveArray", "vector-th-unbox"], DirectedEdge["PrimitiveArray-Pretty", "base"], DirectedEdge["PrimitiveArray-Pretty", "diagrams"], DirectedEdge["PrimitiveArray-Pretty", "diagrams-lib"], DirectedEdge["PrimitiveArray-Pretty", "diagrams-postscript"], DirectedEdge["PrimitiveArray-Pretty", "diagrams-svg"], DirectedEdge["PrimitiveArray-Pretty", "log-domain"], DirectedEdge["PrimitiveArray-Pretty", "split"], DirectedEdge["Printf-TH", "base"], DirectedEdge["Printf-TH", "pretty"], DirectedEdge["Printf-TH", "template-haskell"], DirectedEdge["PriorityChansConverger", "base"], DirectedEdge["PriorityChansConverger", "containers"], DirectedEdge["PriorityChansConverger", "stm"], DirectedEdge["ProbabilityMonads", "base"], DirectedEdge["ProbabilityMonads", "MaybeT"], DirectedEdge["ProbabilityMonads", "MonadRandom"], DirectedEdge["ProbabilityMonads", "mtl"], DirectedEdge["PropLogic", "base"], DirectedEdge["PropLogic", "old-time"], DirectedEdge["PropLogic", "random"], DirectedEdge["Proper", "base"], DirectedEdge["Proper", "containers"], DirectedEdge["Proper", "HUnit"], DirectedEdge["Proper", "parsec"], DirectedEdge["Proper", "syb"], DirectedEdge["ProxN", "base"], DirectedEdge["ProxN", "mtl"], DirectedEdge["Pugs", "array"], DirectedEdge["Pugs", "base"], DirectedEdge["Pugs", "binary"], DirectedEdge["Pugs", "bytestring"], DirectedEdge["Pugs", "containers"], DirectedEdge["Pugs", "control-timeout"], DirectedEdge["Pugs", "directory"], DirectedEdge["Pugs", "filepath"], DirectedEdge["Pugs", "FindBin"], DirectedEdge["Pugs", "hashable"], DirectedEdge["Pugs", "hashtables"], DirectedEdge["Pugs", "haskeline"], DirectedEdge["Pugs", "HsParrot"], DirectedEdge["Pugs", "HsSyck"], DirectedEdge["Pugs", "MetaObject"], DirectedEdge["Pugs", "mtl"], DirectedEdge["Pugs", "network"], DirectedEdge["Pugs", "parsec"], DirectedEdge["Pugs", "pretty"], DirectedEdge["Pugs", "process"], DirectedEdge["Pugs", "pugs-compat"], DirectedEdge["Pugs", "pugs-DrIFT"], DirectedEdge["Pugs", "random"], DirectedEdge["Pugs", "stm"], DirectedEdge["Pugs", "stringtable-atom"], DirectedEdge["Pugs", "text"], DirectedEdge["Pugs", "time"], DirectedEdge["Pugs", "utf8-string"], DirectedEdge["Pup-Events", "base"], DirectedEdge["Pup-Events", "Pup-Events-Client"], DirectedEdge["Pup-Events", "Pup-Events-PQueue"], DirectedEdge["Pup-Events", "Pup-Events-Server"], DirectedEdge["Pup-Events-Client", "base"], DirectedEdge["Pup-Events-Client", "network"], DirectedEdge["Pup-Events-Client", "parsec"], DirectedEdge["Pup-Events-Client", "Pup-Events-PQueue"], DirectedEdge["Pup-Events-Client", "stm"], DirectedEdge["Pup-Events-Client", "transformers"], DirectedEdge["Pup-Events-Demo", "base"], DirectedEdge["Pup-Events-Demo", "GLUT"], DirectedEdge["Pup-Events-Demo", "OpenGL"], DirectedEdge["Pup-Events-Demo", "parsec"], DirectedEdge["Pup-Events-Demo", "Pup-Events-Client"], DirectedEdge["Pup-Events-Demo", "Pup-Events-PQueue"], DirectedEdge["Pup-Events-Demo", "Pup-Events-Server"], DirectedEdge["Pup-Events-Demo", "stm"], DirectedEdge["Pup-Events-PQueue", "base"], DirectedEdge["Pup-Events-PQueue", "stm"], DirectedEdge["Pup-Events-Server", "base"], DirectedEdge["Pup-Events-Server", "network"], DirectedEdge["Pup-Events-Server", "parsec"], DirectedEdge["Pup-Events-Server", "Pup-Events-PQueue"], DirectedEdge["Pup-Events-Server", "stm"], DirectedEdge["Pup-Events-Server", "transformers"], DirectedEdge["QIO", "base"], DirectedEdge["QIO", "containers"], DirectedEdge["QIO", "mtl"], DirectedEdge["QIO", "old-time"], DirectedEdge["QIO", "random"], DirectedEdge["QLearn", "base"], DirectedEdge["QLearn", "random"], DirectedEdge["QLearn", "vector"], DirectedEdge["QuadEdge", "base"], DirectedEdge["QuadEdge", "random"], DirectedEdge["QuadEdge", "vector"], DirectedEdge["QuadTree", "base"], DirectedEdge["QuadTree", "composition"], DirectedEdge["QuadTree", "lens"], DirectedEdge["QuasiText", "attoparsec"], DirectedEdge["QuasiText", "base"], DirectedEdge["QuasiText", "haskell-src-meta"], DirectedEdge["QuasiText", "template-haskell"], DirectedEdge["QuasiText", "text"], DirectedEdge["Quelea", "base"], DirectedEdge["Quelea", "bytestring"], DirectedEdge["Quelea", "cassandra-cql"], DirectedEdge["Quelea", "cereal"], DirectedEdge["Quelea", "containers"], DirectedEdge["Quelea", "derive"], DirectedEdge["Quelea", "directory"], DirectedEdge["Quelea", "lens"], DirectedEdge["Quelea", "mtl"], DirectedEdge["Quelea", "optparse-applicative"], DirectedEdge["Quelea", "process"], DirectedEdge["Quelea", "random"], DirectedEdge["Quelea", "template-haskell"], DirectedEdge["Quelea", "text"], DirectedEdge["Quelea", "time"], DirectedEdge["Quelea", "transformers"], DirectedEdge["Quelea", "tuple"], DirectedEdge["Quelea", "unix"], DirectedEdge["Quelea", "uuid"], DirectedEdge["Quelea", "zeromq4-haskell"], DirectedEdge["QuickAnnotate", "base"], DirectedEdge["QuickAnnotate", "haskell-src-exts"], DirectedEdge["QuickCheck", "base"], DirectedEdge["QuickCheck", "containers"], DirectedEdge["QuickCheck", "extensible-exceptions"], DirectedEdge["QuickCheck", "ghc"], DirectedEdge["QuickCheck", "ghc-prim"], DirectedEdge["QuickCheck", "old-locale"], DirectedEdge["QuickCheck", "old-time"], DirectedEdge["QuickCheck", "random"], DirectedEdge["QuickCheck", "template-haskell"], DirectedEdge["QuickCheck", "tf-random"], DirectedEdge["QuickCheck", "transformers"], DirectedEdge["QuickCheck-GenT", "base"], DirectedEdge["QuickCheck-GenT", "mtl"], DirectedEdge["QuickCheck-GenT", "QuickCheck"], DirectedEdge["QuickCheck-GenT", "random"], DirectedEdge["QuickCheck-safe", "base"], DirectedEdge["QuickCheck-safe", "QuickCheck"], DirectedEdge["QuickPlot", "aeson"], DirectedEdge["QuickPlot", "attoparsec"], DirectedEdge["QuickPlot", "base"], DirectedEdge["QuickPlot", "bytestring"], DirectedEdge["QuickPlot", "haskell-src-meta"], DirectedEdge["QuickPlot", "parsec"], DirectedEdge["QuickPlot", "QuickPlot"], DirectedEdge["QuickPlot", "scientific"], DirectedEdge["QuickPlot", "snap"], DirectedEdge["QuickPlot", "snap-core"], DirectedEdge["QuickPlot", "template-haskell"], DirectedEdge["QuickPlot", "text"], DirectedEdge["QuickPlot", "vector"], DirectedEdge["QuickPlot", "websockets"], DirectedEdge["QuickPlot", "websockets-snap"], DirectedEdge["Quickson", "aeson"], DirectedEdge["Quickson", "attoparsec"], DirectedEdge["Quickson", "base"], DirectedEdge["Quickson", "bytestring"], DirectedEdge["Quickson", "either"], DirectedEdge["Quickson", "text"], DirectedEdge["R-pandoc", "base"], DirectedEdge["R-pandoc", "directory"], DirectedEdge["R-pandoc", "filepath"], DirectedEdge["R-pandoc", "pandoc-types"], DirectedEdge["R-pandoc", "process"], DirectedEdge["R-pandoc", "R-pandoc"], DirectedEdge["R-pandoc", "split"], DirectedEdge["RANSAC", "base"], DirectedEdge["RANSAC", "random"], DirectedEdge["RANSAC", "vector"], DirectedEdge["RBTree", "base"], DirectedEdge["RESTng", "base"], DirectedEdge["RESTng", "HDBC"], DirectedEdge["RESTng", "HDBC-postgresql"], DirectedEdge["RESTng", "mtl"], DirectedEdge["RESTng", "old-time"], DirectedEdge["RESTng", "parsec"], DirectedEdge["RESTng", "redHandlers"], DirectedEdge["RESTng", "xhtml"], DirectedEdge["RESTng", "yuiGrid"], DirectedEdge["RFC1751", "base"], DirectedEdge["RFC1751", "binary"], DirectedEdge["RFC1751", "bytestring"], DirectedEdge["RFC1751", "vector"], DirectedEdge["RJson", "array"], DirectedEdge["RJson", "base"], DirectedEdge["RJson", "bytestring"], DirectedEdge["RJson", "containers"], DirectedEdge["RJson", "iconv"], DirectedEdge["RJson", "mtl"], DirectedEdge["RJson", "parsec"], DirectedEdge["RJson", "syb-with-class"], DirectedEdge["RMP", "allocated-processor"], DirectedEdge["RMP", "base"], DirectedEdge["RMP", "cv-combinators"], DirectedEdge["RMP", "HOpenCV"], DirectedEdge["RMP", "vector-space"], DirectedEdge["RNAFold", "ADPfusion"], DirectedEdge["RNAFold", "base"], DirectedEdge["RNAFold", "BiobaseTurner"], DirectedEdge["RNAFold", "BiobaseVienna"], DirectedEdge["RNAFold", "BiobaseXNA"], DirectedEdge["RNAFold", "cmdargs"], DirectedEdge["RNAFold", "containers"], DirectedEdge["RNAFold", "deepseq"], DirectedEdge["RNAFold", "lens"], DirectedEdge["RNAFold", "primitive"], DirectedEdge["RNAFold", "PrimitiveArray"], DirectedEdge["RNAFold", "repa"], DirectedEdge["RNAFold", "RNAFold"], DirectedEdge["RNAFold", "strict"], DirectedEdge["RNAFold", "vector"], DirectedEdge["RNAFoldProgs", "base"], DirectedEdge["RNAFoldProgs", "Biobase"], DirectedEdge["RNAFoldProgs", "BiobaseTurner"], DirectedEdge["RNAFoldProgs", "BiobaseTypes"], DirectedEdge["RNAFoldProgs", "BiobaseVienna"], DirectedEdge["RNAFoldProgs", "cmdargs"], DirectedEdge["RNAFoldProgs", "containers"], DirectedEdge["RNAFoldProgs", "HsTools"], DirectedEdge["RNAFoldProgs", "primitive"], DirectedEdge["RNAFoldProgs", "PrimitiveArray"], DirectedEdge["RNAFoldProgs", "RNAFold"], DirectedEdge["RNAFoldProgs", "split"], DirectedEdge["RNAFoldProgs", "vector"], DirectedEdge["RNAdesign", "array"], DirectedEdge["RNAdesign", "base"], DirectedEdge["RNAdesign", "BiobaseTurner"], DirectedEdge["RNAdesign", "BiobaseVienna"], DirectedEdge["RNAdesign", "BiobaseXNA"], DirectedEdge["RNAdesign", "bytestring"], DirectedEdge["RNAdesign", "cmdargs"], DirectedEdge["RNAdesign", "containers"], DirectedEdge["RNAdesign", "fgl"], DirectedEdge["RNAdesign", "fgl-extras-decompositions"], DirectedEdge["RNAdesign", "file-embed"], DirectedEdge["RNAdesign", "lens"], DirectedEdge["RNAdesign", "monad-primitive"], DirectedEdge["RNAdesign", "mwc-random-monad"], DirectedEdge["RNAdesign", "parallel"], DirectedEdge["RNAdesign", "parsec"], DirectedEdge["RNAdesign", "ParsecTools"], DirectedEdge["RNAdesign", "primitive"], DirectedEdge["RNAdesign", "PrimitiveArray"], DirectedEdge["RNAdesign", "random"], DirectedEdge["RNAdesign", "RNAFold"], DirectedEdge["RNAdesign", "transformers"], DirectedEdge["RNAdesign", "tuple"], DirectedEdge["RNAdesign", "vector"], DirectedEdge["RNAdesign", "ViennaRNA-bindings"], DirectedEdge["RNAdraw", "array"], DirectedEdge["RNAdraw", "base"], DirectedEdge["RNAdraw", "BiobaseXNA"], DirectedEdge["RNAdraw", "bytestring"], DirectedEdge["RNAdraw", "cmdargs"], DirectedEdge["RNAdraw", "containers"], DirectedEdge["RNAdraw", "PrimitiveArray"], DirectedEdge["RNAdraw", "QuasiText"], DirectedEdge["RNAdraw", "repa"], DirectedEdge["RNAdraw", "split"], DirectedEdge["RNAdraw", "text"], DirectedEdge["RNAdraw", "vector"], DirectedEdge["RNAlien", "aeson"], DirectedEdge["RNAlien", "base"], DirectedEdge["RNAlien", "biocore"], DirectedEdge["RNAlien", "biofasta"], DirectedEdge["RNAlien", "BlastHTTP"], DirectedEdge["RNAlien", "blastxml"], DirectedEdge["RNAlien", "bytestring"], DirectedEdge["RNAlien", "cassava"], DirectedEdge["RNAlien", "ClustalParser"], DirectedEdge["RNAlien", "cmdargs"], DirectedEdge["RNAlien", "containers"], DirectedEdge["RNAlien", "directory"], DirectedEdge["RNAlien", "edit-distance"], DirectedEdge["RNAlien", "either-unwrap"], DirectedEdge["RNAlien", "EntrezHTTP"], DirectedEdge["RNAlien", "filepath"], DirectedEdge["RNAlien", "hierarchical-clustering"], DirectedEdge["RNAlien", "HTTP"], DirectedEdge["RNAlien", "http-conduit"], DirectedEdge["RNAlien", "hxt"], DirectedEdge["RNAlien", "matrix"], DirectedEdge["RNAlien", "network"], DirectedEdge["RNAlien", "parsec"], DirectedEdge["RNAlien", "process"], DirectedEdge["RNAlien", "random"], DirectedEdge["RNAlien", "RNAlien"], DirectedEdge["RNAlien", "split"], DirectedEdge["RNAlien", "Taxonomy"], DirectedEdge["RNAlien", "text"], DirectedEdge["RNAlien", "time"], DirectedEdge["RNAlien", "transformers"], DirectedEdge["RNAlien", "vector"], DirectedEdge["RNAlien", "ViennaRNAParser"], DirectedEdge["RNAwolf", "base"], DirectedEdge["RNAwolf", "BiobaseTrainingData"], DirectedEdge["RNAwolf", "BiobaseXNA"], DirectedEdge["RNAwolf", "bytestring"], DirectedEdge["RNAwolf", "cmdargs"], DirectedEdge["RNAwolf", "containers"], DirectedEdge["RNAwolf", "deepseq"], DirectedEdge["RNAwolf", "directory"], DirectedEdge["RNAwolf", "parallel"], DirectedEdge["RNAwolf", "PrimitiveArray"], DirectedEdge["RNAwolf", "random"], DirectedEdge["RNAwolf", "split"], DirectedEdge["RNAwolf", "StatisticalMethods"], DirectedEdge["RNAwolf", "vector"], DirectedEdge["RSA", "base"], DirectedEdge["RSA", "binary"], DirectedEdge["RSA", "bytestring"], DirectedEdge["RSA", "crypto-api"], DirectedEdge["RSA", "crypto-pubkey-types"], DirectedEdge["RSA", "SHA"], DirectedEdge["Raincat", "base"], DirectedEdge["Raincat", "containers"], DirectedEdge["Raincat", "extensible-exceptions"], DirectedEdge["Raincat", "GLUT"], DirectedEdge["Raincat", "mtl"], DirectedEdge["Raincat", "OpenGL"], DirectedEdge["Raincat", "random"], DirectedEdge["Raincat", "SDL"], DirectedEdge["Raincat", "SDL-image"], DirectedEdge["Raincat", "SDL-mixer"], DirectedEdge["Raincat", "time"], DirectedEdge["Random123", "array"], DirectedEdge["Random123", "base"], DirectedEdge["Random123", "data-dword"], DirectedEdge["Random123", "random"], DirectedEdge["RandomDotOrg", "base"], DirectedEdge["RandomDotOrg", "HTTP-Simple"], DirectedEdge["RandomDotOrg", "network"], DirectedEdge["Randometer", "base"], DirectedEdge["Randometer", "random-fu"], DirectedEdge["Range", "base"], DirectedEdge["Ranged-sets", "base"], DirectedEdge["Ranged-sets", "HUnit"], DirectedEdge["Ranged-sets", "QuickCheck"], DirectedEdge["Ranka", "base"], DirectedEdge["Ranka", "HTTP"], DirectedEdge["Ranka", "json"], DirectedEdge["Ranka", "network"], DirectedEdge["Ranka", "utf8-string"], DirectedEdge["Ranka", "XMPP"], DirectedEdge["Rasenschach", "array"], DirectedEdge["Rasenschach", "base"], DirectedEdge["Rasenschach", "bytestring"], DirectedEdge["Rasenschach", "cereal"], DirectedEdge["Rasenschach", "containers"], DirectedEdge["Rasenschach", "convertible"], DirectedEdge["Rasenschach", "directory"], DirectedEdge["Rasenschach", "filepath"], DirectedEdge["Rasenschach", "ghc"], DirectedEdge["Rasenschach", "GLUT"], DirectedEdge["Rasenschach", "monad-loops"], DirectedEdge["Rasenschach", "OpenGL"], DirectedEdge["Rasenschach", "OpenGLRaw"], DirectedEdge["Rasenschach", "time"], DirectedEdge["Rasenschach", "Yampa"], DirectedEdge["Rasterific", "base"], DirectedEdge["Rasterific", "bytestring"], DirectedEdge["Rasterific", "containers"], DirectedEdge["Rasterific", "dlist"], DirectedEdge["Rasterific", "FontyFruity"], DirectedEdge["Rasterific", "free"], DirectedEdge["Rasterific", "JuicyPixels"], DirectedEdge["Rasterific", "linear"], DirectedEdge["Rasterific", "mtl"], DirectedEdge["Rasterific", "primitive"], DirectedEdge["Rasterific", "vector"], DirectedEdge["Rasterific", "vector-algorithms"], DirectedEdge["ReadArgs", "base"], DirectedEdge["ReadArgs", "system-filepath"], DirectedEdge["ReadArgs", "text"], DirectedEdge["Redmine", "aeson"], DirectedEdge["Redmine", "base"], DirectedEdge["Redmine", "bytestring"], DirectedEdge["Redmine", "connection"], DirectedEdge["Redmine", "containers"], DirectedEdge["Redmine", "HTTP"], DirectedEdge["Redmine", "http-client-tls"], DirectedEdge["Redmine", "http-conduit"], DirectedEdge["Redmine", "http-types"], DirectedEdge["Redmine", "MissingH"], DirectedEdge["Redmine", "network"], DirectedEdge["Redmine", "old-locale"], DirectedEdge["Redmine", "old-time"], DirectedEdge["Redmine", "resourcet"], DirectedEdge["Redmine", "text"], DirectedEdge["Redmine", "time"], DirectedEdge["Redmine", "transformers"], DirectedEdge["Ref", "base"], DirectedEdge["Ref", "ghc-prim"], DirectedEdge["RefSerialize", "base"], DirectedEdge["RefSerialize", "binary"], DirectedEdge["RefSerialize", "bytestring"], DirectedEdge["RefSerialize", "containers"], DirectedEdge["RefSerialize", "hashtables"], DirectedEdge["RefSerialize", "stringsearch"], DirectedEdge["Referees", "base"], DirectedEdge["Referees", "bytestring"], DirectedEdge["Referees", "cassava"], DirectedEdge["Referees", "cmdargs"], DirectedEdge["Referees", "cond"], DirectedEdge["Referees", "containers"], DirectedEdge["Referees", "directory"], DirectedEdge["Referees", "glpk-hs"], DirectedEdge["Referees", "hscolour"], DirectedEdge["Referees", "matrix"], DirectedEdge["Referees", "MissingH"], DirectedEdge["Referees", "Referees"], DirectedEdge["Referees", "vector"], DirectedEdge["RepLib", "base"], DirectedEdge["RepLib", "containers"], DirectedEdge["RepLib", "mtl"], DirectedEdge["RepLib", "template-haskell"], DirectedEdge["RepLib", "transformers"], DirectedEdge["RepLib", "type-equality"], DirectedEdge["ReplicateEffects", "base"], DirectedEdge["ReviewBoard", "base"], DirectedEdge["ReviewBoard", "directory"], DirectedEdge["ReviewBoard", "HTTP"], DirectedEdge["ReviewBoard", "json"], DirectedEdge["ReviewBoard", "mtl"], DirectedEdge["ReviewBoard", "network"], DirectedEdge["ReviewBoard", "process"], DirectedEdge["ReviewBoard", "random"], DirectedEdge["RichConditional", "base"], DirectedEdge["Rlang-QQ", "inline-r"], DirectedEdge["Rlang-QQ", "array"], DirectedEdge["Rlang-QQ", "base"], DirectedEdge["Rlang-QQ", "binary"], DirectedEdge["Rlang-QQ", "bytestring"], DirectedEdge["Rlang-QQ", "Cabal"], DirectedEdge["Rlang-QQ", "containers"], DirectedEdge["Rlang-QQ", "directory"], DirectedEdge["Rlang-QQ", "filepath"], DirectedEdge["Rlang-QQ", "haskell-src-meta"], DirectedEdge["Rlang-QQ", "HList"], DirectedEdge["Rlang-QQ", "lens"], DirectedEdge["Rlang-QQ", "mtl"], DirectedEdge["Rlang-QQ", "process"], DirectedEdge["Rlang-QQ", "repa"], DirectedEdge["Rlang-QQ", "SHA"], DirectedEdge["Rlang-QQ", "split"], DirectedEdge["Rlang-QQ", "syb"], DirectedEdge["Rlang-QQ", "template-haskell"], DirectedEdge["Rlang-QQ", "temporary"], DirectedEdge["Rlang-QQ", "text"], DirectedEdge["Rlang-QQ", "transformers"], DirectedEdge["Rlang-QQ", "trifecta"], DirectedEdge["Rlang-QQ", "utf8-string"], DirectedEdge["Rlang-QQ", "vector"], DirectedEdge["Rlang-QQ", "zlib"], DirectedEdge["RollingDirectory", "base"], DirectedEdge["RollingDirectory", "directory"], DirectedEdge["RollingDirectory", "filepath"], DirectedEdge["RollingDirectory", "hdaemonize"], DirectedEdge["RollingDirectory", "hdaemonize-buildfix"], DirectedEdge["RollingDirectory", "hinotify"], DirectedEdge["RollingDirectory", "hsyslog"], DirectedEdge["RollingDirectory", "monad-parallel"], DirectedEdge["RollingDirectory", "unix"], DirectedEdge["RoyalMonad", "base"], DirectedEdge["RxHaskell", "base"], DirectedEdge["RxHaskell", "containers"], DirectedEdge["RxHaskell", "stm"], DirectedEdge["RxHaskell", "transformers"], DirectedEdge["SBench", "base"], DirectedEdge["SBench", "bytestring"], DirectedEdge["SBench", "cassava"], DirectedEdge["SBench", "criterion"], DirectedEdge["SBench", "deepseq"], DirectedEdge["SBench", "directory"], DirectedEdge["SBench", "filepath"], DirectedEdge["SBench", "gnuplot"], DirectedEdge["SBench", "hp2any-core"], DirectedEdge["SBench", "parsec"], DirectedEdge["SBench", "process"], DirectedEdge["SBench", "utf8-string"], DirectedEdge["SBench", "vector"], DirectedEdge["SConfig", "base"], DirectedEdge["SConfig", "containers"], DirectedEdge["SDL", "base"], DirectedEdge["SDL-gfx", "base"], DirectedEdge["SDL-gfx", "SDL"], DirectedEdge["SDL-image", "base"], DirectedEdge["SDL-image", "SDL"], DirectedEdge["SDL-mixer", "base"], DirectedEdge["SDL-mixer", "SDL"], DirectedEdge["SDL-mpeg", "base"], DirectedEdge["SDL-mpeg", "SDL"], DirectedEdge["SDL-ttf", "base"], DirectedEdge["SDL-ttf", "SDL"], DirectedEdge["SDL2-ttf", "sdl2-ttf"], DirectedEdge["SDL2-ttf", "base"], DirectedEdge["SFML", "base"], DirectedEdge["SFML-control", "base"], DirectedEdge["SFML-control", "mtl"], DirectedEdge["SFML-control", "SFML"], DirectedEdge["SFML-control", "template-haskell"], DirectedEdge["SFont", "array"], DirectedEdge["SFont", "base"], DirectedEdge["SFont", "SDL"], DirectedEdge["SFont", "Sprig"], DirectedEdge["SG", "base"], DirectedEdge["SG", "mtl"], DirectedEdge["SGdemo", "base"], DirectedEdge["SGdemo", "GLUT"], DirectedEdge["SGdemo", "OpenGL"], DirectedEdge["SGdemo", "SG"], DirectedEdge["SHA", "array"], DirectedEdge["SHA", "base"], DirectedEdge["SHA", "binary"], DirectedEdge["SHA", "bytestring"], DirectedEdge["SHA", "directory"], DirectedEdge["SHA", "SHA"], DirectedEdge["SHA2", "AES"], DirectedEdge["SHA2", "base"], DirectedEdge["SHA2", "bytestring"], DirectedEdge["SHA2", "monads-tf"], DirectedEdge["SHA2", "transformers"], DirectedEdge["SMTPClient", "base"], DirectedEdge["SMTPClient", "containers"], DirectedEdge["SMTPClient", "extensible-exceptions"], DirectedEdge["SMTPClient", "hsemail"], DirectedEdge["SMTPClient", "network"], DirectedEdge["SMTPClient", "old-locale"], DirectedEdge["SMTPClient", "old-time"], DirectedEdge["SNet", "base"], DirectedEdge["SNet", "bindings-DSL"], DirectedEdge["SNet", "containers"], DirectedEdge["SNet", "data-default"], DirectedEdge["SNet", "lens"], DirectedEdge["SNet", "mtl"], DirectedEdge["SNet", "transformers"], DirectedEdge["SQLDeps", "base"], DirectedEdge["SQLDeps", "hashable"], DirectedEdge["SQLDeps", "HDBC"], DirectedEdge["SQLDeps", "mtl"], DirectedEdge["SQLDeps", "unordered-containers"], DirectedEdge["STL", "attoparsec"], DirectedEdge["STL", "base"], DirectedEdge["STL", "bytestring"], DirectedEdge["STL", "cereal"], DirectedEdge["STL", "text"], DirectedEdge["STMonadTrans", "array"], DirectedEdge["STMonadTrans", "base"], DirectedEdge["STMonadTrans", "mtl"], DirectedEdge["SVG2Q", "base"], DirectedEdge["SVG2Q", "language-c"], DirectedEdge["SVG2Q", "pretty"], DirectedEdge["SVG2Q", "svgutils"], DirectedEdge["SVG2Q", "syb"], DirectedEdge["SVG2Q", "xml"], DirectedEdge["SVGFonts", "attoparsec"], DirectedEdge["SVGFonts", "base"], DirectedEdge["SVGFonts", "blaze-markup"], DirectedEdge["SVGFonts", "blaze-svg"], DirectedEdge["SVGFonts", "containers"], DirectedEdge["SVGFonts", "data-default-class"], DirectedEdge["SVGFonts", "diagrams-core"], DirectedEdge["SVGFonts", "diagrams-lib"], DirectedEdge["SVGFonts", "directory"], DirectedEdge["SVGFonts", "parsec"], DirectedEdge["SVGFonts", "split"], DirectedEdge["SVGFonts", "text"], DirectedEdge["SVGFonts", "tuple"], DirectedEdge["SVGFonts", "vector"], DirectedEdge["SVGFonts", "xml"], DirectedEdge["SVGPath", "base"], DirectedEdge["SVGPath", "parsec"], DirectedEdge["SWMMoutGetMB", "base"], DirectedEdge["SWMMoutGetMB", "binary"], DirectedEdge["SWMMoutGetMB", "bytestring"], DirectedEdge["SWMMoutGetMB", "pipes-binary"], DirectedEdge["SWMMoutGetMB", "pipes-bytestring"], DirectedEdge["SWMMoutGetMB", "pipes-parse"], DirectedEdge["SWMMoutGetMB", "split"], DirectedEdge["SableCC2Hs", "array"], DirectedEdge["SableCC2Hs", "base"], DirectedEdge["SableCC2Hs", "containers"], DirectedEdge["SableCC2Hs", "filepath"], DirectedEdge["SableCC2Hs", "loch-th"], DirectedEdge["SableCC2Hs", "pretty"], DirectedEdge["SableCC2Hs", "text"], DirectedEdge["SableCC2Hs", "transformers"], DirectedEdge["SableCC2Hs", "wl-pprint-text"], DirectedEdge["SableCC2Hs", "xml"], DirectedEdge["Safe", "safe"], DirectedEdge["Safe", "base"], DirectedEdge["SafeSemaphore", "base"], DirectedEdge["SafeSemaphore", "containers"], DirectedEdge["SafeSemaphore", "stm"], DirectedEdge["Salsa", "base"], DirectedEdge["Salsa", "bytestring"], DirectedEdge["Salsa", "file-embed"], DirectedEdge["Saturnin", "base"], DirectedEdge["Saturnin", "bytestring"], DirectedEdge["Saturnin", "data-default"], DirectedEdge["Saturnin", "directory"], DirectedEdge["Saturnin", "either"], DirectedEdge["Saturnin", "exceptions"], DirectedEdge["Saturnin", "filepath"], DirectedEdge["Saturnin", "formatting"], DirectedEdge["Saturnin", "ini"], DirectedEdge["Saturnin", "mtl"], DirectedEdge["Saturnin", "network"], DirectedEdge["Saturnin", "old-locale"], DirectedEdge["Saturnin", "process"], DirectedEdge["Saturnin", "Saturnin"], DirectedEdge["Saturnin", "spawn"], DirectedEdge["Saturnin", "stm"], DirectedEdge["Saturnin", "temporary"], DirectedEdge["Saturnin", "text"], DirectedEdge["Saturnin", "time"], DirectedEdge["Saturnin", "unordered-containers"], DirectedEdge["Saturnin", "yaml"], DirectedEdge["SciFlow", "base"], DirectedEdge["SciFlow", "bytestring"], DirectedEdge["SciFlow", "containers"], DirectedEdge["SciFlow", "data-default-class"], DirectedEdge["SciFlow", "fgl"], DirectedEdge["SciFlow", "graphviz"], DirectedEdge["SciFlow", "lens"], DirectedEdge["SciFlow", "mtl"], DirectedEdge["SciFlow", "optparse-applicative"], DirectedEdge["SciFlow", "shelly"], DirectedEdge["SciFlow", "split"], DirectedEdge["SciFlow", "template-haskell"], DirectedEdge["SciFlow", "text"], DirectedEdge["SciFlow", "th-lift"], DirectedEdge["SciFlow", "yaml"], DirectedEdge["ScratchFs", "base"], DirectedEdge["ScratchFs", "bytestring"], DirectedEdge["ScratchFs", "directory"], DirectedEdge["ScratchFs", "filepath"], DirectedEdge["ScratchFs", "HFuse"], DirectedEdge["ScratchFs", "hsyslog"], DirectedEdge["ScratchFs", "process"], DirectedEdge["ScratchFs", "regex-compat"], DirectedEdge["ScratchFs", "sqlite-simple"], DirectedEdge["ScratchFs", "unix"], DirectedEdge["Scurry", "base"], DirectedEdge["Scurry", "binary"], DirectedEdge["Scurry", "bytestring"], DirectedEdge["Scurry", "containers"], DirectedEdge["Scurry", "network"], DirectedEdge["Scurry", "network-bytestring"], DirectedEdge["Scurry", "parsec"], DirectedEdge["Scurry", "random"], DirectedEdge["Scurry", "stm"], DirectedEdge["Scurry", "time"], DirectedEdge["Scurry", "unix"], DirectedEdge["SegmentTree", "base"], DirectedEdge["SegmentTree", "HUnit"], DirectedEdge["SegmentTree", "QuickCheck"], DirectedEdge["SegmentTree", "test-framework"], DirectedEdge["SegmentTree", "test-framework-hunit"], DirectedEdge["Semantique", "base"], DirectedEdge["Semantique", "bytestring"], DirectedEdge["Semantique", "classify"], DirectedEdge["Semantique", "containers"], DirectedEdge["Semantique", "mongoDB"], DirectedEdge["Semantique", "mtl"], DirectedEdge["Semantique", "network"], DirectedEdge["Semantique", "process"], DirectedEdge["Semantique", "split"], DirectedEdge["Semantique", "tagsoup"], DirectedEdge["Semantique", "text"], DirectedEdge["Semigroup", "base"], DirectedEdge["Semigroup", "bytestring"], DirectedEdge["Semigroup", "containers"], DirectedEdge["Semigroup", "mtl"], DirectedEdge["SeqAlign", "seqalign"], DirectedEdge["SeqAlign", "base"], DirectedEdge["SeqAlign", "bytestring"], DirectedEdge["SeqAlign", "vector"], DirectedEdge["SessionLogger", "base"], DirectedEdge["SessionLogger", "directory"], DirectedEdge["SessionLogger", "filepath"], DirectedEdge["SessionLogger", "hslogger"], DirectedEdge["SessionLogger", "mtl"], DirectedEdge["SessionLogger", "old-locale"], DirectedEdge["SessionLogger", "random"], DirectedEdge["SessionLogger", "time"], DirectedEdge["ShellCheck", "base"], DirectedEdge["ShellCheck", "containers"], DirectedEdge["ShellCheck", "directory"], DirectedEdge["ShellCheck", "json"], DirectedEdge["ShellCheck", "mtl"], DirectedEdge["ShellCheck", "parsec"], DirectedEdge["ShellCheck", "process"], DirectedEdge["ShellCheck", "QuickCheck"], DirectedEdge["ShellCheck", "regex-tdfa"], DirectedEdge["ShellCheck", "ShellCheck"], DirectedEdge["Shellac", "base"], DirectedEdge["Shellac", "directory"], DirectedEdge["Shellac", "mtl"], DirectedEdge["Shellac", "unix"], DirectedEdge["Shellac-compatline", "base"], DirectedEdge["Shellac-compatline", "DependencyResolutionFailure"], DirectedEdge["Shellac-compatline", "Shellac"], DirectedEdge["Shellac-compatline", "Shellac-editline"], DirectedEdge["Shellac-compatline", "Shellac-readline"], DirectedEdge["Shellac-editline", "base"], DirectedEdge["Shellac-editline", "editline"], DirectedEdge["Shellac-editline", "Shellac"], DirectedEdge["Shellac-haskeline", "base"], DirectedEdge["Shellac-haskeline", "haskeline"], DirectedEdge["Shellac-haskeline", "mtl"], DirectedEdge["Shellac-haskeline", "Shellac"], DirectedEdge["Shellac-readline", "base"], DirectedEdge["Shellac-readline", "readline"], DirectedEdge["Shellac-readline", "Shellac"], DirectedEdge["ShowF", "base"], DirectedEdge["Shrub", "base"], DirectedEdge["Shu-thing", "base"], DirectedEdge["Shu-thing", "GLUT"], DirectedEdge["SimpleAES", "base"], DirectedEdge["SimpleAES", "binary"], DirectedEdge["SimpleAES", "bytestring"], DirectedEdge["SimpleAES", "mwc-random"], DirectedEdge["SimpleEA", "base"], DirectedEdge["SimpleEA", "MonadRandom"], DirectedEdge["SimpleGL", "definitive-graphics"], DirectedEdge["SimpleGL", "base"], DirectedEdge["SimpleGL", "GLFW"], DirectedEdge["SimpleGL", "JuicyPixels"], DirectedEdge["SimpleGL", "OpenGL"], DirectedEdge["SimpleGL", "SimpleH"], DirectedEdge["SimpleGL", "vector"], DirectedEdge["SimpleH", "definitive-base"], DirectedEdge["SimpleH", "base"], DirectedEdge["SimpleH", "bytestring"], DirectedEdge["SimpleH", "clock"], DirectedEdge["SimpleH", "containers"], DirectedEdge["SimpleH", "cpu"], DirectedEdge["SimpleH", "directory"], DirectedEdge["SimpleH", "filepath"], DirectedEdge["SimpleH", "network"], DirectedEdge["SimpleH", "time"], DirectedEdge["SimpleH", "unix"], DirectedEdge["SimpleLog", "ansi-terminal"], DirectedEdge["SimpleLog", "attoparsec"], DirectedEdge["SimpleLog", "base"], DirectedEdge["SimpleLog", "bytestring"], DirectedEdge["SimpleLog", "containers"], DirectedEdge["SimpleLog", "directory"], DirectedEdge["SimpleLog", "ForkableT"], DirectedEdge["SimpleLog", "monad-control"], DirectedEdge["SimpleLog", "mtl"], DirectedEdge["SimpleLog", "old-locale"], DirectedEdge["SimpleLog", "resourcet"], DirectedEdge["SimpleLog", "semigroups"], DirectedEdge["SimpleLog", "stm"], DirectedEdge["SimpleLog", "template-haskell"], DirectedEdge["SimpleLog", "text"], DirectedEdge["SimpleLog", "th-lift"], DirectedEdge["SimpleLog", "time"], DirectedEdge["SimpleLog", "transformers"], DirectedEdge["SimpleLog", "transformers-base"], DirectedEdge["SimpleServer", "base"], DirectedEdge["SimpleServer", "cmdargs"], DirectedEdge["SimpleServer", "dyre"], DirectedEdge["SimpleServer", "transformers"], DirectedEdge["SimpleServer", "wai-routes"], DirectedEdge["SimpleServer", "warp"], DirectedEdge["SizeCompare", "base"], DirectedEdge["SizeCompare", "containers"], DirectedEdge["Slides", "base"], DirectedEdge["Slides", "colour"], DirectedEdge["Slides", "diagrams-lib"], DirectedEdge["Slides", "diagrams-svg"], DirectedEdge["Slides", "file-embed"], DirectedEdge["Slides", "regex-applicative"], DirectedEdge["Smooth", "base"], DirectedEdge["Smooth", "containers"], DirectedEdge["Smooth", "DifferenceLogic"], DirectedEdge["Smooth", "FirstOrderTheory"], DirectedEdge["Smooth", "HUnit"], DirectedEdge["Smooth", "Proper"], DirectedEdge["SmtLib", "base"], DirectedEdge["SmtLib", "parsec"], DirectedEdge["SmtLib", "transformers"], DirectedEdge["Snusmumrik", "base"], DirectedEdge["Snusmumrik", "bytestring"], DirectedEdge["Snusmumrik", "convertible"], DirectedEdge["Snusmumrik", "directory"], DirectedEdge["Snusmumrik", "filepath"], DirectedEdge["Snusmumrik", "HDBC"], DirectedEdge["Snusmumrik", "HFuse"], DirectedEdge["Snusmumrik", "hslogger"], DirectedEdge["Snusmumrik", "iconv"], DirectedEdge["Snusmumrik", "LibZip"], DirectedEdge["Snusmumrik", "regex-tdfa"], DirectedEdge["Snusmumrik", "stm"], DirectedEdge["Snusmumrik", "unix"], DirectedEdge["Snusmumrik", "utf8-string"], DirectedEdge["Snusmumrik", "xml"], DirectedEdge["SoOSiM", "base"], DirectedEdge["SoOSiM", "concurrent-supply"], DirectedEdge["SoOSiM", "containers"], DirectedEdge["SoOSiM", "monad-coroutine"], DirectedEdge["SoOSiM", "mtl"], DirectedEdge["SoOSiM", "stm"], DirectedEdge["SoOSiM", "transformers"], DirectedEdge["SoccerFun", "base"], DirectedEdge["SoccerFun", "base-unicode-symbols"], DirectedEdge["SoccerFun", "binary"], DirectedEdge["SoccerFun", "derive"], DirectedEdge["SoccerFun", "directory"], DirectedEdge["SoccerFun", "mtl"], DirectedEdge["SoccerFun", "process"], DirectedEdge["SoccerFun", "random"], DirectedEdge["SoccerFun", "zlib"], DirectedEdge["SoccerFunGL", "base"], DirectedEdge["SoccerFunGL", "base-unicode-symbols"], DirectedEdge["SoccerFunGL", "binary"], DirectedEdge["SoccerFunGL", "GLUT"], DirectedEdge["SoccerFunGL", "OpenGL"], DirectedEdge["SoccerFunGL", "process"], DirectedEdge["SoccerFunGL", "random"], DirectedEdge["SoccerFunGL", "SoccerFun"], DirectedEdge["Sonnex", "base"], DirectedEdge["SourceGraph", "base"], DirectedEdge["SourceGraph", "Cabal"], DirectedEdge["SourceGraph", "containers"], DirectedEdge["SourceGraph", "directory"], DirectedEdge["SourceGraph", "fgl"], DirectedEdge["SourceGraph", "filepath"], DirectedEdge["SourceGraph", "Graphalyze"], DirectedEdge["SourceGraph", "graphviz"], DirectedEdge["SourceGraph", "haskell-src-exts"], DirectedEdge["SourceGraph", "mtl"], DirectedEdge["SourceGraph", "multiset"], DirectedEdge["SourceGraph", "random"], DirectedEdge["Southpaw", "ALUT"], DirectedEdge["Southpaw", "base"], DirectedEdge["Southpaw", "bytestring"], DirectedEdge["Southpaw", "cairo"], DirectedEdge["Southpaw", "containers"], DirectedEdge["Southpaw", "filepath"], DirectedEdge["Southpaw", "GLFW-b"], DirectedEdge["Southpaw", "JuicyPixels"], DirectedEdge["Southpaw", "OpenAL"], DirectedEdge["Southpaw", "OpenGL"], DirectedEdge["Southpaw", "vector"], DirectedEdge["SpaceInvaders", "array"], DirectedEdge["SpaceInvaders", "base"], DirectedEdge["SpaceInvaders", "HGL"], DirectedEdge["SpaceInvaders", "random"], DirectedEdge["SpaceInvaders", "Yampa"], DirectedEdge["SpacePrivateers", "base"], DirectedEdge["SpacePrivateers", "containers"], DirectedEdge["SpacePrivateers", "enummapset-th"], DirectedEdge["SpacePrivateers", "filepath"], DirectedEdge["SpacePrivateers", "LambdaHack"], DirectedEdge["SpacePrivateers", "template-haskell"], DirectedEdge["SpacePrivateers", "text"], DirectedEdge["SpinCounter", "base"], DirectedEdge["SpinCounter", "monad-loops"], DirectedEdge["SpinCounter", "ref-mtl"], DirectedEdge["SpinCounter", "stm"], DirectedEdge["Spintax", "attoparsec"], DirectedEdge["Spintax", "base"], DirectedEdge["Spintax", "extra"], DirectedEdge["Spintax", "mwc-random"], DirectedEdge["Spintax", "text"], DirectedEdge["Spock", "aeson"], DirectedEdge["Spock", "base"], DirectedEdge["Spock", "base64-bytestring"], DirectedEdge["Spock", "bytestring"], DirectedEdge["Spock", "case-insensitive"], DirectedEdge["Spock", "containers"], DirectedEdge["Spock", "crypto-random"], DirectedEdge["Spock", "directory"], DirectedEdge["Spock", "focus"], DirectedEdge["Spock", "hashable"], DirectedEdge["Spock", "http-types"], DirectedEdge["Spock", "hvect"], DirectedEdge["Spock", "list-t"], DirectedEdge["Spock", "monad-control"], DirectedEdge["Spock", "mtl"], DirectedEdge["Spock", "old-locale"], DirectedEdge["Spock", "path-pieces"], DirectedEdge["Spock", "random"], DirectedEdge["Spock", "reroute"], DirectedEdge["Spock", "resource-pool"], DirectedEdge["Spock", "resourcet"], DirectedEdge["Spock", "stm"], DirectedEdge["Spock", "stm-containers"], DirectedEdge["Spock", "text"], DirectedEdge["Spock", "time"], DirectedEdge["Spock", "transformers"], DirectedEdge["Spock", "transformers-base"], DirectedEdge["Spock", "unordered-containers"], DirectedEdge["Spock", "vault"], DirectedEdge["Spock", "wai"], DirectedEdge["Spock", "wai-extra"], DirectedEdge["Spock", "warp"], DirectedEdge["Spock-auth", "base"], DirectedEdge["Spock-auth", "http-types"], DirectedEdge["Spock-auth", "Spock"], DirectedEdge["Spock-auth", "text"], DirectedEdge["Spock-auth", "time"], DirectedEdge["Spock-digestive", "base"], DirectedEdge["Spock-digestive", "digestive-functors"], DirectedEdge["Spock-digestive", "http-types"], DirectedEdge["Spock-digestive", "mtl"], DirectedEdge["Spock-digestive", "Spock"], DirectedEdge["Spock-digestive", "text"], DirectedEdge["Spock-digestive", "unordered-containers"], DirectedEdge["Spock-digestive", "wai"], DirectedEdge["Spock-lucid", "base"], DirectedEdge["Spock-lucid", "blaze-builder"], DirectedEdge["Spock-lucid", "lucid"], DirectedEdge["Spock-lucid", "Spock"], DirectedEdge["Spock-lucid", "transformers"], DirectedEdge["Spock-worker", "base"], DirectedEdge["Spock-worker", "containers"], DirectedEdge["Spock-worker", "errors"], DirectedEdge["Spock-worker", "lifted-base"], DirectedEdge["Spock-worker", "mtl"], DirectedEdge["Spock-worker", "Spock"], DirectedEdge["Spock-worker", "stm"], DirectedEdge["Spock-worker", "text"], DirectedEdge["Spock-worker", "time"], DirectedEdge["Spock-worker", "transformers"], DirectedEdge["Spock-worker", "vector"], DirectedEdge["SpreadsheetML", "base"], DirectedEdge["SpreadsheetML", "xml"], DirectedEdge["Sprig", "base"], DirectedEdge["Sprig", "SDL"], DirectedEdge["Stasis", "base"], DirectedEdge["Stasis", "containers"], DirectedEdge["StateVar", "base"], DirectedEdge["StateVar", "stm"], DirectedEdge["StateVar", "transformers"], DirectedEdge["StateVar-transformer", "base"], DirectedEdge["StateVar-transformer", "mtl"], DirectedEdge["StateVar-transformer", "transformers"], DirectedEdge["StatisticalMethods", "base"], DirectedEdge["StatisticalMethods", "statistics"], DirectedEdge["StatisticalMethods", "tuple"], DirectedEdge["StatisticalMethods", "vector"], DirectedEdge["Stomp", "base"], DirectedEdge["Stomp", "binary"], DirectedEdge["Stomp", "bytestring"], DirectedEdge["Stomp", "network"], DirectedEdge["Stomp", "time"], DirectedEdge["Stomp", "utf8-string"], DirectedEdge["Strafunski-ATermLib", "base"], DirectedEdge["Strafunski-ATermLib", "containers"], DirectedEdge["Strafunski-Sdf2Haskell", "base"], DirectedEdge["Strafunski-Sdf2Haskell", "directory"], DirectedEdge["Strafunski-Sdf2Haskell", "haskell-src"], DirectedEdge["Strafunski-Sdf2Haskell", "mtl"], DirectedEdge["Strafunski-Sdf2Haskell", "pretty"], DirectedEdge["Strafunski-Sdf2Haskell", "process"], DirectedEdge["Strafunski-Sdf2Haskell", "Strafunski-ATermLib"], DirectedEdge["Strafunski-Sdf2Haskell", "Strafunski-StrategyLib"], DirectedEdge["Strafunski-Sdf2Haskell", "template-haskell"], DirectedEdge["Strafunski-StrategyLib", "base"], DirectedEdge["Strafunski-StrategyLib", "directory"], DirectedEdge["Strafunski-StrategyLib", "mtl"], DirectedEdge["Strafunski-StrategyLib", "syb"], DirectedEdge["Strafunski-StrategyLib", "transformers"], DirectedEdge["StrappedTemplates", "base"], DirectedEdge["StrappedTemplates", "blaze-builder"], DirectedEdge["StrappedTemplates", "bytestring"], DirectedEdge["StrappedTemplates", "containers"], DirectedEdge["StrappedTemplates", "filemanip"], DirectedEdge["StrappedTemplates", "filepath"], DirectedEdge["StrappedTemplates", "mtl"], DirectedEdge["StrappedTemplates", "parsec"], DirectedEdge["StrappedTemplates", "text"], DirectedEdge["StrappedTemplates", "transformers"], DirectedEdge["StrategyLib", "base"], DirectedEdge["StrategyLib", "mtl"], DirectedEdge["Stream", "base"], DirectedEdge["Stream", "lazysmallcheck"], DirectedEdge["Stream", "QuickCheck"], DirectedEdge["StrictBench", "base"], DirectedEdge["StrictBench", "benchpress"], DirectedEdge["StrictBench", "parallel"], DirectedEdge["SuffixStructures", "aeson"], DirectedEdge["SuffixStructures", "base"], DirectedEdge["SuffixStructures", "binary"], DirectedEdge["SuffixStructures", "bytestring"], DirectedEdge["SuffixStructures", "cereal"], DirectedEdge["SuffixStructures", "cmdargs"], DirectedEdge["SuffixStructures", "containers"], DirectedEdge["SuffixStructures", "data-default-class"], DirectedEdge["SuffixStructures", "ListLike"], DirectedEdge["SuffixStructures", "primitive"], DirectedEdge["SuffixStructures", "SuffixStructures"], DirectedEdge["SuffixStructures", "vector"], DirectedEdge["SuffixStructures", "vector-algorithms"], DirectedEdge["SuffixStructures", "vector-binary-instances"], DirectedEdge["SybWidget", "base"], DirectedEdge["SybWidget", "containers"], DirectedEdge["SybWidget", "mtl"], DirectedEdge["SybWidget", "syb-with-class"], DirectedEdge["SybWidget", "template-haskell"], DirectedEdge["SybWidget", "TypeCompose"], DirectedEdge["SyntaxMacros", "murder"], DirectedEdge["SyntaxMacros", "AspectAG"], DirectedEdge["SyntaxMacros", "base"], DirectedEdge["SyntaxMacros", "containers"], DirectedEdge["SyntaxMacros", "HList"], DirectedEdge["SyntaxMacros", "ListLike"], DirectedEdge["SyntaxMacros", "template-haskell"], DirectedEdge["SyntaxMacros", "TTTAS"], DirectedEdge["SyntaxMacros", "uu-parsinglib"], DirectedEdge["SyntaxMacros", "uulib"], DirectedEdge["Sysmon", "base"], DirectedEdge["Sysmon", "ConfigFile"], DirectedEdge["Sysmon", "filepath"], DirectedEdge["Sysmon", "fingertree"], DirectedEdge["Sysmon", "Glob"], DirectedEdge["Sysmon", "MissingH"], DirectedEdge["Sysmon", "mtl"], DirectedEdge["Sysmon", "old-locale"], DirectedEdge["Sysmon", "pretty"], DirectedEdge["Sysmon", "statistics"], DirectedEdge["Sysmon", "template-haskell"], DirectedEdge["Sysmon", "time"], DirectedEdge["Sysmon", "vector"], DirectedEdge["TBC", "base"], DirectedEdge["TBC", "Cabal"], DirectedEdge["TBC", "deepseq"], DirectedEdge["TBC", "directory"], DirectedEdge["TBC", "filepath"], DirectedEdge["TBC", "process"], DirectedEdge["TBC", "unix"], DirectedEdge["TBit", "base"], DirectedEdge["TBit", "containers"], DirectedEdge["TBit", "deepseq"], DirectedEdge["TBit", "fgl"], DirectedEdge["TBit", "free"], DirectedEdge["TBit", "hmatrix"], DirectedEdge["TBit", "integration"], DirectedEdge["TBit", "list-extras"], DirectedEdge["TBit", "mtl"], DirectedEdge["TBit", "numeric-tools"], DirectedEdge["TBit", "parallel"], DirectedEdge["TCache", "base"], DirectedEdge["TCache", "bytestring"], DirectedEdge["TCache", "containers"], DirectedEdge["TCache", "directory"], DirectedEdge["TCache", "hashtables"], DirectedEdge["TCache", "mtl"], DirectedEdge["TCache", "old-time"], DirectedEdge["TCache", "RefSerialize"], DirectedEdge["TCache", "stm"], DirectedEdge["TCache", "text"], DirectedEdge["THEff", "base"], DirectedEdge["THEff", "template-haskell"], DirectedEdge["TTTAS", "base"], DirectedEdge["TV", "base"], DirectedEdge["TV", "DeepArrow"], DirectedEdge["TV", "TypeCompose"], DirectedEdge["TYB", "array"], DirectedEdge["TYB", "base"], DirectedEdge["TYB", "containers"], DirectedEdge["TYB", "mtl"], DirectedEdge["TYB", "template-haskell"], DirectedEdge["TYB", "transformers"], DirectedEdge["TableAlgebra", "base"], DirectedEdge["TableAlgebra", "containers"], DirectedEdge["TableAlgebra", "HaXml"], DirectedEdge["TableAlgebra", "mtl"], DirectedEdge["TableAlgebra", "pretty"], DirectedEdge["TableAlgebra", "template-haskell"], DirectedEdge["Tables", "base"], DirectedEdge["Tables", "cookbook"], DirectedEdge["Tablify", "base"], DirectedEdge["Tablify", "parsec"], DirectedEdge["Tablify", "xhtml"], DirectedEdge["Tahin", "base"], DirectedEdge["Tahin", "base64-bytestring"], DirectedEdge["Tahin", "bytestring"], DirectedEdge["Tahin", "containers"], DirectedEdge["Tahin", "cryptohash"], DirectedEdge["Tahin", "haskeline"], DirectedEdge["Tahin", "mtl"], DirectedEdge["Tahin", "optparse-applicative"], DirectedEdge["Tahin", "text"], DirectedEdge["Tainted", "base"], DirectedEdge["Tainted", "mtl"], DirectedEdge["Takusen", "base"], DirectedEdge["Takusen", "mtl"], DirectedEdge["Takusen", "old-time"], DirectedEdge["Takusen", "QuickCheck"], DirectedEdge["Takusen", "random"], DirectedEdge["Takusen", "Takusen"], DirectedEdge["Takusen", "time"], DirectedEdge["Tape", "base"], DirectedEdge["Tape", "comonad"], DirectedEdge["Tape", "distributive"], DirectedEdge["Tape", "Stream"], DirectedEdge["Taxonomy", "aeson"], DirectedEdge["Taxonomy", "base"], DirectedEdge["Taxonomy", "bytestring"], DirectedEdge["Taxonomy", "either-unwrap"], DirectedEdge["Taxonomy", "fgl"], DirectedEdge["Taxonomy", "graphviz"], DirectedEdge["Taxonomy", "parsec"], DirectedEdge["Taxonomy", "text"], DirectedEdge["Taxonomy", "vector"], DirectedEdge["TaxonomyTools", "aeson"], DirectedEdge["TaxonomyTools", "base"], DirectedEdge["TaxonomyTools", "bytestring"], DirectedEdge["TaxonomyTools", "cassava"], DirectedEdge["TaxonomyTools", "cmdargs"], DirectedEdge["TaxonomyTools", "directory"], DirectedEdge["TaxonomyTools", "either-unwrap"], DirectedEdge["TaxonomyTools", "EntrezHTTP"], DirectedEdge["TaxonomyTools", "fgl"], DirectedEdge["TaxonomyTools", "hxt"], DirectedEdge["TaxonomyTools", "parsec"], DirectedEdge["TaxonomyTools", "process"], DirectedEdge["TaxonomyTools", "Taxonomy"], DirectedEdge["TaxonomyTools", "vector"], DirectedEdge["TeaHS", "array"], DirectedEdge["TeaHS", "base"], DirectedEdge["TeaHS", "containers"], DirectedEdge["TeaHS", "mtl"], DirectedEdge["TeaHS", "SDL"], DirectedEdge["TeaHS", "SDL-image"], DirectedEdge["TeaHS", "SDL-mixer"], DirectedEdge["TeaHS", "SFont"], DirectedEdge["TeaHS", "Sprig"], DirectedEdge["Tensor", "base"], DirectedEdge["TernaryTrees", "base"], DirectedEdge["TernaryTrees", "binary"], DirectedEdge["TestExplode", "base"], DirectedEdge["TestExplode", "containers"], DirectedEdge["TestExplode", "directory"], DirectedEdge["TestExplode", "fgl"], DirectedEdge["TestExplode", "graphviz"], DirectedEdge["TestExplode", "mtl"], DirectedEdge["TestExplode", "process"], DirectedEdge["TestExplode", "text"], DirectedEdge["Theora", "base"], DirectedEdge["Thingie", "Hieroglyph"], DirectedEdge["Thingie", "base"], DirectedEdge["Thingie", "cairo"], DirectedEdge["Thingie", "gtk"], DirectedEdge["Thingie", "mtl"], DirectedEdge["ThreadObjects", "base"], DirectedEdge["Thrift", "base"], DirectedEdge["Thrift", "binary"], DirectedEdge["Thrift", "bytestring"], DirectedEdge["Thrift", "ghc-prim"], DirectedEdge["Thrift", "HTTP"], DirectedEdge["Thrift", "network"], DirectedEdge["Tic-Tac-Toe", "base"], DirectedEdge["Tic-Tac-Toe", "safe"], DirectedEdge["TicTacToe", "base"], DirectedEdge["TicTacToe", "containers"], DirectedEdge["TicTacToe", "HUnit"], DirectedEdge["TicTacToe", "QuickCheck"], DirectedEdge["TicTacToe", "test-framework"], DirectedEdge["TicTacToe", "test-framework-hunit"], DirectedEdge["TigerHash", "base"], DirectedEdge["TigerHash", "binary"], DirectedEdge["TigerHash", "bytestring"], DirectedEdge["TigerHash", "dataenc"], DirectedEdge["TimePiece", "base"], DirectedEdge["TimePiece", "containers"], DirectedEdge["TimePiece", "old-locale"], DirectedEdge["TimePiece", "old-time"], DirectedEdge["TimePiece", "random"], DirectedEdge["TimePiece", "SDL"], DirectedEdge["TimePiece", "SDL-gfx"], DirectedEdge["TimePiece", "SDL-image"], DirectedEdge["TimePiece", "SDL-ttf"], DirectedEdge["TinyLaunchbury", "base"], DirectedEdge["TinyLaunchbury", "mtl"], DirectedEdge["TinyURL", "base"], DirectedEdge["TinyURL", "HTTP"], DirectedEdge["TinyURL", "network"], DirectedEdge["Titim", "base"], DirectedEdge["Titim", "containers"], DirectedEdge["Titim", "matrix"], DirectedEdge["Titim", "random"], DirectedEdge["Top", "base"], DirectedEdge["Top", "containers"], DirectedEdge["Top", "mtl"], DirectedEdge["Top", "parsec"], DirectedEdge["Tournament", "base"], DirectedEdge["Tournament", "containers"], DirectedEdge["Tournament", "mtl"], DirectedEdge["TraceUtils", "base"], DirectedEdge["TransformersStepByStep", "base"], DirectedEdge["TransformersStepByStep", "containers"], DirectedEdge["TransformersStepByStep", "mtl"], DirectedEdge["Transhare", "base"], DirectedEdge["Transhare", "containers"], DirectedEdge["TreeCounter", "base"], DirectedEdge["TreeCounter", "ref-mtl"], DirectedEdge["TreeCounter", "stm"], DirectedEdge["TreeStructures", "base"], DirectedEdge["TreeT", "base"], DirectedEdge["TreeT", "containers"], DirectedEdge["TreeT", "transformers"], DirectedEdge["Treiber", "base"], DirectedEdge["Treiber", "ghc-prim"], DirectedEdge["Treiber", "monad-loops"], DirectedEdge["Treiber", "ref-mtl"], DirectedEdge["Treiber", "stm"], DirectedEdge["TrendGraph", "base"], DirectedEdge["TrendGraph", "containers"], DirectedEdge["TrendGraph", "diagrams-cairo"], DirectedEdge["TrendGraph", "diagrams-lib"], DirectedEdge["TrendGraph", "mtl"], DirectedEdge["TrendGraph", "optparse-applicative"], DirectedEdge["TrendGraph", "time"], DirectedEdge["TrieMap", "base"], DirectedEdge["TrieMap", "bytestring"], DirectedEdge["TrieMap", "containers"], DirectedEdge["TrieMap", "primitive"], DirectedEdge["TrieMap", "template-haskell"], DirectedEdge["TrieMap", "th-expand-syns"], DirectedEdge["TrieMap", "transformers"], DirectedEdge["TrieMap", "unpack-funcs"], DirectedEdge["TrieMap", "vector"], DirectedEdge["Twofish", "array"], DirectedEdge["Twofish", "base"], DirectedEdge["Twofish", "binary"], DirectedEdge["Twofish", "bytestring"], DirectedEdge["Twofish", "cereal"], DirectedEdge["Twofish", "crypto-api"], DirectedEdge["Twofish", "largeword"], DirectedEdge["Twofish", "mtl"], DirectedEdge["Twofish", "tagged"], DirectedEdge["TypeClass", "base"], DirectedEdge["TypeClass", "containers"], DirectedEdge["TypeClass", "filepath"], DirectedEdge["TypeClass", "random"], DirectedEdge["TypeClass", "reactive-banana"], DirectedEdge["TypeClass", "reactive-banana-sdl"], DirectedEdge["TypeClass", "SDL"], DirectedEdge["TypeClass", "SDL-ttf"], DirectedEdge["TypeClass", "transformers"], DirectedEdge["TypeCompose", "base"], DirectedEdge["TypeCompose", "base-orphans"], DirectedEdge["TypeIlluminator", "base"], DirectedEdge["TypeNat", "base"], DirectedEdge["TypingTester", "base"], DirectedEdge["TypingTester", "containers"], DirectedEdge["TypingTester", "directory"], DirectedEdge["TypingTester", "time"], DirectedEdge["UISF", "array"], DirectedEdge["UISF", "arrows"], DirectedEdge["UISF", "base"], DirectedEdge["UISF", "containers"], DirectedEdge["UISF", "deepseq"], DirectedEdge["UISF", "GLUT"], DirectedEdge["UISF", "OpenGL"], DirectedEdge["UISF", "stm"], DirectedEdge["UISF", "transformers"], DirectedEdge["UMM", "base"], DirectedEdge["UMM", "old-time"], DirectedEdge["UMM", "parsec"], DirectedEdge["UMM", "process"], DirectedEdge["UMM", "utf8-string"], DirectedEdge["URLT", "web-routes"], DirectedEdge["URLT", "applicative-extras"], DirectedEdge["URLT", "base"], DirectedEdge["URLT", "Consumer"], DirectedEdge["URLT", "happstack-server"], DirectedEdge["URLT", "hsp"], DirectedEdge["URLT", "hsx"], DirectedEdge["URLT", "mtl"], DirectedEdge["URLT", "QuickCheck"], DirectedEdge["URLT", "regular"], DirectedEdge["URLT", "template-haskell"], DirectedEdge["URLb", "attoparsec"], DirectedEdge["URLb", "base"], DirectedEdge["URLb", "bytestring"], DirectedEdge["URLb", "containers"], DirectedEdge["UTFTConverter", "base"], DirectedEdge["UTFTConverter", "bytestring"], DirectedEdge["UTFTConverter", "directory"], DirectedEdge["UTFTConverter", "filepath"], DirectedEdge["UTFTConverter", "image-type"], DirectedEdge["UTFTConverter", "JuicyPixels"], DirectedEdge["UTFTConverter", "time"], DirectedEdge["UTFTConverter", "UTFTConverter"], DirectedEdge["Unique", "base"], DirectedEdge["Unique", "containers"], DirectedEdge["Unique", "extra"], DirectedEdge["Unique", "hashable"], DirectedEdge["Unique", "unordered-containers"], DirectedEdge["Unixutils", "base"], DirectedEdge["Unixutils", "bytestring"], DirectedEdge["Unixutils", "directory"], DirectedEdge["Unixutils", "exceptions"], DirectedEdge["Unixutils", "filepath"], DirectedEdge["Unixutils", "mtl"], DirectedEdge["Unixutils", "process"], DirectedEdge["Unixutils", "process-extras"], DirectedEdge["Unixutils", "regex-tdfa"], DirectedEdge["Unixutils", "unix"], DirectedEdge["Unixutils", "zlib"], DirectedEdge["Unixutils-shadow", "base"], DirectedEdge["Unixutils-shadow", "unix"], DirectedEdge["Updater", "base"], DirectedEdge["UrlDisp", "base"], DirectedEdge["UrlDisp", "cgi"], DirectedEdge["UrlDisp", "MaybeT"], DirectedEdge["UrlDisp", "mtl"], DirectedEdge["Useful", "base"], DirectedEdge["Useful", "containers"], DirectedEdge["Useful", "random"], DirectedEdge["UtilityTM", "base"], DirectedEdge["VKHS", "aeson"], DirectedEdge["VKHS", "base"], DirectedEdge["VKHS", "bytestring"], DirectedEdge["VKHS", "case-insensitive"], DirectedEdge["VKHS", "clock"], DirectedEdge["VKHS", "containers"], DirectedEdge["VKHS", "data-default-class"], DirectedEdge["VKHS", "directory"], DirectedEdge["VKHS", "EitherT"], DirectedEdge["VKHS", "filepath"], DirectedEdge["VKHS", "http-client"], DirectedEdge["VKHS", "http-client-tls"], DirectedEdge["VKHS", "http-types"], DirectedEdge["VKHS", "mtl"], DirectedEdge["VKHS", "network-uri"], DirectedEdge["VKHS", "optparse-applicative"], DirectedEdge["VKHS", "parsec"], DirectedEdge["VKHS", "pipes"], DirectedEdge["VKHS", "pipes-http"], DirectedEdge["VKHS", "regexpr"], DirectedEdge["VKHS", "split"], DirectedEdge["VKHS", "tagsoup"], DirectedEdge["VKHS", "text"], DirectedEdge["VKHS", "time"], DirectedEdge["VKHS", "utf8-string"], DirectedEdge["VKHS", "vector"], DirectedEdge["Validation", "validation"], DirectedEdge["Validation", "base"], DirectedEdge["Validation", "bifunctors"], DirectedEdge["Validation", "semigroupoids"], DirectedEdge["Validation", "semigroups"], DirectedEdge["Vec", "array"], DirectedEdge["Vec", "base"], DirectedEdge["Vec", "ghc-prim"], DirectedEdge["Vec-Boolean", "base"], DirectedEdge["Vec-Boolean", "Boolean"], DirectedEdge["Vec-Boolean", "Vec"], DirectedEdge["Vec-OpenGLRaw", "base"], DirectedEdge["Vec-OpenGLRaw", "OpenGLRaw"], DirectedEdge["Vec-OpenGLRaw", "Vec"], DirectedEdge["VecN", "base"], DirectedEdge["VecN", "Peano"], DirectedEdge["Verba", "base"], DirectedEdge["Verba", "containers"], DirectedEdge["Verba", "matrix"], DirectedEdge["ViennaRNA-bindings", "array"], DirectedEdge["ViennaRNA-bindings", "base"], DirectedEdge["ViennaRNAParser", "base"], DirectedEdge["ViennaRNAParser", "parsec"], DirectedEdge["ViennaRNAParser", "process"], DirectedEdge["ViennaRNAParser", "transformers"], DirectedEdge["Vulkan", "base"], DirectedEdge["WAVE", "base"], DirectedEdge["WAVE", "bytestring"], DirectedEdge["WAVE", "containers"], DirectedEdge["WAVE", "parseargs"], DirectedEdge["WAVE", "WAVE"], DirectedEdge["WL500gPControl", "base"], DirectedEdge["WL500gPControl", "directory"], DirectedEdge["WL500gPControl", "filepath"], DirectedEdge["WL500gPControl", "mtl"], DirectedEdge["WL500gPControl", "unix"], DirectedEdge["WL500gPControl", "WL500gPLib"], DirectedEdge["WL500gPLib", "base"], DirectedEdge["WL500gPLib", "curl"], DirectedEdge["WL500gPLib", "mtl"], DirectedEdge["WL500gPLib", "tagsoup"], DirectedEdge["WMSigner", "base"], DirectedEdge["WMSigner", "base64-bytestring"], DirectedEdge["WMSigner", "binary"], DirectedEdge["WMSigner", "bytestring"], DirectedEdge["WMSigner", "cryptohash"], DirectedEdge["WMSigner", "directory"], DirectedEdge["WMSigner", "lens"], DirectedEdge["WMSigner", "mtl"], DirectedEdge["WMSigner", "random"], DirectedEdge["WMSigner", "split"], DirectedEdge["WMSigner", "vector"], DirectedEdge["WURFL", "base"], DirectedEdge["WURFL", "parsec"], DirectedEdge["WXDiffCtrl", "base"], DirectedEdge["WXDiffCtrl", "containers"], DirectedEdge["WXDiffCtrl", "wx"], DirectedEdge["WXDiffCtrl", "wxcore"], DirectedEdge["WashNGo", "base"], DirectedEdge["WashNGo", "containers"], DirectedEdge["WashNGo", "directory"], DirectedEdge["WashNGo", "ghc-paths"], DirectedEdge["WashNGo", "parsec"], DirectedEdge["WashNGo", "process"], DirectedEdge["WashNGo", "regex-compat"], DirectedEdge["WaveFront", "base"], DirectedEdge["WaveFront", "Cartesian"], DirectedEdge["WaveFront", "containers"], DirectedEdge["WaveFront", "filepath"], DirectedEdge["WaveFront", "GLUtil"], DirectedEdge["WaveFront", "lens"], DirectedEdge["WaveFront", "linear"], DirectedEdge["WaveFront", "OpenGL"], DirectedEdge["Weather", "aeson"], DirectedEdge["Weather", "base"], DirectedEdge["Weather", "bytestring"], DirectedEdge["Weather", "HTTP"], DirectedEdge["Weather", "text"], DirectedEdge["Weather", "unordered-containers"], DirectedEdge["WebBits", "language-ecmascript"], DirectedEdge["WebBits", "base"], DirectedEdge["WebBits", "containers"], DirectedEdge["WebBits", "mtl"], DirectedEdge["WebBits", "parsec"], DirectedEdge["WebBits", "pretty"], DirectedEdge["WebBits", "syb"], DirectedEdge["WebBits-Html", "base"], DirectedEdge["WebBits-Html", "containers"], DirectedEdge["WebBits-Html", "mtl"], DirectedEdge["WebBits-Html", "parsec"], DirectedEdge["WebBits-Html", "pretty"], DirectedEdge["WebBits-Html", "syb"], DirectedEdge["WebBits-Html", "WebBits"], DirectedEdge["WebBits-multiplate", "base"], DirectedEdge["WebBits-multiplate", "multiplate"], DirectedEdge["WebBits-multiplate", "multiplate-simplified"], DirectedEdge["WebBits-multiplate", "transformers"], DirectedEdge["WebBits-multiplate", "WebBits"], DirectedEdge["WebCont", "applicative-extras"], DirectedEdge["WebCont", "base"], DirectedEdge["WebCont", "concatenative"], DirectedEdge["WebCont", "containers"], DirectedEdge["WebCont", "formlets"], DirectedEdge["WebCont", "happstack-server"], DirectedEdge["WebCont", "happstack-state"], DirectedEdge["WebCont", "happstack-util"], DirectedEdge["WebCont", "mtl"], DirectedEdge["WebCont", "utf8-string"], DirectedEdge["WebCont", "xhtml"], DirectedEdge["WeberLogic", "base"], DirectedEdge["WeberLogic", "parsec"], DirectedEdge["Webrexp", "aeson"], DirectedEdge["Webrexp", "array"], DirectedEdge["Webrexp", "base"], DirectedEdge["Webrexp", "bytestring"], DirectedEdge["Webrexp", "containers"], DirectedEdge["Webrexp", "directory"], DirectedEdge["Webrexp", "filepath"], DirectedEdge["Webrexp", "HaXml"], DirectedEdge["Webrexp", "HTTP"], DirectedEdge["Webrexp", "hxt"], DirectedEdge["Webrexp", "mtl"], DirectedEdge["Webrexp", "network"], DirectedEdge["Webrexp", "parsec"], DirectedEdge["Webrexp", "process"], DirectedEdge["Webrexp", "regex-pcre-builtin"], DirectedEdge["Webrexp", "template-haskell"], DirectedEdge["Webrexp", "text"], DirectedEdge["Webrexp", "transformers"], DirectedEdge["Webrexp", "unordered-containers"], DirectedEdge["Webrexp", "vector"], DirectedEdge["Wheb", "base"], DirectedEdge["Wheb", "blaze-builder"], DirectedEdge["Wheb", "bytestring"], DirectedEdge["Wheb", "case-insensitive"], DirectedEdge["Wheb", "containers"], DirectedEdge["Wheb", "cookie"], DirectedEdge["Wheb", "http-types"], DirectedEdge["Wheb", "mtl"], DirectedEdge["Wheb", "pwstore-fast"], DirectedEdge["Wheb", "stm"], DirectedEdge["Wheb", "text"], DirectedEdge["Wheb", "time"], DirectedEdge["Wheb", "transformers"], DirectedEdge["Wheb", "unix"], DirectedEdge["Wheb", "uuid"], DirectedEdge["Wheb", "wai"], DirectedEdge["Wheb", "wai-extra"], DirectedEdge["Wheb", "wai-websockets"], DirectedEdge["Wheb", "warp"], DirectedEdge["Wheb", "web-routes"], DirectedEdge["Wheb", "websockets"], DirectedEdge["WikimediaParser", "base"], DirectedEdge["WikimediaParser", "parsec"], DirectedEdge["Win32", "base"], DirectedEdge["Win32", "bytestring"], DirectedEdge["Win32-dhcp-server", "base"], DirectedEdge["Win32-dhcp-server", "text"], DirectedEdge["Win32-dhcp-server", "Win32-errors"], DirectedEdge["Win32-errors", "base"], DirectedEdge["Win32-errors", "template-haskell"], DirectedEdge["Win32-errors", "text"], DirectedEdge["Win32-extras", "base"], DirectedEdge["Win32-junction-point", "base"], DirectedEdge["Win32-junction-point", "text"], DirectedEdge["Win32-junction-point", "Win32-errors"], DirectedEdge["Win32-notify", "base"], DirectedEdge["Win32-notify", "containers"], DirectedEdge["Win32-notify", "directory"], DirectedEdge["Win32-notify", "Win32-notify"], DirectedEdge["Win32-security", "base"], DirectedEdge["Win32-security", "text"], DirectedEdge["Win32-security", "Win32-errors"], DirectedEdge["Win32-security", "Win32-security"], DirectedEdge["Win32-services", "base"], DirectedEdge["Win32-services", "Win32-errors"], DirectedEdge["Win32-services-wrapper", "base"], DirectedEdge["Win32-services-wrapper", "directory"], DirectedEdge["Win32-services-wrapper", "filepath"], DirectedEdge["Win32-services-wrapper", "Win32-errors"], DirectedEdge["Win32-services-wrapper", "Win32-services"], DirectedEdge["Wired", "base"], DirectedEdge["Wired", "containers"], DirectedEdge["Wired", "mtl"], DirectedEdge["Wired", "QuickCheck"], DirectedEdge["WordAlignment", "ADPfusion"], DirectedEdge["WordAlignment", "AlignmentAlgorithms"], DirectedEdge["WordAlignment", "ascii-progress"], DirectedEdge["WordAlignment", "attoparsec"], DirectedEdge["WordAlignment", "base"], DirectedEdge["WordAlignment", "bytestring"], DirectedEdge["WordAlignment", "cmdargs"], DirectedEdge["WordAlignment", "containers"], DirectedEdge["WordAlignment", "control-monad-omega"], DirectedEdge["WordAlignment", "deepseq"], DirectedEdge["WordAlignment", "file-embed"], DirectedEdge["WordAlignment", "fmlist"], DirectedEdge["WordAlignment", "FormalGrammars"], DirectedEdge["WordAlignment", "ghc-prim"], DirectedEdge["WordAlignment", "GrammarProducts"], DirectedEdge["WordAlignment", "hashable"], DirectedEdge["WordAlignment", "intern"], DirectedEdge["WordAlignment", "lens"], DirectedEdge["WordAlignment", "LinguisticsTypes"], DirectedEdge["WordAlignment", "NaturalLanguageAlphabets"], DirectedEdge["WordAlignment", "parallel"], DirectedEdge["WordAlignment", "primitive"], DirectedEdge["WordAlignment", "PrimitiveArray"], DirectedEdge["WordAlignment", "strict"], DirectedEdge["WordAlignment", "stringable"], DirectedEdge["WordAlignment", "template-haskell"], DirectedEdge["WordAlignment", "text"], DirectedEdge["WordAlignment", "text-format"], DirectedEdge["WordAlignment", "transformers"], DirectedEdge["WordAlignment", "tuple-th"], DirectedEdge["WordAlignment", "unordered-containers"], DirectedEdge["WordAlignment", "vector"], DirectedEdge["WordAlignment", "WordAlignment"], DirectedEdge["WordNet", "array"], DirectedEdge["WordNet", "base"], DirectedEdge["WordNet", "containers"], DirectedEdge["WordNet", "filepath"], DirectedEdge["WordNet-ghc74", "array"], DirectedEdge["WordNet-ghc74", "base"], DirectedEdge["WordNet-ghc74", "containers"], DirectedEdge["WordNet-ghc74", "filepath"], DirectedEdge["Wordlint", "base"], DirectedEdge["Wordlint", "boxes"], DirectedEdge["Wordlint", "cmdargs"], DirectedEdge["Workflow", "base"], DirectedEdge["Workflow", "binary"], DirectedEdge["Workflow", "bytestring"], DirectedEdge["Workflow", "containers"], DirectedEdge["Workflow", "directory"], DirectedEdge["Workflow", "exceptions"], DirectedEdge["Workflow", "extensible-exceptions"], DirectedEdge["Workflow", "mtl"], DirectedEdge["Workflow", "old-time"], DirectedEdge["Workflow", "RefSerialize"], DirectedEdge["Workflow", "stm"], DirectedEdge["Workflow", "TCache"], DirectedEdge["Workflow", "vector"], DirectedEdge["WxGeneric", "base"], DirectedEdge["WxGeneric", "containers"], DirectedEdge["WxGeneric", "mtl"], DirectedEdge["WxGeneric", "SybWidget"], DirectedEdge["WxGeneric", "wx"], DirectedEdge["WxGeneric", "wxcore"], DirectedEdge["WxGeneric", "xtc"], DirectedEdge["X11", "base"], DirectedEdge["X11", "data-default"], DirectedEdge["X11-extras", "base"], DirectedEdge["X11-rm", "base"], DirectedEdge["X11-xdamage", "base"], DirectedEdge["X11-xfixes", "base"], DirectedEdge["X11-xft", "base"], DirectedEdge["X11-xft", "utf8-string"], DirectedEdge["X11-xshape", "base"], DirectedEdge["XAttr", "linux-xattr"], DirectedEdge["XAttr", "base"], DirectedEdge["XAttr", "unix"], DirectedEdge["XInput", "base"], DirectedEdge["XMMS", "base"], DirectedEdge["XMMS", "containers"], DirectedEdge["XMPP", "base"], DirectedEdge["XMPP", "hsdns"], DirectedEdge["XMPP", "mtl"], DirectedEdge["XMPP", "network"], DirectedEdge["XMPP", "parsec"], DirectedEdge["XMPP", "random"], DirectedEdge["XMPP", "utf8-string"], DirectedEdge["XSaiga", "base"], DirectedEdge["XSaiga", "cgi"], DirectedEdge["XSaiga", "containers"], DirectedEdge["XSaiga", "hsparql"], DirectedEdge["XSaiga", "pretty"], DirectedEdge["XSaiga", "rdf4h"], DirectedEdge["XSaiga", "text"], DirectedEdge["Xauth", "base"], DirectedEdge["Xec", "base"], DirectedEdge["Xec", "binary"], DirectedEdge["Xec", "bytestring"], DirectedEdge["Xec", "cairo"], DirectedEdge["Xec", "containers"], DirectedEdge["Xec", "directory"], DirectedEdge["Xec", "filepath"], DirectedEdge["Xec", "gtk"], DirectedEdge["Xec", "mtl"], DirectedEdge["Xec", "old-time"], DirectedEdge["Xec", "SHA"], DirectedEdge["Xec", "unix"], DirectedEdge["XmlHtmlWriter", "base"], DirectedEdge["XmlHtmlWriter", "mtl"], DirectedEdge["XmlHtmlWriter", "transformers"], DirectedEdge["Xorshift128Plus", "base"], DirectedEdge["YACPong", "base"], DirectedEdge["YACPong", "data-accessor-transformers"], DirectedEdge["YACPong", "fclabels"], DirectedEdge["YACPong", "monads-fd"], DirectedEdge["YACPong", "random"], DirectedEdge["YACPong", "SDL"], DirectedEdge["YACPong", "SDL-image"], DirectedEdge["YACPong", "SDL-mixer"], DirectedEdge["YACPong", "SDL-ttf"], DirectedEdge["YACPong", "transformers"], DirectedEdge["YFrob", "array"], DirectedEdge["YFrob", "base"], DirectedEdge["YFrob", "HGL"], DirectedEdge["YFrob", "Yampa"], DirectedEdge["Yablog", "base"], DirectedEdge["Yablog", "blaze-builder"], DirectedEdge["Yablog", "blaze-html"], DirectedEdge["Yablog", "bytestring"], DirectedEdge["Yablog", "case-insensitive"], DirectedEdge["Yablog", "clientsession"], DirectedEdge["Yablog", "conduit"], DirectedEdge["Yablog", "containers"], DirectedEdge["Yablog", "data-default"], DirectedEdge["Yablog", "directory"], DirectedEdge["Yablog", "filepath"], DirectedEdge["Yablog", "hamlet"], DirectedEdge["Yablog", "hjsmin"], DirectedEdge["Yablog", "http-conduit"], DirectedEdge["Yablog", "http-types"], DirectedEdge["Yablog", "mime-mail"], DirectedEdge["Yablog", "monad-control"], DirectedEdge["Yablog", "mtl"], DirectedEdge["Yablog", "network"], DirectedEdge["Yablog", "old-locale"], DirectedEdge["Yablog", "pandoc"], DirectedEdge["Yablog", "pandoc-types"], DirectedEdge["Yablog", "persistent"], DirectedEdge["Yablog", "persistent-mongoDB"], DirectedEdge["Yablog", "resourcet"], DirectedEdge["Yablog", "shakespeare-css"], DirectedEdge["Yablog", "shakespeare-js"], DirectedEdge["Yablog", "shakespeare-text"], DirectedEdge["Yablog", "template-haskell"], DirectedEdge["Yablog", "temporary"], DirectedEdge["Yablog", "text"], DirectedEdge["Yablog", "time"], DirectedEdge["Yablog", "wai"], DirectedEdge["Yablog", "wai-extra"], DirectedEdge["Yablog", "xml-conduit"], DirectedEdge["Yablog", "xml-hamlet"], DirectedEdge["Yablog", "yaml"], DirectedEdge["Yablog", "yesod"], DirectedEdge["Yablog", "yesod-auth"], DirectedEdge["Yablog", "yesod-core"], DirectedEdge["Yablog", "yesod-default"], DirectedEdge["Yablog", "yesod-form"], DirectedEdge["Yablog", "yesod-newsfeed"], DirectedEdge["Yablog", "yesod-platform"], DirectedEdge["Yablog", "yesod-recaptcha"], DirectedEdge["Yablog", "yesod-static"], DirectedEdge["YamlReference", "base"], DirectedEdge["YamlReference", "bytestring"], DirectedEdge["YamlReference", "containers"], DirectedEdge["YamlReference", "dlist"], DirectedEdge["YamlReference", "regex-compat"], DirectedEdge["Yampa", "base"], DirectedEdge["Yampa", "deepseq"], DirectedEdge["Yampa", "random"], DirectedEdge["Yampa-core", "base"], DirectedEdge["Yampa-core", "deepseq"], DirectedEdge["Yampa-core", "random"], DirectedEdge["Yampa-core", "vector-space"], DirectedEdge["Yampa-core", "Yampa-core"], DirectedEdge["YampaSynth", "array"], DirectedEdge["YampaSynth", "base"], DirectedEdge["YampaSynth", "bytestring"], DirectedEdge["YampaSynth", "containers"], DirectedEdge["YampaSynth", "glade"], DirectedEdge["YampaSynth", "gtk"], DirectedEdge["YampaSynth", "HCodecs"], DirectedEdge["YampaSynth", "OpenAL"], DirectedEdge["YampaSynth", "Yampa"], DirectedEdge["Yocto", "yocto"], DirectedEdge["Yocto", "base"], DirectedEdge["Yocto", "containers"], DirectedEdge["Yocto", "parsec"], DirectedEdge["Yogurt", "base"], DirectedEdge["Yogurt", "containers"], DirectedEdge["Yogurt", "mtl"], DirectedEdge["Yogurt", "network"], DirectedEdge["Yogurt", "old-locale"], DirectedEdge["Yogurt", "process"], DirectedEdge["Yogurt", "readline"], DirectedEdge["Yogurt", "regex-posix"], DirectedEdge["Yogurt", "syb"], DirectedEdge["Yogurt", "time"], DirectedEdge["Yogurt-Standalone", "base"], DirectedEdge["Yogurt-Standalone", "containers"], DirectedEdge["Yogurt-Standalone", "hint"], DirectedEdge["Yogurt-Standalone", "mtl"], DirectedEdge["Yogurt-Standalone", "network"], DirectedEdge["Yogurt-Standalone", "old-locale"], DirectedEdge["Yogurt-Standalone", "process"], DirectedEdge["Yogurt-Standalone", "regex-posix"], DirectedEdge["Yogurt-Standalone", "syb"], DirectedEdge["Yogurt-Standalone", "time"], DirectedEdge["Yogurt-Standalone", "Yogurt"], DirectedEdge["ZEBEDDE", "base"], DirectedEdge["ZEBEDDE", "vect"], DirectedEdge["ZFS", "base"], DirectedEdge["ZFS", "CC-delcont"], DirectedEdge["ZFS", "containers"], DirectedEdge["ZFS", "mtl"], DirectedEdge["ZFS", "network"], DirectedEdge["ZFS", "unix"], DirectedEdge["ZMachine", "array"], DirectedEdge["ZMachine", "base"], DirectedEdge["ZMachine", "gtk"], DirectedEdge["ZMachine", "mtl"], DirectedEdge["ZMachine", "random"], DirectedEdge["ZipFold", "base"], DirectedEdge["ZipFold", "TypeCompose"], DirectedEdge["ZipperAG", "base"], DirectedEdge["ZipperAG", "syz"], DirectedEdge["Zora", "base"], DirectedEdge["Zora", "bytestring"], DirectedEdge["Zora", "containers"], DirectedEdge["Zora", "directory"], DirectedEdge["Zora", "fgl"], DirectedEdge["Zora", "graphviz"], DirectedEdge["Zora", "random"], DirectedEdge["Zora", "shelly"], DirectedEdge["Zora", "text"], DirectedEdge["Zwaluw", "base"], DirectedEdge["a50", "base"], DirectedEdge["a50", "biofasta"], DirectedEdge["a50", "biopsl"], DirectedEdge["a50", "cmdargs"], DirectedEdge["a50", "containers"], DirectedEdge["a50", "directory"], DirectedEdge["a50", "process"], DirectedEdge["abacate", "base"], DirectedEdge["abacate", "parsec"], DirectedEdge["abacate", "text"], DirectedEdge["abc-puzzle", "array"], DirectedEdge["abc-puzzle", "base"], DirectedEdge["abc-puzzle", "minisat"], DirectedEdge["abc-puzzle", "random"], DirectedEdge["abc-puzzle", "random-shuffle"], DirectedEdge["abc-puzzle", "Safe"], DirectedEdge["abcBridge", "abcBridge"], DirectedEdge["abcBridge", "aig"], DirectedEdge["abcBridge", "base"], DirectedEdge["abcBridge", "base-compat"], DirectedEdge["abcBridge", "containers"], DirectedEdge["abcBridge", "directory"], DirectedEdge["abcBridge", "QuickCheck"], DirectedEdge["abcBridge", "random"], DirectedEdge["abcBridge", "tasty"], DirectedEdge["abcBridge", "tasty-hunit"], DirectedEdge["abcBridge", "tasty-quickcheck"], DirectedEdge["abcBridge", "tf-random"], DirectedEdge["abcBridge", "unix"], DirectedEdge["abcBridge", "vector"], DirectedEdge["abcnotation", "base"], DirectedEdge["abcnotation", "parsec"], DirectedEdge["abcnotation", "prettify"], DirectedEdge["abcnotation", "process"], DirectedEdge["abcnotation", "semigroups"], DirectedEdge["abeson", "aeson"], DirectedEdge["abeson", "base"], DirectedEdge["abeson", "base64-bytestring"], DirectedEdge["abeson", "bson"], DirectedEdge["abeson", "bytestring"], DirectedEdge["abeson", "data-default-class"], DirectedEdge["abeson", "scientific"], DirectedEdge["abeson", "text"], DirectedEdge["abeson", "time"], DirectedEdge["abeson", "unordered-containers"], DirectedEdge["abeson", "uuid"], DirectedEdge["abeson", "vector"], DirectedEdge["abnf", "attoparsec"], DirectedEdge["abnf", "base"], DirectedEdge["abnf", "containers"], DirectedEdge["abnf", "megaparsec"], DirectedEdge["abnf", "text"], DirectedEdge["abstract-deque", "array"], DirectedEdge["abstract-deque", "atomic-primops"], DirectedEdge["abstract-deque", "base"], DirectedEdge["abstract-deque", "containers"], DirectedEdge["abstract-deque", "random"], DirectedEdge["abstract-deque", "time"], DirectedEdge["abstract-deque-tests", "abstract-deque"], DirectedEdge["abstract-deque-tests", "array"], DirectedEdge["abstract-deque-tests", "base"], DirectedEdge["abstract-deque-tests", "containers"], DirectedEdge["abstract-deque-tests", "HUnit"], DirectedEdge["abstract-deque-tests", "random"], DirectedEdge["abstract-deque-tests", "test-framework"], DirectedEdge["abstract-deque-tests", "test-framework-hunit"], DirectedEdge["abstract-deque-tests", "time"], DirectedEdge["abstract-par", "base"], DirectedEdge["abstract-par", "deepseq"], DirectedEdge["abstract-par-accelerate", "abstract-par"], DirectedEdge["abstract-par-accelerate", "accelerate"], DirectedEdge["abstract-par-accelerate", "accelerate-io"], DirectedEdge["abstract-par-accelerate", "array"], DirectedEdge["abstract-par-accelerate", "base"], DirectedEdge["abstract-par-accelerate", "vector"], DirectedEdge["abt", "base"], DirectedEdge["abt", "profunctors"], DirectedEdge["abt", "transformers"], DirectedEdge["abt", "transformers-compat"], DirectedEdge["abt", "vinyl"], DirectedEdge["ac-machine", "base"], DirectedEdge["ac-machine", "hashable"], DirectedEdge["ac-machine", "unordered-containers"], DirectedEdge["ac-machine", "vector"], DirectedEdge["ac-machine-conduit", "ac-machine"], DirectedEdge["ac-machine-conduit", "base"], DirectedEdge["ac-machine-conduit", "conduit"], DirectedEdge["ac-machine-conduit", "text"], DirectedEdge["accelerate", "array"], DirectedEdge["accelerate", "base"], DirectedEdge["accelerate", "blaze-html"], DirectedEdge["accelerate", "blaze-markup"], DirectedEdge["accelerate", "bytestring"], DirectedEdge["accelerate", "containers"], DirectedEdge["accelerate", "directory"], DirectedEdge["accelerate", "fclabels"], DirectedEdge["accelerate", "filepath"], DirectedEdge["accelerate", "ghc-prim"], DirectedEdge["accelerate", "hashable"], DirectedEdge["accelerate", "hashtables"], DirectedEdge["accelerate", "mtl"], DirectedEdge["accelerate", "pretty"], DirectedEdge["accelerate", "template-haskell"], DirectedEdge["accelerate", "text"], DirectedEdge["accelerate", "unix"], DirectedEdge["accelerate", "unordered-containers"], DirectedEdge["accelerate-arithmetic", "accelerate"], DirectedEdge["accelerate-arithmetic", "accelerate-utility"], DirectedEdge["accelerate-arithmetic", "base"], DirectedEdge["accelerate-arithmetic", "QuickCheck"], DirectedEdge["accelerate-arithmetic", "utility-ht"], DirectedEdge["accelerate-cublas", "accelerate"], DirectedEdge["accelerate-cublas", "accelerate-arithmetic"], DirectedEdge["accelerate-cublas", "accelerate-cublas"], DirectedEdge["accelerate-cublas", "accelerate-cuda"], DirectedEdge["accelerate-cublas", "accelerate-io"], DirectedEdge["accelerate-cublas", "accelerate-utility"], DirectedEdge["accelerate-cublas", "base"], DirectedEdge["accelerate-cublas", "cublas"], DirectedEdge["accelerate-cublas", "cuda"], DirectedEdge["accelerate-cublas", "random"], DirectedEdge["accelerate-cublas", "utility-ht"], DirectedEdge["accelerate-cublas", "vector"], DirectedEdge["accelerate-cuda", "accelerate"], DirectedEdge["accelerate-cuda", "array"], DirectedEdge["accelerate-cuda", "base"], DirectedEdge["accelerate-cuda", "binary"], DirectedEdge["accelerate-cuda", "bytestring"], DirectedEdge["accelerate-cuda", "cryptohash"], DirectedEdge["accelerate-cuda", "cuda"], DirectedEdge["accelerate-cuda", "directory"], DirectedEdge["accelerate-cuda", "fclabels"], DirectedEdge["accelerate-cuda", "filepath"], DirectedEdge["accelerate-cuda", "hashable"], DirectedEdge["accelerate-cuda", "hashtables"], DirectedEdge["accelerate-cuda", "language-c-quote"], DirectedEdge["accelerate-cuda", "mainland-pretty"], DirectedEdge["accelerate-cuda", "mtl"], DirectedEdge["accelerate-cuda", "old-time"], DirectedEdge["accelerate-cuda", "pretty"], DirectedEdge["accelerate-cuda", "process"], DirectedEdge["accelerate-cuda", "SafeSemaphore"], DirectedEdge["accelerate-cuda", "srcloc"], DirectedEdge["accelerate-cuda", "template-haskell"], DirectedEdge["accelerate-cuda", "text"], DirectedEdge["accelerate-cuda", "transformers"], DirectedEdge["accelerate-cuda", "unix"], DirectedEdge["accelerate-cuda", "unordered-containers"], DirectedEdge["accelerate-cufft", "accelerate"], DirectedEdge["accelerate-cufft", "accelerate-cuda"], DirectedEdge["accelerate-cufft", "accelerate-cufft"], DirectedEdge["accelerate-cufft", "accelerate-fourier"], DirectedEdge["accelerate-cufft", "accelerate-utility"], DirectedEdge["accelerate-cufft", "base"], DirectedEdge["accelerate-cufft", "cuda"], DirectedEdge["accelerate-cufft", "cufft"], DirectedEdge["accelerate-examples", "accelerate"], DirectedEdge["accelerate-examples", "accelerate-cuda"], DirectedEdge["accelerate-examples", "accelerate-examples"], DirectedEdge["accelerate-examples", "accelerate-fft"], DirectedEdge["accelerate-examples", "accelerate-icc-opencl"], DirectedEdge["accelerate-examples", "accelerate-io"], DirectedEdge["accelerate-examples", "accelerate-llvm-native"], DirectedEdge["accelerate-examples", "accelerate-llvm-ptx"], DirectedEdge["accelerate-examples", "aeson"], DirectedEdge["accelerate-examples", "ansi-wl-pprint"], DirectedEdge["accelerate-examples", "array"], DirectedEdge["accelerate-examples", "attoparsec"], DirectedEdge["accelerate-examples", "base"], DirectedEdge["accelerate-examples", "binary"], DirectedEdge["accelerate-examples", "bmp"], DirectedEdge["accelerate-examples", "bytestring"], DirectedEdge["accelerate-examples", "bytestring-lexing"], DirectedEdge["accelerate-examples", "cereal"], DirectedEdge["accelerate-examples", "containers"], DirectedEdge["accelerate-examples", "criterion"], DirectedEdge["accelerate-examples", "directory"], DirectedEdge["accelerate-examples", "ekg"], DirectedEdge["accelerate-examples", "fclabels"], DirectedEdge["accelerate-examples", "filepath"], DirectedEdge["accelerate-examples", "gloss"], DirectedEdge["accelerate-examples", "gloss-accelerate"], DirectedEdge["accelerate-examples", "gloss-raster-accelerate"], DirectedEdge["accelerate-examples", "gloss-rendering"], DirectedEdge["accelerate-examples", "HTTP"], DirectedEdge["accelerate-examples", "http-types"], DirectedEdge["accelerate-examples", "HUnit"], DirectedEdge["accelerate-examples", "mwc-random"], DirectedEdge["accelerate-examples", "network"], DirectedEdge["accelerate-examples", "normaldistribution"], DirectedEdge["accelerate-examples", "primitive"], DirectedEdge["accelerate-examples", "process"], DirectedEdge["accelerate-examples", "QuickCheck"], DirectedEdge["accelerate-examples", "random"], DirectedEdge["accelerate-examples", "repa"], DirectedEdge["accelerate-examples", "repa-io"], DirectedEdge["accelerate-examples", "statistics"], DirectedEdge["accelerate-examples", "template-haskell"], DirectedEdge["accelerate-examples", "test-framework"], DirectedEdge["accelerate-examples", "test-framework-hunit"], DirectedEdge["accelerate-examples", "text"], DirectedEdge["accelerate-examples", "time"], DirectedEdge["accelerate-examples", "vector"], DirectedEdge["accelerate-examples", "vector-algorithms"], DirectedEdge["accelerate-fft", "accelerate"], DirectedEdge["accelerate-fft", "accelerate-cuda"], DirectedEdge["accelerate-fft", "base"], DirectedEdge["accelerate-fft", "cuda"], DirectedEdge["accelerate-fft", "cufft"], DirectedEdge["accelerate-fftw", "accelerate"], DirectedEdge["accelerate-fftw", "accelerate-io"], DirectedEdge["accelerate-fftw", "base"], DirectedEdge["accelerate-fftw", "carray"], DirectedEdge["accelerate-fftw", "fft"], DirectedEdge["accelerate-fftw", "storable-complex"], DirectedEdge["accelerate-fourier", "accelerate"], DirectedEdge["accelerate-fourier", "accelerate-arithmetic"], DirectedEdge["accelerate-fourier", "accelerate-utility"], DirectedEdge["accelerate-fourier", "base"], DirectedEdge["accelerate-fourier", "containers"], DirectedEdge["accelerate-fourier", "QuickCheck"], DirectedEdge["accelerate-fourier", "transformers"], DirectedEdge["accelerate-fourier", "utility-ht"], DirectedEdge["accelerate-fourier-benchmark", "accelerate"], DirectedEdge["accelerate-fourier-benchmark", "accelerate-cuda"], DirectedEdge["accelerate-fourier-benchmark", "accelerate-cufft"], DirectedEdge["accelerate-fourier-benchmark", "accelerate-fftw"], DirectedEdge["accelerate-fourier-benchmark", "accelerate-fourier"], DirectedEdge["accelerate-fourier-benchmark", "base"], DirectedEdge["accelerate-fourier-benchmark", "criterion"], DirectedEdge["accelerate-io", "accelerate"], DirectedEdge["accelerate-io", "array"], DirectedEdge["accelerate-io", "base"], DirectedEdge["accelerate-io", "bmp"], DirectedEdge["accelerate-io", "bytestring"], DirectedEdge["accelerate-io", "repa"], DirectedEdge["accelerate-io", "vector"], DirectedEdge["accelerate-random", "accelerate"], DirectedEdge["accelerate-random", "base"], DirectedEdge["accelerate-random", "mwc-random"], DirectedEdge["accelerate-typelits", "accelerate"], DirectedEdge["accelerate-typelits", "accelerate-random"], DirectedEdge["accelerate-typelits", "base"], DirectedEdge["accelerate-typelits", "mwc-random"], DirectedEdge["accelerate-typelits", "QuickCheck"], DirectedEdge["accelerate-typelits", "smallcheck"], DirectedEdge["accelerate-utility", "accelerate"], DirectedEdge["accelerate-utility", "base"], DirectedEdge["accelerate-utility", "utility-ht"], DirectedEdge["accentuateus", "base"], DirectedEdge["accentuateus", "bytestring"], DirectedEdge["accentuateus", "HTTP"], DirectedEdge["accentuateus", "json"], DirectedEdge["accentuateus", "network"], DirectedEdge["accentuateus", "text"], DirectedEdge["access-time", "base"], DirectedEdge["access-time", "filepath"], DirectedEdge["access-time", "old-time"], DirectedEdge["access-time", "time"], DirectedEdge["access-time", "unix"], DirectedEdge["ace", "attoparsec"], DirectedEdge["ace", "base"], DirectedEdge["ace", "blaze-html"], DirectedEdge["ace", "blaze-markup"], DirectedEdge["ace", "data-default"], DirectedEdge["ace", "parsec"], DirectedEdge["ace", "text"], DirectedEdge["acid-state", "array"], DirectedEdge["acid-state", "base"], DirectedEdge["acid-state", "bytestring"], DirectedEdge["acid-state", "cereal"], DirectedEdge["acid-state", "containers"], DirectedEdge["acid-state", "directory"], DirectedEdge["acid-state", "extensible-exceptions"], DirectedEdge["acid-state", "filepath"], DirectedEdge["acid-state", "mtl"], DirectedEdge["acid-state", "network"], DirectedEdge["acid-state", "safecopy"], DirectedEdge["acid-state", "stm"], DirectedEdge["acid-state", "template-haskell"], DirectedEdge["acid-state", "unix"], DirectedEdge["acid-state-dist", "acid-state"], DirectedEdge["acid-state-dist", "base"], DirectedEdge["acid-state-dist", "bytestring"], DirectedEdge["acid-state-dist", "cereal"], DirectedEdge["acid-state-dist", "concurrent-extra"], DirectedEdge["acid-state-dist", "containers"], DirectedEdge["acid-state-dist", "filepath"], DirectedEdge["acid-state-dist", "mtl"], DirectedEdge["acid-state-dist", "safe"], DirectedEdge["acid-state-dist", "safecopy"], DirectedEdge["acid-state-dist", "semigroups"], DirectedEdge["acid-state-dist", "stm"], DirectedEdge["acid-state-dist", "transformers"], DirectedEdge["acid-state-dist", "zeromq4-haskell"], DirectedEdge["acid-state-tls", "acid-state"], DirectedEdge["acid-state-tls", "base"], DirectedEdge["acid-state-tls", "directory"], DirectedEdge["acid-state-tls", "HsOpenSSL"], DirectedEdge["acid-state-tls", "network"], DirectedEdge["acid-state-tls", "safecopy"], DirectedEdge["acl2", "base"], DirectedEdge["acl2", "process"], DirectedEdge["acme-all-monad", "base"], DirectedEdge["acme-all-monad", "transformers"], DirectedEdge["acme-box", "acme-box"], DirectedEdge["acme-box", "base"], DirectedEdge["acme-cadre", "base"], DirectedEdge["acme-cofunctor", "base"], DirectedEdge["acme-colosson", "base"], DirectedEdge["acme-colosson", "random"], DirectedEdge["acme-comonad", "base"], DirectedEdge["acme-comonad", "comonad"], DirectedEdge["acme-cutegirl", "base"], DirectedEdge["acme-dont", "base"], DirectedEdge["acme-everything", "3d-graphics-examples"], DirectedEdge["acme-everything", "3dmodels"], DirectedEdge["acme-everything", "4Blocks"], DirectedEdge["acme-everything", "abc-puzzle"], DirectedEdge["acme-everything", "abeson"], DirectedEdge["acme-everything", "ABList"], DirectedEdge["acme-everything", "AbortT-monadstf"], DirectedEdge["acme-everything", "abstract-deque-tests"], DirectedEdge["acme-everything", "abt"], DirectedEdge["acme-everything", "AC-Boolean"], DirectedEdge["acme-everything", "AC-BuildPlatform"], DirectedEdge["acme-everything", "AC-Colour"], DirectedEdge["acme-everything", "AC-EasyRaster-GTK"], DirectedEdge["acme-everything", "AC-HalfInteger"], DirectedEdge["acme-everything", "ac-machine-conduit"], DirectedEdge["acme-everything", "AC-MiniTest"], DirectedEdge["acme-everything", "AC-PPM"], DirectedEdge["acme-everything", "AC-Random"], DirectedEdge["acme-everything", "AC-Terminal"], DirectedEdge["acme-everything", "AC-VanillaArray"], DirectedEdge["acme-everything", "AC-Vector-Fancy"], DirectedEdge["acme-everything", "accelerate-examples"], DirectedEdge["acme-everything", "accelerate-fourier-benchmark"], DirectedEdge["acme-everything", "accentuateus"], DirectedEdge["acme-everything", "access-time"], DirectedEdge["acme-everything", "ace"], DirectedEdge["acme-everything", "acid-state-tls"], DirectedEdge["acme-everything", "ACME"], DirectedEdge["acme-everything", "acme-cadre"], DirectedEdge["acme-everything", "acme-cofunctor"], DirectedEdge["acme-everything", "acme-colosson"], DirectedEdge["acme-everything", "acme-comonad"], DirectedEdge["acme-everything", "acme-cutegirl"], DirectedEdge["acme-everything", "acme-hq9plus"], DirectedEdge["acme-everything", "acme-http"], DirectedEdge["acme-everything", "acme-inator"], DirectedEdge["acme-everything", "acme-io"], DirectedEdge["acme-everything", "acme-lolcat"], DirectedEdge["acme-everything", "acme-lookofdisapproval"], DirectedEdge["acme-everything", "acme-microwave"], DirectedEdge["acme-everything", "acme-miscorder"], DirectedEdge["acme-everything", "acme-missiles"], DirectedEdge["acme-everything", "acme-now"], DirectedEdge["acme-everything", "acme-numbersystem"], DirectedEdge["acme-everything", "acme-omitted"], DirectedEdge["acme-everything", "acme-php"], DirectedEdge["acme-everything", "acme-pointful-numbers"], DirectedEdge["acme-everything", "acme-realworld"], DirectedEdge["acme-everything", "acme-safe"], DirectedEdge["acme-everything", "acme-schoenfinkel"], DirectedEdge["acme-everything", "acme-strfry"], DirectedEdge["acme-everything", "acme-stringly-typed"], DirectedEdge["acme-everything", "acme-strtok"], DirectedEdge["acme-everything", "acme-timemachine"], DirectedEdge["acme-everything", "acme-year"], DirectedEdge["acme-everything", "ActionKid"], DirectedEdge["acme-everything", "activehs"], DirectedEdge["acme-everything", "activitystreams-aeson"], DirectedEdge["acme-everything", "actor"], DirectedEdge["acme-everything", "Adaptive"], DirectedEdge["acme-everything", "Adaptive-Blaisorblade"], DirectedEdge["acme-everything", "adaptive-containers"], DirectedEdge["acme-everything", "adaptive-tuple"], DirectedEdge["acme-everything", "adb"], DirectedEdge["acme-everything", "adblock2privoxy"], DirectedEdge["acme-everything", "addLicenseInfo"], DirectedEdge["acme-everything", "adict"], DirectedEdge["acme-everything", "adobe-swatch-exchange"], DirectedEdge["acme-everything", "adp-multi-monadiccp"], DirectedEdge["acme-everything", "Advgame"], DirectedEdge["acme-everything", "AERN-Net"], DirectedEdge["acme-everything", "AERN-Real-Double"], DirectedEdge["acme-everything", "AERN-RnToRm-Plot"], DirectedEdge["acme-everything", "aeson-bson"], DirectedEdge["acme-everything", "aeson-casing"], DirectedEdge["acme-everything", "aeson-native"], DirectedEdge["acme-everything", "aeson-schema"], DirectedEdge["acme-everything", "aeson-serialize"], DirectedEdge["acme-everything", "aeson-smart"], DirectedEdge["acme-everything", "aeson-streams"], DirectedEdge["acme-everything", "aeson-t"], DirectedEdge["acme-everything", "aeson-toolkit"], DirectedEdge["acme-everything", "AesonBson"], DirectedEdge["acme-everything", "affine-invariant-ensemble-mcmc"], DirectedEdge["acme-everything", "afis"], DirectedEdge["acme-everything", "afv"], DirectedEdge["acme-everything", "Agata"], DirectedEdge["acme-everything", "Agda-executable"], DirectedEdge["acme-everything", "agda-server"], DirectedEdge["acme-everything", "agentx"], DirectedEdge["acme-everything", "AGI"], DirectedEdge["acme-everything", "agum"], DirectedEdge["acme-everything", "AhoCorasick"], DirectedEdge["acme-everything", "air-spec"], DirectedEdge["acme-everything", "airbrake"], DirectedEdge["acme-everything", "aivika-experiment-cairo"], DirectedEdge["acme-everything", "aivika-experiment-diagrams"], DirectedEdge["acme-everything", "aivika-transformers"], DirectedEdge["acme-everything", "al"], DirectedEdge["acme-everything", "alarmclock"], DirectedEdge["acme-everything", "alea"], DirectedEdge["acme-everything", "alex"], DirectedEdge["acme-everything", "alfred"], DirectedEdge["acme-everything", "algebraic"], DirectedEdge["acme-everything", "AlgorithmW"], DirectedEdge["acme-everything", "align"], DirectedEdge["acme-everything", "align-text"], DirectedEdge["acme-everything", "aligned-foreignptr"], DirectedEdge["acme-everything", "alloy-proxy-fd"], DirectedEdge["acme-everything", "Allure"], DirectedEdge["acme-everything", "alms"], DirectedEdge["acme-everything", "alpha"], DirectedEdge["acme-everything", "alsa-gui"], DirectedEdge["acme-everything", "alsa-midi"], DirectedEdge["acme-everything", "alsa-mixer"], DirectedEdge["acme-everything", "alsa-pcm-tests"], DirectedEdge["acme-everything", "alsa-seq-tests"], DirectedEdge["acme-everything", "altcomposition"], DirectedEdge["acme-everything", "alternative-io"], DirectedEdge["acme-everything", "altfloat"], DirectedEdge["acme-everything", "alure"], DirectedEdge["acme-everything", "amazon-emailer"], DirectedEdge["acme-everything", "amazon-emailer-client-snap"], DirectedEdge["acme-everything", "amazonka"], DirectedEdge["acme-everything", "amazonka-autoscaling"], DirectedEdge["acme-everything", "amazonka-cloudformation"], DirectedEdge["acme-everything", "amazonka-cloudfront"], DirectedEdge["acme-everything", "amazonka-cloudhsm"], DirectedEdge["acme-everything", "amazonka-cloudsearch"], DirectedEdge["acme-everything", "amazonka-cloudsearch-domains"], DirectedEdge["acme-everything", "amazonka-cloudtrail"], DirectedEdge["acme-everything", "amazonka-cloudwatch"], DirectedEdge["acme-everything", "amazonka-cloudwatch-logs"], DirectedEdge["acme-everything", "amazonka-codedeploy"], DirectedEdge["acme-everything", "amazonka-cognito-identity"], DirectedEdge["acme-everything", "amazonka-cognito-sync"], DirectedEdge["acme-everything", "amazonka-config"], DirectedEdge["acme-everything", "amazonka-datapipeline"], DirectedEdge["acme-everything", "amazonka-directconnect"], DirectedEdge["acme-everything", "amazonka-dynamodb"], DirectedEdge["acme-everything", "amazonka-ecs"], DirectedEdge["acme-everything", "amazonka-elasticache"], DirectedEdge["acme-everything", "amazonka-elasticbeanstalk"], DirectedEdge["acme-everything", "amazonka-elastictranscoder"], DirectedEdge["acme-everything", "amazonka-elb"], DirectedEdge["acme-everything", "amazonka-emr"], DirectedEdge["acme-everything", "amazonka-glacier"], DirectedEdge["acme-everything", "amazonka-iam"], DirectedEdge["acme-everything", "amazonka-importexport"], DirectedEdge["acme-everything", "amazonka-kinesis"], DirectedEdge["acme-everything", "amazonka-kms"], DirectedEdge["acme-everything", "amazonka-lambda"], DirectedEdge["acme-everything", "amazonka-ml"], DirectedEdge["acme-everything", "amazonka-opsworks"], DirectedEdge["acme-everything", "amazonka-rds"], DirectedEdge["acme-everything", "amazonka-redshift"], DirectedEdge["acme-everything", "amazonka-route53-domains"], DirectedEdge["acme-everything", "amazonka-sdb"], DirectedEdge["acme-everything", "amazonka-ses"], DirectedEdge["acme-everything", "amazonka-sns"], DirectedEdge["acme-everything", "amazonka-sqs"], DirectedEdge["acme-everything", "amazonka-ssm"], DirectedEdge["acme-everything", "amazonka-storagegateway"], DirectedEdge["acme-everything", "amazonka-sts"], DirectedEdge["acme-everything", "amazonka-support"], DirectedEdge["acme-everything", "amazonka-swf"], DirectedEdge["acme-everything", "amazonka-workspaces"], DirectedEdge["acme-everything", "AMI"], DirectedEdge["acme-everything", "ampersand"], DirectedEdge["acme-everything", "amqp-conduit"], DirectedEdge["acme-everything", "amrun"], DirectedEdge["acme-everything", "analyze-client"], DirectedEdge["acme-everything", "anansi-hscolour"], DirectedEdge["acme-everything", "anansi-pandoc"], DirectedEdge["acme-everything", "anatomy"], DirectedEdge["acme-everything", "AndroidViewHierarchyImporter"], DirectedEdge["acme-everything", "angel"], DirectedEdge["acme-everything", "animalcase"], DirectedEdge["acme-everything", "Animas"], DirectedEdge["acme-everything", "Annotations"], DirectedEdge["acme-everything", "anonymous-sums-tests"], DirectedEdge["acme-everything", "Ansi2Html"], DirectedEdge["acme-everything", "antagonist"], DirectedEdge["acme-everything", "anticiv"], DirectedEdge["acme-everything", "antigate"], DirectedEdge["acme-everything", "antimirov"], DirectedEdge["acme-everything", "antlrc"], DirectedEdge["acme-everything", "ANum"], DirectedEdge["acme-everything", "aosd"], DirectedEdge["acme-everything", "ap-reflect"], DirectedEdge["acme-everything", "apelsin"], DirectedEdge["acme-everything", "api-builder"], DirectedEdge["acme-everything", "apiary-authenticate"], DirectedEdge["acme-everything", "apiary-clientsession"], DirectedEdge["acme-everything", "apiary-eventsource"], DirectedEdge["acme-everything", "apiary-helics"], DirectedEdge["acme-everything", "apiary-memcached"], DirectedEdge["acme-everything", "apiary-mongoDB"], DirectedEdge["acme-everything", "apiary-persistent"], DirectedEdge["acme-everything", "apiary-purescript"], DirectedEdge["acme-everything", "apiary-websockets"], DirectedEdge["acme-everything", "apis"], DirectedEdge["acme-everything", "apotiki"], DirectedEdge["acme-everything", "app-settings"], DirectedEdge["acme-everything", "appc"], DirectedEdge["acme-everything", "ApplePush"], DirectedEdge["acme-everything", "AppleScript"], DirectedEdge["acme-everything", "applicative-fail"], DirectedEdge["acme-everything", "applicative-parsec"], DirectedEdge["acme-everything", "ApproxFun-hs"], DirectedEdge["acme-everything", "approximate-equality"], DirectedEdge["acme-everything", "ar-timestamp-wiper"], DirectedEdge["acme-everything", "arbb-vm"], DirectedEdge["acme-everything", "arbtt"], DirectedEdge["acme-everything", "archive"], DirectedEdge["acme-everything", "archiver"], DirectedEdge["acme-everything", "archlinux-web"], DirectedEdge["acme-everything", "archnews"], DirectedEdge["acme-everything", "arff"], DirectedEdge["acme-everything", "arguedit"], DirectedEdge["acme-everything", "ariadne"], DirectedEdge["acme-everything", "arion"], DirectedEdge["acme-everything", "arithmatic"], DirectedEdge["acme-everything", "armada"], DirectedEdge["acme-everything", "array-memoize"], DirectedEdge["acme-everything", "array-primops"], DirectedEdge["acme-everything", "array-utils"], DirectedEdge["acme-everything", "ArrayRef"], DirectedEdge["acme-everything", "arrow-improve"], DirectedEdge["acme-everything", "arrow-list"], DirectedEdge["acme-everything", "arrowp"], DirectedEdge["acme-everything", "ArrowVHDL"], DirectedEdge["acme-everything", "artery"], DirectedEdge["acme-everything", "arx"], DirectedEdge["acme-everything", "arxiv"], DirectedEdge["acme-everything", "ascii-progress"], DirectedEdge["acme-everything", "ascii85-conduit"], DirectedEdge["acme-everything", "asic"], DirectedEdge["acme-everything", "asn1dump"], DirectedEdge["acme-everything", "assembler"], DirectedEdge["acme-everything", "assert"], DirectedEdge["acme-everything", "assertions"], DirectedEdge["acme-everything", "assimp"], DirectedEdge["acme-everything", "astrds"], DirectedEdge["acme-everything", "astview"], DirectedEdge["acme-everything", "async-extras"], DirectedEdge["acme-everything", "async-manager"], DirectedEdge["acme-everything", "async-pool"], DirectedEdge["acme-everything", "asynchronous-exceptions"], DirectedEdge["acme-everything", "atl"], DirectedEdge["acme-everything", "atlassian-connect-core"], DirectedEdge["acme-everything", "atmos-dimensional"], DirectedEdge["acme-everything", "atmos-dimensional-tf"], DirectedEdge["acme-everything", "atomic-primops-foreign"], DirectedEdge["acme-everything", "atomic-primops-vector"], DirectedEdge["acme-everything", "atomic-write"], DirectedEdge["acme-everything", "AttoBencode"], DirectedEdge["acme-everything", "attoparsec-arff"], DirectedEdge["acme-everything", "attoparsec-csv"], DirectedEdge["acme-everything", "attoparsec-parsec"], DirectedEdge["acme-everything", "attoparsec-text-enumerator"], DirectedEdge["acme-everything", "attosplit"], DirectedEdge["acme-everything", "Attrac"], DirectedEdge["acme-everything", "atuin"], DirectedEdge["acme-everything", "audacity"], DirectedEdge["acme-everything", "augur"], DirectedEdge["acme-everything", "aur"], DirectedEdge["acme-everything", "Aurochs"], DirectedEdge["acme-everything", "authinfo-hs"], DirectedEdge["acme-everything", "authoring"], DirectedEdge["acme-everything", "auto"], DirectedEdge["acme-everything", "AutoForms"], DirectedEdge["acme-everything", "autoproc"], DirectedEdge["acme-everything", "avahi"], DirectedEdge["acme-everything", "AVar"], DirectedEdge["acme-everything", "avers"], DirectedEdge["acme-everything", "avl-static"], DirectedEdge["acme-everything", "avr-shake"], DirectedEdge["acme-everything", "awesomium-glut"], DirectedEdge["acme-everything", "AWin32Console"], DirectedEdge["acme-everything", "aws-cloudfront-signer"], DirectedEdge["acme-everything", "aws-dynamodb-streams"], DirectedEdge["acme-everything", "aws-elastic-transcoder"], DirectedEdge["acme-everything", "aws-lambda"], DirectedEdge["acme-everything", "aws-sdk-xml-unordered"], DirectedEdge["acme-everything", "aws-sns"], DirectedEdge["acme-everything", "azure-servicebus"], DirectedEdge["acme-everything", "azurify"], DirectedEdge["acme-everything", "b-tree"], DirectedEdge["acme-everything", "babylon"], DirectedEdge["acme-everything", "backdropper"], DirectedEdge["acme-everything", "backtracking-exceptions"], DirectedEdge["acme-everything", "backward-state"], DirectedEdge["acme-everything", "bacteria"], DirectedEdge["acme-everything", "bag"], DirectedEdge["acme-everything", "Baggins"], DirectedEdge["acme-everything", "bake"], DirectedEdge["acme-everything", "bamboo-launcher"], DirectedEdge["acme-everything", "bamboo-plugin-highlight"], DirectedEdge["acme-everything", "bamboo-plugin-photo"], DirectedEdge["acme-everything", "bamse"], DirectedEdge["acme-everything", "bamstats"], DirectedEdge["acme-everything", "Bang"], DirectedEdge["acme-everything", "bank-holidays-england"], DirectedEdge["acme-everything", "barchart"], DirectedEdge["acme-everything", "barley"], DirectedEdge["acme-everything", "Barracuda"], DirectedEdge["acme-everything", "barrie"], DirectedEdge["acme-everything", "barrier"], DirectedEdge["acme-everything", "barrier-monad"], DirectedEdge["acme-everything", "base"], DirectedEdge["acme-everything", "base64-conduit"], DirectedEdge["acme-everything", "bash"], DirectedEdge["acme-everything", "BASIC"], DirectedEdge["acme-everything", "basic-lens"], DirectedEdge["acme-everything", "basic-sop"], DirectedEdge["acme-everything", "baskell"], DirectedEdge["acme-everything", "battlenet-yesod"], DirectedEdge["acme-everything", "bbdb"], DirectedEdge["acme-everything", "bdd"], DirectedEdge["acme-everything", "bdelta"], DirectedEdge["acme-everything", "bdo"], DirectedEdge["acme-everything", "beautifHOL"], DirectedEdge["acme-everything", "bein"], DirectedEdge["acme-everything", "benchmark-function"], DirectedEdge["acme-everything", "berkeleydb"], DirectedEdge["acme-everything", "BerkeleyDBXML"], DirectedEdge["acme-everything", "BerlekampAlgorithm"], DirectedEdge["acme-everything", "berp"], DirectedEdge["acme-everything", "bet"], DirectedEdge["acme-everything", "betacode"], DirectedEdge["acme-everything", "bf-cata"], DirectedEdge["acme-everything", "bff"], DirectedEdge["acme-everything", "bff-mono"], DirectedEdge["acme-everything", "bgmax"], DirectedEdge["acme-everything", "bgzf"], DirectedEdge["acme-everything", "bidirectionalization-combined"], DirectedEdge["acme-everything", "bidispec-extras"], DirectedEdge["acme-everything", "BigPixel"], DirectedEdge["acme-everything", "billboard-parser"], DirectedEdge["acme-everything", "billeksah-main"], DirectedEdge["acme-everything", "billeksah-main-static"], DirectedEdge["acme-everything", "binary-communicator"], DirectedEdge["acme-everything", "binary-derive"], DirectedEdge["acme-everything", "binary-indexed-tree"], DirectedEdge["acme-everything", "binary-literal-qq"], DirectedEdge["acme-everything", "binary-protocol"], DirectedEdge["acme-everything", "binary-protocol-zmq"], DirectedEdge["acme-everything", "binary-store"], DirectedEdge["acme-everything", "binary-streams"], DirectedEdge["acme-everything", "binary-typed"], DirectedEdge["acme-everything", "binarydefer"], DirectedEdge["acme-everything", "bind-marshal"], DirectedEdge["acme-everything", "binding-gtk"], DirectedEdge["acme-everything", "binding-wx"], DirectedEdge["acme-everything", "bindings"], DirectedEdge["acme-everything", "bindings-apr-util"], DirectedEdge["acme-everything", "bindings-bfd"], DirectedEdge["acme-everything", "bindings-common"], DirectedEdge["acme-everything", "bindings-directfb"], DirectedEdge["acme-everything", "bindings-eskit"], DirectedEdge["acme-everything", "bindings-fann"], DirectedEdge["acme-everything", "bindings-fluidsynth"], DirectedEdge["acme-everything", "bindings-friso"], DirectedEdge["acme-everything", "bindings-gsl"], DirectedEdge["acme-everything", "bindings-gts"], DirectedEdge["acme-everything", "bindings-libcddb"], DirectedEdge["acme-everything", "bindings-libffi"], DirectedEdge["acme-everything", "bindings-libftdi"], DirectedEdge["acme-everything", "bindings-librrd"], DirectedEdge["acme-everything", "bindings-libstemmer"], DirectedEdge["acme-everything", "bindings-mmap"], DirectedEdge["acme-everything", "bindings-mpdecimal"], DirectedEdge["acme-everything", "bindings-nettle"], DirectedEdge["acme-everything", "bindings-parport"], DirectedEdge["acme-everything", "bindings-ppdev"], DirectedEdge["acme-everything", "bindings-sane"], DirectedEdge["acme-everything", "bindings-uname"], DirectedEdge["acme-everything", "binembed-example"], DirectedEdge["acme-everything", "Binpack"], DirectedEdge["acme-everything", "bioace"], DirectedEdge["acme-everything", "BiobaseMAF"], DirectedEdge["acme-everything", "biofastq"], DirectedEdge["acme-everything", "biophd"], DirectedEdge["acme-everything", "biostockholm"], DirectedEdge["acme-everything", "bird"], DirectedEdge["acme-everything", "BirdPP"], DirectedEdge["acme-everything", "bit-array"], DirectedEdge["acme-everything", "bit-vector"], DirectedEdge["acme-everything", "bitarray"], DirectedEdge["acme-everything", "bitcoin-api"], DirectedEdge["acme-everything", "bitcoin-rpc"], DirectedEdge["acme-everything", "bitly-cli"], DirectedEdge["acme-everything", "bitmaps"], DirectedEdge["acme-everything", "bits-conduit"], DirectedEdge["acme-everything", "bitspeak"], DirectedEdge["acme-everything", "bitstream"], DirectedEdge["acme-everything", "bitstring"], DirectedEdge["acme-everything", "BitSyntax"], DirectedEdge["acme-everything", "bittorrent"], DirectedEdge["acme-everything", "bitvec"], DirectedEdge["acme-everything", "bkr"], DirectedEdge["acme-everything", "bla"], DirectedEdge["acme-everything", "black-jewel"], DirectedEdge["acme-everything", "blacktip"], DirectedEdge["acme-everything", "blakesum-demo"], DirectedEdge["acme-everything", "blas"], DirectedEdge["acme-everything", "blas-hs"], DirectedEdge["acme-everything", "BlastHTTP"], DirectedEdge["acme-everything", "blaze"], DirectedEdge["acme-everything", "blaze-from-html"], DirectedEdge["acme-everything", "blaze-html-contrib"], DirectedEdge["acme-everything", "blaze-html-hexpat"], DirectedEdge["acme-everything", "blaze-html-truncate"], DirectedEdge["acme-everything", "blaze-json"], DirectedEdge["acme-everything", "blazeMarker"], DirectedEdge["acme-everything", "blip"], DirectedEdge["acme-everything", "Blobs"], DirectedEdge["acme-everything", "blocking-transactions"], DirectedEdge["acme-everything", "blogination"], DirectedEdge["acme-everything", "bloodhound"], DirectedEdge["acme-everything", "bloxorz"], DirectedEdge["acme-everything", "Blueprint"], DirectedEdge["acme-everything", "BluePrintCSS"], DirectedEdge["acme-everything", "bluetile"], DirectedEdge["acme-everything", "bluetileutils"], DirectedEdge["acme-everything", "board-games"], DirectedEdge["acme-everything", "bogre-banana"], DirectedEdge["acme-everything", "Bookshelf"], DirectedEdge["acme-everything", "boolean-normal-forms"], DirectedEdge["acme-everything", "boolexpr"], DirectedEdge["acme-everything", "bools"], DirectedEdge["acme-everything", "boolsimplifier"], DirectedEdge["acme-everything", "boomange"], DirectedEdge["acme-everything", "boomslang"], DirectedEdge["acme-everything", "borel"], DirectedEdge["acme-everything", "bot"], DirectedEdge["acme-everything", "botpp"], DirectedEdge["acme-everything", "bound-gen"], DirectedEdge["acme-everything", "bounded-tchan"], DirectedEdge["acme-everything", "bower-json"], DirectedEdge["acme-everything", "bpann"], DirectedEdge["acme-everything", "brainfuck-monad"], DirectedEdge["acme-everything", "Bravo"], DirectedEdge["acme-everything", "breakout"], DirectedEdge["acme-everything", "breve"], DirectedEdge["acme-everything", "brians-brain"], DirectedEdge["acme-everything", "broadcast-chan"], DirectedEdge["acme-everything", "broccoli"], DirectedEdge["acme-everything", "bsd-sysctl"], DirectedEdge["acme-everything", "bson-generic"], DirectedEdge["acme-everything", "bson-generics"], DirectedEdge["acme-everything", "bson-mapping"], DirectedEdge["acme-everything", "bspack"], DirectedEdge["acme-everything", "bsparse"], DirectedEdge["acme-everything", "btree-concurrent"], DirectedEdge["acme-everything", "btrfs"], DirectedEdge["acme-everything", "buffer-builder-aeson"], DirectedEdge["acme-everything", "BufferedSocket"], DirectedEdge["acme-everything", "buildable"], DirectedEdge["acme-everything", "buildbox-tools"], DirectedEdge["acme-everything", "bumper"], DirectedEdge["acme-everything", "burst-detection"], DirectedEdge["acme-everything", "bus-pirate"], DirectedEdge["acme-everything", "Buster"], DirectedEdge["acme-everything", "buster-gtk"], DirectedEdge["acme-everything", "buster-network"], DirectedEdge["acme-everything", "bustle"], DirectedEdge["acme-everything", "bv"], DirectedEdge["acme-everything", "bytestring-delta"], DirectedEdge["acme-everything", "bytestring-from"], DirectedEdge["acme-everything", "bytestring-plain"], DirectedEdge["acme-everything", "bytestring-rematch"], DirectedEdge["acme-everything", "bytestring-short"], DirectedEdge["acme-everything", "bytestringparser"], DirectedEdge["acme-everything", "bytestringreadp"], DirectedEdge["acme-everything", "bzlib-conduit"], DirectedEdge["acme-everything", "c-io"], DirectedEdge["acme-everything", "c-storable-deriving"], DirectedEdge["acme-everything", "c0check"], DirectedEdge["acme-everything", "c2hs"], DirectedEdge["acme-everything", "c2hsc"], DirectedEdge["acme-everything", "cabal-audit"], DirectedEdge["acme-everything", "cabal-constraints"], DirectedEdge["acme-everything", "cabal-db"], DirectedEdge["acme-everything", "cabal-dependency-licenses"], DirectedEdge["acme-everything", "cabal-dev"], DirectedEdge["acme-everything", "cabal-dir"], DirectedEdge["acme-everything", "cabal-ghci"], DirectedEdge["acme-everything", "cabal-graphdeps"], DirectedEdge["acme-everything", "cabal-helper"], DirectedEdge["acme-everything", "cabal-install"], DirectedEdge["acme-everything", "cabal-install-bundle"], DirectedEdge["acme-everything", "cabal-meta"], DirectedEdge["acme-everything", "cabal-mon"], DirectedEdge["acme-everything", "cabal-nirvana"], DirectedEdge["acme-everything", "cabal-progdeps"], DirectedEdge["acme-everything", "cabal-query"], DirectedEdge["acme-everything", "cabal-rpm"], DirectedEdge["acme-everything", "cabal-scripts"], DirectedEdge["acme-everything", "cabal-setup"], DirectedEdge["acme-everything", "cabal-sign"], DirectedEdge["acme-everything", "cabal-sort"], DirectedEdge["acme-everything", "cabal-src"], DirectedEdge["acme-everything", "cabal-test"], DirectedEdge["acme-everything", "cabal-test-compat"], DirectedEdge["acme-everything", "cabal-test-quickcheck"], DirectedEdge["acme-everything", "cabal-uninstall"], DirectedEdge["acme-everything", "cabal-upload"], DirectedEdge["acme-everything", "cabal2arch"], DirectedEdge["acme-everything", "cabal2doap"], DirectedEdge["acme-everything", "cabal2ghci"], DirectedEdge["acme-everything", "cabal2nix"], DirectedEdge["acme-everything", "cabal2spec"], DirectedEdge["acme-everything", "cabalg"], DirectedEdge["acme-everything", "cabalgraph"], DirectedEdge["acme-everything", "cabalmdvrpm"], DirectedEdge["acme-everything", "CabalSearch"], DirectedEdge["acme-everything", "cabalvchk"], DirectedEdge["acme-everything", "cabin"], DirectedEdge["acme-everything", "cabocha"], DirectedEdge["acme-everything", "cached-traversable"], DirectedEdge["acme-everything", "caf"], DirectedEdge["acme-everything", "cafeteria-prelude"], DirectedEdge["acme-everything", "caffegraph"], DirectedEdge["acme-everything", "cairo-appbase"], DirectedEdge["acme-everything", "cake"], DirectedEdge["acme-everything", "cakyrespa"], DirectedEdge["acme-everything", "cal3d-examples"], DirectedEdge["acme-everything", "calc"], DirectedEdge["acme-everything", "calculator"], DirectedEdge["acme-everything", "caldims"], DirectedEdge["acme-everything", "caledon"], DirectedEdge["acme-everything", "camh"], DirectedEdge["acme-everything", "campfire"], DirectedEdge["acme-everything", "canonical-filepath"], DirectedEdge["acme-everything", "cantor"], DirectedEdge["acme-everything", "cao"], DirectedEdge["acme-everything", "cap"], DirectedEdge["acme-everything", "Capabilities"], DirectedEdge["acme-everything", "capped-list"], DirectedEdge["acme-everything", "capri"], DirectedEdge["acme-everything", "caramia"], DirectedEdge["acme-everything", "carboncopy"], DirectedEdge["acme-everything", "Cardinality"], DirectedEdge["acme-everything", "carettah"], DirectedEdge["acme-everything", "CarneadesIntoDung"], DirectedEdge["acme-everything", "cartel"], DirectedEdge["acme-everything", "casadi-bindings-control"], DirectedEdge["acme-everything", "casadi-bindings-ipopt-interface"], DirectedEdge["acme-everything", "casadi-bindings-snopt-interface"], DirectedEdge["acme-everything", "Cascade"], DirectedEdge["acme-everything", "cascading"], DirectedEdge["acme-everything", "case-conversion"], DirectedEdge["acme-everything", "cash"], DirectedEdge["acme-everything", "cassandra-cql"], DirectedEdge["acme-everything", "cassava-conduit"], DirectedEdge["acme-everything", "cassava-streams"], DirectedEdge["acme-everything", "cassette"], DirectedEdge["acme-everything", "cassy"], DirectedEdge["acme-everything", "castle"], DirectedEdge["acme-everything", "casui"], DirectedEdge["acme-everything", "catamorphism"], DirectedEdge["acme-everything", "Catana"], DirectedEdge["acme-everything", "categorical-algebra"], DirectedEdge["acme-everything", "cayley-client"], DirectedEdge["acme-everything", "cblrepo"], DirectedEdge["acme-everything", "CBOR"], DirectedEdge["acme-everything", "CC-delcont-alt"], DirectedEdge["acme-everything", "CC-delcont-ref-tf"], DirectedEdge["acme-everything", "cci"], DirectedEdge["acme-everything", "ccnx"], DirectedEdge["acme-everything", "cctools-workqueue"], DirectedEdge["acme-everything", "cedict"], DirectedEdge["acme-everything", "cellrenderer-cairo"], DirectedEdge["acme-everything", "cereal-derive"], DirectedEdge["acme-everything", "cereal-enumerator"], DirectedEdge["acme-everything", "cf"], DirectedEdge["acme-everything", "cfipu"], DirectedEdge["acme-everything", "cflp"], DirectedEdge["acme-everything", "cfopu"], DirectedEdge["acme-everything", "cgi-undecidable"], DirectedEdge["acme-everything", "cgi-utils"], DirectedEdge["acme-everything", "cgrep"], DirectedEdge["acme-everything", "chain-codes"], DirectedEdge["acme-everything", "chalk"], DirectedEdge["acme-everything", "chalkboard-viewer"], DirectedEdge["acme-everything", "change-monger"], DirectedEdge["acme-everything", "charade"], DirectedEdge["acme-everything", "charsetdetect"], DirectedEdge["acme-everything", "chart-histogram"], DirectedEdge["acme-everything", "Chart-simple"], DirectedEdge["acme-everything", "chaselev-deque"], DirectedEdge["acme-everything", "CheatSheet"], DirectedEdge["acme-everything", "check-email"], DirectedEdge["acme-everything", "check-pvp"], DirectedEdge["acme-everything", "Checked"], DirectedEdge["acme-everything", "checked"], DirectedEdge["acme-everything", "chell-hunit"], DirectedEdge["acme-everything", "chell-quickcheck"], DirectedEdge["acme-everything", "chesshs"], DirectedEdge["acme-everything", "Chitra"], DirectedEdge["acme-everything", "chp-mtl"], DirectedEdge["acme-everything", "chp-spec"], DirectedEdge["acme-everything", "chp-transformers"], DirectedEdge["acme-everything", "ChristmasTree"], DirectedEdge["acme-everything", "chronograph"], DirectedEdge["acme-everything", "chuchu"], DirectedEdge["acme-everything", "church-list"], DirectedEdge["acme-everything", "CHXHtml"], DirectedEdge["acme-everything", "cil"], DirectedEdge["acme-everything", "cinvoke"], DirectedEdge["acme-everything", "cio"], DirectedEdge["acme-everything", "circ"], DirectedEdge["acme-everything", "citeproc-hs-pandoc-filter"], DirectedEdge["acme-everything", "cjk"], DirectedEdge["acme-everything", "clac"], DirectedEdge["acme-everything", "claferwiki"], DirectedEdge["acme-everything", "clanki"], DirectedEdge["acme-everything", "CLASE"], DirectedEdge["acme-everything", "clash"], DirectedEdge["acme-everything", "clash-ghc"], DirectedEdge["acme-everything", "clash-prelude-quickcheck"], DirectedEdge["acme-everything", "ClassLaws"], DirectedEdge["acme-everything", "classy-prelude-yesod"], DirectedEdge["acme-everything", "ClassyPrelude"], DirectedEdge["acme-everything", "clckwrks-cli"], DirectedEdge["acme-everything", "clckwrks-dot-com"], DirectedEdge["acme-everything", "clckwrks-plugin-ircbot"], DirectedEdge["acme-everything", "clckwrks-theme-bootstrap"], DirectedEdge["acme-everything", "clckwrks-theme-geo-bootstrap"], DirectedEdge["acme-everything", "Clean"], DirectedEdge["acme-everything", "clean-home"], DirectedEdge["acme-everything", "clean-unions"], DirectedEdge["acme-everything", "cless"], DirectedEdge["acme-everything", "CLI"], DirectedEdge["acme-everything", "cli"], DirectedEdge["acme-everything", "click-clack"], DirectedEdge["acme-everything", "Clipboard"], DirectedEdge["acme-everything", "clipper"], DirectedEdge["acme-everything", "clist"], DirectedEdge["acme-everything", "clocked"], DirectedEdge["acme-everything", "clogparse"], DirectedEdge["acme-everything", "clone-all"], DirectedEdge["acme-everything", "closure"], DirectedEdge["acme-everything", "cloud-haskell"], DirectedEdge["acme-everything", "cloudfront-signer"], DirectedEdge["acme-everything", "cloudyfs"], DirectedEdge["acme-everything", "cltw"], DirectedEdge["acme-everything", "clua"], DirectedEdge["acme-everything", "clustering"], DirectedEdge["acme-everything", "clustertools"], DirectedEdge["acme-everything", "clutterhs"], DirectedEdge["acme-everything", "cmaes"], DirectedEdge["acme-everything", "cmark"], DirectedEdge["acme-everything", "cmath"], DirectedEdge["acme-everything", "CMCompare"], DirectedEdge["acme-everything", "cmd-item"], DirectedEdge["acme-everything", "cmdargs-browser"], DirectedEdge["acme-everything", "cmonad"], DirectedEdge["acme-everything", "CMQ"], DirectedEdge["acme-everything", "cmu"], DirectedEdge["acme-everything", "cnc-spec-compiler"], DirectedEdge["acme-everything", "cndict"], DirectedEdge["acme-everything", "Coadjute"], DirectedEdge["acme-everything", "Codec-Compression-LZF"], DirectedEdge["acme-everything", "codecov-haskell"], DirectedEdge["acme-everything", "codemonitor"], DirectedEdge["acme-everything", "codepad"], DirectedEdge["acme-everything", "codo-notation"], DirectedEdge["acme-everything", "cofunctor"], DirectedEdge["acme-everything", "colada"], DirectedEdge["acme-everything", "colchis"], DirectedEdge["acme-everything", "collada-output"], DirectedEdge["acme-everything", "collapse-util"], DirectedEdge["acme-everything", "collection-json"], DirectedEdge["acme-everything", "collections"], DirectedEdge["acme-everything", "coltrane"], DirectedEdge["acme-everything", "combinat-diagrams"], DirectedEdge["acme-everything", "combinatorics"], DirectedEdge["acme-everything", "Combinatorrent"], DirectedEdge["acme-everything", "combobuffer"], DirectedEdge["acme-everything", "Command"], DirectedEdge["acme-everything", "command"], DirectedEdge["acme-everything", "Commando"], DirectedEdge["acme-everything", "commodities"], DirectedEdge["acme-everything", "commsec-keyexchange"], DirectedEdge["acme-everything", "comonad-random"], DirectedEdge["acme-everything", "ComonadSheet"], DirectedEdge["acme-everything", "compact-map"], DirectedEdge["acme-everything", "compare-type"], DirectedEdge["acme-everything", "compdata-automata"], DirectedEdge["acme-everything", "compdata-dags"], DirectedEdge["acme-everything", "compdata-param"], DirectedEdge["acme-everything", "compensated"], DirectedEdge["acme-everything", "competition"], DirectedEdge["acme-everything", "complex-integrate"], DirectedEdge["acme-everything", "complexity"], DirectedEdge["acme-everything", "compose-trans"], DirectedEdge["acme-everything", "compressed"], DirectedEdge["acme-everything", "compression"], DirectedEdge["acme-everything", "compstrat"], DirectedEdge["acme-everything", "comptrans"], DirectedEdge["acme-everything", "computational-algebra"], DirectedEdge["acme-everything", "computations"], DirectedEdge["acme-everything", "concorde"], DirectedEdge["acme-everything", "concraft-hr"], DirectedEdge["acme-everything", "concraft-pl"], DirectedEdge["acme-everything", "concrete-relaxng-parser"], DirectedEdge["acme-everything", "concurrent-barrier"], DirectedEdge["acme-everything", "concurrent-dns-cache"], DirectedEdge["acme-everything", "concurrent-sa"], DirectedEdge["acme-everything", "concurrent-state"], DirectedEdge["acme-everything", "Concurrential"], DirectedEdge["acme-everything", "ConcurrentUtils"], DirectedEdge["acme-everything", "Condor"], DirectedEdge["acme-everything", "condor"], DirectedEdge["acme-everything", "condorcet"], DirectedEdge["acme-everything", "conductive-clock"], DirectedEdge["acme-everything", "conduit-audio-lame"], DirectedEdge["acme-everything", "conduit-audio-samplerate"], DirectedEdge["acme-everything", "conduit-audio-sndfile"], DirectedEdge["acme-everything", "conduit-connection"], DirectedEdge["acme-everything", "conduit-iconv"], DirectedEdge["acme-everything", "conduit-network-stream"], DirectedEdge["acme-everything", "conduit-resumablesink"], DirectedEdge["acme-everything", "conf"], DirectedEdge["acme-everything", "config-select"], DirectedEdge["acme-everything", "ConfigFileTH"], DirectedEdge["acme-everything", "Configger"], DirectedEdge["acme-everything", "Configurable"], DirectedEdge["acme-everything", "configuration"], DirectedEdge["acme-everything", "confsolve"], DirectedEdge["acme-everything", "congruence-relation"], DirectedEdge["acme-everything", "conjugateGradient"], DirectedEdge["acme-everything", "conjure"], DirectedEdge["acme-everything", "connection-pool"], DirectedEdge["acme-everything", "Conscript"], DirectedEdge["acme-everything", "consistent"], DirectedEdge["acme-everything", "ConsStream"], DirectedEdge["acme-everything", "const-math-ghc-plugin"], DirectedEdge["acme-everything", "constrained-normal"], DirectedEdge["acme-everything", "constructible"], DirectedEdge["acme-everything", "constructive-algebra"], DirectedEdge["acme-everything", "container-classes"], DirectedEdge["acme-everything", "containers-benchmark"], DirectedEdge["acme-everything", "containers-deepseq"], DirectedEdge["acme-everything", "ContArrow"], DirectedEdge["acme-everything", "context-free-grammar"], DirectedEdge["acme-everything", "context-stack"], DirectedEdge["acme-everything", "continue"], DirectedEdge["acme-everything", "continuum"], DirectedEdge["acme-everything", "continuum-client"], DirectedEdge["acme-everything", "Contract"], DirectedEdge["acme-everything", "Control-Engine"], DirectedEdge["acme-everything", "control-monad-attempt"], DirectedEdge["acme-everything", "control-monad-exception-monadsfd"], DirectedEdge["acme-everything", "control-monad-exception-monadstf"], DirectedEdge["acme-everything", "control-monad-exception-mtl"], DirectedEdge["acme-everything", "control-monad-failure-mtl"], DirectedEdge["acme-everything", "Control-Monad-MultiPass"], DirectedEdge["acme-everything", "control-monad-queue"], DirectedEdge["acme-everything", "contstuff-monads-tf"], DirectedEdge["acme-everything", "contstuff-transformers"], DirectedEdge["acme-everything", "convertible-ascii"], DirectedEdge["acme-everything", "copilot"], DirectedEdge["acme-everything", "copr"], DirectedEdge["acme-everything", "core-haskell"], DirectedEdge["acme-everything", "corebot-bliki"], DirectedEdge["acme-everything", "CoreErlang"], DirectedEdge["acme-everything", "CoreFoundation"], DirectedEdge["acme-everything", "Coroutine"], DirectedEdge["acme-everything", "coroutine-enumerator"], DirectedEdge["acme-everything", "coroutine-iteratee"], DirectedEdge["acme-everything", "couch-hs"], DirectedEdge["acme-everything", "couchdb-conduit"], DirectedEdge["acme-everything", "couchdb-enumerator"], DirectedEdge["acme-everything", "count"], DirectedEdge["acme-everything", "countable"], DirectedEdge["acme-everything", "counter"], DirectedEdge["acme-everything", "court"], DirectedEdge["acme-everything", "CPBrainfuck"], DirectedEdge["acme-everything", "CPL"], DirectedEdge["acme-everything", "cprng-aes-effect"], DirectedEdge["acme-everything", "cpsa"], DirectedEdge["acme-everything", "cpuperf"], DirectedEdge["acme-everything", "cpython"], DirectedEdge["acme-everything", "cql-io"], DirectedEdge["acme-everything", "cqrs-example"], DirectedEdge["acme-everything", "cqrs-postgresql"], DirectedEdge["acme-everything", "cqrs-test"], DirectedEdge["acme-everything", "cr"], DirectedEdge["acme-everything", "crack"], DirectedEdge["acme-everything", "Craft3e"], DirectedEdge["acme-everything", "creatur"], DirectedEdge["acme-everything", "crf-chain2-generic"], DirectedEdge["acme-everything", "critbit"], DirectedEdge["acme-everything", "criterion-plus"], DirectedEdge["acme-everything", "criterion-to-html"], DirectedEdge["acme-everything", "crockford"], DirectedEdge["acme-everything", "crocodile"], DirectedEdge["acme-everything", "cron"], DirectedEdge["acme-everything", "cruncher-types"], DirectedEdge["acme-everything", "crunghc"], DirectedEdge["acme-everything", "crypto-api-tests"], DirectedEdge["acme-everything", "crypto-cipher-benchmarks"], DirectedEdge["acme-everything", "crypto-cipher-tests"], DirectedEdge["acme-everything", "crypto-classical"], DirectedEdge["acme-everything", "crypto-pubkey-openssh"], DirectedEdge["acme-everything", "crypto-random-api"], DirectedEdge["acme-everything", "crypto-totp"], DirectedEdge["acme-everything", "cryptsy-api"], DirectedEdge["acme-everything", "crystalfontz"], DirectedEdge["acme-everything", "cse-ghc-plugin"], DirectedEdge["acme-everything", "csound-sampler"], DirectedEdge["acme-everything", "csp"], DirectedEdge["acme-everything", "CSPM-cspm"], DirectedEdge["acme-everything", "cspmchecker"], DirectedEdge["acme-everything", "csv-nptools"], DirectedEdge["acme-everything", "csv-to-qif"], DirectedEdge["acme-everything", "ctemplate"], DirectedEdge["acme-everything", "ctkl"], DirectedEdge["acme-everything", "CTRex"], DirectedEdge["acme-everything", "ctrie"], DirectedEdge["acme-everything", "cubical"], DirectedEdge["acme-everything", "cubicspline"], DirectedEdge["acme-everything", "cuboid"], DirectedEdge["acme-everything", "cudd"], DirectedEdge["acme-everything", "current-locale"], DirectedEdge["acme-everything", "cursedcsv"], DirectedEdge["acme-everything", "curves"], DirectedEdge["acme-everything", "cyclotomic"], DirectedEdge["acme-everything", "cypher"], DirectedEdge["acme-everything", "d-bus"], DirectedEdge["acme-everything", "d3js"], DirectedEdge["acme-everything", "daemonize-doublefork"], DirectedEdge["acme-everything", "dag"], DirectedEdge["acme-everything", "DAG-Tournament"], DirectedEdge["acme-everything", "Dao"], DirectedEdge["acme-everything", "dao"], DirectedEdge["acme-everything", "dapi"], DirectedEdge["acme-everything", "darcs-benchmark"], DirectedEdge["acme-everything", "darcs-beta"], DirectedEdge["acme-everything", "darcs-buildpackage"], DirectedEdge["acme-everything", "darcs-cabalized"], DirectedEdge["acme-everything", "darcs-fastconvert"], DirectedEdge["acme-everything", "darcs-graph"], DirectedEdge["acme-everything", "darcs-monitor"], DirectedEdge["acme-everything", "darcs-scripts"], DirectedEdge["acme-everything", "darcs2dot"], DirectedEdge["acme-everything", "darcsden"], DirectedEdge["acme-everything", "DarcsHelpers"], DirectedEdge["acme-everything", "darcswatch"], DirectedEdge["acme-everything", "dash-haskell"], DirectedEdge["acme-everything", "data-accessor-monadLib"], DirectedEdge["acme-everything", "data-accessor-monads-fd"], DirectedEdge["acme-everything", "data-accessor-monads-tf"], DirectedEdge["acme-everything", "data-aviary"], DirectedEdge["acme-everything", "data-category"], DirectedEdge["acme-everything", "data-cycle"], DirectedEdge["acme-everything", "data-dispersal"], DirectedEdge["acme-everything", "data-extra"], DirectedEdge["acme-everything", "data-filepath"], DirectedEdge["acme-everything", "data-fin"], DirectedEdge["acme-everything", "data-fresh"], DirectedEdge["acme-everything", "Data-Hash-Consistent"], DirectedEdge["acme-everything", "data-kiln"], DirectedEdge["acme-everything", "data-layout"], DirectedEdge["acme-everything", "data-lens-ixset"], DirectedEdge["acme-everything", "data-list-sequences"], DirectedEdge["acme-everything", "data-nat"], DirectedEdge["acme-everything", "data-object-json"], DirectedEdge["acme-everything", "data-or"], DirectedEdge["acme-everything", "data-partition"], DirectedEdge["acme-everything", "data-quotientref"], DirectedEdge["acme-everything", "data-reify-cse"], DirectedEdge["acme-everything", "data-rev"], DirectedEdge["acme-everything", "Data-Rope"], DirectedEdge["acme-everything", "data-rope"], DirectedEdge["acme-everything", "data-size"], DirectedEdge["acme-everything", "data-spacepart"], DirectedEdge["acme-everything", "data-structure-inferrer"], DirectedEdge["acme-everything", "data-timeout"], DirectedEdge["acme-everything", "data-transform"], DirectedEdge["acme-everything", "data-util"], DirectedEdge["acme-everything", "database-migrate"], DirectedEdge["acme-everything", "database-study"], DirectedEdge["acme-everything", "datapacker"], DirectedEdge["acme-everything", "DataTreeView"], DirectedEdge["acme-everything", "dbcleaner"], DirectedEdge["acme-everything", "dbjava"], DirectedEdge["acme-everything", "DBlimited"], DirectedEdge["acme-everything", "dbmigrations"], DirectedEdge["acme-everything", "DBus"], DirectedEdge["acme-everything", "dbus-qq"], DirectedEdge["acme-everything", "dbus-th"], DirectedEdge["acme-everything", "dclabel"], DirectedEdge["acme-everything", "ddc-tools"], DirectedEdge["acme-everything", "ddc-war"], DirectedEdge["acme-everything", "ddci-core"], DirectedEdge["acme-everything", "dead-simple-json"], DirectedEdge["acme-everything", "Deadpan-DDP"], DirectedEdge["acme-everything", "debian-binary"], DirectedEdge["acme-everything", "debug-diff"], DirectedEdge["acme-everything", "decepticons"], DirectedEdge["acme-everything", "DecisionTree"], DirectedEdge["acme-everything", "decoder-conduit"], DirectedEdge["acme-everything", "dedukti"], DirectedEdge["acme-everything", "deepseq-magic"], DirectedEdge["acme-everything", "deepseq-th"], DirectedEdge["acme-everything", "deepzoom"], DirectedEdge["acme-everything", "defargs"], DirectedEdge["acme-everything", "DefendTheKing"], DirectedEdge["acme-everything", "definitive-graphics"], DirectedEdge["acme-everything", "definitive-sound"], DirectedEdge["acme-everything", "deiko-config"], DirectedEdge["acme-everything", "deka-tests"], DirectedEdge["acme-everything", "delaunay"], DirectedEdge["acme-everything", "delicious"], DirectedEdge["acme-everything", "delta-h"], DirectedEdge["acme-everything", "demarcate"], DirectedEdge["acme-everything", "denominate"], DirectedEdge["acme-everything", "depends"], DirectedEdge["acme-everything", "dephd"], DirectedEdge["acme-everything", "derangement"], DirectedEdge["acme-everything", "derivation-trees"], DirectedEdge["acme-everything", "derive-gadt"], DirectedEdge["acme-everything", "derive-IG"], DirectedEdge["acme-everything", "derive-topdown"], DirectedEdge["acme-everything", "derp-lib"], DirectedEdge["acme-everything", "DescriptiveKeys"], DirectedEdge["acme-everything", "despair"], DirectedEdge["acme-everything", "detrospector"], DirectedEdge["acme-everything", "deunicode"], DirectedEdge["acme-everything", "devil"], DirectedEdge["acme-everything", "dewdrop"], DirectedEdge["acme-everything", "Dflow"], DirectedEdge["acme-everything", "dfrac"], DirectedEdge["acme-everything", "dfsbuild"], DirectedEdge["acme-everything", "dgim"], DirectedEdge["acme-everything", "diagrams-canvas"], DirectedEdge["acme-everything", "diagrams-hsqml"], DirectedEdge["acme-everything", "diagrams-pdf"], DirectedEdge["acme-everything", "diagrams-pgf"], DirectedEdge["acme-everything", "diagrams-qrcode"], DirectedEdge["acme-everything", "diagrams-rasterific"], DirectedEdge["acme-everything", "diagrams-rubiks-cube"], DirectedEdge["acme-everything", "diagrams-tikz"], DirectedEdge["acme-everything", "dicom"], DirectedEdge["acme-everything", "diff-parse"], DirectedEdge["acme-everything", "diffcabal"], DirectedEdge["acme-everything", "diffdump"], DirectedEdge["acme-everything", "DifferentialEvolution"], DirectedEdge["acme-everything", "digest-pure"], DirectedEdge["acme-everything", "digestive-bootstrap"], DirectedEdge["acme-everything", "digestive-foundation-lucid"], DirectedEdge["acme-everything", "digestive-functors-aeson"], DirectedEdge["acme-everything", "digestive-functors-happstack"], DirectedEdge["acme-everything", "digestive-functors-hsp"], DirectedEdge["acme-everything", "digestive-functors-scotty"], DirectedEdge["acme-everything", "Digit"], DirectedEdge["acme-everything", "digit"], DirectedEdge["acme-everything", "DigitalOcean"], DirectedEdge["acme-everything", "DimensionalHash"], DirectedEdge["acme-everything", "dingo-example"], DirectedEdge["acme-everything", "diophantine"], DirectedEdge["acme-everything", "direct-binary-files"], DirectedEdge["acme-everything", "direct-fastcgi"], DirectedEdge["acme-everything", "direct-http"], DirectedEdge["acme-everything", "direct-plugins"], DirectedEdge["acme-everything", "directed-cubical"], DirectedEdge["acme-everything", "directory-layout"], DirectedEdge["acme-everything", "dirfiles"], DirectedEdge["acme-everything", "dirstream"], DirectedEdge["acme-everything", "discordian-calendar"], DirectedEdge["acme-everything", "discount"], DirectedEdge["acme-everything", "discrete-space-map"], DirectedEdge["acme-everything", "DiscussionSupportSystem"], DirectedEdge["acme-everything", "disjoint-set"], DirectedEdge["acme-everything", "disjoint-sets-st"], DirectedEdge["acme-everything", "disk-free-space"], DirectedEdge["acme-everything", "Dist"], DirectedEdge["acme-everything", "dist-upload"], DirectedEdge["acme-everything", "DistanceTransform"], DirectedEdge["acme-everything", "DistanceUnits"], DirectedEdge["acme-everything", "DisTract"], DirectedEdge["acme-everything", "distributed-process-azure"], DirectedEdge["acme-everything", "distributed-process-monad-control"], DirectedEdge["acme-everything", "distributed-process-platform"], DirectedEdge["acme-everything", "distributed-process-registry"], DirectedEdge["acme-everything", "distributed-process-tests"], DirectedEdge["acme-everything", "distribution-plot"], DirectedEdge["acme-everything", "djinn"], DirectedEdge["acme-everything", "djinn-th"], DirectedEdge["acme-everything", "DMuCheck"], DirectedEdge["acme-everything", "dnsrbl"], DirectedEdge["acme-everything", "dnssd"], DirectedEdge["acme-everything", "doc-review"], DirectedEdge["acme-everything", "doccheck"], DirectedEdge["acme-everything", "docidx"], DirectedEdge["acme-everything", "docker"], DirectedEdge["acme-everything", "Docs"], DirectedEdge["acme-everything", "DocTest"], DirectedEdge["acme-everything", "doctest-discover"], DirectedEdge["acme-everything", "doctest-discover-configurator"], DirectedEdge["acme-everything", "doctest-prop"], DirectedEdge["acme-everything", "dom-lt"], DirectedEdge["acme-everything", "dom-selector"], DirectedEdge["acme-everything", "dominion"], DirectedEdge["acme-everything", "domplate"], DirectedEdge["acme-everything", "dot2graphml"], DirectedEdge["acme-everything", "dotfs"], DirectedEdge["acme-everything", "dove"], DirectedEdge["acme-everything", "dow"], DirectedEdge["acme-everything", "download-media-content"], DirectedEdge["acme-everything", "dozenal"], DirectedEdge["acme-everything", "DP"], DirectedEdge["acme-everything", "dph-examples"], DirectedEdge["acme-everything", "dph-lifted-copy"], DirectedEdge["acme-everything", "dph-par"], DirectedEdge["acme-everything", "dpkg"], DirectedEdge["acme-everything", "drawille"], DirectedEdge["acme-everything", "drClickOn"], DirectedEdge["acme-everything", "DrHylo"], DirectedEdge["acme-everything", "DrIFT-cabalized"], DirectedEdge["acme-everything", "drifter"], DirectedEdge["acme-everything", "dropbox-sdk"], DirectedEdge["acme-everything", "dropsolve"], DirectedEdge["acme-everything", "ds-kanren"], DirectedEdge["acme-everything", "DSH"], DirectedEdge["acme-everything", "dsmc-tools"], DirectedEdge["acme-everything", "dson"], DirectedEdge["acme-everything", "dson-parsec"], DirectedEdge["acme-everything", "DSTM"], DirectedEdge["acme-everything", "DTC"], DirectedEdge["acme-everything", "dtd"], DirectedEdge["acme-everything", "dtd-text"], DirectedEdge["acme-everything", "dtrace"], DirectedEdge["acme-everything", "dtw"], DirectedEdge["acme-everything", "Dust-tools-pcap"], DirectedEdge["acme-everything", "dvda"], DirectedEdge["acme-everything", "dvdread"], DirectedEdge["acme-everything", "dvi-processing"], DirectedEdge["acme-everything", "dvorak"], DirectedEdge["acme-everything", "dx9d3dx"], DirectedEdge["acme-everything", "dynamic-linker-template"], DirectedEdge["acme-everything", "dynamic-loader"], DirectedEdge["acme-everything", "dynamic-mvector"], DirectedEdge["acme-everything", "dynamic-object"], DirectedEdge["acme-everything", "dynamic-plot"], DirectedEdge["acme-everything", "DynamicTimeWarp"], DirectedEdge["acme-everything", "DysFRP-Craftwerk"], DirectedEdge["acme-everything", "dzen-utils"], DirectedEdge["acme-everything", "eager-sockets"], DirectedEdge["acme-everything", "Earley"], DirectedEdge["acme-everything", "easy-api"], DirectedEdge["acme-everything", "easyjson"], DirectedEdge["acme-everything", "easyrender"], DirectedEdge["acme-everything", "ebeats"], DirectedEdge["acme-everything", "Ebnf2ps"], DirectedEdge["acme-everything", "ec2-signature"], DirectedEdge["acme-everything", "ecu"], DirectedEdge["acme-everything", "ed25519-donna"], DirectedEdge["acme-everything", "eddie"], DirectedEdge["acme-everything", "ede"], DirectedEdge["acme-everything", "edenskel"], DirectedEdge["acme-everything", "edentv"], DirectedEdge["acme-everything", "edge"], DirectedEdge["acme-everything", "edit-lenses"], DirectedEdge["acme-everything", "edit-lenses-demo"], DirectedEdge["acme-everything", "editable"], DirectedEdge["acme-everything", "EditTimeReport"], DirectedEdge["acme-everything", "effect-handlers"], DirectedEdge["acme-everything", "effect-monad"], DirectedEdge["acme-everything", "effective-aspects"], DirectedEdge["acme-everything", "effective-aspects-mzv"], DirectedEdge["acme-everything", "effects-parser"], DirectedEdge["acme-everything", "egison-quote"], DirectedEdge["acme-everything", "egison-tutorial"], DirectedEdge["acme-everything", "ehaskell"], DirectedEdge["acme-everything", "eibd-client-simple"], DirectedEdge["acme-everything", "eigen"], DirectedEdge["acme-everything", "eithers"], DirectedEdge["acme-everything", "EitherT"], DirectedEdge["acme-everything", "ekg-bosun"], DirectedEdge["acme-everything", "ekg-carbon"], DirectedEdge["acme-everything", "ekg-log"], DirectedEdge["acme-everything", "ekg-rrd"], DirectedEdge["acme-everything", "ekg-statsd"], DirectedEdge["acme-everything", "electrum-mnemonic"], DirectedEdge["acme-everything", "elerea-examples"], DirectedEdge["acme-everything", "elerea-sdl"], DirectedEdge["acme-everything", "elm-build-lib"], DirectedEdge["acme-everything", "elm-get"], DirectedEdge["acme-everything", "elm-make"], DirectedEdge["acme-everything", "elm-reactor"], DirectedEdge["acme-everything", "elm-repl"], DirectedEdge["acme-everything", "elm-server"], DirectedEdge["acme-everything", "elm-yesod"], DirectedEdge["acme-everything", "email"], DirectedEdge["acme-everything", "email-header"], DirectedEdge["acme-everything", "email-postmark"], DirectedEdge["acme-everything", "email-validator"], DirectedEdge["acme-everything", "embeddock-example"], DirectedEdge["acme-everything", "embroidery"], DirectedEdge["acme-everything", "emgm"], DirectedEdge["acme-everything", "Emping"], DirectedEdge["acme-everything", "empty"], DirectedEdge["acme-everything", "Encode"], DirectedEdge["acme-everything", "endo"], DirectedEdge["acme-everything", "engine-io-growler"], DirectedEdge["acme-everything", "engine-io-snap"], DirectedEdge["acme-everything", "engine-io-yesod"], DirectedEdge["acme-everything", "engineering-units"], DirectedEdge["acme-everything", "EnumContainers"], DirectedEdge["acme-everything", "enumeration"], DirectedEdge["acme-everything", "enumerator-fd"], DirectedEdge["acme-everything", "enumerator-tf"], DirectedEdge["acme-everything", "enumfun"], DirectedEdge["acme-everything", "EnumMap"], DirectedEdge["acme-everything", "enummapmap"], DirectedEdge["acme-everything", "env-parser"], DirectedEdge["acme-everything", "envparse"], DirectedEdge["acme-everything", "epanet-haskell"], DirectedEdge["acme-everything", "epass"], DirectedEdge["acme-everything", "epub-tools"], DirectedEdge["acme-everything", "epubname"], DirectedEdge["acme-everything", "Eq"], DirectedEdge["acme-everything", "equal-files"], DirectedEdge["acme-everything", "EqualitySolver"], DirectedEdge["acme-everything", "erd"], DirectedEdge["acme-everything", "erf-native"], DirectedEdge["acme-everything", "erlang"], DirectedEdge["acme-everything", "eros-client"], DirectedEdge["acme-everything", "eros-http"], DirectedEdge["acme-everything", "errno"], DirectedEdge["acme-everything", "error-continuations"], DirectedEdge["acme-everything", "error-loc"], DirectedEdge["acme-everything", "error-location"], DirectedEdge["acme-everything", "error-message"], DirectedEdge["acme-everything", "errorcall-eq-instance"], DirectedEdge["acme-everything", "ersatz-toysat"], DirectedEdge["acme-everything", "esotericbot"], DirectedEdge["acme-everything", "EsounD"], DirectedEdge["acme-everything", "ess"], DirectedEdge["acme-everything", "estimator"], DirectedEdge["acme-everything", "estimators"], DirectedEdge["acme-everything", "EstProgress"], DirectedEdge["acme-everything", "estreps"], DirectedEdge["acme-everything", "EtaMOO"], DirectedEdge["acme-everything", "etcd"], DirectedEdge["acme-everything", "eternal"], DirectedEdge["acme-everything", "Eternal10Seconds"], DirectedEdge["acme-everything", "Etherbunny"], DirectedEdge["acme-everything", "ethereum-client-haskell"], DirectedEdge["acme-everything", "ety"], DirectedEdge["acme-everything", "euler"], DirectedEdge["acme-everything", "eurofxref"], DirectedEdge["acme-everything", "EuroIT"], DirectedEdge["acme-everything", "Euterpea"], DirectedEdge["acme-everything", "event-monad"], DirectedEdge["acme-everything", "EventSocket"], DirectedEdge["acme-everything", "eventstore"], DirectedEdge["acme-everything", "every-bit-counts"], DirectedEdge["acme-everything", "ewe"], DirectedEdge["acme-everything", "ex-pool"], DirectedEdge["acme-everything", "exact-pi"], DirectedEdge["acme-everything", "exception-mailer"], DirectedEdge["acme-everything", "exception-monads-fd"], DirectedEdge["acme-everything", "exception-monads-tf"], DirectedEdge["acme-everything", "exhaustive"], DirectedEdge["acme-everything", "exists"], DirectedEdge["acme-everything", "exp-pairs"], DirectedEdge["acme-everything", "expand"], DirectedEdge["acme-everything", "expat-enumerator"], DirectedEdge["acme-everything", "expiring-mvar"], DirectedEdge["acme-everything", "explain"], DirectedEdge["acme-everything", "explicit-determinant"], DirectedEdge["acme-everything", "explicit-sharing"], DirectedEdge["acme-everything", "explore"], DirectedEdge["acme-everything", "exposed-containers"], DirectedEdge["acme-everything", "expression-parser"], DirectedEdge["acme-everything", "extemp"], DirectedEdge["acme-everything", "extended-categories"], DirectedEdge["acme-everything", "extensible-data"], DirectedEdge["acme-everything", "external-sort"], DirectedEdge["acme-everything", "extractelf"], DirectedEdge["acme-everything", "ez-couch"], DirectedEdge["acme-everything", "faceted"], DirectedEdge["acme-everything", "Facts"], DirectedEdge["acme-everything", "factual-api"], DirectedEdge["acme-everything", "fad"], DirectedEdge["acme-everything", "failable-list"], DirectedEdge["acme-everything", "FailureT"], DirectedEdge["acme-everything", "fair-predicates"], DirectedEdge["acme-everything", "faker"], DirectedEdge["acme-everything", "falling-turnip"], DirectedEdge["acme-everything", "fallingblocks"], DirectedEdge["acme-everything", "family-tree"], DirectedEdge["acme-everything", "farmhash"], DirectedEdge["acme-everything", "fast-math"], DirectedEdge["acme-everything", "fast-tagsoup"], DirectedEdge["acme-everything", "fast-tagsoup-utf8-only"], DirectedEdge["acme-everything", "fastbayes"], DirectedEdge["acme-everything", "fastedit"], DirectedEdge["acme-everything", "FastxPipe"], DirectedEdge["acme-everything", "fault-tree"], DirectedEdge["acme-everything", "fay-builder"], DirectedEdge["acme-everything", "fay-hsx"], DirectedEdge["acme-everything", "fay-ref"], DirectedEdge["acme-everything", "fay-uri"], DirectedEdge["acme-everything", "fb-persistent"], DirectedEdge["acme-everything", "fca"], DirectedEdge["acme-everything", "fckeditor"], DirectedEdge["acme-everything", "fclabels-monadlib"], DirectedEdge["acme-everything", "FComp"], DirectedEdge["acme-everything", "feature-flags"], DirectedEdge["acme-everything", "fec"], DirectedEdge["acme-everything", "fedora-packages"], DirectedEdge["acme-everything", "feed-cli"], DirectedEdge["acme-everything", "feed-crawl"], DirectedEdge["acme-everything", "feed2lj"], DirectedEdge["acme-everything", "feldspar-compiler"], DirectedEdge["acme-everything", "feldspar-signal"], DirectedEdge["acme-everything", "fences"], DirectedEdge["acme-everything", "fenfire"], DirectedEdge["acme-everything", "FenwickTree"], DirectedEdge["acme-everything", "FermatsLastMargin"], DirectedEdge["acme-everything", "FerryCore"], DirectedEdge["acme-everything", "ffeed"], DirectedEdge["acme-everything", "fficxx"], DirectedEdge["acme-everything", "ffmpeg-light"], DirectedEdge["acme-everything", "ffmpeg-tutorials"], DirectedEdge["acme-everything", "fibon"], DirectedEdge["acme-everything", "fibonacci"], DirectedEdge["acme-everything", "fields"], DirectedEdge["acme-everything", "fields-json"], DirectedEdge["acme-everything", "fieldwise"], DirectedEdge["acme-everything", "fig"], DirectedEdge["acme-everything", "file-command-qq"], DirectedEdge["acme-everything", "filediff"], DirectedEdge["acme-everything", "FileManip"], DirectedEdge["acme-everything", "filepath-io-access"], DirectedEdge["acme-everything", "FilePather"], DirectedEdge["acme-everything", "filepather"], DirectedEdge["acme-everything", "FileSystem"], DirectedEdge["acme-everything", "filesystem-enumerator"], DirectedEdge["acme-everything", "filesystem-trees"], DirectedEdge["acme-everything", "filtrable"], DirectedEdge["acme-everything", "final"], DirectedEdge["acme-everything", "Finance-Quote-Yahoo"], DirectedEdge["acme-everything", "Finance-Treasury"], DirectedEdge["acme-everything", "fingertree-psqueue"], DirectedEdge["acme-everything", "fingertree-tf"], DirectedEdge["acme-everything", "FiniteMap"], DirectedEdge["acme-everything", "first-class-patterns"], DirectedEdge["acme-everything", "firstify"], DirectedEdge["acme-everything", "fishfood"], DirectedEdge["acme-everything", "fit"], DirectedEdge["acme-everything", "fitsio"], DirectedEdge["acme-everything", "fix-imports"], DirectedEdge["acme-everything", "fix-parser-simple"], DirectedEdge["acme-everything", "fix-symbols-gitit"], DirectedEdge["acme-everything", "fixed-length"], DirectedEdge["acme-everything", "fixed-list"], DirectedEdge["acme-everything", "fixed-point-vector"], DirectedEdge["acme-everything", "fixed-point-vector-space"], DirectedEdge["acme-everything", "fixed-precision"], DirectedEdge["acme-everything", "fixed-storable-array"], DirectedEdge["acme-everything", "fixed-vector-binary"], DirectedEdge["acme-everything", "fixed-vector-cereal"], DirectedEdge["acme-everything", "FixedPoint-simple"], DirectedEdge["acme-everything", "fixedwidth-hs"], DirectedEdge["acme-everything", "fixhs"], DirectedEdge["acme-everything", "fixpoint"], DirectedEdge["acme-everything", "fixtime"], DirectedEdge["acme-everything", "fizz-buzz"], DirectedEdge["acme-everything", "flaccuraterip"], DirectedEdge["acme-everything", "flamethrower"], DirectedEdge["acme-everything", "flamingra"], DirectedEdge["acme-everything", "flat-mcmc"], DirectedEdge["acme-everything", "flexible-time"], DirectedEdge["acme-everything", "flexiwrap-smallcheck"], DirectedEdge["acme-everything", "flickr"], DirectedEdge["acme-everything", "flippers"], DirectedEdge["acme-everything", "Flippi"], DirectedEdge["acme-everything", "flo"], DirectedEdge["acme-everything", "float-binstring"], DirectedEdge["acme-everything", "floating-bits"], DirectedEdge["acme-everything", "flow2dot"], DirectedEdge["acme-everything", "flowdock"], DirectedEdge["acme-everything", "flowdock-api"], DirectedEdge["acme-everything", "flower"], DirectedEdge["acme-everything", "flowlocks-framework"], DirectedEdge["acme-everything", "flowsim"], DirectedEdge["acme-everything", "fluent-logger-conduit"], DirectedEdge["acme-everything", "fluidsynth"], DirectedEdge["acme-everything", "FM-SBLEX"], DirectedEdge["acme-everything", "fmark"], DirectedEdge["acme-everything", "FModExRaw"], DirectedEdge["acme-everything", "Focus"], DirectedEdge["acme-everything", "foldl-incremental"], DirectedEdge["acme-everything", "folds-common"], DirectedEdge["acme-everything", "follower"], DirectedEdge["acme-everything", "Folly"], DirectedEdge["acme-everything", "foo"], DirectedEdge["acme-everything", "for-free"], DirectedEdge["acme-everything", "forbidden-fruit"], DirectedEdge["acme-everything", "fordo"], DirectedEdge["acme-everything", "forecast-io"], DirectedEdge["acme-everything", "foreign-store"], DirectedEdge["acme-everything", "foreign-var"], DirectedEdge["acme-everything", "forkable-monad"], DirectedEdge["acme-everything", "formal"], DirectedEdge["acme-everything", "format"], DirectedEdge["acme-everything", "format-status"], DirectedEdge["acme-everything", "forml"], DirectedEdge["acme-everything", "formlets-hsp"], DirectedEdge["acme-everything", "ForSyDe"], DirectedEdge["acme-everything", "forth-hll"], DirectedEdge["acme-everything", "Foster"], DirectedEdge["acme-everything", "fountain"], DirectedEdge["acme-everything", "fpipe"], DirectedEdge["acme-everything", "fpnla-examples"], DirectedEdge["acme-everything", "FPretty"], DirectedEdge["acme-everything", "fptest"], DirectedEdge["acme-everything", "fquery"], DirectedEdge["acme-everything", "fractal"], DirectedEdge["acme-everything", "frag"], DirectedEdge["acme-everything", "frame-markdown"], DirectedEdge["acme-everything", "franchise"], DirectedEdge["acme-everything", "Frank"], DirectedEdge["acme-everything", "free-functors"], DirectedEdge["acme-everything", "free-operational"], DirectedEdge["acme-everything", "free-theorems-counterexamples"], DirectedEdge["acme-everything", "free-theorems-seq-webui"], DirectedEdge["acme-everything", "free-theorems-webui"], DirectedEdge["acme-everything", "freesect"], DirectedEdge["acme-everything", "freesound"], DirectedEdge["acme-everything", "freetype-simple"], DirectedEdge["acme-everything", "FreeTypeGL"], DirectedEdge["acme-everything", "fresh"], DirectedEdge["acme-everything", "friday-devil"], DirectedEdge["acme-everything", "frisby"], DirectedEdge["acme-everything", "frp-arduino"], DirectedEdge["acme-everything", "fs-events"], DirectedEdge["acme-everything", "fsharp"], DirectedEdge["acme-everything", "fsmActions"], DirectedEdge["acme-everything", "fsutils"], DirectedEdge["acme-everything", "fswatcher"], DirectedEdge["acme-everything", "ftdi"], DirectedEdge["acme-everything", "FTGL-bytestring"], DirectedEdge["acme-everything", "ftp-conduit"], DirectedEdge["acme-everything", "FTPLine"], DirectedEdge["acme-everything", "ftree"], DirectedEdge["acme-everything", "ftshell"], DirectedEdge["acme-everything", "fugue"], DirectedEdge["acme-everything", "full-sessions"], DirectedEdge["acme-everything", "full-text-search"], DirectedEdge["acme-everything", "funcmp"], DirectedEdge["acme-everything", "function-combine"], DirectedEdge["acme-everything", "function-instances-algebra"], DirectedEdge["acme-everything", "functional-arrow"], DirectedEdge["acme-everything", "functor-apply"], DirectedEdge["acme-everything", "functor-combo"], DirectedEdge["acme-everything", "functorm"], DirectedEdge["acme-everything", "Fungi"], DirectedEdge["acme-everything", "funion"], DirectedEdge["acme-everything", "funpat"], DirectedEdge["acme-everything", "futun"], DirectedEdge["acme-everything", "future"], DirectedEdge["acme-everything", "fuzzcheck"], DirectedEdge["acme-everything", "fuzzy-timings"], DirectedEdge["acme-everything", "fuzzytime"], DirectedEdge["acme-everything", "fwgl-glfw"], DirectedEdge["acme-everything", "fwgl-javascript"], DirectedEdge["acme-everything", "g-npm"], DirectedEdge["acme-everything", "GA"], DirectedEdge["acme-everything", "gact"], DirectedEdge["acme-everything", "game-probability"], DirectedEdge["acme-everything", "game-tree"], DirectedEdge["acme-everything", "gameclock"], DirectedEdge["acme-everything", "gang-of-threads"], DirectedEdge["acme-everything", "Ganymede"], DirectedEdge["acme-everything", "garepinoh"], DirectedEdge["acme-everything", "garsia-wachs"], DirectedEdge["acme-everything", "GaussQuadIntegration"], DirectedEdge["acme-everything", "gbu"], DirectedEdge["acme-everything", "gc-monitoring-wai"], DirectedEdge["acme-everything", "gdiff-ig"], DirectedEdge["acme-everything", "gdiff-th"], DirectedEdge["acme-everything", "gearbox"], DirectedEdge["acme-everything", "GeBoP"], DirectedEdge["acme-everything", "geek-server"], DirectedEdge["acme-everything", "gemstone"], DirectedEdge["acme-everything", "gencheck"], DirectedEdge["acme-everything", "gender"], DirectedEdge["acme-everything", "generator"], DirectedEdge["acme-everything", "generators"], DirectedEdge["acme-everything", "generic-binary"], DirectedEdge["acme-everything", "generic-church"], DirectedEdge["acme-everything", "generic-deepseq"], DirectedEdge["acme-everything", "generic-lucid-scaffold"], DirectedEdge["acme-everything", "generic-maybe"], DirectedEdge["acme-everything", "generic-pretty"], DirectedEdge["acme-everything", "generic-server"], DirectedEdge["acme-everything", "generic-storable"], DirectedEdge["acme-everything", "generic-tree"], DirectedEdge["acme-everything", "generic-trie"], DirectedEdge["acme-everything", "generic-xml"], DirectedEdge["acme-everything", "generic-xmlpickler"], DirectedEdge["acme-everything", "genericserialize"], DirectedEdge["acme-everything", "genetics"], DirectedEdge["acme-everything", "geniconvert"], DirectedEdge["acme-everything", "geniplate-mirror"], DirectedEdge["acme-everything", "genprog"], DirectedEdge["acme-everything", "GenSmsPdu"], DirectedEdge["acme-everything", "gentlemark"], DirectedEdge["acme-everything", "geocalc"], DirectedEdge["acme-everything", "Geodetic"], DirectedEdge["acme-everything", "geodetic"], DirectedEdge["acme-everything", "geodetics"], DirectedEdge["acme-everything", "geohash"], DirectedEdge["acme-everything", "GeoIp"], DirectedEdge["acme-everything", "geojson"], DirectedEdge["acme-everything", "GeomPredicates-SSE"], DirectedEdge["acme-everything", "getemx"], DirectedEdge["acme-everything", "getflag"], DirectedEdge["acme-everything", "getopt-generics"], DirectedEdge["acme-everything", "getopt-simple"], DirectedEdge["acme-everything", "GGg"], DirectedEdge["acme-everything", "ggtsTC"], DirectedEdge["acme-everything", "ghc-core"], DirectedEdge["acme-everything", "ghc-core-html"], DirectedEdge["acme-everything", "ghc-datasize"], DirectedEdge["acme-everything", "ghc-dup"], DirectedEdge["acme-everything", "ghc-events-analyze"], DirectedEdge["acme-everything", "ghc-exactprint"], DirectedEdge["acme-everything", "ghc-gc-tune"], DirectedEdge["acme-everything", "ghc-generic-instances"], DirectedEdge["acme-everything", "ghc-make"], DirectedEdge["acme-everything", "ghc-man-completion"], DirectedEdge["acme-everything", "ghc-mtl"], DirectedEdge["acme-everything", "ghc-pkg-autofix"], DirectedEdge["acme-everything", "ghc-prof-flamegraph"], DirectedEdge["acme-everything", "ghc-server"], DirectedEdge["acme-everything", "ghc-srcspan-plugin"], DirectedEdge["acme-everything", "ghc-vis"], DirectedEdge["acme-everything", "ghci-diagrams"], DirectedEdge["acme-everything", "ghci-haskeline"], DirectedEdge["acme-everything", "ghci-lib"], DirectedEdge["acme-everything", "ghci-ng"], DirectedEdge["acme-everything", "ghci-pretty"], DirectedEdge["acme-everything", "ghcid"], DirectedEdge["acme-everything", "ghcjs-dom-hello"], DirectedEdge["acme-everything", "ghczdecode"], DirectedEdge["acme-everything", "ght"], DirectedEdge["acme-everything", "ginsu"], DirectedEdge["acme-everything", "gipeda"], DirectedEdge["acme-everything", "GiST"], DirectedEdge["acme-everything", "gist"], DirectedEdge["acme-everything", "git-all"], DirectedEdge["acme-everything", "git-annex"], DirectedEdge["acme-everything", "git-checklist"], DirectedEdge["acme-everything", "git-date"], DirectedEdge["acme-everything", "git-embed"], DirectedEdge["acme-everything", "git-freq"], DirectedEdge["acme-everything", "git-gpush"], DirectedEdge["acme-everything", "git-monitor"], DirectedEdge["acme-everything", "git-object"], DirectedEdge["acme-everything", "git-repair"], DirectedEdge["acme-everything", "gitcache"], DirectedEdge["acme-everything", "gitdo"], DirectedEdge["acme-everything", "github-backup"], DirectedEdge["acme-everything", "github-post-receive"], DirectedEdge["acme-everything", "github-utils"], DirectedEdge["acme-everything", "gitignore"], DirectedEdge["acme-everything", "gitlib-cross"], DirectedEdge["acme-everything", "gitlib-sample"], DirectedEdge["acme-everything", "gitlib-test"], DirectedEdge["acme-everything", "gitlib-utils"], DirectedEdge["acme-everything", "gitson"], DirectedEdge["acme-everything", "gladexml-accessor"], DirectedEdge["acme-everything", "glapp"], DirectedEdge["acme-everything", "glasso"], DirectedEdge["acme-everything", "GLFW-b-demo"], DirectedEdge["acme-everything", "GLFW-OGL"], DirectedEdge["acme-everything", "GLHUI"], DirectedEdge["acme-everything", "glintcollider"], DirectedEdge["acme-everything", "gll"], DirectedEdge["acme-everything", "GLMatrix"], DirectedEdge["acme-everything", "global"], DirectedEdge["acme-everything", "global-config"], DirectedEdge["acme-everything", "global-lock"], DirectedEdge["acme-everything", "glome-hs"], DirectedEdge["acme-everything", "GlomeView"], DirectedEdge["acme-everything", "gloss-banana"], DirectedEdge["acme-everything", "gloss-devil"], DirectedEdge["acme-everything", "gloss-examples"], DirectedEdge["acme-everything", "gloss-game"], DirectedEdge["acme-everything", "gloss-sodium"], DirectedEdge["acme-everything", "gmap"], DirectedEdge["acme-everything", "gmndl"], DirectedEdge["acme-everything", "gnome-desktop"], DirectedEdge["acme-everything", "gnome-keyring"], DirectedEdge["acme-everything", "goa"], DirectedEdge["acme-everything", "gofer-prelude"], DirectedEdge["acme-everything", "google-dictionary"], DirectedEdge["acme-everything", "google-drive"], DirectedEdge["acme-everything", "google-html5-slide"], DirectedEdge["acme-everything", "google-mail-filters"], DirectedEdge["acme-everything", "GoogleDirections"], DirectedEdge["acme-everything", "googleplus"], DirectedEdge["acme-everything", "GoogleSB"], DirectedEdge["acme-everything", "gopherbot"], DirectedEdge["acme-everything", "gpah"], DirectedEdge["acme-everything", "gpcsets"], DirectedEdge["acme-everything", "GPipe-Collada"], DirectedEdge["acme-everything", "GPipe-Examples"], DirectedEdge["acme-everything", "gps2htmlReport"], DirectedEdge["acme-everything", "gpx-conduit"], DirectedEdge["acme-everything", "graceful"], DirectedEdge["acme-everything", "grammar-combinators"], DirectedEdge["acme-everything", "GrammarProducts"], DirectedEdge["acme-everything", "grapefruit-examples"], DirectedEdge["acme-everything", "grapefruit-ui-gtk"], DirectedEdge["acme-everything", "graph-generators"], DirectedEdge["acme-everything", "graph-matchings"], DirectedEdge["acme-everything", "graph-rewriting-cl"], DirectedEdge["acme-everything", "graph-rewriting-lambdascope"], DirectedEdge["acme-everything", "graph-rewriting-ski"], DirectedEdge["acme-everything", "graph-rewriting-trs"], DirectedEdge["acme-everything", "graph-rewriting-ww"], DirectedEdge["acme-everything", "graph-serialize"], DirectedEdge["acme-everything", "graph-utils"], DirectedEdge["acme-everything", "graphbuilder"], DirectedEdge["acme-everything", "graphene"], DirectedEdge["acme-everything", "GraphHammer-examples"], DirectedEdge["acme-everything", "graphics-formats-collada"], DirectedEdge["acme-everything", "graphmod"], DirectedEdge["acme-everything", "graphs"], DirectedEdge["acme-everything", "graphtype"], DirectedEdge["acme-everything", "greencard-lib"], DirectedEdge["acme-everything", "greg-client"], DirectedEdge["acme-everything", "Grempa"], DirectedEdge["acme-everything", "GroteTrap"], DirectedEdge["acme-everything", "groundhog-mysql"], DirectedEdge["acme-everything", "group-with"], DirectedEdge["acme-everything", "groupoid"], DirectedEdge["acme-everything", "Grow"], DirectedEdge["acme-everything", "GrowlNotify"], DirectedEdge["acme-everything", "gruff-examples"], DirectedEdge["acme-everything", "gsc-weighting"], DirectedEdge["acme-everything", "gsl-random-fu"], DirectedEdge["acme-everything", "gsmenu"], DirectedEdge["acme-everything", "gt-tools"], DirectedEdge["acme-everything", "GTALib"], DirectedEdge["acme-everything", "gtfs"], DirectedEdge["acme-everything", "gtk-jsinput"], DirectedEdge["acme-everything", "gtk-mac-integration"], DirectedEdge["acme-everything", "gtk-simple-list-view"], DirectedEdge["acme-everything", "gtk-toggle-button-list"], DirectedEdge["acme-everything", "gtk-toy"], DirectedEdge["acme-everything", "gtk2hs-cast-glade"], DirectedEdge["acme-everything", "gtk2hs-cast-gnomevfs"], DirectedEdge["acme-everything", "gtk2hs-cast-gtk"], DirectedEdge["acme-everything", "gtk2hs-cast-gtkglext"], DirectedEdge["acme-everything", "gtk2hs-hello"], DirectedEdge["acme-everything", "gtk2hs-rpn"], DirectedEdge["acme-everything", "Gtk2hsGenerics"], DirectedEdge["acme-everything", "gtk3-mac-integration"], DirectedEdge["acme-everything", "GtkGLTV"], DirectedEdge["acme-everything", "gtkrsync"], DirectedEdge["acme-everything", "guarded-rewriting"], DirectedEdge["acme-everything", "guess-combinator"], DirectedEdge["acme-everything", "GuiHaskell"], DirectedEdge["acme-everything", "GuiTV"], DirectedEdge["acme-everything", "gulcii"], DirectedEdge["acme-everything", "gutenberg-fibonaccis"], DirectedEdge["acme-everything", "h-booru"], DirectedEdge["acme-everything", "h-gpgme"], DirectedEdge["acme-everything", "haar"], DirectedEdge["acme-everything", "hacanon-light"], DirectedEdge["acme-everything", "Hach"], DirectedEdge["acme-everything", "hack-contrib-press"], DirectedEdge["acme-everything", "hack-frontend-happstack"], DirectedEdge["acme-everything", "hack-frontend-monadcgi"], DirectedEdge["acme-everything", "hack-handler-epoll"], DirectedEdge["acme-everything", "hack-handler-evhttp"], DirectedEdge["acme-everything", "hack-handler-fastcgi"], DirectedEdge["acme-everything", "hack-handler-kibro"], DirectedEdge["acme-everything", "hack-handler-simpleserver"], DirectedEdge["acme-everything", "hack-middleware-cleanpath"], DirectedEdge["acme-everything", "hack-middleware-clientsession"], DirectedEdge["acme-everything", "hack-middleware-gzip"], DirectedEdge["acme-everything", "hack-middleware-jsonp"], DirectedEdge["acme-everything", "hack2-contrib-extra"], DirectedEdge["acme-everything", "hack2-handler-happstack-server"], DirectedEdge["acme-everything", "hack2-handler-mongrel2-http"], DirectedEdge["acme-everything", "hack2-handler-warp"], DirectedEdge["acme-everything", "hackage-diff"], DirectedEdge["acme-everything", "hackage-plot"], DirectedEdge["acme-everything", "hackage-proxy"], DirectedEdge["acme-everything", "hackage-server"], DirectedEdge["acme-everything", "hackage-sparks"], DirectedEdge["acme-everything", "hackage2hwn"], DirectedEdge["acme-everything", "hackage2twitter"], DirectedEdge["acme-everything", "hackager"], DirectedEdge["acme-everything", "hackernews"], DirectedEdge["acme-everything", "hackertyper"], DirectedEdge["acme-everything", "HackMail"], DirectedEdge["acme-everything", "hackport"], DirectedEdge["acme-everything", "hactor"], DirectedEdge["acme-everything", "hactors"], DirectedEdge["acme-everything", "haddock-leksah"], DirectedEdge["acme-everything", "haddocset"], DirectedEdge["acme-everything", "hadoop-formats"], DirectedEdge["acme-everything", "hadoop-tools"], DirectedEdge["acme-everything", "haeredes"], DirectedEdge["acme-everything", "haha"], DirectedEdge["acme-everything", "hailgun-send"], DirectedEdge["acme-everything", "hails-bin"], DirectedEdge["acme-everything", "hake"], DirectedEdge["acme-everything", "hakismet"], DirectedEdge["acme-everything", "hako"], DirectedEdge["acme-everything", "hakyll-agda"], DirectedEdge["acme-everything", "hakyll-blaze-templates"], DirectedEdge["acme-everything", "hakyll-contrib"], DirectedEdge["acme-everything", "hakyll-contrib-hyphenation"], DirectedEdge["acme-everything", "hakyll-contrib-links"], DirectedEdge["acme-everything", "hakyll-elm"], DirectedEdge["acme-everything", "halipeto"], DirectedEdge["acme-everything", "haltavista"], DirectedEdge["acme-everything", "HaMinitel"], DirectedEdge["acme-everything", "hampp"], DirectedEdge["acme-everything", "hamtmap"], DirectedEdge["acme-everything", "hamusic"], DirectedEdge["acme-everything", "HandlerSocketClient"], DirectedEdge["acme-everything", "handsy"], DirectedEdge["acme-everything", "hangman"], DirectedEdge["acme-everything", "hannahci"], DirectedEdge["acme-everything", "hans-pcap"], DirectedEdge["acme-everything", "hans-pfq"], DirectedEdge["acme-everything", "hapistrano"], DirectedEdge["acme-everything", "happindicator"], DirectedEdge["acme-everything", "happraise"], DirectedEdge["acme-everything", "happs-hsp"], DirectedEdge["acme-everything", "happs-hsp-template"], DirectedEdge["acme-everything", "happs-tutorial"], DirectedEdge["acme-everything", "HAppSHelpers"], DirectedEdge["acme-everything", "happstack-clientsession"], DirectedEdge["acme-everything", "happstack-contrib"], DirectedEdge["acme-everything", "happstack-dlg"], DirectedEdge["acme-everything", "happstack-facebook"], DirectedEdge["acme-everything", "happstack-fay"], DirectedEdge["acme-everything", "happstack-foundation"], DirectedEdge["acme-everything", "happstack-hamlet"], DirectedEdge["acme-everything", "happstack-heist"], DirectedEdge["acme-everything", "happstack-hstringtemplate"], DirectedEdge["acme-everything", "happstack-lite"], DirectedEdge["acme-everything", "happstack-monad-peel"], DirectedEdge["acme-everything", "happstack-plugins"], DirectedEdge["acme-everything", "happstack-static-routing"], DirectedEdge["acme-everything", "happstack-yui"], DirectedEdge["acme-everything", "happy"], DirectedEdge["acme-everything", "happybara-webkit"], DirectedEdge["acme-everything", "happybara-webkit-server"], DirectedEdge["acme-everything", "HaPy"], DirectedEdge["acme-everything", "har"], DirectedEdge["acme-everything", "harchive"], DirectedEdge["acme-everything", "hArduino"], DirectedEdge["acme-everything", "hark"], DirectedEdge["acme-everything", "HARM"], DirectedEdge["acme-everything", "HarmTrace"], DirectedEdge["acme-everything", "haroonga-httpd"], DirectedEdge["acme-everything", "has-th"], DirectedEdge["acme-everything", "hascal"], DirectedEdge["acme-everything", "hascat"], DirectedEdge["acme-everything", "Haschoo"], DirectedEdge["acme-everything", "HasGP"], DirectedEdge["acme-everything", "hash"], DirectedEdge["acme-everything", "hashable-generics"], DirectedEdge["acme-everything", "hashable-time"], DirectedEdge["acme-everything", "hashabler"], DirectedEdge["acme-everything", "Hashell"], DirectedEdge["acme-everything", "hashring"], DirectedEdge["acme-everything", "hashtables-plus"], DirectedEdge["acme-everything", "hasim"], DirectedEdge["acme-everything", "hask"], DirectedEdge["acme-everything", "hask-home"], DirectedEdge["acme-everything", "haskades"], DirectedEdge["acme-everything", "haskakafka"], DirectedEdge["acme-everything", "haskanoid"], DirectedEdge["acme-everything", "haskarrow"], DirectedEdge["acme-everything", "haskbot-core"], DirectedEdge["acme-everything", "haskdeep"], DirectedEdge["acme-everything", "haskdogs"], DirectedEdge["acme-everything", "haskeem"], DirectedEdge["acme-everything", "haskell-aliyun"], DirectedEdge["acme-everything", "haskell-bcrypt"], DirectedEdge["acme-everything", "haskell-cnc"], DirectedEdge["acme-everything", "haskell-compression"], DirectedEdge["acme-everything", "haskell-course-preludes"], DirectedEdge["acme-everything", "haskell-ftp"], DirectedEdge["acme-everything", "haskell-in-space"], DirectedEdge["acme-everything", "haskell-modbus"], DirectedEdge["acme-everything", "haskell-neo4j-client"], DirectedEdge["acme-everything", "haskell-openflow"], DirectedEdge["acme-everything", "haskell-pdf-presenter"], DirectedEdge["acme-everything", "haskell-platform-test"], DirectedEdge["acme-everything", "haskell-plot"], DirectedEdge["acme-everything", "haskell-reflect"], DirectedEdge["acme-everything", "haskell-rules"], DirectedEdge["acme-everything", "haskell-spacegoo"], DirectedEdge["acme-everything", "haskell-type-exts"], DirectedEdge["acme-everything", "haskell-typescript"], DirectedEdge["acme-everything", "haskell-tyrant"], DirectedEdge["acme-everything", "haskell-updater"], DirectedEdge["acme-everything", "haskell-xmpp"], DirectedEdge["acme-everything", "haskell98libraries"], DirectedEdge["acme-everything", "haskelldb-connect-hdbc-catchio-mtl"], DirectedEdge["acme-everything", "haskelldb-connect-hdbc-catchio-tf"], DirectedEdge["acme-everything", "haskelldb-connect-hdbc-catchio-transformers"], DirectedEdge["acme-everything", "haskelldb-connect-hdbc-lifted"], DirectedEdge["acme-everything", "haskelldb-dynamic"], DirectedEdge["acme-everything", "haskelldb-flat"], DirectedEdge["acme-everything", "haskelldb-hdbc-mysql"], DirectedEdge["acme-everything", "haskelldb-hdbc-postgresql"], DirectedEdge["acme-everything", "haskelldb-hsql-mysql"], DirectedEdge["acme-everything", "haskelldb-hsql-odbc"], DirectedEdge["acme-everything", "haskelldb-hsql-oracle"], DirectedEdge["acme-everything", "haskelldb-hsql-postgresql"], DirectedEdge["acme-everything", "haskelldb-hsql-sqlite"], DirectedEdge["acme-everything", "haskelldb-th"], DirectedEdge["acme-everything", "haskelldb-wx"], DirectedEdge["acme-everything", "HaskellLM"], DirectedEdge["acme-everything", "HaskellNet-SSL"], DirectedEdge["acme-everything", "HaskellNN"], DirectedEdge["acme-everything", "Haskelloids"], DirectedEdge["acme-everything", "haskellscrabble"], DirectedEdge["acme-everything", "HaskellTorrent"], DirectedEdge["acme-everything", "HaskellTutorials"], DirectedEdge["acme-everything", "haskelm"], DirectedEdge["acme-everything", "haskhol-core"], DirectedEdge["acme-everything", "haskmon"], DirectedEdge["acme-everything", "haskoin-wallet"], DirectedEdge["acme-everything", "haskoon-httpspec"], DirectedEdge["acme-everything", "haskoon-salvia"], DirectedEdge["acme-everything", "haskore-supercollider"], DirectedEdge["acme-everything", "haskore-synthesizer"], DirectedEdge["acme-everything", "haskore-vintage"], DirectedEdge["acme-everything", "hasloGUI"], DirectedEdge["acme-everything", "hasparql-client"], DirectedEdge["acme-everything", "haspell"], DirectedEdge["acme-everything", "hasql-postgres-options"], DirectedEdge["acme-everything", "hastache-aeson"], DirectedEdge["acme-everything", "haste"], DirectedEdge["acme-everything", "haste-markup"], DirectedEdge["acme-everything", "hat"], DirectedEdge["acme-everything", "hatex-guide"], DirectedEdge["acme-everything", "HaTeX-meta"], DirectedEdge["acme-everything", "HaTeX-qq"], DirectedEdge["acme-everything", "hath"], DirectedEdge["acme-everything", "HaVSA"], DirectedEdge["acme-everything", "hawitter"], DirectedEdge["acme-everything", "Hawk"], DirectedEdge["acme-everything", "haxl-facebook"], DirectedEdge["acme-everything", "haxr-th"], DirectedEdge["acme-everything", "haxy"], DirectedEdge["acme-everything", "Hayoo"], DirectedEdge["acme-everything", "hayoo-cli"], DirectedEdge["acme-everything", "hback"], DirectedEdge["acme-everything", "hbayes"], DirectedEdge["acme-everything", "hbb"], DirectedEdge["acme-everything", "hbcd"], DirectedEdge["acme-everything", "hBDD-CUDD"], DirectedEdge["acme-everything", "hbeanstalk"], DirectedEdge["acme-everything", "hbeat"], DirectedEdge["acme-everything", "hblas"], DirectedEdge["acme-everything", "hbro-contrib"], DirectedEdge["acme-everything", "hburg"], DirectedEdge["acme-everything", "HCard"], DirectedEdge["acme-everything", "hcc"], DirectedEdge["acme-everything", "hchesslib"], DirectedEdge["acme-everything", "hcltest"], DirectedEdge["acme-everything", "hcron"], DirectedEdge["acme-everything", "hCsound"], DirectedEdge["acme-everything", "hcube"], DirectedEdge["acme-everything", "hdaemonize-buildfix"], DirectedEdge["acme-everything", "hdbc-aeson"], DirectedEdge["acme-everything", "HDBC-postgresql-hstore"], DirectedEdge["acme-everything", "hdbc-postgresql-hstore"], DirectedEdge["acme-everything", "hdbc-tuple"], DirectedEdge["acme-everything", "hdbi-conduit"], DirectedEdge["acme-everything", "hdbi-postgresql"], DirectedEdge["acme-everything", "hdbi-sqlite"], DirectedEdge["acme-everything", "hdbi-tests"], DirectedEdge["acme-everything", "hdevtools"], DirectedEdge["acme-everything", "hdf"], DirectedEdge["acme-everything", "hDFA"], DirectedEdge["acme-everything", "hdigest"], DirectedEdge["acme-everything", "hdirect"], DirectedEdge["acme-everything", "hdiscount"], DirectedEdge["acme-everything", "hdm"], DirectedEdge["acme-everything", "hdph"], DirectedEdge["acme-everything", "HDRUtils"], DirectedEdge["acme-everything", "heapsort"], DirectedEdge["acme-everything", "hebrew-time"], DirectedEdge["acme-everything", "Hedi"], DirectedEdge["acme-everything", "hedis-config"], DirectedEdge["acme-everything", "hedis-monadic"], DirectedEdge["acme-everything", "hedis-simple"], DirectedEdge["acme-everything", "hedn"], DirectedEdge["acme-everything", "heist-aeson"], DirectedEdge["acme-everything", "heist-async"], DirectedEdge["acme-everything", "helisp"], DirectedEdge["acme-everything", "helium"], DirectedEdge["acme-everything", "hellage"], DirectedEdge["acme-everything", "hello"], DirectedEdge["acme-everything", "helm"], DirectedEdge["acme-everything", "help-esb"], DirectedEdge["acme-everything", "hemkay"], DirectedEdge["acme-everything", "hen"], DirectedEdge["acme-everything", "henet"], DirectedEdge["acme-everything", "hepevt"], DirectedEdge["acme-everything", "her-lexer-parsec"], DirectedEdge["acme-everything", "HERA"], DirectedEdge["acme-everything", "herbalizer"], DirectedEdge["acme-everything", "Hermes"], DirectedEdge["acme-everything", "hermit-syb"], DirectedEdge["acme-everything", "heroku-persistent"], DirectedEdge["acme-everything", "herringbone-embed"], DirectedEdge["acme-everything", "herringbone-wai"], DirectedEdge["acme-everything", "hesql"], DirectedEdge["acme-everything", "hetero-map"], DirectedEdge["acme-everything", "hetris"], DirectedEdge["acme-everything", "heukarya"], DirectedEdge["acme-everything", "hevolisa"], DirectedEdge["acme-everything", "hevolisa-dph"], DirectedEdge["acme-everything", "hexdump"], DirectedEdge["acme-everything", "hexif"], DirectedEdge["acme-everything", "hexpat-iteratee"], DirectedEdge["acme-everything", "hexpat-lens"], DirectedEdge["acme-everything", "hexpat-pickle-generic"], DirectedEdge["acme-everything", "hexquote"], DirectedEdge["acme-everything", "hfann"], DirectedEdge["acme-everything", "hfd"], DirectedEdge["acme-everything", "hfiar"], DirectedEdge["acme-everything", "hfractal"], DirectedEdge["acme-everything", "hfsevents"], DirectedEdge["acme-everything", "hfusion"], DirectedEdge["acme-everything", "hg-buildpackage"], DirectedEdge["acme-everything", "hgal"], DirectedEdge["acme-everything", "hgalib"], DirectedEdge["acme-everything", "HGamer3D-API"], DirectedEdge["acme-everything", "HGamer3D-Bullet-Binding"], DirectedEdge["acme-everything", "HGamer3D-CAudio-Binding"], DirectedEdge["acme-everything", "HGamer3D-OIS-Binding"], DirectedEdge["acme-everything", "HGamer3D-Wire"], DirectedEdge["acme-everything", "hgdbmi"], DirectedEdge["acme-everything", "hGelf"], DirectedEdge["acme-everything", "hgen"], DirectedEdge["acme-everything", "hgeometric"], DirectedEdge["acme-everything", "hgl-example"], DirectedEdge["acme-everything", "hgom"], DirectedEdge["acme-everything", "hgopher"], DirectedEdge["acme-everything", "HGraphStorage"], DirectedEdge["acme-everything", "hharp"], DirectedEdge["acme-everything", "HHDL"], DirectedEdge["acme-everything", "hi"], DirectedEdge["acme-everything", "hiccup"], DirectedEdge["acme-everything", "hichi"], DirectedEdge["acme-everything", "hieraclus"], DirectedEdge["acme-everything", "hierarchical-clustering-diagrams"], DirectedEdge["acme-everything", "hierarchical-exceptions"], DirectedEdge["acme-everything", "hiernotify"], DirectedEdge["acme-everything", "Hieroglyph"], DirectedEdge["acme-everything", "HiggsSet"], DirectedEdge["acme-everything", "higher-leveldb"], DirectedEdge["acme-everything", "highlight-versions"], DirectedEdge["acme-everything", "highWaterMark"], DirectedEdge["acme-everything", "hills"], DirectedEdge["acme-everything", "himerge"], DirectedEdge["acme-everything", "himg"], DirectedEdge["acme-everything", "himpy"], DirectedEdge["acme-everything", "hinduce-examples"], DirectedEdge["acme-everything", "hinquire"], DirectedEdge["acme-everything", "hinvaders"], DirectedEdge["acme-everything", "hinze-streams"], DirectedEdge["acme-everything", "hipbot"], DirectedEdge["acme-everything", "hipe"], DirectedEdge["acme-everything", "HipmunkPlayground"], DirectedEdge["acme-everything", "hips"], DirectedEdge["acme-everything", "hircules"], DirectedEdge["acme-everything", "hirt"], DirectedEdge["acme-everything", "hissmetrics"], DirectedEdge["acme-everything", "hist-pl"], DirectedEdge["acme-everything", "Histogram"], DirectedEdge["acme-everything", "histogram-fill-binary"], DirectedEdge["acme-everything", "histogram-fill-cereal"], DirectedEdge["acme-everything", "historian"], DirectedEdge["acme-everything", "hit"], DirectedEdge["acme-everything", "hjcase"], DirectedEdge["acme-everything", "hjs"], DirectedEdge["acme-everything", "hjson-query"], DirectedEdge["acme-everything", "hjsonschema"], DirectedEdge["acme-everything", "HJVM"], DirectedEdge["acme-everything", "hlatex"], DirectedEdge["acme-everything", "hlcm"], DirectedEdge["acme-everything", "HLearn-approximation"], DirectedEdge["acme-everything", "HLearn-classification"], DirectedEdge["acme-everything", "hledger-chart"], DirectedEdge["acme-everything", "hledger-diff"], DirectedEdge["acme-everything", "hledger-interest"], DirectedEdge["acme-everything", "hledger-irr"], DirectedEdge["acme-everything", "hledger-vty"], DirectedEdge["acme-everything", "hlibBladeRF"], DirectedEdge["acme-everything", "hlibev"], DirectedEdge["acme-everything", "hlibfam"], DirectedEdge["acme-everything", "HListPP"], DirectedEdge["acme-everything", "hLLVM"], DirectedEdge["acme-everything", "hlongurl"], DirectedEdge["acme-everything", "hly"], DirectedEdge["acme-everything", "HMap"], DirectedEdge["acme-everything", "hmark"], DirectedEdge["acme-everything", "hmatrix-banded"], DirectedEdge["acme-everything", "hmatrix-csv"], DirectedEdge["acme-everything", "hmatrix-glpk"], DirectedEdge["acme-everything", "hmatrix-mmap"], DirectedEdge["acme-everything", "hmatrix-nipals"], DirectedEdge["acme-everything", "hmatrix-quadprogpp"], DirectedEdge["acme-everything", "hmatrix-repa"], DirectedEdge["acme-everything", "hmatrix-static"], DirectedEdge["acme-everything", "hmatrix-svdlibc"], DirectedEdge["acme-everything", "hmatrix-syntax"], DirectedEdge["acme-everything", "hmatrix-tests"], DirectedEdge["acme-everything", "hmeap-utils"], DirectedEdge["acme-everything", "hmemdb"], DirectedEdge["acme-everything", "HMM"], DirectedEdge["acme-everything", "hmm"], DirectedEdge["acme-everything", "hmm-hmatrix"], DirectedEdge["acme-everything", "hMollom"], DirectedEdge["acme-everything", "Hmpf"], DirectedEdge["acme-everything", "hmt-diagrams"], DirectedEdge["acme-everything", "hmumps"], DirectedEdge["acme-everything", "HNM"], DirectedEdge["acme-everything", "hnn"], DirectedEdge["acme-everything", "hnop"], DirectedEdge["acme-everything", "hobbes"], DirectedEdge["acme-everything", "hobbits"], DirectedEdge["acme-everything", "HODE"], DirectedEdge["acme-everything", "hoe"], DirectedEdge["acme-everything", "Hoed"], DirectedEdge["acme-everything", "hofix-mtl"], DirectedEdge["acme-everything", "hog"], DirectedEdge["acme-everything", "hogg"], DirectedEdge["acme-everything", "hogre-examples"], DirectedEdge["acme-everything", "hold-em"], DirectedEdge["acme-everything", "hole"], DirectedEdge["acme-everything", "holey-format"], DirectedEdge["acme-everything", "HoleyMonoid"], DirectedEdge["acme-everything", "Holumbus-MapReduce"], DirectedEdge["acme-everything", "hommage-ds"], DirectedEdge["acme-everything", "Homology"], DirectedEdge["acme-everything", "HongoDB"], DirectedEdge["acme-everything", "honi"], DirectedEdge["acme-everything", "honk"], DirectedEdge["acme-everything", "hoobuddy"], DirectedEdge["acme-everything", "hood"], DirectedEdge["acme-everything", "hood-off"], DirectedEdge["acme-everything", "hoodie"], DirectedEdge["acme-everything", "hoodle-extra"], DirectedEdge["acme-everything", "hoogle-index"], DirectedEdge["acme-everything", "hooks-dir"], DirectedEdge["acme-everything", "hoovie"], DirectedEdge["acme-everything", "hopencc"], DirectedEdge["acme-everything", "hopencl"], DirectedEdge["acme-everything", "hopenpgp-tools"], DirectedEdge["acme-everything", "hoq"], DirectedEdge["acme-everything", "horizon"], DirectedEdge["acme-everything", "hosc-utils"], DirectedEdge["acme-everything", "HostAndPort"], DirectedEdge["acme-everything", "hostname-validate"], DirectedEdge["acme-everything", "hosts-server"], DirectedEdge["acme-everything", "hothasktags"], DirectedEdge["acme-everything", "hotswap"], DirectedEdge["acme-everything", "hp2any-manager"], DirectedEdge["acme-everything", "hp2html"], DirectedEdge["acme-everything", "hp2pretty"], DirectedEdge["acme-everything", "hpack"], DirectedEdge["acme-everything", "hpaco"], DirectedEdge["acme-everything", "hpage"], DirectedEdge["acme-everything", "hpapi"], DirectedEdge["acme-everything", "hpaste"], DirectedEdge["acme-everything", "hpasteit"], DirectedEdge["acme-everything", "HPath"], DirectedEdge["acme-everything", "hpc-coveralls"], DirectedEdge["acme-everything", "hpc-strobe"], DirectedEdge["acme-everything", "hpc-tracer"], DirectedEdge["acme-everything", "hPDB-examples"], DirectedEdge["acme-everything", "HPi"], DirectedEdge["acme-everything", "hplayground"], DirectedEdge["acme-everything", "hplaylist"], DirectedEdge["acme-everything", "HPlot"], DirectedEdge["acme-everything", "hpodder"], DirectedEdge["acme-everything", "HPong"], DirectedEdge["acme-everything", "hprotoc"], DirectedEdge["acme-everything", "hprotoc-fork"], DirectedEdge["acme-everything", "hps-kmeans"], DirectedEdge["acme-everything", "hPushover"], DirectedEdge["acme-everything", "hpuz"], DirectedEdge["acme-everything", "hpygments"], DirectedEdge["acme-everything", "hpylos"], DirectedEdge["acme-everything", "hpyrg"], DirectedEdge["acme-everything", "hquantlib"], DirectedEdge["acme-everything", "hR"], DirectedEdge["acme-everything", "hranker"], DirectedEdge["acme-everything", "HRay"], DirectedEdge["acme-everything", "hRESP"], DirectedEdge["acme-everything", "Hricket"], DirectedEdge["acme-everything", "hricket"], DirectedEdge["acme-everything", "HROOT"], DirectedEdge["acme-everything", "hs-captcha"], DirectedEdge["acme-everything", "hs-carbon-examples"], DirectedEdge["acme-everything", "hs-cdb"], DirectedEdge["acme-everything", "hs-dotnet"], DirectedEdge["acme-everything", "hs-excelx"], DirectedEdge["acme-everything", "hs-fltk"], DirectedEdge["acme-everything", "hs-gen-iface"], DirectedEdge["acme-everything", "hs-GeoIP"], DirectedEdge["acme-everything", "hs-gizapp"], DirectedEdge["acme-everything", "hs-inspector"], DirectedEdge["acme-everything", "hs-java"], DirectedEdge["acme-everything", "hs-json-rpc"], DirectedEdge["acme-everything", "hs-logo"], DirectedEdge["acme-everything", "hs-nombre-generator"], DirectedEdge["acme-everything", "hs-pgms"], DirectedEdge["acme-everything", "hs-php-session"], DirectedEdge["acme-everything", "hs-pkg-config"], DirectedEdge["acme-everything", "hs-pkpass"], DirectedEdge["acme-everything", "hs-re"], DirectedEdge["acme-everything", "hs-scrape"], DirectedEdge["acme-everything", "hs-twitterarchiver"], DirectedEdge["acme-everything", "hs-vcard"], DirectedEdge["acme-everything", "hs2bf"], DirectedEdge["acme-everything", "hs2dot"], DirectedEdge["acme-everything", "Hs2lib"], DirectedEdge["acme-everything", "HsASA"], DirectedEdge["acme-everything", "hsass"], DirectedEdge["acme-everything", "hsay"], DirectedEdge["acme-everything", "hsb2hs"], DirectedEdge["acme-everything", "hsbackup"], DirectedEdge["acme-everything", "hsbencher-codespeed"], DirectedEdge["acme-everything", "hsc2hs"], DirectedEdge["acme-everything", "hsc3-auditor"], DirectedEdge["acme-everything", "hsc3-data"], DirectedEdge["acme-everything", "hsc3-forth"], DirectedEdge["acme-everything", "hsc3-lisp"], DirectedEdge["acme-everything", "hsc3-rec"], DirectedEdge["acme-everything", "hscamwire"], DirectedEdge["acme-everything", "hscassandra"], DirectedEdge["acme-everything", "hscd"], DirectedEdge["acme-everything", "hsclock"], DirectedEdge["acme-everything", "hscope"], DirectedEdge["acme-everything", "hscrtmpl"], DirectedEdge["acme-everything", "hscurses-fish-ex"], DirectedEdge["acme-everything", "hsdif"], DirectedEdge["acme-everything", "hsdip"], DirectedEdge["acme-everything", "hsdns-cache"], DirectedEdge["acme-everything", "hsebaysdk"], DirectedEdge["acme-everything", "Hsed"], DirectedEdge["acme-everything", "hsemail-ns"], DirectedEdge["acme-everything", "hsenv"], DirectedEdge["acme-everything", "hserv"], DirectedEdge["acme-everything", "hsexif"], DirectedEdge["acme-everything", "hsfcsh"], DirectedEdge["acme-everything", "hsfilt"], DirectedEdge["acme-everything", "HSGEP"], DirectedEdge["acme-everything", "hsgnutls-yj"], DirectedEdge["acme-everything", "hsgsom"], DirectedEdge["acme-everything", "hsgtd"], DirectedEdge["acme-everything", "HsHaruPDF"], DirectedEdge["acme-everything", "HSHHelpers"], DirectedEdge["acme-everything", "HsHyperEstraier"], DirectedEdge["acme-everything", "hsignal"], DirectedEdge["acme-everything", "hsilop"], DirectedEdge["acme-everything", "hSimpleDB"], DirectedEdge["acme-everything", "HsJudy"], DirectedEdge["acme-everything", "hslackbuilder"], DirectedEdge["acme-everything", "hslibsvm"], DirectedEdge["acme-everything", "hslinks"], DirectedEdge["acme-everything", "HSlippyMap"], DirectedEdge["acme-everything", "hslogger4j"], DirectedEdge["acme-everything", "hslogstash"], DirectedEdge["acme-everything", "HSmarty"], DirectedEdge["acme-everything", "hsmisc"], DirectedEdge["acme-everything", "Hsmtlib"], DirectedEdge["acme-everything", "hsmtpclient"], DirectedEdge["acme-everything", "hsndfile-storablevector"], DirectedEdge["acme-everything", "hsnock"], DirectedEdge["acme-everything", "hsnoise"], DirectedEdge["acme-everything", "hsns"], DirectedEdge["acme-everything", "hsnsq"], DirectedEdge["acme-everything", "hsntp"], DirectedEdge["acme-everything", "HsOpenSSL-x509-system"], DirectedEdge["acme-everything", "HSoundFile"], DirectedEdge["acme-everything", "hsp-cgi"], DirectedEdge["acme-everything", "hspear"], DirectedEdge["acme-everything", "hspec-attoparsec"], DirectedEdge["acme-everything", "hspec-checkers"], DirectedEdge["acme-everything", "hspec-expectations-lens"], DirectedEdge["acme-everything", "hspec-expectations-lifted"], DirectedEdge["acme-everything", "hspec-expectations-pretty"], DirectedEdge["acme-everything", "hspec-experimental"], DirectedEdge["acme-everything", "hspec-jenkins"], DirectedEdge["acme-everything", "hspec-laws"], DirectedEdge["acme-everything", "hspec-meta"], DirectedEdge["acme-everything", "hspec-server"], DirectedEdge["acme-everything", "hspec-shouldbe"], DirectedEdge["acme-everything", "hspec-smallcheck"], DirectedEdge["acme-everything", "hspec-snap"], DirectedEdge["acme-everything", "hspec-test-framework-th"], DirectedEdge["acme-everything", "hspec-test-sandbox"], DirectedEdge["acme-everything", "hspec-wai-json"], DirectedEdge["acme-everything", "hspec-webdriver"], DirectedEdge["acme-everything", "hspr-sh"], DirectedEdge["acme-everything", "hspresent"], DirectedEdge["acme-everything", "hsprocess"], DirectedEdge["acme-everything", "hsqml-demo-morris"], DirectedEdge["acme-everything", "hsqml-demo-notes"], DirectedEdge["acme-everything", "hsqml-demo-samples"], DirectedEdge["acme-everything", "hsqml-morris"], DirectedEdge["acme-everything", "hsreadability"], DirectedEdge["acme-everything", "hsshellscript"], DirectedEdge["acme-everything", "hssourceinfo"], DirectedEdge["acme-everything", "HsSVN"], DirectedEdge["acme-everything", "hstest"], DirectedEdge["acme-everything", "hstidy"], DirectedEdge["acme-everything", "hstyle"], DirectedEdge["acme-everything", "hstzaar"], DirectedEdge["acme-everything", "hsubconvert"], DirectedEdge["acme-everything", "hsverilog"], DirectedEdge["acme-everything", "HSvm"], DirectedEdge["acme-everything", "hswip"], DirectedEdge["acme-everything", "hsx-xhtml"], DirectedEdge["acme-everything", "hsXenCtrl"], DirectedEdge["acme-everything", "hsyscall"], DirectedEdge["acme-everything", "hszephyr"], DirectedEdge["acme-everything", "HTab"], DirectedEdge["acme-everything", "htags"], DirectedEdge["acme-everything", "hTalos"], DirectedEdge["acme-everything", "htar"], DirectedEdge["acme-everything", "hTensor"], DirectedEdge["acme-everything", "HTicTacToe"], DirectedEdge["acme-everything", "htiled"], DirectedEdge["acme-everything", "htime"], DirectedEdge["acme-everything", "html-email-validate"], DirectedEdge["acme-everything", "html-kure"], DirectedEdge["acme-everything", "html-rules"], DirectedEdge["acme-everything", "html2hamlet"], DirectedEdge["acme-everything", "html5-entity"], DirectedEdge["acme-everything", "htodo"], DirectedEdge["acme-everything", "hts"], DirectedEdge["acme-everything", "htsn"], DirectedEdge["acme-everything", "htsn-import"], DirectedEdge["acme-everything", "http-attoparsec"], DirectedEdge["acme-everything", "http-client-auth"], DirectedEdge["acme-everything", "http-client-lens"], DirectedEdge["acme-everything", "http-client-request-modifiers"], DirectedEdge["acme-everything", "http-client-streams"], DirectedEdge["acme-everything", "http-conduit-browser"], DirectedEdge["acme-everything", "http-link-header"], DirectedEdge["acme-everything", "http-monad"], DirectedEdge["acme-everything", "http-proxy"], DirectedEdge["acme-everything", "http-querystring"], DirectedEdge["acme-everything", "http-shed"], DirectedEdge["acme-everything", "http-wget"], DirectedEdge["acme-everything", "https-everywhere-rules"], DirectedEdge["acme-everything", "htune"], DirectedEdge["acme-everything", "htzaar"], DirectedEdge["acme-everything", "hub"], DirectedEdge["acme-everything", "hubris"], DirectedEdge["acme-everything", "HueAPI"], DirectedEdge["acme-everything", "huffman"], DirectedEdge["acme-everything", "hugs2yc"], DirectedEdge["acme-everything", "hulk"], DirectedEdge["acme-everything", "hums"], DirectedEdge["acme-everything", "Hungarian-Munkres"], DirectedEdge["acme-everything", "HUnit-approx"], DirectedEdge["acme-everything", "HUnit-Diff"], DirectedEdge["acme-everything", "hunit-gui"], DirectedEdge["acme-everything", "hunit-parsec"], DirectedEdge["acme-everything", "HUnit-Plus"], DirectedEdge["acme-everything", "hunit-rematch"], DirectedEdge["acme-everything", "hunp"], DirectedEdge["acme-everything", "hunt-server"], DirectedEdge["acme-everything", "hunt-server-cli"], DirectedEdge["acme-everything", "hurdle"], DirectedEdge["acme-everything", "husk-scheme-libs"], DirectedEdge["acme-everything", "husky"], DirectedEdge["acme-everything", "hutton"], DirectedEdge["acme-everything", "huzzy"], DirectedEdge["acme-everything", "hvect"], DirectedEdge["acme-everything", "hVOIDP"], DirectedEdge["acme-everything", "hwall-auth-iitk"], DirectedEdge["acme-everything", "hweblib"], DirectedEdge["acme-everything", "hws"], DirectedEdge["acme-everything", "hXmixer"], DirectedEdge["acme-everything", "HXMPP"], DirectedEdge["acme-everything", "hxmppc"], DirectedEdge["acme-everything", "HXQ"], DirectedEdge["acme-everything", "hxt-binary"], DirectedEdge["acme-everything", "hxt-css"], DirectedEdge["acme-everything", "hxt-extras"], DirectedEdge["acme-everything", "hxt-xslt"], DirectedEdge["acme-everything", "hxweb"], DirectedEdge["acme-everything", "hyahtzee"], DirectedEdge["acme-everything", "hyakko"], DirectedEdge["acme-everything", "hybrid"], DirectedEdge["acme-everything", "hydra-hs"], DirectedEdge["acme-everything", "hydra-print"], DirectedEdge["acme-everything", "hydrogen"], DirectedEdge["acme-everything", "hydrogen-cli"], DirectedEdge["acme-everything", "hydrogen-prelude-parsec"], DirectedEdge["acme-everything", "hydrogen-util"], DirectedEdge["acme-everything", "hylotab"], DirectedEdge["acme-everything", "hyloutils"], DirectedEdge["acme-everything", "hyperdrive"], DirectedEdge["acme-everything", "hyperloglog"], DirectedEdge["acme-everything", "hyperpublic"], DirectedEdge["acme-everything", "hyphenate"], DirectedEdge["acme-everything", "hypher"], DirectedEdge["acme-everything", "hzulip"], DirectedEdge["acme-everything", "i18n"], DirectedEdge["acme-everything", "iban"], DirectedEdge["acme-everything", "iCalendar"], DirectedEdge["acme-everything", "IcoGrid"], DirectedEdge["acme-everything", "ide-backend-rts"], DirectedEdge["acme-everything", "ide-backend-server"], DirectedEdge["acme-everything", "ideas-math"], DirectedEdge["acme-everything", "idempotent"], DirectedEdge["acme-everything", "identifiers"], DirectedEdge["acme-everything", "IDynamic"], DirectedEdge["acme-everything", "ieee-utils-tempfix"], DirectedEdge["acme-everything", "ieee754-parser"], DirectedEdge["acme-everything", "iException"], DirectedEdge["acme-everything", "iff"], DirectedEdge["acme-everything", "IFS"], DirectedEdge["acme-everything", "ig"], DirectedEdge["acme-everything", "ige-mac-integration"], DirectedEdge["acme-everything", "igraph"], DirectedEdge["acme-everything", "igrf"], DirectedEdge["acme-everything", "ihaskell-aeson"], DirectedEdge["acme-everything", "ihaskell-basic"], DirectedEdge["acme-everything", "ihaskell-charts"], DirectedEdge["acme-everything", "ihaskell-diagrams"], DirectedEdge["acme-everything", "ihaskell-display"], DirectedEdge["acme-everything", "ihaskell-hatex"], DirectedEdge["acme-everything", "ihaskell-juicypixels"], DirectedEdge["acme-everything", "ihaskell-magic"], DirectedEdge["acme-everything", "ihaskell-parsec"], DirectedEdge["acme-everything", "ihaskell-rlangqq"], DirectedEdge["acme-everything", "ihttp"], DirectedEdge["acme-everything", "illuminate"], DirectedEdge["acme-everything", "image-type"], DirectedEdge["acme-everything", "imagefilters"], DirectedEdge["acme-everything", "imagemagick"], DirectedEdge["acme-everything", "imagepaste"], DirectedEdge["acme-everything", "imapget"], DirectedEdge["acme-everything", "imbib"], DirectedEdge["acme-everything", "imgurder"], DirectedEdge["acme-everything", "immortal"], DirectedEdge["acme-everything", "imparse"], DirectedEdge["acme-everything", "ImperativeHaskell"], DirectedEdge["acme-everything", "implicit"], DirectedEdge["acme-everything", "imports"], DirectedEdge["acme-everything", "improve"], DirectedEdge["acme-everything", "INblobs"], DirectedEdge["acme-everything", "inc-ref"], DirectedEdge["acme-everything", "inch"], DirectedEdge["acme-everything", "include-file"], DirectedEdge["acme-everything", "incremental-computing"], DirectedEdge["acme-everything", "increments"], DirectedEdge["acme-everything", "indentation"], DirectedEdge["acme-everything", "indentparser"], DirectedEdge["acme-everything", "index-core"], DirectedEdge["acme-everything", "indexed-do-notation"], DirectedEdge["acme-everything", "indian-language-font-converter"], DirectedEdge["acme-everything", "indices"], DirectedEdge["acme-everything", "infer-upstream"], DirectedEdge["acme-everything", "infinite-search"], DirectedEdge["acme-everything", "infinity"], DirectedEdge["acme-everything", "infix"], DirectedEdge["acme-everything", "inflist"], DirectedEdge["acme-everything", "informative"], DirectedEdge["acme-everything", "inject-function"], DirectedEdge["acme-everything", "inquire"], DirectedEdge["acme-everything", "inserts"], DirectedEdge["acme-everything", "inspection-proxy"], DirectedEdge["acme-everything", "instant-zipper"], DirectedEdge["acme-everything", "instinct"], DirectedEdge["acme-everything", "instrument-chord"], DirectedEdge["acme-everything", "int-cast"], DirectedEdge["acme-everything", "integer-pure"], DirectedEdge["acme-everything", "intel-aes"], DirectedEdge["acme-everything", "interchangeable"], DirectedEdge["acme-everything", "interleavableGen"], DirectedEdge["acme-everything", "interleave"], DirectedEdge["acme-everything", "interlude"], DirectedEdge["acme-everything", "internetmarke"], DirectedEdge["acme-everything", "interpol"], DirectedEdge["acme-everything", "interpolate"], DirectedEdge["acme-everything", "interpolatedstring-qq"], DirectedEdge["acme-everything", "interpolatedstring-qq-mwotton"], DirectedEdge["acme-everything", "Interpolation"], DirectedEdge["acme-everything", "interpolation"], DirectedEdge["acme-everything", "Interpolation-maxs"], DirectedEdge["acme-everything", "intricacy"], DirectedEdge["acme-everything", "io-capture"], DirectedEdge["acme-everything", "io-memoize"], DirectedEdge["acme-everything", "io-region"], DirectedEdge["acme-everything", "io-streams-http"], DirectedEdge["acme-everything", "io-throttle"], DirectedEdge["acme-everything", "IOR"], DirectedEdge["acme-everything", "IORefCAS"], DirectedEdge["acme-everything", "iothread"], DirectedEdge["acme-everything", "iotransaction"], DirectedEdge["acme-everything", "ip6addr"], DirectedEdge["acme-everything", "ipatch"], DirectedEdge["acme-everything", "ipc"], DirectedEdge["acme-everything", "ipcvar"], DirectedEdge["acme-everything", "iptadmin"], DirectedEdge["acme-everything", "Irc"], DirectedEdge["acme-everything", "irc-bytestring"], DirectedEdge["acme-everything", "irc-client"], DirectedEdge["acme-everything", "irc-colors"], DirectedEdge["acme-everything", "ircbouncer"], DirectedEdge["acme-everything", "ireal"], DirectedEdge["acme-everything", "iron-mq"], DirectedEdge["acme-everything", "IrrHaskell"], DirectedEdge["acme-everything", "is"], DirectedEdge["acme-everything", "isdicom"], DirectedEdge["acme-everything", "isiz"], DirectedEdge["acme-everything", "islink"], DirectedEdge["acme-everything", "ismtp"], DirectedEdge["acme-everything", "IsNull"], DirectedEdge["acme-everything", "iso8583-bitmaps"], DirectedEdge["acme-everything", "isohunt"], DirectedEdge["acme-everything", "iter-stats"], DirectedEdge["acme-everything", "iteratee-mtl"], DirectedEdge["acme-everything", "iteratee-parsec"], DirectedEdge["acme-everything", "iteratee-stm"], DirectedEdge["acme-everything", "ivar-simple"], DirectedEdge["acme-everything", "ivor"], DirectedEdge["acme-everything", "ivory-examples"], DirectedEdge["acme-everything", "ivory-hw"], DirectedEdge["acme-everything", "ivy-web"], DirectedEdge["acme-everything", "ixdopp"], DirectedEdge["acme-everything", "ixmonad"], DirectedEdge["acme-everything", "ixset-typed"], DirectedEdge["acme-everything", "iyql"], DirectedEdge["acme-everything", "j2hs"], DirectedEdge["acme-everything", "jack"], DirectedEdge["acme-everything", "jack-bindings"], DirectedEdge["acme-everything", "JackMiniMix"], DirectedEdge["acme-everything", "jackminimix"], DirectedEdge["acme-everything", "jail"], DirectedEdge["acme-everything", "jailbreak-cabal"], DirectedEdge["acme-everything", "jalaali"], DirectedEdge["acme-everything", "jalla"], DirectedEdge["acme-everything", "jarfind"], DirectedEdge["acme-everything", "java-character"], DirectedEdge["acme-everything", "Javasf"], DirectedEdge["acme-everything", "javasf"], DirectedEdge["acme-everything", "Javav"], DirectedEdge["acme-everything", "javav"], DirectedEdge["acme-everything", "jcdecaux-vls"], DirectedEdge["acme-everything", "jmacro-rpc-happstack"], DirectedEdge["acme-everything", "jmacro-rpc-snap"], DirectedEdge["acme-everything", "jobqueue"], DirectedEdge["acme-everything", "join"], DirectedEdge["acme-everything", "joinlist"], DirectedEdge["acme-everything", "jonathanscard"], DirectedEdge["acme-everything", "jort"], DirectedEdge["acme-everything", "jose-jwt"], DirectedEdge["acme-everything", "jpeg"], DirectedEdge["acme-everything", "js-good-parts"], DirectedEdge["acme-everything", "jsaddle-hello"], DirectedEdge["acme-everything", "jsc"], DirectedEdge["acme-everything", "JsContracts"], DirectedEdge["acme-everything", "jsmw"], DirectedEdge["acme-everything", "json-assertions"], DirectedEdge["acme-everything", "json-autotype"], DirectedEdge["acme-everything", "JSON-Combinator-Examples"], DirectedEdge["acme-everything", "json-enumerator"], DirectedEdge["acme-everything", "json-extra"], DirectedEdge["acme-everything", "json-fu"], DirectedEdge["acme-everything", "json-python"], DirectedEdge["acme-everything", "json-rpc-client"], DirectedEdge["acme-everything", "json-sop"], DirectedEdge["acme-everything", "json-stream"], DirectedEdge["acme-everything", "json-tools"], DirectedEdge["acme-everything", "json2-hdbc"], DirectedEdge["acme-everything", "json2yaml"], DirectedEdge["acme-everything", "JsonGrammar"], DirectedEdge["acme-everything", "jsonresume"], DirectedEdge["acme-everything", "jsonrpc-conduit"], DirectedEdge["acme-everything", "jsonschema-gen"], DirectedEdge["acme-everything", "jsonsql"], DirectedEdge["acme-everything", "jsontsv"], DirectedEdge["acme-everything", "jspath"], DirectedEdge["acme-everything", "judy"], DirectedEdge["acme-everything", "JuicyPixels-canvas"], DirectedEdge["acme-everything", "jumpthefive"], DirectedEdge["acme-everything", "JunkDB-driver-gdbm"], DirectedEdge["acme-everything", "JunkDB-driver-hashtables"], DirectedEdge["acme-everything", "JustParse"], DirectedEdge["acme-everything", "jvm-parser"], DirectedEdge["acme-everything", "JYU-Utils"], DirectedEdge["acme-everything", "kafka-client"], DirectedEdge["acme-everything", "Kalman"], DirectedEdge["acme-everything", "kansas-lava-papilio"], DirectedEdge["acme-everything", "kansas-lava-shake"], DirectedEdge["acme-everything", "karakuri"], DirectedEdge["acme-everything", "karver"], DirectedEdge["acme-everything", "kbq-gu"], DirectedEdge["acme-everything", "kd-tree"], DirectedEdge["acme-everything", "kdesrc-build-extra"], DirectedEdge["acme-everything", "kdt"], DirectedEdge["acme-everything", "KdTree"], DirectedEdge["acme-everything", "keiretsu"], DirectedEdge["acme-everything", "Ketchup"], DirectedEdge["acme-everything", "kevin"], DirectedEdge["acme-everything", "keycode"], DirectedEdge["acme-everything", "keyvaluehash"], DirectedEdge["acme-everything", "kicad-data"], DirectedEdge["acme-everything", "kickass-torrents-dump-parser"], DirectedEdge["acme-everything", "kickchan"], DirectedEdge["acme-everything", "KiCS-debugger"], DirectedEdge["acme-everything", "kif-parser"], DirectedEdge["acme-everything", "kit"], DirectedEdge["acme-everything", "kmeans"], DirectedEdge["acme-everything", "kmeans-par"], DirectedEdge["acme-everything", "KMP"], DirectedEdge["acme-everything", "koellner-phonetic"], DirectedEdge["acme-everything", "Konf"], DirectedEdge["acme-everything", "kontrakcja-templates"], DirectedEdge["acme-everything", "koofr-client"], DirectedEdge["acme-everything", "korfu"], DirectedEdge["acme-everything", "kqueue"], DirectedEdge["acme-everything", "ks-test"], DirectedEdge["acme-everything", "kure-your-boilerplate"], DirectedEdge["acme-everything", "KyotoCabinet"], DirectedEdge["acme-everything", "kyotocabinet"], DirectedEdge["acme-everything", "l-bfgs-b"], DirectedEdge["acme-everything", "L-seed"], DirectedEdge["acme-everything", "labeled-graph"], DirectedEdge["acme-everything", "labyrinth-server"], DirectedEdge["acme-everything", "laika"], DirectedEdge["acme-everything", "lambda-bridge"], DirectedEdge["acme-everything", "lambda-canvas"], DirectedEdge["acme-everything", "lambda-placeholders"], DirectedEdge["acme-everything", "lambda-toolbox"], DirectedEdge["acme-everything", "lambda2js"], DirectedEdge["acme-everything", "lambdabot"], DirectedEdge["acme-everything", "lambdabot-utils"], DirectedEdge["acme-everything", "LambdaCalculator"], DirectedEdge["acme-everything", "lambdacat"], DirectedEdge["acme-everything", "lambdacms-media"], DirectedEdge["acme-everything", "lambdacube"], DirectedEdge["acme-everything", "lambdacube-examples"], DirectedEdge["acme-everything", "lambdacube-samples"], DirectedEdge["acme-everything", "lambdaFeed"], DirectedEdge["acme-everything", "LambdaINet"], DirectedEdge["acme-everything", "lambdaLit"], DirectedEdge["acme-everything", "LambdaNet"], DirectedEdge["acme-everything", "LambdaPrettyQuote"], DirectedEdge["acme-everything", "LambdaShell"], DirectedEdge["acme-everything", "lambdatwit"], DirectedEdge["acme-everything", "lambdiff"], DirectedEdge["acme-everything", "lame-tester"], DirectedEdge["acme-everything", "language-bash"], DirectedEdge["acme-everything", "language-c-comments"], DirectedEdge["acme-everything", "language-c-inline"], DirectedEdge["acme-everything", "language-cil"], DirectedEdge["acme-everything", "language-ecmascript-analysis"], DirectedEdge["acme-everything", "language-eiffel"], DirectedEdge["acme-everything", "language-fortran"], DirectedEdge["acme-everything", "language-gcl"], DirectedEdge["acme-everything", "language-go"], DirectedEdge["acme-everything", "language-guess"], DirectedEdge["acme-everything", "language-objc"], DirectedEdge["acme-everything", "language-pig"], DirectedEdge["acme-everything", "language-python-colour"], DirectedEdge["acme-everything", "language-python-test"], DirectedEdge["acme-everything", "language-sh"], DirectedEdge["acme-everything", "language-spelling"], DirectedEdge["acme-everything", "language-sqlite"], DirectedEdge["acme-everything", "language-thrift"], DirectedEdge["acme-everything", "LargeCardinalHierarchy"], DirectedEdge["acme-everything", "Lastik"], DirectedEdge["acme-everything", "lat"], DirectedEdge["acme-everything", "latest-npm-version"], DirectedEdge["acme-everything", "Lattices"], DirectedEdge["acme-everything", "lax"], DirectedEdge["acme-everything", "layers"], DirectedEdge["acme-everything", "layers-game"], DirectedEdge["acme-everything", "layout-bootstrap"], DirectedEdge["acme-everything", "lazyarray"], DirectedEdge["acme-everything", "lazysplines"], DirectedEdge["acme-everything", "LazyVault"], DirectedEdge["acme-everything", "lbfgs"], DirectedEdge["acme-everything", "lca"], DirectedEdge["acme-everything", "lcs"], DirectedEdge["acme-everything", "lda"], DirectedEdge["acme-everything", "ldap-client"], DirectedEdge["acme-everything", "leaf"], DirectedEdge["acme-everything", "leaky"], DirectedEdge["acme-everything", "leankit-api"], DirectedEdge["acme-everything", "leapseconds-announced"], DirectedEdge["acme-everything", "learn"], DirectedEdge["acme-everything", "learn-physics-examples"], DirectedEdge["acme-everything", "learning-hmm"], DirectedEdge["acme-everything", "leetify"], DirectedEdge["acme-everything", "lendingclub"], DirectedEdge["acme-everything", "lens-properties"], DirectedEdge["acme-everything", "lens-text-encoding"], DirectedEdge["acme-everything", "lens-time"], DirectedEdge["acme-everything", "levmar-chart"], DirectedEdge["acme-everything", "lexer-applicative"], DirectedEdge["acme-everything", "lhae"], DirectedEdge["acme-everything", "lhc"], DirectedEdge["acme-everything", "lhe"], DirectedEdge["acme-everything", "lhs2html"], DirectedEdge["acme-everything", "lhs2tex"], DirectedEdge["acme-everything", "lhs2TeX-hl"], DirectedEdge["acme-everything", "lhslatex"], DirectedEdge["acme-everything", "LibClang"], DirectedEdge["acme-everything", "libconfig"], DirectedEdge["acme-everything", "libexpect"], DirectedEdge["acme-everything", "libGenI"], DirectedEdge["acme-everything", "libgit"], DirectedEdge["acme-everything", "libjenkins"], DirectedEdge["acme-everything", "liblastfm"], DirectedEdge["acme-everything", "liblinear-enumerator"], DirectedEdge["acme-everything", "libnvvm"], DirectedEdge["acme-everything", "liboleg"], DirectedEdge["acme-everything", "libpq"], DirectedEdge["acme-everything", "librandomorg"], DirectedEdge["acme-everything", "librato"], DirectedEdge["acme-everything", "libssh2-conduit"], DirectedEdge["acme-everything", "libstackexchange"], DirectedEdge["acme-everything", "libsystemd-daemon"], DirectedEdge["acme-everything", "libvirt-hs"], DirectedEdge["acme-everything", "libvorbis"], DirectedEdge["acme-everything", "libxml-enumerator"], DirectedEdge["acme-everything", "libxslt"], DirectedEdge["acme-everything", "life"], DirectedEdge["acme-everything", "lifted-threads"], DirectedEdge["acme-everything", "lifter"], DirectedEdge["acme-everything", "ligature"], DirectedEdge["acme-everything", "ligd"], DirectedEdge["acme-everything", "lighttpd-conf-qq"], DirectedEdge["acme-everything", "Limit"], DirectedEdge["acme-everything", "limp-cbc"], DirectedEdge["acme-everything", "lin-alg"], DirectedEdge["acme-everything", "linda"], DirectedEdge["acme-everything", "linear-accelerate"], DirectedEdge["acme-everything", "linear-maps"], DirectedEdge["acme-everything", "linear-opengl"], DirectedEdge["acme-everything", "linear-vect"], DirectedEdge["acme-everything", "linearEqSolver"], DirectedEdge["acme-everything", "linearscan-hoopl"], DirectedEdge["acme-everything", "LinearSplit"], DirectedEdge["acme-everything", "linebreak"], DirectedEdge["acme-everything", "linguistic-ordinals"], DirectedEdge["acme-everything", "LinkChecker"], DirectedEdge["acme-everything", "linkchk"], DirectedEdge["acme-everything", "linkcore"], DirectedEdge["acme-everything", "linkedhashmap"], DirectedEdge["acme-everything", "linklater"], DirectedEdge["acme-everything", "linux-blkid"], DirectedEdge["acme-everything", "linux-cgroup"], DirectedEdge["acme-everything", "linux-evdev"], DirectedEdge["acme-everything", "linux-file-extents"], DirectedEdge["acme-everything", "linux-inotify"], DirectedEdge["acme-everything", "linux-kmod"], DirectedEdge["acme-everything", "linux-mount"], DirectedEdge["acme-everything", "linux-namespaces"], DirectedEdge["acme-everything", "linux-ptrace"], DirectedEdge["acme-everything", "linux-xattr"], DirectedEdge["acme-everything", "linx-gateway"], DirectedEdge["acme-everything", "lio-fs"], DirectedEdge["acme-everything", "lio-simple"], DirectedEdge["acme-everything", "lipsum-gen"], DirectedEdge["acme-everything", "lispparser"], DirectedEdge["acme-everything", "list-fusion-probe"], DirectedEdge["acme-everything", "list-grouping"], DirectedEdge["acme-everything", "list-mux"], DirectedEdge["acme-everything", "list-remote-forwards"], DirectedEdge["acme-everything", "list-t-attoparsec"], DirectedEdge["acme-everything", "list-t-html-parser"], DirectedEdge["acme-everything", "list-t-http-client"], DirectedEdge["acme-everything", "list-t-libcurl"], DirectedEdge["acme-everything", "list-t-text"], DirectedEdge["acme-everything", "ListTree"], DirectedEdge["acme-everything", "lit"], DirectedEdge["acme-everything", "literals"], DirectedEdge["acme-everything", "live-sequencer"], DirectedEdge["acme-everything", "ll-picosat"], DirectedEdge["acme-everything", "llrbtree"], DirectedEdge["acme-everything", "llsd"], DirectedEdge["acme-everything", "llvm-base-util"], DirectedEdge["acme-everything", "llvm-general-quote"], DirectedEdge["acme-everything", "llvm-ht"], DirectedEdge["acme-everything", "llvm-pkg-config"], DirectedEdge["acme-everything", "load-env"], DirectedEdge["acme-everything", "loadavg"], DirectedEdge["acme-everything", "local-address"], DirectedEdge["acme-everything", "local-search"], DirectedEdge["acme-everything", "loch"], DirectedEdge["acme-everything", "lock-file"], DirectedEdge["acme-everything", "lockfree-queue"], DirectedEdge["acme-everything", "log-effect"], DirectedEdge["acme-everything", "log2json"], DirectedEdge["acme-everything", "logger"], DirectedEdge["acme-everything", "logging-facade-journald"], DirectedEdge["acme-everything", "Logic"], DirectedEdge["acme-everything", "logic-classes"], DirectedEdge["acme-everything", "logic-TPTP"], DirectedEdge["acme-everything", "logicst"], DirectedEdge["acme-everything", "logsink"], DirectedEdge["acme-everything", "lojban"], DirectedEdge["acme-everything", "lojysamban"], DirectedEdge["acme-everything", "loop-effin"], DirectedEdge["acme-everything", "loop-while"], DirectedEdge["acme-everything", "loops"], DirectedEdge["acme-everything", "loopy"], DirectedEdge["acme-everything", "lord"], DirectedEdge["acme-everything", "loris"], DirectedEdge["acme-everything", "loshadka"], DirectedEdge["acme-everything", "lostcities"], DirectedEdge["acme-everything", "lowgl"], DirectedEdge["acme-everything", "ls-usb"], DirectedEdge["acme-everything", "lscabal"], DirectedEdge["acme-everything", "LslPlus"], DirectedEdge["acme-everything", "lsystem"], DirectedEdge["acme-everything", "ltl"], DirectedEdge["acme-everything", "LTree"], DirectedEdge["acme-everything", "lua-bytecode"], DirectedEdge["acme-everything", "luachunk"], DirectedEdge["acme-everything", "lucienne"], DirectedEdge["acme-everything", "luhn"], DirectedEdge["acme-everything", "lui"], DirectedEdge["acme-everything", "luka"], DirectedEdge["acme-everything", "lushtags"], DirectedEdge["acme-everything", "luthor"], DirectedEdge["acme-everything", "lvish"], DirectedEdge["acme-everything", "lvmrun"], DirectedEdge["acme-everything", "lxc"], DirectedEdge["acme-everything", "lye"], DirectedEdge["acme-everything", "lzma-conduit"], DirectedEdge["acme-everything", "lzma-enumerator"], DirectedEdge["acme-everything", "machinecell"], DirectedEdge["acme-everything", "machines-zlib"], DirectedEdge["acme-everything", "macho"], DirectedEdge["acme-everything", "macosx-make-standalone"], DirectedEdge["acme-everything", "mage"], DirectedEdge["acme-everything", "MagicHaskeller"], DirectedEdge["acme-everything", "magma"], DirectedEdge["acme-everything", "mahoro"], DirectedEdge["acme-everything", "maid"], DirectedEdge["acme-everything", "mailbox-count"], DirectedEdge["acme-everything", "mailchimp-subscribe"], DirectedEdge["acme-everything", "majority"], DirectedEdge["acme-everything", "make-hard-links"], DirectedEdge["acme-everything", "make-package"], DirectedEdge["acme-everything", "makedo"], DirectedEdge["acme-everything", "manatee-all"], DirectedEdge["acme-everything", "manatee-anything"], DirectedEdge["acme-everything", "manatee-template"], DirectedEdge["acme-everything", "mancala"], DirectedEdge["acme-everything", "mandulia"], DirectedEdge["acme-everything", "marionetta"], DirectedEdge["acme-everything", "markdown-kate"], DirectedEdge["acme-everything", "markdown2svg"], DirectedEdge["acme-everything", "markov"], DirectedEdge["acme-everything", "markov-processes"], DirectedEdge["acme-everything", "markup"], DirectedEdge["acme-everything", "markup-preview"], DirectedEdge["acme-everything", "marxup"], DirectedEdge["acme-everything", "masakazu-bot"], DirectedEdge["acme-everything", "mastermind"], DirectedEdge["acme-everything", "mathblog"], DirectedEdge["acme-everything", "mathgenealogy"], DirectedEdge["acme-everything", "mathlink"], DirectedEdge["acme-everything", "matlab"], DirectedEdge["acme-everything", "matrix-market"], DirectedEdge["acme-everything", "matrix-market-pure"], DirectedEdge["acme-everything", "matsuri"], DirectedEdge["acme-everything", "maude"], DirectedEdge["acme-everything", "maxent"], DirectedEdge["acme-everything", "maximal-cliques"], DirectedEdge["acme-everything", "maxsharing"], DirectedEdge["acme-everything", "maybench"], DirectedEdge["acme-everything", "MaybeT-monads-tf"], DirectedEdge["acme-everything", "MazesOfMonad"], DirectedEdge["acme-everything", "mbox-tools"], DirectedEdge["acme-everything", "MC-Fold-DP"], DirectedEdge["acme-everything", "mcmaster-gloss-examples"], DirectedEdge["acme-everything", "mcmc-samplers"], DirectedEdge["acme-everything", "mdcat"], DirectedEdge["acme-everything", "mdo"], DirectedEdge["acme-everything", "MeanShift"], DirectedEdge["acme-everything", "Measure"], DirectedEdge["acme-everything", "mecab"], DirectedEdge["acme-everything", "mecha"], DirectedEdge["acme-everything", "mediawiki2latex"], DirectedEdge["acme-everything", "meep"], DirectedEdge["acme-everything", "mega-sdist"], DirectedEdge["acme-everything", "meldable-heap"], DirectedEdge["acme-everything", "memcache"], DirectedEdge["acme-everything", "memcached"], DirectedEdge["acme-everything", "memexml"], DirectedEdge["acme-everything", "memo-sqlite"], DirectedEdge["acme-everything", "memscript"], DirectedEdge["acme-everything", "messagepack-rpc"], DirectedEdge["acme-everything", "messente"], DirectedEdge["acme-everything", "meta-misc"], DirectedEdge["acme-everything", "meta-par-accelerate"], DirectedEdge["acme-everything", "metadata"], DirectedEdge["acme-everything", "MetaHDBC"], DirectedEdge["acme-everything", "metamorphic"], DirectedEdge["acme-everything", "metaplug"], DirectedEdge["acme-everything", "Metrics"], DirectedEdge["acme-everything", "metrics"], DirectedEdge["acme-everything", "metricsd-client"], DirectedEdge["acme-everything", "metronome"], DirectedEdge["acme-everything", "MFlow"], DirectedEdge["acme-everything", "mfsolve"], DirectedEdge["acme-everything", "mgeneric"], DirectedEdge["acme-everything", "Mhailist"], DirectedEdge["acme-everything", "MHask"], DirectedEdge["acme-everything", "mi"], DirectedEdge["acme-everything", "microbench"], DirectedEdge["acme-everything", "microformats2-types"], DirectedEdge["acme-everything", "microlens-each"], DirectedEdge["acme-everything", "microlens-mtl"], DirectedEdge["acme-everything", "microlens-th"], DirectedEdge["acme-everything", "microtimer"], DirectedEdge["acme-everything", "midi-util"], DirectedEdge["acme-everything", "midimory"], DirectedEdge["acme-everything", "midisurface"], DirectedEdge["acme-everything", "mighttpd"], DirectedEdge["acme-everything", "mikmod"], DirectedEdge["acme-everything", "milena"], DirectedEdge["acme-everything", "mines"], DirectedEdge["acme-everything", "minesweeper"], DirectedEdge["acme-everything", "MiniAgda"], DirectedEdge["acme-everything", "miniball"], DirectedEdge["acme-everything", "minimal-configuration"], DirectedEdge["acme-everything", "minimung"], DirectedEdge["acme-everything", "minions"], DirectedEdge["acme-everything", "miniplex"], DirectedEdge["acme-everything", "minirotate"], DirectedEdge["acme-everything", "ministg"], DirectedEdge["acme-everything", "mirror-tweet"], DirectedEdge["acme-everything", "MissingM"], DirectedEdge["acme-everything", "MissingPy"], DirectedEdge["acme-everything", "mix-arrows"], DirectedEdge["acme-everything", "mkbndl"], DirectedEdge["acme-everything", "mkcabal"], DirectedEdge["acme-everything", "ml-w"], DirectedEdge["acme-everything", "mlist"], DirectedEdge["acme-everything", "mmtl-base"], DirectedEdge["acme-everything", "mockery"], DirectedEdge["acme-everything", "modbus-tcp"], DirectedEdge["acme-everything", "modelicaparser"], DirectedEdge["acme-everything", "modsplit"], DirectedEdge["acme-everything", "modular-prelude-classy"], DirectedEdge["acme-everything", "modulespection"], DirectedEdge["acme-everything", "Modulo"], DirectedEdge["acme-everything", "modulo"], DirectedEdge["acme-everything", "Moe"], DirectedEdge["acme-everything", "MoeDict"], DirectedEdge["acme-everything", "mohws"], DirectedEdge["acme-everything", "monad-abort-fd"], DirectedEdge["acme-everything", "monad-atom-simple"], DirectedEdge["acme-everything", "monad-bool"], DirectedEdge["acme-everything", "monad-classes"], DirectedEdge["acme-everything", "monad-exception"], DirectedEdge["acme-everything", "monad-interleave"], DirectedEdge["acme-everything", "monad-levels"], DirectedEdge["acme-everything", "monad-logger-json"], DirectedEdge["acme-everything", "monad-logger-syslog"], DirectedEdge["acme-everything", "monad-lrs"], DirectedEdge["acme-everything", "monad-memo"], DirectedEdge["acme-everything", "monad-open"], DirectedEdge["acme-everything", "monad-parallel-progressbar"], DirectedEdge["acme-everything", "monad-param"], DirectedEdge["acme-everything", "monad-ran"], DirectedEdge["acme-everything", "monad-resumption"], DirectedEdge["acme-everything", "monad-statevar"], DirectedEdge["acme-everything", "monad-stlike-stm"], DirectedEdge["acme-everything", "monad-supply"], DirectedEdge["acme-everything", "monad-tx"], DirectedEdge["acme-everything", "monad-unify"], DirectedEdge["acme-everything", "monad-wrap"], DirectedEdge["acme-everything", "monadacme"], DirectedEdge["acme-everything", "MonadCatchIO-mtl-foreign"], DirectedEdge["acme-everything", "MonadCatchIO-transformers-foreign"], DirectedEdge["acme-everything", "MonadCompose"], DirectedEdge["acme-everything", "monadfibre"], DirectedEdge["acme-everything", "monadic-arrays"], DirectedEdge["acme-everything", "monadiccp-gecode"], DirectedEdge["acme-everything", "monadio-unwrappable"], DirectedEdge["acme-everything", "Monadius"], DirectedEdge["acme-everything", "MonadLab"], DirectedEdge["acme-everything", "monadLib-compose"], DirectedEdge["acme-everything", "monadlist"], DirectedEdge["acme-everything", "monadloc-pp"], DirectedEdge["acme-everything", "MonadRandomLazy"], DirectedEdge["acme-everything", "monadtransform"], DirectedEdge["acme-everything", "monarch"], DirectedEdge["acme-everything", "Monaris"], DirectedEdge["acme-everything", "Monatron-IO"], DirectedEdge["acme-everything", "mongodb-queue"], DirectedEdge["acme-everything", "mongrel2-handler"], DirectedEdge["acme-everything", "monitor"], DirectedEdge["acme-everything", "mono-foldable"], DirectedEdge["acme-everything", "Monocle"], DirectedEdge["acme-everything", "monoidal-containers"], DirectedEdge["acme-everything", "monoidplus"], DirectedEdge["acme-everything", "montage"], DirectedEdge["acme-everything", "montage-client"], DirectedEdge["acme-everything", "monte-carlo"], DirectedEdge["acme-everything", "moo"], DirectedEdge["acme-everything", "moonshine"], DirectedEdge["acme-everything", "morfette"], DirectedEdge["acme-everything", "mosaico-lib"], DirectedEdge["acme-everything", "mount"], DirectedEdge["acme-everything", "mp"], DirectedEdge["acme-everything", "mp3decoder"], DirectedEdge["acme-everything", "mpdmate"], DirectedEdge["acme-everything", "mpretty"], DirectedEdge["acme-everything", "mprover"], DirectedEdge["acme-everything", "mpvguihs"], DirectedEdge["acme-everything", "mqtt-hs"], DirectedEdge["acme-everything", "msgpack-aeson"], DirectedEdge["acme-everything", "msgpack-rpc"], DirectedEdge["acme-everything", "MSQueue"], DirectedEdge["acme-everything", "msu"], DirectedEdge["acme-everything", "mtgoxapi"], DirectedEdge["acme-everything", "mtl-c"], DirectedEdge["acme-everything", "mtl-tf"], DirectedEdge["acme-everything", "mtlx"], DirectedEdge["acme-everything", "mtp"], DirectedEdge["acme-everything", "mtree"], DirectedEdge["acme-everything", "MuCheck-Hspec"], DirectedEdge["acme-everything", "MuCheck-HUnit"], DirectedEdge["acme-everything", "MuCheck-QuickCheck"], DirectedEdge["acme-everything", "MuCheck-SmallCheck"], DirectedEdge["acme-everything", "mucipher"], DirectedEdge["acme-everything", "mudbath"], DirectedEdge["acme-everything", "multext-east-msd"], DirectedEdge["acme-everything", "multifocal"], DirectedEdge["acme-everything", "multipart-names"], DirectedEdge["acme-everything", "multipass"], DirectedEdge["acme-everything", "multiplicity"], DirectedEdge["acme-everything", "multirec-alt-deriver"], DirectedEdge["acme-everything", "multirec-binary"], DirectedEdge["acme-everything", "multistate"], DirectedEdge["acme-everything", "Munkres-simple"], DirectedEdge["acme-everything", "muon"], DirectedEdge["acme-everything", "music-graphics"], DirectedEdge["acme-everything", "music-sibelius"], DirectedEdge["acme-everything", "music-suite"], DirectedEdge["acme-everything", "music-util"], DirectedEdge["acme-everything", "MusicBrainz"], DirectedEdge["acme-everything", "MusicBrainz-libdiscid"], DirectedEdge["acme-everything", "mustache2hs"], DirectedEdge["acme-everything", "mutable-iter"], DirectedEdge["acme-everything", "mute-unmute"], DirectedEdge["acme-everything", "mvc-updates"], DirectedEdge["acme-everything", "mvclient"], DirectedEdge["acme-everything", "mybitcoin-sci"], DirectedEdge["acme-everything", "mysnapsession-example"], DirectedEdge["acme-everything", "mysql-effect"], DirectedEdge["acme-everything", "mysql-simple-quasi"], DirectedEdge["acme-everything", "mysql-simple-typed"], DirectedEdge["acme-everything", "myTestlll"], DirectedEdge["acme-everything", "n-m"], DirectedEdge["acme-everything", "named-lock"], DirectedEdge["acme-everything", "nano-cryptr"], DirectedEdge["acme-everything", "nano-hmac"], DirectedEdge["acme-everything", "nanoAgda"], DirectedEdge["acme-everything", "nanocurses"], DirectedEdge["acme-everything", "nanomsg"], DirectedEdge["acme-everything", "nanoparsec"], DirectedEdge["acme-everything", "NanoProlog"], DirectedEdge["acme-everything", "nanospec"], DirectedEdge["acme-everything", "narc"], DirectedEdge["acme-everything", "nat"], DirectedEdge["acme-everything", "nats-queue"], DirectedEdge["acme-everything", "natural-numbers"], DirectedEdge["acme-everything", "natural-transformation"], DirectedEdge["acme-everything", "naturalcomp"], DirectedEdge["acme-everything", "NaturalLanguageAlphabets"], DirectedEdge["acme-everything", "naturals"], DirectedEdge["acme-everything", "NaturalSort"], DirectedEdge["acme-everything", "nbt"], DirectedEdge["acme-everything", "nc-indicators"], DirectedEdge["acme-everything", "needle"], DirectedEdge["acme-everything", "nehe-tuts"], DirectedEdge["acme-everything", "neil"], DirectedEdge["acme-everything", "neither"], DirectedEdge["acme-everything", "nemesis-titan"], DirectedEdge["acme-everything", "nerf"], DirectedEdge["acme-everything", "nero-warp"], DirectedEdge["acme-everything", "nested-routes"], DirectedEdge["acme-everything", "NestedSampling"], DirectedEdge["acme-everything", "net-concurrent"], DirectedEdge["acme-everything", "netclock"], DirectedEdge["acme-everything", "netcore"], DirectedEdge["acme-everything", "netlink"], DirectedEdge["acme-everything", "netpbm"], DirectedEdge["acme-everything", "netrc"], DirectedEdge["acme-everything", "netspec"], DirectedEdge["acme-everything", "netstring-enumerator"], DirectedEdge["acme-everything", "nettle-frp"], DirectedEdge["acme-everything", "nettle-netkit"], DirectedEdge["acme-everything", "netwire-input-glfw"], DirectedEdge["acme-everything", "network-address"], DirectedEdge["acme-everything", "network-anonymous-i2p"], DirectedEdge["acme-everything", "network-house"], DirectedEdge["acme-everything", "network-minihttp"], DirectedEdge["acme-everything", "network-msg"], DirectedEdge["acme-everything", "network-netpacket"], DirectedEdge["acme-everything", "Network-NineP"], DirectedEdge["acme-everything", "network-pgi"], DirectedEdge["acme-everything", "network-rpca"], DirectedEdge["acme-everything", "network-server"], DirectedEdge["acme-everything", "network-service"], DirectedEdge["acme-everything", "network-stream"], DirectedEdge["acme-everything", "network-topic-models"], DirectedEdge["acme-everything", "network-transport-amqp"], DirectedEdge["acme-everything", "network-transport-tests"], DirectedEdge["acme-everything", "network-wai-router"], DirectedEdge["acme-everything", "network-websocket"], DirectedEdge["acme-everything", "newports"], DirectedEdge["acme-everything", "newtype-deriving"], DirectedEdge["acme-everything", "newtype-generics"], DirectedEdge["acme-everything", "newtyper"], DirectedEdge["acme-everything", "nextstep-plist"], DirectedEdge["acme-everything", "nf"], DirectedEdge["acme-everything", "NGrams"], DirectedEdge["acme-everything", "nikepub"], DirectedEdge["acme-everything", "nimber"], DirectedEdge["acme-everything", "Ninjas"], DirectedEdge["acme-everything", "nitro"], DirectedEdge["acme-everything", "nixos-types"], DirectedEdge["acme-everything", "nkjp"], DirectedEdge["acme-everything", "nlp-scores-scripts"], DirectedEdge["acme-everything", "nme"], DirectedEdge["acme-everything", "nntp"], DirectedEdge["acme-everything", "no-role-annots"], DirectedEdge["acme-everything", "Noise"], DirectedEdge["acme-everything", "Nomyx"], DirectedEdge["acme-everything", "Nomyx-Rules"], DirectedEdge["acme-everything", "NonEmptyList"], DirectedEdge["acme-everything", "nonfree"], DirectedEdge["acme-everything", "nonlinear-optimization-ad"], DirectedEdge["acme-everything", "NoSlow"], DirectedEdge["acme-everything", "not-gloss-examples"], DirectedEdge["acme-everything", "notcpp"], DirectedEdge["acme-everything", "notmuch-haskell"], DirectedEdge["acme-everything", "NoTrace"], DirectedEdge["acme-everything", "np-linear"], DirectedEdge["acme-everything", "nptools"], DirectedEdge["acme-everything", "nsis"], DirectedEdge["acme-everything", "nthable"], DirectedEdge["acme-everything", "ntp-control"], DirectedEdge["acme-everything", "NTRU"], DirectedEdge["acme-everything", "null-canvas"], DirectedEdge["acme-everything", "numbering"], DirectedEdge["acme-everything", "Numbers"], DirectedEdge["acme-everything", "NumberSieves"], DirectedEdge["acme-everything", "numerals"], DirectedEdge["acme-everything", "numerals-base"], DirectedEdge["acme-everything", "numeric-limits"], DirectedEdge["acme-everything", "NumLazyByteString"], DirectedEdge["acme-everything", "nums"], DirectedEdge["acme-everything", "Nutri"], DirectedEdge["acme-everything", "NXTDSL"], DirectedEdge["acme-everything", "nyan"], DirectedEdge["acme-everything", "nymphaea"], DirectedEdge["acme-everything", "oauthenticated"], DirectedEdge["acme-everything", "obdd"], DirectedEdge["acme-everything", "obj"], DirectedEdge["acme-everything", "Object"], DirectedEdge["acme-everything", "ObjectIO"], DirectedEdge["acme-everything", "Obsidian"], DirectedEdge["acme-everything", "octopus"], DirectedEdge["acme-everything", "oculus"], DirectedEdge["acme-everything", "off-simple"], DirectedEdge["acme-everything", "ohloh-hs"], DirectedEdge["acme-everything", "oi"], DirectedEdge["acme-everything", "ois-input-manager"], DirectedEdge["acme-everything", "olwrapper"], DirectedEdge["acme-everything", "omaketex"], DirectedEdge["acme-everything", "Omega"], DirectedEdge["acme-everything", "omega"], DirectedEdge["acme-everything", "omnicodec"], DirectedEdge["acme-everything", "on-a-horse"], DirectedEdge["acme-everything", "one-liner"], DirectedEdge["acme-everything", "one-time-password"], DirectedEdge["acme-everything", "oneormore"], DirectedEdge["acme-everything", "only"], DirectedEdge["acme-everything", "onu-course"], DirectedEdge["acme-everything", "opaleye"], DirectedEdge["acme-everything", "open-pandoc"], DirectedEdge["acme-everything", "open-typerep"], DirectedEdge["acme-everything", "open-witness"], DirectedEdge["acme-everything", "OpenAFP-Utils"], DirectedEdge["acme-everything", "OpenCL"], DirectedEdge["acme-everything", "OpenCLRaw"], DirectedEdge["acme-everything", "OpenCLWrappers"], DirectedEdge["acme-everything", "opencv-raw"], DirectedEdge["acme-everything", "openexchangerates"], DirectedEdge["acme-everything", "opengles"], DirectedEdge["acme-everything", "openid"], DirectedEdge["acme-everything", "openpgp-Crypto"], DirectedEdge["acme-everything", "OpenSCAD"], DirectedEdge["acme-everything", "openssh-github-keys"], DirectedEdge["acme-everything", "openssl-createkey"], DirectedEdge["acme-everything", "opentheory-char"], DirectedEdge["acme-everything", "opentheory-prime"], DirectedEdge["acme-everything", "OpenVG"], DirectedEdge["acme-everything", "Operads"], DirectedEdge["acme-everything", "opn"], DirectedEdge["acme-everything", "optimal-blocks"], DirectedEdge["acme-everything", "optimization"], DirectedEdge["acme-everything", "optimusprime"], DirectedEdge["acme-everything", "options-time"], DirectedEdge["acme-everything", "orchestrate"], DirectedEdge["acme-everything", "orchid-demo"], DirectedEdge["acme-everything", "ord-adhoc"], DirectedEdge["acme-everything", "order-statistics"], DirectedEdge["acme-everything", "Ordinals"], DirectedEdge["acme-everything", "ordrea"], DirectedEdge["acme-everything", "organize-imports"], DirectedEdge["acme-everything", "orgmode-parse"], DirectedEdge["acme-everything", "origami"], DirectedEdge["acme-everything", "OrPatterns"], DirectedEdge["acme-everything", "os-release"], DirectedEdge["acme-everything", "OSM"], DirectedEdge["acme-everything", "osm-download"], DirectedEdge["acme-everything", "osx-ar"], DirectedEdge["acme-everything", "ot"], DirectedEdge["acme-everything", "OTP"], DirectedEdge["acme-everything", "ottparse-pretty"], DirectedEdge["acme-everything", "overture"], DirectedEdge["acme-everything", "pack"], DirectedEdge["acme-everything", "package-o-tron"], DirectedEdge["acme-everything", "package-vt"], DirectedEdge["acme-everything", "packunused"], DirectedEdge["acme-everything", "pacman-memcache"], DirectedEdge["acme-everything", "padKONTROL"], DirectedEdge["acme-everything", "PageIO"], DirectedEdge["acme-everything", "pagerduty"], DirectedEdge["acme-everything", "Paillier"], DirectedEdge["acme-everything", "palette"], DirectedEdge["acme-everything", "palindromes"], DirectedEdge["acme-everything", "panda"], DirectedEdge["acme-everything", "pandoc-crossref"], DirectedEdge["acme-everything", "pandoc-lens"], DirectedEdge["acme-everything", "pandoc-unlit"], DirectedEdge["acme-everything", "pappy"], DirectedEdge["acme-everything", "para"], DirectedEdge["acme-everything", "paragon"], DirectedEdge["acme-everything", "Paraiso"], DirectedEdge["acme-everything", "parallel-tasks"], DirectedEdge["acme-everything", "parco-attoparsec"], DirectedEdge["acme-everything", "parco-parsec"], DirectedEdge["acme-everything", "parcom-lib"], DirectedEdge["acme-everything", "parconc-examples"], DirectedEdge["acme-everything", "parport"], DirectedEdge["acme-everything", "PArrows"], DirectedEdge["acme-everything", "Parry"], DirectedEdge["acme-everything", "parse-help"], DirectedEdge["acme-everything", "parsec-parsers"], DirectedEdge["acme-everything", "parsec-tagsoup"], DirectedEdge["acme-everything", "parsec-utils"], DirectedEdge["acme-everything", "parseerror-eq"], DirectedEdge["acme-everything", "parsely"], DirectedEdge["acme-everything", "parser-helper"], DirectedEdge["acme-everything", "ParserFunction"], DirectedEdge["acme-everything", "parsergen"], DirectedEdge["acme-everything", "partial"], DirectedEdge["acme-everything", "partial-lens"], DirectedEdge["acme-everything", "partial-uri"], DirectedEdge["acme-everything", "PartialTypeSignatures"], DirectedEdge["acme-everything", "partly"], DirectedEdge["acme-everything", "passage"], DirectedEdge["acme-everything", "PasswordGenerator"], DirectedEdge["acme-everything", "passwords"], DirectedEdge["acme-everything", "pastis"], DirectedEdge["acme-everything", "pasty"], DirectedEdge["acme-everything", "patch-image"], DirectedEdge["acme-everything", "Pathfinder"], DirectedEdge["acme-everything", "pathfinding"], DirectedEdge["acme-everything", "pathfindingcore"], DirectedEdge["acme-everything", "patronscraper"], DirectedEdge["acme-everything", "patterns"], DirectedEdge["acme-everything", "paymill"], DirectedEdge["acme-everything", "paypal-api"], DirectedEdge["acme-everything", "pb"], DirectedEdge["acme-everything", "pbc4hs"], DirectedEdge["acme-everything", "pcap-conduit"], DirectedEdge["acme-everything", "pcap-enumerator"], DirectedEdge["acme-everything", "pcf"], DirectedEdge["acme-everything", "pcg-random"], DirectedEdge["acme-everything", "PCLT-DB"], DirectedEdge["acme-everything", "pcre-less"], DirectedEdge["acme-everything", "pcre-light-extra"], DirectedEdge["acme-everything", "PDBtools"], DirectedEdge["acme-everything", "pdf-toolbox-viewer"], DirectedEdge["acme-everything", "pdf2line"], DirectedEdge["acme-everything", "pdfsplit"], DirectedEdge["acme-everything", "pdynload"], DirectedEdge["acme-everything", "peano-inf"], DirectedEdge["acme-everything", "pecoff"], DirectedEdge["acme-everything", "peg"], DirectedEdge["acme-everything", "pell"], DirectedEdge["acme-everything", "penn-treebank"], DirectedEdge["acme-everything", "penny-bin"], DirectedEdge["acme-everything", "peparser"], DirectedEdge["acme-everything", "perceptron"], DirectedEdge["acme-everything", "PerfectHash"], DirectedEdge["acme-everything", "perm"], DirectedEdge["acme-everything", "PermuteEffects"], DirectedEdge["acme-everything", "persistent-cereal"], DirectedEdge["acme-everything", "persistent-equivalence"], DirectedEdge["acme-everything", "persistent-hssqlppp"], DirectedEdge["acme-everything", "persistent-map"], DirectedEdge["acme-everything", "persistent-mysql"], DirectedEdge["acme-everything", "persistent-odbc"], DirectedEdge["acme-everything", "persistent-protobuf"], DirectedEdge["acme-everything", "persistent-ratelimit"], DirectedEdge["acme-everything", "persistent-redis"], DirectedEdge["acme-everything", "persistent-refs"], DirectedEdge["acme-everything", "persistent-vector"], DirectedEdge["acme-everything", "persona-idp"], DirectedEdge["acme-everything", "pesca"], DirectedEdge["acme-everything", "pez"], DirectedEdge["acme-everything", "pg-harness"], DirectedEdge["acme-everything", "pgdl"], DirectedEdge["acme-everything", "pgm"], DirectedEdge["acme-everything", "pgp-wordlist"], DirectedEdge["acme-everything", "pgsql-simple"], DirectedEdge["acme-everything", "phasechange"], DirectedEdge["acme-everything", "phash"], DirectedEdge["acme-everything", "phone-push"], DirectedEdge["acme-everything", "photoname"], DirectedEdge["acme-everything", "phraskell"], DirectedEdge["acme-everything", "pi-calculus"], DirectedEdge["acme-everything", "pia-forward"], DirectedEdge["acme-everything", "pianola"], DirectedEdge["acme-everything", "picologic"], DirectedEdge["acme-everything", "picoparsec"], DirectedEdge["acme-everything", "piet"], DirectedEdge["acme-everything", "piki"], DirectedEdge["acme-everything", "pinboard"], DirectedEdge["acme-everything", "pipes-binary"], DirectedEdge["acme-everything", "pipes-cliff"], DirectedEdge["acme-everything", "pipes-conduit"], DirectedEdge["acme-everything", "pipes-courier"], DirectedEdge["acme-everything", "pipes-csv"], DirectedEdge["acme-everything", "pipes-errors"], DirectedEdge["acme-everything", "pipes-extra"], DirectedEdge["acme-everything", "pipes-extras"], DirectedEdge["acme-everything", "pipes-network-tls"], DirectedEdge["acme-everything", "pipes-p2p-examples"], DirectedEdge["acme-everything", "pipes-postgresql-simple"], DirectedEdge["acme-everything", "pipes-shell"], DirectedEdge["acme-everything", "pipes-vector"], DirectedEdge["acme-everything", "pipes-websockets"], DirectedEdge["acme-everything", "pipes-zlib"], DirectedEdge["acme-everything", "pisigma"], DirectedEdge["acme-everything", "Piso"], DirectedEdge["acme-everything", "pkggraph"], DirectedEdge["acme-everything", "pktree"], DirectedEdge["acme-everything", "planar-graph"], DirectedEdge["acme-everything", "plat"], DirectedEdge["acme-everything", "PlayHangmanGame"], DirectedEdge["acme-everything", "PlayingCards"], DirectedEdge["acme-everything", "plist"], DirectedEdge["acme-everything", "plivo"], DirectedEdge["acme-everything", "plot-gtk"], DirectedEdge["acme-everything", "plot-gtk-ui"], DirectedEdge["acme-everything", "plot-lab"], DirectedEdge["acme-everything", "plotserver-api"], DirectedEdge["acme-everything", "PlslTools"], DirectedEdge["acme-everything", "plumbers"], DirectedEdge["acme-everything", "Plural"], DirectedEdge["acme-everything", "pngload-fixed"], DirectedEdge["acme-everything", "pnm"], DirectedEdge["acme-everything", "pocket-dns"], DirectedEdge["acme-everything", "poker-eval"], DirectedEdge["acme-everything", "pokitdok"], DirectedEdge["acme-everything", "polar"], DirectedEdge["acme-everything", "polh-lexicon"], DirectedEdge["acme-everything", "Pollutocracy"], DirectedEdge["acme-everything", "polyseq"], DirectedEdge["acme-everything", "polyToMonoid"], DirectedEdge["acme-everything", "polytypeable-utils"], DirectedEdge["acme-everything", "ponder"], DirectedEdge["acme-everything", "pontarius-mediaserver"], DirectedEdge["acme-everything", "pony"], DirectedEdge["acme-everything", "pool"], DirectedEdge["acme-everything", "pooled-io"], DirectedEdge["acme-everything", "pop3-client"], DirectedEdge["acme-everything", "populate-setup-exe-cache"], DirectedEdge["acme-everything", "portable-lines"], DirectedEdge["acme-everything", "porte"], DirectedEdge["acme-everything", "porter"], DirectedEdge["acme-everything", "PortFusion"], DirectedEdge["acme-everything", "ports"], DirectedEdge["acme-everything", "posix-acl"], DirectedEdge["acme-everything", "posix-filelock"], DirectedEdge["acme-everything", "posix-pty"], DirectedEdge["acme-everything", "posix-realtime"], DirectedEdge["acme-everything", "posix-timer"], DirectedEdge["acme-everything", "possible"], DirectedEdge["acme-everything", "post-mess-age"], DirectedEdge["acme-everything", "postcodes"], DirectedEdge["acme-everything", "PostgreSQL"], DirectedEdge["acme-everything", "postgresql-config"], DirectedEdge["acme-everything", "postgresql-copy-escape"], DirectedEdge["acme-everything", "postgresql-query"], DirectedEdge["acme-everything", "postgresql-simple-migration"], DirectedEdge["acme-everything", "postgresql-simple-sop"], DirectedEdge["acme-everything", "postgresql-simple-typed"], DirectedEdge["acme-everything", "postgresql-typed"], DirectedEdge["acme-everything", "postgrest"], DirectedEdge["acme-everything", "postmaster"], DirectedEdge["acme-everything", "powerpc"], DirectedEdge["acme-everything", "pqueue"], DirectedEdge["acme-everything", "pqueue-mtl"], DirectedEdge["acme-everything", "practice-room"], DirectedEdge["acme-everything", "precis"], DirectedEdge["acme-everything", "prednote-test"], DirectedEdge["acme-everything", "pregame"], DirectedEdge["acme-everything", "prelude-generalize"], DirectedEdge["acme-everything", "prelude-plus"], DirectedEdge["acme-everything", "prelude-prime"], DirectedEdge["acme-everything", "preprocess-haskell"], DirectedEdge["acme-everything", "present"], DirectedEdge["acme-everything", "pretty-hex"], DirectedEdge["acme-everything", "pretty-sop"], DirectedEdge["acme-everything", "prim-uniq"], DirectedEdge["acme-everything", "primula-board"], DirectedEdge["acme-everything", "primula-bot"], DirectedEdge["acme-everything", "printf-mauke"], DirectedEdge["acme-everything", "Printf-TH"], DirectedEdge["acme-everything", "printxosd"], DirectedEdge["acme-everything", "PriorityChansConverger"], DirectedEdge["acme-everything", "privileged-concurrency"], DirectedEdge["acme-everything", "prizm"], DirectedEdge["acme-everything", "ProbabilityMonads"], DirectedEdge["acme-everything", "probable"], DirectedEdge["acme-everything", "process-iterio"], DirectedEdge["acme-everything", "process-progress"], DirectedEdge["acme-everything", "process-qq"], DirectedEdge["acme-everything", "process-streaming"], DirectedEdge["acme-everything", "processing"], DirectedEdge["acme-everything", "processor-creative-kit"], DirectedEdge["acme-everything", "procrastinating-structure"], DirectedEdge["acme-everything", "procstat"], DirectedEdge["acme-everything", "proctest"], DirectedEdge["acme-everything", "prof2dot"], DirectedEdge["acme-everything", "prof2pretty"], DirectedEdge["acme-everything", "profiteur"], DirectedEdge["acme-everything", "progressbar"], DirectedEdge["acme-everything", "progressive"], DirectedEdge["acme-everything", "proj4-hs-bindings"], DirectedEdge["acme-everything", "prolog-graph"], DirectedEdge["acme-everything", "promise"], DirectedEdge["acme-everything", "propane"], DirectedEdge["acme-everything", "propellor"], DirectedEdge["acme-everything", "properties"], DirectedEdge["acme-everything", "props"], DirectedEdge["acme-everything", "prosper"], DirectedEdge["acme-everything", "proteaaudio"], DirectedEdge["acme-everything", "prototype"], DirectedEdge["acme-everything", "prove-everywhere-server"], DirectedEdge["acme-everything", "ProxN"], DirectedEdge["acme-everything", "pseudomacros"], DirectedEdge["acme-everything", "PTQ"], DirectedEdge["acme-everything", "pub"], DirectedEdge["acme-everything", "publicsuffixlistcreate"], DirectedEdge["acme-everything", "pubsub"], DirectedEdge["acme-everything", "pugixml"], DirectedEdge["acme-everything", "Pugs"], DirectedEdge["acme-everything", "pugs-hsregex"], DirectedEdge["acme-everything", "pugs-HsSyck"], DirectedEdge["acme-everything", "punkt"], DirectedEdge["acme-everything", "Pup-Events"], DirectedEdge["acme-everything", "Pup-Events-Demo"], DirectedEdge["acme-everything", "puppetresources"], DirectedEdge["acme-everything", "pure-io"], DirectedEdge["acme-everything", "pure-priority-queue-tests"], DirectedEdge["acme-everything", "pure-zlib"], DirectedEdge["acme-everything", "push-notify-general"], DirectedEdge["acme-everything", "pushme"], DirectedEdge["acme-everything", "putlenses"], DirectedEdge["acme-everything", "puzzle-draw-cmdline"], DirectedEdge["acme-everything", "pvd"], DirectedEdge["acme-everything", "pwstore-cli"], DirectedEdge["acme-everything", "pxsl-tools"], DirectedEdge["acme-everything", "pyffi"], DirectedEdge["acme-everything", "pyfi"], DirectedEdge["acme-everything", "qc-oi-testgenerator"], DirectedEdge["acme-everything", "qhull-simple"], DirectedEdge["acme-everything", "QIO"], DirectedEdge["acme-everything", "qrcode"], DirectedEdge["acme-everything", "QuadEdge"], DirectedEdge["acme-everything", "quadratic-irrational"], DirectedEdge["acme-everything", "QuadTree"], DirectedEdge["acme-everything", "quandl-api"], DirectedEdge["acme-everything", "quantfin"], DirectedEdge["acme-everything", "quantities"], DirectedEdge["acme-everything", "quantum-arrow"], DirectedEdge["acme-everything", "qudb"], DirectedEdge["acme-everything", "querystring-pickle"], DirectedEdge["acme-everything", "queuelike"], DirectedEdge["acme-everything", "quick-generator"], DirectedEdge["acme-everything", "QuickAnnotate"], DirectedEdge["acme-everything", "QuickCheck-GenT"], DirectedEdge["acme-everything", "quickcheck-poly"], DirectedEdge["acme-everything", "quickcheck-properties"], DirectedEdge["acme-everything", "quickcheck-property-comb"], DirectedEdge["acme-everything", "quickcheck-property-monad"], DirectedEdge["acme-everything", "quickcheck-relaxng"], DirectedEdge["acme-everything", "quickcheck-rematch"], DirectedEdge["acme-everything", "quickcheck-script"], DirectedEdge["acme-everything", "quickcheck-unicode"], DirectedEdge["acme-everything", "quickcheck-webdriver"], DirectedEdge["acme-everything", "quicklz"], DirectedEdge["acme-everything", "quickset"], DirectedEdge["acme-everything", "Quickson"], DirectedEdge["acme-everything", "quickspec"], DirectedEdge["acme-everything", "quicktest"], DirectedEdge["acme-everything", "quickwebapp"], DirectedEdge["acme-everything", "rabocsv2qif"], DirectedEdge["acme-everything", "rad"], DirectedEdge["acme-everything", "radium"], DirectedEdge["acme-everything", "radium-formula-parser"], DirectedEdge["acme-everything", "radix"], DirectedEdge["acme-everything", "rados-haskell"], DirectedEdge["acme-everything", "Raincat"], DirectedEdge["acme-everything", "rakhana"], DirectedEdge["acme-everything", "ralist"], DirectedEdge["acme-everything", "rand-vars"], DirectedEdge["acme-everything", "randfile"], DirectedEdge["acme-everything", "random-access-list"], DirectedEdge["acme-everything", "random-derive"], DirectedEdge["acme-everything", "random-eff"], DirectedEdge["acme-everything", "random-effin"], DirectedEdge["acme-everything", "random-hypergeometric"], DirectedEdge["acme-everything", "random-stream"], DirectedEdge["acme-everything", "RandomDotOrg"], DirectedEdge["acme-everything", "Randometer"], DirectedEdge["acme-everything", "randomgen"], DirectedEdge["acme-everything", "randproc"], DirectedEdge["acme-everything", "randsolid"], DirectedEdge["acme-everything", "Range"], DirectedEdge["acme-everything", "range-set-list"], DirectedEdge["acme-everything", "range-space"], DirectedEdge["acme-everything", "rangemin"], DirectedEdge["acme-everything", "ranges"], DirectedEdge["acme-everything", "Ranka"], DirectedEdge["acme-everything", "RANSAC"], DirectedEdge["acme-everything", "rascal"], DirectedEdge["acme-everything", "Rasenschach"], DirectedEdge["acme-everything", "rate-limit"], DirectedEdge["acme-everything", "raven-haskell-scotty"], DirectedEdge["acme-everything", "rawstring-qm"], DirectedEdge["acme-everything", "rbr"], DirectedEdge["acme-everything", "rclient"], DirectedEdge["acme-everything", "rdtsc-enolan"], DirectedEdge["acme-everything", "react-haskell"], DirectedEdge["acme-everything", "reaction-logic"], DirectedEdge["acme-everything", "reactive-bacon"], DirectedEdge["acme-everything", "reactive-balsa"], DirectedEdge["acme-everything", "reactive-banana-threepenny"], DirectedEdge["acme-everything", "reactive-banana-wx"], DirectedEdge["acme-everything", "reactive-fieldtrip"], DirectedEdge["acme-everything", "reactive-haskell"], DirectedEdge["acme-everything", "reactive-io"], DirectedEdge["acme-everything", "reactor"], DirectedEdge["acme-everything", "read-bounded"], DirectedEdge["acme-everything", "readline-statevar"], DirectedEdge["acme-everything", "readpyc"], DirectedEdge["acme-everything", "really-simple-xml-parser"], DirectedEdge["acme-everything", "record-aeson"], DirectedEdge["acme-everything", "record-gl"], DirectedEdge["acme-everything", "records-th"], DirectedEdge["acme-everything", "recursive-line-count"], DirectedEdge["acme-everything", "redis-hs"], DirectedEdge["acme-everything", "redis-io"], DirectedEdge["acme-everything", "redis-simple"], DirectedEdge["acme-everything", "Redmine"], DirectedEdge["acme-everything", "redo"], DirectedEdge["acme-everything", "reenact"], DirectedEdge["acme-everything", "Ref"], DirectedEdge["acme-everything", "ref"], DirectedEdge["acme-everything", "refcount"], DirectedEdge["acme-everything", "references"], DirectedEdge["acme-everything", "refh"], DirectedEdge["acme-everything", "refined"], DirectedEdge["acme-everything", "reflection-extras"], DirectedEdge["acme-everything", "reflection-without-remorse"], DirectedEdge["acme-everything", "reflex"], DirectedEdge["acme-everything", "reform-hamlet"], DirectedEdge["acme-everything", "regex-deriv"], DirectedEdge["acme-everything", "regex-dfa"], DirectedEdge["acme-everything", "regex-parsec"], DirectedEdge["acme-everything", "regex-pderiv"], DirectedEdge["acme-everything", "regex-posix-unittest"], DirectedEdge["acme-everything", "regex-tdfa-unittest"], DirectedEdge["acme-everything", "regex-tre"], DirectedEdge["acme-everything", "regex-xmlschema"], DirectedEdge["acme-everything", "regexchar"], DirectedEdge["acme-everything", "regexp-tries"], DirectedEdge["acme-everything", "regexpr-symbolic"], DirectedEdge["acme-everything", "regexqq"], DirectedEdge["acme-everything", "regions-monadsfd"], DirectedEdge["acme-everything", "regions-monadstf"], DirectedEdge["acme-everything", "regions-mtl"], DirectedEdge["acme-everything", "regular-extras"], DirectedEdge["acme-everything", "regular-web"], DirectedEdge["acme-everything", "reheat"], DirectedEdge["acme-everything", "rehoo"], DirectedEdge["acme-everything", "reified-records"], DirectedEdge["acme-everything", "reify"], DirectedEdge["acme-everything", "relacion"], DirectedEdge["acme-everything", "relation"], DirectedEdge["acme-everything", "relational-record"], DirectedEdge["acme-everything", "relational-record-examples"], DirectedEdge["acme-everything", "relative-date"], DirectedEdge["acme-everything", "relit"], DirectedEdge["acme-everything", "rematch-text"], DirectedEdge["acme-everything", "remote-debugger"], DirectedEdge["acme-everything", "remotion"], DirectedEdge["acme-everything", "reorderable"], DirectedEdge["acme-everything", "repa-bytestring"], DirectedEdge["acme-everything", "repa-examples"], DirectedEdge["acme-everything", "repa-fftw"], DirectedEdge["acme-everything", "repa-flow"], DirectedEdge["acme-everything", "repa-plugin"], DirectedEdge["acme-everything", "repa-series"], DirectedEdge["acme-everything", "repl"], DirectedEdge["acme-everything", "repl-toolkit"], DirectedEdge["acme-everything", "repline"], DirectedEdge["acme-everything", "repr"], DirectedEdge["acme-everything", "repr-tree-syb"], DirectedEdge["acme-everything", "representable-tries"], DirectedEdge["acme-everything", "request-monad"], DirectedEdge["acme-everything", "reserve"], DirectedEdge["acme-everything", "resolve-trivial-conflicts"], DirectedEdge["acme-everything", "resource-effect"], DirectedEdge["acme-everything", "resource-embed"], DirectedEdge["acme-everything", "resource-simple"], DirectedEdge["acme-everything", "rest-client"], DirectedEdge["acme-everything", "rest-happstack"], DirectedEdge["acme-everything", "rest-snap"], DirectedEdge["acme-everything", "rest-wai"], DirectedEdge["acme-everything", "RESTng"], DirectedEdge["acme-everything", "restricted-workers"], DirectedEdge["acme-everything", "restyle"], DirectedEdge["acme-everything", "resumable-exceptions"], DirectedEdge["acme-everything", "rethinkdb-model"], DirectedEdge["acme-everything", "rethinkdb-wereHamster"], DirectedEdge["acme-everything", "retryer"], DirectedEdge["acme-everything", "rev-state"], DirectedEdge["acme-everything", "revdectime"], DirectedEdge["acme-everything", "reverse-geocoding"], DirectedEdge["acme-everything", "reversi"], DirectedEdge["acme-everything", "ReviewBoard"], DirectedEdge["acme-everything", "rewrite"], DirectedEdge["acme-everything", "rewriting"], DirectedEdge["acme-everything", "rex"], DirectedEdge["acme-everything", "rezoom"], DirectedEdge["acme-everything", "rhythm-game-tutorial"], DirectedEdge["acme-everything", "RichConditional"], DirectedEdge["acme-everything", "ring-buffer"], DirectedEdge["acme-everything", "riot"], DirectedEdge["acme-everything", "ripple"], DirectedEdge["acme-everything", "ripple-federation"], DirectedEdge["acme-everything", "rivers"], DirectedEdge["acme-everything", "rmonad"], DirectedEdge["acme-everything", "RMP"], DirectedEdge["acme-everything", "RNAdesign"], DirectedEdge["acme-everything", "RNAdraw"], DirectedEdge["acme-everything", "RNAFoldProgs"], DirectedEdge["acme-everything", "RNAwolf"], DirectedEdge["acme-everything", "rng-utils"], DirectedEdge["acme-everything", "robots-txt"], DirectedEdge["acme-everything", "rocksdb-haskell"], DirectedEdge["acme-everything", "roguestar"], DirectedEdge["acme-everything", "roguestar-engine"], DirectedEdge["acme-everything", "roguestar-glut"], DirectedEdge["acme-everything", "rollbar"], DirectedEdge["acme-everything", "rolling-queue"], DirectedEdge["acme-everything", "RollingDirectory"], DirectedEdge["acme-everything", "romkan"], DirectedEdge["acme-everything", "rope"], DirectedEdge["acme-everything", "rosa"], DirectedEdge["acme-everything", "rose-trees"], DirectedEdge["acme-everything", "rosso"], DirectedEdge["acme-everything", "rotating-log"], DirectedEdge["acme-everything", "rounding"], DirectedEdge["acme-everything", "roundtrip-xml"], DirectedEdge["acme-everything", "route-generator"], DirectedEdge["acme-everything", "route-planning"], DirectedEdge["acme-everything", "rpc"], DirectedEdge["acme-everything", "rpf"], DirectedEdge["acme-everything", "rpm"], DirectedEdge["acme-everything", "rspp"], DirectedEdge["acme-everything", "rss2irc"], DirectedEdge["acme-everything", "rtorrent-rpc"], DirectedEdge["acme-everything", "rtorrent-state"], DirectedEdge["acme-everything", "rubberband"], DirectedEdge["acme-everything", "ruby-qq"], DirectedEdge["acme-everything", "ruler"], DirectedEdge["acme-everything", "ruler-core"], DirectedEdge["acme-everything", "rungekutta"], DirectedEdge["acme-everything", "runghc"], DirectedEdge["acme-everything", "runmemo"], DirectedEdge["acme-everything", "rws"], DirectedEdge["acme-everything", "RxHaskell"], DirectedEdge["acme-everything", "s3-signer"], DirectedEdge["acme-everything", "SableCC2Hs"], DirectedEdge["acme-everything", "safe-access"], DirectedEdge["acme-everything", "safe-failure-cme"], DirectedEdge["acme-everything", "safe-freeze"], DirectedEdge["acme-everything", "safe-globals"], DirectedEdge["acme-everything", "safe-lazy-io"], DirectedEdge["acme-everything", "safe-plugins"], DirectedEdge["acme-everything", "safeint"], DirectedEdge["acme-everything", "safer-file-handles-bytestring"], DirectedEdge["acme-everything", "safer-file-handles-text"], DirectedEdge["acme-everything", "saferoute"], DirectedEdge["acme-everything", "sai-shape-syb"], DirectedEdge["acme-everything", "Salsa"], DirectedEdge["acme-everything", "saltine-quickcheck"], DirectedEdge["acme-everything", "salvia-demo"], DirectedEdge["acme-everything", "samtools-conduit"], DirectedEdge["acme-everything", "samtools-enumerator"], DirectedEdge["acme-everything", "samtools-iteratee"], DirectedEdge["acme-everything", "sandlib"], DirectedEdge["acme-everything", "sandman"], DirectedEdge["acme-everything", "sarasvati"], DirectedEdge["acme-everything", "sat"], DirectedEdge["acme-everything", "sat-micro-hs"], DirectedEdge["acme-everything", "satchmo-examples"], DirectedEdge["acme-everything", "satchmo-funsat"], DirectedEdge["acme-everything", "satchmo-minisat"], DirectedEdge["acme-everything", "satchmo-toysat"], DirectedEdge["acme-everything", "SBench"], DirectedEdge["acme-everything", "scalable-server"], DirectedEdge["acme-everything", "scaleimage"], DirectedEdge["acme-everything", "scalpel"], DirectedEdge["acme-everything", "scan"], DirectedEdge["acme-everything", "scan-vector-machine"], DirectedEdge["acme-everything", "scat"], DirectedEdge["acme-everything", "scc"], DirectedEdge["acme-everything", "scenegraph"], DirectedEdge["acme-everything", "scgi"], DirectedEdge["acme-everything", "schedevr"], DirectedEdge["acme-everything", "schedyield"], DirectedEdge["acme-everything", "schonfinkeling"], DirectedEdge["acme-everything", "sci-ratio"], DirectedEdge["acme-everything", "science-constants-dimensional"], DirectedEdge["acme-everything", "SciFlow"], DirectedEdge["acme-everything", "scion"], DirectedEdge["acme-everything", "scion-browser"], DirectedEdge["acme-everything", "SConfig"], DirectedEdge["acme-everything", "scons2dot"], DirectedEdge["acme-everything", "scope-cairo"], DirectedEdge["acme-everything", "scottish"], DirectedEdge["acme-everything", "scotty-binding-play"], DirectedEdge["acme-everything", "scotty-blaze"], DirectedEdge["acme-everything", "scotty-cookie"], DirectedEdge["acme-everything", "scotty-fay"], DirectedEdge["acme-everything", "scotty-hastache"], DirectedEdge["acme-everything", "scotty-session"], DirectedEdge["acme-everything", "scotty-tls"], DirectedEdge["acme-everything", "scrabble-bot"], DirectedEdge["acme-everything", "ScratchFs"], DirectedEdge["acme-everything", "scrobble"], DirectedEdge["acme-everything", "scroll"], DirectedEdge["acme-everything", "scrz"], DirectedEdge["acme-everything", "Scurry"], DirectedEdge["acme-everything", "scyther-proof"], DirectedEdge["acme-everything", "sde-solver"], DirectedEdge["acme-everything", "sdf2p1-parser"], DirectedEdge["acme-everything", "SDL-mpeg"], DirectedEdge["acme-everything", "sdl2-image"], DirectedEdge["acme-everything", "SDL2-ttf"], DirectedEdge["acme-everything", "sdl2-ttf"], DirectedEdge["acme-everything", "sdnv"], DirectedEdge["acme-everything", "sdr"], DirectedEdge["acme-everything", "seacat"], DirectedEdge["acme-everything", "seal-module"], DirectedEdge["acme-everything", "search"], DirectedEdge["acme-everything", "sec"], DirectedEdge["acme-everything", "seclib"], DirectedEdge["acme-everything", "second-transfer"], DirectedEdge["acme-everything", "secret-santa"], DirectedEdge["acme-everything", "secrm"], DirectedEdge["acme-everything", "secure-sockets"], DirectedEdge["acme-everything", "SegmentTree"], DirectedEdge["acme-everything", "selectors"], DirectedEdge["acme-everything", "selenium"], DirectedEdge["acme-everything", "selenium-server"], DirectedEdge["acme-everything", "selfrestart"], DirectedEdge["acme-everything", "Semantique"], DirectedEdge["acme-everything", "semaphore-plus"], DirectedEdge["acme-everything", "semigroupoids-syntax"], DirectedEdge["acme-everything", "semigroups-actions"], DirectedEdge["acme-everything", "sendgrid-haskell"], DirectedEdge["acme-everything", "sensenet"], DirectedEdge["acme-everything", "senza"], DirectedEdge["acme-everything", "separated"], DirectedEdge["acme-everything", "SeqAlign"], DirectedEdge["acme-everything", "seqid-streams"], DirectedEdge["acme-everything", "seqloc-datafiles"], DirectedEdge["acme-everything", "sequence"], DirectedEdge["acme-everything", "sequor"], DirectedEdge["acme-everything", "serf"], DirectedEdge["acme-everything", "serial"], DirectedEdge["acme-everything", "serial-test-generators"], DirectedEdge["acme-everything", "servant-pandoc"], DirectedEdge["acme-everything", "servant-postgresql"], DirectedEdge["acme-everything", "servant-scotty"], DirectedEdge["acme-everything", "servius"], DirectedEdge["acme-everything", "ses-html-snaplet"], DirectedEdge["acme-everything", "SessionLogger"], DirectedEdge["acme-everything", "sessions"], DirectedEdge["acme-everything", "set-cover"], DirectedEdge["acme-everything", "setdown"], DirectedEdge["acme-everything", "setops"], DirectedEdge["acme-everything", "sexp-show"], DirectedEdge["acme-everything", "sexpr"], DirectedEdge["acme-everything", "sext"], DirectedEdge["acme-everything", "sfml-audio"], DirectedEdge["acme-everything", "SFML-control"], DirectedEdge["acme-everything", "sfmt"], DirectedEdge["acme-everything", "SGdemo"], DirectedEdge["acme-everything", "sgrep"], DirectedEdge["acme-everything", "shadower"], DirectedEdge["acme-everything", "shadowsocks"], DirectedEdge["acme-everything", "shady-graphics"], DirectedEdge["acme-everything", "shake-cabal-build"], DirectedEdge["acme-everything", "shake-extras"], DirectedEdge["acme-everything", "shake-language-c"], DirectedEdge["acme-everything", "shake-minify"], DirectedEdge["acme-everything", "shake-pack"], DirectedEdge["acme-everything", "shaker"], DirectedEdge["acme-everything", "shana"], DirectedEdge["acme-everything", "shapefile"], DirectedEdge["acme-everything", "shapely-data"], DirectedEdge["acme-everything", "shared-buffer"], DirectedEdge["acme-everything", "shared-memory"], DirectedEdge["acme-everything", "sharedio"], DirectedEdge["acme-everything", "shell-monad"], DirectedEdge["acme-everything", "shell-pipe"], DirectedEdge["acme-everything", "Shellac-haskeline"], DirectedEdge["acme-everything", "shellish"], DirectedEdge["acme-everything", "shelltestrunner"], DirectedEdge["acme-everything", "shelly-extra"], DirectedEdge["acme-everything", "shivers-cfg"], DirectedEdge["acme-everything", "shoap"], DirectedEdge["acme-everything", "shortcircuit"], DirectedEdge["acme-everything", "shorten-strings"], DirectedEdge["acme-everything", "show-type"], DirectedEdge["acme-everything", "showdown"], DirectedEdge["acme-everything", "shpider"], DirectedEdge["acme-everything", "shplit"], DirectedEdge["acme-everything", "shqq"], DirectedEdge["acme-everything", "Shrub"], DirectedEdge["acme-everything", "Shu-thing"], DirectedEdge["acme-everything", "sieve"], DirectedEdge["acme-everything", "sifflet"], DirectedEdge["acme-everything", "signals"], DirectedEdge["acme-everything", "signed-multiset"], DirectedEdge["acme-everything", "simd"], DirectedEdge["acme-everything", "simgi"], DirectedEdge["acme-everything", "simple-actors"], DirectedEdge["acme-everything", "simple-atom"], DirectedEdge["acme-everything", "simple-c-value"], DirectedEdge["acme-everything", "simple-conduit"], DirectedEdge["acme-everything", "simple-css"], DirectedEdge["acme-everything", "simple-firewire"], DirectedEdge["acme-everything", "simple-form"], DirectedEdge["acme-everything", "simple-genetic-algorithm"], DirectedEdge["acme-everything", "simple-index"], DirectedEdge["acme-everything", "simple-log-syslog"], DirectedEdge["acme-everything", "simple-neural-networks"], DirectedEdge["acme-everything", "simple-observer"], DirectedEdge["acme-everything", "simple-pascal"], DirectedEdge["acme-everything", "simple-postgresql-orm"], DirectedEdge["acme-everything", "simple-rope"], DirectedEdge["acme-everything", "simple-server"], DirectedEdge["acme-everything", "simple-session"], DirectedEdge["acme-everything", "simple-sessions"], DirectedEdge["acme-everything", "simple-smt"], DirectedEdge["acme-everything", "SimpleEA"], DirectedEdge["acme-everything", "SimpleGL"], DirectedEdge["acme-everything", "simpleirc-lens"], DirectedEdge["acme-everything", "SimpleLog"], DirectedEdge["acme-everything", "simplenote"], DirectedEdge["acme-everything", "simpleprelude"], DirectedEdge["acme-everything", "simplesmtpclient"], DirectedEdge["acme-everything", "simplessh"], DirectedEdge["acme-everything", "simplex"], DirectedEdge["acme-everything", "simseq"], DirectedEdge["acme-everything", "singleton-nats"], DirectedEdge["acme-everything", "sink"], DirectedEdge["acme-everything", "sirkel"], DirectedEdge["acme-everything", "sitemap"], DirectedEdge["acme-everything", "SizeCompare"], DirectedEdge["acme-everything", "sized"], DirectedEdge["acme-everything", "sizes"], DirectedEdge["acme-everything", "skell"], DirectedEdge["acme-everything", "skype4hs"], DirectedEdge["acme-everything", "skypelogexport"], DirectedEdge["acme-everything", "slack"], DirectedEdge["acme-everything", "slack-api"], DirectedEdge["acme-everything", "slave-thread"], DirectedEdge["acme-everything", "slice-cpp-gen"], DirectedEdge["acme-everything", "slidemews"], DirectedEdge["acme-everything", "sloane"], DirectedEdge["acme-everything", "slot-lambda"], DirectedEdge["acme-everything", "sloth"], DirectedEdge["acme-everything", "smallcheck-series"], DirectedEdge["acme-everything", "smallpt-hs"], DirectedEdge["acme-everything", "smallstring"], DirectedEdge["acme-everything", "smartconstructor"], DirectedEdge["acme-everything", "smartword"], DirectedEdge["acme-everything", "sme"], DirectedEdge["acme-everything", "Smooth"], DirectedEdge["acme-everything", "smoothie"], DirectedEdge["acme-everything", "smt-lib"], DirectedEdge["acme-everything", "SmtLib"], DirectedEdge["acme-everything", "smtp-mail"], DirectedEdge["acme-everything", "smtp-mail-ng"], DirectedEdge["acme-everything", "smtp2mta"], DirectedEdge["acme-everything", "SMTPClient"], DirectedEdge["acme-everything", "smtps-gmail"], DirectedEdge["acme-everything", "snake-game"], DirectedEdge["acme-everything", "snap-auth-cli"], DirectedEdge["acme-everything", "snap-blaze"], DirectedEdge["acme-everything", "snap-blaze-clay"], DirectedEdge["acme-everything", "snap-configuration-utilities"], DirectedEdge["acme-everything", "snap-cors"], DirectedEdge["acme-everything", "snap-elm"], DirectedEdge["acme-everything", "snap-error-collector"], DirectedEdge["acme-everything", "snap-predicates"], DirectedEdge["acme-everything", "snap-testing"], DirectedEdge["acme-everything", "snap-utils"], DirectedEdge["acme-everything", "snap-web-routes"], DirectedEdge["acme-everything", "snaplet-acid-state"], DirectedEdge["acme-everything", "snaplet-actionlog"], DirectedEdge["acme-everything", "snaplet-amqp"], DirectedEdge["acme-everything", "snaplet-auth-acid"], DirectedEdge["acme-everything", "snaplet-coffee"], DirectedEdge["acme-everything", "snaplet-css-min"], DirectedEdge["acme-everything", "snaplet-environments"], DirectedEdge["acme-everything", "snaplet-hasql"], DirectedEdge["acme-everything", "snaplet-haxl"], DirectedEdge["acme-everything", "snaplet-hdbc"], DirectedEdge["acme-everything", "snaplet-hslogger"], DirectedEdge["acme-everything", "snaplet-influxdb"], DirectedEdge["acme-everything", "snaplet-lss"], DirectedEdge["acme-everything", "snaplet-mandrill"], DirectedEdge["acme-everything", "snaplet-mongoDB"], DirectedEdge["acme-everything", "snaplet-mongodb-minimalistic"], DirectedEdge["acme-everything", "snaplet-mysql-simple"], DirectedEdge["acme-everything", "snaplet-oauth"], DirectedEdge["acme-everything", "snaplet-postmark"], DirectedEdge["acme-everything", "snaplet-purescript"], DirectedEdge["acme-everything", "snaplet-recaptcha"], DirectedEdge["acme-everything", "snaplet-redson"], DirectedEdge["acme-everything", "snaplet-rest"], DirectedEdge["acme-everything", "snaplet-riak"], DirectedEdge["acme-everything", "snaplet-sass"], DirectedEdge["acme-everything", "snaplet-sedna"], DirectedEdge["acme-everything", "snaplet-ses-html"], DirectedEdge["acme-everything", "snaplet-sqlite-simple"], DirectedEdge["acme-everything", "snaplet-stripe"], DirectedEdge["acme-everything", "snaplet-tasks"], DirectedEdge["acme-everything", "snaplet-typed-sessions"], DirectedEdge["acme-everything", "snappy-conduit"], DirectedEdge["acme-everything", "snappy-framing"], DirectedEdge["acme-everything", "snappy-iteratee"], DirectedEdge["acme-everything", "sndfile-enumerators"], DirectedEdge["acme-everything", "SNet"], DirectedEdge["acme-everything", "snippet-extractor"], DirectedEdge["acme-everything", "snm"], DirectedEdge["acme-everything", "snow-white"], DirectedEdge["acme-everything", "snowflake"], DirectedEdge["acme-everything", "snowglobe"], DirectedEdge["acme-everything", "Snusmumrik"], DirectedEdge["acme-everything", "soap-openssl"], DirectedEdge["acme-everything", "soap-tls"], DirectedEdge["acme-everything", "SoccerFunGL"], DirectedEdge["acme-everything", "sock2stream"], DirectedEdge["acme-everything", "socket-activation"], DirectedEdge["acme-everything", "socketio"], DirectedEdge["acme-everything", "soegtk"], DirectedEdge["acme-everything", "som"], DirectedEdge["acme-everything", "sonic-visualiser"], DirectedEdge["acme-everything", "Sonnex"], DirectedEdge["acme-everything", "SoOSiM"], DirectedEdge["acme-everything", "sophia"], DirectedEdge["acme-everything", "sort-by-pinyin"], DirectedEdge["acme-everything", "sorted"], DirectedEdge["acme-everything", "sorting"], DirectedEdge["acme-everything", "sorty"], DirectedEdge["acme-everything", "sound-collage"], DirectedEdge["acme-everything", "sounddelay"], DirectedEdge["acme-everything", "source-code-server"], DirectedEdge["acme-everything", "SourceGraph"], DirectedEdge["acme-everything", "sousit"], DirectedEdge["acme-everything", "soyuz"], DirectedEdge["acme-everything", "spacefill"], DirectedEdge["acme-everything", "SpaceInvaders"], DirectedEdge["acme-everything", "spacepart"], DirectedEdge["acme-everything", "SpacePrivateers"], DirectedEdge["acme-everything", "sparse"], DirectedEdge["acme-everything", "sparse-lin-alg"], DirectedEdge["acme-everything", "sparsebit"], DirectedEdge["acme-everything", "sparsecheck"], DirectedEdge["acme-everything", "sparser"], DirectedEdge["acme-everything", "spata"], DirectedEdge["acme-everything", "spe"], DirectedEdge["acme-everything", "special-keys"], DirectedEdge["acme-everything", "specialize-th"], DirectedEdge["acme-everything", "species"], DirectedEdge["acme-everything", "speculation-transformers"], DirectedEdge["acme-everything", "spelling-suggest"], DirectedEdge["acme-everything", "sphero"], DirectedEdge["acme-everything", "sphinx-cli"], DirectedEdge["acme-everything", "spice"], DirectedEdge["acme-everything", "spike"], DirectedEdge["acme-everything", "SpinCounter"], DirectedEdge["acme-everything", "spine"], DirectedEdge["acme-everything", "spir-v"], DirectedEdge["acme-everything", "splaytree"], DirectedEdge["acme-everything", "split-channel"], DirectedEdge["acme-everything", "split-record"], DirectedEdge["acme-everything", "split-tchan"], DirectedEdge["acme-everything", "splitter"], DirectedEdge["acme-everything", "splot"], DirectedEdge["acme-everything", "Spock-auth"], DirectedEdge["acme-everything", "Spock-digestive"], DirectedEdge["acme-everything", "Spock-worker"], DirectedEdge["acme-everything", "spool"], DirectedEdge["acme-everything", "spoty"], DirectedEdge["acme-everything", "spritz"], DirectedEdge["acme-everything", "spsa"], DirectedEdge["acme-everything", "spy"], DirectedEdge["acme-everything", "sql-simple-mysql"], DirectedEdge["acme-everything", "sql-simple-pool"], DirectedEdge["acme-everything", "sql-simple-postgresql"], DirectedEdge["acme-everything", "sql-simple-sqlite"], DirectedEdge["acme-everything", "SQLDeps"], DirectedEdge["acme-everything", "sqlite-simple-typed"], DirectedEdge["acme-everything", "sqlvalue-list"], DirectedEdge["acme-everything", "squeeze"], DirectedEdge["acme-everything", "sr-extra"], DirectedEdge["acme-everything", "srcinst"], DirectedEdge["acme-everything", "srec"], DirectedEdge["acme-everything", "sscgi"], DirectedEdge["acme-everything", "sshd-lint"], DirectedEdge["acme-everything", "sshtun"], DirectedEdge["acme-everything", "sssp"], DirectedEdge["acme-everything", "sstable"], DirectedEdge["acme-everything", "ssv"], DirectedEdge["acme-everything", "stable-memo"], DirectedEdge["acme-everything", "stackage"], DirectedEdge["acme-everything", "standalone-haddock"], DirectedEdge["acme-everything", "star-to-star-contra"], DirectedEdge["acme-everything", "starling"], DirectedEdge["acme-everything", "Stasis"], DirectedEdge["acme-everything", "state"], DirectedEdge["acme-everything", "state-record"], DirectedEdge["acme-everything", "statechart"], DirectedEdge["acme-everything", "statethread"], DirectedEdge["acme-everything", "stateWriter"], DirectedEdge["acme-everything", "statgrab"], DirectedEdge["acme-everything", "static-resources"], DirectedEdge["acme-everything", "statistics-dirichlet"], DirectedEdge["acme-everything", "statistics-fusion"], DirectedEdge["acme-everything", "statistics-hypergeometric-genvar"], DirectedEdge["acme-everything", "statistics-linreg"], DirectedEdge["acme-everything", "stats"], DirectedEdge["acme-everything", "statsd"], DirectedEdge["acme-everything", "statsd-datadog"], DirectedEdge["acme-everything", "statvfs"], DirectedEdge["acme-everything", "stdata"], DirectedEdge["acme-everything", "steambrowser"], DirectedEdge["acme-everything", "steeloverseer"], DirectedEdge["acme-everything", "stemmer"], DirectedEdge["acme-everything", "step-function"], DirectedEdge["acme-everything", "stepwise"], DirectedEdge["acme-everything", "stickyKeysHotKey"], DirectedEdge["acme-everything", "stitch"], DirectedEdge["acme-everything", "stm-channelize"], DirectedEdge["acme-everything", "stm-chunked-queues"], DirectedEdge["acme-everything", "stm-lifted"], DirectedEdge["acme-everything", "stm-linkedlist"], DirectedEdge["acme-everything", "stm-orelse-io"], DirectedEdge["acme-everything", "stm-promise"], DirectedEdge["acme-everything", "stm-sbchan"], DirectedEdge["acme-everything", "stm-stats"], DirectedEdge["acme-everything", "stmcontrol"], DirectedEdge["acme-everything", "Stomp"], DirectedEdge["acme-everything", "stomp-conduit"], DirectedEdge["acme-everything", "stomp-patterns"], DirectedEdge["acme-everything", "storable"], DirectedEdge["acme-everything", "storable-static-array"], DirectedEdge["acme-everything", "storablevector-streamfusion"], DirectedEdge["acme-everything", "str"], DirectedEdge["acme-everything", "Strafunski-Sdf2Haskell"], DirectedEdge["acme-everything", "StrategyLib"], DirectedEdge["acme-everything", "stratum-tool"], DirectedEdge["acme-everything", "streamed"], DirectedEdge["acme-everything", "streaming-histogram"], DirectedEdge["acme-everything", "streamproc"], DirectedEdge["acme-everything", "strict-ghc-plugin"], DirectedEdge["acme-everything", "strict-identity"], DirectedEdge["acme-everything", "StrictBench"], DirectedEdge["acme-everything", "strictify"], DirectedEdge["acme-everything", "strictly"], DirectedEdge["acme-everything", "string"], DirectedEdge["acme-everything", "string-convert"], DirectedEdge["acme-everything", "string-quote"], DirectedEdge["acme-everything", "string-similarity"], DirectedEdge["acme-everything", "stringbuilder"], DirectedEdge["acme-everything", "stringlike"], DirectedEdge["acme-everything", "stripe-haskell"], DirectedEdge["acme-everything", "strive"], DirectedEdge["acme-everything", "structural-induction"], DirectedEdge["acme-everything", "structured-haskell-mode"], DirectedEdge["acme-everything", "structured-mongoDB"], DirectedEdge["acme-everything", "structures"], DirectedEdge["acme-everything", "stunclient"], DirectedEdge["acme-everything", "stunts"], DirectedEdge["acme-everything", "stylized"], DirectedEdge["acme-everything", "subnet"], DirectedEdge["acme-everything", "subtitleParser"], DirectedEdge["acme-everything", "subtitles"], DirectedEdge["acme-everything", "suffixarray"], DirectedEdge["acme-everything", "sugarhaskell"], DirectedEdge["acme-everything", "sundown"], DirectedEdge["acme-everything", "sunlight"], DirectedEdge["acme-everything", "sunroof-examples"], DirectedEdge["acme-everything", "supercollider-midi"], DirectedEdge["acme-everything", "supero"], DirectedEdge["acme-everything", "supervisor"], DirectedEdge["acme-everything", "SVG2Q"], DirectedEdge["acme-everything", "svg2q"], DirectedEdge["acme-everything", "svm"], DirectedEdge["acme-everything", "svm-light-utils"], DirectedEdge["acme-everything", "svm-simple"], DirectedEdge["acme-everything", "swagger"], DirectedEdge["acme-everything", "swapper"], DirectedEdge["acme-everything", "swearjure"], DirectedEdge["acme-everything", "swf"], DirectedEdge["acme-everything", "SWMMoutGetMB"], DirectedEdge["acme-everything", "sws"], DirectedEdge["acme-everything", "syb-extras"], DirectedEdge["acme-everything", "sylvia"], DirectedEdge["acme-everything", "sym-plot"], DirectedEdge["acme-everything", "sync"], DirectedEdge["acme-everything", "syncthing-hs"], DirectedEdge["acme-everything", "synt"], DirectedEdge["acme-everything", "syntactical"], DirectedEdge["acme-everything", "syntax-example"], DirectedEdge["acme-everything", "syntax-example-json"], DirectedEdge["acme-everything", "syntax-pretty"], DirectedEdge["acme-everything", "syntax-trees"], DirectedEdge["acme-everything", "SyntaxMacros"], DirectedEdge["acme-everything", "synthesizer"], DirectedEdge["acme-everything", "synthesizer-alsa"], DirectedEdge["acme-everything", "synthesizer-inference"], DirectedEdge["acme-everything", "synthesizer-llvm"], DirectedEdge["acme-everything", "Sysmon"], DirectedEdge["acme-everything", "system-canonicalpath"], DirectedEdge["acme-everything", "system-command"], DirectedEdge["acme-everything", "system-gpio"], DirectedEdge["acme-everything", "system-inotify"], DirectedEdge["acme-everything", "system-random-effect"], DirectedEdge["acme-everything", "system-time-monotonic"], DirectedEdge["acme-everything", "system-util"], DirectedEdge["acme-everything", "systemd"], DirectedEdge["acme-everything", "t-regex"], DirectedEdge["acme-everything", "ta"], DirectedEdge["acme-everything", "table"], DirectedEdge["acme-everything", "table-tennis"], DirectedEdge["acme-everything", "tableaux"], DirectedEdge["acme-everything", "Tables"], DirectedEdge["acme-everything", "tablestorage"], DirectedEdge["acme-everything", "Tablify"], DirectedEdge["acme-everything", "tabloid"], DirectedEdge["acme-everything", "taffybar"], DirectedEdge["acme-everything", "tag-bits"], DirectedEdge["acme-everything", "tag-stream"], DirectedEdge["acme-everything", "tagged-binary"], DirectedEdge["acme-everything", "tagged-list"], DirectedEdge["acme-everything", "tagged-th"], DirectedEdge["acme-everything", "tagged-transformer"], DirectedEdge["acme-everything", "tagging"], DirectedEdge["acme-everything", "taglib"], DirectedEdge["acme-everything", "taglib-api"], DirectedEdge["acme-everything", "tagsoup-ht"], DirectedEdge["acme-everything", "takahashi"], DirectedEdge["acme-everything", "takusen-oracle"], DirectedEdge["acme-everything", "tamarin-prover"], DirectedEdge["acme-everything", "tamper"], DirectedEdge["acme-everything", "tardis"], DirectedEdge["acme-everything", "target"], DirectedEdge["acme-everything", "task"], DirectedEdge["acme-everything", "taskpool"], DirectedEdge["acme-everything", "tasty-ant-xml"], DirectedEdge["acme-everything", "tasty-golden"], DirectedEdge["acme-everything", "tasty-html"], DirectedEdge["acme-everything", "tasty-hunit-adapter"], DirectedEdge["acme-everything", "tasty-integrate"], DirectedEdge["acme-everything", "tasty-kat"], DirectedEdge["acme-everything", "tasty-program"], DirectedEdge["acme-everything", "tasty-silver"], DirectedEdge["acme-everything", "tasty-th"], DirectedEdge["acme-everything", "tau"], DirectedEdge["acme-everything", "TBC"], DirectedEdge["acme-everything", "TBit"], DirectedEdge["acme-everything", "tbox"], DirectedEdge["acme-everything", "tcache-AWS"], DirectedEdge["acme-everything", "tccli"], DirectedEdge["acme-everything", "tce-conf"], DirectedEdge["acme-everything", "tcp"], DirectedEdge["acme-everything", "tdd-util"], DirectedEdge["acme-everything", "tdoc"], DirectedEdge["acme-everything", "TeaHS"], DirectedEdge["acme-everything", "teams"], DirectedEdge["acme-everything", "teeth"], DirectedEdge["acme-everything", "tellbot"], DirectedEdge["acme-everything", "template-default"], DirectedEdge["acme-everything", "template-hsml"], DirectedEdge["acme-everything", "templatepg"], DirectedEdge["acme-everything", "tempodb"], DirectedEdge["acme-everything", "temporal-csound"], DirectedEdge["acme-everything", "temporal-music-notation-demo"], DirectedEdge["acme-everything", "temporary-resourcet"], DirectedEdge["acme-everything", "tempus"], DirectedEdge["acme-everything", "Tensor"], DirectedEdge["acme-everything", "tensor"], DirectedEdge["acme-everything", "term-rewriting"], DirectedEdge["acme-everything", "termination-combinators"], DirectedEdge["acme-everything", "terminfo-hs"], DirectedEdge["acme-everything", "TernaryTrees"], DirectedEdge["acme-everything", "terrahs"], DirectedEdge["acme-everything", "tersmu"], DirectedEdge["acme-everything", "test-framework-doctest"], DirectedEdge["acme-everything", "test-framework-golden"], DirectedEdge["acme-everything", "test-framework-program"], DirectedEdge["acme-everything", "test-framework-sandbox"], DirectedEdge["acme-everything", "test-framework-skip"], DirectedEdge["acme-everything", "test-framework-smallcheck"], DirectedEdge["acme-everything", "test-framework-testing-feat"], DirectedEdge["acme-everything", "test-framework-th-prime"], DirectedEdge["acme-everything", "test-invariant"], DirectedEdge["acme-everything", "test-pkg"], DirectedEdge["acme-everything", "test-sandbox-hunit"], DirectedEdge["acme-everything", "test-sandbox-quickcheck"], DirectedEdge["acme-everything", "test-simple"], DirectedEdge["acme-everything", "testloop"], DirectedEdge["acme-everything", "testpack"], DirectedEdge["acme-everything", "testpattern"], DirectedEdge["acme-everything", "testPkg"], DirectedEdge["acme-everything", "testrunner"], DirectedEdge["acme-everything", "tetris"], DirectedEdge["acme-everything", "tex2txt"], DirectedEdge["acme-everything", "text-and-plots"], DirectedEdge["acme-everything", "text-icu-translit"], DirectedEdge["acme-everything", "text-json-qq"], DirectedEdge["acme-everything", "text-normal"], DirectedEdge["acme-everything", "text-position"], DirectedEdge["acme-everything", "text-regex-replace"], DirectedEdge["acme-everything", "text-register-machine"], DirectedEdge["acme-everything", "text-show-instances"], DirectedEdge["acme-everything", "text-stream-decode"], DirectedEdge["acme-everything", "text-xml-generic"], DirectedEdge["acme-everything", "text-xml-qq"], DirectedEdge["acme-everything", "textmatetags"], DirectedEdge["acme-everything", "textPlot"], DirectedEdge["acme-everything", "texts"], DirectedEdge["acme-everything", "tfp-th"], DirectedEdge["acme-everything", "tga"], DirectedEdge["acme-everything", "th-alpha"], DirectedEdge["acme-everything", "th-build"], DirectedEdge["acme-everything", "th-context"], DirectedEdge["acme-everything", "th-fold"], DirectedEdge["acme-everything", "th-inline-io-action"], DirectedEdge["acme-everything", "th-instances"], DirectedEdge["acme-everything", "th-lift-instances"], DirectedEdge["acme-everything", "themplate"], DirectedEdge["acme-everything", "Theora"], DirectedEdge["acme-everything", "theoremquest-client"], DirectedEdge["acme-everything", "thespian"], DirectedEdge["acme-everything", "theta-functions"], DirectedEdge["acme-everything", "thih"], DirectedEdge["acme-everything", "thimk"], DirectedEdge["acme-everything", "Thingie"], DirectedEdge["acme-everything", "thorn"], DirectedEdge["acme-everything", "thread-local-storage"], DirectedEdge["acme-everything", "ThreadObjects"], DirectedEdge["acme-everything", "threadPool"], DirectedEdge["acme-everything", "threads-pool"], DirectedEdge["acme-everything", "threadscope"], DirectedEdge["acme-everything", "thrift"], DirectedEdge["acme-everything", "throttle"], DirectedEdge["acme-everything", "thumbnail"], DirectedEdge["acme-everything", "thumbnail-plus"], DirectedEdge["acme-everything", "tianbar"], DirectedEdge["acme-everything", "tic-tac-toe"], DirectedEdge["acme-everything", "tickle"], DirectedEdge["acme-everything", "TicTacToe"], DirectedEdge["acme-everything", "tidal-midi"], DirectedEdge["acme-everything", "tidal-vis"], DirectedEdge["acme-everything", "tie-knot"], DirectedEdge["acme-everything", "tiempo"], DirectedEdge["acme-everything", "tiger"], DirectedEdge["acme-everything", "TigerHash"], DirectedEdge["acme-everything", "tightrope"], DirectedEdge["acme-everything", "tilings"], DirectedEdge["acme-everything", "timberc"], DirectedEdge["acme-everything", "time-extras"], DirectedEdge["acme-everything", "time-exts"], DirectedEdge["acme-everything", "time-io-access"], DirectedEdge["acme-everything", "time-lens"], DirectedEdge["acme-everything", "time-patterns"], DirectedEdge["acme-everything", "time-w3c"], DirectedEdge["acme-everything", "timecalc"], DirectedEdge["acme-everything", "timeout"], DirectedEdge["acme-everything", "timeout-control"], DirectedEdge["acme-everything", "timeout-with-results"], DirectedEdge["acme-everything", "timeparsers"], DirectedEdge["acme-everything", "TimePiece"], DirectedEdge["acme-everything", "timeplot"], DirectedEdge["acme-everything", "timestamp-subprocess-lines"], DirectedEdge["acme-everything", "timestamper"], DirectedEdge["acme-everything", "timezone-olson-th"], DirectedEdge["acme-everything", "timing-convenience"], DirectedEdge["acme-everything", "TinyLaunchbury"], DirectedEdge["acme-everything", "tinyMesh"], DirectedEdge["acme-everything", "tinytemplate"], DirectedEdge["acme-everything", "TinyURL"], DirectedEdge["acme-everything", "Titim"], DirectedEdge["acme-everything", "titlecase"], DirectedEdge["acme-everything", "tkhs"], DirectedEdge["acme-everything", "tkyprof"], DirectedEdge["acme-everything", "tls-debug"], DirectedEdge["acme-everything", "tmpl"], DirectedEdge["acme-everything", "tn"], DirectedEdge["acme-everything", "to-haskell"], DirectedEdge["acme-everything", "to-string-instances"], DirectedEdge["acme-everything", "todos"], DirectedEdge["acme-everything", "tofromxml"], DirectedEdge["acme-everything", "toilet"], DirectedEdge["acme-everything", "toktok"], DirectedEdge["acme-everything", "tokyotyrant-haskell"], DirectedEdge["acme-everything", "tomato-rubato-openal"], DirectedEdge["acme-everything", "toml"], DirectedEdge["acme-everything", "topkata"], DirectedEdge["acme-everything", "torch"], DirectedEdge["acme-everything", "total"], DirectedEdge["acme-everything", "total-map"], DirectedEdge["acme-everything", "total-maps"], DirectedEdge["acme-everything", "Tournament"], DirectedEdge["acme-everything", "tpdb"], DirectedEdge["acme-everything", "trace-call"], DirectedEdge["acme-everything", "trace-function-call"], DirectedEdge["acme-everything", "traced"], DirectedEdge["acme-everything", "tracer"], DirectedEdge["acme-everything", "TraceUtils"], DirectedEdge["acme-everything", "tracker"], DirectedEdge["acme-everything", "trajectory"], DirectedEdge["acme-everything", "transactional-events"], DirectedEdge["acme-everything", "transf"], DirectedEdge["acme-everything", "transformations"], DirectedEdge["acme-everything", "transformers-convert"], DirectedEdge["acme-everything", "transformers-runnable"], DirectedEdge["acme-everything", "transformers-supply"], DirectedEdge["acme-everything", "TransformersStepByStep"], DirectedEdge["acme-everything", "Transhare"], DirectedEdge["acme-everything", "translatable-intset"], DirectedEdge["acme-everything", "translate"], DirectedEdge["acme-everything", "traypoweroff"], DirectedEdge["acme-everything", "TreeCounter"], DirectedEdge["acme-everything", "treemap-html-tools"], DirectedEdge["acme-everything", "TreeStructures"], DirectedEdge["acme-everything", "TreeT"], DirectedEdge["acme-everything", "treeviz"], DirectedEdge["acme-everything", "Treiber"], DirectedEdge["acme-everything", "TrendGraph"], DirectedEdge["acme-everything", "trhsx"], DirectedEdge["acme-everything", "triangulation"], DirectedEdge["acme-everything", "trimpolya"], DirectedEdge["acme-everything", "trivia"], DirectedEdge["acme-everything", "trivial-constraint"], DirectedEdge["acme-everything", "tropical"], DirectedEdge["acme-everything", "true-name"], DirectedEdge["acme-everything", "truelevel"], DirectedEdge["acme-everything", "tsession-happstack"], DirectedEdge["acme-everything", "tskiplist"], DirectedEdge["acme-everything", "tslogger"], DirectedEdge["acme-everything", "tsp-viz"], DirectedEdge["acme-everything", "tsparse"], DirectedEdge["acme-everything", "ttrie"], DirectedEdge["acme-everything", "tttool"], DirectedEdge["acme-everything", "tuntap"], DirectedEdge["acme-everything", "tup-functor"], DirectedEdge["acme-everything", "tuple-hlist"], DirectedEdge["acme-everything", "tuple-lenses"], DirectedEdge["acme-everything", "tuple-th"], DirectedEdge["acme-everything", "tupleinstances"], DirectedEdge["acme-everything", "turing-music"], DirectedEdge["acme-everything", "turni"], DirectedEdge["acme-everything", "tweak"], DirectedEdge["acme-everything", "twentefp"], DirectedEdge["acme-everything", "twentefp-eventloop-trees"], DirectedEdge["acme-everything", "twentefp-graphs"], DirectedEdge["acme-everything", "twentefp-rosetree"], DirectedEdge["acme-everything", "twentefp-trees"], DirectedEdge["acme-everything", "twhs"], DirectedEdge["acme-everything", "twidge"], DirectedEdge["acme-everything", "twilight-stm"], DirectedEdge["acme-everything", "twilio"], DirectedEdge["acme-everything", "twill"], DirectedEdge["acme-everything", "twiml"], DirectedEdge["acme-everything", "twisty"], DirectedEdge["acme-everything", "twitch"], DirectedEdge["acme-everything", "twitter"], DirectedEdge["acme-everything", "twitter-enumerator"], DirectedEdge["acme-everything", "twitter-feed"], DirectedEdge["acme-everything", "Twofish"], DirectedEdge["acme-everything", "tx"], DirectedEdge["acme-everything", "txt2rtf"], DirectedEdge["acme-everything", "txtblk"], DirectedEdge["acme-everything", "TYB"], DirectedEdge["acme-everything", "typalyze"], DirectedEdge["acme-everything", "type"], DirectedEdge["acme-everything", "type-booleans"], DirectedEdge["acme-everything", "type-equality-check"], DirectedEdge["acme-everything", "type-int"], DirectedEdge["acme-everything", "type-iso"], DirectedEdge["acme-everything", "type-level-bst"], DirectedEdge["acme-everything", "type-list"], DirectedEdge["acme-everything", "type-prelude"], DirectedEdge["acme-everything", "type-settheory"], DirectedEdge["acme-everything", "type-structure"], DirectedEdge["acme-everything", "typeable-th"], DirectedEdge["acme-everything", "TypeClass"], DirectedEdge["acme-everything", "typehash"], DirectedEdge["acme-everything", "TypeIlluminator"], DirectedEdge["acme-everything", "TypeNat"], DirectedEdge["acme-everything", "typeof"], DirectedEdge["acme-everything", "typeparams"], DirectedEdge["acme-everything", "typescript-docs"], DirectedEdge["acme-everything", "TypingTester"], DirectedEdge["acme-everything", "tz"], DirectedEdge["acme-everything", "ua-parser"], DirectedEdge["acme-everything", "uacpid"], DirectedEdge["acme-everything", "uAgda"], DirectedEdge["acme-everything", "uberlast"], DirectedEdge["acme-everything", "uconv"], DirectedEdge["acme-everything", "udbus-model"], DirectedEdge["acme-everything", "udcode"], DirectedEdge["acme-everything", "uhexdump"], DirectedEdge["acme-everything", "uid"], DirectedEdge["acme-everything", "UMM"], DirectedEdge["acme-everything", "una"], DirectedEdge["acme-everything", "unagi-streams"], DirectedEdge["acme-everything", "unamb-custom"], DirectedEdge["acme-everything", "unbounded-delays-units"], DirectedEdge["acme-everything", "unboxed-containers"], DirectedEdge["acme-everything", "unfoldable"], DirectedEdge["acme-everything", "ungadtagger"], DirectedEdge["acme-everything", "uni-uDrawGraph"], DirectedEdge["acme-everything", "unicode"], DirectedEdge["acme-everything", "unicode-names"], DirectedEdge["acme-everything", "unicode-normalization"], DirectedEdge["acme-everything", "unicode-prelude"], DirectedEdge["acme-everything", "unicode-symbols"], DirectedEdge["acme-everything", "unicoder"], DirectedEdge["acme-everything", "uniform-pair"], DirectedEdge["acme-everything", "union-map"], DirectedEdge["acme-everything", "Unique"], DirectedEdge["acme-everything", "unique-logic"], DirectedEdge["acme-everything", "unique-logic-tf"], DirectedEdge["acme-everything", "uniqueid"], DirectedEdge["acme-everything", "units-parser"], DirectedEdge["acme-everything", "unittyped"], DirectedEdge["acme-everything", "universal-binary"], DirectedEdge["acme-everything", "universe"], DirectedEdge["acme-everything", "unix-handle"], DirectedEdge["acme-everything", "unix-io-extra"], DirectedEdge["acme-everything", "unix-memory"], DirectedEdge["acme-everything", "unix-process-conduit"], DirectedEdge["acme-everything", "unix-pty-light"], DirectedEdge["acme-everything", "Unixutils-shadow"], DirectedEdge["acme-everything", "unlit"], DirectedEdge["acme-everything", "unm-hip"], DirectedEdge["acme-everything", "unordered-containers-rematch"], DirectedEdge["acme-everything", "unroll-ghc-plugin"], DirectedEdge["acme-everything", "unsafe-promises"], DirectedEdge["acme-everything", "unsafeperformst"], DirectedEdge["acme-everything", "unscramble"], DirectedEdge["acme-everything", "unusable-pkg"], DirectedEdge["acme-everything", "up"], DirectedEdge["acme-everything", "up-grade"], DirectedEdge["acme-everything", "uploadcare"], DirectedEdge["acme-everything", "upskirt"], DirectedEdge["acme-everything", "ureader"], DirectedEdge["acme-everything", "urembed"], DirectedEdge["acme-everything", "uri-bytestring"], DirectedEdge["acme-everything", "uri-enumerator-file"], DirectedEdge["acme-everything", "url-generic"], DirectedEdge["acme-everything", "URLb"], DirectedEdge["acme-everything", "urlcheck"], DirectedEdge["acme-everything", "urldecode"], DirectedEdge["acme-everything", "UrlDisp"], DirectedEdge["acme-everything", "urldisp-happstack"], DirectedEdge["acme-everything", "URLT"], DirectedEdge["acme-everything", "urn"], DirectedEdge["acme-everything", "urxml"], DirectedEdge["acme-everything", "usb-enumerator"], DirectedEdge["acme-everything", "usb-hid"], DirectedEdge["acme-everything", "usb-iteratee"], DirectedEdge["acme-everything", "usb-safe"], DirectedEdge["acme-everything", "Useful"], DirectedEdge["acme-everything", "users-postgresql-simple"], DirectedEdge["acme-everything", "users-test"], DirectedEdge["acme-everything", "utc"], DirectedEdge["acme-everything", "utf8-prelude"], DirectedEdge["acme-everything", "UtilityTM"], DirectedEdge["acme-everything", "uu-cco-examples"], DirectedEdge["acme-everything", "uu-cco-hut-parsing"], DirectedEdge["acme-everything", "uu-cco-uu-parsinglib"], DirectedEdge["acme-everything", "uu-options"], DirectedEdge["acme-everything", "uu-tc"], DirectedEdge["acme-everything", "uuagc-bootstrap"], DirectedEdge["acme-everything", "uuagc-diagrams"], DirectedEdge["acme-everything", "uuagd"], DirectedEdge["acme-everything", "uuid-aeson"], DirectedEdge["acme-everything", "uuid-le"], DirectedEdge["acme-everything", "uuid-quasi"], DirectedEdge["acme-everything", "uvector-algorithms"], DirectedEdge["acme-everything", "uzbl-with-source"], DirectedEdge["acme-everything", "v4l2-examples"], DirectedEdge["acme-everything", "vacuum-cairo"], DirectedEdge["acme-everything", "vacuum-graphviz"], DirectedEdge["acme-everything", "vacuum-opengl"], DirectedEdge["acme-everything", "vacuum-ubigraph"], DirectedEdge["acme-everything", "valid-names"], DirectedEdge["acme-everything", "validate"], DirectedEdge["acme-everything", "validate-input"], DirectedEdge["acme-everything", "Validation"], DirectedEdge["acme-everything", "validations"], DirectedEdge["acme-everything", "vampire"], DirectedEdge["acme-everything", "var"], DirectedEdge["acme-everything", "varan"], DirectedEdge["acme-everything", "variable-precision"], DirectedEdge["acme-everything", "variables"], DirectedEdge["acme-everything", "vcache-trie"], DirectedEdge["acme-everything", "vcard"], DirectedEdge["acme-everything", "VecN"], DirectedEdge["acme-everything", "vect-floating-accelerate"], DirectedEdge["acme-everything", "vect-opengl"], DirectedEdge["acme-everything", "vector-buffer"], DirectedEdge["acme-everything", "vector-clock"], DirectedEdge["acme-everything", "vector-conduit"], DirectedEdge["acme-everything", "vector-functorlazy"], DirectedEdge["acme-everything", "vector-instances-collections"], DirectedEdge["acme-everything", "vector-mmap"], DirectedEdge["acme-everything", "vector-random"], DirectedEdge["acme-everything", "vector-space-map"], DirectedEdge["acme-everything", "vector-space-opengl"], DirectedEdge["acme-everything", "vector-static"], DirectedEdge["acme-everything", "vector-strategies"], DirectedEdge["acme-everything", "verbalexpressions"], DirectedEdge["acme-everything", "verilog"], DirectedEdge["acme-everything", "vhd"], DirectedEdge["acme-everything", "ViennaRNAParser"], DirectedEdge["acme-everything", "views"], DirectedEdge["acme-everything", "vigilance"], DirectedEdge["acme-everything", "vintage-basic"], DirectedEdge["acme-everything", "vinyl-gl"], DirectedEdge["acme-everything", "vinyl-json"], DirectedEdge["acme-everything", "vinyl-utils"], DirectedEdge["acme-everything", "virthualenv"], DirectedEdge["acme-everything", "vision"], DirectedEdge["acme-everything", "visual-graphrewrite"], DirectedEdge["acme-everything", "visual-prof"], DirectedEdge["acme-everything", "vivid"], DirectedEdge["acme-everything", "VKHS"], DirectedEdge["acme-everything", "vorbiscomment"], DirectedEdge["acme-everything", "vowpal-utils"], DirectedEdge["acme-everything", "voyeur"], DirectedEdge["acme-everything", "vty-examples"], DirectedEdge["acme-everything", "vty-ui-extras"], DirectedEdge["acme-everything", "wai-digestive-functors"], DirectedEdge["acme-everything", "wai-dispatch"], DirectedEdge["acme-everything", "wai-frontend-monadcgi"], DirectedEdge["acme-everything", "wai-graceful"], DirectedEdge["acme-everything", "wai-handler-devel"], DirectedEdge["acme-everything", "wai-handler-scgi"], DirectedEdge["acme-everything", "wai-handler-snap"], DirectedEdge["acme-everything", "wai-handler-webkit"], DirectedEdge["acme-everything", "wai-hastache"], DirectedEdge["acme-everything", "wai-hmac-auth"], DirectedEdge["acme-everything", "wai-lite"], DirectedEdge["acme-everything", "wai-logger-prefork"], DirectedEdge["acme-everything", "wai-middleware-cache-redis"], DirectedEdge["acme-everything", "wai-middleware-catch"], DirectedEdge["acme-everything", "wai-middleware-etag"], DirectedEdge["acme-everything", "wai-middleware-headers"], DirectedEdge["acme-everything", "wai-middleware-hmac"], DirectedEdge["acme-everything", "wai-middleware-preprocessor"], DirectedEdge["acme-everything", "wai-middleware-route"], DirectedEdge["acme-everything", "wai-middleware-static-caching"], DirectedEdge["acme-everything", "wai-middleware-throttle"], DirectedEdge["acme-everything", "wai-request-spec"], DirectedEdge["acme-everything", "wai-responsible"], DirectedEdge["acme-everything", "wai-router"], DirectedEdge["acme-everything", "wai-routes"], DirectedEdge["acme-everything", "wai-routing"], DirectedEdge["acme-everything", "wai-session-clientsession"], DirectedEdge["acme-everything", "wai-session-tokyocabinet"], DirectedEdge["acme-everything", "wai-static-cache"], DirectedEdge["acme-everything", "wai-static-pages"], DirectedEdge["acme-everything", "wai-throttler"], DirectedEdge["acme-everything", "wait-handle"], DirectedEdge["acme-everything", "waitfree"], DirectedEdge["acme-everything", "waitra"], DirectedEdge["acme-everything", "warp-static"], DirectedEdge["acme-everything", "WashNGo"], DirectedEdge["acme-everything", "watcher"], DirectedEdge["acme-everything", "watchit"], DirectedEdge["acme-everything", "wavconvert"], DirectedEdge["acme-everything", "wavesurfer"], DirectedEdge["acme-everything", "Weather"], DirectedEdge["acme-everything", "weather-api"], DirectedEdge["acme-everything", "web-browser-in-haskell"], DirectedEdge["acme-everything", "web-fpco"], DirectedEdge["acme-everything", "web-page"], DirectedEdge["acme-everything", "web-routes-quasi"], DirectedEdge["acme-everything", "web-routes-transformers"], DirectedEdge["acme-everything", "WebBits-multiplate"], DirectedEdge["acme-everything", "WebCont"], DirectedEdge["acme-everything", "webdriver-angular"], DirectedEdge["acme-everything", "webdriver-snoy"], DirectedEdge["acme-everything", "WeberLogic"], DirectedEdge["acme-everything", "webidl"], DirectedEdge["acme-everything", "webify"], DirectedEdge["acme-everything", "webkit-javascriptcore"], DirectedEdge["acme-everything", "webpage"], DirectedEdge["acme-everything", "Webrexp"], DirectedEdge["acme-everything", "websnap"], DirectedEdge["acme-everything", "webwire"], DirectedEdge["acme-everything", "wedding-announcement"], DirectedEdge["acme-everything", "wedged"], DirectedEdge["acme-everything", "weighted-search"], DirectedEdge["acme-everything", "welshy"], DirectedEdge["acme-everything", "wheb-mongo"], DirectedEdge["acme-everything", "wheb-redis"], DirectedEdge["acme-everything", "wheb-strapped"], DirectedEdge["acme-everything", "while-lang-parser"], DirectedEdge["acme-everything", "whim"], DirectedEdge["acme-everything", "whiskers"], DirectedEdge["acme-everything", "whitespace"], DirectedEdge["acme-everything", "whois"], DirectedEdge["acme-everything", "WikimediaParser"], DirectedEdge["acme-everything", "wikipedia4epub"], DirectedEdge["acme-everything", "Win32-dhcp-server"], DirectedEdge["acme-everything", "Win32-extras"], DirectedEdge["acme-everything", "Win32-junction-point"], DirectedEdge["acme-everything", "Win32-security"], DirectedEdge["acme-everything", "Win32-services-wrapper"], DirectedEdge["acme-everything", "windowslive"], DirectedEdge["acme-everything", "winio"], DirectedEdge["acme-everything", "Wired"], DirectedEdge["acme-everything", "wiring"], DirectedEdge["acme-everything", "witty"], DirectedEdge["acme-everything", "wkt"], DirectedEdge["acme-everything", "wl-pprint-ansiterm"], DirectedEdge["acme-everything", "WL500gPControl"], DirectedEdge["acme-everything", "WMSigner"], DirectedEdge["acme-everything", "woffex"], DirectedEdge["acme-everything", "wol"], DirectedEdge["acme-everything", "wordcloud"], DirectedEdge["acme-everything", "wordexp"], DirectedEdge["acme-everything", "Wordlint"], DirectedEdge["acme-everything", "WordNet"], DirectedEdge["acme-everything", "wordpass"], DirectedEdge["acme-everything", "words"], DirectedEdge["acme-everything", "wordsearch"], DirectedEdge["acme-everything", "wordsetdiff"], DirectedEdge["acme-everything", "wp-archivebot"], DirectedEdge["acme-everything", "wrap"], DirectedEdge["acme-everything", "wraxml"], DirectedEdge["acme-everything", "wright"], DirectedEdge["acme-everything", "wsedit"], DirectedEdge["acme-everything", "wumpus-microprint"], DirectedEdge["acme-everything", "wumpus-tree"], DirectedEdge["acme-everything", "WURFL"], DirectedEdge["acme-everything", "wxAsteroids"], DirectedEdge["acme-everything", "WXDiffCtrl"], DirectedEdge["acme-everything", "wxFruit"], DirectedEdge["acme-everything", "WxGeneric"], DirectedEdge["acme-everything", "wxhnotepad"], DirectedEdge["acme-everything", "wxturtle"], DirectedEdge["acme-everything", "wybor"], DirectedEdge["acme-everything", "wyvern"], DirectedEdge["acme-everything", "x-dsp"], DirectedEdge["acme-everything", "X11-extras"], DirectedEdge["acme-everything", "X11-xdamage"], DirectedEdge["acme-everything", "X11-xfixes"], DirectedEdge["acme-everything", "x11-xinput"], DirectedEdge["acme-everything", "x509-util"], DirectedEdge["acme-everything", "XAttr"], DirectedEdge["acme-everything", "xbattbar"], DirectedEdge["acme-everything", "xchat-plugin"], DirectedEdge["acme-everything", "xdg-userdirs"], DirectedEdge["acme-everything", "Xec"], DirectedEdge["acme-everything", "xenstore"], DirectedEdge["acme-everything", "xfconf"], DirectedEdge["acme-everything", "xhaskell-library"], DirectedEdge["acme-everything", "xhb-ewmh"], DirectedEdge["acme-everything", "xilinx-lava"], DirectedEdge["acme-everything", "xine"], DirectedEdge["acme-everything", "xing-api"], DirectedEdge["acme-everything", "XInput"], DirectedEdge["acme-everything", "xinput-conduit"], DirectedEdge["acme-everything", "xkbcommon"], DirectedEdge["acme-everything", "xkcd"], DirectedEdge["acme-everything", "xlsior"], DirectedEdge["acme-everything", "xlsx-templater"], DirectedEdge["acme-everything", "xml-enumerator-combinators"], DirectedEdge["acme-everything", "xml-extractors"], DirectedEdge["acme-everything", "xml-helpers"], DirectedEdge["acme-everything", "xml-html-conduit-lens"], DirectedEdge["acme-everything", "xml-lens"], DirectedEdge["acme-everything", "xml-monad"], DirectedEdge["acme-everything", "xml-prettify"], DirectedEdge["acme-everything", "xml-push"], DirectedEdge["acme-everything", "xml2html"], DirectedEdge["acme-everything", "xml2x"], DirectedEdge["acme-everything", "XmlHtmlWriter"], DirectedEdge["acme-everything", "xmltv"], DirectedEdge["acme-everything", "XMMS"], DirectedEdge["acme-everything", "xmobar"], DirectedEdge["acme-everything", "xmonad-contrib-bluetilebranch"], DirectedEdge["acme-everything", "xmonad-contrib-gpl"], DirectedEdge["acme-everything", "xmonad-entryhelper"], DirectedEdge["acme-everything", "xmonad-eval"], DirectedEdge["acme-everything", "xmonad-extras"], DirectedEdge["acme-everything", "xmonad-screenshot"], DirectedEdge["acme-everything", "xmonad-utils"], DirectedEdge["acme-everything", "xorshift"], DirectedEdge["acme-everything", "Xorshift128Plus"], DirectedEdge["acme-everything", "xsact"], DirectedEdge["acme-everything", "XSaiga"], DirectedEdge["acme-everything", "xtest"], DirectedEdge["acme-everything", "xxhash"], DirectedEdge["acme-everything", "y0l0bot"], DirectedEdge["acme-everything", "yabi"], DirectedEdge["acme-everything", "Yablog"], DirectedEdge["acme-everything", "yackage"], DirectedEdge["acme-everything", "YACPong"], DirectedEdge["acme-everything", "yahoo-finance-conduit"], DirectedEdge["acme-everything", "yahoo-web-search"], DirectedEdge["acme-everything", "yajl-enumerator"], DirectedEdge["acme-everything", "yamemo"], DirectedEdge["acme-everything", "yaml-light-lens"], DirectedEdge["acme-everything", "yaml-rpc-scotty"], DirectedEdge["acme-everything", "yaml-rpc-snap"], DirectedEdge["acme-everything", "yaml2owl"], DirectedEdge["acme-everything", "YamlReference"], DirectedEdge["acme-everything", "yampa-canvas"], DirectedEdge["acme-everything", "yampa-glut"], DirectedEdge["acme-everything", "YampaSynth"], DirectedEdge["acme-everything", "yaop"], DirectedEdge["acme-everything", "yarr-image-io"], DirectedEdge["acme-everything", "yavie"], DirectedEdge["acme-everything", "yeganesh"], DirectedEdge["acme-everything", "yeller"], DirectedEdge["acme-everything", "yesod-angular"], DirectedEdge["acme-everything", "yesod-angular-ui"], DirectedEdge["acme-everything", "yesod-auth-account"], DirectedEdge["acme-everything", "yesod-auth-basic"], DirectedEdge["acme-everything", "yesod-auth-bcrypt"], DirectedEdge["acme-everything", "yesod-auth-deskcom"], DirectedEdge["acme-everything", "yesod-auth-fb"], DirectedEdge["acme-everything", "yesod-auth-kerberos"], DirectedEdge["acme-everything", "yesod-auth-ldap"], DirectedEdge["acme-everything", "yesod-auth-oauth"], DirectedEdge["acme-everything", "yesod-auth-pam"], DirectedEdge["acme-everything", "yesod-auth-smbclient"], DirectedEdge["acme-everything", "yesod-auth-zendesk"], DirectedEdge["acme-everything", "yesod-bin"], DirectedEdge["acme-everything", "yesod-comments"], DirectedEdge["acme-everything", "yesod-continuations"], DirectedEdge["acme-everything", "yesod-datatables"], DirectedEdge["acme-everything", "yesod-eventsource"], DirectedEdge["acme-everything", "yesod-examples"], DirectedEdge["acme-everything", "yesod-fay"], DirectedEdge["acme-everything", "yesod-form-json"], DirectedEdge["acme-everything", "yesod-gitrepo"], DirectedEdge["acme-everything", "yesod-gitrev"], DirectedEdge["acme-everything", "yesod-goodies"], DirectedEdge["acme-everything", "yesod-links"], DirectedEdge["acme-everything", "yesod-paginate"], DirectedEdge["acme-everything", "yesod-pagination"], DirectedEdge["acme-everything", "yesod-paginator"], DirectedEdge["acme-everything", "yesod-pnotify"], DirectedEdge["acme-everything", "yesod-pure"], DirectedEdge["acme-everything", "yesod-purescript"], DirectedEdge["acme-everything", "yesod-routes-typescript"], DirectedEdge["acme-everything", "yesod-rst"], DirectedEdge["acme-everything", "yesod-session-redis"], DirectedEdge["acme-everything", "yesod-sitemap"], DirectedEdge["acme-everything", "yesod-tableview"], DirectedEdge["acme-everything", "yesod-test-json"], DirectedEdge["acme-everything", "yesod-text-markdown"], DirectedEdge["acme-everything", "yesod-tls"], DirectedEdge["acme-everything", "yesod-transloadit"], DirectedEdge["acme-everything", "yesod-websockets-extra"], DirectedEdge["acme-everything", "yesod-worker"], DirectedEdge["acme-everything", "YFrob"], DirectedEdge["acme-everything", "yi-contrib"], DirectedEdge["acme-everything", "yi-emacs-colours"], DirectedEdge["acme-everything", "yi-fuzzy-open"], DirectedEdge["acme-everything", "yi-gtk"], DirectedEdge["acme-everything", "yi-monokai"], DirectedEdge["acme-everything", "yi-snippet"], DirectedEdge["acme-everything", "yi-spolsky"], DirectedEdge["acme-everything", "yi-vty"], DirectedEdge["acme-everything", "yices-easy"], DirectedEdge["acme-everything", "yices-painless"], DirectedEdge["acme-everything", "yjftp"], DirectedEdge["acme-everything", "yjftp-libs"], DirectedEdge["acme-everything", "Yocto"], DirectedEdge["acme-everything", "yocto"], DirectedEdge["acme-everything", "Yogurt-Standalone"], DirectedEdge["acme-everything", "yoko"], DirectedEdge["acme-everything", "york-lava"], DirectedEdge["acme-everything", "youtube"], DirectedEdge["acme-everything", "yst"], DirectedEdge["acme-everything", "zampolit"], DirectedEdge["acme-everything", "zasni-gerna"], DirectedEdge["acme-everything", "zcache"], DirectedEdge["acme-everything", "zendesk-api"], DirectedEdge["acme-everything", "zeno"], DirectedEdge["acme-everything", "zeromq3-conduit"], DirectedEdge["acme-everything", "zeroth"], DirectedEdge["acme-everything", "ZFS"], DirectedEdge["acme-everything", "zip-conduit"], DirectedEdge["acme-everything", "zipedit"], DirectedEdge["acme-everything", "ZipFold"], DirectedEdge["acme-everything", "zipper"], DirectedEdge["acme-everything", "ZipperAG"], DirectedEdge["acme-everything", "zippers"], DirectedEdge["acme-everything", "zippo"], DirectedEdge["acme-everything", "zlib-lens"], DirectedEdge["acme-everything", "ZMachine"], DirectedEdge["acme-everything", "zmidi-score"], DirectedEdge["acme-everything", "zmqat"], DirectedEdge["acme-everything", "zoneinfo"], DirectedEdge["acme-everything", "zoom"], DirectedEdge["acme-everything", "zoom-cache-sndfile"], DirectedEdge["acme-everything", "zot"], DirectedEdge["acme-everything", "zsh-battery"], DirectedEdge["acme-everything", "ztail"], DirectedEdge["acme-everything", "Zwaluw"], DirectedEdge["acme-flipping-tables", "base"], DirectedEdge["acme-grawlix", "base"], DirectedEdge["acme-hq9plus", "base"], DirectedEdge["acme-http", "base"], DirectedEdge["acme-http", "bytestring"], DirectedEdge["acme-http", "extensible-exceptions"], DirectedEdge["acme-http", "mtl"], DirectedEdge["acme-http", "network"], DirectedEdge["acme-http", "pretty"], DirectedEdge["acme-inator", "base"], DirectedEdge["acme-io", "base"], DirectedEdge["acme-left-pad", "base"], DirectedEdge["acme-left-pad", "text"], DirectedEdge["acme-lolcat", "base"], DirectedEdge["acme-lolcat", "parsec"], DirectedEdge["acme-lolcat", "random"], DirectedEdge["acme-lolcat", "random-shuffle"], DirectedEdge["acme-lolcat", "text"], DirectedEdge["acme-lookofdisapproval", "base"], DirectedEdge["acme-memorandom", "base"], DirectedEdge["acme-memorandom", "MemoTrie"], DirectedEdge["acme-memorandom", "random"], DirectedEdge["acme-microwave", "base"], DirectedEdge["acme-miscorder", "base"], DirectedEdge["acme-miscorder", "random"], DirectedEdge["acme-missiles", "base"], DirectedEdge["acme-missiles", "stm"], DirectedEdge["acme-now", "base"], DirectedEdge["acme-now", "time"], DirectedEdge["acme-numbersystem", "base"], DirectedEdge["acme-numbersystem", "template-haskell"], DirectedEdge["acme-omitted", "base"], DirectedEdge["acme-operators", "base"], DirectedEdge["acme-php", "acme-left-pad"], DirectedEdge["acme-php", "base"], DirectedEdge["acme-pointful-numbers", "base"], DirectedEdge["acme-pointful-numbers", "split"], DirectedEdge["acme-realworld", "base"], DirectedEdge["acme-safe", "acme-dont"], DirectedEdge["acme-safe", "base"], DirectedEdge["acme-schoenfinkel", "base"], DirectedEdge["acme-strfry", "base"], DirectedEdge["acme-strfry", "bytestring"], DirectedEdge["acme-stringly-typed", "base"], DirectedEdge["acme-strtok", "base"], DirectedEdge["acme-strtok", "mtl"], DirectedEdge["acme-timemachine", "base"], DirectedEdge["acme-timemachine", "ghc-prim"], DirectedEdge["acme-timemachine", "mtl"], DirectedEdge["acme-timemachine", "transformers"], DirectedEdge["acme-year", "base"], DirectedEdge["acme-zero", "acme-zero"], DirectedEdge["action-permutations", "base"], DirectedEdge["active", "base"], DirectedEdge["active", "lens"], DirectedEdge["active", "linear"], DirectedEdge["active", "semigroupoids"], DirectedEdge["active", "semigroups"], DirectedEdge["active", "vector"], DirectedEdge["activehs", "activehs-base"], DirectedEdge["activehs", "array"], DirectedEdge["activehs", "base"], DirectedEdge["activehs", "blaze-html"], DirectedEdge["activehs", "bytestring"], DirectedEdge["activehs", "cmdargs"], DirectedEdge["activehs", "containers"], DirectedEdge["activehs", "data-pprint"], DirectedEdge["activehs", "deepseq"], DirectedEdge["activehs", "dia-base"], DirectedEdge["activehs", "dia-functions"], DirectedEdge["activehs", "directory"], DirectedEdge["activehs", "filepath"], DirectedEdge["activehs", "haskell-src-exts"], DirectedEdge["activehs", "highlighting-kate"], DirectedEdge["activehs", "hint"], DirectedEdge["activehs", "hoogle"], DirectedEdge["activehs", "mtl"], DirectedEdge["activehs", "old-locale"], DirectedEdge["activehs", "old-time"], DirectedEdge["activehs", "pandoc"], DirectedEdge["activehs", "process"], DirectedEdge["activehs", "QuickCheck"], DirectedEdge["activehs", "simple-reflect"], DirectedEdge["activehs", "snap-core"], DirectedEdge["activehs", "snap-server"], DirectedEdge["activehs", "split"], DirectedEdge["activehs", "syb"], DirectedEdge["activehs", "text"], DirectedEdge["activehs", "time"], DirectedEdge["activehs", "utf8-string"], DirectedEdge["activehs", "xhtml"], DirectedEdge["activehs-base", "base"], DirectedEdge["activehs-base", "QuickCheck"], DirectedEdge["activitystreams-aeson", "aeson"], DirectedEdge["activitystreams-aeson", "base"], DirectedEdge["activitystreams-aeson", "text"], DirectedEdge["activitystreams-aeson", "time"], DirectedEdge["activitystreams-aeson", "unordered-containers"], DirectedEdge["actor", "base"], DirectedEdge["actor", "stm"], DirectedEdge["actor", "time"], DirectedEdge["ad", "array"], DirectedEdge["ad", "base"], DirectedEdge["ad", "comonad"], DirectedEdge["ad", "containers"], DirectedEdge["ad", "data-reify"], DirectedEdge["ad", "erf"], DirectedEdge["ad", "free"], DirectedEdge["ad", "nats"], DirectedEdge["ad", "reflection"], DirectedEdge["ad", "tagged"], DirectedEdge["ad", "transformers"], DirectedEdge["adaptive-containers", "base"], DirectedEdge["adaptive-tuple", "base"], DirectedEdge["adaptive-tuple", "template-haskell"], DirectedEdge["adaptive-tuple", "type-level"], DirectedEdge["adb", "base"], DirectedEdge["adb", "bytestring"], DirectedEdge["adb", "cereal"], DirectedEdge["adb", "containers"], DirectedEdge["adb", "mtl"], DirectedEdge["adb", "network"], DirectedEdge["adblock2privoxy", "base"], DirectedEdge["adblock2privoxy", "case-insensitive"], DirectedEdge["adblock2privoxy", "containers"], DirectedEdge["adblock2privoxy", "directory"], DirectedEdge["adblock2privoxy", "filepath"], DirectedEdge["adblock2privoxy", "http-conduit"], DirectedEdge["adblock2privoxy", "MissingH"], DirectedEdge["adblock2privoxy", "mtl"], DirectedEdge["adblock2privoxy", "network"], DirectedEdge["adblock2privoxy", "network-uri"], DirectedEdge["adblock2privoxy", "old-locale"], DirectedEdge["adblock2privoxy", "parsec"], DirectedEdge["adblock2privoxy", "parsec-permutation"], DirectedEdge["adblock2privoxy", "strict"], DirectedEdge["adblock2privoxy", "text"], DirectedEdge["adblock2privoxy", "time"], DirectedEdge["addLicenseInfo", "base"], DirectedEdge["addLicenseInfo", "process"], DirectedEdge["adhoc-network", "base"], DirectedEdge["adhoc-network", "bytestring"], DirectedEdge["adhoc-network", "containers"], DirectedEdge["adhoc-network", "Crypto"], DirectedEdge["adhoc-network", "dataenc"], DirectedEdge["adhoc-network", "HaXml"], DirectedEdge["adhoc-network", "hsgnutls"], DirectedEdge["adhoc-network", "network"], DirectedEdge["adhoc-network", "old-locale"], DirectedEdge["adhoc-network", "parsec"], DirectedEdge["adhoc-network", "random"], DirectedEdge["adhoc-network", "time"], DirectedEdge["adhoc-network", "utf8-string"], DirectedEdge["adhoc-network", "xml-parsec"], DirectedEdge["adict", "array"], DirectedEdge["adict", "base"], DirectedEdge["adict", "binary"], DirectedEdge["adict", "containers"], DirectedEdge["adict", "dawg"], DirectedEdge["adict", "PSQueue"], DirectedEdge["adict", "vector"], DirectedEdge["adjunctions", "array"], DirectedEdge["adjunctions", "base"], DirectedEdge["adjunctions", "comonad"], DirectedEdge["adjunctions", "containers"], DirectedEdge["adjunctions", "contravariant"], DirectedEdge["adjunctions", "distributive"], DirectedEdge["adjunctions", "free"], DirectedEdge["adjunctions", "mtl"], DirectedEdge["adjunctions", "profunctors"], DirectedEdge["adjunctions", "semigroupoids"], DirectedEdge["adjunctions", "semigroups"], DirectedEdge["adjunctions", "tagged"], DirectedEdge["adjunctions", "transformers"], DirectedEdge["adjunctions", "transformers-compat"], DirectedEdge["adjunctions", "void"], DirectedEdge["adler32", "base"], DirectedEdge["adler32", "bytestring"], DirectedEdge["adler32", "zlib"], DirectedEdge["adobe-swatch-exchange", "base"], DirectedEdge["adobe-swatch-exchange", "binary"], DirectedEdge["adobe-swatch-exchange", "bytestring"], DirectedEdge["adobe-swatch-exchange", "language-css"], DirectedEdge["adobe-swatch-exchange", "mtl"], DirectedEdge["adobe-swatch-exchange", "pretty"], DirectedEdge["adp-multi", "array"], DirectedEdge["adp-multi", "base"], DirectedEdge["adp-multi", "containers"], DirectedEdge["adp-multi", "criterion"], DirectedEdge["adp-multi", "deepseq"], DirectedEdge["adp-multi", "htrace"], DirectedEdge["adp-multi", "HUnit"], DirectedEdge["adp-multi", "mtl"], DirectedEdge["adp-multi", "QuickCheck"], DirectedEdge["adp-multi", "random-shuffle"], DirectedEdge["adp-multi", "test-framework"], DirectedEdge["adp-multi", "test-framework-hunit"], DirectedEdge["adp-multi-monadiccp", "adp-multi"], DirectedEdge["adp-multi-monadiccp", "base"], DirectedEdge["adp-multi-monadiccp", "containers"], DirectedEdge["adp-multi-monadiccp", "criterion"], DirectedEdge["adp-multi-monadiccp", "deepseq"], DirectedEdge["adp-multi-monadiccp", "monadiccp"], DirectedEdge["adp-multi-monadiccp", "mtl"], DirectedEdge["adp-multi-monadiccp", "QuickCheck"], DirectedEdge["adp-multi-monadiccp", "test-framework"], DirectedEdge["aeson", "attoparsec"], DirectedEdge["aeson", "base"], DirectedEdge["aeson", "bytestring"], DirectedEdge["aeson", "containers"], DirectedEdge["aeson", "deepseq"], DirectedEdge["aeson", "dlist"], DirectedEdge["aeson", "fail"], DirectedEdge["aeson", "ghc-prim"], DirectedEdge["aeson", "hashable"], DirectedEdge["aeson", "mtl"], DirectedEdge["aeson", "nats"], DirectedEdge["aeson", "old-locale"], DirectedEdge["aeson", "scientific"], DirectedEdge["aeson", "semigroups"], DirectedEdge["aeson", "syb"], DirectedEdge["aeson", "tagged"], DirectedEdge["aeson", "template-haskell"], DirectedEdge["aeson", "text"], DirectedEdge["aeson", "time"], DirectedEdge["aeson", "transformers"], DirectedEdge["aeson", "unordered-containers"], DirectedEdge["aeson", "vector"], DirectedEdge["aeson-applicative", "aeson"], DirectedEdge["aeson-applicative", "base"], DirectedEdge["aeson-applicative", "text"], DirectedEdge["aeson-applicative", "unordered-containers"], DirectedEdge["aeson-better-errors", "aeson"], DirectedEdge["aeson-better-errors", "base"], DirectedEdge["aeson-better-errors", "bytestring"], DirectedEdge["aeson-better-errors", "dlist"], DirectedEdge["aeson-better-errors", "mtl"], DirectedEdge["aeson-better-errors", "scientific"], DirectedEdge["aeson-better-errors", "text"], DirectedEdge["aeson-better-errors", "transformers"], DirectedEdge["aeson-better-errors", "transformers-compat"], DirectedEdge["aeson-better-errors", "unordered-containers"], DirectedEdge["aeson-better-errors", "vector"], DirectedEdge["aeson-better-errors", "void"], DirectedEdge["aeson-bson", "aeson"], DirectedEdge["aeson-bson", "array"], DirectedEdge["aeson-bson", "attoparsec"], DirectedEdge["aeson-bson", "base"], DirectedEdge["aeson-bson", "bson"], DirectedEdge["aeson-bson", "bytestring"], DirectedEdge["aeson-bson", "containers"], DirectedEdge["aeson-bson", "text"], DirectedEdge["aeson-bson", "unordered-containers"], DirectedEdge["aeson-bson", "vector"], DirectedEdge["aeson-casing", "aeson"], DirectedEdge["aeson-casing", "base"], DirectedEdge["aeson-compat", "aeson"], DirectedEdge["aeson-compat", "attoparsec"], DirectedEdge["aeson-compat", "base"], DirectedEdge["aeson-compat", "base-compat"], DirectedEdge["aeson-compat", "bytestring"], DirectedEdge["aeson-compat", "containers"], DirectedEdge["aeson-compat", "exceptions"], DirectedEdge["aeson-compat", "hashable"], DirectedEdge["aeson-compat", "nats"], DirectedEdge["aeson-compat", "scientific"], DirectedEdge["aeson-compat", "semigroups"], DirectedEdge["aeson-compat", "tagged"], DirectedEdge["aeson-compat", "text"], DirectedEdge["aeson-compat", "time"], DirectedEdge["aeson-compat", "time-locale-compat"], DirectedEdge["aeson-compat", "unordered-containers"], DirectedEdge["aeson-compat", "vector"], DirectedEdge["aeson-diff", "aeson"], DirectedEdge["aeson-diff", "aeson-diff"], DirectedEdge["aeson-diff", "base"], DirectedEdge["aeson-diff", "bytestring"], DirectedEdge["aeson-diff", "edit-distance-vector"], DirectedEdge["aeson-diff", "hashable"], DirectedEdge["aeson-diff", "mtl"], DirectedEdge["aeson-diff", "optparse-applicative"], DirectedEdge["aeson-diff", "scientific"], DirectedEdge["aeson-diff", "text"], DirectedEdge["aeson-diff", "unordered-containers"], DirectedEdge["aeson-diff", "vector"], DirectedEdge["aeson-extra", "aeson"], DirectedEdge["aeson-extra", "aeson-compat"], DirectedEdge["aeson-extra", "attoparsec"], DirectedEdge["aeson-extra", "base"], DirectedEdge["aeson-extra", "base-compat"], DirectedEdge["aeson-extra", "bytestring"], DirectedEdge["aeson-extra", "containers"], DirectedEdge["aeson-extra", "exceptions"], DirectedEdge["aeson-extra", "hashable"], DirectedEdge["aeson-extra", "parsec"], DirectedEdge["aeson-extra", "recursion-schemes"], DirectedEdge["aeson-extra", "scientific"], DirectedEdge["aeson-extra", "template-haskell"], DirectedEdge["aeson-extra", "text"], DirectedEdge["aeson-extra", "time"], DirectedEdge["aeson-extra", "time-parsers"], DirectedEdge["aeson-extra", "transformers"], DirectedEdge["aeson-extra", "unordered-containers"], DirectedEdge["aeson-extra", "vector"], DirectedEdge["aeson-filthy", "aeson"], DirectedEdge["aeson-filthy", "base"], DirectedEdge["aeson-filthy", "bytestring"], DirectedEdge["aeson-filthy", "text"], DirectedEdge["aeson-filthy", "unordered-containers"], DirectedEdge["aeson-flatten", "aeson"], DirectedEdge["aeson-flatten", "base"], DirectedEdge["aeson-flatten", "text"], DirectedEdge["aeson-flatten", "unordered-containers"], DirectedEdge["aeson-iproute", "aeson"], DirectedEdge["aeson-iproute", "base"], DirectedEdge["aeson-iproute", "iproute"], DirectedEdge["aeson-iproute", "text"], DirectedEdge["aeson-json-ast", "aeson"], DirectedEdge["aeson-json-ast", "base"], DirectedEdge["aeson-json-ast", "json-ast"], DirectedEdge["aeson-lens", "aeson"], DirectedEdge["aeson-lens", "base"], DirectedEdge["aeson-lens", "bytestring"], DirectedEdge["aeson-lens", "lens"], DirectedEdge["aeson-lens", "text"], DirectedEdge["aeson-lens", "unordered-containers"], DirectedEdge["aeson-lens", "vector"], DirectedEdge["aeson-native", "aeson"], DirectedEdge["aeson-native", "attoparsec"], DirectedEdge["aeson-native", "base"], DirectedEdge["aeson-native", "blaze-builder"], DirectedEdge["aeson-native", "blaze-textual-native"], DirectedEdge["aeson-native", "bytestring"], DirectedEdge["aeson-native", "containers"], DirectedEdge["aeson-native", "deepseq"], DirectedEdge["aeson-native", "hashable"], DirectedEdge["aeson-native", "mtl"], DirectedEdge["aeson-native", "old-locale"], DirectedEdge["aeson-native", "syb"], DirectedEdge["aeson-native", "text"], DirectedEdge["aeson-native", "time"], DirectedEdge["aeson-native", "unordered-containers"], DirectedEdge["aeson-native", "vector"], DirectedEdge["aeson-parsec-picky", "aeson"], DirectedEdge["aeson-parsec-picky", "base"], DirectedEdge["aeson-parsec-picky", "parsec"], DirectedEdge["aeson-parsec-picky", "scientific"], DirectedEdge["aeson-parsec-picky", "text"], DirectedEdge["aeson-parsec-picky", "unordered-containers"], DirectedEdge["aeson-parsec-picky", "vector"], DirectedEdge["aeson-prefix", "aeson"], DirectedEdge["aeson-prefix", "base"], DirectedEdge["aeson-prefix", "mtl"], DirectedEdge["aeson-prefix", "text"], DirectedEdge["aeson-prefix", "unordered-containers"], DirectedEdge["aeson-prefix", "vector"], DirectedEdge["aeson-pretty", "aeson"], DirectedEdge["aeson-pretty", "aeson-pretty"], DirectedEdge["aeson-pretty", "attoparsec"], DirectedEdge["aeson-pretty", "base"], DirectedEdge["aeson-pretty", "bytestring"], DirectedEdge["aeson-pretty", "cmdargs"], DirectedEdge["aeson-pretty", "text"], DirectedEdge["aeson-pretty", "unordered-containers"], DirectedEdge["aeson-pretty", "vector"], DirectedEdge["aeson-qq", "aeson"], DirectedEdge["aeson-qq", "attoparsec"], DirectedEdge["aeson-qq", "base"], DirectedEdge["aeson-qq", "base-compat"], DirectedEdge["aeson-qq", "haskell-src-meta"], DirectedEdge["aeson-qq", "parsec"], DirectedEdge["aeson-qq", "scientific"], DirectedEdge["aeson-qq", "template-haskell"], DirectedEdge["aeson-qq", "text"], DirectedEdge["aeson-qq", "vector"], DirectedEdge["aeson-schema", "aeson"], DirectedEdge["aeson-schema", "attoparsec"], DirectedEdge["aeson-schema", "base"], DirectedEdge["aeson-schema", "bytestring"], DirectedEdge["aeson-schema", "containers"], DirectedEdge["aeson-schema", "ghc-prim"], DirectedEdge["aeson-schema", "mtl"], DirectedEdge["aeson-schema", "QuickCheck"], DirectedEdge["aeson-schema", "regex-base"], DirectedEdge["aeson-schema", "regex-compat"], DirectedEdge["aeson-schema", "regex-pcre"], DirectedEdge["aeson-schema", "scientific"], DirectedEdge["aeson-schema", "syb"], DirectedEdge["aeson-schema", "template-haskell"], DirectedEdge["aeson-schema", "text"], DirectedEdge["aeson-schema", "th-lift"], DirectedEdge["aeson-schema", "transformers"], DirectedEdge["aeson-schema", "unordered-containers"], DirectedEdge["aeson-schema", "vector"], DirectedEdge["aeson-serialize", "aeson"], DirectedEdge["aeson-serialize", "base"], DirectedEdge["aeson-serialize", "cereal"], DirectedEdge["aeson-smart", "aeson"], DirectedEdge["aeson-smart", "base"], DirectedEdge["aeson-smart", "data-default"], DirectedEdge["aeson-smart", "template-haskell"], DirectedEdge["aeson-smart", "text"], DirectedEdge["aeson-smart", "unordered-containers"], DirectedEdge["aeson-smart", "vector"], DirectedEdge["aeson-streams", "aeson"], DirectedEdge["aeson-streams", "attoparsec"], DirectedEdge["aeson-streams", "base"], DirectedEdge["aeson-streams", "bytestring"], DirectedEdge["aeson-streams", "HsOpenSSL"], DirectedEdge["aeson-streams", "http-streams"], DirectedEdge["aeson-streams", "io-streams"], DirectedEdge["aeson-t", "aeson"], DirectedEdge["aeson-t", "base"], DirectedEdge["aeson-t", "bytestring"], DirectedEdge["aeson-t", "text"], DirectedEdge["aeson-t", "unordered-containers"], DirectedEdge["aeson-t", "vector"], DirectedEdge["aeson-toolkit", "aeson"], DirectedEdge["aeson-toolkit", "base"], DirectedEdge["aeson-toolkit", "bytestring"], DirectedEdge["aeson-toolkit", "failure"], DirectedEdge["aeson-toolkit", "text"], DirectedEdge["aeson-utils", "aeson"], DirectedEdge["aeson-utils", "attoparsec"], DirectedEdge["aeson-utils", "base"], DirectedEdge["aeson-utils", "bytestring"], DirectedEdge["aeson-utils", "scientific"], DirectedEdge["aeson-utils", "text"], DirectedEdge["aeson-value-parser", "aeson"], DirectedEdge["aeson-value-parser", "base-prelude"], DirectedEdge["aeson-value-parser", "mtl-prelude"], DirectedEdge["aeson-value-parser", "scientific"], DirectedEdge["aeson-value-parser", "success"], DirectedEdge["aeson-value-parser", "text"], DirectedEdge["aeson-value-parser", "unordered-containers"], DirectedEdge["aeson-value-parser", "vector"], DirectedEdge["aeson-yak", "aeson"], DirectedEdge["aeson-yak", "base"], DirectedEdge["affine-invariant-ensemble-mcmc", "flat-mcmc"], DirectedEdge["affine-invariant-ensemble-mcmc", "base"], DirectedEdge["affine-invariant-ensemble-mcmc", "containers"], DirectedEdge["affine-invariant-ensemble-mcmc", "mwc-random"], DirectedEdge["affine-invariant-ensemble-mcmc", "primitive"], DirectedEdge["affine-invariant-ensemble-mcmc", "split"], DirectedEdge["affine-invariant-ensemble-mcmc", "vector"], DirectedEdge["afis", "base"], DirectedEdge["afis", "byteable"], DirectedEdge["afis", "bytestring"], DirectedEdge["afis", "crypto-random"], DirectedEdge["afis", "cryptohash"], DirectedEdge["afis", "packer"], DirectedEdge["afv", "base"], DirectedEdge["afv", "bytestring"], DirectedEdge["afv", "directory"], DirectedEdge["afv", "language-c"], DirectedEdge["afv", "mtl"], DirectedEdge["afv", "process"], DirectedEdge["afv", "yices"], DirectedEdge["ag-pictgen", "base"], DirectedEdge["ag-pictgen", "containers"], DirectedEdge["ag-pictgen", "uuagc"], DirectedEdge["ag-pictgen", "uulib"], DirectedEdge["agda-server", "Agda"], DirectedEdge["agda-server", "base"], DirectedEdge["agda-server", "cmdargs"], DirectedEdge["agda-server", "containers"], DirectedEdge["agda-server", "directory"], DirectedEdge["agda-server", "filepath"], DirectedEdge["agda-server", "HJavaScript"], DirectedEdge["agda-server", "mtl"], DirectedEdge["agda-server", "pandoc"], DirectedEdge["agda-server", "snap-core"], DirectedEdge["agda-server", "snap-server"], DirectedEdge["agda-server", "transformers"], DirectedEdge["agda-server", "utf8-string"], DirectedEdge["agda-server", "xhtml"], DirectedEdge["agda-snippets", "Agda"], DirectedEdge["agda-snippets", "agda-snippets"], DirectedEdge["agda-snippets", "base"], DirectedEdge["agda-snippets", "containers"], DirectedEdge["agda-snippets", "mtl"], DirectedEdge["agda-snippets", "network-uri"], DirectedEdge["agda-snippets", "transformers"], DirectedEdge["agda-snippets", "xhtml"], DirectedEdge["agda-snippets-hakyll", "agda-snippets"], DirectedEdge["agda-snippets-hakyll", "base"], DirectedEdge["agda-snippets-hakyll", "directory"], DirectedEdge["agda-snippets-hakyll", "filepath"], DirectedEdge["agda-snippets-hakyll", "hakyll"], DirectedEdge["agda-snippets-hakyll", "network-uri"], DirectedEdge["agda-snippets-hakyll", "pandoc"], DirectedEdge["agda-snippets-hakyll", "pandoc-types"], DirectedEdge["agentx", "base"], DirectedEdge["agentx", "binary"], DirectedEdge["agentx", "bitwise"], DirectedEdge["agentx", "bytestring"], DirectedEdge["agentx", "containers"], DirectedEdge["agentx", "data-default"], DirectedEdge["agentx", "Diff"], DirectedEdge["agentx", "fclabels"], DirectedEdge["agentx", "mtl"], DirectedEdge["agentx", "network"], DirectedEdge["agentx", "pipes"], DirectedEdge["agentx", "pipes-concurrency"], DirectedEdge["agentx", "pipes-network"], DirectedEdge["agentx", "safe"], DirectedEdge["agentx", "snmp"], DirectedEdge["agentx", "time"], DirectedEdge["agentx", "transformers"], DirectedEdge["agentx", "unix"], DirectedEdge["agum", "base"], DirectedEdge["agum", "containers"], DirectedEdge["aig", "base"], DirectedEdge["aig", "base-compat"], DirectedEdge["aig", "mtl"], DirectedEdge["aig", "QuickCheck"], DirectedEdge["aig", "vector"], DirectedEdge["air", "array"], DirectedEdge["air", "base"], DirectedEdge["air", "bytestring"], DirectedEdge["air", "containers"], DirectedEdge["air", "directory"], DirectedEdge["air", "filepath"], DirectedEdge["air", "mtl"], DirectedEdge["air", "text"], DirectedEdge["air", "time"], DirectedEdge["air-extra", "air"], DirectedEdge["air-extra", "array"], DirectedEdge["air-extra", "base"], DirectedEdge["air-extra", "bytestring"], DirectedEdge["air-extra", "containers"], DirectedEdge["air-extra", "directory"], DirectedEdge["air-extra", "filepath"], DirectedEdge["air-extra", "parallel"], DirectedEdge["air-extra", "parsec"], DirectedEdge["air-extra", "regexpr"], DirectedEdge["air-extra", "text"], DirectedEdge["air-extra", "time"], DirectedEdge["air-spec", "base"], DirectedEdge["air-spec", "hspec"], DirectedEdge["air-spec", "text"], DirectedEdge["air-th", "air"], DirectedEdge["air-th", "base"], DirectedEdge["air-th", "template-haskell"], DirectedEdge["airbrake", "base"], DirectedEdge["airbrake", "blaze-markup"], DirectedEdge["airbrake", "bytestring"], DirectedEdge["airbrake", "directory"], DirectedEdge["airbrake", "exceptions"], DirectedEdge["airbrake", "filepath"], DirectedEdge["airbrake", "http-conduit"], DirectedEdge["airbrake", "monad-control"], DirectedEdge["airbrake", "network"], DirectedEdge["airbrake", "semigroups"], DirectedEdge["airbrake", "template-haskell"], DirectedEdge["airbrake", "text"], DirectedEdge["airbrake", "transformers"], DirectedEdge["airbrake", "utf8-string"], DirectedEdge["airbrake", "wai"], DirectedEdge["airship", "attoparsec"], DirectedEdge["airship", "base"], DirectedEdge["airship", "base64-bytestring"], DirectedEdge["airship", "blaze-builder"], DirectedEdge["airship", "bytestring"], DirectedEdge["airship", "bytestring-trie"], DirectedEdge["airship", "case-insensitive"], DirectedEdge["airship", "containers"], DirectedEdge["airship", "cryptohash"], DirectedEdge["airship", "directory"], DirectedEdge["airship", "either"], DirectedEdge["airship", "filepath"], DirectedEdge["airship", "http-date"], DirectedEdge["airship", "http-media"], DirectedEdge["airship", "http-types"], DirectedEdge["airship", "lifted-base"], DirectedEdge["airship", "microlens"], DirectedEdge["airship", "mime-types"], DirectedEdge["airship", "mmorph"], DirectedEdge["airship", "monad-control"], DirectedEdge["airship", "mtl"], DirectedEdge["airship", "network"], DirectedEdge["airship", "old-locale"], DirectedEdge["airship", "random"], DirectedEdge["airship", "text"], DirectedEdge["airship", "time"], DirectedEdge["airship", "transformers"], DirectedEdge["airship", "transformers-base"], DirectedEdge["airship", "unix"], DirectedEdge["airship", "unordered-containers"], DirectedEdge["airship", "wai"], DirectedEdge["airship", "wai-extra"], DirectedEdge["aivika", "array"], DirectedEdge["aivika", "base"], DirectedEdge["aivika", "containers"], DirectedEdge["aivika", "mtl"], DirectedEdge["aivika", "random"], DirectedEdge["aivika", "vector"], DirectedEdge["aivika-branches", "aivika"], DirectedEdge["aivika-branches", "aivika-transformers"], DirectedEdge["aivika-branches", "base"], DirectedEdge["aivika-branches", "containers"], DirectedEdge["aivika-branches", "mtl"], DirectedEdge["aivika-branches", "random"], DirectedEdge["aivika-distributed", "aivika"], DirectedEdge["aivika-distributed", "aivika-transformers"], DirectedEdge["aivika-distributed", "base"], DirectedEdge["aivika-distributed", "binary"], DirectedEdge["aivika-distributed", "bytestring"], DirectedEdge["aivika-distributed", "containers"], DirectedEdge["aivika-distributed", "distributed-process"], DirectedEdge["aivika-distributed", "exceptions"], DirectedEdge["aivika-distributed", "mtl"], DirectedEdge["aivika-distributed", "random"], DirectedEdge["aivika-distributed", "stm"], DirectedEdge["aivika-distributed", "time"], DirectedEdge["aivika-experiment", "aivika"], DirectedEdge["aivika-experiment", "base"], DirectedEdge["aivika-experiment", "containers"], DirectedEdge["aivika-experiment", "directory"], DirectedEdge["aivika-experiment", "filepath"], DirectedEdge["aivika-experiment", "mtl"], DirectedEdge["aivika-experiment", "network-uri"], DirectedEdge["aivika-experiment", "parallel-io"], DirectedEdge["aivika-experiment", "split"], DirectedEdge["aivika-experiment-cairo", "aivika-experiment"], DirectedEdge["aivika-experiment-cairo", "aivika-experiment-chart"], DirectedEdge["aivika-experiment-cairo", "base"], DirectedEdge["aivika-experiment-cairo", "Chart"], DirectedEdge["aivika-experiment-cairo", "Chart-cairo"], DirectedEdge["aivika-experiment-chart", "aivika"], DirectedEdge["aivika-experiment-chart", "aivika-experiment"], DirectedEdge["aivika-experiment-chart", "array"], DirectedEdge["aivika-experiment-chart", "base"], DirectedEdge["aivika-experiment-chart", "Chart"], DirectedEdge["aivika-experiment-chart", "colour"], DirectedEdge["aivika-experiment-chart", "containers"], DirectedEdge["aivika-experiment-chart", "data-default-class"], DirectedEdge["aivika-experiment-chart", "filepath"], DirectedEdge["aivika-experiment-chart", "lens"], DirectedEdge["aivika-experiment-chart", "mtl"], DirectedEdge["aivika-experiment-chart", "split"], DirectedEdge["aivika-experiment-diagrams", "aivika-experiment"], DirectedEdge["aivika-experiment-diagrams", "aivika-experiment-chart"], DirectedEdge["aivika-experiment-diagrams", "base"], DirectedEdge["aivika-experiment-diagrams", "Chart"], DirectedEdge["aivika-experiment-diagrams", "Chart-diagrams"], DirectedEdge["aivika-experiment-diagrams", "containers"], DirectedEdge["aivika-experiment-diagrams", "filepath"], DirectedEdge["aivika-transformers", "aivika"], DirectedEdge["aivika-transformers", "array"], DirectedEdge["aivika-transformers", "base"], DirectedEdge["aivika-transformers", "containers"], DirectedEdge["aivika-transformers", "mtl"], DirectedEdge["aivika-transformers", "random"], DirectedEdge["aivika-transformers", "vector"], DirectedEdge["ajhc", "ajhc"], DirectedEdge["ajhc", "array"], DirectedEdge["ajhc", "base"], DirectedEdge["ajhc", "binary"], DirectedEdge["ajhc", "bytestring"], DirectedEdge["ajhc", "containers"], DirectedEdge["ajhc", "cpphs"], DirectedEdge["ajhc", "directory"], DirectedEdge["ajhc", "fgl"], DirectedEdge["ajhc", "filepath"], DirectedEdge["ajhc", "haskeline"], DirectedEdge["ajhc", "HsSyck"], DirectedEdge["ajhc", "HTTP"], DirectedEdge["ajhc", "mtl"], DirectedEdge["ajhc", "network"], DirectedEdge["ajhc", "old-time"], DirectedEdge["ajhc", "pretty"], DirectedEdge["ajhc", "process"], DirectedEdge["ajhc", "random"], DirectedEdge["ajhc", "regex-compat"], DirectedEdge["ajhc", "syb"], DirectedEdge["ajhc", "temporary"], DirectedEdge["ajhc", "unix"], DirectedEdge["ajhc", "utf8-string"], DirectedEdge["ajhc", "zlib"], DirectedEdge["al", "base"], DirectedEdge["al", "mtl"], DirectedEdge["alarmclock", "alarmclock"], DirectedEdge["alarmclock", "base"], DirectedEdge["alarmclock", "stm"], DirectedEdge["alarmclock", "time"], DirectedEdge["alarmclock", "unbounded-delays"], DirectedEdge["alea", "base"], DirectedEdge["alea", "optparse-applicative"], DirectedEdge["alea", "random"], DirectedEdge["alea", "text"], DirectedEdge["alex", "array"], DirectedEdge["alex", "base"], DirectedEdge["alex", "containers"], DirectedEdge["alex", "directory"], DirectedEdge["alex", "QuickCheck"], DirectedEdge["alex-meta", "array"], DirectedEdge["alex-meta", "base"], DirectedEdge["alex-meta", "containers"], DirectedEdge["alex-meta", "haskell-src-meta"], DirectedEdge["alex-meta", "QuickCheck"], DirectedEdge["alex-meta", "template-haskell"], DirectedEdge["alfred", "aeson"], DirectedEdge["alfred", "base"], DirectedEdge["alfred", "bytestring"], DirectedEdge["alfred", "hexpat"], DirectedEdge["alfred", "http-conduit"], DirectedEdge["alfred", "http-types"], DirectedEdge["alfred", "network"], DirectedEdge["alfred", "network-uri"], DirectedEdge["alfred", "text"], DirectedEdge["alfred", "xmlgen"], DirectedEdge["alga", "aeson"], DirectedEdge["alga", "alga"], DirectedEdge["alga", "base"], DirectedEdge["alga", "containers"], DirectedEdge["alga", "data-default"], DirectedEdge["alga", "exceptions"], DirectedEdge["alga", "filepath"], DirectedEdge["alga", "formatting"], DirectedEdge["alga", "haskeline"], DirectedEdge["alga", "hxt"], DirectedEdge["alga", "megaparsec"], DirectedEdge["alga", "mtl"], DirectedEdge["alga", "optparse-applicative"], DirectedEdge["alga", "path"], DirectedEdge["alga", "path-io"], DirectedEdge["alga", "random"], DirectedEdge["alga", "text"], DirectedEdge["alga", "tf-random"], DirectedEdge["alga", "transformers"], DirectedEdge["alga", "yaml"], DirectedEdge["algebra", "adjunctions"], DirectedEdge["algebra", "array"], DirectedEdge["algebra", "base"], DirectedEdge["algebra", "containers"], DirectedEdge["algebra", "distributive"], DirectedEdge["algebra", "mtl"], DirectedEdge["algebra", "nats"], DirectedEdge["algebra", "semigroupoids"], DirectedEdge["algebra", "semigroups"], DirectedEdge["algebra", "tagged"], DirectedEdge["algebra", "transformers"], DirectedEdge["algebra", "void"], DirectedEdge["algebra-dag", "aeson"], DirectedEdge["algebra-dag", "base"], DirectedEdge["algebra-dag", "containers"], DirectedEdge["algebra-dag", "fgl"], DirectedEdge["algebra-dag", "mtl"], DirectedEdge["algebra-dag", "parsec"], DirectedEdge["algebra-dag", "template-haskell"], DirectedEdge["algebra-dag", "transformers"], DirectedEdge["algebra-sql", "aeson"], DirectedEdge["algebra-sql", "algebra-dag"], DirectedEdge["algebra-sql", "ansi-wl-pprint"], DirectedEdge["algebra-sql", "base"], DirectedEdge["algebra-sql", "bytestring"], DirectedEdge["algebra-sql", "containers"], DirectedEdge["algebra-sql", "Decimal"], DirectedEdge["algebra-sql", "dlist"], DirectedEdge["algebra-sql", "errors"], DirectedEdge["algebra-sql", "fgl"], DirectedEdge["algebra-sql", "filepath"], DirectedEdge["algebra-sql", "ghc-prim"], DirectedEdge["algebra-sql", "mtl"], DirectedEdge["algebra-sql", "multiset"], DirectedEdge["algebra-sql", "parsec"], DirectedEdge["algebra-sql", "pretty"], DirectedEdge["algebra-sql", "process"], DirectedEdge["algebra-sql", "template-haskell"], DirectedEdge["algebra-sql", "text"], DirectedEdge["algebra-sql", "time"], DirectedEdge["algebra-sql", "transformers"], DirectedEdge["algebraic", "accelerate"], DirectedEdge["algebraic", "base"], DirectedEdge["algebraic-classes", "base"], DirectedEdge["algebraic-classes", "syb"], DirectedEdge["algebraic-classes", "template-haskell"], DirectedEdge["align", "base"], DirectedEdge["align", "containers"], DirectedEdge["align", "transformers"], DirectedEdge["align", "vector"], DirectedEdge["align-text", "base"], DirectedEdge["align-text", "optparse-applicative"], DirectedEdge["align-text", "text"], DirectedEdge["aligned-foreignptr", "base"], DirectedEdge["allocated-processor", "base"], DirectedEdge["allocated-processor", "vector-space"], DirectedEdge["alloy", "base"], DirectedEdge["alloy", "containers"], DirectedEdge["alloy", "mtl"], DirectedEdge["alloy", "syb"], DirectedEdge["alloy", "vector"], DirectedEdge["alloy-proxy-fd", "alloy"], DirectedEdge["alloy-proxy-fd", "base"], DirectedEdge["alloy-proxy-fd", "mtl"], DirectedEdge["almost-fix", "base"], DirectedEdge["alms", "array"], DirectedEdge["alms", "base"], DirectedEdge["alms", "containers"], DirectedEdge["alms", "directory"], DirectedEdge["alms", "editline"], DirectedEdge["alms", "fgl"], DirectedEdge["alms", "filepath"], DirectedEdge["alms", "HUnit"], DirectedEdge["alms", "incremental-sat-solver"], DirectedEdge["alms", "mtl"], DirectedEdge["alms", "network"], DirectedEdge["alms", "parsec"], DirectedEdge["alms", "pretty"], DirectedEdge["alms", "QuickCheck"], DirectedEdge["alms", "random"], DirectedEdge["alms", "readline"], DirectedEdge["alms", "stm"], DirectedEdge["alms", "syb"], DirectedEdge["alms", "template-haskell"], DirectedEdge["alms", "transformers"], DirectedEdge["alms", "tuple"], DirectedEdge["alpha", "array"], DirectedEdge["alpha", "AvlTree"], DirectedEdge["alpha", "base"], DirectedEdge["alpha", "bimap"], DirectedEdge["alpha", "bindings-posix"], DirectedEdge["alpha", "bytestring"], DirectedEdge["alpha", "cereal"], DirectedEdge["alpha", "containers"], DirectedEdge["alpha", "COrdering"], DirectedEdge["alpha", "cpphs"], DirectedEdge["alpha", "directory"], DirectedEdge["alpha", "filepath"], DirectedEdge["alpha", "ghc-prim"], DirectedEdge["alpha", "mtl"], DirectedEdge["alpha", "parsec"], DirectedEdge["alpha", "transformers"], DirectedEdge["alpha", "unix"], DirectedEdge["alpino-tools", "alpino-tools"], DirectedEdge["alpino-tools", "base"], DirectedEdge["alpino-tools", "bytestring"], DirectedEdge["alpino-tools", "bytestring-lexing"], DirectedEdge["alpino-tools", "conduit"], DirectedEdge["alpino-tools", "containers"], DirectedEdge["alpino-tools", "hexpat-pickle"], DirectedEdge["alpino-tools", "MonadRandom"], DirectedEdge["alpino-tools", "mtl"], DirectedEdge["alpino-tools", "random-shuffle"], DirectedEdge["alpino-tools", "resourcet"], DirectedEdge["alpino-tools", "rosezipper"], DirectedEdge["alpino-tools", "utf8-string"], DirectedEdge["alsa", "alsa-seq"], DirectedEdge["alsa", "alsa-pcm"], DirectedEdge["alsa", "alsa-core"], DirectedEdge["alsa", "array"], DirectedEdge["alsa", "base"], DirectedEdge["alsa", "extensible-exceptions"], DirectedEdge["alsa", "sample-frame"], DirectedEdge["alsa-core", "base"], DirectedEdge["alsa-core", "extensible-exceptions"], DirectedEdge["alsa-gui", "alsa-core"], DirectedEdge["alsa-gui", "alsa-seq"], DirectedEdge["alsa-gui", "base"], DirectedEdge["alsa-gui", "midi"], DirectedEdge["alsa-gui", "midi-alsa"], DirectedEdge["alsa-gui", "wx"], DirectedEdge["alsa-gui", "wxcore"], DirectedEdge["alsa-midi", "alsa-seq"], DirectedEdge["alsa-midi", "array"], DirectedEdge["alsa-midi", "base"], DirectedEdge["alsa-midi", "event-list"], DirectedEdge["alsa-midi", "midi"], DirectedEdge["alsa-midi", "non-negative"], DirectedEdge["alsa-mixer", "alsa-core"], DirectedEdge["alsa-mixer", "base"], DirectedEdge["alsa-mixer", "unix"], DirectedEdge["alsa-pcm", "alsa-core"], DirectedEdge["alsa-pcm", "alsa-pcm"], DirectedEdge["alsa-pcm", "alsa-seq"], DirectedEdge["alsa-pcm", "array"], DirectedEdge["alsa-pcm", "base"], DirectedEdge["alsa-pcm", "containers"], DirectedEdge["alsa-pcm", "extensible-exceptions"], DirectedEdge["alsa-pcm", "sample-frame"], DirectedEdge["alsa-pcm", "storable-record"], DirectedEdge["alsa-pcm", "storablevector"], DirectedEdge["alsa-pcm", "transformers"], DirectedEdge["alsa-pcm-tests", "alsa-pcm"], DirectedEdge["alsa-pcm-tests", "alsa"], DirectedEdge["alsa-pcm-tests", "base"], DirectedEdge["alsa-seq", "alsa-core"], DirectedEdge["alsa-seq", "alsa-seq"], DirectedEdge["alsa-seq", "array"], DirectedEdge["alsa-seq", "base"], DirectedEdge["alsa-seq", "bytestring"], DirectedEdge["alsa-seq", "data-accessor"], DirectedEdge["alsa-seq", "enumset"], DirectedEdge["alsa-seq", "extensible-exceptions"], DirectedEdge["alsa-seq", "poll"], DirectedEdge["alsa-seq", "transformers"], DirectedEdge["alsa-seq", "utility-ht"], DirectedEdge["alsa-seq-tests", "alsa-seq"], DirectedEdge["alsa-seq-tests", "alsa"], DirectedEdge["alsa-seq-tests", "base"], DirectedEdge["altcomposition", "base"], DirectedEdge["altcomposition", "composition"], DirectedEdge["alternative-io", "io-choice"], DirectedEdge["alternative-io", "base"], DirectedEdge["alternative-io", "lifted-base"], DirectedEdge["alternative-io", "monad-control"], DirectedEdge["alternative-io", "transformers"], DirectedEdge["alternative-io", "transformers-base"], DirectedEdge["altfloat", "base"], DirectedEdge["altfloat", "ghc-prim"], DirectedEdge["altfloat", "integer"], DirectedEdge["altfloat", "integer-gmp"], DirectedEdge["altfloat", "integer-simple"], DirectedEdge["alure", "base"], DirectedEdge["alure", "OpenAL"], DirectedEdge["amazon-emailer", "hworker-ses"], DirectedEdge["amazon-emailer", "base"], DirectedEdge["amazon-emailer", "bytestring"], DirectedEdge["amazon-emailer", "configurator"], DirectedEdge["amazon-emailer", "http-conduit"], DirectedEdge["amazon-emailer", "lifted-base"], DirectedEdge["amazon-emailer", "mime-mail"], DirectedEdge["amazon-emailer", "mime-mail-ses"], DirectedEdge["amazon-emailer", "postgresql-simple"], DirectedEdge["amazon-emailer", "resourcet"], DirectedEdge["amazon-emailer", "text"], DirectedEdge["amazon-emailer", "time"], DirectedEdge["amazon-emailer-client-snap", "hworker-ses"], DirectedEdge["amazon-emailer-client-snap", "base"], DirectedEdge["amazon-emailer-client-snap", "mtl"], DirectedEdge["amazon-emailer-client-snap", "snap"], DirectedEdge["amazon-emailer-client-snap", "snaplet-postgresql-simple"], DirectedEdge["amazon-emailer-client-snap", "text"], DirectedEdge["amazon-products", "amazon-products"], DirectedEdge["amazon-products", "base"], DirectedEdge["amazon-products", "base64-bytestring"], DirectedEdge["amazon-products", "byteable"], DirectedEdge["amazon-products", "bytestring"], DirectedEdge["amazon-products", "conduit"], DirectedEdge["amazon-products", "containers"], DirectedEdge["amazon-products", "cryptohash"], DirectedEdge["amazon-products", "http-conduit"], DirectedEdge["amazon-products", "http-types"], DirectedEdge["amazon-products", "mtl"], DirectedEdge["amazon-products", "old-locale"], DirectedEdge["amazon-products", "resourcet"], DirectedEdge["amazon-products", "text"], DirectedEdge["amazon-products", "time"], DirectedEdge["amazon-products", "transformers"], DirectedEdge["amazon-products", "transformers-base"], DirectedEdge["amazon-products", "xml-conduit"], DirectedEdge["amazon-products", "xml-picklers"], DirectedEdge["amazon-products", "xml-types"], DirectedEdge["amazonka", "amazonka-core"], DirectedEdge["amazonka", "base"], DirectedEdge["amazonka", "bytestring"], DirectedEdge["amazonka", "conduit"], DirectedEdge["amazonka", "conduit-extra"], DirectedEdge["amazonka", "directory"], DirectedEdge["amazonka", "exceptions"], DirectedEdge["amazonka", "http-conduit"], DirectedEdge["amazonka", "ini"], DirectedEdge["amazonka", "mmorph"], DirectedEdge["amazonka", "monad-control"], DirectedEdge["amazonka", "mtl"], DirectedEdge["amazonka", "resourcet"], DirectedEdge["amazonka", "retry"], DirectedEdge["amazonka", "text"], DirectedEdge["amazonka", "time"], DirectedEdge["amazonka", "transformers"], DirectedEdge["amazonka", "transformers-base"], DirectedEdge["amazonka", "transformers-compat"], DirectedEdge["amazonka-apigateway", "amazonka-core"], DirectedEdge["amazonka-apigateway", "base"], DirectedEdge["amazonka-application-autoscaling", "amazonka-core"], DirectedEdge["amazonka-application-autoscaling", "base"], DirectedEdge["amazonka-autoscaling", "amazonka-core"], DirectedEdge["amazonka-autoscaling", "base"], DirectedEdge["amazonka-certificatemanager", "amazonka-core"], DirectedEdge["amazonka-certificatemanager", "base"], DirectedEdge["amazonka-cloudformation", "amazonka-core"], DirectedEdge["amazonka-cloudformation", "base"], DirectedEdge["amazonka-cloudfront", "amazonka-core"], DirectedEdge["amazonka-cloudfront", "base"], DirectedEdge["amazonka-cloudhsm", "amazonka-core"], DirectedEdge["amazonka-cloudhsm", "base"], DirectedEdge["amazonka-cloudsearch", "amazonka-core"], DirectedEdge["amazonka-cloudsearch", "base"], DirectedEdge["amazonka-cloudsearch-domains", "amazonka-core"], DirectedEdge["amazonka-cloudsearch-domains", "base"], DirectedEdge["amazonka-cloudtrail", "amazonka-core"], DirectedEdge["amazonka-cloudtrail", "base"], DirectedEdge["amazonka-cloudwatch", "amazonka-core"], DirectedEdge["amazonka-cloudwatch", "base"], DirectedEdge["amazonka-cloudwatch-events", "amazonka-core"], DirectedEdge["amazonka-cloudwatch-events", "base"], DirectedEdge["amazonka-cloudwatch-logs", "amazonka-core"], DirectedEdge["amazonka-cloudwatch-logs", "base"], DirectedEdge["amazonka-codecommit", "amazonka-core"], DirectedEdge["amazonka-codecommit", "base"], DirectedEdge["amazonka-codedeploy", "amazonka-core"], DirectedEdge["amazonka-codedeploy", "base"], DirectedEdge["amazonka-codepipeline", "amazonka-core"], DirectedEdge["amazonka-codepipeline", "base"], DirectedEdge["amazonka-cognito-identity", "amazonka-core"], DirectedEdge["amazonka-cognito-identity", "base"], DirectedEdge["amazonka-cognito-idp", "amazonka-core"], DirectedEdge["amazonka-cognito-idp", "base"], DirectedEdge["amazonka-cognito-sync", "amazonka-core"], DirectedEdge["amazonka-cognito-sync", "base"], DirectedEdge["amazonka-config", "amazonka-core"], DirectedEdge["amazonka-config", "base"], DirectedEdge["amazonka-core", "aeson"], DirectedEdge["amazonka-core", "attoparsec"], DirectedEdge["amazonka-core", "base"], DirectedEdge["amazonka-core", "bifunctors"], DirectedEdge["amazonka-core", "bytestring"], DirectedEdge["amazonka-core", "case-insensitive"], DirectedEdge["amazonka-core", "conduit"], DirectedEdge["amazonka-core", "conduit-extra"], DirectedEdge["amazonka-core", "cryptonite"], DirectedEdge["amazonka-core", "deepseq"], DirectedEdge["amazonka-core", "exceptions"], DirectedEdge["amazonka-core", "hashable"], DirectedEdge["amazonka-core", "http-conduit"], DirectedEdge["amazonka-core", "http-types"], DirectedEdge["amazonka-core", "lens"], DirectedEdge["amazonka-core", "memory"], DirectedEdge["amazonka-core", "mtl"], DirectedEdge["amazonka-core", "nats"], DirectedEdge["amazonka-core", "old-locale"], DirectedEdge["amazonka-core", "resourcet"], DirectedEdge["amazonka-core", "scientific"], DirectedEdge["amazonka-core", "semigroups"], DirectedEdge["amazonka-core", "tagged"], DirectedEdge["amazonka-core", "text"], DirectedEdge["amazonka-core", "time"], DirectedEdge["amazonka-core", "transformers"], DirectedEdge["amazonka-core", "transformers-compat"], DirectedEdge["amazonka-core", "unordered-containers"], DirectedEdge["amazonka-core", "xml-conduit"], DirectedEdge["amazonka-core", "xml-types"], DirectedEdge["amazonka-datapipeline", "amazonka-core"], DirectedEdge["amazonka-datapipeline", "base"], DirectedEdge["amazonka-devicefarm", "amazonka-core"], DirectedEdge["amazonka-devicefarm", "base"], DirectedEdge["amazonka-directconnect", "amazonka-core"], DirectedEdge["amazonka-directconnect", "base"], DirectedEdge["amazonka-discovery", "amazonka-core"], DirectedEdge["amazonka-discovery", "base"], DirectedEdge["amazonka-dms", "amazonka-core"], DirectedEdge["amazonka-dms", "base"], DirectedEdge["amazonka-ds", "amazonka-core"], DirectedEdge["amazonka-ds", "base"], DirectedEdge["amazonka-dynamodb", "amazonka-core"], DirectedEdge["amazonka-dynamodb", "base"], DirectedEdge["amazonka-dynamodb-streams", "amazonka-core"], DirectedEdge["amazonka-dynamodb-streams", "base"], DirectedEdge["amazonka-ec2", "amazonka-core"], DirectedEdge["amazonka-ec2", "base"], DirectedEdge["amazonka-ecr", "amazonka-core"], DirectedEdge["amazonka-ecr", "base"], DirectedEdge["amazonka-ecs", "amazonka-core"], DirectedEdge["amazonka-ecs", "base"], DirectedEdge["amazonka-efs", "amazonka-core"], DirectedEdge["amazonka-efs", "base"], DirectedEdge["amazonka-elasticache", "amazonka-core"], DirectedEdge["amazonka-elasticache", "base"], DirectedEdge["amazonka-elasticbeanstalk", "amazonka-core"], DirectedEdge["amazonka-elasticbeanstalk", "base"], DirectedEdge["amazonka-elasticsearch", "amazonka-core"], DirectedEdge["amazonka-elasticsearch", "base"], DirectedEdge["amazonka-elastictranscoder", "amazonka-core"], DirectedEdge["amazonka-elastictranscoder", "base"], DirectedEdge["amazonka-elb", "amazonka-core"], DirectedEdge["amazonka-elb", "base"], DirectedEdge["amazonka-emr", "amazonka-core"], DirectedEdge["amazonka-emr", "base"], DirectedEdge["amazonka-gamelift", "amazonka-core"], DirectedEdge["amazonka-gamelift", "base"], DirectedEdge["amazonka-glacier", "amazonka-core"], DirectedEdge["amazonka-glacier", "base"], DirectedEdge["amazonka-iam", "amazonka-core"], DirectedEdge["amazonka-iam", "base"], DirectedEdge["amazonka-importexport", "amazonka-core"], DirectedEdge["amazonka-importexport", "base"], DirectedEdge["amazonka-inspector", "amazonka-core"], DirectedEdge["amazonka-inspector", "base"], DirectedEdge["amazonka-iot", "amazonka-core"], DirectedEdge["amazonka-iot", "base"], DirectedEdge["amazonka-iot-dataplane", "amazonka-core"], DirectedEdge["amazonka-iot-dataplane", "base"], DirectedEdge["amazonka-kinesis", "amazonka-core"], DirectedEdge["amazonka-kinesis", "base"], DirectedEdge["amazonka-kinesis-firehose", "amazonka-core"], DirectedEdge["amazonka-kinesis-firehose", "base"], DirectedEdge["amazonka-kms", "amazonka-core"], DirectedEdge["amazonka-kms", "base"], DirectedEdge["amazonka-lambda", "amazonka-core"], DirectedEdge["amazonka-lambda", "base"], DirectedEdge["amazonka-marketplace-analytics", "amazonka-core"], DirectedEdge["amazonka-marketplace-analytics", "base"], DirectedEdge["amazonka-marketplace-metering", "amazonka-core"], DirectedEdge["amazonka-marketplace-metering", "base"], DirectedEdge["amazonka-ml", "amazonka-core"], DirectedEdge["amazonka-ml", "base"], DirectedEdge["amazonka-opsworks", "amazonka-core"], DirectedEdge["amazonka-opsworks", "base"], DirectedEdge["amazonka-rds", "amazonka-core"], DirectedEdge["amazonka-rds", "base"], DirectedEdge["amazonka-redshift", "amazonka-core"], DirectedEdge["amazonka-redshift", "base"], DirectedEdge["amazonka-route53", "amazonka-core"], DirectedEdge["amazonka-route53", "base"], DirectedEdge["amazonka-route53-domains", "amazonka-core"], DirectedEdge["amazonka-route53-domains", "base"], DirectedEdge["amazonka-s3", "amazonka-core"], DirectedEdge["amazonka-s3", "base"], DirectedEdge["amazonka-s3", "lens"], DirectedEdge["amazonka-s3", "text"], DirectedEdge["amazonka-sdb", "amazonka-core"], DirectedEdge["amazonka-sdb", "base"], DirectedEdge["amazonka-ses", "amazonka-core"], DirectedEdge["amazonka-ses", "base"], DirectedEdge["amazonka-sns", "amazonka-core"], DirectedEdge["amazonka-sns", "base"], DirectedEdge["amazonka-sqs", "amazonka-core"], DirectedEdge["amazonka-sqs", "base"], DirectedEdge["amazonka-ssm", "amazonka-core"], DirectedEdge["amazonka-ssm", "base"], DirectedEdge["amazonka-storagegateway", "amazonka-core"], DirectedEdge["amazonka-storagegateway", "base"], DirectedEdge["amazonka-sts", "amazonka-core"], DirectedEdge["amazonka-sts", "base"], DirectedEdge["amazonka-support", "amazonka-core"], DirectedEdge["amazonka-support", "base"], DirectedEdge["amazonka-swf", "amazonka-core"], DirectedEdge["amazonka-swf", "base"], DirectedEdge["amazonka-test", "aeson"], DirectedEdge["amazonka-test", "amazonka-core"], DirectedEdge["amazonka-test", "base"], DirectedEdge["amazonka-test", "bifunctors"], DirectedEdge["amazonka-test", "bytestring"], DirectedEdge["amazonka-test", "case-insensitive"], DirectedEdge["amazonka-test", "conduit"], DirectedEdge["amazonka-test", "conduit-extra"], DirectedEdge["amazonka-test", "groom"], DirectedEdge["amazonka-test", "http-client"], DirectedEdge["amazonka-test", "http-types"], DirectedEdge["amazonka-test", "process"], DirectedEdge["amazonka-test", "resourcet"], DirectedEdge["amazonka-test", "tasty"], DirectedEdge["amazonka-test", "tasty-hunit"], DirectedEdge["amazonka-test", "template-haskell"], DirectedEdge["amazonka-test", "temporary"], DirectedEdge["amazonka-test", "text"], DirectedEdge["amazonka-test", "time"], DirectedEdge["amazonka-test", "unordered-containers"], DirectedEdge["amazonka-test", "yaml"], DirectedEdge["amazonka-waf", "amazonka-core"], DirectedEdge["amazonka-waf", "base"], DirectedEdge["amazonka-workspaces", "amazonka-core"], DirectedEdge["amazonka-workspaces", "base"], DirectedEdge["ampersand", "base"], DirectedEdge["ampersand", "bytestring"], DirectedEdge["ampersand", "containers"], DirectedEdge["ampersand", "csv"], DirectedEdge["ampersand", "directory"], DirectedEdge["ampersand", "filepath"], DirectedEdge["ampersand", "graphviz"], DirectedEdge["ampersand", "hashable"], DirectedEdge["ampersand", "HStringTemplate"], DirectedEdge["ampersand", "lens"], DirectedEdge["ampersand", "MissingH"], DirectedEdge["ampersand", "mtl"], DirectedEdge["ampersand", "old-locale"], DirectedEdge["ampersand", "old-time"], DirectedEdge["ampersand", "pandoc"], DirectedEdge["ampersand", "pandoc-types"], DirectedEdge["ampersand", "parsec"], DirectedEdge["ampersand", "process"], DirectedEdge["ampersand", "simple-sql-parser"], DirectedEdge["ampersand", "split"], DirectedEdge["ampersand", "SpreadsheetML"], DirectedEdge["ampersand", "text"], DirectedEdge["ampersand", "time"], DirectedEdge["ampersand", "utf8-string"], DirectedEdge["ampersand", "wl-pprint"], DirectedEdge["ampersand", "xlsx"], DirectedEdge["ampersand", "zlib"], DirectedEdge["amqp", "base"], DirectedEdge["amqp", "binary"], DirectedEdge["amqp", "bytestring"], DirectedEdge["amqp", "clock"], DirectedEdge["amqp", "connection"], DirectedEdge["amqp", "containers"], DirectedEdge["amqp", "monad-control"], DirectedEdge["amqp", "network"], DirectedEdge["amqp", "network-uri"], DirectedEdge["amqp", "split"], DirectedEdge["amqp", "stm"], DirectedEdge["amqp", "text"], DirectedEdge["amqp", "vector"], DirectedEdge["amqp", "xml"], DirectedEdge["amqp-conduit", "amqp"], DirectedEdge["amqp-conduit", "base"], DirectedEdge["amqp-conduit", "conduit"], DirectedEdge["amqp-conduit", "exceptions"], DirectedEdge["amqp-conduit", "lifted-base"], DirectedEdge["amqp-conduit", "monad-control"], DirectedEdge["amqp-conduit", "mtl"], DirectedEdge["amqp-conduit", "resourcet"], DirectedEdge["amqp-conduit", "text"], DirectedEdge["amqp-conduit", "transformers"], DirectedEdge["amqp-conduit", "transformers-base"], DirectedEdge["amrun", "base"], DirectedEdge["amrun", "deepseq"], DirectedEdge["amrun", "parsec"], DirectedEdge["analyze-client", "base"], DirectedEdge["analyze-client", "bytestring"], DirectedEdge["analyze-client", "http-conduit"], DirectedEdge["analyze-client", "MonadCatchIO-transformers"], DirectedEdge["analyze-client", "mtl"], DirectedEdge["analyze-client", "snap"], DirectedEdge["analyze-client", "snap-core"], DirectedEdge["analyze-client", "time"], DirectedEdge["anansi", "base"], DirectedEdge["anansi", "bytestring"], DirectedEdge["anansi", "containers"], DirectedEdge["anansi", "monads-tf"], DirectedEdge["anansi", "options"], DirectedEdge["anansi", "parsec"], DirectedEdge["anansi", "system-fileio"], DirectedEdge["anansi", "system-filepath"], DirectedEdge["anansi", "text"], DirectedEdge["anansi-hscolour", "anansi"], DirectedEdge["anansi-hscolour", "base"], DirectedEdge["anansi-hscolour", "bytestring"], DirectedEdge["anansi-hscolour", "containers"], DirectedEdge["anansi-hscolour", "hscolour"], DirectedEdge["anansi-hscolour", "monads-tf"], DirectedEdge["anansi-hscolour", "text"], DirectedEdge["anansi-pandoc", "anansi"], DirectedEdge["anansi-pandoc", "base"], DirectedEdge["anansi-pandoc", "bytestring"], DirectedEdge["anansi-pandoc", "containers"], DirectedEdge["anansi-pandoc", "monads-tf"], DirectedEdge["anansi-pandoc", "pandoc"], DirectedEdge["anansi-pandoc", "text"], DirectedEdge["anatomy", "atomo"], DirectedEdge["anatomy", "base"], DirectedEdge["anatomy", "blaze-html"], DirectedEdge["anatomy", "bytestring"], DirectedEdge["anatomy", "containers"], DirectedEdge["anatomy", "directory"], DirectedEdge["anatomy", "filepath"], DirectedEdge["anatomy", "hashable"], DirectedEdge["anatomy", "haskeline"], DirectedEdge["anatomy", "highlighter"], DirectedEdge["anatomy", "mtl"], DirectedEdge["anatomy", "parsec"], DirectedEdge["anatomy", "pretty"], DirectedEdge["anatomy", "pretty-show"], DirectedEdge["anatomy", "tagsoup"], DirectedEdge["anatomy", "text"], DirectedEdge["anatomy", "time"], DirectedEdge["anatomy", "vector"], DirectedEdge["android", "base"], DirectedEdge["android", "process"], DirectedEdge["android-lint-summary", "android-lint-summary"], DirectedEdge["android-lint-summary", "base"], DirectedEdge["android-lint-summary", "basic-prelude"], DirectedEdge["android-lint-summary", "data-default"], DirectedEdge["android-lint-summary", "directory"], DirectedEdge["android-lint-summary", "filemanip"], DirectedEdge["android-lint-summary", "hscolour"], DirectedEdge["android-lint-summary", "hxt"], DirectedEdge["android-lint-summary", "lens"], DirectedEdge["android-lint-summary", "mtl"], DirectedEdge["android-lint-summary", "optparse-applicative"], DirectedEdge["android-lint-summary", "rainbow"], DirectedEdge["android-lint-summary", "stringable"], DirectedEdge["android-lint-summary", "terminal-size"], DirectedEdge["android-lint-summary", "text"], DirectedEdge["angel", "base"], DirectedEdge["angel", "configurator"], DirectedEdge["angel", "containers"], DirectedEdge["angel", "mtl"], DirectedEdge["angel", "old-locale"], DirectedEdge["angel", "optparse-applicative"], DirectedEdge["angel", "process"], DirectedEdge["angel", "stm"], DirectedEdge["angel", "text"], DirectedEdge["angel", "time"], DirectedEdge["angel", "transformers"], DirectedEdge["angel", "unix"], DirectedEdge["angel", "unordered-containers"], DirectedEdge["animalcase", "base"], DirectedEdge["animalcase", "bytestring"], DirectedEdge["animalcase", "text"], DirectedEdge["annah", "annah"], DirectedEdge["annah", "array"], DirectedEdge["annah", "base"], DirectedEdge["annah", "Earley"], DirectedEdge["annah", "lens-family-core"], DirectedEdge["annah", "morte"], DirectedEdge["annah", "optparse-applicative"], DirectedEdge["annah", "pipes"], DirectedEdge["annah", "system-fileio"], DirectedEdge["annah", "system-filepath"], DirectedEdge["annah", "text"], DirectedEdge["annah", "text-format"], DirectedEdge["annah", "transformers"], DirectedEdge["annihilator", "base"], DirectedEdge["annotated-wl-pprint", "base"], DirectedEdge["anonymous-sums", "base"], DirectedEdge["anonymous-sums-tests", "anonymous-sums"], DirectedEdge["anonymous-sums-tests", "base"], DirectedEdge["anonymous-sums-tests", "QuickCheck"], DirectedEdge["ansi-pretty", "aeson"], DirectedEdge["ansi-pretty", "ansi-wl-pprint"], DirectedEdge["ansi-pretty", "array"], DirectedEdge["ansi-pretty", "base"], DirectedEdge["ansi-pretty", "bytestring"], DirectedEdge["ansi-pretty", "containers"], DirectedEdge["ansi-pretty", "generics-sop"], DirectedEdge["ansi-pretty", "nats"], DirectedEdge["ansi-pretty", "scientific"], DirectedEdge["ansi-pretty", "semigroups"], DirectedEdge["ansi-pretty", "tagged"], DirectedEdge["ansi-pretty", "text"], DirectedEdge["ansi-pretty", "time"], DirectedEdge["ansi-pretty", "unordered-containers"], DirectedEdge["ansi-pretty", "vector"], DirectedEdge["ansi-terminal", "base"], DirectedEdge["ansi-terminal", "unix"], DirectedEdge["ansi-wl-pprint", "ansi-terminal"], DirectedEdge["ansi-wl-pprint", "base"], DirectedEdge["ansigraph", "ansi-terminal"], DirectedEdge["ansigraph", "base"], DirectedEdge["antagonist", "antisplice"], DirectedEdge["antagonist", "base"], DirectedEdge["antagonist", "chatty"], DirectedEdge["antagonist", "chatty-utils"], DirectedEdge["antagonist", "ironforge"], DirectedEdge["antagonist", "mtl"], DirectedEdge["antagonist", "shakespeare"], DirectedEdge["antagonist", "text"], DirectedEdge["antagonist", "time"], DirectedEdge["antagonist", "time-locale-compat"], DirectedEdge["antagonist", "yesod"], DirectedEdge["antagonist", "yesod-auth"], DirectedEdge["antfarm", "antfarm"], DirectedEdge["antfarm", "base"], DirectedEdge["antfarm", "containers"], DirectedEdge["antfarm", "minimorph"], DirectedEdge["antfarm", "mtl"], DirectedEdge["antfarm", "parsec"], DirectedEdge["antfarm", "text"], DirectedEdge["antfarm", "transformers"], DirectedEdge["anticiv", "antisplice"], DirectedEdge["anticiv", "base"], DirectedEdge["anticiv", "chatty"], DirectedEdge["anticiv", "chatty-text"], DirectedEdge["anticiv", "chatty-utils"], DirectedEdge["anticiv", "ctpl"], DirectedEdge["anticiv", "directory"], DirectedEdge["anticiv", "ironforge"], DirectedEdge["anticiv", "mtl"], DirectedEdge["anticiv", "network"], DirectedEdge["anticiv", "plugins"], DirectedEdge["anticiv", "time"], DirectedEdge["anticiv", "transformers"], DirectedEdge["antigate", "base"], DirectedEdge["antigate", "bytestring"], DirectedEdge["antigate", "data-default"], DirectedEdge["antigate", "deepseq"], DirectedEdge["antigate", "exceptions"], DirectedEdge["antigate", "failure"], DirectedEdge["antigate", "http-client"], DirectedEdge["antigate", "http-conduit"], DirectedEdge["antigate", "resourcet"], DirectedEdge["antigate", "safe"], DirectedEdge["antigate", "text"], DirectedEdge["antigate", "transformers"], DirectedEdge["antimirov", "base"], DirectedEdge["antimirov", "containers"], DirectedEdge["antimirov", "QuickCheck"], DirectedEdge["antiquoter", "base"], DirectedEdge["antiquoter", "syb"], DirectedEdge["antiquoter", "template-haskell"], DirectedEdge["antisplice", "base"], DirectedEdge["antisplice", "chatty"], DirectedEdge["antisplice", "chatty-utils"], DirectedEdge["antisplice", "haskeline"], DirectedEdge["antisplice", "mtl"], DirectedEdge["antisplice", "template-haskell"], DirectedEdge["antisplice", "text"], DirectedEdge["antisplice", "time"], DirectedEdge["antisplice", "transformers"], DirectedEdge["antlrc", "base"], DirectedEdge["antlrc", "bytestring"], DirectedEdge["antlrc", "enumerator"], DirectedEdge["antlrc", "regex-posix"], DirectedEdge["anydbm", "base"], DirectedEdge["anydbm", "containers"], DirectedEdge["anydbm", "MissingH"], DirectedEdge["anydbm", "mtl"], DirectedEdge["aosd", "base"], DirectedEdge["aosd", "bindings-DSL"], DirectedEdge["aosd", "cairo"], DirectedEdge["aosd", "colour"], DirectedEdge["aosd", "monad-control"], DirectedEdge["aosd", "pango"], DirectedEdge["aosd", "transformers"], DirectedEdge["ap-reflect", "base"], DirectedEdge["apache-md5", "base"], DirectedEdge["apache-md5", "bytestring"], DirectedEdge["apache-md5", "deepseq"], DirectedEdge["apache-md5", "ghc-prim"], DirectedEdge["apelsin", "array"], DirectedEdge["apelsin", "base"], DirectedEdge["apelsin", "bytestring"], DirectedEdge["apelsin", "containers"], DirectedEdge["apelsin", "deepseq"], DirectedEdge["apelsin", "directory"], DirectedEdge["apelsin", "filepath"], DirectedEdge["apelsin", "glib"], DirectedEdge["apelsin", "gtk"], DirectedEdge["apelsin", "HTTP"], DirectedEdge["apelsin", "mtl"], DirectedEdge["apelsin", "network"], DirectedEdge["apelsin", "process"], DirectedEdge["apelsin", "transformers"], DirectedEdge["apelsin", "tremulous-query"], DirectedEdge["apelsin", "xdg-basedir"], DirectedEdge["api-builder", "aeson"], DirectedEdge["api-builder", "base"], DirectedEdge["api-builder", "bifunctors"], DirectedEdge["api-builder", "bytestring"], DirectedEdge["api-builder", "HTTP"], DirectedEdge["api-builder", "http-client"], DirectedEdge["api-builder", "http-client-tls"], DirectedEdge["api-builder", "http-types"], DirectedEdge["api-builder", "text"], DirectedEdge["api-builder", "transformers"], DirectedEdge["api-field-json-th", "aeson"], DirectedEdge["api-field-json-th", "base"], DirectedEdge["api-field-json-th", "lens"], DirectedEdge["api-field-json-th", "split"], DirectedEdge["api-field-json-th", "template-haskell"], DirectedEdge["api-field-json-th", "text"], DirectedEdge["api-opentheory-unicode", "base"], DirectedEdge["api-opentheory-unicode", "bytestring"], DirectedEdge["api-opentheory-unicode", "opentheory-unicode"], DirectedEdge["api-tools", "aeson"], DirectedEdge["api-tools", "aeson-pretty"], DirectedEdge["api-tools", "api-tools"], DirectedEdge["api-tools", "array"], DirectedEdge["api-tools", "attoparsec"], DirectedEdge["api-tools", "base"], DirectedEdge["api-tools", "base64-bytestring"], DirectedEdge["api-tools", "bytestring"], DirectedEdge["api-tools", "Cabal"], DirectedEdge["api-tools", "case-insensitive"], DirectedEdge["api-tools", "containers"], DirectedEdge["api-tools", "deepseq"], DirectedEdge["api-tools", "lens"], DirectedEdge["api-tools", "old-locale"], DirectedEdge["api-tools", "QuickCheck"], DirectedEdge["api-tools", "regex-compat-tdfa"], DirectedEdge["api-tools", "safe"], DirectedEdge["api-tools", "safecopy"], DirectedEdge["api-tools", "template-haskell"], DirectedEdge["api-tools", "text"], DirectedEdge["api-tools", "time"], DirectedEdge["api-tools", "unordered-containers"], DirectedEdge["api-tools", "vector"], DirectedEdge["apiary", "aeson"], DirectedEdge["apiary", "base"], DirectedEdge["apiary", "blaze-builder"], DirectedEdge["apiary", "blaze-html"], DirectedEdge["apiary", "blaze-markup"], DirectedEdge["apiary", "bytestring"], DirectedEdge["apiary", "bytestring-read"], DirectedEdge["apiary", "case-insensitive"], DirectedEdge["apiary", "data-default-class"], DirectedEdge["apiary", "exceptions"], DirectedEdge["apiary", "hashable"], DirectedEdge["apiary", "http-date"], DirectedEdge["apiary", "http-types"], DirectedEdge["apiary", "mime-types"], DirectedEdge["apiary", "monad-control"], DirectedEdge["apiary", "mtl"], DirectedEdge["apiary", "process"], DirectedEdge["apiary", "resourcet"], DirectedEdge["apiary", "stringsearch"], DirectedEdge["apiary", "template-haskell"], DirectedEdge["apiary", "text"], DirectedEdge["apiary", "time"], DirectedEdge["apiary", "transformers"], DirectedEdge["apiary", "transformers-base"], DirectedEdge["apiary", "types-compat"], DirectedEdge["apiary", "unix-compat"], DirectedEdge["apiary", "unordered-containers"], DirectedEdge["apiary", "vault"], DirectedEdge["apiary", "wai"], DirectedEdge["apiary", "wai-extra"], DirectedEdge["apiary", "web-routing"], DirectedEdge["apiary-authenticate", "apiary"], DirectedEdge["apiary-authenticate", "apiary-session"], DirectedEdge["apiary-authenticate", "authenticate"], DirectedEdge["apiary-authenticate", "base"], DirectedEdge["apiary-authenticate", "blaze-builder"], DirectedEdge["apiary-authenticate", "bytestring"], DirectedEdge["apiary-authenticate", "cereal"], DirectedEdge["apiary-authenticate", "data-default-class"], DirectedEdge["apiary-authenticate", "http-client"], DirectedEdge["apiary-authenticate", "http-client-tls"], DirectedEdge["apiary-authenticate", "http-types"], DirectedEdge["apiary-authenticate", "monad-control"], DirectedEdge["apiary-authenticate", "resourcet"], DirectedEdge["apiary-authenticate", "text"], DirectedEdge["apiary-authenticate", "types-compat"], DirectedEdge["apiary-authenticate", "wai"], DirectedEdge["apiary-authenticate", "web-routing"], DirectedEdge["apiary-clientsession", "apiary"], DirectedEdge["apiary-clientsession", "apiary-cookie"], DirectedEdge["apiary-clientsession", "apiary-session"], DirectedEdge["apiary-clientsession", "base"], DirectedEdge["apiary-clientsession", "bytestring"], DirectedEdge["apiary-clientsession", "cereal"], DirectedEdge["apiary-clientsession", "clientsession"], DirectedEdge["apiary-clientsession", "data-default-class"], DirectedEdge["apiary-clientsession", "time"], DirectedEdge["apiary-clientsession", "unix-compat"], DirectedEdge["apiary-clientsession", "vault"], DirectedEdge["apiary-cookie", "apiary"], DirectedEdge["apiary-cookie", "base"], DirectedEdge["apiary-cookie", "blaze-builder"], DirectedEdge["apiary-cookie", "blaze-html"], DirectedEdge["apiary-cookie", "bytestring"], DirectedEdge["apiary-cookie", "cookie"], DirectedEdge["apiary-cookie", "time"], DirectedEdge["apiary-cookie", "types-compat"], DirectedEdge["apiary-cookie", "wai"], DirectedEdge["apiary-cookie", "web-routing"], DirectedEdge["apiary-eventsource", "apiary"], DirectedEdge["apiary-eventsource", "base"], DirectedEdge["apiary-eventsource", "blaze-builder"], DirectedEdge["apiary-eventsource", "wai-extra"], DirectedEdge["apiary-helics", "apiary"], DirectedEdge["apiary-helics", "base"], DirectedEdge["apiary-helics", "bytestring"], DirectedEdge["apiary-helics", "data-default-class"], DirectedEdge["apiary-helics", "helics"], DirectedEdge["apiary-helics", "helics-wai"], DirectedEdge["apiary-helics", "monad-control"], DirectedEdge["apiary-helics", "text"], DirectedEdge["apiary-helics", "transformers"], DirectedEdge["apiary-helics", "types-compat"], DirectedEdge["apiary-helics", "vault"], DirectedEdge["apiary-helics", "wai"], DirectedEdge["apiary-http-client", "apiary"], DirectedEdge["apiary-http-client", "base"], DirectedEdge["apiary-http-client", "bytestring"], DirectedEdge["apiary-http-client", "bytestring-builder"], DirectedEdge["apiary-http-client", "data-default-class"], DirectedEdge["apiary-http-client", "http-client"], DirectedEdge["apiary-http-client", "http-types"], DirectedEdge["apiary-http-client", "text"], DirectedEdge["apiary-http-client", "transformers"], DirectedEdge["apiary-http-client", "types-compat"], DirectedEdge["apiary-http-client", "wai"], DirectedEdge["apiary-logger", "apiary"], DirectedEdge["apiary-logger", "base"], DirectedEdge["apiary-logger", "data-default-class"], DirectedEdge["apiary-logger", "fast-logger"], DirectedEdge["apiary-logger", "lifted-base"], DirectedEdge["apiary-logger", "monad-control"], DirectedEdge["apiary-logger", "monad-logger"], DirectedEdge["apiary-logger", "transformers"], DirectedEdge["apiary-logger", "transformers-base"], DirectedEdge["apiary-logger", "types-compat"], DirectedEdge["apiary-memcached", "apiary"], DirectedEdge["apiary-memcached", "base"], DirectedEdge["apiary-memcached", "bytestring"], DirectedEdge["apiary-memcached", "data-default-class"], DirectedEdge["apiary-memcached", "memcached-binary"], DirectedEdge["apiary-memcached", "monad-control"], DirectedEdge["apiary-memcached", "text"], DirectedEdge["apiary-memcached", "transformers"], DirectedEdge["apiary-memcached", "types-compat"], DirectedEdge["apiary-mongoDB", "apiary"], DirectedEdge["apiary-mongoDB", "base"], DirectedEdge["apiary-mongoDB", "bson"], DirectedEdge["apiary-mongoDB", "data-default-class"], DirectedEdge["apiary-mongoDB", "lifted-base"], DirectedEdge["apiary-mongoDB", "monad-control"], DirectedEdge["apiary-mongoDB", "mongoDB"], DirectedEdge["apiary-mongoDB", "resource-pool"], DirectedEdge["apiary-mongoDB", "text"], DirectedEdge["apiary-mongoDB", "time"], DirectedEdge["apiary-mongoDB", "transformers"], DirectedEdge["apiary-mongoDB", "types-compat"], DirectedEdge["apiary-persistent", "apiary"], DirectedEdge["apiary-persistent", "apiary-logger"], DirectedEdge["apiary-persistent", "base"], DirectedEdge["apiary-persistent", "monad-control"], DirectedEdge["apiary-persistent", "monad-logger"], DirectedEdge["apiary-persistent", "persistent"], DirectedEdge["apiary-persistent", "resource-pool"], DirectedEdge["apiary-persistent", "resourcet"], DirectedEdge["apiary-persistent", "transformers"], DirectedEdge["apiary-persistent", "transformers-base"], DirectedEdge["apiary-persistent", "types-compat"], DirectedEdge["apiary-persistent", "web-routing"], DirectedEdge["apiary-purescript", "apiary"], DirectedEdge["apiary-purescript", "base"], DirectedEdge["apiary-purescript", "bytestring"], DirectedEdge["apiary-purescript", "data-default-class"], DirectedEdge["apiary-purescript", "filepath"], DirectedEdge["apiary-purescript", "Glob"], DirectedEdge["apiary-purescript", "parsec"], DirectedEdge["apiary-purescript", "purescript"], DirectedEdge["apiary-purescript", "text"], DirectedEdge["apiary-purescript", "transformers"], DirectedEdge["apiary-purescript", "types-compat"], DirectedEdge["apiary-purescript", "unordered-containers"], DirectedEdge["apiary-session", "apiary"], DirectedEdge["apiary-session", "base"], DirectedEdge["apiary-session", "types-compat"], DirectedEdge["apiary-session", "wai"], DirectedEdge["apiary-session", "web-routing"], DirectedEdge["apiary-websockets", "apiary"], DirectedEdge["apiary-websockets", "base"], DirectedEdge["apiary-websockets", "wai-websockets"], DirectedEdge["apiary-websockets", "web-routing"], DirectedEdge["apiary-websockets", "websockets"], DirectedEdge["apis", "aeson"], DirectedEdge["apis", "base"], DirectedEdge["apis", "containers"], DirectedEdge["apis", "deepseq"], DirectedEdge["apis", "directory"], DirectedEdge["apis", "exceptions"], DirectedEdge["apis", "filemanip"], DirectedEdge["apis", "filepath"], DirectedEdge["apis", "hslogger"], DirectedEdge["apis", "hxt"], DirectedEdge["apis", "mtl"], DirectedEdge["apis", "opendatatable"], DirectedEdge["apis", "split"], DirectedEdge["apis", "template-haskell"], DirectedEdge["apis", "text"], DirectedEdge["apis", "th-lift"], DirectedEdge["apis", "time"], DirectedEdge["apis", "transformers"], DirectedEdge["apis", "unordered-containers"], DirectedEdge["apis", "utf8-string"], DirectedEdge["apis", "yql"], DirectedEdge["apotiki", "aeson"], DirectedEdge["apotiki", "attoparsec"], DirectedEdge["apotiki", "base"], DirectedEdge["apotiki", "binary"], DirectedEdge["apotiki", "bytestring"], DirectedEdge["apotiki", "containers"], DirectedEdge["apotiki", "crypto-api"], DirectedEdge["apotiki", "cryptohash"], DirectedEdge["apotiki", "directory"], DirectedEdge["apotiki", "http-types"], DirectedEdge["apotiki", "old-time"], DirectedEdge["apotiki", "openpgp"], DirectedEdge["apotiki", "openpgp-asciiarmor"], DirectedEdge["apotiki", "openpgp-crypto-api"], DirectedEdge["apotiki", "scotty"], DirectedEdge["apotiki", "strict"], DirectedEdge["apotiki", "tar"], DirectedEdge["apotiki", "text"], DirectedEdge["apotiki", "transformers"], DirectedEdge["apotiki", "wai-extra"], DirectedEdge["apotiki", "wai-middleware-static"], DirectedEdge["apotiki", "zlib"], DirectedEdge["app-lens", "base"], DirectedEdge["app-lens", "containers"], DirectedEdge["app-lens", "lens"], DirectedEdge["app-lens", "mtl"], DirectedEdge["app-settings", "base"], DirectedEdge["app-settings", "containers"], DirectedEdge["app-settings", "directory"], DirectedEdge["app-settings", "mtl"], DirectedEdge["app-settings", "parsec"], DirectedEdge["app-settings", "text"], DirectedEdge["appar", "base"], DirectedEdge["appar", "bytestring"], DirectedEdge["appc", "aeson"], DirectedEdge["appc", "base"], DirectedEdge["appc", "bytestring"], DirectedEdge["appc", "containers"], DirectedEdge["appc", "optparse-applicative"], DirectedEdge["appc", "semver"], DirectedEdge["appc", "text"], DirectedEdge["appc", "uuid"], DirectedEdge["applicative-extras", "base"], DirectedEdge["applicative-fail", "base"], DirectedEdge["applicative-fail", "bifunctors"], DirectedEdge["applicative-fail", "dlist"], DirectedEdge["applicative-fail", "mtl"], DirectedEdge["applicative-fail", "transformers"], DirectedEdge["applicative-fail", "transformers-base"], DirectedEdge["applicative-numbers", "base"], DirectedEdge["applicative-parsec", "base"], DirectedEdge["applicative-parsec", "containers"], DirectedEdge["applicative-parsec", "lens"], DirectedEdge["applicative-parsec", "mtl"], DirectedEdge["applicative-parsec", "text"], DirectedEdge["applicative-quoters", "base"], DirectedEdge["applicative-quoters", "haskell-src-meta"], DirectedEdge["applicative-quoters", "template-haskell"], DirectedEdge["applicative-splice", "base"], DirectedEdge["applicative-splice", "haskell-src-exts"], DirectedEdge["applicative-splice", "haskell-src-meta"], DirectedEdge["applicative-splice", "mtl"], DirectedEdge["applicative-splice", "syb"], DirectedEdge["applicative-splice", "template-haskell"], DirectedEdge["apply-refact", "base"], DirectedEdge["apply-refact", "containers"], DirectedEdge["apply-refact", "directory"], DirectedEdge["apply-refact", "filemanip"], DirectedEdge["apply-refact", "filepath"], DirectedEdge["apply-refact", "ghc"], DirectedEdge["apply-refact", "ghc-exactprint"], DirectedEdge["apply-refact", "mtl"], DirectedEdge["apply-refact", "optparse-applicative"], DirectedEdge["apply-refact", "process"], DirectedEdge["apply-refact", "refact"], DirectedEdge["apply-refact", "syb"], DirectedEdge["apply-refact", "temporary"], DirectedEdge["apply-refact", "transformers"], DirectedEdge["apply-refact", "unix-compat"], DirectedEdge["apportionment", "base"], DirectedEdge["apportionment", "containers"], DirectedEdge["apportionment", "utility-ht"], DirectedEdge["approx-rand-test", "approx-rand-test"], DirectedEdge["approx-rand-test", "base"], DirectedEdge["approx-rand-test", "Chart"], DirectedEdge["approx-rand-test", "Chart-cairo"], DirectedEdge["approx-rand-test", "Chart-diagrams"], DirectedEdge["approx-rand-test", "colour"], DirectedEdge["approx-rand-test", "conduit"], DirectedEdge["approx-rand-test", "containers"], DirectedEdge["approx-rand-test", "data-default"], DirectedEdge["approx-rand-test", "data-default-class"], DirectedEdge["approx-rand-test", "filepath"], DirectedEdge["approx-rand-test", "lens"], DirectedEdge["approx-rand-test", "monad-mersenne-random"], DirectedEdge["approx-rand-test", "mtl"], DirectedEdge["approx-rand-test", "statistics"], DirectedEdge["approx-rand-test", "text"], DirectedEdge["approx-rand-test", "transformers"], DirectedEdge["approx-rand-test", "vector"], DirectedEdge["approx-rand-test", "vector-algorithms"], DirectedEdge["approximate", "base"], DirectedEdge["approximate", "binary"], DirectedEdge["approximate", "bytes"], DirectedEdge["approximate", "cereal"], DirectedEdge["approximate", "comonad"], DirectedEdge["approximate", "deepseq"], DirectedEdge["approximate", "ghc-prim"], DirectedEdge["approximate", "hashable"], DirectedEdge["approximate", "hashable-extras"], DirectedEdge["approximate", "lens"], DirectedEdge["approximate", "log-domain"], DirectedEdge["approximate", "pointed"], DirectedEdge["approximate", "safecopy"], DirectedEdge["approximate", "semigroupoids"], DirectedEdge["approximate", "semigroups"], DirectedEdge["approximate", "vector"], DirectedEdge["approximate-equality", "base"], DirectedEdge["approximate-equality", "type-level-natural-number"], DirectedEdge["ar-timestamp-wiper", "base"], DirectedEdge["ar-timestamp-wiper", "bytestring"], DirectedEdge["arb-fft", "arb-fft"], DirectedEdge["arb-fft", "base"], DirectedEdge["arb-fft", "containers"], DirectedEdge["arb-fft", "criterion"], DirectedEdge["arb-fft", "directory"], DirectedEdge["arb-fft", "filepath"], DirectedEdge["arb-fft", "primitive"], DirectedEdge["arb-fft", "transformers"], DirectedEdge["arb-fft", "vector"], DirectedEdge["arbb-vm", "base"], DirectedEdge["arbb-vm", "bytestring"], DirectedEdge["arbb-vm", "cereal"], DirectedEdge["arbb-vm", "containers"], DirectedEdge["arbb-vm", "directory"], DirectedEdge["arbb-vm", "mtl"], DirectedEdge["arbb-vm", "pretty"], DirectedEdge["arbtt", "aeson"], DirectedEdge["arbtt", "array"], DirectedEdge["arbtt", "base"], DirectedEdge["arbtt", "binary"], DirectedEdge["arbtt", "bytestring"], DirectedEdge["arbtt", "bytestring-progress"], DirectedEdge["arbtt", "containers"], DirectedEdge["arbtt", "deepseq"], DirectedEdge["arbtt", "directory"], DirectedEdge["arbtt", "filepath"], DirectedEdge["arbtt", "old-locale"], DirectedEdge["arbtt", "parsec"], DirectedEdge["arbtt", "pcre-light"], DirectedEdge["arbtt", "strict"], DirectedEdge["arbtt", "terminal-progress-bar"], DirectedEdge["arbtt", "time"], DirectedEdge["arbtt", "transformers"], DirectedEdge["arbtt", "unix"], DirectedEdge["arbtt", "utf8-string"], DirectedEdge["archive", "base"], DirectedEdge["archive", "bytestring"], DirectedEdge["archive", "debian"], DirectedEdge["archive", "debian-mirror"], DirectedEdge["archive", "directory"], DirectedEdge["archive", "Extra"], DirectedEdge["archive", "filepath"], DirectedEdge["archive", "help"], DirectedEdge["archive", "HUnit"], DirectedEdge["archive", "mtl"], DirectedEdge["archive", "network"], DirectedEdge["archive", "old-locale"], DirectedEdge["archive", "pretty"], DirectedEdge["archive", "process"], DirectedEdge["archive", "progress"], DirectedEdge["archive", "regex-compat"], DirectedEdge["archive", "regex-posix"], DirectedEdge["archive", "time"], DirectedEdge["archive", "unix"], DirectedEdge["archive", "Unixutils"], DirectedEdge["archive", "xhtml"], DirectedEdge["archiver", "base"], DirectedEdge["archiver", "bytestring"], DirectedEdge["archiver", "containers"], DirectedEdge["archiver", "curl"], DirectedEdge["archiver", "HTTP"], DirectedEdge["archiver", "network"], DirectedEdge["archiver", "process"], DirectedEdge["archiver", "random"], DirectedEdge["archlinux", "base"], DirectedEdge["archlinux", "Cabal"], DirectedEdge["archlinux", "containers"], DirectedEdge["archlinux", "directory"], DirectedEdge["archlinux", "filepath"], DirectedEdge["archlinux", "pretty"], DirectedEdge["archlinux-web", "archlinux"], DirectedEdge["archlinux-web", "base"], DirectedEdge["archlinux-web", "Cabal"], DirectedEdge["archlinux-web", "containers"], DirectedEdge["archlinux-web", "csv"], DirectedEdge["archlinux-web", "deepseq"], DirectedEdge["archlinux-web", "directory"], DirectedEdge["archlinux-web", "filepath"], DirectedEdge["archlinux-web", "HTTP"], DirectedEdge["archlinux-web", "json"], DirectedEdge["archlinux-web", "old-time"], DirectedEdge["archlinux-web", "parallel"], DirectedEdge["archlinux-web", "pretty"], DirectedEdge["archlinux-web", "prettyclass"], DirectedEdge["archlinux-web", "process"], DirectedEdge["archlinux-web", "strict-concurrency"], DirectedEdge["archlinux-web", "xhtml"], DirectedEdge["archnews", "base"], DirectedEdge["archnews", "containers"], DirectedEdge["archnews", "download-curl"], DirectedEdge["archnews", "feed"], DirectedEdge["archnews", "tagsoup"], DirectedEdge["arena", "base"], DirectedEdge["arena", "bytes"], DirectedEdge["arena", "bytestring"], DirectedEdge["arena", "containers"], DirectedEdge["arena", "digest"], DirectedEdge["arena", "directory"], DirectedEdge["arena", "filepath"], DirectedEdge["arena", "mtl"], DirectedEdge["arena", "persistent-vector"], DirectedEdge["arena", "safe"], DirectedEdge["arena", "semigroups"], DirectedEdge["arena", "unix"], DirectedEdge["arff", "base"], DirectedEdge["arff", "binary"], DirectedEdge["arff", "bytestring"], DirectedEdge["arff", "bytestring-lexing"], DirectedEdge["arff", "bytestring-show"], DirectedEdge["arff", "old-locale"], DirectedEdge["arff", "time"], DirectedEdge["arghwxhaskell", "base"], DirectedEdge["arghwxhaskell", "directory"], DirectedEdge["arghwxhaskell", "wx"], DirectedEdge["argon", "aeson"], DirectedEdge["argon", "ansi-terminal"], DirectedEdge["argon", "argon"], DirectedEdge["argon", "base"], DirectedEdge["argon", "bytestring"], DirectedEdge["argon", "Cabal"], DirectedEdge["argon", "containers"], DirectedEdge["argon", "directory"], DirectedEdge["argon", "docopt"], DirectedEdge["argon", "ghc"], DirectedEdge["argon", "ghc-paths"], DirectedEdge["argon", "ghc-syb-utils"], DirectedEdge["argon", "lens-simple"], DirectedEdge["argon", "pipes"], DirectedEdge["argon", "pipes-bytestring"], DirectedEdge["argon", "pipes-files"], DirectedEdge["argon", "pipes-group"], DirectedEdge["argon", "pipes-safe"], DirectedEdge["argon", "syb"], DirectedEdge["argon2", "base"], DirectedEdge["argon2", "bytestring"], DirectedEdge["argon2", "text"], DirectedEdge["argon2", "transformers"], DirectedEdge["argparser", "base"], DirectedEdge["argparser", "containers"], DirectedEdge["arguedit", "base"], DirectedEdge["arguedit", "bimap"], DirectedEdge["arguedit", "containers"], DirectedEdge["arguedit", "glib"], DirectedEdge["arguedit", "gtk"], DirectedEdge["arguedit", "HDBC"], DirectedEdge["arguedit", "indents"], DirectedEdge["arguedit", "mtl"], DirectedEdge["arguedit", "parsec"], DirectedEdge["ariadne", "async"], DirectedEdge["ariadne", "base"], DirectedEdge["ariadne", "bert"], DirectedEdge["ariadne", "Cabal"], DirectedEdge["ariadne", "containers"], DirectedEdge["ariadne", "data-lens"], DirectedEdge["ariadne", "data-lens-fd"], DirectedEdge["ariadne", "data-lens-template"], DirectedEdge["ariadne", "directory"], DirectedEdge["ariadne", "filepath"], DirectedEdge["ariadne", "haskell-names"], DirectedEdge["ariadne", "haskell-packages"], DirectedEdge["ariadne", "haskell-src-exts"], DirectedEdge["ariadne", "hse-cpp"], DirectedEdge["ariadne", "hslogger"], DirectedEdge["ariadne", "mtl"], DirectedEdge["ariadne", "stm"], DirectedEdge["ariadne", "tagged"], DirectedEdge["ariadne", "transformers"], DirectedEdge["ariadne", "utf8-string"], DirectedEdge["arion", "base"], DirectedEdge["arion", "containers"], DirectedEdge["arion", "directory"], DirectedEdge["arion", "filemanip"], DirectedEdge["arion", "fsnotify"], DirectedEdge["arion", "process"], DirectedEdge["arion", "regex-posix"], DirectedEdge["arion", "safe"], DirectedEdge["arion", "split"], DirectedEdge["arion", "system-filepath"], DirectedEdge["arion", "text"], DirectedEdge["arion", "transformers"], DirectedEdge["arith-encode", "arithmoi"], DirectedEdge["arith-encode", "array"], DirectedEdge["arith-encode", "base"], DirectedEdge["arith-encode", "binary"], DirectedEdge["arith-encode", "Cabal"], DirectedEdge["arith-encode", "containers"], DirectedEdge["arith-encode", "fgl"], DirectedEdge["arith-encode", "hashable"], DirectedEdge["arith-encode", "unordered-containers"], DirectedEdge["arithmatic", "base"], DirectedEdge["arithmetic", "base"], DirectedEdge["arithmetic", "containers"], DirectedEdge["arithmetic", "opentheory"], DirectedEdge["arithmetic", "opentheory-bits"], DirectedEdge["arithmetic", "opentheory-divides"], DirectedEdge["arithmetic", "opentheory-primitive"], DirectedEdge["arithmetic", "QuickCheck"], DirectedEdge["arithmetic", "random"], DirectedEdge["arithmoi", "array"], DirectedEdge["arithmoi", "base"], DirectedEdge["arithmoi", "containers"], DirectedEdge["arithmoi", "ghc-prim"], DirectedEdge["arithmoi", "integer-gmp"], DirectedEdge["arithmoi", "mtl"], DirectedEdge["arithmoi", "random"], DirectedEdge["armada", "base"], DirectedEdge["armada", "GLUT"], DirectedEdge["armada", "mtl"], DirectedEdge["armada", "OpenGL"], DirectedEdge["armada", "stm"], DirectedEdge["arpa", "arpa"], DirectedEdge["arpa", "base"], DirectedEdge["array", "base"], DirectedEdge["array-forth", "array"], DirectedEdge["array-forth", "array-forth"], DirectedEdge["array-forth", "base"], DirectedEdge["array-forth", "Chart"], DirectedEdge["array-forth", "mcmc-synthesis"], DirectedEdge["array-forth", "modular-arithmetic"], DirectedEdge["array-forth", "MonadRandom"], DirectedEdge["array-forth", "OddWord"], DirectedEdge["array-forth", "optparse-applicative"], DirectedEdge["array-forth", "split"], DirectedEdge["array-forth", "vector"], DirectedEdge["array-memoize", "array"], DirectedEdge["array-memoize", "base"], DirectedEdge["array-primops", "base"], DirectedEdge["array-primops", "ghc-prim"], DirectedEdge["array-utils", "array"], DirectedEdge["array-utils", "base"], DirectedEdge["arrow-improve", "arrows"], DirectedEdge["arrow-improve", "base"], DirectedEdge["arrow-improve", "pointed"], DirectedEdge["arrow-improve", "profunctors"], DirectedEdge["arrow-improve", "semigroupoids"], DirectedEdge["arrow-list", "base"], DirectedEdge["arrow-list", "containers"], DirectedEdge["arrow-list", "mtl"], DirectedEdge["arrowapply-utils", "base"], DirectedEdge["arrowp", "array"], DirectedEdge["arrowp", "base"], DirectedEdge["arrowp", "containers"], DirectedEdge["arrowp", "haskell-src"], DirectedEdge["arrows", "base"], DirectedEdge["arrows", "Stream"], DirectedEdge["artery", "base"], DirectedEdge["artery", "containers"], DirectedEdge["artery", "profunctors"], DirectedEdge["artery", "transformers"], DirectedEdge["arx", "attoparsec"], DirectedEdge["arx", "base"], DirectedEdge["arx", "blaze-builder"], DirectedEdge["arx", "bytestring"], DirectedEdge["arx", "bytestring-nums"], DirectedEdge["arx", "containers"], DirectedEdge["arx", "file-embed"], DirectedEdge["arx", "parsec"], DirectedEdge["arx", "process"], DirectedEdge["arx", "shell-escape"], DirectedEdge["arx", "template-haskell"], DirectedEdge["arxiv", "base"], DirectedEdge["arxiv", "parsec"], DirectedEdge["arxiv", "split"], DirectedEdge["arxiv", "tagsoup"], DirectedEdge["ascetic", "base"], DirectedEdge["ascetic", "MissingH"], DirectedEdge["ascii", "base"], DirectedEdge["ascii", "blaze-builder"], DirectedEdge["ascii", "bytestring"], DirectedEdge["ascii", "case-insensitive"], DirectedEdge["ascii", "hashable"], DirectedEdge["ascii", "text"], DirectedEdge["ascii-flatten", "ascii-flatten"], DirectedEdge["ascii-flatten", "base"], DirectedEdge["ascii-flatten", "text"], DirectedEdge["ascii-progress", "async"], DirectedEdge["ascii-progress", "base"], DirectedEdge["ascii-progress", "bytestring"], DirectedEdge["ascii-progress", "concurrent-output"], DirectedEdge["ascii-progress", "conduit"], DirectedEdge["ascii-progress", "data-default"], DirectedEdge["ascii-progress", "HTTP"], DirectedEdge["ascii-progress", "http-conduit"], DirectedEdge["ascii-progress", "http-types"], DirectedEdge["ascii-progress", "random"], DirectedEdge["ascii-progress", "time"], DirectedEdge["ascii-progress", "transformers"], DirectedEdge["ascii-table", "aeson"], DirectedEdge["ascii-table", "base"], DirectedEdge["ascii-table", "containers"], DirectedEdge["ascii-table", "dlist"], DirectedEdge["ascii-table", "text"], DirectedEdge["ascii-table", "unordered-containers"], DirectedEdge["ascii-table", "vector"], DirectedEdge["ascii-table", "wl-pprint-extras"], DirectedEdge["ascii-vector-avc", "ascii-vector-avc"], DirectedEdge["ascii-vector-avc", "attoparsec"], DirectedEdge["ascii-vector-avc", "base"], DirectedEdge["ascii-vector-avc", "binary"], DirectedEdge["ascii-vector-avc", "bytestring"], DirectedEdge["ascii-vector-avc", "deepseq"], DirectedEdge["ascii-vector-avc", "deepseq-generics"], DirectedEdge["ascii-vector-avc", "HUnit"], DirectedEdge["ascii-vector-avc", "split"], DirectedEdge["ascii-vector-avc", "zlib"], DirectedEdge["ascii85-conduit", "base"], DirectedEdge["ascii85-conduit", "bytestring"], DirectedEdge["ascii85-conduit", "conduit"], DirectedEdge["asciidiagram", "asciidiagram"], DirectedEdge["asciidiagram", "base"], DirectedEdge["asciidiagram", "bytestring"], DirectedEdge["asciidiagram", "containers"], DirectedEdge["asciidiagram", "directory"], DirectedEdge["asciidiagram", "filepath"], DirectedEdge["asciidiagram", "FontyFruity"], DirectedEdge["asciidiagram", "JuicyPixels"], DirectedEdge["asciidiagram", "lens"], DirectedEdge["asciidiagram", "linear"], DirectedEdge["asciidiagram", "mtl"], DirectedEdge["asciidiagram", "optparse-applicative"], DirectedEdge["asciidiagram", "rasterific-svg"], DirectedEdge["asciidiagram", "svg-tree"], DirectedEdge["asciidiagram", "text"], DirectedEdge["asciidiagram", "vector"], DirectedEdge["asic", "asil"], DirectedEdge["asic", "base"], DirectedEdge["asic", "bytestring"], DirectedEdge["asic", "utf8-string"], DirectedEdge["asil", "array"], DirectedEdge["asil", "base"], DirectedEdge["asil", "binary"], DirectedEdge["asil", "bytestring"], DirectedEdge["asil", "containers"], DirectedEdge["asil", "directory"], DirectedEdge["asil", "filepath"], DirectedEdge["asil", "haskell-src-exts"], DirectedEdge["asil", "mtl"], DirectedEdge["asil", "pretty"], DirectedEdge["asil", "utf8-string"], DirectedEdge["asil", "uuagc"], DirectedEdge["asil", "zip-archive"], DirectedEdge["asil", "zlib"], DirectedEdge["asn1-data", "asn1-encoding"], DirectedEdge["asn1-data", "base"], DirectedEdge["asn1-data", "bytestring"], DirectedEdge["asn1-data", "cereal"], DirectedEdge["asn1-data", "HUnit"], DirectedEdge["asn1-data", "mtl"], DirectedEdge["asn1-data", "QuickCheck"], DirectedEdge["asn1-data", "test-framework"], DirectedEdge["asn1-data", "text"], DirectedEdge["asn1-encoding", "asn1-types"], DirectedEdge["asn1-encoding", "base"], DirectedEdge["asn1-encoding", "bytestring"], DirectedEdge["asn1-encoding", "hourglass"], DirectedEdge["asn1-parse", "asn1-encoding"], DirectedEdge["asn1-parse", "asn1-types"], DirectedEdge["asn1-parse", "base"], DirectedEdge["asn1-parse", "bytestring"], DirectedEdge["asn1-types", "base"], DirectedEdge["asn1-types", "bytestring"], DirectedEdge["asn1-types", "hourglass"], DirectedEdge["asn1-types", "memory"], DirectedEdge["asn1dump", "asn1-encoding"], DirectedEdge["asn1dump", "asn1-types"], DirectedEdge["asn1dump", "base"], DirectedEdge["asn1dump", "bytestring"], DirectedEdge["asn1dump", "pem"], DirectedEdge["assembler", "base"], DirectedEdge["assembler", "containers"], DirectedEdge["assembler", "ghc-binary"], DirectedEdge["assembler", "parsec"], DirectedEdge["assert", "base"], DirectedEdge["assert-failure", "base"], DirectedEdge["assert-failure", "pretty-show"], DirectedEdge["assert-failure", "text"], DirectedEdge["assertions", "ansi-terminal"], DirectedEdge["assertions", "base"], DirectedEdge["assertions", "containers"], DirectedEdge["assimp", "base"], DirectedEdge["assimp", "vect"], DirectedEdge["astar", "base"], DirectedEdge["astar", "hashable"], DirectedEdge["astar", "psqueues"], DirectedEdge["astar", "unordered-containers"], DirectedEdge["astrds", "base"], DirectedEdge["astrds", "containers"], DirectedEdge["astrds", "directory"], DirectedEdge["astrds", "MonadRandom"], DirectedEdge["astrds", "mtl"], DirectedEdge["astrds", "OpenGL"], DirectedEdge["astrds", "random"], DirectedEdge["astrds", "SDL"], DirectedEdge["astrds", "SDL-image"], DirectedEdge["astrds", "SDL-mixer"], DirectedEdge["astrds", "SDL-ttf"], DirectedEdge["astrds", "unix"], DirectedEdge["astview", "astview-utils"], DirectedEdge["astview", "base"], DirectedEdge["astview", "bytestring"], DirectedEdge["astview", "containers"], DirectedEdge["astview", "directory"], DirectedEdge["astview", "filepath"], DirectedEdge["astview", "glade"], DirectedEdge["astview", "glib"], DirectedEdge["astview", "Glob"], DirectedEdge["astview", "gtk"], DirectedEdge["astview", "hint"], DirectedEdge["astview", "mtl"], DirectedEdge["astview", "process"], DirectedEdge["astview", "syb"], DirectedEdge["astview-utils", "base"], DirectedEdge["astview-utils", "containers"], DirectedEdge["astview-utils", "syb"], DirectedEdge["async", "base"], DirectedEdge["async", "stm"], DirectedEdge["async-dejafu", "base"], DirectedEdge["async-dejafu", "dejafu"], DirectedEdge["async-dejafu", "exceptions"], DirectedEdge["async-extras", "async"], DirectedEdge["async-extras", "base"], DirectedEdge["async-extras", "lifted-async"], DirectedEdge["async-extras", "lifted-base"], DirectedEdge["async-extras", "monad-control"], DirectedEdge["async-extras", "SafeSemaphore"], DirectedEdge["async-extras", "stm"], DirectedEdge["async-extras", "transformers-base"], DirectedEdge["async-manager", "async"], DirectedEdge["async-manager", "base"], DirectedEdge["async-manager", "stm"], DirectedEdge["async-manager", "unordered-containers"], DirectedEdge["async-pool", "async"], DirectedEdge["async-pool", "base"], DirectedEdge["async-pool", "containers"], DirectedEdge["async-pool", "fgl"], DirectedEdge["async-pool", "monad-control"], DirectedEdge["async-pool", "stm"], DirectedEdge["async-pool", "transformers"], DirectedEdge["async-pool", "transformers-base"], DirectedEdge["asynchronous-exceptions", "base"], DirectedEdge["aterm", "array"], DirectedEdge["aterm", "base"], DirectedEdge["aterm", "containers"], DirectedEdge["aterm", "ghc-prim"], DirectedEdge["aterm-utils", "aterm"], DirectedEdge["aterm-utils", "aterm-utils"], DirectedEdge["aterm-utils", "base"], DirectedEdge["aterm-utils", "mtl"], DirectedEdge["aterm-utils", "transformers"], DirectedEdge["aterm-utils", "wl-pprint"], DirectedEdge["atl", "base"], DirectedEdge["atlassian-connect-core", "aeson"], DirectedEdge["atlassian-connect-core", "atlassian-connect-descriptor"], DirectedEdge["atlassian-connect-core", "base"], DirectedEdge["atlassian-connect-core", "base64-bytestring"], DirectedEdge["atlassian-connect-core", "bytestring"], DirectedEdge["atlassian-connect-core", "case-insensitive"], DirectedEdge["atlassian-connect-core", "cipher-aes"], DirectedEdge["atlassian-connect-core", "configurator"], DirectedEdge["atlassian-connect-core", "containers"], DirectedEdge["atlassian-connect-core", "cryptohash"], DirectedEdge["atlassian-connect-core", "hostname"], DirectedEdge["atlassian-connect-core", "http-client"], DirectedEdge["atlassian-connect-core", "http-client-tls"], DirectedEdge["atlassian-connect-core", "http-media"], DirectedEdge["atlassian-connect-core", "http-types"], DirectedEdge["atlassian-connect-core", "jwt"], DirectedEdge["atlassian-connect-core", "mtl"], DirectedEdge["atlassian-connect-core", "network"], DirectedEdge["atlassian-connect-core", "network-api-support"], DirectedEdge["atlassian-connect-core", "network-uri"], DirectedEdge["atlassian-connect-core", "snap"], DirectedEdge["atlassian-connect-core", "snap-core"], DirectedEdge["atlassian-connect-core", "split"], DirectedEdge["atlassian-connect-core", "text"], DirectedEdge["atlassian-connect-core", "time"], DirectedEdge["atlassian-connect-core", "time-units"], DirectedEdge["atlassian-connect-core", "transformers"], DirectedEdge["atlassian-connect-descriptor", "aeson"], DirectedEdge["atlassian-connect-descriptor", "base"], DirectedEdge["atlassian-connect-descriptor", "cases"], DirectedEdge["atlassian-connect-descriptor", "network"], DirectedEdge["atlassian-connect-descriptor", "network-uri"], DirectedEdge["atlassian-connect-descriptor", "text"], DirectedEdge["atlassian-connect-descriptor", "time-units"], DirectedEdge["atlassian-connect-descriptor", "unordered-containers"], DirectedEdge["atmos", "base"], DirectedEdge["atmos", "dimensional"], DirectedEdge["atmos", "dimensional-tf"], DirectedEdge["atmos-dimensional", "atmos"], DirectedEdge["atmos-dimensional", "atmos"], DirectedEdge["atmos-dimensional", "base"], DirectedEdge["atmos-dimensional", "dimensional"], DirectedEdge["atmos-dimensional-tf", "atmos"], DirectedEdge["atmos-dimensional-tf", "atmos"], DirectedEdge["atmos-dimensional-tf", "base"], DirectedEdge["atmos-dimensional-tf", "dimensional-tf"], DirectedEdge["atndapi", "aeson"], DirectedEdge["atndapi", "base"], DirectedEdge["atndapi", "bytestring"], DirectedEdge["atndapi", "conduit"], DirectedEdge["atndapi", "data-default"], DirectedEdge["atndapi", "http-conduit"], DirectedEdge["atndapi", "http-types"], DirectedEdge["atndapi", "lifted-base"], DirectedEdge["atndapi", "monad-control"], DirectedEdge["atndapi", "monad-logger"], DirectedEdge["atndapi", "mtl"], DirectedEdge["atndapi", "parsec"], DirectedEdge["atndapi", "resourcet"], DirectedEdge["atndapi", "text"], DirectedEdge["atndapi", "time"], DirectedEdge["atndapi", "transformers"], DirectedEdge["atom", "base"], DirectedEdge["atom", "bimap"], DirectedEdge["atom", "containers"], DirectedEdge["atom", "mtl"], DirectedEdge["atom", "process"], DirectedEdge["atom", "syb"], DirectedEdge["atom-basic", "base"], DirectedEdge["atom-basic", "base64-bytestring"], DirectedEdge["atom-basic", "bytestring"], DirectedEdge["atom-basic", "network"], DirectedEdge["atom-basic", "network-uri"], DirectedEdge["atom-basic", "text"], DirectedEdge["atom-basic", "time"], DirectedEdge["atom-conduit", "base"], DirectedEdge["atom-conduit", "conduit"], DirectedEdge["atom-conduit", "conduit-parse"], DirectedEdge["atom-conduit", "exceptions"], DirectedEdge["atom-conduit", "foldl"], DirectedEdge["atom-conduit", "lens-simple"], DirectedEdge["atom-conduit", "mono-traversable"], DirectedEdge["atom-conduit", "parsers"], DirectedEdge["atom-conduit", "text"], DirectedEdge["atom-conduit", "time"], DirectedEdge["atom-conduit", "timerep"], DirectedEdge["atom-conduit", "uri-bytestring"], DirectedEdge["atom-conduit", "xml-conduit"], DirectedEdge["atom-conduit", "xml-conduit-parse"], DirectedEdge["atom-conduit", "xml-types"], DirectedEdge["atom-msp430", "atom"], DirectedEdge["atom-msp430", "base"], DirectedEdge["atom-msp430", "mtl"], DirectedEdge["atomic-primops", "base"], DirectedEdge["atomic-primops", "ghc-prim"], DirectedEdge["atomic-primops", "primitive"], DirectedEdge["atomic-primops-foreign", "base"], DirectedEdge["atomic-primops-foreign", "bits-atomic"], DirectedEdge["atomic-primops-vector", "atomic-primops"], DirectedEdge["atomic-primops-vector", "base"], DirectedEdge["atomic-primops-vector", "primitive"], DirectedEdge["atomic-primops-vector", "vector"], DirectedEdge["atomic-write", "base"], DirectedEdge["atomic-write", "bytestring"], DirectedEdge["atomic-write", "directory"], DirectedEdge["atomic-write", "filepath"], DirectedEdge["atomic-write", "temporary"], DirectedEdge["atomic-write", "text"], DirectedEdge["atomic-write", "unix-compat"], DirectedEdge["atomo", "array"], DirectedEdge["atomo", "base"], DirectedEdge["atomo", "bytestring"], DirectedEdge["atomo", "containers"], DirectedEdge["atomo", "directory"], DirectedEdge["atomo", "filepath"], DirectedEdge["atomo", "hashable"], DirectedEdge["atomo", "haskeline"], DirectedEdge["atomo", "hint"], DirectedEdge["atomo", "mtl"], DirectedEdge["atomo", "parsec"], DirectedEdge["atomo", "pretty"], DirectedEdge["atomo", "regex-pcre"], DirectedEdge["atomo", "template-haskell"], DirectedEdge["atomo", "text"], DirectedEdge["atomo", "time"], DirectedEdge["atomo", "vector"], DirectedEdge["atp-haskell", "applicative-extras"], DirectedEdge["atp-haskell", "base"], DirectedEdge["atp-haskell", "containers"], DirectedEdge["atp-haskell", "HUnit"], DirectedEdge["atp-haskell", "mtl"], DirectedEdge["atp-haskell", "parsec"], DirectedEdge["atp-haskell", "pretty"], DirectedEdge["atp-haskell", "template-haskell"], DirectedEdge["atp-haskell", "time"], DirectedEdge["atrans", "base"], DirectedEdge["atrans", "mtl"], DirectedEdge["attempt", "exceptions"], DirectedEdge["attempt", "base"], DirectedEdge["attempt", "failure"], DirectedEdge["atto-lisp", "attoparsec"], DirectedEdge["atto-lisp", "base"], DirectedEdge["atto-lisp", "blaze-builder"], DirectedEdge["atto-lisp", "blaze-textual"], DirectedEdge["atto-lisp", "bytestring"], DirectedEdge["atto-lisp", "containers"], DirectedEdge["atto-lisp", "deepseq"], DirectedEdge["atto-lisp", "text"], DirectedEdge["attoparsec", "array"], DirectedEdge["attoparsec", "base"], DirectedEdge["attoparsec", "bytestring"], DirectedEdge["attoparsec", "containers"], DirectedEdge["attoparsec", "deepseq"], DirectedEdge["attoparsec", "scientific"], DirectedEdge["attoparsec", "text"], DirectedEdge["attoparsec", "transformers"], DirectedEdge["attoparsec-arff", "attoparsec"], DirectedEdge["attoparsec-arff", "base"], DirectedEdge["attoparsec-arff", "bytestring"], DirectedEdge["attoparsec-binary", "attoparsec"], DirectedEdge["attoparsec-binary", "base"], DirectedEdge["attoparsec-binary", "bytestring"], DirectedEdge["attoparsec-conduit", "conduit-extra"], DirectedEdge["attoparsec-conduit", "base"], DirectedEdge["attoparsec-conduit", "conduit"], DirectedEdge["attoparsec-csv", "attoparsec"], DirectedEdge["attoparsec-csv", "base"], DirectedEdge["attoparsec-csv", "text"], DirectedEdge["attoparsec-enumerator", "attoparsec"], DirectedEdge["attoparsec-enumerator", "base"], DirectedEdge["attoparsec-enumerator", "bytestring"], DirectedEdge["attoparsec-enumerator", "enumerator"], DirectedEdge["attoparsec-enumerator", "text"], DirectedEdge["attoparsec-expr", "attoparsec"], DirectedEdge["attoparsec-expr", "base"], DirectedEdge["attoparsec-iteratee", "attoparsec"], DirectedEdge["attoparsec-iteratee", "base"], DirectedEdge["attoparsec-iteratee", "bytestring"], DirectedEdge["attoparsec-iteratee", "iteratee"], DirectedEdge["attoparsec-iteratee", "transformers"], DirectedEdge["attoparsec-parsec", "attoparsec"], DirectedEdge["attoparsec-parsec", "base"], DirectedEdge["attoparsec-parsec", "parsec"], DirectedEdge["attoparsec-parsec", "text"], DirectedEdge["attoparsec-text", "attoparsec"], DirectedEdge["attoparsec-text", "array"], DirectedEdge["attoparsec-text", "attoparsec"], DirectedEdge["attoparsec-text", "base"], DirectedEdge["attoparsec-text", "containers"], DirectedEdge["attoparsec-text", "text"], DirectedEdge["attoparsec-text-enumerator", "attoparsec-text"], DirectedEdge["attoparsec-text-enumerator", "base"], DirectedEdge["attoparsec-text-enumerator", "enumerator"], DirectedEdge["attoparsec-text-enumerator", "text"], DirectedEdge["attoparsec-trans", "attoparsec"], DirectedEdge["attoparsec-trans", "base"], DirectedEdge["attoparsec-trans", "transformers"], DirectedEdge["attosplit", "attoparsec"], DirectedEdge["attosplit", "base"], DirectedEdge["attosplit", "bytestring"], DirectedEdge["atuin", "array"], DirectedEdge["atuin", "base"], DirectedEdge["atuin", "Cabal"], DirectedEdge["atuin", "directory"], DirectedEdge["atuin", "epic"], DirectedEdge["audacity", "audacity"], DirectedEdge["audacity", "base"], DirectedEdge["audacity", "deepseq"], DirectedEdge["audacity", "filepath"], DirectedEdge["audacity", "non-empty"], DirectedEdge["audacity", "soxlib"], DirectedEdge["audacity", "storablevector"], DirectedEdge["audacity", "utility-ht"], DirectedEdge["audiovisual", "base"], DirectedEdge["audiovisual", "boundingboxes"], DirectedEdge["audiovisual", "colors"], DirectedEdge["audiovisual", "deepseq"], DirectedEdge["audiovisual", "directory"], DirectedEdge["audiovisual", "filepath"], DirectedEdge["audiovisual", "free"], DirectedEdge["audiovisual", "hashable"], DirectedEdge["audiovisual", "JuicyPixels"], DirectedEdge["audiovisual", "JuicyPixels-util"], DirectedEdge["audiovisual", "lens"], DirectedEdge["audiovisual", "linear"], DirectedEdge["audiovisual", "mtl"], DirectedEdge["audiovisual", "objective"], DirectedEdge["audiovisual", "random"], DirectedEdge["audiovisual", "template-haskell"], DirectedEdge["audiovisual", "transformers"], DirectedEdge["audiovisual", "vector"], DirectedEdge["audiovisual", "void"], DirectedEdge["audiovisual", "WAVE"], DirectedEdge["augeas", "base"], DirectedEdge["augeas", "bytestring"], DirectedEdge["augeas", "directory"], DirectedEdge["augeas", "HUnit"], DirectedEdge["augeas", "unix"], DirectedEdge["augur", "base"], DirectedEdge["augur", "bytestring"], DirectedEdge["augur", "classify"], DirectedEdge["augur", "containers"], DirectedEdge["augur", "directory"], DirectedEdge["augur", "filepath"], DirectedEdge["augur", "HaXml"], DirectedEdge["augur", "mtl"], DirectedEdge["augur", "process"], DirectedEdge["aur", "aeson"], DirectedEdge["aur", "base"], DirectedEdge["aur", "http-client"], DirectedEdge["aur", "http-client-tls"], DirectedEdge["aur", "mtl"], DirectedEdge["aur", "servant"], DirectedEdge["aur", "servant-client"], DirectedEdge["aur", "text"], DirectedEdge["aur", "transformers"], DirectedEdge["authenticate", "aeson"], DirectedEdge["authenticate", "attoparsec"], DirectedEdge["authenticate", "base"], DirectedEdge["authenticate", "blaze-builder"], DirectedEdge["authenticate", "bytestring"], DirectedEdge["authenticate", "case-insensitive"], DirectedEdge["authenticate", "conduit"], DirectedEdge["authenticate", "containers"], DirectedEdge["authenticate", "http-conduit"], DirectedEdge["authenticate", "http-types"], DirectedEdge["authenticate", "monad-control"], DirectedEdge["authenticate", "network"], DirectedEdge["authenticate", "network-uri"], DirectedEdge["authenticate", "resourcet"], DirectedEdge["authenticate", "tagstream-conduit"], DirectedEdge["authenticate", "text"], DirectedEdge["authenticate", "transformers"], DirectedEdge["authenticate", "unordered-containers"], DirectedEdge["authenticate", "xml-conduit"], DirectedEdge["authenticate-kerberos", "base"], DirectedEdge["authenticate-kerberos", "process"], DirectedEdge["authenticate-kerberos", "text"], DirectedEdge["authenticate-ldap", "base"], DirectedEdge["authenticate-ldap", "LDAP"], DirectedEdge["authenticate-ldap", "text"], DirectedEdge["authenticate-ldap", "transformers"], DirectedEdge["authenticate-oauth", "base"], DirectedEdge["authenticate-oauth", "base64-bytestring"], DirectedEdge["authenticate-oauth", "blaze-builder"], DirectedEdge["authenticate-oauth", "bytestring"], DirectedEdge["authenticate-oauth", "crypto-pubkey-types"], DirectedEdge["authenticate-oauth", "data-default"], DirectedEdge["authenticate-oauth", "http-client"], DirectedEdge["authenticate-oauth", "http-types"], DirectedEdge["authenticate-oauth", "random"], DirectedEdge["authenticate-oauth", "RSA"], DirectedEdge["authenticate-oauth", "SHA"], DirectedEdge["authenticate-oauth", "time"], DirectedEdge["authenticate-oauth", "transformers"], DirectedEdge["authinfo-hs", "attoparsec"], DirectedEdge["authinfo-hs", "base"], DirectedEdge["authinfo-hs", "network"], DirectedEdge["authinfo-hs", "text"], DirectedEdge["authoring", "ansi-wl-pprint"], DirectedEdge["authoring", "base"], DirectedEdge["authoring", "citation-resolve"], DirectedEdge["authoring", "containers"], DirectedEdge["authoring", "data-default"], DirectedEdge["authoring", "haskell-src-meta"], DirectedEdge["authoring", "HaTeX"], DirectedEdge["authoring", "lens"], DirectedEdge["authoring", "mtl"], DirectedEdge["authoring", "parsers"], DirectedEdge["authoring", "safe"], DirectedEdge["authoring", "template-haskell"], DirectedEdge["authoring", "text"], DirectedEdge["authoring", "transformers"], DirectedEdge["authoring", "trifecta"], DirectedEdge["auto", "base"], DirectedEdge["auto", "base-orphans"], DirectedEdge["auto", "bytestring"], DirectedEdge["auto", "cereal"], DirectedEdge["auto", "containers"], DirectedEdge["auto", "deepseq"], DirectedEdge["auto", "MonadRandom"], DirectedEdge["auto", "profunctors"], DirectedEdge["auto", "random"], DirectedEdge["auto", "semigroups"], DirectedEdge["auto", "transformers"], DirectedEdge["auto-update", "base"], DirectedEdge["autoexporter", "autoexporter"], DirectedEdge["autoexporter", "base"], DirectedEdge["autoexporter", "Cabal"], DirectedEdge["autoexporter", "directory"], DirectedEdge["autoexporter", "filepath"], DirectedEdge["automitive-cse", "base"], DirectedEdge["automitive-cse", "bytestring"], DirectedEdge["automitive-cse", "cereal"], DirectedEdge["automitive-cse", "cryptonite"], DirectedEdge["automitive-cse", "memory"], DirectedEdge["automotive-cse", "base"], DirectedEdge["automotive-cse", "bytestring"], DirectedEdge["automotive-cse", "bytestring-short"], DirectedEdge["automotive-cse", "cereal"], DirectedEdge["automotive-cse", "cryptonite"], DirectedEdge["automotive-cse", "memory"], DirectedEdge["autonix-deps", "aeson"], DirectedEdge["autonix-deps", "aeson-pretty"], DirectedEdge["autonix-deps", "base"], DirectedEdge["autonix-deps", "bytestring"], DirectedEdge["autonix-deps", "conduit"], DirectedEdge["autonix-deps", "containers"], DirectedEdge["autonix-deps", "errors"], DirectedEdge["autonix-deps", "filepath"], DirectedEdge["autonix-deps", "lens"], DirectedEdge["autonix-deps", "libarchive-conduit"], DirectedEdge["autonix-deps", "mtl"], DirectedEdge["autonix-deps", "optparse-applicative"], DirectedEdge["autonix-deps", "process"], DirectedEdge["autonix-deps", "regex-tdfa"], DirectedEdge["autonix-deps", "resourcet"], DirectedEdge["autonix-deps", "semigroups"], DirectedEdge["autonix-deps", "text"], DirectedEdge["autonix-deps", "transformers"], DirectedEdge["autonix-deps", "xml"], DirectedEdge["autonix-deps-kf5", "autonix-deps"], DirectedEdge["autonix-deps-kf5", "base"], DirectedEdge["autonix-deps-kf5", "bytestring"], DirectedEdge["autonix-deps-kf5", "conduit"], DirectedEdge["autonix-deps-kf5", "containers"], DirectedEdge["autonix-deps-kf5", "filepath"], DirectedEdge["autonix-deps-kf5", "lens"], DirectedEdge["autonix-deps-kf5", "mtl"], DirectedEdge["autonix-deps-kf5", "text"], DirectedEdge["autonix-deps-kf5", "transformers"], DirectedEdge["autoproc", "base"], DirectedEdge["autoproc", "directory"], DirectedEdge["autoproc", "mtl"], DirectedEdge["autoproc", "process"], DirectedEdge["autoproc", "unix"], DirectedEdge["avahi", "base"], DirectedEdge["avahi", "dbus-core"], DirectedEdge["avahi", "text"], DirectedEdge["avatar-generator", "base"], DirectedEdge["avatar-generator", "JuicyPixels"], DirectedEdge["avatar-generator", "random"], DirectedEdge["average", "base"], DirectedEdge["average", "semigroups"], DirectedEdge["average", "vector-space"], DirectedEdge["avers", "aeson"], DirectedEdge["avers", "attoparsec"], DirectedEdge["avers", "base"], DirectedEdge["avers", "base16-bytestring"], DirectedEdge["avers", "bytestring"], DirectedEdge["avers", "clock"], DirectedEdge["avers", "containers"], DirectedEdge["avers", "cryptohash"], DirectedEdge["avers", "filepath"], DirectedEdge["avers", "inflections"], DirectedEdge["avers", "MonadRandom"], DirectedEdge["avers", "mtl"], DirectedEdge["avers", "network"], DirectedEdge["avers", "network-uri"], DirectedEdge["avers", "resource-pool"], DirectedEdge["avers", "rethinkdb-client-driver"], DirectedEdge["avers", "safe"], DirectedEdge["avers", "scrypt"], DirectedEdge["avers", "stm"], DirectedEdge["avers", "template-haskell"], DirectedEdge["avers", "text"], DirectedEdge["avers", "time"], DirectedEdge["avers", "unordered-containers"], DirectedEdge["avers", "vector"], DirectedEdge["avers-api", "aeson"], DirectedEdge["avers-api", "avers"], DirectedEdge["avers-api", "base"], DirectedEdge["avers-api", "bytestring"], DirectedEdge["avers-api", "cookie"], DirectedEdge["avers-api", "http-api-data"], DirectedEdge["avers-api", "servant"], DirectedEdge["avers-api", "text"], DirectedEdge["avers-api", "time"], DirectedEdge["avers-api", "vector"], DirectedEdge["avers-server", "aeson"], DirectedEdge["avers-server", "avers"], DirectedEdge["avers-server", "avers-api"], DirectedEdge["avers-server", "base"], DirectedEdge["avers-server", "base64-bytestring"], DirectedEdge["avers-server", "bytestring"], DirectedEdge["avers-server", "bytestring-conversion"], DirectedEdge["avers-server", "containers"], DirectedEdge["avers-server", "cookie"], DirectedEdge["avers-server", "cryptohash"], DirectedEdge["avers-server", "either"], DirectedEdge["avers-server", "http-types"], DirectedEdge["avers-server", "mtl"], DirectedEdge["avers-server", "resource-pool"], DirectedEdge["avers-server", "rethinkdb-client-driver"], DirectedEdge["avers-server", "servant"], DirectedEdge["avers-server", "servant-server"], DirectedEdge["avers-server", "stm"], DirectedEdge["avers-server", "text"], DirectedEdge["avers-server", "time"], DirectedEdge["avers-server", "transformers"], DirectedEdge["avers-server", "wai"], DirectedEdge["avers-server", "wai-websockets"], DirectedEdge["avers-server", "websockets"], DirectedEdge["avl-static", "base"], DirectedEdge["avr-shake", "base"], DirectedEdge["avr-shake", "dependent-sum"], DirectedEdge["avr-shake", "mtl"], DirectedEdge["avr-shake", "process"], DirectedEdge["avr-shake", "shake"], DirectedEdge["awesome-prelude", "base"], DirectedEdge["awesomium", "aeson"], DirectedEdge["awesomium", "attoparsec"], DirectedEdge["awesomium", "awesomium-raw"], DirectedEdge["awesomium", "base"], DirectedEdge["awesomium", "containers"], DirectedEdge["awesomium", "text"], DirectedEdge["awesomium", "vector"], DirectedEdge["awesomium-glut", "awesomium"], DirectedEdge["awesomium-glut", "awesomium-raw"], DirectedEdge["awesomium-glut", "base"], DirectedEdge["awesomium-glut", "GLUT"], DirectedEdge["awesomium-raw", "base"], DirectedEdge["aws", "aeson"], DirectedEdge["aws", "attoparsec"], DirectedEdge["aws", "aws"], DirectedEdge["aws", "base"], DirectedEdge["aws", "base16-bytestring"], DirectedEdge["aws", "base64-bytestring"], DirectedEdge["aws", "blaze-builder"], DirectedEdge["aws", "byteable"], DirectedEdge["aws", "bytestring"], DirectedEdge["aws", "case-insensitive"], DirectedEdge["aws", "cereal"], DirectedEdge["aws", "conduit"], DirectedEdge["aws", "conduit-extra"], DirectedEdge["aws", "containers"], DirectedEdge["aws", "cryptohash"], DirectedEdge["aws", "data-default"], DirectedEdge["aws", "directory"], DirectedEdge["aws", "errors"], DirectedEdge["aws", "exceptions"], DirectedEdge["aws", "filepath"], DirectedEdge["aws", "ghc-prim"], DirectedEdge["aws", "http-conduit"], DirectedEdge["aws", "http-types"], DirectedEdge["aws", "lifted-base"], DirectedEdge["aws", "monad-control"], DirectedEdge["aws", "mtl"], DirectedEdge["aws", "network"], DirectedEdge["aws", "old-locale"], DirectedEdge["aws", "resourcet"], DirectedEdge["aws", "safe"], DirectedEdge["aws", "scientific"], DirectedEdge["aws", "tagged"], DirectedEdge["aws", "text"], DirectedEdge["aws", "time"], DirectedEdge["aws", "transformers"], DirectedEdge["aws", "unordered-containers"], DirectedEdge["aws", "utf8-string"], DirectedEdge["aws", "vector"], DirectedEdge["aws", "xml-conduit"], DirectedEdge["aws-cloudfront-signer", "asn1-encoding"], DirectedEdge["aws-cloudfront-signer", "asn1-types"], DirectedEdge["aws-cloudfront-signer", "base"], DirectedEdge["aws-cloudfront-signer", "base64-bytestring"], DirectedEdge["aws-cloudfront-signer", "bytestring"], DirectedEdge["aws-cloudfront-signer", "crypto-pubkey-types"], DirectedEdge["aws-cloudfront-signer", "old-locale"], DirectedEdge["aws-cloudfront-signer", "RSA"], DirectedEdge["aws-cloudfront-signer", "time"], DirectedEdge["aws-configuration-tools", "aws"], DirectedEdge["aws-configuration-tools", "aws-general"], DirectedEdge["aws-configuration-tools", "aws-kinesis"], DirectedEdge["aws-configuration-tools", "base"], DirectedEdge["aws-configuration-tools", "base-unicode-symbols"], DirectedEdge["aws-configuration-tools", "bytestring"], DirectedEdge["aws-configuration-tools", "configuration-tools"], DirectedEdge["aws-configuration-tools", "mtl"], DirectedEdge["aws-configuration-tools", "text"], DirectedEdge["aws-configuration-tools", "transformers"], DirectedEdge["aws-dynamodb-conduit", "aeson"], DirectedEdge["aws-dynamodb-conduit", "attoparsec-trans"], DirectedEdge["aws-dynamodb-conduit", "aws"], DirectedEdge["aws-dynamodb-conduit", "base"], DirectedEdge["aws-dynamodb-conduit", "bytestring"], DirectedEdge["aws-dynamodb-conduit", "conduit"], DirectedEdge["aws-dynamodb-conduit", "containers"], DirectedEdge["aws-dynamodb-conduit", "http-conduit"], DirectedEdge["aws-dynamodb-conduit", "http-types"], DirectedEdge["aws-dynamodb-conduit", "json-togo"], DirectedEdge["aws-dynamodb-conduit", "resourcet"], DirectedEdge["aws-dynamodb-conduit", "text"], DirectedEdge["aws-dynamodb-conduit", "transformers"], DirectedEdge["aws-dynamodb-streams", "aeson"], DirectedEdge["aws-dynamodb-streams", "attoparsec"], DirectedEdge["aws-dynamodb-streams", "aws"], DirectedEdge["aws-dynamodb-streams", "aws-general"], DirectedEdge["aws-dynamodb-streams", "base"], DirectedEdge["aws-dynamodb-streams", "base-unicode-symbols"], DirectedEdge["aws-dynamodb-streams", "base16-bytestring"], DirectedEdge["aws-dynamodb-streams", "base64-bytestring"], DirectedEdge["aws-dynamodb-streams", "byteable"], DirectedEdge["aws-dynamodb-streams", "bytestring"], DirectedEdge["aws-dynamodb-streams", "case-insensitive"], DirectedEdge["aws-dynamodb-streams", "conduit"], DirectedEdge["aws-dynamodb-streams", "conduit-extra"], DirectedEdge["aws-dynamodb-streams", "containers"], DirectedEdge["aws-dynamodb-streams", "cryptohash"], DirectedEdge["aws-dynamodb-streams", "http-conduit"], DirectedEdge["aws-dynamodb-streams", "http-types"], DirectedEdge["aws-dynamodb-streams", "mtl"], DirectedEdge["aws-dynamodb-streams", "old-locale"], DirectedEdge["aws-dynamodb-streams", "parsers"], DirectedEdge["aws-dynamodb-streams", "profunctors"], DirectedEdge["aws-dynamodb-streams", "resourcet"], DirectedEdge["aws-dynamodb-streams", "scientific"], DirectedEdge["aws-dynamodb-streams", "text"], DirectedEdge["aws-dynamodb-streams", "time"], DirectedEdge["aws-ec2", "aeson"], DirectedEdge["aws-ec2", "aws"], DirectedEdge["aws-ec2", "base"], DirectedEdge["aws-ec2", "base16-bytestring"], DirectedEdge["aws-ec2", "base64-bytestring"], DirectedEdge["aws-ec2", "blaze-builder"], DirectedEdge["aws-ec2", "byteable"], DirectedEdge["aws-ec2", "bytestring"], DirectedEdge["aws-ec2", "conduit-extra"], DirectedEdge["aws-ec2", "containers"], DirectedEdge["aws-ec2", "cryptohash"], DirectedEdge["aws-ec2", "http-conduit"], DirectedEdge["aws-ec2", "http-types"], DirectedEdge["aws-ec2", "mtl"], DirectedEdge["aws-ec2", "optparse-applicative"], DirectedEdge["aws-ec2", "resourcet"], DirectedEdge["aws-ec2", "scientific"], DirectedEdge["aws-ec2", "template-haskell"], DirectedEdge["aws-ec2", "text"], DirectedEdge["aws-ec2", "time"], DirectedEdge["aws-ec2", "unordered-containers"], DirectedEdge["aws-ec2", "vector"], DirectedEdge["aws-ec2", "xml-conduit"], DirectedEdge["aws-ec2", "yaml"], DirectedEdge["aws-elastic-transcoder", "aeson"], DirectedEdge["aws-elastic-transcoder", "aws"], DirectedEdge["aws-elastic-transcoder", "aws-elastic-transcoder"], DirectedEdge["aws-elastic-transcoder", "base"], DirectedEdge["aws-elastic-transcoder", "bytestring"], DirectedEdge["aws-elastic-transcoder", "conduit"], DirectedEdge["aws-elastic-transcoder", "containers"], DirectedEdge["aws-elastic-transcoder", "http-conduit"], DirectedEdge["aws-elastic-transcoder", "http-types"], DirectedEdge["aws-elastic-transcoder", "QuickCheck"], DirectedEdge["aws-elastic-transcoder", "regex-compat"], DirectedEdge["aws-elastic-transcoder", "safe"], DirectedEdge["aws-elastic-transcoder", "text"], DirectedEdge["aws-elastic-transcoder", "time"], DirectedEdge["aws-elastic-transcoder", "transformers"], DirectedEdge["aws-general", "aeson"], DirectedEdge["aws-general", "attoparsec"], DirectedEdge["aws-general", "base"], DirectedEdge["aws-general", "base16-bytestring"], DirectedEdge["aws-general", "blaze-builder"], DirectedEdge["aws-general", "byteable"], DirectedEdge["aws-general", "bytestring"], DirectedEdge["aws-general", "case-insensitive"], DirectedEdge["aws-general", "cryptohash"], DirectedEdge["aws-general", "deepseq"], DirectedEdge["aws-general", "hashable"], DirectedEdge["aws-general", "http-types"], DirectedEdge["aws-general", "old-locale"], DirectedEdge["aws-general", "parsers"], DirectedEdge["aws-general", "QuickCheck"], DirectedEdge["aws-general", "quickcheck-instances"], DirectedEdge["aws-general", "text"], DirectedEdge["aws-general", "time"], DirectedEdge["aws-general", "transformers"], DirectedEdge["aws-kinesis", "aeson"], DirectedEdge["aws-kinesis", "aws"], DirectedEdge["aws-kinesis", "aws-general"], DirectedEdge["aws-kinesis", "base"], DirectedEdge["aws-kinesis", "base64-bytestring"], DirectedEdge["aws-kinesis", "blaze-builder"], DirectedEdge["aws-kinesis", "bytestring"], DirectedEdge["aws-kinesis", "conduit"], DirectedEdge["aws-kinesis", "conduit-extra"], DirectedEdge["aws-kinesis", "deepseq"], DirectedEdge["aws-kinesis", "http-conduit"], DirectedEdge["aws-kinesis", "http-types"], DirectedEdge["aws-kinesis", "parsers"], DirectedEdge["aws-kinesis", "QuickCheck"], DirectedEdge["aws-kinesis", "quickcheck-instances"], DirectedEdge["aws-kinesis", "resourcet"], DirectedEdge["aws-kinesis", "text"], DirectedEdge["aws-kinesis", "time"], DirectedEdge["aws-kinesis", "transformers"], DirectedEdge["aws-kinesis-client", "aeson"], DirectedEdge["aws-kinesis-client", "aws"], DirectedEdge["aws-kinesis-client", "aws-configuration-tools"], DirectedEdge["aws-kinesis-client", "aws-general"], DirectedEdge["aws-kinesis-client", "aws-kinesis"], DirectedEdge["aws-kinesis-client", "aws-kinesis-client"], DirectedEdge["aws-kinesis-client", "base"], DirectedEdge["aws-kinesis-client", "base-unicode-symbols"], DirectedEdge["aws-kinesis-client", "bytestring"], DirectedEdge["aws-kinesis-client", "conduit"], DirectedEdge["aws-kinesis-client", "configuration-tools"], DirectedEdge["aws-kinesis-client", "containers"], DirectedEdge["aws-kinesis-client", "data-carousel"], DirectedEdge["aws-kinesis-client", "enclosed-exceptions"], DirectedEdge["aws-kinesis-client", "http-conduit"], DirectedEdge["aws-kinesis-client", "kan-extensions"], DirectedEdge["aws-kinesis-client", "lens"], DirectedEdge["aws-kinesis-client", "lens-action"], DirectedEdge["aws-kinesis-client", "lifted-async"], DirectedEdge["aws-kinesis-client", "lifted-base"], DirectedEdge["aws-kinesis-client", "monad-control"], DirectedEdge["aws-kinesis-client", "mtl"], DirectedEdge["aws-kinesis-client", "nats"], DirectedEdge["aws-kinesis-client", "optparse-applicative"], DirectedEdge["aws-kinesis-client", "random"], DirectedEdge["aws-kinesis-client", "resourcet"], DirectedEdge["aws-kinesis-client", "stm"], DirectedEdge["aws-kinesis-client", "stm-chans"], DirectedEdge["aws-kinesis-client", "stm-queue-extras"], DirectedEdge["aws-kinesis-client", "text"], DirectedEdge["aws-kinesis-client", "transformers"], DirectedEdge["aws-kinesis-client", "unordered-containers"], DirectedEdge["aws-kinesis-reshard", "aws"], DirectedEdge["aws-kinesis-reshard", "aws-general"], DirectedEdge["aws-kinesis-reshard", "aws-kinesis"], DirectedEdge["aws-kinesis-reshard", "aws-kinesis-reshard"], DirectedEdge["aws-kinesis-reshard", "aws-sdk"], DirectedEdge["aws-kinesis-reshard", "base"], DirectedEdge["aws-kinesis-reshard", "base-unicode-symbols"], DirectedEdge["aws-kinesis-reshard", "bytestring"], DirectedEdge["aws-kinesis-reshard", "conduit"], DirectedEdge["aws-kinesis-reshard", "either"], DirectedEdge["aws-kinesis-reshard", "hoist-error"], DirectedEdge["aws-kinesis-reshard", "lens"], DirectedEdge["aws-kinesis-reshard", "lens-action"], DirectedEdge["aws-kinesis-reshard", "lifted-async"], DirectedEdge["aws-kinesis-reshard", "lifted-base"], DirectedEdge["aws-kinesis-reshard", "monad-control"], DirectedEdge["aws-kinesis-reshard", "mtl"], DirectedEdge["aws-kinesis-reshard", "optparse-applicative"], DirectedEdge["aws-kinesis-reshard", "resourcet"], DirectedEdge["aws-kinesis-reshard", "text"], DirectedEdge["aws-kinesis-reshard", "time"], DirectedEdge["aws-kinesis-reshard", "transformers"], DirectedEdge["aws-lambda", "aeson"], DirectedEdge["aws-lambda", "aws-general"], DirectedEdge["aws-lambda", "base"], DirectedEdge["aws-lambda", "base-unicode-symbols"], DirectedEdge["aws-lambda", "bytestring"], DirectedEdge["aws-lambda", "containers"], DirectedEdge["aws-lambda", "exceptions"], DirectedEdge["aws-lambda", "filepath"], DirectedEdge["aws-lambda", "http-client"], DirectedEdge["aws-lambda", "http-types"], DirectedEdge["aws-lambda", "lens"], DirectedEdge["aws-lambda", "lens-action"], DirectedEdge["aws-lambda", "lens-aeson"], DirectedEdge["aws-lambda", "mtl"], DirectedEdge["aws-lambda", "old-locale"], DirectedEdge["aws-lambda", "text"], DirectedEdge["aws-lambda", "time"], DirectedEdge["aws-lambda", "wreq"], DirectedEdge["aws-lambda", "zip-archive"], DirectedEdge["aws-performance-tests", "aeson"], DirectedEdge["aws-performance-tests", "async"], DirectedEdge["aws-performance-tests", "aws"], DirectedEdge["aws-performance-tests", "aws-performance-tests"], DirectedEdge["aws-performance-tests", "base"], DirectedEdge["aws-performance-tests", "bytestring"], DirectedEdge["aws-performance-tests", "configuration-tools"], DirectedEdge["aws-performance-tests", "containers"], DirectedEdge["aws-performance-tests", "dlist"], DirectedEdge["aws-performance-tests", "errors"], DirectedEdge["aws-performance-tests", "http-client"], DirectedEdge["aws-performance-tests", "lens"], DirectedEdge["aws-performance-tests", "lifted-base"], DirectedEdge["aws-performance-tests", "monad-control"], DirectedEdge["aws-performance-tests", "mtl"], DirectedEdge["aws-performance-tests", "optparse-applicative"], DirectedEdge["aws-performance-tests", "resourcet"], DirectedEdge["aws-performance-tests", "statistics"], DirectedEdge["aws-performance-tests", "text"], DirectedEdge["aws-performance-tests", "time"], DirectedEdge["aws-performance-tests", "transformers"], DirectedEdge["aws-performance-tests", "vector"], DirectedEdge["aws-route53", "aws"], DirectedEdge["aws-route53", "base"], DirectedEdge["aws-route53", "bytestring"], DirectedEdge["aws-route53", "containers"], DirectedEdge["aws-route53", "http-conduit"], DirectedEdge["aws-route53", "http-types"], DirectedEdge["aws-route53", "old-locale"], DirectedEdge["aws-route53", "resourcet"], DirectedEdge["aws-route53", "text"], DirectedEdge["aws-route53", "time"], DirectedEdge["aws-route53", "xml-conduit"], DirectedEdge["aws-route53", "xml-hamlet"], DirectedEdge["aws-sdk", "base"], DirectedEdge["aws-sdk", "base64-bytestring"], DirectedEdge["aws-sdk", "bytestring"], DirectedEdge["aws-sdk", "conduit"], DirectedEdge["aws-sdk", "conduit-extra"], DirectedEdge["aws-sdk", "containers"], DirectedEdge["aws-sdk", "data-default"], DirectedEdge["aws-sdk", "http-conduit"], DirectedEdge["aws-sdk", "http-types"], DirectedEdge["aws-sdk", "iproute"], DirectedEdge["aws-sdk", "lifted-base"], DirectedEdge["aws-sdk", "monad-control"], DirectedEdge["aws-sdk", "mtl"], DirectedEdge["aws-sdk", "old-locale"], DirectedEdge["aws-sdk", "parallel"], DirectedEdge["aws-sdk", "parsec"], DirectedEdge["aws-sdk", "resourcet"], DirectedEdge["aws-sdk", "safe"], DirectedEdge["aws-sdk", "SHA"], DirectedEdge["aws-sdk", "simple-config"], DirectedEdge["aws-sdk", "strptime"], DirectedEdge["aws-sdk", "template-haskell"], DirectedEdge["aws-sdk", "text"], DirectedEdge["aws-sdk", "time"], DirectedEdge["aws-sdk", "tls"], DirectedEdge["aws-sdk", "transformers"], DirectedEdge["aws-sdk", "transformers-base"], DirectedEdge["aws-sdk", "xml-conduit"], DirectedEdge["aws-sdk", "xml-types"], DirectedEdge["aws-sdk-text-converter", "base"], DirectedEdge["aws-sdk-text-converter", "bytestring"], DirectedEdge["aws-sdk-text-converter", "iproute"], DirectedEdge["aws-sdk-text-converter", "safe"], DirectedEdge["aws-sdk-text-converter", "strptime"], DirectedEdge["aws-sdk-text-converter", "template-haskell"], DirectedEdge["aws-sdk-text-converter", "text"], DirectedEdge["aws-sdk-text-converter", "time"], DirectedEdge["aws-sdk-text-converter", "time-locale-compat"], DirectedEdge["aws-sdk-xml-unordered", "aws-sdk-text-converter"], DirectedEdge["aws-sdk-xml-unordered", "base"], DirectedEdge["aws-sdk-xml-unordered", "conduit"], DirectedEdge["aws-sdk-xml-unordered", "containers"], DirectedEdge["aws-sdk-xml-unordered", "lifted-base"], DirectedEdge["aws-sdk-xml-unordered", "mtl"], DirectedEdge["aws-sdk-xml-unordered", "resourcet"], DirectedEdge["aws-sdk-xml-unordered", "text"], DirectedEdge["aws-sdk-xml-unordered", "unordered-containers"], DirectedEdge["aws-sdk-xml-unordered", "xml-conduit"], DirectedEdge["aws-sdk-xml-unordered", "xml-types"], DirectedEdge["aws-sign4", "aws"], DirectedEdge["aws-sign4", "base"], DirectedEdge["aws-sign4", "blaze-builder"], DirectedEdge["aws-sign4", "byteable"], DirectedEdge["aws-sign4", "bytestring"], DirectedEdge["aws-sign4", "case-insensitive"], DirectedEdge["aws-sign4", "cryptohash"], DirectedEdge["aws-sign4", "http-types"], DirectedEdge["aws-sign4", "old-locale"], DirectedEdge["aws-sign4", "safe"], DirectedEdge["aws-sign4", "time"], DirectedEdge["aws-sns", "aeson"], DirectedEdge["aws-sns", "aws"], DirectedEdge["aws-sns", "aws-general"], DirectedEdge["aws-sns", "base"], DirectedEdge["aws-sns", "blaze-builder"], DirectedEdge["aws-sns", "bytestring"], DirectedEdge["aws-sns", "conduit"], DirectedEdge["aws-sns", "containers"], DirectedEdge["aws-sns", "http-conduit"], DirectedEdge["aws-sns", "http-types"], DirectedEdge["aws-sns", "parsers"], DirectedEdge["aws-sns", "QuickCheck"], DirectedEdge["aws-sns", "resourcet"], DirectedEdge["aws-sns", "text"], DirectedEdge["aws-sns", "time"], DirectedEdge["aws-sns", "transformers"], DirectedEdge["aws-sns", "xml-conduit"], DirectedEdge["azure-acs", "attoparsec"], DirectedEdge["azure-acs", "base"], DirectedEdge["azure-acs", "bytestring"], DirectedEdge["azure-acs", "conduit"], DirectedEdge["azure-acs", "conduit-extra"], DirectedEdge["azure-acs", "connection"], DirectedEdge["azure-acs", "http-conduit"], DirectedEdge["azure-acs", "http-types"], DirectedEdge["azure-acs", "network"], DirectedEdge["azure-acs", "time"], DirectedEdge["azure-service-api", "base"], DirectedEdge["azure-service-api", "binary"], DirectedEdge["azure-service-api", "bytestring"], DirectedEdge["azure-service-api", "case-insensitive"], DirectedEdge["azure-service-api", "certificate"], DirectedEdge["azure-service-api", "crypto-pubkey-types"], DirectedEdge["azure-service-api", "http-conduit"], DirectedEdge["azure-service-api", "hxt"], DirectedEdge["azure-service-api", "hxt-xpath"], DirectedEdge["azure-service-api", "pretty"], DirectedEdge["azure-service-api", "resourcet"], DirectedEdge["azure-service-api", "tls"], DirectedEdge["azure-service-api", "tls-extra"], DirectedEdge["azure-service-api", "transformers"], DirectedEdge["azure-servicebus", "aeson"], DirectedEdge["azure-servicebus", "async"], DirectedEdge["azure-servicebus", "attoparsec"], DirectedEdge["azure-servicebus", "azure-acs"], DirectedEdge["azure-servicebus", "base"], DirectedEdge["azure-servicebus", "bytestring"], DirectedEdge["azure-servicebus", "case-insensitive"], DirectedEdge["azure-servicebus", "conduit"], DirectedEdge["azure-servicebus", "connection"], DirectedEdge["azure-servicebus", "http-client"], DirectedEdge["azure-servicebus", "http-conduit"], DirectedEdge["azure-servicebus", "http-types"], DirectedEdge["azure-servicebus", "network"], DirectedEdge["azure-servicebus", "text"], DirectedEdge["azurify", "base"], DirectedEdge["azurify", "base64-bytestring"], DirectedEdge["azurify", "bytestring"], DirectedEdge["azurify", "case-insensitive"], DirectedEdge["azurify", "cmdargs"], DirectedEdge["azurify", "conduit"], DirectedEdge["azurify", "data-default"], DirectedEdge["azurify", "directory"], DirectedEdge["azurify", "http-conduit"], DirectedEdge["azurify", "http-date"], DirectedEdge["azurify", "http-types"], DirectedEdge["azurify", "hxt"], DirectedEdge["azurify", "hxt-unicode"], DirectedEdge["azurify", "network"], DirectedEdge["azurify", "old-locale"], DirectedEdge["azurify", "SHA"], DirectedEdge["azurify", "text"], DirectedEdge["azurify", "time"], DirectedEdge["azurify", "transformers"], DirectedEdge["azurify", "unix-compat"], DirectedEdge["azurify", "utf8-string"], DirectedEdge["b-tree", "base"], DirectedEdge["b-tree", "binary"], DirectedEdge["b-tree", "bytestring"], DirectedEdge["b-tree", "containers"], DirectedEdge["b-tree", "directory"], DirectedEdge["b-tree", "errors"], DirectedEdge["b-tree", "filepath"], DirectedEdge["b-tree", "lens"], DirectedEdge["b-tree", "mmap"], DirectedEdge["b-tree", "mtl"], DirectedEdge["b-tree", "pipes"], DirectedEdge["b-tree", "pipes-interleave"], DirectedEdge["b-tree", "transformers"], DirectedEdge["b-tree", "vector"], DirectedEdge["b9", "aeson"], DirectedEdge["b9", "async"], DirectedEdge["b9", "base"], DirectedEdge["b9", "bifunctors"], DirectedEdge["b9", "binary"], DirectedEdge["b9", "boxes"], DirectedEdge["b9", "bytestring"], DirectedEdge["b9", "conduit"], DirectedEdge["b9", "conduit-extra"], DirectedEdge["b9", "ConfigFile"], DirectedEdge["b9", "directory"], DirectedEdge["b9", "filepath"], DirectedEdge["b9", "free"], DirectedEdge["b9", "hashable"], DirectedEdge["b9", "mtl"], DirectedEdge["b9", "optparse-applicative"], DirectedEdge["b9", "parallel"], DirectedEdge["b9", "parsec"], DirectedEdge["b9", "pretty"], DirectedEdge["b9", "pretty-show"], DirectedEdge["b9", "process"], DirectedEdge["b9", "QuickCheck"], DirectedEdge["b9", "random"], DirectedEdge["b9", "semigroups"], DirectedEdge["b9", "syb"], DirectedEdge["b9", "template"], DirectedEdge["b9", "text"], DirectedEdge["b9", "time"], DirectedEdge["b9", "transformers"], DirectedEdge["b9", "unordered-containers"], DirectedEdge["b9", "vector"], DirectedEdge["b9", "yaml"], DirectedEdge["babylon", "array"], DirectedEdge["babylon", "base"], DirectedEdge["babylon", "containers"], DirectedEdge["babylon", "random"], DirectedEdge["babylon", "wx"], DirectedEdge["babylon", "wxcore"], DirectedEdge["backdropper", "base"], DirectedEdge["backdropper", "directory"], DirectedEdge["backdropper", "hslogger"], DirectedEdge["backdropper", "old-time"], DirectedEdge["backdropper", "process"], DirectedEdge["backdropper", "random"], DirectedEdge["backtracking-exceptions", "base"], DirectedEdge["backtracking-exceptions", "either"], DirectedEdge["backtracking-exceptions", "free"], DirectedEdge["backtracking-exceptions", "kan-extensions"], DirectedEdge["backtracking-exceptions", "mtl"], DirectedEdge["backtracking-exceptions", "semigroupoids"], DirectedEdge["backtracking-exceptions", "semigroups"], DirectedEdge["backtracking-exceptions", "transformers"], DirectedEdge["backward-state", "base"], DirectedEdge["backward-state", "transformers"], DirectedEdge["bacteria", "base"], DirectedEdge["bacteria", "gd"], DirectedEdge["bag", "dlist"], DirectedEdge["bag", "base"], DirectedEdge["bake", "aeson"], DirectedEdge["bake", "base"], DirectedEdge["bake", "bytestring"], DirectedEdge["bake", "cmdargs"], DirectedEdge["bake", "containers"], DirectedEdge["bake", "deepseq"], DirectedEdge["bake", "direct-sqlite"], DirectedEdge["bake", "directory"], DirectedEdge["bake", "disk-free-space"], DirectedEdge["bake", "extra"], DirectedEdge["bake", "filepath"], DirectedEdge["bake", "hashable"], DirectedEdge["bake", "HTTP"], DirectedEdge["bake", "http-types"], DirectedEdge["bake", "old-locale"], DirectedEdge["bake", "process"], DirectedEdge["bake", "random"], DirectedEdge["bake", "safe"], DirectedEdge["bake", "shake"], DirectedEdge["bake", "smtp-mail"], DirectedEdge["bake", "sqlite-simple"], DirectedEdge["bake", "text"], DirectedEdge["bake", "time"], DirectedEdge["bake", "transformers"], DirectedEdge["bake", "unordered-containers"], DirectedEdge["bake", "wai"], DirectedEdge["bake", "warp"], DirectedEdge["bamboo", "base"], DirectedEdge["bamboo", "bytestring"], DirectedEdge["bamboo", "containers"], DirectedEdge["bamboo", "data-default"], DirectedEdge["bamboo", "directory"], DirectedEdge["bamboo", "filepath"], DirectedEdge["bamboo", "gravatar"], DirectedEdge["bamboo", "hack"], DirectedEdge["bamboo", "hack-contrib"], DirectedEdge["bamboo", "mps"], DirectedEdge["bamboo", "mtl"], DirectedEdge["bamboo", "network"], DirectedEdge["bamboo", "old-locale"], DirectedEdge["bamboo", "old-time"], DirectedEdge["bamboo", "pandoc"], DirectedEdge["bamboo", "parsec"], DirectedEdge["bamboo", "parsedate"], DirectedEdge["bamboo", "process"], DirectedEdge["bamboo", "time"], DirectedEdge["bamboo", "unix"], DirectedEdge["bamboo", "utf8-string"], DirectedEdge["bamboo", "xhtml"], DirectedEdge["bamboo", "zlib"], DirectedEdge["bamboo-launcher", "bamboo"], DirectedEdge["bamboo-launcher", "bamboo-theme-blueprint"], DirectedEdge["bamboo-launcher", "base"], DirectedEdge["bamboo-launcher", "bytestring"], DirectedEdge["bamboo-launcher", "data-default"], DirectedEdge["bamboo-launcher", "hack"], DirectedEdge["bamboo-launcher", "hack-contrib"], DirectedEdge["bamboo-launcher", "hack-handler-hyena"], DirectedEdge["bamboo-launcher", "mps"], DirectedEdge["bamboo-launcher", "process"], DirectedEdge["bamboo-plugin-highlight", "bamboo"], DirectedEdge["bamboo-plugin-highlight", "base"], DirectedEdge["bamboo-plugin-highlight", "bytestring"], DirectedEdge["bamboo-plugin-highlight", "hack"], DirectedEdge["bamboo-plugin-highlight", "hack-contrib"], DirectedEdge["bamboo-plugin-highlight", "highlighting-kate"], DirectedEdge["bamboo-plugin-highlight", "hxt"], DirectedEdge["bamboo-plugin-highlight", "mps"], DirectedEdge["bamboo-plugin-highlight", "xhtml"], DirectedEdge["bamboo-plugin-photo", "base"], DirectedEdge["bamboo-plugin-photo", "bytestring"], DirectedEdge["bamboo-plugin-photo", "data-default"], DirectedEdge["bamboo-plugin-photo", "directory"], DirectedEdge["bamboo-plugin-photo", "filepath"], DirectedEdge["bamboo-plugin-photo", "hack"], DirectedEdge["bamboo-plugin-photo", "hack-contrib"], DirectedEdge["bamboo-plugin-photo", "hxt"], DirectedEdge["bamboo-plugin-photo", "mps"], DirectedEdge["bamboo-plugin-photo", "utf8-string"], DirectedEdge["bamboo-plugin-photo", "xhtml"], DirectedEdge["bamboo-theme-blueprint", "bamboo"], DirectedEdge["bamboo-theme-blueprint", "base"], DirectedEdge["bamboo-theme-blueprint", "bytestring"], DirectedEdge["bamboo-theme-blueprint", "containers"], DirectedEdge["bamboo-theme-blueprint", "data-default"], DirectedEdge["bamboo-theme-blueprint", "gravatar"], DirectedEdge["bamboo-theme-blueprint", "hack"], DirectedEdge["bamboo-theme-blueprint", "hack-contrib"], DirectedEdge["bamboo-theme-blueprint", "hcheat"], DirectedEdge["bamboo-theme-blueprint", "mps"], DirectedEdge["bamboo-theme-blueprint", "network"], DirectedEdge["bamboo-theme-blueprint", "rss"], DirectedEdge["bamboo-theme-blueprint", "utf8-string"], DirectedEdge["bamboo-theme-blueprint", "xhtml"], DirectedEdge["bamboo-theme-mini-html5", "bamboo"], DirectedEdge["bamboo-theme-mini-html5", "base"], DirectedEdge["bamboo-theme-mini-html5", "base64-string"], DirectedEdge["bamboo-theme-mini-html5", "bytestring"], DirectedEdge["bamboo-theme-mini-html5", "cgi"], DirectedEdge["bamboo-theme-mini-html5", "containers"], DirectedEdge["bamboo-theme-mini-html5", "data-default"], DirectedEdge["bamboo-theme-mini-html5", "directory"], DirectedEdge["bamboo-theme-mini-html5", "filepath"], DirectedEdge["bamboo-theme-mini-html5", "gravatar"], DirectedEdge["bamboo-theme-mini-html5", "hack"], DirectedEdge["bamboo-theme-mini-html5", "hack-contrib"], DirectedEdge["bamboo-theme-mini-html5", "hcheat"], DirectedEdge["bamboo-theme-mini-html5", "moe"], DirectedEdge["bamboo-theme-mini-html5", "mps"], DirectedEdge["bamboo-theme-mini-html5", "mtl"], DirectedEdge["bamboo-theme-mini-html5", "network"], DirectedEdge["bamboo-theme-mini-html5", "old-locale"], DirectedEdge["bamboo-theme-mini-html5", "old-time"], DirectedEdge["bamboo-theme-mini-html5", "parsec"], DirectedEdge["bamboo-theme-mini-html5", "parsedate"], DirectedEdge["bamboo-theme-mini-html5", "process"], DirectedEdge["bamboo-theme-mini-html5", "rss"], DirectedEdge["bamboo-theme-mini-html5", "time"], DirectedEdge["bamboo-theme-mini-html5", "unix"], DirectedEdge["bamboo-theme-mini-html5", "utf8-string"], DirectedEdge["bamboo-theme-mini-html5", "xhtml"], DirectedEdge["bamboo-theme-mini-html5", "yuuko"], DirectedEdge["bamboo-theme-mini-html5", "zlib"], DirectedEdge["bamse", "base"], DirectedEdge["bamse", "com"], DirectedEdge["bamse", "directory"], DirectedEdge["bamse", "filepath"], DirectedEdge["bamse", "HUnit"], DirectedEdge["bamse", "old-time"], DirectedEdge["bamse", "pretty"], DirectedEdge["bamse", "process"], DirectedEdge["bamse", "QuickCheck"], DirectedEdge["bamse", "regex-compat"], DirectedEdge["bamstats", "base"], DirectedEdge["bamstats", "cmdargs"], DirectedEdge["bamstats", "samtools"], DirectedEdge["bank-holiday-usa", "base"], DirectedEdge["bank-holiday-usa", "time"], DirectedEdge["bank-holidays-england", "base"], DirectedEdge["bank-holidays-england", "containers"], DirectedEdge["bank-holidays-england", "time"], DirectedEdge["banwords", "attoparsec"], DirectedEdge["banwords", "base"], DirectedEdge["banwords", "bytestring"], DirectedEdge["banwords", "data-default"], DirectedEdge["banwords", "text"], DirectedEdge["banwords", "vector"], DirectedEdge["barchart", "base"], DirectedEdge["barchart", "cmdargs"], DirectedEdge["barchart", "csv"], DirectedEdge["barchart", "diagrams"], DirectedEdge["barchart", "filepath"], DirectedEdge["barcodes-code128", "base"], DirectedEdge["barcodes-code128", "bytestring"], DirectedEdge["barcodes-code128", "HPDF"], DirectedEdge["barecheck", "base"], DirectedEdge["barecheck", "containers"], DirectedEdge["barecheck", "QuickCheck"], DirectedEdge["barecheck", "text"], DirectedEdge["barecheck", "time"], DirectedEdge["barley", "base"], DirectedEdge["barley", "bytestring"], DirectedEdge["barley", "containers"], DirectedEdge["barley", "directory"], DirectedEdge["barley", "filepath"], DirectedEdge["barley", "ghc"], DirectedEdge["barley", "ghc-prim"], DirectedEdge["barley", "html"], DirectedEdge["barley", "plugins"], DirectedEdge["barley", "snap-core"], DirectedEdge["barley", "snap-server"], DirectedEdge["barley", "text"], DirectedEdge["barley", "transformers"], DirectedEdge["barley", "unix-compat"], DirectedEdge["barrie", "base"], DirectedEdge["barrie", "containers"], DirectedEdge["barrie", "filepath"], DirectedEdge["barrie", "glib"], DirectedEdge["barrie", "gtk"], DirectedEdge["barrier", "barrier"], DirectedEdge["barrier", "base"], DirectedEdge["barrier", "blaze-svg"], DirectedEdge["barrier", "bytestring"], DirectedEdge["barrier", "lens-family-core"], DirectedEdge["barrier", "template-haskell"], DirectedEdge["barrier", "text"], DirectedEdge["barrier", "unordered-containers"], DirectedEdge["barrier-monad", "base"], DirectedEdge["barrier-monad", "comonad"], DirectedEdge["barrier-monad", "mtl"], DirectedEdge["barrier-monad", "transformers"], DirectedEdge["base", "ghc-prim"], DirectedEdge["base", "invalid-cabal-flag-settings"], DirectedEdge["base", "rts"], DirectedEdge["base-compat", "base"], DirectedEdge["base-compat", "unix"], DirectedEdge["base-generics", "base"], DirectedEdge["base-io-access", "base"], DirectedEdge["base-noprelude", "base"], DirectedEdge["base-orphans", "base"], DirectedEdge["base-orphans", "ghc-prim"], DirectedEdge["base-prelude", "base"], DirectedEdge["base-unicode-symbols", "base"], DirectedEdge["base16-bytestring", "base"], DirectedEdge["base16-bytestring", "bytestring"], DirectedEdge["base16-bytestring", "ghc-prim"], DirectedEdge["base32-bytestring", "base"], DirectedEdge["base32-bytestring", "bits-extras"], DirectedEdge["base32-bytestring", "bytestring"], DirectedEdge["base32-bytestring", "cpu"], DirectedEdge["base32string", "aeson"], DirectedEdge["base32string", "base"], DirectedEdge["base32string", "binary"], DirectedEdge["base32string", "bytestring"], DirectedEdge["base32string", "text"], DirectedEdge["base58-bytestring", "base"], DirectedEdge["base58-bytestring", "bytestring"], DirectedEdge["base58address", "base"], DirectedEdge["base58address", "binary"], DirectedEdge["base58address", "bytestring"], DirectedEdge["base58address", "containers"], DirectedEdge["base58address", "cryptohash"], DirectedEdge["base58string", "aeson"], DirectedEdge["base58string", "base"], DirectedEdge["base58string", "binary"], DirectedEdge["base58string", "bytestring"], DirectedEdge["base58string", "text"], DirectedEdge["base64-bytestring", "base"], DirectedEdge["base64-bytestring", "bytestring"], DirectedEdge["base64-conduit", "conduit-combinators"], DirectedEdge["base64-conduit", "base"], DirectedEdge["base64-conduit", "base64-bytestring"], DirectedEdge["base64-conduit", "bytestring"], DirectedEdge["base64-conduit", "conduit"], DirectedEdge["base64-string", "base"], DirectedEdge["base91", "base"], DirectedEdge["base91", "bytestring"], DirectedEdge["base91", "mono-traversable"], DirectedEdge["base91", "text"], DirectedEdge["basex-client", "base"], DirectedEdge["basex-client", "network"], DirectedEdge["basex-client", "utf8-string"], DirectedEdge["bash", "base"], DirectedEdge["bash", "binary"], DirectedEdge["bash", "bytestring"], DirectedEdge["bash", "containers"], DirectedEdge["bash", "hxt-regex-xmlschema"], DirectedEdge["bash", "mtl"], DirectedEdge["bash", "SHA"], DirectedEdge["bash", "shell-escape"], DirectedEdge["basic-lens", "base"], DirectedEdge["basic-prelude", "base"], DirectedEdge["basic-prelude", "bytestring"], DirectedEdge["basic-prelude", "containers"], DirectedEdge["basic-prelude", "filepath"], DirectedEdge["basic-prelude", "hashable"], DirectedEdge["basic-prelude", "lifted-base"], DirectedEdge["basic-prelude", "ReadArgs"], DirectedEdge["basic-prelude", "safe"], DirectedEdge["basic-prelude", "text"], DirectedEdge["basic-prelude", "transformers"], DirectedEdge["basic-prelude", "unordered-containers"], DirectedEdge["basic-prelude", "vector"], DirectedEdge["basic-sop", "base"], DirectedEdge["basic-sop", "deepseq"], DirectedEdge["basic-sop", "generics-sop"], DirectedEdge["basic-sop", "QuickCheck"], DirectedEdge["basic-sop", "text"], DirectedEdge["baskell", "base"], DirectedEdge["baskell", "containers"], DirectedEdge["baskell", "mtl"], DirectedEdge["baskell", "parsec"], DirectedEdge["baskell", "pretty"], DirectedEdge["baskell", "unix"], DirectedEdge["battlenet", "aeson"], DirectedEdge["battlenet", "base"], DirectedEdge["battlenet", "containers"], DirectedEdge["battlenet", "http-conduit"], DirectedEdge["battlenet", "text"], DirectedEdge["battlenet-yesod", "base"], DirectedEdge["battlenet-yesod", "battlenet"], DirectedEdge["battlenet-yesod", "http-conduit"], DirectedEdge["battlenet-yesod", "text"], DirectedEdge["battlenet-yesod", "yesod-core"], DirectedEdge["battleships", "aeson"], DirectedEdge["battleships", "array"], DirectedEdge["battleships", "attoparsec"], DirectedEdge["battleships", "base"], DirectedEdge["battleships", "base64-bytestring"], DirectedEdge["battleships", "battleships"], DirectedEdge["battleships", "blaze-svg"], DirectedEdge["battleships", "bytestring"], DirectedEdge["battleships", "cereal"], DirectedEdge["battleships", "colour"], DirectedEdge["battleships", "containers"], DirectedEdge["battleships", "cookie"], DirectedEdge["battleships", "crypto-random"], DirectedEdge["battleships", "data-default"], DirectedEdge["battleships", "diagrams-lib"], DirectedEdge["battleships", "diagrams-svg"], DirectedEdge["battleships", "directory"], DirectedEdge["battleships", "fast-logger"], DirectedEdge["battleships", "filepath"], DirectedEdge["battleships", "hamlet"], DirectedEdge["battleships", "hjsmin"], DirectedEdge["battleships", "MonadRandom"], DirectedEdge["battleships", "mtl"], DirectedEdge["battleships", "shakespeare-js"], DirectedEdge["battleships", "shakespeare-text"], DirectedEdge["battleships", "SimpleAES"], DirectedEdge["battleships", "template-haskell"], DirectedEdge["battleships", "text"], DirectedEdge["battleships", "transformers"], DirectedEdge["battleships", "wai-extra"], DirectedEdge["battleships", "wai-handler-fastcgi"], DirectedEdge["battleships", "wai-logger"], DirectedEdge["battleships", "warp"], DirectedEdge["battleships", "yaml"], DirectedEdge["battleships", "yesod"], DirectedEdge["battleships", "yesod-core"], DirectedEdge["battleships", "yesod-routes"], DirectedEdge["battleships", "yesod-static"], DirectedEdge["bayes-stack", "base"], DirectedEdge["bayes-stack", "cereal"], DirectedEdge["bayes-stack", "containers"], DirectedEdge["bayes-stack", "deepseq"], DirectedEdge["bayes-stack", "digamma"], DirectedEdge["bayes-stack", "enummapset"], DirectedEdge["bayes-stack", "gamma"], DirectedEdge["bayes-stack", "ghc-prim"], DirectedEdge["bayes-stack", "logfloat"], DirectedEdge["bayes-stack", "mtl"], DirectedEdge["bayes-stack", "mwc-random"], DirectedEdge["bayes-stack", "pretty"], DirectedEdge["bayes-stack", "random-fu"], DirectedEdge["bayes-stack", "random-source"], DirectedEdge["bayes-stack", "rvar"], DirectedEdge["bayes-stack", "statistics"], DirectedEdge["bayes-stack", "stm"], DirectedEdge["bayes-stack", "transformers"], DirectedEdge["bayes-stack", "vector"], DirectedEdge["bbdb", "base"], DirectedEdge["bbdb", "mtl"], DirectedEdge["bbdb", "parsec"], DirectedEdge["bbi", "base"], DirectedEdge["bbi", "bytestring"], DirectedEdge["bbi", "cereal"], DirectedEdge["bbi", "conduit"], DirectedEdge["bbi", "containers"], DirectedEdge["bbi", "mtl"], DirectedEdge["bbi", "zlib"], DirectedEdge["bcrypt", "base"], DirectedEdge["bcrypt", "bytestring"], DirectedEdge["bcrypt", "data-default"], DirectedEdge["bcrypt", "entropy"], DirectedEdge["bcrypt", "memory"], DirectedEdge["bdd", "base"], DirectedEdge["bdd", "HUnit"], DirectedEdge["bdd", "mtl"], DirectedEdge["bdd", "transformers"], DirectedEdge["bdelta", "bytestring-delta"], DirectedEdge["bdelta", "base"], DirectedEdge["bdelta", "bytestring"], DirectedEdge["bdo", "aeson"], DirectedEdge["bdo", "base"], DirectedEdge["bdo", "network"], DirectedEdge["bdo", "text"], DirectedEdge["bdo", "url"], DirectedEdge["beam", "base"], DirectedEdge["beam", "conduit"], DirectedEdge["beam", "containers"], DirectedEdge["beam", "convertible"], DirectedEdge["beam", "HDBC"], DirectedEdge["beam", "microlens"], DirectedEdge["beam", "mtl"], DirectedEdge["beam", "pretty"], DirectedEdge["beam", "semigroups"], DirectedEdge["beam", "tagged"], DirectedEdge["beam", "text"], DirectedEdge["beam", "time"], DirectedEdge["beam", "uniplate"], DirectedEdge["beamable", "base"], DirectedEdge["beamable", "blaze-builder"], DirectedEdge["beamable", "bytestring"], DirectedEdge["beamable", "ghc-prim"], DirectedEdge["beamable", "integer-gmp"], DirectedEdge["beamable", "murmur-hash"], DirectedEdge["beautifHOL", "array"], DirectedEdge["beautifHOL", "base"], DirectedEdge["beautifHOL", "mtl"], DirectedEdge["bed-and-breakfast", "array"], DirectedEdge["bed-and-breakfast", "base"], DirectedEdge["bed-and-breakfast", "binary"], DirectedEdge["bed-and-breakfast", "deepseq"], DirectedEdge["bed-and-breakfast", "template-haskell"], DirectedEdge["bein", "base"], DirectedEdge["bein", "bytestring"], DirectedEdge["bein", "containers"], DirectedEdge["bein", "convertible"], DirectedEdge["bein", "Crypto"], DirectedEdge["bein", "directory"], DirectedEdge["bein", "filepath"], DirectedEdge["bein", "happstack-server"], DirectedEdge["bein", "happstack-util"], DirectedEdge["bein", "hdaemonize"], DirectedEdge["bein", "HDBC"], DirectedEdge["bein", "HDBC-postgresql"], DirectedEdge["bein", "hsyslog"], DirectedEdge["bein", "mtl"], DirectedEdge["bein", "network"], DirectedEdge["bein", "old-locale"], DirectedEdge["bein", "parsec"], DirectedEdge["bein", "process"], DirectedEdge["bein", "random"], DirectedEdge["bein", "stm"], DirectedEdge["bein", "time"], DirectedEdge["bein", "unix"], DirectedEdge["bein", "utf8-string"], DirectedEdge["bein", "xhtml"], DirectedEdge["bench", "base"], DirectedEdge["bench", "criterion"], DirectedEdge["bench", "silently"], DirectedEdge["bench", "text"], DirectedEdge["bench", "turtle"], DirectedEdge["benchmark-function", "base"], DirectedEdge["benchmark-function", "process"], DirectedEdge["benchmark-function", "random"], DirectedEdge["benchmark-function", "time"], DirectedEdge["benchpress", "base"], DirectedEdge["benchpress", "mtl"], DirectedEdge["benchpress", "time"], DirectedEdge["bencode", "base"], DirectedEdge["bencode", "binary"], DirectedEdge["bencode", "bytestring"], DirectedEdge["bencode", "containers"], DirectedEdge["bencode", "parsec"], DirectedEdge["bencoding", "attoparsec"], DirectedEdge["bencoding", "base"], DirectedEdge["bencoding", "bytestring"], DirectedEdge["bencoding", "deepseq"], DirectedEdge["bencoding", "ghc-prim"], DirectedEdge["bencoding", "mtl"], DirectedEdge["bencoding", "pretty"], DirectedEdge["bencoding", "text"], DirectedEdge["bento", "base"], DirectedEdge["berkeleydb", "base"], DirectedEdge["berkeleydb", "binary"], DirectedEdge["berkeleydb", "bytestring"], DirectedEdge["berp", "array"], DirectedEdge["berp", "base"], DirectedEdge["berp", "containers"], DirectedEdge["berp", "directory"], DirectedEdge["berp", "extensible-exceptions"], DirectedEdge["berp", "filepath"], DirectedEdge["berp", "ghc"], DirectedEdge["berp", "ghc-paths"], DirectedEdge["berp", "ghc-prim"], DirectedEdge["berp", "haskeline"], DirectedEdge["berp", "haskell-src-exts"], DirectedEdge["berp", "language-python"], DirectedEdge["berp", "monads-tf"], DirectedEdge["berp", "parseargs"], DirectedEdge["berp", "process"], DirectedEdge["berp", "template-haskell"], DirectedEdge["berp", "transformers"], DirectedEdge["bert", "base"], DirectedEdge["bert", "binary"], DirectedEdge["bert", "binary-conduit"], DirectedEdge["bert", "bytestring"], DirectedEdge["bert", "conduit"], DirectedEdge["bert", "conduit-extra"], DirectedEdge["bert", "containers"], DirectedEdge["bert", "mtl"], DirectedEdge["bert", "network"], DirectedEdge["bert", "parsec"], DirectedEdge["bert", "time"], DirectedEdge["bert", "unix"], DirectedEdge["bert", "void"], DirectedEdge["besout", "base"], DirectedEdge["bet", "aeson"], DirectedEdge["bet", "base"], DirectedEdge["bet", "bet"], DirectedEdge["bet", "bifunctors"], DirectedEdge["bet", "binary"], DirectedEdge["bet", "bytestring"], DirectedEdge["bet", "containers"], DirectedEdge["bet", "exceptions"], DirectedEdge["bet", "HsOpenSSL"], DirectedEdge["bet", "http-client"], DirectedEdge["bet", "http-client-openssl"], DirectedEdge["bet", "lens"], DirectedEdge["bet", "mtl"], DirectedEdge["bet", "semigroupoids"], DirectedEdge["bet", "semigroups"], DirectedEdge["bet", "text"], DirectedEdge["bet", "time"], DirectedEdge["betacode", "attoparsec"], DirectedEdge["betacode", "base"], DirectedEdge["betacode", "errors"], DirectedEdge["betacode", "hashable"], DirectedEdge["betacode", "text"], DirectedEdge["betacode", "text-icu"], DirectedEdge["between", "base"], DirectedEdge["bf-cata", "base"], DirectedEdge["bff", "base"], DirectedEdge["bff", "benchpress"], DirectedEdge["bff", "bimap"], DirectedEdge["bff", "category-extras"], DirectedEdge["bff", "cgi"], DirectedEdge["bff", "Chart"], DirectedEdge["bff", "colour"], DirectedEdge["bff", "containers"], DirectedEdge["bff", "data-accessor"], DirectedEdge["bff", "derive"], DirectedEdge["bff", "directory"], DirectedEdge["bff", "hint"], DirectedEdge["bff", "mtl"], DirectedEdge["bff", "template-haskell"], DirectedEdge["bff", "unix"], DirectedEdge["bff", "utf8-string"], DirectedEdge["bff", "xhtml"], DirectedEdge["bff-mono", "base"], DirectedEdge["bff-mono", "containers"], DirectedEdge["bff-mono", "mtl"], DirectedEdge["bgmax", "attoparsec"], DirectedEdge["bgmax", "base"], DirectedEdge["bgmax", "bytestring"], DirectedEdge["bgmax", "time"], DirectedEdge["bgzf", "pipes-bgzf"], DirectedEdge["bgzf", "base"], DirectedEdge["bgzf", "bytestring"], DirectedEdge["bgzf", "mtl"], DirectedEdge["bgzf", "parallel"], DirectedEdge["bgzf", "pipes"], DirectedEdge["bgzf", "streaming-commons"], DirectedEdge["bibdb", "array"], DirectedEdge["bibdb", "base"], DirectedEdge["bibdb", "bibtex"], DirectedEdge["bibdb", "bytestring"], DirectedEdge["bibdb", "containers"], DirectedEdge["bibdb", "curl"], DirectedEdge["bibdb", "download-curl"], DirectedEdge["bibdb", "filepath"], DirectedEdge["bibdb", "microlens"], DirectedEdge["bibdb", "microlens-mtl"], DirectedEdge["bibdb", "microlens-th"], DirectedEdge["bibdb", "mtl"], DirectedEdge["bibdb", "optparse-applicative"], DirectedEdge["bibdb", "parsec"], DirectedEdge["bibdb", "pretty"], DirectedEdge["bibdb", "transformers"], DirectedEdge["bibtex", "base"], DirectedEdge["bibtex", "bytestring"], DirectedEdge["bibtex", "Cabal"], DirectedEdge["bibtex", "latex"], DirectedEdge["bibtex", "old-time"], DirectedEdge["bibtex", "parsec"], DirectedEdge["bibtex", "special-functors"], DirectedEdge["bibtex", "tar"], DirectedEdge["bibtex", "utf8-string"], DirectedEdge["bibtex", "utility-ht"], DirectedEdge["bidirectionalization-combined", "base"], DirectedEdge["bidirectionalization-combined", "bytestring"], DirectedEdge["bidirectionalization-combined", "cgi"], DirectedEdge["bidirectionalization-combined", "containers"], DirectedEdge["bidirectionalization-combined", "directory"], DirectedEdge["bidirectionalization-combined", "hint"], DirectedEdge["bidirectionalization-combined", "mtl"], DirectedEdge["bidirectionalization-combined", "parsec"], DirectedEdge["bidirectionalization-combined", "pretty"], DirectedEdge["bidirectionalization-combined", "template-haskell"], DirectedEdge["bidirectionalization-combined", "unix"], DirectedEdge["bidirectionalization-combined", "utf8-string"], DirectedEdge["bidirectionalization-combined", "xhtml"], DirectedEdge["bidispec", "base"], DirectedEdge["bidispec", "bytestring"], DirectedEdge["bidispec", "mtl"], DirectedEdge["bidispec-extras", "base"], DirectedEdge["bidispec-extras", "bytestring"], DirectedEdge["bidispec-extras", "dataenc"], DirectedEdge["bidispec-extras", "mtl"], DirectedEdge["bifunctors", "base"], DirectedEdge["bifunctors", "base-orphans"], DirectedEdge["bifunctors", "comonad"], DirectedEdge["bifunctors", "containers"], DirectedEdge["bifunctors", "ghc-prim"], DirectedEdge["bifunctors", "semigroups"], DirectedEdge["bifunctors", "tagged"], DirectedEdge["bifunctors", "template-haskell"], DirectedEdge["bifunctors", "transformers"], DirectedEdge["bifunctors", "transformers-compat"], DirectedEdge["bighugethesaurus", "base"], DirectedEdge["bighugethesaurus", "HTTP"], DirectedEdge["bighugethesaurus", "split"], DirectedEdge["billboard-parser", "base"], DirectedEdge["billboard-parser", "directory"], DirectedEdge["billboard-parser", "filepath"], DirectedEdge["billboard-parser", "HarmTrace-Base"], DirectedEdge["billboard-parser", "HUnit"], DirectedEdge["billboard-parser", "ListLike"], DirectedEdge["billboard-parser", "mtl"], DirectedEdge["billboard-parser", "parseargs"], DirectedEdge["billboard-parser", "uu-parsinglib"], DirectedEdge["billeksah-forms", "base"], DirectedEdge["billeksah-forms", "billeksah-pane"], DirectedEdge["billeksah-forms", "billeksah-services"], DirectedEdge["billeksah-forms", "Cabal"], DirectedEdge["billeksah-forms", "containers"], DirectedEdge["billeksah-forms", "directory"], DirectedEdge["billeksah-forms", "filepath"], DirectedEdge["billeksah-forms", "glib"], DirectedEdge["billeksah-forms", "gtk"], DirectedEdge["billeksah-forms", "mtl"], DirectedEdge["billeksah-forms", "parsec"], DirectedEdge["billeksah-forms", "pretty"], DirectedEdge["billeksah-forms", "transformers"], DirectedEdge["billeksah-main", "base"], DirectedEdge["billeksah-main", "billeksah-services"], DirectedEdge["billeksah-main", "containers"], DirectedEdge["billeksah-main", "directory"], DirectedEdge["billeksah-main", "filepath"], DirectedEdge["billeksah-main", "mtl"], DirectedEdge["billeksah-main", "parsec"], DirectedEdge["billeksah-main", "plugins"], DirectedEdge["billeksah-main", "pretty"], DirectedEdge["billeksah-main", "transformers"], DirectedEdge["billeksah-main-static", "base"], DirectedEdge["billeksah-main-static", "billeksah-forms"], DirectedEdge["billeksah-main-static", "billeksah-pane"], DirectedEdge["billeksah-main-static", "billeksah-services"], DirectedEdge["billeksah-main-static", "containers"], DirectedEdge["billeksah-main-static", "directory"], DirectedEdge["billeksah-main-static", "filepath"], DirectedEdge["billeksah-main-static", "leksah-dummy"], DirectedEdge["billeksah-main-static", "leksah-main"], DirectedEdge["billeksah-main-static", "leksah-plugin-pane"], DirectedEdge["billeksah-main-static", "mtl"], DirectedEdge["billeksah-main-static", "parsec"], DirectedEdge["billeksah-main-static", "pretty"], DirectedEdge["billeksah-main-static", "transformers"], DirectedEdge["billeksah-pane", "base"], DirectedEdge["billeksah-pane", "billeksah-services"], DirectedEdge["billeksah-pane", "containers"], DirectedEdge["billeksah-pane", "directory"], DirectedEdge["billeksah-pane", "filepath"], DirectedEdge["billeksah-pane", "glib"], DirectedEdge["billeksah-pane", "gtk"], DirectedEdge["billeksah-pane", "mtl"], DirectedEdge["billeksah-pane", "parsec"], DirectedEdge["billeksah-pane", "pretty"], DirectedEdge["billeksah-pane", "time"], DirectedEdge["billeksah-pane", "transformers"], DirectedEdge["billeksah-services", "base"], DirectedEdge["billeksah-services", "containers"], DirectedEdge["billeksah-services", "directory"], DirectedEdge["billeksah-services", "filepath"], DirectedEdge["billeksah-services", "mtl"], DirectedEdge["billeksah-services", "parsec"], DirectedEdge["billeksah-services", "pretty"], DirectedEdge["billeksah-services", "transformers"], DirectedEdge["bimap", "base"], DirectedEdge["bimap", "containers"], DirectedEdge["bimap", "exceptions"], DirectedEdge["bimap-server", "aeson"], DirectedEdge["bimap-server", "base"], DirectedEdge["bimap-server", "bimap"], DirectedEdge["bimap-server", "binary"], DirectedEdge["bimap-server", "directory"], DirectedEdge["bimap-server", "http-types"], DirectedEdge["bimap-server", "unix"], DirectedEdge["bimap-server", "wai"], DirectedEdge["bimap-server", "warp"], DirectedEdge["bimaps", "aeson"], DirectedEdge["bimaps", "base"], DirectedEdge["bimaps", "binary"], DirectedEdge["bimaps", "cereal"], DirectedEdge["bimaps", "containers"], DirectedEdge["bimaps", "deepseq"], DirectedEdge["bimaps", "hashable"], DirectedEdge["bimaps", "primitive"], DirectedEdge["bimaps", "storable-tuple"], DirectedEdge["bimaps", "unordered-containers"], DirectedEdge["bimaps", "vector"], DirectedEdge["bimaps", "vector-binary-instances"], DirectedEdge["bimaps", "vector-th-unbox"], DirectedEdge["binary", "array"], DirectedEdge["binary", "base"], DirectedEdge["binary", "bytestring"], DirectedEdge["binary", "containers"], DirectedEdge["binary", "ghc-prim"], DirectedEdge["binary-bits", "base"], DirectedEdge["binary-bits", "binary"], DirectedEdge["binary-bits", "bytestring"], DirectedEdge["binary-communicator", "base"], DirectedEdge["binary-communicator", "binary"], DirectedEdge["binary-communicator", "bytestring"], DirectedEdge["binary-communicator", "mtl"], DirectedEdge["binary-conduit", "base"], DirectedEdge["binary-conduit", "binary"], DirectedEdge["binary-conduit", "bytestring"], DirectedEdge["binary-conduit", "conduit"], DirectedEdge["binary-conduit", "resourcet"], DirectedEdge["binary-conduit", "vector"], DirectedEdge["binary-derive", "base"], DirectedEdge["binary-derive", "binary"], DirectedEdge["binary-derive", "ghc-prim"], DirectedEdge["binary-enum", "base"], DirectedEdge["binary-enum", "binary"], DirectedEdge["binary-file", "base"], DirectedEdge["binary-file", "bytestring"], DirectedEdge["binary-file", "monads-tf"], DirectedEdge["binary-file", "peggy"], DirectedEdge["binary-file", "template-haskell"], DirectedEdge["binary-generic", "base"], DirectedEdge["binary-generic", "binary"], DirectedEdge["binary-generic", "bytestring"], DirectedEdge["binary-generic", "syb"], DirectedEdge["binary-generic", "text"], DirectedEdge["binary-indexed-tree", "array"], DirectedEdge["binary-indexed-tree", "base"], DirectedEdge["binary-list", "base"], DirectedEdge["binary-list", "binary"], DirectedEdge["binary-list", "bytestring"], DirectedEdge["binary-list", "deepseq"], DirectedEdge["binary-list", "phantom-state"], DirectedEdge["binary-list", "transformers"], DirectedEdge["binary-literal-qq", "base"], DirectedEdge["binary-literal-qq", "template-haskell"], DirectedEdge["binary-orphans", "aeson"], DirectedEdge["binary-orphans", "base"], DirectedEdge["binary-orphans", "binary"], DirectedEdge["binary-orphans", "hashable"], DirectedEdge["binary-orphans", "scientific"], DirectedEdge["binary-orphans", "semigroups"], DirectedEdge["binary-orphans", "tagged"], DirectedEdge["binary-orphans", "text"], DirectedEdge["binary-orphans", "text-binary"], DirectedEdge["binary-orphans", "time"], DirectedEdge["binary-orphans", "unordered-containers"], DirectedEdge["binary-orphans", "vector"], DirectedEdge["binary-orphans", "vector-binary-instances"], DirectedEdge["binary-parser", "base-prelude"], DirectedEdge["binary-parser", "bytestring"], DirectedEdge["binary-parser", "success"], DirectedEdge["binary-parser", "text"], DirectedEdge["binary-parser", "transformers"], DirectedEdge["binary-protocol", "base"], DirectedEdge["binary-protocol", "binary"], DirectedEdge["binary-protocol", "bytestring"], DirectedEdge["binary-protocol", "mtl"], DirectedEdge["binary-protocol-zmq", "base"], DirectedEdge["binary-protocol-zmq", "binary"], DirectedEdge["binary-protocol-zmq", "bytestring"], DirectedEdge["binary-protocol-zmq", "HUnit"], DirectedEdge["binary-protocol-zmq", "mtl"], DirectedEdge["binary-protocol-zmq", "test-framework"], DirectedEdge["binary-protocol-zmq", "test-framework-hunit"], DirectedEdge["binary-protocol-zmq", "zeromq-haskell"], DirectedEdge["binary-search", "base"], DirectedEdge["binary-search", "containers"], DirectedEdge["binary-search", "transformers"], DirectedEdge["binary-shared", "base"], DirectedEdge["binary-shared", "binary"], DirectedEdge["binary-shared", "bytestring"], DirectedEdge["binary-shared", "containers"], DirectedEdge["binary-shared", "mtl"], DirectedEdge["binary-state", "base"], DirectedEdge["binary-state", "binary"], DirectedEdge["binary-state", "bytestring"], DirectedEdge["binary-state", "containers"], DirectedEdge["binary-state", "mtl"], DirectedEdge["binary-store", "base"], DirectedEdge["binary-store", "binary"], DirectedEdge["binary-store", "binary-list"], DirectedEdge["binary-store", "binary-transform"], DirectedEdge["binary-store", "bytestring"], DirectedEdge["binary-store", "bzlib"], DirectedEdge["binary-store", "deepseq"], DirectedEdge["binary-store", "reinterpret-cast"], DirectedEdge["binary-streams", "base"], DirectedEdge["binary-streams", "binary"], DirectedEdge["binary-streams", "bytestring"], DirectedEdge["binary-streams", "io-streams"], DirectedEdge["binary-strict", "array"], DirectedEdge["binary-strict", "base"], DirectedEdge["binary-strict", "bytestring"], DirectedEdge["binary-strict", "containers"], DirectedEdge["binary-strict", "mtl"], DirectedEdge["binary-tagged", "aeson"], DirectedEdge["binary-tagged", "array"], DirectedEdge["binary-tagged", "base"], DirectedEdge["binary-tagged", "binary"], DirectedEdge["binary-tagged", "bytestring"], DirectedEdge["binary-tagged", "containers"], DirectedEdge["binary-tagged", "generics-sop"], DirectedEdge["binary-tagged", "hashable"], DirectedEdge["binary-tagged", "nats"], DirectedEdge["binary-tagged", "scientific"], DirectedEdge["binary-tagged", "semigroups"], DirectedEdge["binary-tagged", "SHA"], DirectedEdge["binary-tagged", "tagged"], DirectedEdge["binary-tagged", "text"], DirectedEdge["binary-tagged", "time"], DirectedEdge["binary-tagged", "unordered-containers"], DirectedEdge["binary-tagged", "vector"], DirectedEdge["binary-typed", "base"], DirectedEdge["binary-typed", "binary"], DirectedEdge["binary-typed", "bytestring"], DirectedEdge["binary-typed", "murmur-hash"], DirectedEdge["binarydefer", "base"], DirectedEdge["bind-marshal", "base"], DirectedEdge["bind-marshal", "bytestring"], DirectedEdge["bind-marshal", "containers"], DirectedEdge["bind-marshal", "deepseq"], DirectedEdge["bind-marshal", "ghc-prim"], DirectedEdge["bind-marshal", "monads-tf"], DirectedEdge["bind-marshal", "mtl"], DirectedEdge["bind-marshal", "numeric-prelude"], DirectedEdge["bind-marshal", "random"], DirectedEdge["bind-marshal", "stm"], DirectedEdge["bind-marshal", "strict"], DirectedEdge["bind-marshal", "transformers"], DirectedEdge["bind-marshal", "type-level-tf"], DirectedEdge["bind-marshal", "unix"], DirectedEdge["binding-core", "base"], DirectedEdge["binding-core", "stm"], DirectedEdge["binding-gtk", "base"], DirectedEdge["binding-gtk", "binding-core"], DirectedEdge["binding-gtk", "gtk"], DirectedEdge["binding-gtk", "mtl"], DirectedEdge["binding-wx", "base"], DirectedEdge["binding-wx", "binding-core"], DirectedEdge["binding-wx", "stm"], DirectedEdge["binding-wx", "wx"], DirectedEdge["binding-wx", "wxcore"], DirectedEdge["bindings", "base"], DirectedEdge["bindings-DSL", "base"], DirectedEdge["bindings-EsounD", "base"], DirectedEdge["bindings-EsounD", "bindings-audiofile"], DirectedEdge["bindings-EsounD", "bindings-DSL"], DirectedEdge["bindings-GLFW", "base"], DirectedEdge["bindings-GLFW", "bindings-DSL"], DirectedEdge["bindings-GLFW", "template-haskell"], DirectedEdge["bindings-K8055", "base"], DirectedEdge["bindings-apr", "base"], DirectedEdge["bindings-apr", "bindings-DSL"], DirectedEdge["bindings-apr-util", "base"], DirectedEdge["bindings-apr-util", "bindings-apr"], DirectedEdge["bindings-apr-util", "bindings-DSL"], DirectedEdge["bindings-audiofile", "base"], DirectedEdge["bindings-audiofile", "bindings-DSL"], DirectedEdge["bindings-bfd", "array"], DirectedEdge["bindings-bfd", "base"], DirectedEdge["bindings-bfd", "containers"], DirectedEdge["bindings-bfd", "unix"], DirectedEdge["bindings-cctools", "base"], DirectedEdge["bindings-cctools", "bindings-DSL"], DirectedEdge["bindings-codec2", "base"], DirectedEdge["bindings-codec2", "binary"], DirectedEdge["bindings-codec2", "bindings-DSL"], DirectedEdge["bindings-codec2", "bytestring"], DirectedEdge["bindings-codec2", "split"], DirectedEdge["bindings-common", "bindings-DSL"], DirectedEdge["bindings-common", "base"], DirectedEdge["bindings-dc1394", "base"], DirectedEdge["bindings-dc1394", "bindings-DSL"], DirectedEdge["bindings-directfb", "base"], DirectedEdge["bindings-directfb", "bindings-DSL"], DirectedEdge["bindings-directfb", "bindings-posix"], DirectedEdge["bindings-eskit", "array"], DirectedEdge["bindings-eskit", "base"], DirectedEdge["bindings-eskit", "bindings-DSL"], DirectedEdge["bindings-fann", "base"], DirectedEdge["bindings-fann", "bindings-DSL"], DirectedEdge["bindings-fluidsynth", "base"], DirectedEdge["bindings-fluidsynth", "bindings-DSL"], DirectedEdge["bindings-friso", "base"], DirectedEdge["bindings-friso", "bindings-DSL"], DirectedEdge["bindings-glib", "base"], DirectedEdge["bindings-glib", "bindings-DSL"], DirectedEdge["bindings-gobject", "base"], DirectedEdge["bindings-gobject", "bindings-DSL"], DirectedEdge["bindings-gobject", "bindings-glib"], DirectedEdge["bindings-gpgme", "base"], DirectedEdge["bindings-gpgme", "bindings-DSL"], DirectedEdge["bindings-gsl", "base"], DirectedEdge["bindings-gsl", "bindings-DSL"], DirectedEdge["bindings-gts", "base"], DirectedEdge["bindings-gts", "bindings-DSL"], DirectedEdge["bindings-gts", "bindings-glib"], DirectedEdge["bindings-hamlib", "base"], DirectedEdge["bindings-hamlib", "bindings-DSL"], DirectedEdge["bindings-hamlib", "bindings-hamlib"], DirectedEdge["bindings-hdf5", "base"], DirectedEdge["bindings-hdf5", "bindings-DSL"], DirectedEdge["bindings-levmar", "base"], DirectedEdge["bindings-levmar", "bindings-DSL"], DirectedEdge["bindings-libcddb", "base"], DirectedEdge["bindings-libcddb", "bindings-DSL"], DirectedEdge["bindings-libffi", "base"], DirectedEdge["bindings-libffi", "bindings-DSL"], DirectedEdge["bindings-libftdi", "base"], DirectedEdge["bindings-libftdi", "bindings-DSL"], DirectedEdge["bindings-librrd", "base"], DirectedEdge["bindings-librrd", "bindings-DSL"], DirectedEdge["bindings-libstemmer", "base"], DirectedEdge["bindings-libstemmer", "bindings-DSL"], DirectedEdge["bindings-libstemmer", "resourcet"], DirectedEdge["bindings-libstemmer", "transformers"], DirectedEdge["bindings-libusb", "base"], DirectedEdge["bindings-libusb", "bindings-DSL"], DirectedEdge["bindings-libv4l2", "base"], DirectedEdge["bindings-libv4l2", "bindings-DSL"], DirectedEdge["bindings-libzip", "base"], DirectedEdge["bindings-libzip", "bindings-DSL"], DirectedEdge["bindings-linux-videodev2", "base"], DirectedEdge["bindings-linux-videodev2", "bindings-DSL"], DirectedEdge["bindings-linux-videodev2", "ioctl"], DirectedEdge["bindings-lxc", "base"], DirectedEdge["bindings-lxc", "bindings-DSL"], DirectedEdge["bindings-mmap", "bindings-posix"], DirectedEdge["bindings-mpdecimal", "deka"], DirectedEdge["bindings-mpdecimal", "base"], DirectedEdge["bindings-mpdecimal", "bindings-DSL"], DirectedEdge["bindings-nettle", "base"], DirectedEdge["bindings-nettle", "bindings-DSL"], DirectedEdge["bindings-parport", "base"], DirectedEdge["bindings-parport", "bindings-DSL"], DirectedEdge["bindings-portaudio", "base"], DirectedEdge["bindings-portaudio", "bindings-DSL"], DirectedEdge["bindings-posix", "base"], DirectedEdge["bindings-posix", "bindings-DSL"], DirectedEdge["bindings-potrace", "base"], DirectedEdge["bindings-potrace", "bindings-DSL"], DirectedEdge["bindings-ppdev", "base"], DirectedEdge["bindings-ppdev", "bindings-DSL"], DirectedEdge["bindings-ppdev", "ioctl"], DirectedEdge["bindings-saga-cmd", "base"], DirectedEdge["bindings-saga-cmd", "bindings-saga-cmd"], DirectedEdge["bindings-saga-cmd", "cmdargs"], DirectedEdge["bindings-saga-cmd", "containers"], DirectedEdge["bindings-saga-cmd", "directory"], DirectedEdge["bindings-saga-cmd", "filepath"], DirectedEdge["bindings-saga-cmd", "process"], DirectedEdge["bindings-saga-cmd", "text"], DirectedEdge["bindings-saga-cmd", "unix"], DirectedEdge["bindings-sane", "base"], DirectedEdge["bindings-sane", "bindings-DSL"], DirectedEdge["bindings-sc3", "base"], DirectedEdge["bindings-sc3", "bindings-DSL"], DirectedEdge["bindings-sipc", "base"], DirectedEdge["bindings-sipc", "bindings-sipc"], DirectedEdge["bindings-sophia", "base"], DirectedEdge["bindings-sophia", "bindings-DSL"], DirectedEdge["bindings-sqlite3", "base"], DirectedEdge["bindings-sqlite3", "bindings-DSL"], DirectedEdge["bindings-svm", "base"], DirectedEdge["bindings-svm", "bindings-DSL"], DirectedEdge["bindings-uname", "base"], DirectedEdge["bindings-wlc", "base"], DirectedEdge["bindings-wlc", "bindings-DSL"], DirectedEdge["bindings-wlc", "convertible"], DirectedEdge["bindings-yices", "base"], DirectedEdge["bindynamic", "base"], DirectedEdge["bindynamic", "binary"], DirectedEdge["bindynamic", "bytestring"], DirectedEdge["bindynamic", "rank1dynamic"], DirectedEdge["binembed", "base"], DirectedEdge["binembed", "bytestring"], DirectedEdge["binembed", "Cabal"], DirectedEdge["binembed", "containers"], DirectedEdge["binembed", "directory"], DirectedEdge["binembed", "dlist"], DirectedEdge["binembed", "filepath"], DirectedEdge["binembed-example", "base"], DirectedEdge["binembed-example", "binembed"], DirectedEdge["binembed-example", "bytestring"], DirectedEdge["binembed-example", "containers"], DirectedEdge["binembed-example", "filepath"], DirectedEdge["bini", "base"], DirectedEdge["bini", "binary"], DirectedEdge["bini", "bytestring"], DirectedEdge["bio", "array"], DirectedEdge["bio", "base"], DirectedEdge["bio", "binary"], DirectedEdge["bio", "bytestring"], DirectedEdge["bio", "containers"], DirectedEdge["bio", "directory"], DirectedEdge["bio", "mtl"], DirectedEdge["bio", "old-time"], DirectedEdge["bio", "parallel"], DirectedEdge["bio", "parsec"], DirectedEdge["bio", "process"], DirectedEdge["bio", "QuickCheck"], DirectedEdge["bio", "random"], DirectedEdge["bio", "tagsoup"], DirectedEdge["bioace", "base"], DirectedEdge["bioace", "bioalign"], DirectedEdge["bioace", "biocore"], DirectedEdge["bioace", "bytestring"], DirectedEdge["bioace", "parsec"], DirectedEdge["bioalign", "base"], DirectedEdge["bioalign", "biocore"], DirectedEdge["bioalign", "bytestring"], DirectedEdge["biocore", "base"], DirectedEdge["biocore", "bytestring"], DirectedEdge["biocore", "stringable"], DirectedEdge["biofasta", "base"], DirectedEdge["biofasta", "biocore"], DirectedEdge["biofasta", "bytestring"], DirectedEdge["biofastq", "base"], DirectedEdge["biofastq", "biocore"], DirectedEdge["biofastq", "bytestring"], DirectedEdge["biohazard", "aeson"], DirectedEdge["biohazard", "async"], DirectedEdge["biohazard", "attoparsec"], DirectedEdge["biohazard", "base"], DirectedEdge["biohazard", "binary"], DirectedEdge["biohazard", "biohazard"], DirectedEdge["biohazard", "bytestring"], DirectedEdge["biohazard", "bytestring-mmap"], DirectedEdge["biohazard", "containers"], DirectedEdge["biohazard", "deepseq"], DirectedEdge["biohazard", "directory"], DirectedEdge["biohazard", "exceptions"], DirectedEdge["biohazard", "filepath"], DirectedEdge["biohazard", "hashable"], DirectedEdge["biohazard", "hmatrix"], DirectedEdge["biohazard", "iteratee"], DirectedEdge["biohazard", "ListLike"], DirectedEdge["biohazard", "nonlinear-optimization"], DirectedEdge["biohazard", "primitive"], DirectedEdge["biohazard", "random"], DirectedEdge["biohazard", "scientific"], DirectedEdge["biohazard", "stm"], DirectedEdge["biohazard", "strict"], DirectedEdge["biohazard", "template-haskell"], DirectedEdge["biohazard", "text"], DirectedEdge["biohazard", "transformers"], DirectedEdge["biohazard", "unix"], DirectedEdge["biohazard", "unordered-containers"], DirectedEdge["biohazard", "Vec"], DirectedEdge["biohazard", "vector"], DirectedEdge["biohazard", "vector-algorithms"], DirectedEdge["biohazard", "vector-th-unbox"], DirectedEdge["biohazard", "zlib"], DirectedEdge["bioinformatics-toolkit", "aeson"], DirectedEdge["bioinformatics-toolkit", "aeson-pretty"], DirectedEdge["bioinformatics-toolkit", "base"], DirectedEdge["bioinformatics-toolkit", "binary"], DirectedEdge["bioinformatics-toolkit", "bioinformatics-toolkit"], DirectedEdge["bioinformatics-toolkit", "bytestring"], DirectedEdge["bioinformatics-toolkit", "bytestring-lexing"], DirectedEdge["bioinformatics-toolkit", "clustering"], DirectedEdge["bioinformatics-toolkit", "colour"], DirectedEdge["bioinformatics-toolkit", "conduit-combinators"], DirectedEdge["bioinformatics-toolkit", "containers"], DirectedEdge["bioinformatics-toolkit", "data-default-class"], DirectedEdge["bioinformatics-toolkit", "double-conversion"], DirectedEdge["bioinformatics-toolkit", "hexpat"], DirectedEdge["bioinformatics-toolkit", "http-conduit"], DirectedEdge["bioinformatics-toolkit", "IntervalMap"], DirectedEdge["bioinformatics-toolkit", "matrices"], DirectedEdge["bioinformatics-toolkit", "mtl"], DirectedEdge["bioinformatics-toolkit", "optparse-applicative"], DirectedEdge["bioinformatics-toolkit", "palette"], DirectedEdge["bioinformatics-toolkit", "parallel"], DirectedEdge["bioinformatics-toolkit", "primitive"], DirectedEdge["bioinformatics-toolkit", "samtools"], DirectedEdge["bioinformatics-toolkit", "shelly"], DirectedEdge["bioinformatics-toolkit", "split"], DirectedEdge["bioinformatics-toolkit", "statistics"], DirectedEdge["bioinformatics-toolkit", "text"], DirectedEdge["bioinformatics-toolkit", "transformers"], DirectedEdge["bioinformatics-toolkit", "unordered-containers"], DirectedEdge["bioinformatics-toolkit", "vector"], DirectedEdge["bioinformatics-toolkit", "vector-algorithms"], DirectedEdge["biophd", "base"], DirectedEdge["biophd", "binary"], DirectedEdge["biophd", "biocore"], DirectedEdge["biophd", "bytestring"], DirectedEdge["biophd", "parsec"], DirectedEdge["biophd", "text"], DirectedEdge["biophd", "time"], DirectedEdge["biophd", "time-locale-compat"], DirectedEdge["biopsl", "base"], DirectedEdge["biopsl", "biocore"], DirectedEdge["biopsl", "bytestring"], DirectedEdge["biopsl", "cmdargs"], DirectedEdge["biopsl", "unordered-containers"], DirectedEdge["biosff", "array"], DirectedEdge["biosff", "base"], DirectedEdge["biosff", "binary"], DirectedEdge["biosff", "biocore"], DirectedEdge["biosff", "bytestring"], DirectedEdge["biosff", "cmdargs"], DirectedEdge["biosff", "mtl"], DirectedEdge["biostockholm", "attoparsec"], DirectedEdge["biostockholm", "attoparsec-conduit"], DirectedEdge["biostockholm", "base"], DirectedEdge["biostockholm", "biocore"], DirectedEdge["biostockholm", "blaze-builder"], DirectedEdge["biostockholm", "blaze-builder-conduit"], DirectedEdge["biostockholm", "bytestring"], DirectedEdge["biostockholm", "conduit"], DirectedEdge["biostockholm", "containers"], DirectedEdge["biostockholm", "deepseq"], DirectedEdge["bird", "base"], DirectedEdge["bird", "bytestring"], DirectedEdge["bird", "containers"], DirectedEdge["bird", "data-default"], DirectedEdge["bird", "hack"], DirectedEdge["bird", "hack-handler-happstack"], DirectedEdge["bird", "MissingH"], DirectedEdge["bird", "mtl"], DirectedEdge["bird", "parsec"], DirectedEdge["bird", "process"], DirectedEdge["bird", "rallod"], DirectedEdge["bit-array", "base"], DirectedEdge["bit-array", "numeric-qq"], DirectedEdge["bit-vector", "base"], DirectedEdge["bit-vector", "vector"], DirectedEdge["bitarray", "array"], DirectedEdge["bitarray", "base"], DirectedEdge["bitcoin-api", "aeson"], DirectedEdge["bitcoin-api", "base"], DirectedEdge["bitcoin-api", "base58string"], DirectedEdge["bitcoin-api", "binary"], DirectedEdge["bitcoin-api", "bitcoin-block"], DirectedEdge["bitcoin-api", "bitcoin-script"], DirectedEdge["bitcoin-api", "bitcoin-tx"], DirectedEdge["bitcoin-api", "bitcoin-types"], DirectedEdge["bitcoin-api", "bytestring"], DirectedEdge["bitcoin-api", "hexstring"], DirectedEdge["bitcoin-api", "lens"], DirectedEdge["bitcoin-api", "lens-aeson"], DirectedEdge["bitcoin-api", "text"], DirectedEdge["bitcoin-api", "unordered-containers"], DirectedEdge["bitcoin-api", "wreq"], DirectedEdge["bitcoin-api-extra", "base"], DirectedEdge["bitcoin-api-extra", "binary"], DirectedEdge["bitcoin-api-extra", "bitcoin-api"], DirectedEdge["bitcoin-api-extra", "bitcoin-block"], DirectedEdge["bitcoin-api-extra", "bitcoin-tx"], DirectedEdge["bitcoin-api-extra", "bytestring"], DirectedEdge["bitcoin-api-extra", "conduit"], DirectedEdge["bitcoin-api-extra", "lens"], DirectedEdge["bitcoin-api-extra", "stm"], DirectedEdge["bitcoin-api-extra", "stm-chans"], DirectedEdge["bitcoin-api-extra", "stm-conduit"], DirectedEdge["bitcoin-api-extra", "text"], DirectedEdge["bitcoin-api-extra", "transformers"], DirectedEdge["bitcoin-block", "base"], DirectedEdge["bitcoin-block", "binary"], DirectedEdge["bitcoin-block", "bitcoin-tx"], DirectedEdge["bitcoin-block", "bitcoin-types"], DirectedEdge["bitcoin-block", "bytestring"], DirectedEdge["bitcoin-block", "cryptohash"], DirectedEdge["bitcoin-block", "hexstring"], DirectedEdge["bitcoin-block", "largeword"], DirectedEdge["bitcoin-block", "lens"], DirectedEdge["bitcoin-payment-channel", "base"], DirectedEdge["bitcoin-payment-channel", "base16-bytestring"], DirectedEdge["bitcoin-payment-channel", "base58string"], DirectedEdge["bitcoin-payment-channel", "binary"], DirectedEdge["bitcoin-payment-channel", "bytestring"], DirectedEdge["bitcoin-payment-channel", "cereal"], DirectedEdge["bitcoin-payment-channel", "haskoin-core"], DirectedEdge["bitcoin-payment-channel", "hexstring"], DirectedEdge["bitcoin-payment-channel", "text"], DirectedEdge["bitcoin-payment-channel", "time"], DirectedEdge["bitcoin-rpc", "aeson"], DirectedEdge["bitcoin-rpc", "attoparsec"], DirectedEdge["bitcoin-rpc", "base"], DirectedEdge["bitcoin-rpc", "bytestring"], DirectedEdge["bitcoin-rpc", "cereal"], DirectedEdge["bitcoin-rpc", "containers"], DirectedEdge["bitcoin-rpc", "ghc-prim"], DirectedEdge["bitcoin-rpc", "HTTP"], DirectedEdge["bitcoin-rpc", "mtl"], DirectedEdge["bitcoin-rpc", "network"], DirectedEdge["bitcoin-rpc", "text"], DirectedEdge["bitcoin-rpc", "unix"], DirectedEdge["bitcoin-rpc", "unordered-containers"], DirectedEdge["bitcoin-rpc", "watchdog"], DirectedEdge["bitcoin-script", "base"], DirectedEdge["bitcoin-script", "base16-bytestring"], DirectedEdge["bitcoin-script", "binary"], DirectedEdge["bitcoin-script", "bytestring"], DirectedEdge["bitcoin-script", "text"], DirectedEdge["bitcoin-tx", "base"], DirectedEdge["bitcoin-tx", "binary"], DirectedEdge["bitcoin-tx", "bitcoin-script"], DirectedEdge["bitcoin-tx", "bitcoin-types"], DirectedEdge["bitcoin-tx", "bytestring"], DirectedEdge["bitcoin-tx", "cryptohash"], DirectedEdge["bitcoin-tx", "hexstring"], DirectedEdge["bitcoin-tx", "lens"], DirectedEdge["bitcoin-types", "base"], DirectedEdge["bitcoin-types", "base58string"], DirectedEdge["bitcoin-types", "binary"], DirectedEdge["bitcoin-types", "bytestring"], DirectedEdge["bitcoin-types", "hexstring"], DirectedEdge["bitcoin-types", "text"], DirectedEdge["bitly-cli", "base"], DirectedEdge["bitly-cli", "Bitly"], DirectedEdge["bitly-cli", "directory"], DirectedEdge["bitly-cli", "filepath"], DirectedEdge["bitly-cli", "regexpr"], DirectedEdge["bitmap", "base"], DirectedEdge["bitmap", "bytestring"], DirectedEdge["bitmap-opengl", "base"], DirectedEdge["bitmap-opengl", "bitmap"], DirectedEdge["bitmap-opengl", "OpenGL"], DirectedEdge["bitmaps", "array"], DirectedEdge["bitmaps", "base"], DirectedEdge["bitmaps", "binary"], DirectedEdge["bitmaps", "bitmap"], DirectedEdge["bitmaps", "bytestring"], DirectedEdge["bitmaps", "cereal"], DirectedEdge["bitmaps", "containers"], DirectedEdge["bitmaps", "monad-state"], DirectedEdge["bitmaps", "stb-image"], DirectedEdge["bitmaps", "string-class"], DirectedEdge["bitmaps", "tagged"], DirectedEdge["bitmaps", "zlib"], DirectedEdge["bits", "base"], DirectedEdge["bits", "bytes"], DirectedEdge["bits", "mtl"], DirectedEdge["bits", "transformers"], DirectedEdge["bits-atomic", "base"], DirectedEdge["bits-atomic", "HUnit"], DirectedEdge["bits-atomic", "QuickCheck"], DirectedEdge["bits-atomic", "test-framework"], DirectedEdge["bits-atomic", "test-framework-hunit"], DirectedEdge["bits-bytestring", "base"], DirectedEdge["bits-bytestring", "bits"], DirectedEdge["bits-bytestring", "bytestring"], DirectedEdge["bits-conduit", "base"], DirectedEdge["bits-conduit", "bytestring"], DirectedEdge["bits-conduit", "conduit"], DirectedEdge["bits-conduit", "mtl"], DirectedEdge["bits-extras", "base"], DirectedEdge["bits-extras", "HUnit"], DirectedEdge["bits-extras", "QuickCheck"], DirectedEdge["bits-extras", "test-framework"], DirectedEdge["bits-extras", "test-framework-hunit"], DirectedEdge["bitset", "base"], DirectedEdge["bitset", "deepseq"], DirectedEdge["bitset", "ghc-prim"], DirectedEdge["bitset", "integer-gmp"], DirectedEdge["bitspeak", "base"], DirectedEdge["bitspeak", "bindings-DSL"], DirectedEdge["bitspeak", "bindings-glib"], DirectedEdge["bitspeak", "bindings-gobject"], DirectedEdge["bitstream", "base"], DirectedEdge["bitstream", "base-unicode-symbols"], DirectedEdge["bitstream", "bytestring"], DirectedEdge["bitstream", "vector"], DirectedEdge["bitstring", "base"], DirectedEdge["bitstring", "bytestring"], DirectedEdge["bitstring", "QuickCheck"], DirectedEdge["bittorrent", "aeson"], DirectedEdge["bittorrent", "base"], DirectedEdge["bittorrent", "base16-bytestring"], DirectedEdge["bittorrent", "base32-bytestring"], DirectedEdge["bittorrent", "base64-bytestring"], DirectedEdge["bittorrent", "bencoding"], DirectedEdge["bittorrent", "binary"], DirectedEdge["bittorrent", "binary-conduit"], DirectedEdge["bittorrent", "bits-extras"], DirectedEdge["bittorrent", "BoundedChan"], DirectedEdge["bittorrent", "bytestring"], DirectedEdge["bittorrent", "cereal"], DirectedEdge["bittorrent", "cereal-conduit"], DirectedEdge["bittorrent", "conduit"], DirectedEdge["bittorrent", "containers"], DirectedEdge["bittorrent", "cryptohash"], DirectedEdge["bittorrent", "data-default"], DirectedEdge["bittorrent", "deepseq"], DirectedEdge["bittorrent", "directory"], DirectedEdge["bittorrent", "entropy"], DirectedEdge["bittorrent", "filepath"], DirectedEdge["bittorrent", "hashable"], DirectedEdge["bittorrent", "HTTP"], DirectedEdge["bittorrent", "IntervalMap"], DirectedEdge["bittorrent", "intset"], DirectedEdge["bittorrent", "krpc"], DirectedEdge["bittorrent", "lens"], DirectedEdge["bittorrent", "mmap"], DirectedEdge["bittorrent", "mtl"], DirectedEdge["bittorrent", "network"], DirectedEdge["bittorrent", "network-conduit"], DirectedEdge["bittorrent", "old-locale"], DirectedEdge["bittorrent", "pretty"], DirectedEdge["bittorrent", "pretty-class"], DirectedEdge["bittorrent", "resourcet"], DirectedEdge["bittorrent", "SafeSemaphore"], DirectedEdge["bittorrent", "split"], DirectedEdge["bittorrent", "stm"], DirectedEdge["bittorrent", "text"], DirectedEdge["bittorrent", "time"], DirectedEdge["bittorrent", "transformers"], DirectedEdge["bittorrent", "unordered-containers"], DirectedEdge["bittorrent", "urlencoded"], DirectedEdge["bittorrent", "vector"], DirectedEdge["bitvec", "base"], DirectedEdge["bitvec", "primitive"], DirectedEdge["bitvec", "vector"], DirectedEdge["bitwise", "array"], DirectedEdge["bitwise", "base"], DirectedEdge["bitwise", "bytestring"], DirectedEdge["bitx-bitcoin", "aeson"], DirectedEdge["bitx-bitcoin", "base"], DirectedEdge["bitx-bitcoin", "bytestring"], DirectedEdge["bitx-bitcoin", "http-client"], DirectedEdge["bitx-bitcoin", "http-client-tls"], DirectedEdge["bitx-bitcoin", "http-types"], DirectedEdge["bitx-bitcoin", "microlens"], DirectedEdge["bitx-bitcoin", "microlens-th"], DirectedEdge["bitx-bitcoin", "network"], DirectedEdge["bitx-bitcoin", "QuickCheck"], DirectedEdge["bitx-bitcoin", "scientific"], DirectedEdge["bitx-bitcoin", "split"], DirectedEdge["bitx-bitcoin", "text"], DirectedEdge["bitx-bitcoin", "time"], DirectedEdge["bk-tree", "base"], DirectedEdge["bk-tree", "containers"], DirectedEdge["bkr", "aws"], DirectedEdge["bkr", "base"], DirectedEdge["bkr", "bytestring"], DirectedEdge["bkr", "directory"], DirectedEdge["bkr", "filepath"], DirectedEdge["bkr", "HDBC"], DirectedEdge["bkr", "hslogger"], DirectedEdge["bkr", "http-conduit"], DirectedEdge["bkr", "MissingH"], DirectedEdge["bkr", "random"], DirectedEdge["bkr", "strict"], DirectedEdge["bkr", "text"], DirectedEdge["bkr", "unix"], DirectedEdge["bkr", "utf8-string"], DirectedEdge["bktrees", "array"], DirectedEdge["bktrees", "base"], DirectedEdge["bktrees", "containers"], DirectedEdge["bla", "base"], DirectedEdge["bla", "unix"], DirectedEdge["black-jewel", "ansi-terminal"], DirectedEdge["black-jewel", "base"], DirectedEdge["black-jewel", "bytestring"], DirectedEdge["black-jewel", "directory"], DirectedEdge["black-jewel", "download"], DirectedEdge["black-jewel", "haskeline"], DirectedEdge["black-jewel", "HTTP"], DirectedEdge["black-jewel", "hxt"], DirectedEdge["black-jewel", "network"], DirectedEdge["black-jewel", "process"], DirectedEdge["black-jewel", "safe"], DirectedEdge["black-jewel", "tagsoup"], DirectedEdge["black-jewel", "transformers"], DirectedEdge["black-jewel", "zlib"], DirectedEdge["blacktip", "base"], DirectedEdge["blacktip", "bitwise"], DirectedEdge["blacktip", "bytestring"], DirectedEdge["blacktip", "deepseq"], DirectedEdge["blacktip", "deepseq-generics"], DirectedEdge["blacktip", "locators"], DirectedEdge["blacktip", "network-info"], DirectedEdge["blacktip", "safe"], DirectedEdge["blacktip", "split"], DirectedEdge["blacktip", "system-fileio"], DirectedEdge["blacktip", "system-filepath"], DirectedEdge["blacktip", "time"], DirectedEdge["blake2", "base"], DirectedEdge["blake2", "bytestring"], DirectedEdge["blakesum", "base"], DirectedEdge["blakesum", "bytestring"], DirectedEdge["blakesum", "text"], DirectedEdge["blakesum", "vector"], DirectedEdge["blakesum-demo", "base"], DirectedEdge["blakesum-demo", "blakesum"], DirectedEdge["blakesum-demo", "bytestring"], DirectedEdge["blakesum-demo", "text"], DirectedEdge["blakesum-demo", "vector"], DirectedEdge["blank-canvas", "aeson"], DirectedEdge["blank-canvas", "base"], DirectedEdge["blank-canvas", "base-compat"], DirectedEdge["blank-canvas", "base64-bytestring"], DirectedEdge["blank-canvas", "bytestring"], DirectedEdge["blank-canvas", "colour"], DirectedEdge["blank-canvas", "containers"], DirectedEdge["blank-canvas", "data-default-class"], DirectedEdge["blank-canvas", "http-types"], DirectedEdge["blank-canvas", "kansas-comet"], DirectedEdge["blank-canvas", "mime-types"], DirectedEdge["blank-canvas", "scotty"], DirectedEdge["blank-canvas", "stm"], DirectedEdge["blank-canvas", "text"], DirectedEdge["blank-canvas", "text-show"], DirectedEdge["blank-canvas", "transformers"], DirectedEdge["blank-canvas", "vector"], DirectedEdge["blank-canvas", "wai"], DirectedEdge["blank-canvas", "wai-extra"], DirectedEdge["blank-canvas", "warp"], DirectedEdge["blas", "hblas"], DirectedEdge["blas", "base"], DirectedEdge["blas", "ieee"], DirectedEdge["blas", "QuickCheck"], DirectedEdge["blas", "storable-complex"], DirectedEdge["blas-hs", "base"], DirectedEdge["blas-hs", "storable-complex"], DirectedEdge["blastxml", "base"], DirectedEdge["blastxml", "biocore"], DirectedEdge["blastxml", "bytestring"], DirectedEdge["blastxml", "parallel"], DirectedEdge["blastxml", "tagsoup"], DirectedEdge["blatex", "base"], DirectedEdge["blatex", "blaze-html"], DirectedEdge["blatex", "dates"], DirectedEdge["blatex", "directory"], DirectedEdge["blatex", "HaTeX"], DirectedEdge["blatex", "process"], DirectedEdge["blatex", "split"], DirectedEdge["blatex", "tagsoup"], DirectedEdge["blatex", "text"], DirectedEdge["blaze-bootstrap", "base"], DirectedEdge["blaze-bootstrap", "blaze-html"], DirectedEdge["blaze-bootstrap", "text"], DirectedEdge["blaze-builder", "base"], DirectedEdge["blaze-builder", "bytestring"], DirectedEdge["blaze-builder", "bytestring-builder"], DirectedEdge["blaze-builder", "deepseq"], DirectedEdge["blaze-builder", "text"], DirectedEdge["blaze-builder-conduit", "conduit-extra"], DirectedEdge["blaze-builder-conduit", "base"], DirectedEdge["blaze-builder-conduit", "conduit"], DirectedEdge["blaze-builder-enumerator", "base"], DirectedEdge["blaze-builder-enumerator", "blaze-builder"], DirectedEdge["blaze-builder-enumerator", "bytestring"], DirectedEdge["blaze-builder-enumerator", "bytestring-builder"], DirectedEdge["blaze-builder-enumerator", "enumerator"], DirectedEdge["blaze-builder-enumerator", "streaming-commons"], DirectedEdge["blaze-builder-enumerator", "transformers"], DirectedEdge["blaze-from-html", "base"], DirectedEdge["blaze-from-html", "containers"], DirectedEdge["blaze-from-html", "directory"], DirectedEdge["blaze-from-html", "filepath"], DirectedEdge["blaze-from-html", "tagsoup"], DirectedEdge["blaze-html", "base"], DirectedEdge["blaze-html", "blaze-builder"], DirectedEdge["blaze-html", "blaze-markup"], DirectedEdge["blaze-html", "bytestring"], DirectedEdge["blaze-html", "text"], DirectedEdge["blaze-html-contrib", "base"], DirectedEdge["blaze-html-contrib", "blaze-html"], DirectedEdge["blaze-html-contrib", "cgi"], DirectedEdge["blaze-html-contrib", "data-default"], DirectedEdge["blaze-html-contrib", "network"], DirectedEdge["blaze-html-contrib", "safe"], DirectedEdge["blaze-html-contrib", "text"], DirectedEdge["blaze-html-hexpat", "base"], DirectedEdge["blaze-html-hexpat", "blaze-html"], DirectedEdge["blaze-html-hexpat", "bytestring"], DirectedEdge["blaze-html-hexpat", "hexpat"], DirectedEdge["blaze-html-hexpat", "text"], DirectedEdge["blaze-html-truncate", "base"], DirectedEdge["blaze-html-truncate", "blaze-markup"], DirectedEdge["blaze-html-truncate", "bytestring"], DirectedEdge["blaze-html-truncate", "html-truncate"], DirectedEdge["blaze-html-truncate", "tagsoup"], DirectedEdge["blaze-html-truncate", "text"], DirectedEdge["blaze-json", "base"], DirectedEdge["blaze-json", "bytestring"], DirectedEdge["blaze-json", "bytestring-builder"], DirectedEdge["blaze-json", "containers"], DirectedEdge["blaze-json", "data-default-class"], DirectedEdge["blaze-json", "text"], DirectedEdge["blaze-markup", "base"], DirectedEdge["blaze-markup", "blaze-builder"], DirectedEdge["blaze-markup", "bytestring"], DirectedEdge["blaze-markup", "text"], DirectedEdge["blaze-shields", "base"], DirectedEdge["blaze-shields", "blaze-html"], DirectedEdge["blaze-shields", "blaze-markup"], DirectedEdge["blaze-shields", "blaze-svg"], DirectedEdge["blaze-shields", "text"], DirectedEdge["blaze-svg", "base"], DirectedEdge["blaze-svg", "blaze-markup"], DirectedEdge["blaze-svg", "mtl"], DirectedEdge["blaze-textual", "base"], DirectedEdge["blaze-textual", "blaze-builder"], DirectedEdge["blaze-textual", "bytestring"], DirectedEdge["blaze-textual", "ghc-prim"], DirectedEdge["blaze-textual", "integer-gmp"], DirectedEdge["blaze-textual", "old-locale"], DirectedEdge["blaze-textual", "text"], DirectedEdge["blaze-textual", "time"], DirectedEdge["blaze-textual", "vector"], DirectedEdge["blaze-textual-native", "blaze-textual"], DirectedEdge["blaze-textual-native", "base"], DirectedEdge["blaze-textual-native", "blaze-builder"], DirectedEdge["blaze-textual-native", "bytestring"], DirectedEdge["blaze-textual-native", "double-conversion"], DirectedEdge["blaze-textual-native", "ghc-prim"], DirectedEdge["blaze-textual-native", "integer"], DirectedEdge["blaze-textual-native", "integer-gmp"], DirectedEdge["blaze-textual-native", "old-locale"], DirectedEdge["blaze-textual-native", "text"], DirectedEdge["blaze-textual-native", "time"], DirectedEdge["blaze-textual-native", "vector"], DirectedEdge["blazeMarker", "base"], DirectedEdge["blazeMarker", "blaze-html"], DirectedEdge["blazeMarker", "blaze-markup"], DirectedEdge["blink1", "base"], DirectedEdge["blink1", "bytestring"], DirectedEdge["blink1", "text"], DirectedEdge["blink1", "unix"], DirectedEdge["blink1", "usb"], DirectedEdge["blink1", "vector"], DirectedEdge["blip", "base"], DirectedEdge["blip", "bliplib"], DirectedEdge["blip", "bytestring"], DirectedEdge["blip", "containers"], DirectedEdge["blip", "filepath"], DirectedEdge["blip", "language-python"], DirectedEdge["blip", "mtl"], DirectedEdge["blip", "old-time"], DirectedEdge["blip", "parseargs"], DirectedEdge["blip", "pretty"], DirectedEdge["bliplib", "base"], DirectedEdge["bliplib", "binary"], DirectedEdge["bliplib", "bytestring"], DirectedEdge["bliplib", "containers"], DirectedEdge["bliplib", "mtl"], DirectedEdge["bliplib", "pretty"], DirectedEdge["bliplib", "utf8-string"], DirectedEdge["blocking-transactions", "base"], DirectedEdge["blocking-transactions", "containers"], DirectedEdge["blocking-transactions", "parallel"], DirectedEdge["blogination", "base"], DirectedEdge["blogination", "ConfigFile"], DirectedEdge["blogination", "directory"], DirectedEdge["blogination", "feed"], DirectedEdge["blogination", "filepath"], DirectedEdge["blogination", "higherorder"], DirectedEdge["blogination", "highlighting-kate"], DirectedEdge["blogination", "mtl"], DirectedEdge["blogination", "old-locale"], DirectedEdge["blogination", "old-time"], DirectedEdge["blogination", "pandoc"], DirectedEdge["blogination", "regex-compat"], DirectedEdge["blogination", "time"], DirectedEdge["blogination", "utf8-string"], DirectedEdge["blogination", "xhtml"], DirectedEdge["blogination", "xml"], DirectedEdge["bloodhound", "aeson"], DirectedEdge["bloodhound", "base"], DirectedEdge["bloodhound", "blaze-builder"], DirectedEdge["bloodhound", "bytestring"], DirectedEdge["bloodhound", "containers"], DirectedEdge["bloodhound", "data-default-class"], DirectedEdge["bloodhound", "exceptions"], DirectedEdge["bloodhound", "hashable"], DirectedEdge["bloodhound", "http-client"], DirectedEdge["bloodhound", "http-types"], DirectedEdge["bloodhound", "mtl"], DirectedEdge["bloodhound", "mtl-compat"], DirectedEdge["bloodhound", "network-uri"], DirectedEdge["bloodhound", "scientific"], DirectedEdge["bloodhound", "semigroups"], DirectedEdge["bloodhound", "text"], DirectedEdge["bloodhound", "time"], DirectedEdge["bloodhound", "transformers"], DirectedEdge["bloodhound", "unordered-containers"], DirectedEdge["bloodhound", "vector"], DirectedEdge["bloodhound-amazonka-auth", "amazonka-core"], DirectedEdge["bloodhound-amazonka-auth", "amazonka-elasticsearch"], DirectedEdge["bloodhound-amazonka-auth", "base"], DirectedEdge["bloodhound-amazonka-auth", "bloodhound"], DirectedEdge["bloodhound-amazonka-auth", "exceptions"], DirectedEdge["bloodhound-amazonka-auth", "http-client"], DirectedEdge["bloodhound-amazonka-auth", "http-types"], DirectedEdge["bloodhound-amazonka-auth", "time"], DirectedEdge["bloodhound-amazonka-auth", "transformers"], DirectedEdge["bloodhound-amazonka-auth", "uri-bytestring"], DirectedEdge["bloomfilter", "array"], DirectedEdge["bloomfilter", "base"], DirectedEdge["bloomfilter", "bytestring"], DirectedEdge["bloomfilter", "deepseq"], DirectedEdge["bloomfilter-redis", "arithmoi"], DirectedEdge["bloomfilter-redis", "base"], DirectedEdge["bloomfilter-redis", "binary"], DirectedEdge["bloomfilter-redis", "bytestring"], DirectedEdge["bloomfilter-redis", "hashable"], DirectedEdge["bloomfilter-redis", "hedis"], DirectedEdge["blosum", "base"], DirectedEdge["blosum", "blosum"], DirectedEdge["blosum", "containers"], DirectedEdge["blosum", "fasta"], DirectedEdge["blosum", "lens"], DirectedEdge["blosum", "optparse-applicative"], DirectedEdge["blosum", "pipes"], DirectedEdge["blosum", "pipes-text"], DirectedEdge["blosum", "split"], DirectedEdge["blosum", "text"], DirectedEdge["blosum", "text-show"], DirectedEdge["bloxorz", "base"], DirectedEdge["bloxorz", "GLFW"], DirectedEdge["bloxorz", "OpenGL"], DirectedEdge["blubber", "base"], DirectedEdge["blubber", "blubber-server"], DirectedEdge["blubber", "bytestring"], DirectedEdge["blubber", "cereal"], DirectedEdge["blubber", "containers"], DirectedEdge["blubber", "gloss"], DirectedEdge["blubber", "network"], DirectedEdge["blubber", "unix"], DirectedEdge["blubber-server", "base"], DirectedEdge["blubber-server", "blubber-server"], DirectedEdge["blubber-server", "Cabal"], DirectedEdge["blubber-server", "cereal"], DirectedEdge["blubber-server", "containers"], DirectedEdge["blubber-server", "data-default-class"], DirectedEdge["blubber-server", "network"], DirectedEdge["blubber-server", "pandoc"], DirectedEdge["blubber-server", "process"], DirectedEdge["blubber-server", "random"], DirectedEdge["blubber-server", "scotty"], DirectedEdge["blubber-server", "text"], DirectedEdge["blubber-server", "transformers"], DirectedEdge["blubber-server", "unix"], DirectedEdge["bluetile", "base"], DirectedEdge["bluetile", "ConfigFile"], DirectedEdge["bluetile", "containers"], DirectedEdge["bluetile", "directory"], DirectedEdge["bluetile", "filepath"], DirectedEdge["bluetile", "glade"], DirectedEdge["bluetile", "gtk"], DirectedEdge["bluetile", "mtl"], DirectedEdge["bluetile", "process"], DirectedEdge["bluetile", "random"], DirectedEdge["bluetile", "regex-compat"], DirectedEdge["bluetile", "unix"], DirectedEdge["bluetile", "utf8-string"], DirectedEdge["bluetile", "X11-xft"], DirectedEdge["bluetile", "xmonad"], DirectedEdge["bluetile", "xmonad-contrib"], DirectedEdge["bluetileutils", "bluetile"], DirectedEdge["bluetileutils", "base"], DirectedEdge["bluetileutils", "gtk"], DirectedEdge["blunt", "aeson"], DirectedEdge["blunt", "base"], DirectedEdge["blunt", "blunt"], DirectedEdge["blunt", "bytestring"], DirectedEdge["blunt", "clay"], DirectedEdge["blunt", "flow"], DirectedEdge["blunt", "http-types"], DirectedEdge["blunt", "jmacro"], DirectedEdge["blunt", "lucid"], DirectedEdge["blunt", "pointfree"], DirectedEdge["blunt", "pointful"], DirectedEdge["blunt", "text"], DirectedEdge["blunt", "wai"], DirectedEdge["blunt", "wai-extra"], DirectedEdge["blunt", "wai-websockets"], DirectedEdge["blunt", "warp"], DirectedEdge["blunt", "websockets"], DirectedEdge["blunt", "wl-pprint-text"], DirectedEdge["bmp", "base"], DirectedEdge["bmp", "binary"], DirectedEdge["bmp", "bytestring"], DirectedEdge["board-games", "array"], DirectedEdge["board-games", "base"], DirectedEdge["board-games", "cgi"], DirectedEdge["board-games", "containers"], DirectedEdge["board-games", "html"], DirectedEdge["board-games", "httpd-shed"], DirectedEdge["board-games", "network-uri"], DirectedEdge["board-games", "random"], DirectedEdge["board-games", "transformers"], DirectedEdge["board-games", "utility-ht"], DirectedEdge["bogre-banana", "base"], DirectedEdge["bogre-banana", "hogre"], DirectedEdge["bogre-banana", "hois"], DirectedEdge["bogre-banana", "monad-control"], DirectedEdge["bogre-banana", "random"], DirectedEdge["bogre-banana", "reactive-banana"], DirectedEdge["bond", "aeson"], DirectedEdge["bond", "async"], DirectedEdge["bond", "base"], DirectedEdge["bond", "bond"], DirectedEdge["bond", "bytestring"], DirectedEdge["bond", "cmdargs"], DirectedEdge["bond", "directory"], DirectedEdge["bond", "filepath"], DirectedEdge["bond", "monad-loops"], DirectedEdge["bond", "mtl"], DirectedEdge["bond", "parsec"], DirectedEdge["bond", "process"], DirectedEdge["bond", "scientific"], DirectedEdge["bond", "shakespeare"], DirectedEdge["bond", "text"], DirectedEdge["bond-haskell", "aeson"], DirectedEdge["bond-haskell", "array"], DirectedEdge["bond-haskell", "base"], DirectedEdge["bond-haskell", "binary"], DirectedEdge["bond-haskell", "bond-haskell-compiler"], DirectedEdge["bond-haskell", "bytestring"], DirectedEdge["bond-haskell", "containers"], DirectedEdge["bond-haskell", "extra"], DirectedEdge["bond-haskell", "hashable"], DirectedEdge["bond-haskell", "mtl"], DirectedEdge["bond-haskell", "scientific"], DirectedEdge["bond-haskell", "text"], DirectedEdge["bond-haskell", "unordered-containers"], DirectedEdge["bond-haskell", "vector"], DirectedEdge["bond-haskell-compiler", "aeson"], DirectedEdge["bond-haskell-compiler", "base"], DirectedEdge["bond-haskell-compiler", "bond"], DirectedEdge["bond-haskell-compiler", "bond-haskell-compiler"], DirectedEdge["bond-haskell-compiler", "bytestring"], DirectedEdge["bond-haskell-compiler", "cmdargs"], DirectedEdge["bond-haskell-compiler", "directory"], DirectedEdge["bond-haskell-compiler", "filepath"], DirectedEdge["bond-haskell-compiler", "haskell-src-exts"], DirectedEdge["bond-haskell-compiler", "monad-loops"], DirectedEdge["bool-extras", "base"], DirectedEdge["boolean-list", "base"], DirectedEdge["boolean-list", "bytestring"], DirectedEdge["boolean-list", "HUnit"], DirectedEdge["boolean-normal-forms", "base"], DirectedEdge["boolean-normal-forms", "cond"], DirectedEdge["boolean-normal-forms", "containers"], DirectedEdge["boolexpr", "base"], DirectedEdge["boolexpr", "parsec"], DirectedEdge["boolsimplifier", "base"], DirectedEdge["boolsimplifier", "containers"], DirectedEdge["boomange", "base"], DirectedEdge["boomange", "containers"], DirectedEdge["boomange", "descrilo"], DirectedEdge["boomange", "directory"], DirectedEdge["boomange", "filepath"], DirectedEdge["boomange", "simtreelo"], DirectedEdge["boombox", "base"], DirectedEdge["boombox", "bytestring"], DirectedEdge["boombox", "comonad"], DirectedEdge["boombox", "semigroupoids"], DirectedEdge["boombox", "semigroups"], DirectedEdge["boombox", "transformers"], DirectedEdge["boomerang", "base"], DirectedEdge["boomerang", "mtl"], DirectedEdge["boomerang", "template-haskell"], DirectedEdge["boomerang", "text"], DirectedEdge["boomslang", "base"], DirectedEdge["boomslang", "containers"], DirectedEdge["boomslang", "data-accessor"], DirectedEdge["boomslang", "data-accessor-template"], DirectedEdge["boomslang", "GLFW-b"], DirectedEdge["boomslang", "MonadRandom"], DirectedEdge["boomslang", "mtl"], DirectedEdge["boomslang", "OpenGL"], DirectedEdge["boomslang", "template-haskell"], DirectedEdge["borel", "aeson"], DirectedEdge["borel", "async"], DirectedEdge["borel", "attoparsec"], DirectedEdge["borel", "base"], DirectedEdge["borel", "bimap"], DirectedEdge["borel", "cassava"], DirectedEdge["borel", "ceilometer-common"], DirectedEdge["borel", "chevalier-common"], DirectedEdge["borel", "configurator"], DirectedEdge["borel", "containers"], DirectedEdge["borel", "errors"], DirectedEdge["borel", "hslogger"], DirectedEdge["borel", "lens"], DirectedEdge["borel", "marquise"], DirectedEdge["borel", "mtl"], DirectedEdge["borel", "multiset"], DirectedEdge["borel", "network"], DirectedEdge["borel", "network-uri"], DirectedEdge["borel", "pipes"], DirectedEdge["borel", "pipes-concurrency"], DirectedEdge["borel", "pipes-safe"], DirectedEdge["borel", "text"], DirectedEdge["borel", "time"], DirectedEdge["borel", "transformers"], DirectedEdge["borel", "unordered-containers"], DirectedEdge["borel", "vaultaire-common"], DirectedEdge["borel", "vector"], DirectedEdge["borel", "zeromq4-haskell"], DirectedEdge["bot", "arrows"], DirectedEdge["bot", "base"], DirectedEdge["bot", "Stream"], DirectedEdge["both", "base"], DirectedEdge["both", "semigroups"], DirectedEdge["both", "zero"], DirectedEdge["botpp", "base"], DirectedEdge["botpp", "bytestring"], DirectedEdge["bound", "base"], DirectedEdge["bound", "bifunctors"], DirectedEdge["bound", "binary"], DirectedEdge["bound", "bytes"], DirectedEdge["bound", "cereal"], DirectedEdge["bound", "comonad"], DirectedEdge["bound", "ghc-prim"], DirectedEdge["bound", "hashable"], DirectedEdge["bound", "hashable-extras"], DirectedEdge["bound", "prelude-extras"], DirectedEdge["bound", "profunctors"], DirectedEdge["bound", "template-haskell"], DirectedEdge["bound", "transformers"], DirectedEdge["bound-gen", "base"], DirectedEdge["bound-gen", "bound"], DirectedEdge["bound-gen", "monad-gen"], DirectedEdge["bound-gen", "mtl"], DirectedEdge["bounded-tchan", "stm-chans"], DirectedEdge["bounded-tchan", "base"], DirectedEdge["bounded-tchan", "stm"], DirectedEdge["boundingboxes", "base"], DirectedEdge["boundingboxes", "lens"], DirectedEdge["bower-json", "aeson"], DirectedEdge["bower-json", "aeson-better-errors"], DirectedEdge["bower-json", "base"], DirectedEdge["bower-json", "bytestring"], DirectedEdge["bower-json", "mtl"], DirectedEdge["bower-json", "scientific"], DirectedEdge["bower-json", "text"], DirectedEdge["bower-json", "transformers"], DirectedEdge["bower-json", "unordered-containers"], DirectedEdge["bower-json", "vector"], DirectedEdge["bowntz", "base"], DirectedEdge["bowntz", "containers"], DirectedEdge["bowntz", "GLUT"], DirectedEdge["bowntz", "hosc"], DirectedEdge["bowntz", "random"], DirectedEdge["boxes", "base"], DirectedEdge["boxes", "split"], DirectedEdge["bpann", "base"], DirectedEdge["bpann", "random"], DirectedEdge["bpann", "split"], DirectedEdge["braid", "base"], DirectedEdge["braid", "containers"], DirectedEdge["braid", "diagrams-contrib"], DirectedEdge["braid", "diagrams-core"], DirectedEdge["braid", "diagrams-lib"], DirectedEdge["braid", "diagrams-svg"], DirectedEdge["braid", "split"], DirectedEdge["brainfuck", "array"], DirectedEdge["brainfuck", "base"], DirectedEdge["brainfuck", "mtl"], DirectedEdge["brainfuck", "unix"], DirectedEdge["brainfuck-monad", "base"], DirectedEdge["brainfuck-monad", "directory"], DirectedEdge["brainfuck-monad", "process"], DirectedEdge["brainfuck-tut", "array"], DirectedEdge["brainfuck-tut", "base"], DirectedEdge["brainfuck-tut", "brainfuck-tut"], DirectedEdge["break", "base"], DirectedEdge["break", "mtl"], DirectedEdge["break", "transformers"], DirectedEdge["breakout", "base"], DirectedEdge["breakout", "haskgame"], DirectedEdge["breakout", "mtl"], DirectedEdge["breakout", "SDL"], DirectedEdge["breve", "aeson"], DirectedEdge["breve", "base"], DirectedEdge["breve", "binary"], DirectedEdge["breve", "blaze-html"], DirectedEdge["breve", "bytestring"], DirectedEdge["breve", "configurator"], DirectedEdge["breve", "cryptohash"], DirectedEdge["breve", "directory"], DirectedEdge["breve", "hashtables"], DirectedEdge["breve", "http-types"], DirectedEdge["breve", "mtl"], DirectedEdge["breve", "random"], DirectedEdge["breve", "Spock"], DirectedEdge["breve", "text"], DirectedEdge["breve", "tls"], DirectedEdge["breve", "transformers"], DirectedEdge["breve", "wai"], DirectedEdge["breve", "wai-extra"], DirectedEdge["breve", "wai-middleware-static"], DirectedEdge["breve", "warp"], DirectedEdge["breve", "warp-tls"], DirectedEdge["breve", "xdg-basedir"], DirectedEdge["brians-brain", "array"], DirectedEdge["brians-brain", "base"], DirectedEdge["brians-brain", "parallel"], DirectedEdge["brians-brain", "random"], DirectedEdge["brians-brain", "SDL"], DirectedEdge["brick", "base"], DirectedEdge["brick", "brick"], DirectedEdge["brick", "containers"], DirectedEdge["brick", "contravariant"], DirectedEdge["brick", "data-default"], DirectedEdge["brick", "deepseq"], DirectedEdge["brick", "microlens"], DirectedEdge["brick", "microlens-mtl"], DirectedEdge["brick", "microlens-th"], DirectedEdge["brick", "template-haskell"], DirectedEdge["brick", "text"], DirectedEdge["brick", "text-zipper"], DirectedEdge["brick", "transformers"], DirectedEdge["brick", "vector"], DirectedEdge["brick", "vty"], DirectedEdge["brillig", "base"], DirectedEdge["brillig", "binary"], DirectedEdge["brillig", "brillig"], DirectedEdge["brillig", "cmdargs"], DirectedEdge["brillig", "containers"], DirectedEdge["brillig", "directory"], DirectedEdge["brillig", "filepath"], DirectedEdge["brillig", "ListZipper"], DirectedEdge["brillig", "text"], DirectedEdge["broadcast-chan", "base"], DirectedEdge["broccoli", "base"], DirectedEdge["broccoli", "containers"], DirectedEdge["broccoli", "stm"], DirectedEdge["broccoli", "time"], DirectedEdge["broker-haskell", "base"], DirectedEdge["bsd-sysctl", "base"], DirectedEdge["bson", "base"], DirectedEdge["bson", "binary"], DirectedEdge["bson", "bytestring"], DirectedEdge["bson", "cryptohash"], DirectedEdge["bson", "mtl"], DirectedEdge["bson", "network"], DirectedEdge["bson", "text"], DirectedEdge["bson", "time"], DirectedEdge["bson-generic", "base"], DirectedEdge["bson-generic", "bson"], DirectedEdge["bson-generic", "ghc-prim"], DirectedEdge["bson-generic", "text"], DirectedEdge["bson-generics", "bson-generic"], DirectedEdge["bson-generics", "base"], DirectedEdge["bson-generics", "bson"], DirectedEdge["bson-generics", "ghc-prim"], DirectedEdge["bson-lens", "base"], DirectedEdge["bson-lens", "bson"], DirectedEdge["bson-lens", "lens"], DirectedEdge["bson-lens", "text"], DirectedEdge["bson-mapping", "base"], DirectedEdge["bson-mapping", "bson"], DirectedEdge["bson-mapping", "compact-string-fix"], DirectedEdge["bson-mapping", "template-haskell"], DirectedEdge["bson-mapping", "th-lift"], DirectedEdge["bspack", "base"], DirectedEdge["bspack", "bytestring"], DirectedEdge["bspack", "ghc-prim"], DirectedEdge["bsparse", "base"], DirectedEdge["bsparse", "bytestring"], DirectedEdge["btree-concurrent", "array"], DirectedEdge["btree-concurrent", "base"], DirectedEdge["btree-concurrent", "base64-bytestring"], DirectedEdge["btree-concurrent", "bytestring"], DirectedEdge["btree-concurrent", "cereal"], DirectedEdge["btree-concurrent", "containers"], DirectedEdge["btree-concurrent", "directory"], DirectedEdge["btree-concurrent", "filepath"], DirectedEdge["btree-concurrent", "hashable"], DirectedEdge["btree-concurrent", "mtl"], DirectedEdge["btree-concurrent", "random"], DirectedEdge["btree-concurrent", "snappy"], DirectedEdge["btree-concurrent", "stm"], DirectedEdge["btree-concurrent", "time"], DirectedEdge["btrfs", "ansi-terminal"], DirectedEdge["btrfs", "base"], DirectedEdge["btrfs", "btrfs"], DirectedEdge["btrfs", "bytestring"], DirectedEdge["btrfs", "filepath"], DirectedEdge["btrfs", "linux-file-extents"], DirectedEdge["btrfs", "time"], DirectedEdge["btrfs", "unix"], DirectedEdge["buffer-builder", "base"], DirectedEdge["buffer-builder", "bytestring"], DirectedEdge["buffer-builder", "mtl"], DirectedEdge["buffer-builder", "text"], DirectedEdge["buffer-builder", "unordered-containers"], DirectedEdge["buffer-builder", "vector"], DirectedEdge["buffer-builder-aeson", "aeson"], DirectedEdge["buffer-builder-aeson", "base"], DirectedEdge["buffer-builder-aeson", "buffer-builder"], DirectedEdge["buffer-builder-aeson", "bytestring"], DirectedEdge["buffer-builder-aeson", "integer-gmp"], DirectedEdge["buffer-builder-aeson", "scientific"], DirectedEdge["buffer-builder-aeson", "unordered-containers"], DirectedEdge["buffer-builder-aeson", "vector"], DirectedEdge["buffer-pipe", "base"], DirectedEdge["buffon", "base"], DirectedEdge["buffon", "monad-primitive"], DirectedEdge["buffon", "mwc-random"], DirectedEdge["buffon", "mwc-random-monad"], DirectedEdge["buffon", "primitive"], DirectedEdge["buffon", "transformers"], DirectedEdge["bugzilla", "aeson"], DirectedEdge["bugzilla", "base"], DirectedEdge["bugzilla", "blaze-builder"], DirectedEdge["bugzilla", "bugzilla"], DirectedEdge["bugzilla", "bytestring"], DirectedEdge["bugzilla", "connection"], DirectedEdge["bugzilla", "containers"], DirectedEdge["bugzilla", "data-default"], DirectedEdge["bugzilla", "http-conduit"], DirectedEdge["bugzilla", "http-types"], DirectedEdge["bugzilla", "iso8601-time"], DirectedEdge["bugzilla", "resourcet"], DirectedEdge["bugzilla", "text"], DirectedEdge["bugzilla", "time"], DirectedEdge["bugzilla", "transformers"], DirectedEdge["bugzilla", "unordered-containers"], DirectedEdge["bugzilla", "vector"], DirectedEdge["buildable", "base"], DirectedEdge["buildable", "bytestring"], DirectedEdge["buildable", "containers"], DirectedEdge["buildable", "dlist"], DirectedEdge["buildable", "text"], DirectedEdge["buildbox", "base"], DirectedEdge["buildbox", "bytestring"], DirectedEdge["buildbox", "containers"], DirectedEdge["buildbox", "directory"], DirectedEdge["buildbox", "exceptions"], DirectedEdge["buildbox", "mtl"], DirectedEdge["buildbox", "old-locale"], DirectedEdge["buildbox", "pretty"], DirectedEdge["buildbox", "process"], DirectedEdge["buildbox", "stm"], DirectedEdge["buildbox", "temporary"], DirectedEdge["buildbox", "text"], DirectedEdge["buildbox", "time"], DirectedEdge["buildbox-tools", "base"], DirectedEdge["buildbox-tools", "buildbox"], DirectedEdge["buildbox-tools", "parseargs"], DirectedEdge["buildwrapper", "aeson"], DirectedEdge["buildwrapper", "async"], DirectedEdge["buildwrapper", "attoparsec"], DirectedEdge["buildwrapper", "base"], DirectedEdge["buildwrapper", "buildwrapper"], DirectedEdge["buildwrapper", "bytestring"], DirectedEdge["buildwrapper", "Cabal"], DirectedEdge["buildwrapper", "cmdargs"], DirectedEdge["buildwrapper", "conduit"], DirectedEdge["buildwrapper", "conduit-extra"], DirectedEdge["buildwrapper", "containers"], DirectedEdge["buildwrapper", "cpphs"], DirectedEdge["buildwrapper", "deepseq"], DirectedEdge["buildwrapper", "directory"], DirectedEdge["buildwrapper", "dynamic-cabal"], DirectedEdge["buildwrapper", "filepath"], DirectedEdge["buildwrapper", "ghc"], DirectedEdge["buildwrapper", "ghc-paths"], DirectedEdge["buildwrapper", "ghc-pkg-lib"], DirectedEdge["buildwrapper", "haskell-src-exts"], DirectedEdge["buildwrapper", "mtl"], DirectedEdge["buildwrapper", "old-time"], DirectedEdge["buildwrapper", "process"], DirectedEdge["buildwrapper", "regex-tdfa"], DirectedEdge["buildwrapper", "syb"], DirectedEdge["buildwrapper", "text"], DirectedEdge["buildwrapper", "time"], DirectedEdge["buildwrapper", "transformers"], DirectedEdge["buildwrapper", "unordered-containers"], DirectedEdge["buildwrapper", "utf8-string"], DirectedEdge["buildwrapper", "vector"], DirectedEdge["bullet", "base"], DirectedEdge["bullet", "vect"], DirectedEdge["bumper", "base"], DirectedEdge["bumper", "Cabal"], DirectedEdge["bumper", "containers"], DirectedEdge["bumper", "fclabels"], DirectedEdge["bumper", "process"], DirectedEdge["bumper", "regex-compat"], DirectedEdge["bumper", "split"], DirectedEdge["bumper", "strict"], DirectedEdge["burst-detection", "base"], DirectedEdge["burst-detection", "deepseq"], DirectedEdge["bus-pirate", "base"], DirectedEdge["bus-pirate", "bytestring"], DirectedEdge["bus-pirate", "errors"], DirectedEdge["bus-pirate", "serialport"], DirectedEdge["bus-pirate", "transformers"], DirectedEdge["buster", "base"], DirectedEdge["buster", "binary"], DirectedEdge["buster", "bytestring"], DirectedEdge["buster", "containers"], DirectedEdge["buster", "dataenc"], DirectedEdge["buster", "mtl"], DirectedEdge["buster", "old-locale"], DirectedEdge["buster", "parsec"], DirectedEdge["buster", "pretty"], DirectedEdge["buster", "time"], DirectedEdge["buster-gtk", "base"], DirectedEdge["buster-gtk", "binary"], DirectedEdge["buster-gtk", "buster"], DirectedEdge["buster-gtk", "bytestring"], DirectedEdge["buster-gtk", "containers"], DirectedEdge["buster-gtk", "dataenc"], DirectedEdge["buster-gtk", "gtk"], DirectedEdge["buster-gtk", "mtl"], DirectedEdge["buster-gtk", "old-locale"], DirectedEdge["buster-gtk", "parsec"], DirectedEdge["buster-gtk", "pretty"], DirectedEdge["buster-gtk", "time"], DirectedEdge["buster-network", "base"], DirectedEdge["buster-network", "binary"], DirectedEdge["buster-network", "buster"], DirectedEdge["buster-network", "bytestring"], DirectedEdge["buster-network", "containers"], DirectedEdge["buster-network", "dataenc"], DirectedEdge["buster-network", "haxr"], DirectedEdge["buster-network", "HTTP"], DirectedEdge["buster-network", "mtl"], DirectedEdge["buster-network", "network"], DirectedEdge["buster-network", "old-locale"], DirectedEdge["buster-network", "pretty"], DirectedEdge["buster-network", "time"], DirectedEdge["bustle", "base"], DirectedEdge["bustle", "bytestring"], DirectedEdge["bustle", "cairo"], DirectedEdge["bustle", "containers"], DirectedEdge["bustle", "dbus"], DirectedEdge["bustle", "directory"], DirectedEdge["bustle", "filepath"], DirectedEdge["bustle", "gio"], DirectedEdge["bustle", "glib"], DirectedEdge["bustle", "gtk2hs-buildtools"], DirectedEdge["bustle", "hgettext"], DirectedEdge["bustle", "mtl"], DirectedEdge["bustle", "pango"], DirectedEdge["bustle", "parsec"], DirectedEdge["bustle", "pcap"], DirectedEdge["bustle", "process"], DirectedEdge["bustle", "setlocale"], DirectedEdge["bustle", "text"], DirectedEdge["bustle", "time"], DirectedEdge["butterflies", "base"], DirectedEdge["butterflies", "butterflies"], DirectedEdge["butterflies", "bytestring"], DirectedEdge["butterflies", "gl-capture"], DirectedEdge["butterflies", "GLUT"], DirectedEdge["butterflies", "OpenGLRaw"], DirectedEdge["butterflies", "repa"], DirectedEdge["butterflies", "repa-devil"], DirectedEdge["bv", "base"], DirectedEdge["bv", "ghc-prim"], DirectedEdge["bv", "integer-gmp"], DirectedEdge["byline", "ansi-terminal"], DirectedEdge["byline", "base"], DirectedEdge["byline", "byline"], DirectedEdge["byline", "colour"], DirectedEdge["byline", "containers"], DirectedEdge["byline", "exceptions"], DirectedEdge["byline", "haskeline"], DirectedEdge["byline", "mtl"], DirectedEdge["byline", "terminfo-hs"], DirectedEdge["byline", "text"], DirectedEdge["byline", "transformers"], DirectedEdge["bytable", "base"], DirectedEdge["bytable", "bytestring"], DirectedEdge["byteable", "base"], DirectedEdge["byteable", "bytestring"], DirectedEdge["bytedump", "base"], DirectedEdge["bytedump", "bytestring"], DirectedEdge["byteorder", "base"], DirectedEdge["bytes", "base"], DirectedEdge["bytes", "binary"], DirectedEdge["bytes", "bytestring"], DirectedEdge["bytes", "cereal"], DirectedEdge["bytes", "containers"], DirectedEdge["bytes", "ghc-prim"], DirectedEdge["bytes", "hashable"], DirectedEdge["bytes", "mtl"], DirectedEdge["bytes", "scientific"], DirectedEdge["bytes", "text"], DirectedEdge["bytes", "time"], DirectedEdge["bytes", "transformers"], DirectedEdge["bytes", "transformers-compat"], DirectedEdge["bytes", "unordered-containers"], DirectedEdge["bytes", "void"], DirectedEdge["byteset", "base"], DirectedEdge["byteset", "binary"], DirectedEdge["bytestring", "base"], DirectedEdge["bytestring", "deepseq"], DirectedEdge["bytestring", "ghc-prim"], DirectedEdge["bytestring", "integer"], DirectedEdge["bytestring", "integer-gmp"], DirectedEdge["bytestring-arbitrary", "base"], DirectedEdge["bytestring-arbitrary", "bytestring"], DirectedEdge["bytestring-arbitrary", "cryptohash"], DirectedEdge["bytestring-arbitrary", "QuickCheck"], DirectedEdge["bytestring-builder", "base"], DirectedEdge["bytestring-builder", "bytestring"], DirectedEdge["bytestring-builder", "deepseq"], DirectedEdge["bytestring-class", "base"], DirectedEdge["bytestring-class", "bytestring"], DirectedEdge["bytestring-class", "utf8-string"], DirectedEdge["bytestring-conversion", "attoparsec"], DirectedEdge["bytestring-conversion", "base"], DirectedEdge["bytestring-conversion", "blaze-textual"], DirectedEdge["bytestring-conversion", "bytestring"], DirectedEdge["bytestring-conversion", "case-insensitive"], DirectedEdge["bytestring-conversion", "double-conversion"], DirectedEdge["bytestring-conversion", "text"], DirectedEdge["bytestring-csv", "array"], DirectedEdge["bytestring-csv", "base"], DirectedEdge["bytestring-csv", "bytestring"], DirectedEdge["bytestring-csv", "dlist"], DirectedEdge["bytestring-delta", "base"], DirectedEdge["bytestring-delta", "bytestring"], DirectedEdge["bytestring-from", "bytestring-conversion"], DirectedEdge["bytestring-from", "attoparsec"], DirectedEdge["bytestring-from", "base"], DirectedEdge["bytestring-from", "bytestring"], DirectedEdge["bytestring-from", "text"], DirectedEdge["bytestring-handle", "base"], DirectedEdge["bytestring-handle", "bytestring"], DirectedEdge["bytestring-lexing", "base"], DirectedEdge["bytestring-lexing", "bytestring"], DirectedEdge["bytestring-mmap", "base"], DirectedEdge["bytestring-mmap", "bytestring"], DirectedEdge["bytestring-mmap", "unix"], DirectedEdge["bytestring-nums", "base"], DirectedEdge["bytestring-nums", "bytestring"], DirectedEdge["bytestring-nums", "containers"], DirectedEdge["bytestring-plain", "base"], DirectedEdge["bytestring-plain", "bytestring"], DirectedEdge["bytestring-plain", "deepseq"], DirectedEdge["bytestring-plain", "ghc-prim"], DirectedEdge["bytestring-plain", "hashable"], DirectedEdge["bytestring-progress", "base"], DirectedEdge["bytestring-progress", "bytestring"], DirectedEdge["bytestring-progress", "terminal-progress-bar"], DirectedEdge["bytestring-progress", "time"], DirectedEdge["bytestring-read", "base"], DirectedEdge["bytestring-read", "bytestring"], DirectedEdge["bytestring-read", "types-compat"], DirectedEdge["bytestring-rematch", "base"], DirectedEdge["bytestring-rematch", "bytestring"], DirectedEdge["bytestring-short", "base"], DirectedEdge["bytestring-short", "bytestring"], DirectedEdge["bytestring-short", "deepseq"], DirectedEdge["bytestring-show", "array"], DirectedEdge["bytestring-show", "base"], DirectedEdge["bytestring-show", "binary"], DirectedEdge["bytestring-show", "bytestring"], DirectedEdge["bytestring-show", "containers"], DirectedEdge["bytestring-show", "integer"], DirectedEdge["bytestring-show", "integer-gmp"], DirectedEdge["bytestring-show", "integer-simple"], DirectedEdge["bytestring-tree-builder", "base"], DirectedEdge["bytestring-tree-builder", "base-prelude"], DirectedEdge["bytestring-tree-builder", "bytestring"], DirectedEdge["bytestring-tree-builder", "semigroups"], DirectedEdge["bytestring-tree-builder", "text"], DirectedEdge["bytestring-trie", "base"], DirectedEdge["bytestring-trie", "binary"], DirectedEdge["bytestring-trie", "bytestring"], DirectedEdge["bytestringparser", "base"], DirectedEdge["bytestringparser", "bytestring"], DirectedEdge["bytestringparser", "containers"], DirectedEdge["bytestringparser-temporary", "base"], DirectedEdge["bytestringparser-temporary", "bytestring"], DirectedEdge["bytestringparser-temporary", "containers"], DirectedEdge["bytestringreadp", "base"], DirectedEdge["bytestringreadp", "bytestring"], DirectedEdge["bzlib", "base"], DirectedEdge["bzlib", "bytestring"], DirectedEdge["bzlib-conduit", "base"], DirectedEdge["bzlib-conduit", "bindings-DSL"], DirectedEdge["bzlib-conduit", "bytestring"], DirectedEdge["bzlib-conduit", "conduit"], DirectedEdge["bzlib-conduit", "conduit-extra"], DirectedEdge["bzlib-conduit", "data-default"], DirectedEdge["bzlib-conduit", "mtl"], DirectedEdge["bzlib-conduit", "resourcet"], DirectedEdge["c-dsl", "base"], DirectedEdge["c-dsl", "language-c"], DirectedEdge["c-io", "base"], DirectedEdge["c-storable-deriving", "base"], DirectedEdge["c-storable-deriving", "ghc-prim"], DirectedEdge["c0check", "base"], DirectedEdge["c0check", "c0parser"], DirectedEdge["c0parser", "base"], DirectedEdge["c0parser", "parsec"], DirectedEdge["c10k", "base"], DirectedEdge["c10k", "network"], DirectedEdge["c10k", "unix"], DirectedEdge["c2hs", "array"], DirectedEdge["c2hs", "base"], DirectedEdge["c2hs", "bytestring"], DirectedEdge["c2hs", "containers"], DirectedEdge["c2hs", "directory"], DirectedEdge["c2hs", "dlist"], DirectedEdge["c2hs", "filepath"], DirectedEdge["c2hs", "language-c"], DirectedEdge["c2hs", "pretty"], DirectedEdge["c2hs", "process"], DirectedEdge["c2hs", "shelly"], DirectedEdge["c2hs", "text"], DirectedEdge["c2hs", "yaml"], DirectedEdge["c2hsc", "base"], DirectedEdge["c2hsc", "cmdargs"], DirectedEdge["c2hsc", "containers"], DirectedEdge["c2hsc", "directory"], DirectedEdge["c2hsc", "filepath"], DirectedEdge["c2hsc", "HStringTemplate"], DirectedEdge["c2hsc", "language-c"], DirectedEdge["c2hsc", "mtl"], DirectedEdge["c2hsc", "pretty"], DirectedEdge["c2hsc", "split"], DirectedEdge["c2hsc", "transformers"], DirectedEdge["cab", "attoparsec"], DirectedEdge["cab", "base"], DirectedEdge["cab", "bytestring"], DirectedEdge["cab", "cab"], DirectedEdge["cab", "Cabal"], DirectedEdge["cab", "conduit"], DirectedEdge["cab", "conduit-extra"], DirectedEdge["cab", "containers"], DirectedEdge["cab", "directory"], DirectedEdge["cab", "filepath"], DirectedEdge["cab", "process"], DirectedEdge["cab", "resourcet"], DirectedEdge["cabal-audit", "base"], DirectedEdge["cabal-audit", "Cabal"], DirectedEdge["cabal-audit", "directory"], DirectedEdge["cabal-audit", "filepath"], DirectedEdge["cabal-audit", "HTTP"], DirectedEdge["cabal-audit", "optparse-applicative"], DirectedEdge["cabal-bounds", "base"], DirectedEdge["cabal-bounds", "Cabal"], DirectedEdge["cabal-bounds", "cabal-bounds"], DirectedEdge["cabal-bounds", "cabal-lenses"], DirectedEdge["cabal-bounds", "cmdargs"], DirectedEdge["cabal-bounds", "directory"], DirectedEdge["cabal-bounds", "either"], DirectedEdge["cabal-bounds", "filepath"], DirectedEdge["cabal-bounds", "lens"], DirectedEdge["cabal-bounds", "strict"], DirectedEdge["cabal-bounds", "transformers"], DirectedEdge["cabal-bounds", "unordered-containers"], DirectedEdge["cabal-cargs", "base"], DirectedEdge["cabal-cargs", "Cabal"], DirectedEdge["cabal-cargs", "cabal-cargs"], DirectedEdge["cabal-cargs", "cabal-lenses"], DirectedEdge["cabal-cargs", "cmdargs"], DirectedEdge["cabal-cargs", "directory"], DirectedEdge["cabal-cargs", "either"], DirectedEdge["cabal-cargs", "lens"], DirectedEdge["cabal-cargs", "strict"], DirectedEdge["cabal-cargs", "system-fileio"], DirectedEdge["cabal-cargs", "system-filepath"], DirectedEdge["cabal-cargs", "text"], DirectedEdge["cabal-cargs", "transformers"], DirectedEdge["cabal-cargs", "unordered-containers"], DirectedEdge["cabal-constraints", "base"], DirectedEdge["cabal-constraints", "Cabal"], DirectedEdge["cabal-constraints", "optparse-applicative"], DirectedEdge["cabal-db", "ansi-wl-pprint"], DirectedEdge["cabal-db", "base"], DirectedEdge["cabal-db", "bytestring"], DirectedEdge["cabal-db", "Cabal"], DirectedEdge["cabal-db", "containers"], DirectedEdge["cabal-db", "directory"], DirectedEdge["cabal-db", "filepath"], DirectedEdge["cabal-db", "mtl"], DirectedEdge["cabal-db", "optparse-applicative"], DirectedEdge["cabal-db", "pretty"], DirectedEdge["cabal-db", "process"], DirectedEdge["cabal-db", "tar"], DirectedEdge["cabal-db", "utf8-string"], DirectedEdge["cabal-debian", "ansi-wl-pprint"], DirectedEdge["cabal-debian", "base"], DirectedEdge["cabal-debian", "bifunctors"], DirectedEdge["cabal-debian", "Cabal"], DirectedEdge["cabal-debian", "cabal-debian"], DirectedEdge["cabal-debian", "containers"], DirectedEdge["cabal-debian", "data-default"], DirectedEdge["cabal-debian", "debian"], DirectedEdge["cabal-debian", "deepseq"], DirectedEdge["cabal-debian", "Diff"], DirectedEdge["cabal-debian", "directory"], DirectedEdge["cabal-debian", "exceptions"], DirectedEdge["cabal-debian", "filepath"], DirectedEdge["cabal-debian", "hsemail"], DirectedEdge["cabal-debian", "HUnit"], DirectedEdge["cabal-debian", "lens"], DirectedEdge["cabal-debian", "memoize"], DirectedEdge["cabal-debian", "mtl"], DirectedEdge["cabal-debian", "network-uri"], DirectedEdge["cabal-debian", "newtype-generics"], DirectedEdge["cabal-debian", "optparse-applicative"], DirectedEdge["cabal-debian", "parsec"], DirectedEdge["cabal-debian", "pretty"], DirectedEdge["cabal-debian", "prettyclass"], DirectedEdge["cabal-debian", "process"], DirectedEdge["cabal-debian", "regex-tdfa"], DirectedEdge["cabal-debian", "set-extra"], DirectedEdge["cabal-debian", "syb"], DirectedEdge["cabal-debian", "text"], DirectedEdge["cabal-debian", "unix"], DirectedEdge["cabal-debian", "Unixutils"], DirectedEdge["cabal-debian", "utf8-string"], DirectedEdge["cabal-dependency-licenses", "base"], DirectedEdge["cabal-dependency-licenses", "Cabal"], DirectedEdge["cabal-dependency-licenses", "containers"], DirectedEdge["cabal-dependency-licenses", "directory"], DirectedEdge["cabal-dependency-licenses", "filepath"], DirectedEdge["cabal-dev", "cabal-install"], DirectedEdge["cabal-dev", "base"], DirectedEdge["cabal-dev", "bytestring"], DirectedEdge["cabal-dev", "Cabal"], DirectedEdge["cabal-dev", "containers"], DirectedEdge["cabal-dev", "directory"], DirectedEdge["cabal-dev", "filepath"], DirectedEdge["cabal-dev", "HTTP"], DirectedEdge["cabal-dev", "mtl"], DirectedEdge["cabal-dev", "network"], DirectedEdge["cabal-dev", "pretty"], DirectedEdge["cabal-dev", "process"], DirectedEdge["cabal-dev", "setenv"], DirectedEdge["cabal-dev", "tar"], DirectedEdge["cabal-dev", "template-haskell"], DirectedEdge["cabal-dev", "transformers"], DirectedEdge["cabal-dev", "zlib"], DirectedEdge["cabal-dir", "base"], DirectedEdge["cabal-dir", "Cabal"], DirectedEdge["cabal-dir", "directory"], DirectedEdge["cabal-dir", "filepath"], DirectedEdge["cabal-file-th", "base"], DirectedEdge["cabal-file-th", "Cabal"], DirectedEdge["cabal-file-th", "directory"], DirectedEdge["cabal-file-th", "template-haskell"], DirectedEdge["cabal-ghc-dynflags", "base"], DirectedEdge["cabal-ghc-dynflags", "Cabal"], DirectedEdge["cabal-ghc-dynflags", "ghc"], DirectedEdge["cabal-ghc-dynflags", "transformers"], DirectedEdge["cabal-ghci", "cabal-install"], DirectedEdge["cabal-ghci", "base"], DirectedEdge["cabal-ghci", "Cabal"], DirectedEdge["cabal-ghci", "directory"], DirectedEdge["cabal-ghci", "filepath"], DirectedEdge["cabal-ghci", "process"], DirectedEdge["cabal-graphdeps", "base"], DirectedEdge["cabal-graphdeps", "containers"], DirectedEdge["cabal-graphdeps", "directory"], DirectedEdge["cabal-graphdeps", "options"], DirectedEdge["cabal-graphdeps", "parsec"], DirectedEdge["cabal-graphdeps", "process"], DirectedEdge["cabal-graphdeps", "split"], DirectedEdge["cabal-graphdeps", "temporary"], DirectedEdge["cabal-helper", "base"], DirectedEdge["cabal-helper", "bytestring"], DirectedEdge["cabal-helper", "Cabal"], DirectedEdge["cabal-helper", "directory"], DirectedEdge["cabal-helper", "filepath"], DirectedEdge["cabal-helper", "ghc-prim"], DirectedEdge["cabal-helper", "mtl"], DirectedEdge["cabal-helper", "process"], DirectedEdge["cabal-helper", "template-haskell"], DirectedEdge["cabal-helper", "temporary"], DirectedEdge["cabal-helper", "transformers"], DirectedEdge["cabal-helper", "utf8-string"], DirectedEdge["cabal-info", "base"], DirectedEdge["cabal-info", "Cabal"], DirectedEdge["cabal-info", "cabal-info"], DirectedEdge["cabal-info", "directory"], DirectedEdge["cabal-info", "filepath"], DirectedEdge["cabal-info", "optparse-applicative"], DirectedEdge["cabal-install", "array"], DirectedEdge["cabal-install", "async"], DirectedEdge["cabal-install", "base"], DirectedEdge["cabal-install", "base16-bytestring"], DirectedEdge["cabal-install", "binary"], DirectedEdge["cabal-install", "bytestring"], DirectedEdge["cabal-install", "bytestring-builder"], DirectedEdge["cabal-install", "Cabal"], DirectedEdge["cabal-install", "containers"], DirectedEdge["cabal-install", "directory"], DirectedEdge["cabal-install", "filepath"], DirectedEdge["cabal-install", "ghc-prim"], DirectedEdge["cabal-install", "hackage-security"], DirectedEdge["cabal-install", "hashable"], DirectedEdge["cabal-install", "HTTP"], DirectedEdge["cabal-install", "mtl"], DirectedEdge["cabal-install", "network"], DirectedEdge["cabal-install", "network-uri"], DirectedEdge["cabal-install", "old-time"], DirectedEdge["cabal-install", "pretty"], DirectedEdge["cabal-install", "process"], DirectedEdge["cabal-install", "random"], DirectedEdge["cabal-install", "stm"], DirectedEdge["cabal-install", "tar"], DirectedEdge["cabal-install", "time"], DirectedEdge["cabal-install", "unix"], DirectedEdge["cabal-install", "zlib"], DirectedEdge["cabal-install-bundle", "array"], DirectedEdge["cabal-install-bundle", "base"], DirectedEdge["cabal-install-bundle", "bytestring"], DirectedEdge["cabal-install-bundle", "Cabal"], DirectedEdge["cabal-install-bundle", "containers"], DirectedEdge["cabal-install-bundle", "directory"], DirectedEdge["cabal-install-bundle", "filepath"], DirectedEdge["cabal-install-bundle", "old-time"], DirectedEdge["cabal-install-bundle", "pretty"], DirectedEdge["cabal-install-bundle", "process"], DirectedEdge["cabal-install-bundle", "time"], DirectedEdge["cabal-install-bundle", "unix"], DirectedEdge["cabal-install-ghc72", "array"], DirectedEdge["cabal-install-ghc72", "base"], DirectedEdge["cabal-install-ghc72", "bytestring"], DirectedEdge["cabal-install-ghc72", "Cabal"], DirectedEdge["cabal-install-ghc72", "containers"], DirectedEdge["cabal-install-ghc72", "directory"], DirectedEdge["cabal-install-ghc72", "filepath"], DirectedEdge["cabal-install-ghc72", "HTTP"], DirectedEdge["cabal-install-ghc72", "network"], DirectedEdge["cabal-install-ghc72", "old-time"], DirectedEdge["cabal-install-ghc72", "pretty"], DirectedEdge["cabal-install-ghc72", "process"], DirectedEdge["cabal-install-ghc72", "random"], DirectedEdge["cabal-install-ghc72", "time"], DirectedEdge["cabal-install-ghc72", "unix"], DirectedEdge["cabal-install-ghc72", "zlib"], DirectedEdge["cabal-install-ghc74", "array"], DirectedEdge["cabal-install-ghc74", "base"], DirectedEdge["cabal-install-ghc74", "bytestring"], DirectedEdge["cabal-install-ghc74", "Cabal"], DirectedEdge["cabal-install-ghc74", "containers"], DirectedEdge["cabal-install-ghc74", "directory"], DirectedEdge["cabal-install-ghc74", "filepath"], DirectedEdge["cabal-install-ghc74", "HTTP"], DirectedEdge["cabal-install-ghc74", "network"], DirectedEdge["cabal-install-ghc74", "old-time"], DirectedEdge["cabal-install-ghc74", "pretty"], DirectedEdge["cabal-install-ghc74", "process"], DirectedEdge["cabal-install-ghc74", "random"], DirectedEdge["cabal-install-ghc74", "time"], DirectedEdge["cabal-install-ghc74", "unix"], DirectedEdge["cabal-install-ghc74", "zlib"], DirectedEdge["cabal-lenses", "base"], DirectedEdge["cabal-lenses", "Cabal"], DirectedEdge["cabal-lenses", "either"], DirectedEdge["cabal-lenses", "lens"], DirectedEdge["cabal-lenses", "strict"], DirectedEdge["cabal-lenses", "system-fileio"], DirectedEdge["cabal-lenses", "system-filepath"], DirectedEdge["cabal-lenses", "text"], DirectedEdge["cabal-lenses", "transformers"], DirectedEdge["cabal-lenses", "unordered-containers"], DirectedEdge["cabal-macosx", "base"], DirectedEdge["cabal-macosx", "Cabal"], DirectedEdge["cabal-macosx", "containers"], DirectedEdge["cabal-macosx", "directory"], DirectedEdge["cabal-macosx", "fgl"], DirectedEdge["cabal-macosx", "filepath"], DirectedEdge["cabal-macosx", "hscolour"], DirectedEdge["cabal-macosx", "parsec"], DirectedEdge["cabal-macosx", "process"], DirectedEdge["cabal-macosx", "text"], DirectedEdge["cabal-meta", "base"], DirectedEdge["cabal-meta", "shelly"], DirectedEdge["cabal-meta", "system-fileio"], DirectedEdge["cabal-meta", "system-filepath"], DirectedEdge["cabal-meta", "text"], DirectedEdge["cabal-mon", "base"], DirectedEdge["cabal-mon", "containers"], DirectedEdge["cabal-mon", "directory"], DirectedEdge["cabal-mon", "filepath"], DirectedEdge["cabal-mon", "process"], DirectedEdge["cabal-mon", "simple-get-opt"], DirectedEdge["cabal-mon", "vty"], DirectedEdge["cabal-nirvana", "base"], DirectedEdge["cabal-nirvana", "bytestring"], DirectedEdge["cabal-nirvana", "Cabal"], DirectedEdge["cabal-nirvana", "containers"], DirectedEdge["cabal-nirvana", "directory"], DirectedEdge["cabal-nirvana", "HTTP"], DirectedEdge["cabal-nirvana", "packdeps"], DirectedEdge["cabal-nirvana", "process"], DirectedEdge["cabal-nirvana", "tar"], DirectedEdge["cabal-nirvana", "transformers"], DirectedEdge["cabal-progdeps", "base"], DirectedEdge["cabal-progdeps", "Cabal"], DirectedEdge["cabal-progdeps", "directory"], DirectedEdge["cabal-progdeps", "filepath"], DirectedEdge["cabal-query", "base"], DirectedEdge["cabal-query", "bytestring"], DirectedEdge["cabal-query", "Cabal"], DirectedEdge["cabal-query", "derive"], DirectedEdge["cabal-query", "ghc"], DirectedEdge["cabal-query", "MissingH"], DirectedEdge["cabal-query", "mtl"], DirectedEdge["cabal-query", "tar"], DirectedEdge["cabal-query", "template-haskell"], DirectedEdge["cabal-query", "uniplate"], DirectedEdge["cabal-rpm", "base"], DirectedEdge["cabal-rpm", "Cabal"], DirectedEdge["cabal-rpm", "directory"], DirectedEdge["cabal-rpm", "filepath"], DirectedEdge["cabal-rpm", "old-locale"], DirectedEdge["cabal-rpm", "process"], DirectedEdge["cabal-rpm", "time"], DirectedEdge["cabal-rpm", "unix"], DirectedEdge["cabal-scripts", "base"], DirectedEdge["cabal-setup", "base"], DirectedEdge["cabal-setup", "Cabal"], DirectedEdge["cabal-sign", "base"], DirectedEdge["cabal-sign", "bytestring"], DirectedEdge["cabal-sign", "cereal"], DirectedEdge["cabal-sign", "directory"], DirectedEdge["cabal-sign", "filepath"], DirectedEdge["cabal-sign", "process"], DirectedEdge["cabal-sign", "tar"], DirectedEdge["cabal-sign", "zlib"], DirectedEdge["cabal-sort", "base"], DirectedEdge["cabal-sort", "bytestring"], DirectedEdge["cabal-sort", "Cabal"], DirectedEdge["cabal-sort", "containers"], DirectedEdge["cabal-sort", "directory"], DirectedEdge["cabal-sort", "explicit-exception"], DirectedEdge["cabal-sort", "fgl"], DirectedEdge["cabal-sort", "filepath"], DirectedEdge["cabal-sort", "process"], DirectedEdge["cabal-sort", "transformers"], DirectedEdge["cabal-sort", "utility-ht"], DirectedEdge["cabal-src", "base"], DirectedEdge["cabal-src", "bytestring"], DirectedEdge["cabal-src", "conduit"], DirectedEdge["cabal-src", "conduit-extra"], DirectedEdge["cabal-src", "containers"], DirectedEdge["cabal-src", "directory"], DirectedEdge["cabal-src", "filepath"], DirectedEdge["cabal-src", "http-conduit"], DirectedEdge["cabal-src", "http-types"], DirectedEdge["cabal-src", "network"], DirectedEdge["cabal-src", "process"], DirectedEdge["cabal-src", "resourcet"], DirectedEdge["cabal-src", "shelly"], DirectedEdge["cabal-src", "system-fileio"], DirectedEdge["cabal-src", "system-filepath"], DirectedEdge["cabal-src", "tar"], DirectedEdge["cabal-src", "text"], DirectedEdge["cabal-src", "transformers"], DirectedEdge["cabal-test", "base"], DirectedEdge["cabal-test", "Cabal"], DirectedEdge["cabal-test", "filepath"], DirectedEdge["cabal-test", "ghc"], DirectedEdge["cabal-test", "pqc"], DirectedEdge["cabal-test", "QuickCheck"], DirectedEdge["cabal-test-bin", "base"], DirectedEdge["cabal-test-bin", "cabal-test-bin"], DirectedEdge["cabal-test-bin", "directory"], DirectedEdge["cabal-test-bin", "filepath"], DirectedEdge["cabal-test-bin", "unix"], DirectedEdge["cabal-test-compat", "base"], DirectedEdge["cabal-test-compat", "Cabal"], DirectedEdge["cabal-test-compat", "QuickCheck"], DirectedEdge["cabal-test-quickcheck", "base"], DirectedEdge["cabal-test-quickcheck", "Cabal"], DirectedEdge["cabal-test-quickcheck", "QuickCheck"], DirectedEdge["cabal-uninstall", "base"], DirectedEdge["cabal-uninstall", "directory"], DirectedEdge["cabal-uninstall", "filepath"], DirectedEdge["cabal-uninstall", "mtl"], DirectedEdge["cabal-uninstall", "process"], DirectedEdge["cabal-upload", "base"], DirectedEdge["cabal-upload", "filepath"], DirectedEdge["cabal-upload", "HTTP"], DirectedEdge["cabal-upload", "network"], DirectedEdge["cabal2arch", "archlinux"], DirectedEdge["cabal2arch", "base"], DirectedEdge["cabal2arch", "bytestring"], DirectedEdge["cabal2arch", "Cabal"], DirectedEdge["cabal2arch", "cmdargs"], DirectedEdge["cabal2arch", "containers"], DirectedEdge["cabal2arch", "directory"], DirectedEdge["cabal2arch", "filepath"], DirectedEdge["cabal2arch", "mtl"], DirectedEdge["cabal2arch", "pretty"], DirectedEdge["cabal2arch", "process"], DirectedEdge["cabal2doap", "base"], DirectedEdge["cabal2doap", "Cabal"], DirectedEdge["cabal2doap", "hsemail"], DirectedEdge["cabal2doap", "hxt"], DirectedEdge["cabal2doap", "parsec"], DirectedEdge["cabal2doap", "process"], DirectedEdge["cabal2ebuild", "base"], DirectedEdge["cabal2ebuild", "Cabal"], DirectedEdge["cabal2ebuild", "cabal2ebuild"], DirectedEdge["cabal2ebuild", "curl"], DirectedEdge["cabal2ebuild", "directory"], DirectedEdge["cabal2ebuild", "filepath"], DirectedEdge["cabal2ghci", "base"], DirectedEdge["cabal2ghci", "Cabal"], DirectedEdge["cabal2ghci", "cmdargs"], DirectedEdge["cabal2ghci", "stylish-haskell"], DirectedEdge["cabal2ghci", "system-fileio"], DirectedEdge["cabal2ghci", "system-filepath"], DirectedEdge["cabal2ghci", "text"], DirectedEdge["cabal2ghci", "unordered-containers"], DirectedEdge["cabal2ghci", "yaml"], DirectedEdge["cabal2nix", "base"], DirectedEdge["cabal2nix", "Cabal"], DirectedEdge["cabal2nix", "containers"], DirectedEdge["cabal2nix", "deepseq"], DirectedEdge["cabal2nix", "directory"], DirectedEdge["cabal2nix", "filepath"], DirectedEdge["cabal2nix", "hackage-db"], DirectedEdge["cabal2nix", "mtl"], DirectedEdge["cabal2nix", "pretty"], DirectedEdge["cabal2nix", "process"], DirectedEdge["cabal2nix", "regex-posix"], DirectedEdge["cabal2nix", "transformers"], DirectedEdge["cabal2spec", "base"], DirectedEdge["cabal2spec", "bytestring"], DirectedEdge["cabal2spec", "Cabal"], DirectedEdge["cabal2spec", "directory"], DirectedEdge["cabal2spec", "filepath"], DirectedEdge["cabal2spec", "old-locale"], DirectedEdge["cabal2spec", "process"], DirectedEdge["cabal2spec", "tar"], DirectedEdge["cabal2spec", "time"], DirectedEdge["cabal2spec", "unix"], DirectedEdge["cabal2spec", "Unixutils"], DirectedEdge["cabal2spec", "zlib"], DirectedEdge["cabalQuery", "base"], DirectedEdge["cabalQuery", "Cabal"], DirectedEdge["cabalQuery", "cabalQuery"], DirectedEdge["cabalQuery", "containers"], DirectedEdge["cabalQuery", "directory"], DirectedEdge["cabalQuery", "MissingH"], DirectedEdge["cabalQuery", "pretty"], DirectedEdge["cabalg", "base"], DirectedEdge["cabalg", "directory"], DirectedEdge["cabalg", "filepath"], DirectedEdge["cabalg", "process"], DirectedEdge["cabalgraph", "base"], DirectedEdge["cabalgraph", "bytestring"], DirectedEdge["cabalgraph", "Cabal"], DirectedEdge["cabalgraph", "containers"], DirectedEdge["cabalgraph", "directory"], DirectedEdge["cabalgraph", "filepath"], DirectedEdge["cabalgraph", "pretty"], DirectedEdge["cabalgraph", "process"], DirectedEdge["cabalmdvrpm", "base"], DirectedEdge["cabalmdvrpm", "Cabal"], DirectedEdge["cabalmdvrpm", "cabalrpmdeps"], DirectedEdge["cabalrpmdeps", "base"], DirectedEdge["cabalrpmdeps", "Cabal"], DirectedEdge["cabalrpmdeps", "filepath"], DirectedEdge["cabalvchk", "base"], DirectedEdge["cabalvchk", "Cabal"], DirectedEdge["cabin", "base"], DirectedEdge["cabin", "binary"], DirectedEdge["cabin", "bytestring"], DirectedEdge["cabin", "directory"], DirectedEdge["cabin", "filepath"], DirectedEdge["cabin", "optparse-applicative"], DirectedEdge["cabin", "process"], DirectedEdge["cabin", "unix"], DirectedEdge["cabocha", "base"], DirectedEdge["cabocha", "bytestring"], DirectedEdge["cabocha", "text"], DirectedEdge["cached-io", "base"], DirectedEdge["cached-io", "stm"], DirectedEdge["cached-io", "time"], DirectedEdge["cached-traversable", "base"], DirectedEdge["cached-traversable", "binary"], DirectedEdge["cached-traversable", "bytestring"], DirectedEdge["cached-traversable", "containers"], DirectedEdge["cached-traversable", "directory"], DirectedEdge["cached-traversable", "filepath"], DirectedEdge["cached-traversable", "mtl"], DirectedEdge["cacophony", "base"], DirectedEdge["cacophony", "bytestring"], DirectedEdge["cacophony", "cryptonite"], DirectedEdge["cacophony", "deepseq"], DirectedEdge["cacophony", "free"], DirectedEdge["cacophony", "lens"], DirectedEdge["cacophony", "memory"], DirectedEdge["cacophony", "monad-coroutine"], DirectedEdge["cacophony", "mtl"], DirectedEdge["cacophony", "transformers"], DirectedEdge["caf", "base"], DirectedEdge["cafeteria-prelude", "base"], DirectedEdge["caffegraph", "base"], DirectedEdge["caffegraph", "bytestring"], DirectedEdge["caffegraph", "containers"], DirectedEdge["caffegraph", "fgl"], DirectedEdge["caffegraph", "filepath"], DirectedEdge["caffegraph", "graphviz"], DirectedEdge["caffegraph", "language-lua"], DirectedEdge["caffegraph", "lens"], DirectedEdge["caffegraph", "mtl"], DirectedEdge["caffegraph", "optparse-applicative"], DirectedEdge["caffegraph", "process"], DirectedEdge["caffegraph", "protocol-buffers"], DirectedEdge["caffegraph", "protocol-buffers-descriptor"], DirectedEdge["caffegraph", "template-haskell"], DirectedEdge["caffegraph", "temporary"], DirectedEdge["caffegraph", "text"], DirectedEdge["cairo", "array"], DirectedEdge["cairo", "base"], DirectedEdge["cairo", "bytestring"], DirectedEdge["cairo", "mtl"], DirectedEdge["cairo", "text"], DirectedEdge["cairo", "utf8-string"], DirectedEdge["cairo-appbase", "base"], DirectedEdge["cairo-appbase", "cairo"], DirectedEdge["cairo-appbase", "glib"], DirectedEdge["cairo-appbase", "gtk"], DirectedEdge["cake", "array"], DirectedEdge["cake", "base"], DirectedEdge["cake", "binary"], DirectedEdge["cake", "bytestring"], DirectedEdge["cake", "cmdargs"], DirectedEdge["cake", "containers"], DirectedEdge["cake", "derive"], DirectedEdge["cake", "directory"], DirectedEdge["cake", "filepath"], DirectedEdge["cake", "mtl"], DirectedEdge["cake", "parsek"], DirectedEdge["cake", "process"], DirectedEdge["cake", "regex-tdfa"], DirectedEdge["cake", "split"], DirectedEdge["cake3", "attoparsec"], DirectedEdge["cake3", "base"], DirectedEdge["cake3", "bytestring"], DirectedEdge["cake3", "containers"], DirectedEdge["cake3", "deepseq"], DirectedEdge["cake3", "directory"], DirectedEdge["cake3", "filepath"], DirectedEdge["cake3", "haskell-src-meta"], DirectedEdge["cake3", "language-javascript"], DirectedEdge["cake3", "mime-types"], DirectedEdge["cake3", "monadloc"], DirectedEdge["cake3", "mtl"], DirectedEdge["cake3", "optparse-applicative"], DirectedEdge["cake3", "parsec"], DirectedEdge["cake3", "process"], DirectedEdge["cake3", "syb"], DirectedEdge["cake3", "system-filepath"], DirectedEdge["cake3", "template-haskell"], DirectedEdge["cake3", "text"], DirectedEdge["cake3", "text-format"], DirectedEdge["cakyrespa", "base"], DirectedEdge["cakyrespa", "GLUT"], DirectedEdge["cakyrespa", "gluturtle"], DirectedEdge["cakyrespa", "lojbanParser"], DirectedEdge["cakyrespa", "yjsvg"], DirectedEdge["cakyrespa", "yjtools"], DirectedEdge["cal3d", "base"], DirectedEdge["cal3d-examples", "base"], DirectedEdge["cal3d-examples", "cal3d"], DirectedEdge["cal3d-examples", "cal3d-opengl"], DirectedEdge["cal3d-examples", "OpenGL"], DirectedEdge["cal3d-examples", "SDL"], DirectedEdge["cal3d-opengl", "base"], DirectedEdge["cal3d-opengl", "cal3d"], DirectedEdge["cal3d-opengl", "OpenGL"], DirectedEdge["calc", "array"], DirectedEdge["calc", "base"], DirectedEdge["calc", "harpy"], DirectedEdge["calc", "mtl"], DirectedEdge["calculator", "base"], DirectedEdge["calculator", "containers"], DirectedEdge["calculator", "gtk"], DirectedEdge["calculator", "haskeline"], DirectedEdge["calculator", "hmatrix"], DirectedEdge["calculator", "parsec"], DirectedEdge["calculator", "plot-gtk-ui"], DirectedEdge["calculator", "transformers"], DirectedEdge["caldims", "base"], DirectedEdge["caldims", "containers"], DirectedEdge["caldims", "directory"], DirectedEdge["caldims", "mtl"], DirectedEdge["caldims", "parsec"], DirectedEdge["caldims", "readline"], DirectedEdge["caledon", "base"], DirectedEdge["caledon", "containers"], DirectedEdge["caledon", "cpphs"], DirectedEdge["caledon", "lens"], DirectedEdge["caledon", "mtl"], DirectedEdge["caledon", "parsec"], DirectedEdge["caledon", "transformers"], DirectedEdge["call", "base"], DirectedEdge["call", "bindings-portaudio"], DirectedEdge["call", "boundingboxes"], DirectedEdge["call", "call"], DirectedEdge["call", "colors"], DirectedEdge["call", "containers"], DirectedEdge["call", "control-bool"], DirectedEdge["call", "deepseq"], DirectedEdge["call", "directory"], DirectedEdge["call", "filepath"], DirectedEdge["call", "free"], DirectedEdge["call", "GLFW-b"], DirectedEdge["call", "hashable"], DirectedEdge["call", "JuicyPixels"], DirectedEdge["call", "JuicyPixels-util"], DirectedEdge["call", "lens"], DirectedEdge["call", "linear"], DirectedEdge["call", "mtl"], DirectedEdge["call", "objective"], DirectedEdge["call", "OpenGL"], DirectedEdge["call", "OpenGLRaw"], DirectedEdge["call", "random"], DirectedEdge["call", "template-haskell"], DirectedEdge["call", "text"], DirectedEdge["call", "transformers"], DirectedEdge["call", "vector"], DirectedEdge["call", "WAVE"], DirectedEdge["call-haskell-from-anything", "base"], DirectedEdge["call-haskell-from-anything", "bytestring"], DirectedEdge["call-haskell-from-anything", "call-haskell-from-anything"], DirectedEdge["call-haskell-from-anything", "msgpack"], DirectedEdge["call-haskell-from-anything", "mtl"], DirectedEdge["call-haskell-from-anything", "template-haskell"], DirectedEdge["call-haskell-from-anything", "vector"], DirectedEdge["camfort", "array"], DirectedEdge["camfort", "base"], DirectedEdge["camfort", "comonad"], DirectedEdge["camfort", "containers"], DirectedEdge["camfort", "directory"], DirectedEdge["camfort", "fclabels"], DirectedEdge["camfort", "generic-deriving"], DirectedEdge["camfort", "haskell-src"], DirectedEdge["camfort", "hmatrix"], DirectedEdge["camfort", "language-fortran"], DirectedEdge["camfort", "matrix"], DirectedEdge["camfort", "mtl"], DirectedEdge["camfort", "syb"], DirectedEdge["camfort", "syz"], DirectedEdge["camfort", "template-haskell"], DirectedEdge["camfort", "text"], DirectedEdge["camfort", "transformers"], DirectedEdge["camfort", "uniplate"], DirectedEdge["camfort", "vector"], DirectedEdge["camh", "base"], DirectedEdge["camh", "bytestring"], DirectedEdge["camh", "Imlib"], DirectedEdge["camh", "terminfo"], DirectedEdge["campfire", "aeson"], DirectedEdge["campfire", "attoparsec"], DirectedEdge["campfire", "base"], DirectedEdge["campfire", "bytestring"], DirectedEdge["campfire", "containers"], DirectedEdge["campfire", "filepath"], DirectedEdge["campfire", "http-enumerator"], DirectedEdge["campfire", "http-types"], DirectedEdge["campfire", "mtl"], DirectedEdge["campfire", "old-locale"], DirectedEdge["campfire", "process"], DirectedEdge["campfire", "text"], DirectedEdge["campfire", "time"], DirectedEdge["campfire", "transformers"], DirectedEdge["campfire", "unordered-containers"], DirectedEdge["campfire", "url"], DirectedEdge["canonical-filepath", "base"], DirectedEdge["canonical-filepath", "deepseq"], DirectedEdge["canonical-filepath", "directory"], DirectedEdge["canonical-filepath", "filepath"], DirectedEdge["canteven-config", "base"], DirectedEdge["canteven-config", "unix"], DirectedEdge["canteven-config", "yaml"], DirectedEdge["canteven-listen-http", "aeson"], DirectedEdge["canteven-listen-http", "base"], DirectedEdge["canteven-log", "aeson"], DirectedEdge["canteven-log", "base"], DirectedEdge["canteven-log", "bytestring"], DirectedEdge["canteven-log", "canteven-config"], DirectedEdge["canteven-log", "directory"], DirectedEdge["canteven-log", "fast-logger"], DirectedEdge["canteven-log", "filepath"], DirectedEdge["canteven-log", "hslogger"], DirectedEdge["canteven-log", "monad-logger"], DirectedEdge["canteven-log", "template-haskell"], DirectedEdge["canteven-log", "text"], DirectedEdge["canteven-log", "time"], DirectedEdge["canteven-log", "transformers"], DirectedEdge["canteven-log", "yaml"], DirectedEdge["canteven-template", "base"], DirectedEdge["canteven-template", "blaze-html"], DirectedEdge["canteven-template", "bytestring"], DirectedEdge["canteven-template", "data-default"], DirectedEdge["canteven-template", "markdown"], DirectedEdge["canteven-template", "template-haskell"], DirectedEdge["canteven-template", "text"], DirectedEdge["cantor", "base"], DirectedEdge["cantor", "bytestring"], DirectedEdge["cantor", "containers"], DirectedEdge["cantor", "directory"], DirectedEdge["cantor", "filepath"], DirectedEdge["cantor", "hxt"], DirectedEdge["cantor", "hxt-xpath"], DirectedEdge["cantor", "parsec"], DirectedEdge["cantor", "split"], DirectedEdge["cao", "array"], DirectedEdge["cao", "base"], DirectedEdge["cao", "cmdargs"], DirectedEdge["cao", "ConfigFile"], DirectedEdge["cao", "containers"], DirectedEdge["cao", "directory"], DirectedEdge["cao", "dlist"], DirectedEdge["cao", "filepath"], DirectedEdge["cao", "language-c"], DirectedEdge["cao", "mtl"], DirectedEdge["cao", "pretty"], DirectedEdge["cao", "process"], DirectedEdge["cao", "yices"], DirectedEdge["cap", "array"], DirectedEdge["cap", "base"], DirectedEdge["cap", "containers"], DirectedEdge["capped-list", "enumerator"], DirectedEdge["capped-list", "base"], DirectedEdge["capri", "base"], DirectedEdge["capri", "Cabal"], DirectedEdge["capri", "directory"], DirectedEdge["capri", "filepath"], DirectedEdge["capri", "process"], DirectedEdge["car-pool", "base"], DirectedEdge["car-pool", "blaze-html"], DirectedEdge["car-pool", "containers"], DirectedEdge["car-pool", "digestive-functors"], DirectedEdge["car-pool", "digestive-functors-blaze"], DirectedEdge["car-pool", "digestive-functors-happstack"], DirectedEdge["car-pool", "explicit-exception"], DirectedEdge["car-pool", "happstack-server"], DirectedEdge["car-pool", "non-empty"], DirectedEdge["car-pool", "spreadsheet"], DirectedEdge["car-pool", "text"], DirectedEdge["car-pool", "transformers"], DirectedEdge["car-pool", "utility-ht"], DirectedEdge["caramia", "base"], DirectedEdge["caramia", "bytestring"], DirectedEdge["caramia", "caramia"], DirectedEdge["caramia", "containers"], DirectedEdge["caramia", "exceptions"], DirectedEdge["caramia", "gl"], DirectedEdge["caramia", "lens"], DirectedEdge["caramia", "linear"], DirectedEdge["caramia", "mtl"], DirectedEdge["caramia", "OpenGLRaw"], DirectedEdge["caramia", "semigroups"], DirectedEdge["caramia", "text"], DirectedEdge["caramia", "transformers"], DirectedEdge["caramia", "vector"], DirectedEdge["carboncopy", "base"], DirectedEdge["carboncopy", "bytestring"], DirectedEdge["carboncopy", "filepath"], DirectedEdge["carboncopy", "IfElse"], DirectedEdge["carboncopy", "MissingH"], DirectedEdge["carettah", "base"], DirectedEdge["carettah", "cairo"], DirectedEdge["carettah", "directory"], DirectedEdge["carettah", "filepath"], DirectedEdge["carettah", "gtk"], DirectedEdge["carettah", "hcwiid"], DirectedEdge["carettah", "highlighting-kate"], DirectedEdge["carettah", "mtl"], DirectedEdge["carettah", "pandoc"], DirectedEdge["carettah", "pango"], DirectedEdge["carettah", "process"], DirectedEdge["carettah", "text"], DirectedEdge["carettah", "time"], DirectedEdge["carray", "array"], DirectedEdge["carray", "base"], DirectedEdge["carray", "binary"], DirectedEdge["carray", "bytestring"], DirectedEdge["carray", "ix-shapable"], DirectedEdge["carray", "QuickCheck"], DirectedEdge["carray", "syb"], DirectedEdge["cartel", "base"], DirectedEdge["cartel", "directory"], DirectedEdge["cartel", "filepath"], DirectedEdge["cartel", "time"], DirectedEdge["cartel", "transformers"], DirectedEdge["casa-abbreviations-and-acronyms", "base"], DirectedEdge["casadi-bindings", "base"], DirectedEdge["casadi-bindings", "binary"], DirectedEdge["casadi-bindings", "casadi-bindings-core"], DirectedEdge["casadi-bindings", "casadi-bindings-internal"], DirectedEdge["casadi-bindings", "cereal"], DirectedEdge["casadi-bindings", "containers"], DirectedEdge["casadi-bindings", "linear"], DirectedEdge["casadi-bindings", "spatial-math"], DirectedEdge["casadi-bindings", "vector"], DirectedEdge["casadi-bindings", "vector-binary-instances"], DirectedEdge["casadi-bindings-control", "casadi-bindings-core"], DirectedEdge["casadi-bindings-control", "base"], DirectedEdge["casadi-bindings-control", "casadi-bindings-core"], DirectedEdge["casadi-bindings-control", "casadi-bindings-internal"], DirectedEdge["casadi-bindings-control", "vector"], DirectedEdge["casadi-bindings-core", "base"], DirectedEdge["casadi-bindings-core", "casadi-bindings-internal"], DirectedEdge["casadi-bindings-core", "containers"], DirectedEdge["casadi-bindings-core", "vector"], DirectedEdge["casadi-bindings-internal", "base"], DirectedEdge["casadi-bindings-internal", "containers"], DirectedEdge["casadi-bindings-internal", "vector"], DirectedEdge["casadi-bindings-ipopt-interface", "casadi-bindings-core"], DirectedEdge["casadi-bindings-ipopt-interface", "base"], DirectedEdge["casadi-bindings-ipopt-interface", "casadi-bindings-core"], DirectedEdge["casadi-bindings-ipopt-interface", "casadi-bindings-internal"], DirectedEdge["casadi-bindings-ipopt-interface", "vector"], DirectedEdge["casadi-bindings-snopt-interface", "casadi-bindings-core"], DirectedEdge["casadi-bindings-snopt-interface", "base"], DirectedEdge["casadi-bindings-snopt-interface", "casadi-bindings-core"], DirectedEdge["casadi-bindings-snopt-interface", "casadi-bindings-internal"], DirectedEdge["casadi-bindings-snopt-interface", "vector"], DirectedEdge["cascading", "base"], DirectedEdge["cascading", "blaze-builder"], DirectedEdge["cascading", "bytestring"], DirectedEdge["cascading", "colour"], DirectedEdge["cascading", "containers"], DirectedEdge["cascading", "lens"], DirectedEdge["cascading", "mtl"], DirectedEdge["cascading", "text"], DirectedEdge["cascading", "utf8-string"], DirectedEdge["cascading", "web-routes"], DirectedEdge["case-conversion", "base"], DirectedEdge["case-insensitive", "base"], DirectedEdge["case-insensitive", "bytestring"], DirectedEdge["case-insensitive", "deepseq"], DirectedEdge["case-insensitive", "hashable"], DirectedEdge["case-insensitive", "semigroups"], DirectedEdge["case-insensitive", "text"], DirectedEdge["cased", "base"], DirectedEdge["cased", "text"], DirectedEdge["cases", "attoparsec"], DirectedEdge["cases", "base-prelude"], DirectedEdge["cases", "loch-th"], DirectedEdge["cases", "text"], DirectedEdge["cash", "base"], DirectedEdge["cash", "deepseq"], DirectedEdge["cash", "HaXml"], DirectedEdge["cash", "network"], DirectedEdge["cash", "parallel"], DirectedEdge["cash", "pretty"], DirectedEdge["casing", "base"], DirectedEdge["casing", "split"], DirectedEdge["casr-logbook", "base"], DirectedEdge["casr-logbook", "containers"], DirectedEdge["cassandra-cql", "base"], DirectedEdge["cassandra-cql", "bytestring"], DirectedEdge["cassandra-cql", "cereal"], DirectedEdge["cassandra-cql", "containers"], DirectedEdge["cassandra-cql", "cryptohash"], DirectedEdge["cassandra-cql", "Decimal"], DirectedEdge["cassandra-cql", "hslogger"], DirectedEdge["cassandra-cql", "MonadCatchIO-transformers"], DirectedEdge["cassandra-cql", "mtl"], DirectedEdge["cassandra-cql", "network"], DirectedEdge["cassandra-cql", "resource-pool"], DirectedEdge["cassandra-cql", "stm"], DirectedEdge["cassandra-cql", "text"], DirectedEdge["cassandra-cql", "time"], DirectedEdge["cassandra-cql", "uuid"], DirectedEdge["cassandra-thrift", "base"], DirectedEdge["cassandra-thrift", "bytestring"], DirectedEdge["cassandra-thrift", "containers"], DirectedEdge["cassandra-thrift", "Thrift"], DirectedEdge["cassava", "array"], DirectedEdge["cassava", "attoparsec"], DirectedEdge["cassava", "base"], DirectedEdge["cassava", "blaze-builder"], DirectedEdge["cassava", "bytestring"], DirectedEdge["cassava", "containers"], DirectedEdge["cassava", "deepseq"], DirectedEdge["cassava", "hashable"], DirectedEdge["cassava", "text"], DirectedEdge["cassava", "unordered-containers"], DirectedEdge["cassava", "vector"], DirectedEdge["cassava-conduit", "array"], DirectedEdge["cassava-conduit", "base"], DirectedEdge["cassava-conduit", "bifunctors"], DirectedEdge["cassava-conduit", "bytestring"], DirectedEdge["cassava-conduit", "cassava"], DirectedEdge["cassava-conduit", "conduit"], DirectedEdge["cassava-conduit", "conduit-extra"], DirectedEdge["cassava-conduit", "containers"], DirectedEdge["cassava-conduit", "mtl"], DirectedEdge["cassava-conduit", "text"], DirectedEdge["cassava-streams", "base"], DirectedEdge["cassava-streams", "bytestring"], DirectedEdge["cassava-streams", "cassava"], DirectedEdge["cassava-streams", "io-streams"], DirectedEdge["cassava-streams", "vector"], DirectedEdge["cassette", "base"], DirectedEdge["cassy", "aeson"], DirectedEdge["cassy", "async"], DirectedEdge["cassy", "attoparsec"], DirectedEdge["cassy", "base"], DirectedEdge["cassy", "binary"], DirectedEdge["cassy", "bytestring"], DirectedEdge["cassy", "cassandra-thrift"], DirectedEdge["cassy", "cereal"], DirectedEdge["cassy", "conduit"], DirectedEdge["cassy", "containers"], DirectedEdge["cassy", "data-default"], DirectedEdge["cassy", "errors"], DirectedEdge["cassy", "exceptions"], DirectedEdge["cassy", "mtl"], DirectedEdge["cassy", "network"], DirectedEdge["cassy", "resource-pool"], DirectedEdge["cassy", "retry"], DirectedEdge["cassy", "safecopy"], DirectedEdge["cassy", "stm"], DirectedEdge["cassy", "syb"], DirectedEdge["cassy", "text"], DirectedEdge["cassy", "Thrift"], DirectedEdge["cassy", "time"], DirectedEdge["cassy", "transformers-base"], DirectedEdge["castle", "base"], DirectedEdge["castle", "containers"], DirectedEdge["castle", "optparse-applicative"], DirectedEdge["castle", "shelly"], DirectedEdge["castle", "system-fileio"], DirectedEdge["castle", "system-filepath"], DirectedEdge["castle", "text"], DirectedEdge["casui", "base"], DirectedEdge["casui", "gtk"], DirectedEdge["casui", "mtl"], DirectedEdge["casui", "parsec"], DirectedEdge["catamorphism", "base"], DirectedEdge["catamorphism", "template-haskell"], DirectedEdge["catch-fd", "base"], DirectedEdge["catch-fd", "mtl"], DirectedEdge["catch-fd", "transformers"], DirectedEdge["categorical-algebra", "base"], DirectedEdge["categorical-algebra", "newtype"], DirectedEdge["categorical-algebra", "pointless-haskell"], DirectedEdge["categorical-algebra", "void"], DirectedEdge["categories", "base"], DirectedEdge["categories", "void"], DirectedEdge["category-extras", "adjunctions"], DirectedEdge["category-extras", "bifunctors"], DirectedEdge["category-extras", "categories"], DirectedEdge["category-extras", "comonad"], DirectedEdge["category-extras", "comonad-extras"], DirectedEdge["category-extras", "comonad-transformers"], DirectedEdge["category-extras", "comonads-fd"], DirectedEdge["category-extras", "contravariant"], DirectedEdge["category-extras", "distributive"], DirectedEdge["category-extras", "either"], DirectedEdge["category-extras", "free"], DirectedEdge["category-extras", "groupoids"], DirectedEdge["category-extras", "indexed"], DirectedEdge["category-extras", "indexed-extras"], DirectedEdge["category-extras", "invariant"], DirectedEdge["category-extras", "kan-extensions"], DirectedEdge["category-extras", "keys"], DirectedEdge["category-extras", "monad-products"], DirectedEdge["category-extras", "pointed"], DirectedEdge["category-extras", "profunctor-extras"], DirectedEdge["category-extras", "profunctors"], DirectedEdge["category-extras", "recursion-schemes"], DirectedEdge["category-extras", "reducers"], DirectedEdge["category-extras", "representable-functors"], DirectedEdge["category-extras", "representable-profunctors"], DirectedEdge["category-extras", "semigroupoid-extras"], DirectedEdge["category-extras", "semigroupoids"], DirectedEdge["category-extras", "semigroups"], DirectedEdge["category-extras", "void"], DirectedEdge["category-printf", "base"], DirectedEdge["category-printf", "bytestring"], DirectedEdge["category-printf", "comonad"], DirectedEdge["category-printf", "text"], DirectedEdge["category-traced", "base"], DirectedEdge["category-traced", "categories"], DirectedEdge["cautious-file", "base"], DirectedEdge["cautious-file", "bytestring"], DirectedEdge["cautious-file", "directory"], DirectedEdge["cautious-file", "filepath"], DirectedEdge["cautious-file", "unix"], DirectedEdge["cayley-client", "aeson"], DirectedEdge["cayley-client", "attoparsec"], DirectedEdge["cayley-client", "base"], DirectedEdge["cayley-client", "bytestring"], DirectedEdge["cayley-client", "exceptions"], DirectedEdge["cayley-client", "http-client"], DirectedEdge["cayley-client", "http-conduit"], DirectedEdge["cayley-client", "lens"], DirectedEdge["cayley-client", "lens-aeson"], DirectedEdge["cayley-client", "mtl"], DirectedEdge["cayley-client", "text"], DirectedEdge["cayley-client", "transformers"], DirectedEdge["cayley-client", "unordered-containers"], DirectedEdge["cayley-client", "vector"], DirectedEdge["cayley-dickson", "base"], DirectedEdge["cblrepo", "aeson"], DirectedEdge["cblrepo", "ansi-wl-pprint"], DirectedEdge["cblrepo", "base"], DirectedEdge["cblrepo", "bytestring"], DirectedEdge["cblrepo", "Cabal"], DirectedEdge["cblrepo", "containers"], DirectedEdge["cblrepo", "directory"], DirectedEdge["cblrepo", "filepath"], DirectedEdge["cblrepo", "mtl"], DirectedEdge["cblrepo", "optparse-applicative"], DirectedEdge["cblrepo", "process"], DirectedEdge["cblrepo", "safe"], DirectedEdge["cblrepo", "stringsearch"], DirectedEdge["cblrepo", "tar"], DirectedEdge["cblrepo", "text"], DirectedEdge["cblrepo", "transformers"], DirectedEdge["cblrepo", "unix"], DirectedEdge["cblrepo", "Unixutils"], DirectedEdge["cblrepo", "utf8-string"], DirectedEdge["cblrepo", "vector"], DirectedEdge["cblrepo", "zlib"], DirectedEdge["cci", "base"], DirectedEdge["cci", "bytestring"], DirectedEdge["cci", "cci"], DirectedEdge["cci", "time"], DirectedEdge["ccnx", "base"], DirectedEdge["ccnx", "bytestring"], DirectedEdge["cctools-workqueue", "base"], DirectedEdge["cctools-workqueue", "bindings-cctools"], DirectedEdge["cctools-workqueue", "bytestring"], DirectedEdge["cctools-workqueue", "lens"], DirectedEdge["cctools-workqueue", "monad-loops"], DirectedEdge["cctools-workqueue", "unix"], DirectedEdge["cedict", "base"], DirectedEdge["cedict", "bytestring"], DirectedEdge["cedict", "containers"], DirectedEdge["cedict", "mtl"], DirectedEdge["cedict", "parsec"], DirectedEdge["cedict", "utf8-string"], DirectedEdge["cef", "base"], DirectedEdge["cef", "bytestring"], DirectedEdge["cef", "text"], DirectedEdge["cef", "time"], DirectedEdge["ceilometer-common", "base"], DirectedEdge["ceilometer-common", "bimap"], DirectedEdge["ceilometer-common", "binary"], DirectedEdge["ceilometer-common", "bytestring"], DirectedEdge["ceilometer-common", "containers"], DirectedEdge["ceilometer-common", "foldl"], DirectedEdge["ceilometer-common", "lens"], DirectedEdge["ceilometer-common", "pipes"], DirectedEdge["ceilometer-common", "siphash"], DirectedEdge["ceilometer-common", "template-haskell"], DirectedEdge["ceilometer-common", "text"], DirectedEdge["ceilometer-common", "vaultaire-common"], DirectedEdge["cellrenderer-cairo", "base"], DirectedEdge["cellrenderer-cairo", "cairo"], DirectedEdge["cellrenderer-cairo", "glib"], DirectedEdge["cellrenderer-cairo", "gtk"], DirectedEdge["cellrenderer-cairo", "mtl"], DirectedEdge["cerberus", "base"], DirectedEdge["cerberus", "blaze-builder"], DirectedEdge["cerberus", "bytestring"], DirectedEdge["cerberus", "cerberus"], DirectedEdge["cerberus", "cmdargs"], DirectedEdge["cerberus", "conduit-extra"], DirectedEdge["cerberus", "ekg"], DirectedEdge["cerberus", "ekg-core"], DirectedEdge["cerberus", "hslogger"], DirectedEdge["cerberus", "http-client"], DirectedEdge["cerberus", "http-client-tls"], DirectedEdge["cerberus", "http-reverse-proxy"], DirectedEdge["cerberus", "http-types"], DirectedEdge["cerberus", "pretty-show"], DirectedEdge["cerberus", "text"], DirectedEdge["cerberus", "wai"], DirectedEdge["cerberus", "wai-middleware-caching"], DirectedEdge["cerberus", "wai-middleware-caching-lru"], DirectedEdge["cerberus", "wai-middleware-caching-redis"], DirectedEdge["cerberus", "wai-middleware-throttle"], DirectedEdge["cerberus", "warp"], DirectedEdge["cereal", "array"], DirectedEdge["cereal", "base"], DirectedEdge["cereal", "bytestring"], DirectedEdge["cereal", "containers"], DirectedEdge["cereal", "fail"], DirectedEdge["cereal", "ghc-prim"], DirectedEdge["cereal-conduit", "base"], DirectedEdge["cereal-conduit", "bytestring"], DirectedEdge["cereal-conduit", "cereal"], DirectedEdge["cereal-conduit", "conduit"], DirectedEdge["cereal-conduit", "resourcet"], DirectedEdge["cereal-conduit", "transformers"], DirectedEdge["cereal-derive", "base"], DirectedEdge["cereal-derive", "cereal"], DirectedEdge["cereal-derive", "ghc-prim"], DirectedEdge["cereal-enumerator", "base"], DirectedEdge["cereal-enumerator", "bytestring"], DirectedEdge["cereal-enumerator", "cereal"], DirectedEdge["cereal-enumerator", "enumerator"], DirectedEdge["cereal-ieee754", "cereal"], DirectedEdge["cereal-ieee754", "array"], DirectedEdge["cereal-ieee754", "base"], DirectedEdge["cereal-ieee754", "cereal"], DirectedEdge["cereal-plus", "array"], DirectedEdge["cereal-plus", "base"], DirectedEdge["cereal-plus", "bytestring"], DirectedEdge["cereal-plus", "cereal"], DirectedEdge["cereal-plus", "containers"], DirectedEdge["cereal-plus", "errors"], DirectedEdge["cereal-plus", "hashable"], DirectedEdge["cereal-plus", "hashtables"], DirectedEdge["cereal-plus", "mmorph"], DirectedEdge["cereal-plus", "mtl"], DirectedEdge["cereal-plus", "stm"], DirectedEdge["cereal-plus", "text"], DirectedEdge["cereal-plus", "time"], DirectedEdge["cereal-plus", "unordered-containers"], DirectedEdge["cereal-plus", "vector"], DirectedEdge["cereal-text", "base"], DirectedEdge["cereal-text", "cereal"], DirectedEdge["cereal-text", "text"], DirectedEdge["cereal-vector", "base"], DirectedEdge["cereal-vector", "bytestring"], DirectedEdge["cereal-vector", "cereal"], DirectedEdge["cereal-vector", "vector"], DirectedEdge["certificate", "asn1-data"], DirectedEdge["certificate", "base"], DirectedEdge["certificate", "bytestring"], DirectedEdge["certificate", "cmdargs"], DirectedEdge["certificate", "containers"], DirectedEdge["certificate", "crypto-pubkey"], DirectedEdge["certificate", "crypto-pubkey-types"], DirectedEdge["certificate", "cryptohash"], DirectedEdge["certificate", "directory"], DirectedEdge["certificate", "filepath"], DirectedEdge["certificate", "HUnit"], DirectedEdge["certificate", "mtl"], DirectedEdge["certificate", "pem"], DirectedEdge["certificate", "process"], DirectedEdge["certificate", "QuickCheck"], DirectedEdge["certificate", "text"], DirectedEdge["certificate", "time"], DirectedEdge["cf", "base"], DirectedEdge["cfipu", "base"], DirectedEdge["cfipu", "bytestring"], DirectedEdge["cfipu", "containers"], DirectedEdge["cfipu", "data-default"], DirectedEdge["cfipu", "dequeue"], DirectedEdge["cfipu", "mtl"], DirectedEdge["cflp", "base"], DirectedEdge["cflp", "containers"], DirectedEdge["cflp", "control-monad-omega"], DirectedEdge["cflp", "HUnit"], DirectedEdge["cflp", "incremental-sat-solver"], DirectedEdge["cflp", "level-monad"], DirectedEdge["cflp", "logict"], DirectedEdge["cflp", "MonadRandom"], DirectedEdge["cflp", "mtl"], DirectedEdge["cflp", "random"], DirectedEdge["cflp", "stream-monad"], DirectedEdge["cflp", "syb"], DirectedEdge["cflp", "value-supply"], DirectedEdge["cfopu", "cfipu"], DirectedEdge["cfopu", "base"], DirectedEdge["cfopu", "bytestring"], DirectedEdge["cfopu", "containers"], DirectedEdge["cfopu", "data-default"], DirectedEdge["cfopu", "dequeue"], DirectedEdge["cfopu", "mtl"], DirectedEdge["cg", "base"], DirectedEdge["cg", "bytestring"], DirectedEdge["cg", "cereal"], DirectedEdge["cg", "containers"], DirectedEdge["cg", "deepseq"], DirectedEdge["cg", "directory"], DirectedEdge["cg", "filepath"], DirectedEdge["cg", "hashable"], DirectedEdge["cg", "mtl"], DirectedEdge["cg", "parallel"], DirectedEdge["cg", "parsec"], DirectedEdge["cg", "process"], DirectedEdge["cg", "split"], DirectedEdge["cg", "text"], DirectedEdge["cg", "unordered-containers"], DirectedEdge["cg", "utf8-string"], DirectedEdge["cg", "void"], DirectedEdge["cgen", "base"], DirectedEdge["cgen", "containers"], DirectedEdge["cgen", "directory"], DirectedEdge["cgen", "filepath"], DirectedEdge["cgen", "mtl"], DirectedEdge["cgen", "parsec"], DirectedEdge["cgen", "regex-posix"], DirectedEdge["cgen", "safe"], DirectedEdge["cgen", "template-haskell"], DirectedEdge["cgi", "base"], DirectedEdge["cgi", "bytestring"], DirectedEdge["cgi", "containers"], DirectedEdge["cgi", "exceptions"], DirectedEdge["cgi", "mtl"], DirectedEdge["cgi", "mtl-compat"], DirectedEdge["cgi", "multipart"], DirectedEdge["cgi", "network"], DirectedEdge["cgi", "network-uri"], DirectedEdge["cgi", "parsec"], DirectedEdge["cgi", "time"], DirectedEdge["cgi", "xhtml"], DirectedEdge["cgi-undecidable", "base"], DirectedEdge["cgi-undecidable", "cgi"], DirectedEdge["cgi-undecidable", "mtl"], DirectedEdge["cgi-utils", "base"], DirectedEdge["cgi-utils", "cgi"], DirectedEdge["cgi-utils", "containers"], DirectedEdge["cgi-utils", "mtl"], DirectedEdge["cgi-utils", "random"], DirectedEdge["cgrep", "ansi-terminal"], DirectedEdge["cgrep", "array"], DirectedEdge["cgrep", "async"], DirectedEdge["cgrep", "base"], DirectedEdge["cgrep", "bytestring"], DirectedEdge["cgrep", "cmdargs"], DirectedEdge["cgrep", "containers"], DirectedEdge["cgrep", "directory"], DirectedEdge["cgrep", "dlist"], DirectedEdge["cgrep", "either"], DirectedEdge["cgrep", "filepath"], DirectedEdge["cgrep", "ghc-prim"], DirectedEdge["cgrep", "mtl"], DirectedEdge["cgrep", "process"], DirectedEdge["cgrep", "regex-base"], DirectedEdge["cgrep", "regex-pcre"], DirectedEdge["cgrep", "regex-posix"], DirectedEdge["cgrep", "safe"], DirectedEdge["cgrep", "split"], DirectedEdge["cgrep", "stm"], DirectedEdge["cgrep", "stringsearch"], DirectedEdge["cgrep", "transformers"], DirectedEdge["cgrep", "unix-compat"], DirectedEdge["cgrep", "unordered-containers"], DirectedEdge["chain-codes", "base"], DirectedEdge["chain-codes", "containers"], DirectedEdge["chain-codes", "JuicyPixels"], DirectedEdge["chalk", "base"], DirectedEdge["chalkboard", "array"], DirectedEdge["chalkboard", "base"], DirectedEdge["chalkboard", "binary"], DirectedEdge["chalkboard", "bytestring"], DirectedEdge["chalkboard", "Codec-Image-DevIL"], DirectedEdge["chalkboard", "containers"], DirectedEdge["chalkboard", "data-reify"], DirectedEdge["chalkboard", "directory"], DirectedEdge["chalkboard", "GLUT"], DirectedEdge["chalkboard", "OpenGLRaw"], DirectedEdge["chalkboard", "process"], DirectedEdge["chalkboard", "time"], DirectedEdge["chalkboard-viewer", "array"], DirectedEdge["chalkboard-viewer", "base"], DirectedEdge["chalkboard-viewer", "chalkboard"], DirectedEdge["chalkboard-viewer", "GLUT"], DirectedEdge["chalkboard-viewer", "OpenGL"], DirectedEdge["chalkboard-viewer", "time"], DirectedEdge["chalmers-lava2000", "array"], DirectedEdge["chalmers-lava2000", "base"], DirectedEdge["chalmers-lava2000", "process"], DirectedEdge["chalmers-lava2000", "random"], DirectedEdge["chan-split", "base"], DirectedEdge["chan-split", "stm"], DirectedEdge["change-monger", "base"], DirectedEdge["change-monger", "directory"], DirectedEdge["change-monger", "process"], DirectedEdge["charade", "base"], DirectedEdge["charade", "configurator"], DirectedEdge["charade", "containers"], DirectedEdge["charade", "filepath"], DirectedEdge["charade", "heist"], DirectedEdge["charade", "lens"], DirectedEdge["charade", "mtl"], DirectedEdge["charade", "QuickCheck"], DirectedEdge["charade", "random"], DirectedEdge["charade", "snap"], DirectedEdge["charade", "snap-core"], DirectedEdge["charade", "snap-extras"], DirectedEdge["charade", "snap-server"], DirectedEdge["charade", "text"], DirectedEdge["charade", "xmlhtml"], DirectedEdge["charset", "array"], DirectedEdge["charset", "base"], DirectedEdge["charset", "bytestring"], DirectedEdge["charset", "containers"], DirectedEdge["charset", "semigroups"], DirectedEdge["charset", "unordered-containers"], DirectedEdge["charsetdetect", "base"], DirectedEdge["charsetdetect", "bytestring"], DirectedEdge["charsetdetect-ae", "base"], DirectedEdge["charsetdetect-ae", "bytestring"], DirectedEdge["chart-histogram", "Chart"], DirectedEdge["chart-histogram", "base"], DirectedEdge["chart-histogram", "Chart"], DirectedEdge["chaselev-deque", "abstract-deque"], DirectedEdge["chaselev-deque", "array"], DirectedEdge["chaselev-deque", "atomic-primops"], DirectedEdge["chaselev-deque", "base"], DirectedEdge["chaselev-deque", "ghc-prim"], DirectedEdge["chaselev-deque", "transformers"], DirectedEdge["chaselev-deque", "vector"], DirectedEdge["chatter", "array"], DirectedEdge["chatter", "base"], DirectedEdge["chatter", "bytestring"], DirectedEdge["chatter", "cereal"], DirectedEdge["chatter", "cereal-text"], DirectedEdge["chatter", "chatter"], DirectedEdge["chatter", "containers"], DirectedEdge["chatter", "deepseq"], DirectedEdge["chatter", "directory"], DirectedEdge["chatter", "filepath"], DirectedEdge["chatter", "fullstop"], DirectedEdge["chatter", "hashable"], DirectedEdge["chatter", "mbox"], DirectedEdge["chatter", "MonadRandom"], DirectedEdge["chatter", "parsec"], DirectedEdge["chatter", "QuickCheck"], DirectedEdge["chatter", "quickcheck-instances"], DirectedEdge["chatter", "random-shuffle"], DirectedEdge["chatter", "regex-tdfa"], DirectedEdge["chatter", "regex-tdfa-text"], DirectedEdge["chatter", "text"], DirectedEdge["chatter", "tokenize"], DirectedEdge["chatter", "transformers"], DirectedEdge["chatter", "unordered-containers"], DirectedEdge["chatter", "zlib"], DirectedEdge["chatty", "ansi-terminal"], DirectedEdge["chatty", "base"], DirectedEdge["chatty", "chatty-utils"], DirectedEdge["chatty", "directory"], DirectedEdge["chatty", "mtl"], DirectedEdge["chatty", "process"], DirectedEdge["chatty", "random"], DirectedEdge["chatty", "setenv"], DirectedEdge["chatty", "template-haskell"], DirectedEdge["chatty", "text"], DirectedEdge["chatty", "time"], DirectedEdge["chatty", "transformers"], DirectedEdge["chatty", "unix"], DirectedEdge["chatty-text", "base"], DirectedEdge["chatty-text", "chatty"], DirectedEdge["chatty-text", "transformers"], DirectedEdge["chatty-utils", "base"], DirectedEdge["chatty-utils", "mtl"], DirectedEdge["chatty-utils", "text"], DirectedEdge["chatty-utils", "transformers"], DirectedEdge["cheapskate", "aeson"], DirectedEdge["cheapskate", "base"], DirectedEdge["cheapskate", "blaze-html"], DirectedEdge["cheapskate", "bytestring"], DirectedEdge["cheapskate", "cheapskate"], DirectedEdge["cheapskate", "containers"], DirectedEdge["cheapskate", "data-default"], DirectedEdge["cheapskate", "http-types"], DirectedEdge["cheapskate", "mtl"], DirectedEdge["cheapskate", "syb"], DirectedEdge["cheapskate", "text"], DirectedEdge["cheapskate", "uniplate"], DirectedEdge["cheapskate", "wai"], DirectedEdge["cheapskate", "wai-extra"], DirectedEdge["cheapskate", "xss-sanitize"], DirectedEdge["cheapskate-highlight", "base"], DirectedEdge["cheapskate-highlight", "blaze-html"], DirectedEdge["cheapskate-highlight", "cheapskate"], DirectedEdge["cheapskate-highlight", "highlighting-kate"], DirectedEdge["cheapskate-highlight", "text"], DirectedEdge["cheapskate-lucid", "base"], DirectedEdge["cheapskate-lucid", "blaze-html"], DirectedEdge["cheapskate-lucid", "cheapskate"], DirectedEdge["cheapskate-lucid", "lucid"], DirectedEdge["cheapskate-terminal", "ansi-terminal"], DirectedEdge["cheapskate-terminal", "base"], DirectedEdge["cheapskate-terminal", "cheapskate"], DirectedEdge["cheapskate-terminal", "cheapskate-terminal"], DirectedEdge["cheapskate-terminal", "data-default"], DirectedEdge["cheapskate-terminal", "directory"], DirectedEdge["cheapskate-terminal", "hpygments"], DirectedEdge["cheapskate-terminal", "hscolour"], DirectedEdge["cheapskate-terminal", "terminal-size"], DirectedEdge["cheapskate-terminal", "text"], DirectedEdge["check-email", "base"], DirectedEdge["check-email", "bytestring"], DirectedEdge["check-email", "email-validate"], DirectedEdge["check-pvp", "base"], DirectedEdge["check-pvp", "Cabal"], DirectedEdge["check-pvp", "containers"], DirectedEdge["check-pvp", "explicit-exception"], DirectedEdge["check-pvp", "filepath"], DirectedEdge["check-pvp", "haskell-src-exts"], DirectedEdge["check-pvp", "non-empty"], DirectedEdge["check-pvp", "transformers"], DirectedEdge["check-pvp", "utility-ht"], DirectedEdge["checked", "base"], DirectedEdge["checkers", "array"], DirectedEdge["checkers", "base"], DirectedEdge["checkers", "QuickCheck"], DirectedEdge["checkers", "random"], DirectedEdge["chell", "ansi-terminal"], DirectedEdge["chell", "base"], DirectedEdge["chell", "bytestring"], DirectedEdge["chell", "options"], DirectedEdge["chell", "patience"], DirectedEdge["chell", "random"], DirectedEdge["chell", "template-haskell"], DirectedEdge["chell", "text"], DirectedEdge["chell", "transformers"], DirectedEdge["chell-hunit", "base"], DirectedEdge["chell-hunit", "chell"], DirectedEdge["chell-hunit", "HUnit"], DirectedEdge["chell-quickcheck", "base"], DirectedEdge["chell-quickcheck", "chell"], DirectedEdge["chell-quickcheck", "QuickCheck"], DirectedEdge["chell-quickcheck", "random"], DirectedEdge["chesshs", "array"], DirectedEdge["chesshs", "attoparsec"], DirectedEdge["chesshs", "base"], DirectedEdge["chesshs", "bytestring"], DirectedEdge["chesshs", "containers"], DirectedEdge["chevalier-common", "base"], DirectedEdge["chevalier-common", "bifunctors"], DirectedEdge["chevalier-common", "bytestring"], DirectedEdge["chevalier-common", "cereal"], DirectedEdge["chevalier-common", "locators"], DirectedEdge["chevalier-common", "mtl"], DirectedEdge["chevalier-common", "network"], DirectedEdge["chevalier-common", "network-uri"], DirectedEdge["chevalier-common", "protobuf"], DirectedEdge["chevalier-common", "text"], DirectedEdge["chevalier-common", "unordered-containers"], DirectedEdge["chevalier-common", "vaultaire-common"], DirectedEdge["chevalier-common", "zeromq4-haskell"], DirectedEdge["chorale", "base"], DirectedEdge["chorale", "containers"], DirectedEdge["chorale", "safe"], DirectedEdge["chp", "base"], DirectedEdge["chp", "containers"], DirectedEdge["chp", "deepseq"], DirectedEdge["chp", "extensible-exceptions"], DirectedEdge["chp", "pretty"], DirectedEdge["chp", "stm"], DirectedEdge["chp-mtl", "base"], DirectedEdge["chp-mtl", "chp"], DirectedEdge["chp-mtl", "chp-plus"], DirectedEdge["chp-mtl", "mtl"], DirectedEdge["chp-plus", "base"], DirectedEdge["chp-plus", "chp"], DirectedEdge["chp-plus", "containers"], DirectedEdge["chp-plus", "deepseq"], DirectedEdge["chp-plus", "extensible-exceptions"], DirectedEdge["chp-plus", "HUnit"], DirectedEdge["chp-plus", "pretty"], DirectedEdge["chp-plus", "QuickCheck"], DirectedEdge["chp-plus", "stm"], DirectedEdge["chp-spec", "base"], DirectedEdge["chp-spec", "containers"], DirectedEdge["chp-spec", "deepseq"], DirectedEdge["chp-spec", "mtl"], DirectedEdge["chp-spec", "pretty"], DirectedEdge["chp-spec", "TypeCompose"], DirectedEdge["chp-transformers", "base"], DirectedEdge["chp-transformers", "chp"], DirectedEdge["chp-transformers", "chp-plus"], DirectedEdge["chp-transformers", "transformers"], DirectedEdge["chronograph", "base"], DirectedEdge["chronograph", "deepseq"], DirectedEdge["chronograph", "ghc-prim"], DirectedEdge["chronograph", "thyme"], DirectedEdge["chronograph", "vector-space"], DirectedEdge["chu2", "base"], DirectedEdge["chu2", "bytestring"], DirectedEdge["chu2", "data-default"], DirectedEdge["chu2", "hack2-handler-snap-server"], DirectedEdge["chu2", "utf8-string"], DirectedEdge["chuchu", "abacate"], DirectedEdge["chuchu", "ansi-wl-pprint"], DirectedEdge["chuchu", "base"], DirectedEdge["chuchu", "cmdargs"], DirectedEdge["chuchu", "lifted-base"], DirectedEdge["chuchu", "monad-control"], DirectedEdge["chuchu", "parsec"], DirectedEdge["chuchu", "text"], DirectedEdge["chuchu", "transformers"], DirectedEdge["chunked-data", "base"], DirectedEdge["chunked-data", "blaze-builder"], DirectedEdge["chunked-data", "bytestring"], DirectedEdge["chunked-data", "containers"], DirectedEdge["chunked-data", "mono-traversable"], DirectedEdge["chunked-data", "semigroups"], DirectedEdge["chunked-data", "text"], DirectedEdge["chunked-data", "transformers"], DirectedEdge["chunked-data", "vector"], DirectedEdge["chunks", "base"], DirectedEdge["chunks", "parsec"], DirectedEdge["chunks", "template-haskell"], DirectedEdge["chunky", "base"], DirectedEdge["chunky", "binary"], DirectedEdge["chunky", "bytestring"], DirectedEdge["chunky", "chunky"], DirectedEdge["chunky", "text"], DirectedEdge["church-list", "base"], DirectedEdge["cil", "base"], DirectedEdge["cil", "bytestring"], DirectedEdge["cil", "language-c"], DirectedEdge["cinvoke", "base"], DirectedEdge["cinvoke", "bytestring"], DirectedEdge["cio", "base"], DirectedEdge["cio", "monad-stm"], DirectedEdge["cio", "mtl"], DirectedEdge["cio", "parallel-io"], DirectedEdge["cio", "stm"], DirectedEdge["cipher-aes", "cryptonite"], DirectedEdge["cipher-aes", "base"], DirectedEdge["cipher-aes", "byteable"], DirectedEdge["cipher-aes", "bytestring"], DirectedEdge["cipher-aes", "crypto-cipher-types"], DirectedEdge["cipher-aes", "securemem"], DirectedEdge["cipher-aes128", "base"], DirectedEdge["cipher-aes128", "bytestring"], DirectedEdge["cipher-aes128", "cereal"], DirectedEdge["cipher-aes128", "crypto-api"], DirectedEdge["cipher-aes128", "crypto-api-tests"], DirectedEdge["cipher-aes128", "tagged"], DirectedEdge["cipher-aes128", "test-framework"], DirectedEdge["cipher-blowfish", "cryptonite"], DirectedEdge["cipher-blowfish", "base"], DirectedEdge["cipher-blowfish", "byteable"], DirectedEdge["cipher-blowfish", "bytestring"], DirectedEdge["cipher-blowfish", "crypto-cipher-types"], DirectedEdge["cipher-blowfish", "securemem"], DirectedEdge["cipher-blowfish", "vector"], DirectedEdge["cipher-camellia", "base"], DirectedEdge["cipher-camellia", "byteable"], DirectedEdge["cipher-camellia", "bytestring"], DirectedEdge["cipher-camellia", "crypto-cipher-types"], DirectedEdge["cipher-camellia", "securemem"], DirectedEdge["cipher-camellia", "vector"], DirectedEdge["cipher-des", "base"], DirectedEdge["cipher-des", "byteable"], DirectedEdge["cipher-des", "bytestring"], DirectedEdge["cipher-des", "crypto-cipher-types"], DirectedEdge["cipher-des", "securemem"], DirectedEdge["cipher-rc4", "cryptonite"], DirectedEdge["cipher-rc4", "base"], DirectedEdge["cipher-rc4", "byteable"], DirectedEdge["cipher-rc4", "bytestring"], DirectedEdge["cipher-rc4", "crypto-cipher-types"], DirectedEdge["cipher-rc5", "base"], DirectedEdge["cipher-rc5", "split"], DirectedEdge["ciphersaber2", "array"], DirectedEdge["ciphersaber2", "base"], DirectedEdge["ciphersaber2", "bytestring"], DirectedEdge["ciphersaber2", "parseargs"], DirectedEdge["circ", "base"], DirectedEdge["circ", "directory"], DirectedEdge["circ", "mtl"], DirectedEdge["circle-packing", "base"], DirectedEdge["circlehs", "aeson"], DirectedEdge["circlehs", "base"], DirectedEdge["circlehs", "http-client"], DirectedEdge["circlehs", "http-client-tls"], DirectedEdge["circlehs", "mtl"], DirectedEdge["circlehs", "servant"], DirectedEdge["circlehs", "servant-client"], DirectedEdge["circlehs", "text"], DirectedEdge["circlehs", "time"], DirectedEdge["circlehs", "transformers"], DirectedEdge["circlehs", "unordered-containers"], DirectedEdge["cirru-parser", "aeson"], DirectedEdge["cirru-parser", "base"], DirectedEdge["cirru-parser", "text"], DirectedEdge["cirru-parser", "vector"], DirectedEdge["citation-resolve", "aeson"], DirectedEdge["citation-resolve", "base"], DirectedEdge["citation-resolve", "bytestring"], DirectedEdge["citation-resolve", "citeproc-hs"], DirectedEdge["citation-resolve", "containers"], DirectedEdge["citation-resolve", "curl"], DirectedEdge["citation-resolve", "data-default"], DirectedEdge["citation-resolve", "directory"], DirectedEdge["citation-resolve", "download-curl"], DirectedEdge["citation-resolve", "either"], DirectedEdge["citation-resolve", "lens"], DirectedEdge["citation-resolve", "mtl"], DirectedEdge["citation-resolve", "process"], DirectedEdge["citation-resolve", "safe"], DirectedEdge["citation-resolve", "text"], DirectedEdge["citation-resolve", "transformers"], DirectedEdge["citation-resolve", "yaml"], DirectedEdge["citeproc-hs", "base"], DirectedEdge["citeproc-hs", "bytestring"], DirectedEdge["citeproc-hs", "containers"], DirectedEdge["citeproc-hs", "directory"], DirectedEdge["citeproc-hs", "file-embed"], DirectedEdge["citeproc-hs", "filepath"], DirectedEdge["citeproc-hs", "hexpat"], DirectedEdge["citeproc-hs", "hs-bibutils"], DirectedEdge["citeproc-hs", "HTTP"], DirectedEdge["citeproc-hs", "json"], DirectedEdge["citeproc-hs", "mtl"], DirectedEdge["citeproc-hs", "network"], DirectedEdge["citeproc-hs", "network-uri"], DirectedEdge["citeproc-hs", "old-locale"], DirectedEdge["citeproc-hs", "pandoc-types"], DirectedEdge["citeproc-hs", "parsec"], DirectedEdge["citeproc-hs", "syb"], DirectedEdge["citeproc-hs", "template-haskell"], DirectedEdge["citeproc-hs", "text"], DirectedEdge["citeproc-hs", "text-icu"], DirectedEdge["citeproc-hs", "time"], DirectedEdge["citeproc-hs", "utf8-string"], DirectedEdge["citeproc-hs", "xml"], DirectedEdge["citeproc-hs-pandoc-filter", "aeson"], DirectedEdge["citeproc-hs-pandoc-filter", "base"], DirectedEdge["citeproc-hs-pandoc-filter", "bytestring"], DirectedEdge["citeproc-hs-pandoc-filter", "citeproc-hs"], DirectedEdge["citeproc-hs-pandoc-filter", "containers"], DirectedEdge["citeproc-hs-pandoc-filter", "directory"], DirectedEdge["citeproc-hs-pandoc-filter", "filepath"], DirectedEdge["citeproc-hs-pandoc-filter", "mtl"], DirectedEdge["citeproc-hs-pandoc-filter", "pandoc"], DirectedEdge["citeproc-hs-pandoc-filter", "pandoc-types"], DirectedEdge["citeproc-hs-pandoc-filter", "parsec"], DirectedEdge["citeproc-hs-pandoc-filter", "tagsoup"], DirectedEdge["citeproc-hs-pandoc-filter", "texmath"], DirectedEdge["citeproc-hs-pandoc-filter", "utf8-string"], DirectedEdge["citeproc-hs-pandoc-filter", "yaml"], DirectedEdge["cityhash", "base"], DirectedEdge["cityhash", "bytestring"], DirectedEdge["cityhash", "largeword"], DirectedEdge["cjk", "attoparsec"], DirectedEdge["cjk", "base"], DirectedEdge["cjk", "bytestring"], DirectedEdge["cjk", "containers"], DirectedEdge["cjk", "text"], DirectedEdge["cjk", "text-icu"], DirectedEdge["clac", "base"], DirectedEdge["clac", "containers"], DirectedEdge["clac", "dsp"], DirectedEdge["clac", "optparse-applicative"], DirectedEdge["clac", "plailude"], DirectedEdge["clac", "pretty-tree"], DirectedEdge["clac", "safe"], DirectedEdge["clac", "split"], DirectedEdge["clafer", "aeson"], DirectedEdge["clafer", "array"], DirectedEdge["clafer", "base"], DirectedEdge["clafer", "bytestring"], DirectedEdge["clafer", "clafer"], DirectedEdge["clafer", "cmdargs"], DirectedEdge["clafer", "containers"], DirectedEdge["clafer", "data-stringmap"], DirectedEdge["clafer", "directory"], DirectedEdge["clafer", "executable-path"], DirectedEdge["clafer", "file-embed"], DirectedEdge["clafer", "filepath"], DirectedEdge["clafer", "HTTP"], DirectedEdge["clafer", "json-builder"], DirectedEdge["clafer", "lens"], DirectedEdge["clafer", "lens-aeson"], DirectedEdge["clafer", "mtl"], DirectedEdge["clafer", "mtl-compat"], DirectedEdge["clafer", "network"], DirectedEdge["clafer", "network-uri"], DirectedEdge["clafer", "parsec"], DirectedEdge["clafer", "process"], DirectedEdge["clafer", "split"], DirectedEdge["clafer", "string-conversions"], DirectedEdge["clafer", "text"], DirectedEdge["clafer", "transformers"], DirectedEdge["clafer", "transformers-compat"], DirectedEdge["claferIG", "array"], DirectedEdge["claferIG", "base"], DirectedEdge["claferIG", "clafer"], DirectedEdge["claferIG", "claferIG"], DirectedEdge["claferIG", "cmdargs"], DirectedEdge["claferIG", "containers"], DirectedEdge["claferIG", "data-stringmap"], DirectedEdge["claferIG", "directory"], DirectedEdge["claferIG", "executable-path"], DirectedEdge["claferIG", "filepath"], DirectedEdge["claferIG", "haskeline"], DirectedEdge["claferIG", "HaXml"], DirectedEdge["claferIG", "json-builder"], DirectedEdge["claferIG", "mtl"], DirectedEdge["claferIG", "mtl-compat"], DirectedEdge["claferIG", "parsec"], DirectedEdge["claferIG", "process"], DirectedEdge["claferIG", "string-conversions"], DirectedEdge["claferIG", "transformers"], DirectedEdge["claferIG", "transformers-compat"], DirectedEdge["claferwiki", "base"], DirectedEdge["claferwiki", "clafer"], DirectedEdge["claferwiki", "containers"], DirectedEdge["claferwiki", "directory"], DirectedEdge["claferwiki", "gitit"], DirectedEdge["claferwiki", "MissingH"], DirectedEdge["claferwiki", "mtl"], DirectedEdge["claferwiki", "network"], DirectedEdge["claferwiki", "network-uri"], DirectedEdge["claferwiki", "process"], DirectedEdge["claferwiki", "SHA"], DirectedEdge["claferwiki", "split"], DirectedEdge["claferwiki", "time"], DirectedEdge["claferwiki", "transformers"], DirectedEdge["claferwiki", "transformers-compat"], DirectedEdge["claferwiki", "utf8-string"], DirectedEdge["clang-pure", "base"], DirectedEdge["clang-pure", "bytestring"], DirectedEdge["clang-pure", "containers"], DirectedEdge["clang-pure", "contravariant"], DirectedEdge["clang-pure", "inline-c"], DirectedEdge["clang-pure", "stm"], DirectedEdge["clang-pure", "template-haskell"], DirectedEdge["clang-pure", "vector"], DirectedEdge["clanki", "base"], DirectedEdge["clanki", "bytestring"], DirectedEdge["clanki", "directory"], DirectedEdge["clanki", "safe"], DirectedEdge["clanki", "strict"], DirectedEdge["clanki", "time"], DirectedEdge["clarifai", "aeson"], DirectedEdge["clarifai", "base"], DirectedEdge["clarifai", "bytestring"], DirectedEdge["clarifai", "containers"], DirectedEdge["clarifai", "easy-file"], DirectedEdge["clarifai", "HTTP"], DirectedEdge["clarifai", "http-client"], DirectedEdge["clarifai", "lens"], DirectedEdge["clarifai", "lens-aeson"], DirectedEdge["clarifai", "scientific"], DirectedEdge["clarifai", "text"], DirectedEdge["clarifai", "unordered-containers"], DirectedEdge["clarifai", "vector"], DirectedEdge["clarifai", "wreq"], DirectedEdge["clash", "clash-ghc"], DirectedEdge["clash", "base"], DirectedEdge["clash", "containers"], DirectedEdge["clash", "data-accessor"], DirectedEdge["clash", "data-accessor-template"], DirectedEdge["clash", "directory"], DirectedEdge["clash", "filepath"], DirectedEdge["clash", "ghc"], DirectedEdge["clash", "pretty"], DirectedEdge["clash", "prettyclass"], DirectedEdge["clash", "template-haskell"], DirectedEdge["clash", "tfp"], DirectedEdge["clash", "th-lift"], DirectedEdge["clash", "time"], DirectedEdge["clash", "transformers"], DirectedEdge["clash", "utility-ht"], DirectedEdge["clash", "vhdl"], DirectedEdge["clash-ghc", "array"], DirectedEdge["clash-ghc", "base"], DirectedEdge["clash-ghc", "bifunctors"], DirectedEdge["clash-ghc", "bytestring"], DirectedEdge["clash-ghc", "clash-lib"], DirectedEdge["clash-ghc", "clash-prelude"], DirectedEdge["clash-ghc", "clash-systemverilog"], DirectedEdge["clash-ghc", "clash-verilog"], DirectedEdge["clash-ghc", "clash-vhdl"], DirectedEdge["clash-ghc", "containers"], DirectedEdge["clash-ghc", "deepseq"], DirectedEdge["clash-ghc", "directory"], DirectedEdge["clash-ghc", "filepath"], DirectedEdge["clash-ghc", "ghc"], DirectedEdge["clash-ghc", "ghc-typelits-extra"], DirectedEdge["clash-ghc", "ghc-typelits-natnormalise"], DirectedEdge["clash-ghc", "hashable"], DirectedEdge["clash-ghc", "haskeline"], DirectedEdge["clash-ghc", "lens"], DirectedEdge["clash-ghc", "mtl"], DirectedEdge["clash-ghc", "process"], DirectedEdge["clash-ghc", "text"], DirectedEdge["clash-ghc", "time"], DirectedEdge["clash-ghc", "transformers"], DirectedEdge["clash-ghc", "unbound-generics"], DirectedEdge["clash-ghc", "unix"], DirectedEdge["clash-ghc", "unordered-containers"], DirectedEdge["clash-lib", "aeson"], DirectedEdge["clash-lib", "attoparsec"], DirectedEdge["clash-lib", "base"], DirectedEdge["clash-lib", "bytestring"], DirectedEdge["clash-lib", "clash-prelude"], DirectedEdge["clash-lib", "concurrent-supply"], DirectedEdge["clash-lib", "containers"], DirectedEdge["clash-lib", "deepseq"], DirectedEdge["clash-lib", "directory"], DirectedEdge["clash-lib", "errors"], DirectedEdge["clash-lib", "fgl"], DirectedEdge["clash-lib", "filepath"], DirectedEdge["clash-lib", "hashable"], DirectedEdge["clash-lib", "lens"], DirectedEdge["clash-lib", "mtl"], DirectedEdge["clash-lib", "pretty"], DirectedEdge["clash-lib", "process"], DirectedEdge["clash-lib", "template-haskell"], DirectedEdge["clash-lib", "text"], DirectedEdge["clash-lib", "time"], DirectedEdge["clash-lib", "transformers"], DirectedEdge["clash-lib", "unbound-generics"], DirectedEdge["clash-lib", "unordered-containers"], DirectedEdge["clash-lib", "uu-parsinglib"], DirectedEdge["clash-lib", "wl-pprint-text"], DirectedEdge["clash-prelude", "array"], DirectedEdge["clash-prelude", "base"], DirectedEdge["clash-prelude", "data-default"], DirectedEdge["clash-prelude", "ghc-prim"], DirectedEdge["clash-prelude", "ghc-typelits-extra"], DirectedEdge["clash-prelude", "ghc-typelits-natnormalise"], DirectedEdge["clash-prelude", "integer-gmp"], DirectedEdge["clash-prelude", "lens"], DirectedEdge["clash-prelude", "QuickCheck"], DirectedEdge["clash-prelude", "reflection"], DirectedEdge["clash-prelude", "singletons"], DirectedEdge["clash-prelude", "template-haskell"], DirectedEdge["clash-prelude", "th-lift"], DirectedEdge["clash-prelude-quickcheck", "base"], DirectedEdge["clash-prelude-quickcheck", "clash-prelude"], DirectedEdge["clash-prelude-quickcheck", "QuickCheck"], DirectedEdge["clash-systemverilog", "base"], DirectedEdge["clash-systemverilog", "clash-lib"], DirectedEdge["clash-systemverilog", "clash-prelude"], DirectedEdge["clash-systemverilog", "fgl"], DirectedEdge["clash-systemverilog", "lens"], DirectedEdge["clash-systemverilog", "mtl"], DirectedEdge["clash-systemverilog", "text"], DirectedEdge["clash-systemverilog", "unordered-containers"], DirectedEdge["clash-systemverilog", "wl-pprint-text"], DirectedEdge["clash-verilog", "base"], DirectedEdge["clash-verilog", "clash-lib"], DirectedEdge["clash-verilog", "clash-prelude"], DirectedEdge["clash-verilog", "fgl"], DirectedEdge["clash-verilog", "lens"], DirectedEdge["clash-verilog", "mtl"], DirectedEdge["clash-verilog", "text"], DirectedEdge["clash-verilog", "unordered-containers"], DirectedEdge["clash-verilog", "wl-pprint-text"], DirectedEdge["clash-vhdl", "base"], DirectedEdge["clash-vhdl", "clash-lib"], DirectedEdge["clash-vhdl", "clash-prelude"], DirectedEdge["clash-vhdl", "fgl"], DirectedEdge["clash-vhdl", "lens"], DirectedEdge["clash-vhdl", "mtl"], DirectedEdge["clash-vhdl", "text"], DirectedEdge["clash-vhdl", "unordered-containers"], DirectedEdge["clash-vhdl", "wl-pprint-text"], DirectedEdge["classify", "base"], DirectedEdge["classify", "containers"], DirectedEdge["classify", "mtl"], DirectedEdge["classy-parallel", "base"], DirectedEdge["classy-parallel", "lifted-base"], DirectedEdge["classy-parallel", "monad-control"], DirectedEdge["classy-parallel", "parallel"], DirectedEdge["classy-parallel", "resourcet"], DirectedEdge["classy-parallel", "transformers"], DirectedEdge["classy-prelude", "base"], DirectedEdge["classy-prelude", "basic-prelude"], DirectedEdge["classy-prelude", "bifunctors"], DirectedEdge["classy-prelude", "bytestring"], DirectedEdge["classy-prelude", "chunked-data"], DirectedEdge["classy-prelude", "containers"], DirectedEdge["classy-prelude", "dlist"], DirectedEdge["classy-prelude", "enclosed-exceptions"], DirectedEdge["classy-prelude", "exceptions"], DirectedEdge["classy-prelude", "ghc-prim"], DirectedEdge["classy-prelude", "hashable"], DirectedEdge["classy-prelude", "lifted-base"], DirectedEdge["classy-prelude", "mono-traversable"], DirectedEdge["classy-prelude", "mtl"], DirectedEdge["classy-prelude", "mutable-containers"], DirectedEdge["classy-prelude", "primitive"], DirectedEdge["classy-prelude", "semigroups"], DirectedEdge["classy-prelude", "stm"], DirectedEdge["classy-prelude", "text"], DirectedEdge["classy-prelude", "time"], DirectedEdge["classy-prelude", "time-locale-compat"], DirectedEdge["classy-prelude", "transformers"], DirectedEdge["classy-prelude", "transformers-base"], DirectedEdge["classy-prelude", "unordered-containers"], DirectedEdge["classy-prelude", "vector"], DirectedEdge["classy-prelude", "vector-instances"], DirectedEdge["classy-prelude-conduit", "base"], DirectedEdge["classy-prelude-conduit", "bytestring"], DirectedEdge["classy-prelude-conduit", "classy-prelude"], DirectedEdge["classy-prelude-conduit", "conduit"], DirectedEdge["classy-prelude-conduit", "conduit-combinators"], DirectedEdge["classy-prelude-conduit", "monad-control"], DirectedEdge["classy-prelude-conduit", "resourcet"], DirectedEdge["classy-prelude-conduit", "transformers"], DirectedEdge["classy-prelude-conduit", "void"], DirectedEdge["classy-prelude-yesod", "aeson"], DirectedEdge["classy-prelude-yesod", "base"], DirectedEdge["classy-prelude-yesod", "classy-prelude"], DirectedEdge["classy-prelude-yesod", "classy-prelude-conduit"], DirectedEdge["classy-prelude-yesod", "data-default"], DirectedEdge["classy-prelude-yesod", "http-conduit"], DirectedEdge["classy-prelude-yesod", "http-types"], DirectedEdge["classy-prelude-yesod", "persistent"], DirectedEdge["classy-prelude-yesod", "yesod"], DirectedEdge["classy-prelude-yesod", "yesod-newsfeed"], DirectedEdge["classy-prelude-yesod", "yesod-static"], DirectedEdge["clay", "base"], DirectedEdge["clay", "mtl"], DirectedEdge["clay", "text"], DirectedEdge["clckwrks", "acid-state"], DirectedEdge["clckwrks", "aeson"], DirectedEdge["clckwrks", "aeson-qq"], DirectedEdge["clckwrks", "attoparsec"], DirectedEdge["clckwrks", "base"], DirectedEdge["clckwrks", "blaze-html"], DirectedEdge["clckwrks", "bytestring"], DirectedEdge["clckwrks", "cereal"], DirectedEdge["clckwrks", "containers"], DirectedEdge["clckwrks", "directory"], DirectedEdge["clckwrks", "filepath"], DirectedEdge["clckwrks", "happstack-authenticate"], DirectedEdge["clckwrks", "happstack-hsp"], DirectedEdge["clckwrks", "happstack-jmacro"], DirectedEdge["clckwrks", "happstack-server"], DirectedEdge["clckwrks", "happstack-server-tls"], DirectedEdge["clckwrks", "hsp"], DirectedEdge["clckwrks", "hsx-jmacro"], DirectedEdge["clckwrks", "hsx2hs"], DirectedEdge["clckwrks", "ixset"], DirectedEdge["clckwrks", "jmacro"], DirectedEdge["clckwrks", "lens"], DirectedEdge["clckwrks", "mtl"], DirectedEdge["clckwrks", "network"], DirectedEdge["clckwrks", "network-uri"], DirectedEdge["clckwrks", "old-locale"], DirectedEdge["clckwrks", "process"], DirectedEdge["clckwrks", "random"], DirectedEdge["clckwrks", "reform"], DirectedEdge["clckwrks", "reform-happstack"], DirectedEdge["clckwrks", "reform-hsp"], DirectedEdge["clckwrks", "safecopy"], DirectedEdge["clckwrks", "stm"], DirectedEdge["clckwrks", "tagsoup"], DirectedEdge["clckwrks", "text"], DirectedEdge["clckwrks", "time"], DirectedEdge["clckwrks", "time-locale-compat"], DirectedEdge["clckwrks", "unordered-containers"], DirectedEdge["clckwrks", "userid"], DirectedEdge["clckwrks", "utf8-string"], DirectedEdge["clckwrks", "uuid-orphans"], DirectedEdge["clckwrks", "uuid-types"], DirectedEdge["clckwrks", "vector"], DirectedEdge["clckwrks", "web-plugins"], DirectedEdge["clckwrks", "web-routes"], DirectedEdge["clckwrks", "web-routes-happstack"], DirectedEdge["clckwrks", "web-routes-hsp"], DirectedEdge["clckwrks", "web-routes-th"], DirectedEdge["clckwrks", "xss-sanitize"], DirectedEdge["clckwrks-cli", "acid-state"], DirectedEdge["clckwrks-cli", "base"], DirectedEdge["clckwrks-cli", "clckwrks"], DirectedEdge["clckwrks-cli", "haskeline"], DirectedEdge["clckwrks-cli", "mtl"], DirectedEdge["clckwrks-cli", "network"], DirectedEdge["clckwrks-cli", "parsec"], DirectedEdge["clckwrks-dot-com", "archive"], DirectedEdge["clckwrks-dot-com", "base"], DirectedEdge["clckwrks-dot-com", "cabal-debian"], DirectedEdge["clckwrks-dot-com", "clckwrks"], DirectedEdge["clckwrks-dot-com", "clckwrks-plugin-media"], DirectedEdge["clckwrks-dot-com", "clckwrks-plugin-page"], DirectedEdge["clckwrks-dot-com", "clckwrks-theme-clckwrks"], DirectedEdge["clckwrks-dot-com", "containers"], DirectedEdge["clckwrks-dot-com", "Extra"], DirectedEdge["clckwrks-dot-com", "happstack-server"], DirectedEdge["clckwrks-dot-com", "hsp"], DirectedEdge["clckwrks-dot-com", "mtl"], DirectedEdge["clckwrks-dot-com", "network"], DirectedEdge["clckwrks-dot-com", "network-uri"], DirectedEdge["clckwrks-dot-com", "text"], DirectedEdge["clckwrks-dot-com", "web-plugins"], DirectedEdge["clckwrks-plugin-bugs", "acid-state"], DirectedEdge["clckwrks-plugin-bugs", "attoparsec"], DirectedEdge["clckwrks-plugin-bugs", "base"], DirectedEdge["clckwrks-plugin-bugs", "cereal"], DirectedEdge["clckwrks-plugin-bugs", "clckwrks"], DirectedEdge["clckwrks-plugin-bugs", "clckwrks-plugin-page"], DirectedEdge["clckwrks-plugin-bugs", "containers"], DirectedEdge["clckwrks-plugin-bugs", "directory"], DirectedEdge["clckwrks-plugin-bugs", "filepath"], DirectedEdge["clckwrks-plugin-bugs", "happstack-authenticate"], DirectedEdge["clckwrks-plugin-bugs", "happstack-hsp"], DirectedEdge["clckwrks-plugin-bugs", "happstack-server"], DirectedEdge["clckwrks-plugin-bugs", "hsp"], DirectedEdge["clckwrks-plugin-bugs", "ixset"], DirectedEdge["clckwrks-plugin-bugs", "mtl"], DirectedEdge["clckwrks-plugin-bugs", "network"], DirectedEdge["clckwrks-plugin-bugs", "network-uri"], DirectedEdge["clckwrks-plugin-bugs", "reform"], DirectedEdge["clckwrks-plugin-bugs", "reform-happstack"], DirectedEdge["clckwrks-plugin-bugs", "reform-hsp"], DirectedEdge["clckwrks-plugin-bugs", "safecopy"], DirectedEdge["clckwrks-plugin-bugs", "text"], DirectedEdge["clckwrks-plugin-bugs", "time"], DirectedEdge["clckwrks-plugin-bugs", "web-plugins"], DirectedEdge["clckwrks-plugin-bugs", "web-routes"], DirectedEdge["clckwrks-plugin-bugs", "web-routes-th"], DirectedEdge["clckwrks-plugin-ircbot", "acid-state"], DirectedEdge["clckwrks-plugin-ircbot", "attoparsec"], DirectedEdge["clckwrks-plugin-ircbot", "base"], DirectedEdge["clckwrks-plugin-ircbot", "blaze-html"], DirectedEdge["clckwrks-plugin-ircbot", "bytestring"], DirectedEdge["clckwrks-plugin-ircbot", "clckwrks"], DirectedEdge["clckwrks-plugin-ircbot", "containers"], DirectedEdge["clckwrks-plugin-ircbot", "directory"], DirectedEdge["clckwrks-plugin-ircbot", "filepath"], DirectedEdge["clckwrks-plugin-ircbot", "happstack-hsp"], DirectedEdge["clckwrks-plugin-ircbot", "happstack-server"], DirectedEdge["clckwrks-plugin-ircbot", "hsp"], DirectedEdge["clckwrks-plugin-ircbot", "ircbot"], DirectedEdge["clckwrks-plugin-ircbot", "ixset"], DirectedEdge["clckwrks-plugin-ircbot", "mtl"], DirectedEdge["clckwrks-plugin-ircbot", "network"], DirectedEdge["clckwrks-plugin-ircbot", "reform"], DirectedEdge["clckwrks-plugin-ircbot", "reform-happstack"], DirectedEdge["clckwrks-plugin-ircbot", "reform-hsp"], DirectedEdge["clckwrks-plugin-ircbot", "safecopy"], DirectedEdge["clckwrks-plugin-ircbot", "text"], DirectedEdge["clckwrks-plugin-ircbot", "web-plugins"], DirectedEdge["clckwrks-plugin-ircbot", "web-routes"], DirectedEdge["clckwrks-plugin-ircbot", "web-routes-th"], DirectedEdge["clckwrks-plugin-media", "acid-state"], DirectedEdge["clckwrks-plugin-media", "attoparsec"], DirectedEdge["clckwrks-plugin-media", "base"], DirectedEdge["clckwrks-plugin-media", "blaze-html"], DirectedEdge["clckwrks-plugin-media", "cereal"], DirectedEdge["clckwrks-plugin-media", "clckwrks"], DirectedEdge["clckwrks-plugin-media", "containers"], DirectedEdge["clckwrks-plugin-media", "directory"], DirectedEdge["clckwrks-plugin-media", "filepath"], DirectedEdge["clckwrks-plugin-media", "gd"], DirectedEdge["clckwrks-plugin-media", "happstack-server"], DirectedEdge["clckwrks-plugin-media", "hsp"], DirectedEdge["clckwrks-plugin-media", "ixset"], DirectedEdge["clckwrks-plugin-media", "magic"], DirectedEdge["clckwrks-plugin-media", "mtl"], DirectedEdge["clckwrks-plugin-media", "reform"], DirectedEdge["clckwrks-plugin-media", "reform-happstack"], DirectedEdge["clckwrks-plugin-media", "reform-hsp"], DirectedEdge["clckwrks-plugin-media", "safecopy"], DirectedEdge["clckwrks-plugin-media", "text"], DirectedEdge["clckwrks-plugin-media", "web-plugins"], DirectedEdge["clckwrks-plugin-media", "web-routes"], DirectedEdge["clckwrks-plugin-media", "web-routes-th"], DirectedEdge["clckwrks-plugin-page", "acid-state"], DirectedEdge["clckwrks-plugin-page", "aeson"], DirectedEdge["clckwrks-plugin-page", "attoparsec"], DirectedEdge["clckwrks-plugin-page", "base"], DirectedEdge["clckwrks-plugin-page", "clckwrks"], DirectedEdge["clckwrks-plugin-page", "containers"], DirectedEdge["clckwrks-plugin-page", "directory"], DirectedEdge["clckwrks-plugin-page", "filepath"], DirectedEdge["clckwrks-plugin-page", "happstack-hsp"], DirectedEdge["clckwrks-plugin-page", "happstack-server"], DirectedEdge["clckwrks-plugin-page", "hsp"], DirectedEdge["clckwrks-plugin-page", "hsx2hs"], DirectedEdge["clckwrks-plugin-page", "ixset"], DirectedEdge["clckwrks-plugin-page", "mtl"], DirectedEdge["clckwrks-plugin-page", "old-locale"], DirectedEdge["clckwrks-plugin-page", "random"], DirectedEdge["clckwrks-plugin-page", "reform"], DirectedEdge["clckwrks-plugin-page", "reform-happstack"], DirectedEdge["clckwrks-plugin-page", "reform-hsp"], DirectedEdge["clckwrks-plugin-page", "safecopy"], DirectedEdge["clckwrks-plugin-page", "tagsoup"], DirectedEdge["clckwrks-plugin-page", "template-haskell"], DirectedEdge["clckwrks-plugin-page", "text"], DirectedEdge["clckwrks-plugin-page", "time"], DirectedEdge["clckwrks-plugin-page", "time-locale-compat"], DirectedEdge["clckwrks-plugin-page", "uuid"], DirectedEdge["clckwrks-plugin-page", "web-plugins"], DirectedEdge["clckwrks-plugin-page", "web-routes"], DirectedEdge["clckwrks-plugin-page", "web-routes-happstack"], DirectedEdge["clckwrks-plugin-page", "web-routes-th"], DirectedEdge["clckwrks-theme-bootstrap", "base"], DirectedEdge["clckwrks-theme-bootstrap", "clckwrks"], DirectedEdge["clckwrks-theme-bootstrap", "happstack-authenticate"], DirectedEdge["clckwrks-theme-bootstrap", "hsp"], DirectedEdge["clckwrks-theme-bootstrap", "hsx-jmacro"], DirectedEdge["clckwrks-theme-bootstrap", "hsx2hs"], DirectedEdge["clckwrks-theme-bootstrap", "jmacro"], DirectedEdge["clckwrks-theme-bootstrap", "mtl"], DirectedEdge["clckwrks-theme-bootstrap", "text"], DirectedEdge["clckwrks-theme-bootstrap", "web-plugins"], DirectedEdge["clckwrks-theme-clckwrks", "base"], DirectedEdge["clckwrks-theme-clckwrks", "clckwrks"], DirectedEdge["clckwrks-theme-clckwrks", "containers"], DirectedEdge["clckwrks-theme-clckwrks", "happstack-authenticate"], DirectedEdge["clckwrks-theme-clckwrks", "hsp"], DirectedEdge["clckwrks-theme-clckwrks", "hsx2hs"], DirectedEdge["clckwrks-theme-clckwrks", "mtl"], DirectedEdge["clckwrks-theme-clckwrks", "text"], DirectedEdge["clckwrks-theme-clckwrks", "web-plugins"], DirectedEdge["clckwrks-theme-geo-bootstrap", "base"], DirectedEdge["clckwrks-theme-geo-bootstrap", "clckwrks"], DirectedEdge["clckwrks-theme-geo-bootstrap", "hsp"], DirectedEdge["clckwrks-theme-geo-bootstrap", "text"], DirectedEdge["cld2", "base"], DirectedEdge["cld2", "bytestring"], DirectedEdge["cld2", "text"], DirectedEdge["clean-home", "base"], DirectedEdge["clean-home", "cmdargs"], DirectedEdge["clean-home", "containers"], DirectedEdge["clean-home", "directory"], DirectedEdge["clean-home", "HSH"], DirectedEdge["clean-home", "IfElse"], DirectedEdge["clean-unions", "base"], DirectedEdge["cless", "base"], DirectedEdge["cless", "highlighting-kate"], DirectedEdge["cless", "optparse-applicative"], DirectedEdge["cless", "process"], DirectedEdge["cless", "terminfo"], DirectedEdge["cless", "wl-pprint-extras"], DirectedEdge["cless", "wl-pprint-terminfo"], DirectedEdge["clevercss", "base"], DirectedEdge["clevercss", "containers"], DirectedEdge["clevercss", "mtl"], DirectedEdge["clevercss", "parsec"], DirectedEdge["cli", "base"], DirectedEdge["cli", "mtl"], DirectedEdge["cli", "terminfo"], DirectedEdge["cli", "transformers"], DirectedEdge["click-clack", "base"], DirectedEdge["click-clack", "containers"], DirectedEdge["click-clack", "GLFW"], DirectedEdge["click-clack", "Hipmunk"], DirectedEdge["click-clack", "MonadRandom"], DirectedEdge["click-clack", "mtl"], DirectedEdge["click-clack", "OpenGL"], DirectedEdge["click-clack", "random"], DirectedEdge["click-clack", "StateVar"], DirectedEdge["click-clack", "transformers"], DirectedEdge["clientsession", "base"], DirectedEdge["clientsession", "base64-bytestring"], DirectedEdge["clientsession", "bytestring"], DirectedEdge["clientsession", "cereal"], DirectedEdge["clientsession", "cipher-aes"], DirectedEdge["clientsession", "clientsession"], DirectedEdge["clientsession", "cprng-aes"], DirectedEdge["clientsession", "crypto-api"], DirectedEdge["clientsession", "crypto-random"], DirectedEdge["clientsession", "directory"], DirectedEdge["clientsession", "entropy"], DirectedEdge["clientsession", "setenv"], DirectedEdge["clientsession", "skein"], DirectedEdge["clientsession", "tagged"], DirectedEdge["clifford", "base"], DirectedEdge["clifford", "cereal"], DirectedEdge["clifford", "Chart"], DirectedEdge["clifford", "Chart-cairo"], DirectedEdge["clifford", "clifford"], DirectedEdge["clifford", "colour"], DirectedEdge["clifford", "converge"], DirectedEdge["clifford", "criterion"], DirectedEdge["clifford", "data-default-class"], DirectedEdge["clifford", "data-ordlist"], DirectedEdge["clifford", "deepseq"], DirectedEdge["clifford", "derive"], DirectedEdge["clifford", "gnuplot"], DirectedEdge["clifford", "hspec"], DirectedEdge["clifford", "lens"], DirectedEdge["clifford", "MemoTrie"], DirectedEdge["clifford", "monoid-extras"], DirectedEdge["clifford", "nats"], DirectedEdge["clifford", "numeric-prelude"], DirectedEdge["clifford", "permutation"], DirectedEdge["clifford", "QuickCheck"], DirectedEdge["clifford", "reflection"], DirectedEdge["clifford", "semigroupoids"], DirectedEdge["clifford", "stream-fusion"], DirectedEdge["clifford", "tagged"], DirectedEdge["clifford", "vector"], DirectedEdge["clippard", "base"], DirectedEdge["clippard", "Clipboard"], DirectedEdge["clippard", "process"], DirectedEdge["clipper", "base"], DirectedEdge["clippings", "base"], DirectedEdge["clippings", "bifunctors"], DirectedEdge["clippings", "bytestring"], DirectedEdge["clippings", "cassava"], DirectedEdge["clippings", "clippings"], DirectedEdge["clippings", "data-default"], DirectedEdge["clippings", "functor-infix"], DirectedEdge["clippings", "old-locale"], DirectedEdge["clippings", "parsec"], DirectedEdge["clippings", "safecopy"], DirectedEdge["clippings", "strptime"], DirectedEdge["clippings", "time"], DirectedEdge["clist", "base"], DirectedEdge["clist", "base-unicode-symbols"], DirectedEdge["clist", "peano"], DirectedEdge["cloben", "base"], DirectedEdge["cloben", "foldl"], DirectedEdge["cloben", "process"], DirectedEdge["cloben", "system-filepath"], DirectedEdge["cloben", "temporary"], DirectedEdge["cloben", "text"], DirectedEdge["cloben", "turtle"], DirectedEdge["clock", "base"], DirectedEdge["clock", "ghc-prim"], DirectedEdge["clocked", "base"], DirectedEdge["clocked", "clock"], DirectedEdge["clocked", "containers"], DirectedEdge["clocked", "MonadCatchIO-transformers"], DirectedEdge["clocked", "time"], DirectedEdge["clocked", "transformers"], DirectedEdge["clogparse", "attoparsec"], DirectedEdge["clogparse", "base"], DirectedEdge["clogparse", "bytestring"], DirectedEdge["clogparse", "filepath"], DirectedEdge["clogparse", "text"], DirectedEdge["clogparse", "time"], DirectedEdge["clogparse", "timezone-olson"], DirectedEdge["clogparse", "timezone-series"], DirectedEdge["clone-all", "aeson"], DirectedEdge["clone-all", "base"], DirectedEdge["clone-all", "bytestring"], DirectedEdge["clone-all", "directory"], DirectedEdge["clone-all", "github"], DirectedEdge["clone-all", "optparse-applicative"], DirectedEdge["clone-all", "process"], DirectedEdge["clone-all", "system-fileio"], DirectedEdge["clone-all", "system-filepath"], DirectedEdge["clone-all", "text"], DirectedEdge["clone-all", "transformers"], DirectedEdge["closure", "base"], DirectedEdge["closure", "hashable"], DirectedEdge["closure", "unordered-containers"], DirectedEdge["cloud-haskell", "distributed-process"], DirectedEdge["cloud-haskell", "distributed-process-async"], DirectedEdge["cloud-haskell", "distributed-process-client-server"], DirectedEdge["cloud-haskell", "distributed-process-execution"], DirectedEdge["cloud-haskell", "distributed-process-extras"], DirectedEdge["cloud-haskell", "distributed-process-supervisor"], DirectedEdge["cloud-haskell", "distributed-process-task"], DirectedEdge["cloud-haskell", "distributed-static"], DirectedEdge["cloud-haskell", "network-transport"], DirectedEdge["cloud-haskell", "rank1dynamic"], DirectedEdge["cloudfront-signer", "asn1-encoding"], DirectedEdge["cloudfront-signer", "asn1-types"], DirectedEdge["cloudfront-signer", "base"], DirectedEdge["cloudfront-signer", "base64-bytestring"], DirectedEdge["cloudfront-signer", "bytestring"], DirectedEdge["cloudfront-signer", "crypto-pubkey-types"], DirectedEdge["cloudfront-signer", "old-locale"], DirectedEdge["cloudfront-signer", "RSA"], DirectedEdge["cloudfront-signer", "time"], DirectedEdge["cloudyfs", "base"], DirectedEdge["cloudyfs", "bytestring"], DirectedEdge["cloudyfs", "containers"], DirectedEdge["cloudyfs", "convertible"], DirectedEdge["cloudyfs", "datetime"], DirectedEdge["cloudyfs", "filepath"], DirectedEdge["cloudyfs", "HFuse"], DirectedEdge["cloudyfs", "HTTP"], DirectedEdge["cloudyfs", "regex-base"], DirectedEdge["cloudyfs", "regex-tdfa"], DirectedEdge["cloudyfs", "tagsoup"], DirectedEdge["cloudyfs", "timerep"], DirectedEdge["cloudyfs", "unix"], DirectedEdge["cltw", "base"], DirectedEdge["cltw", "curl"], DirectedEdge["cltw", "mtl"], DirectedEdge["cltw", "random"], DirectedEdge["cltw", "tagsoup"], DirectedEdge["clua", "base"], DirectedEdge["clua", "bytestring"], DirectedEdge["clua", "containers"], DirectedEdge["clua", "language-c"], DirectedEdge["clua", "pretty"], DirectedEdge["clua", "pretty-show"], DirectedEdge["clumpiness", "base"], DirectedEdge["clumpiness", "containers"], DirectedEdge["clumpiness", "tree-fun"], DirectedEdge["cluss", "base"], DirectedEdge["cluss", "template-haskell"], DirectedEdge["clustering", "base"], DirectedEdge["clustering", "binary"], DirectedEdge["clustering", "containers"], DirectedEdge["clustering", "matrices"], DirectedEdge["clustering", "mwc-random"], DirectedEdge["clustering", "parallel"], DirectedEdge["clustering", "primitive"], DirectedEdge["clustering", "vector"], DirectedEdge["clustertools", "base"], DirectedEdge["clustertools", "bio"], DirectedEdge["clustertools", "bytestring"], DirectedEdge["clustertools", "containers"], DirectedEdge["clustertools", "QuickCheck"], DirectedEdge["clustertools", "regex-compat"], DirectedEdge["clustertools", "simpleargs"], DirectedEdge["clutterhs", "array"], DirectedEdge["clutterhs", "base"], DirectedEdge["clutterhs", "cairo"], DirectedEdge["clutterhs", "glib"], DirectedEdge["clutterhs", "gtk"], DirectedEdge["clutterhs", "mtl"], DirectedEdge["cmaes", "base"], DirectedEdge["cmaes", "mtl"], DirectedEdge["cmaes", "process"], DirectedEdge["cmaes", "safe"], DirectedEdge["cmaes", "strict"], DirectedEdge["cmaes", "syb"], DirectedEdge["cmark", "base"], DirectedEdge["cmark", "bytestring"], DirectedEdge["cmark", "ghc-prim"], DirectedEdge["cmark", "text"], DirectedEdge["cmath", "base"], DirectedEdge["cmathml3", "array"], DirectedEdge["cmathml3", "arrowapply-utils"], DirectedEdge["cmathml3", "base"], DirectedEdge["cmathml3", "Cabal"], DirectedEdge["cmathml3", "containers"], DirectedEdge["cmathml3", "filepath"], DirectedEdge["cmathml3", "hxt"], DirectedEdge["cmathml3", "monads-tf"], DirectedEdge["cmathml3", "parsec"], DirectedEdge["cmathml3", "syb"], DirectedEdge["cmathml3", "transformers"], DirectedEdge["cmathml3", "url"], DirectedEdge["cmd-item", "base"], DirectedEdge["cmd-item", "containers"], DirectedEdge["cmd-item", "templater"], DirectedEdge["cmd-item", "text"], DirectedEdge["cmdargs", "base"], DirectedEdge["cmdargs", "filepath"], DirectedEdge["cmdargs", "process"], DirectedEdge["cmdargs", "template-haskell"], DirectedEdge["cmdargs", "transformers"], DirectedEdge["cmdargs-browser", "base"], DirectedEdge["cmdargs-browser", "bytestring"], DirectedEdge["cmdargs-browser", "cmdargs"], DirectedEdge["cmdargs-browser", "directory"], DirectedEdge["cmdargs-browser", "filepath"], DirectedEdge["cmdargs-browser", "http-types"], DirectedEdge["cmdargs-browser", "process"], DirectedEdge["cmdargs-browser", "text"], DirectedEdge["cmdargs-browser", "transformers"], DirectedEdge["cmdargs-browser", "wai"], DirectedEdge["cmdargs-browser", "wai-handler-launch"], DirectedEdge["cmdlib", "base"], DirectedEdge["cmdlib", "mtl"], DirectedEdge["cmdlib", "split"], DirectedEdge["cmdlib", "syb"], DirectedEdge["cmdlib", "transformers"], DirectedEdge["cmdtheline", "base"], DirectedEdge["cmdtheline", "containers"], DirectedEdge["cmdtheline", "directory"], DirectedEdge["cmdtheline", "filepath"], DirectedEdge["cmdtheline", "parsec"], DirectedEdge["cmdtheline", "pretty"], DirectedEdge["cmdtheline", "process"], DirectedEdge["cmdtheline", "transformers"], DirectedEdge["cml", "base"], DirectedEdge["cmonad", "array"], DirectedEdge["cmonad", "base"], DirectedEdge["cmph", "array"], DirectedEdge["cmph", "base"], DirectedEdge["cmph", "bytestring"], DirectedEdge["cmph", "containers"], DirectedEdge["cmu", "array"], DirectedEdge["cmu", "base"], DirectedEdge["cmu", "containers"], DirectedEdge["cnc-spec-compiler", "ansi-terminal"], DirectedEdge["cnc-spec-compiler", "array"], DirectedEdge["cnc-spec-compiler", "base"], DirectedEdge["cnc-spec-compiler", "binary"], DirectedEdge["cnc-spec-compiler", "bytestring"], DirectedEdge["cnc-spec-compiler", "containers"], DirectedEdge["cnc-spec-compiler", "directory"], DirectedEdge["cnc-spec-compiler", "fgl"], DirectedEdge["cnc-spec-compiler", "filepath"], DirectedEdge["cnc-spec-compiler", "graphviz"], DirectedEdge["cnc-spec-compiler", "HaXml"], DirectedEdge["cnc-spec-compiler", "haxr"], DirectedEdge["cnc-spec-compiler", "hubigraph"], DirectedEdge["cnc-spec-compiler", "HUnit"], DirectedEdge["cnc-spec-compiler", "mtl"], DirectedEdge["cnc-spec-compiler", "parsec"], DirectedEdge["cnc-spec-compiler", "pretty"], DirectedEdge["cnc-spec-compiler", "prettyclass"], DirectedEdge["cnc-spec-compiler", "process"], DirectedEdge["cnc-spec-compiler", "split"], DirectedEdge["cnc-spec-compiler", "stringtable-atom"], DirectedEdge["cnc-spec-compiler", "unix"], DirectedEdge["cnc-spec-compiler", "zlib"], DirectedEdge["cndict", "array"], DirectedEdge["cndict", "base"], DirectedEdge["cndict", "bytestring"], DirectedEdge["cndict", "text"], DirectedEdge["code-builder", "base"], DirectedEdge["code-builder", "containers"], DirectedEdge["codec", "aeson"], DirectedEdge["codec", "base"], DirectedEdge["codec", "binary"], DirectedEdge["codec", "binary-bits"], DirectedEdge["codec", "bytestring"], DirectedEdge["codec", "data-default-class"], DirectedEdge["codec", "mtl"], DirectedEdge["codec", "template-haskell"], DirectedEdge["codec", "text"], DirectedEdge["codec", "transformers"], DirectedEdge["codec", "unordered-containers"], DirectedEdge["codec-libevent", "array"], DirectedEdge["codec-libevent", "base"], DirectedEdge["codec-libevent", "binary"], DirectedEdge["codec-libevent", "binary-strict"], DirectedEdge["codec-libevent", "bytestring"], DirectedEdge["codec-libevent", "containers"], DirectedEdge["codec-libevent", "parsec"], DirectedEdge["codec-libevent", "QuickCheck"], DirectedEdge["codec-libevent", "regex-compat"], DirectedEdge["codec-mbox", "base"], DirectedEdge["codec-mbox", "bytestring"], DirectedEdge["codecov-haskell", "aeson"], DirectedEdge["codecov-haskell", "async"], DirectedEdge["codecov-haskell", "base"], DirectedEdge["codecov-haskell", "bytestring"], DirectedEdge["codecov-haskell", "cmdargs"], DirectedEdge["codecov-haskell", "containers"], DirectedEdge["codecov-haskell", "curl"], DirectedEdge["codecov-haskell", "hpc"], DirectedEdge["codecov-haskell", "process"], DirectedEdge["codecov-haskell", "regex-posix"], DirectedEdge["codecov-haskell", "safe"], DirectedEdge["codecov-haskell", "split"], DirectedEdge["codemonitor", "base"], DirectedEdge["codemonitor", "cairo"], DirectedEdge["codemonitor", "containers"], DirectedEdge["codemonitor", "directory"], DirectedEdge["codemonitor", "filepath"], DirectedEdge["codemonitor", "gtk"], DirectedEdge["codemonitor", "hinotify"], DirectedEdge["codemonitor", "MissingH"], DirectedEdge["codemonitor", "process"], DirectedEdge["codemonitor", "regex-posix"], DirectedEdge["codemonitor", "time"], DirectedEdge["codepad", "base"], DirectedEdge["codepad", "curl"], DirectedEdge["codepad", "mtl"], DirectedEdge["codepad", "network"], DirectedEdge["codepad", "tagsoup"], DirectedEdge["codex", "base"], DirectedEdge["codex", "bytestring"], DirectedEdge["codex", "Cabal"], DirectedEdge["codex", "codex"], DirectedEdge["codex", "containers"], DirectedEdge["codex", "cryptohash"], DirectedEdge["codex", "directory"], DirectedEdge["codex", "either"], DirectedEdge["codex", "filepath"], DirectedEdge["codex", "hackage-db"], DirectedEdge["codex", "http-client"], DirectedEdge["codex", "lens"], DirectedEdge["codex", "machines"], DirectedEdge["codex", "machines-directory"], DirectedEdge["codex", "MissingH"], DirectedEdge["codex", "monad-loops"], DirectedEdge["codex", "network"], DirectedEdge["codex", "process"], DirectedEdge["codex", "tar"], DirectedEdge["codex", "text"], DirectedEdge["codex", "transformers"], DirectedEdge["codex", "wreq"], DirectedEdge["codex", "yaml"], DirectedEdge["codex", "zlib"], DirectedEdge["codo-notation", "base"], DirectedEdge["codo-notation", "comonad"], DirectedEdge["codo-notation", "haskell-src-meta"], DirectedEdge["codo-notation", "parsec"], DirectedEdge["codo-notation", "template-haskell"], DirectedEdge["codo-notation", "uniplate"], DirectedEdge["cofunctor", "contravariant"], DirectedEdge["cofunctor", "base"], DirectedEdge["cognimeta-utils", "array"], DirectedEdge["cognimeta-utils", "base"], DirectedEdge["cognimeta-utils", "bytestring"], DirectedEdge["cognimeta-utils", "cognimeta-utils"], DirectedEdge["cognimeta-utils", "collections-api"], DirectedEdge["cognimeta-utils", "comonad-transformers"], DirectedEdge["cognimeta-utils", "containers"], DirectedEdge["cognimeta-utils", "data-lens"], DirectedEdge["cognimeta-utils", "data-lens-fd"], DirectedEdge["cognimeta-utils", "data-lens-template"], DirectedEdge["cognimeta-utils", "deepseq"], DirectedEdge["cognimeta-utils", "ghc-prim"], DirectedEdge["cognimeta-utils", "mtl"], DirectedEdge["cognimeta-utils", "primitive"], DirectedEdge["cognimeta-utils", "QuickCheck"], DirectedEdge["cognimeta-utils", "stm"], DirectedEdge["cognimeta-utils", "tagged"], DirectedEdge["cognimeta-utils", "template-haskell"], DirectedEdge["cognimeta-utils", "transformers"], DirectedEdge["coin", "aeson"], DirectedEdge["coin", "base"], DirectedEdge["coin", "binary"], DirectedEdge["coin", "bytestring"], DirectedEdge["coin", "containers"], DirectedEdge["coin", "directory"], DirectedEdge["coin", "filepath"], DirectedEdge["coin", "glib"], DirectedEdge["coin", "hgettext"], DirectedEdge["coin", "lens-simple"], DirectedEdge["coin", "monad-control"], DirectedEdge["coin", "monad-logger"], DirectedEdge["coin", "mtl"], DirectedEdge["coin", "persistent"], DirectedEdge["coin", "persistent-sqlite"], DirectedEdge["coin", "persistent-template"], DirectedEdge["coin", "resourcet"], DirectedEdge["coin", "setlocale"], DirectedEdge["coin", "text"], DirectedEdge["coin", "time"], DirectedEdge["coin", "transformers"], DirectedEdge["coinbase-exchange", "aeson"], DirectedEdge["coinbase-exchange", "aeson-casing"], DirectedEdge["coinbase-exchange", "base"], DirectedEdge["coinbase-exchange", "base64-bytestring"], DirectedEdge["coinbase-exchange", "byteable"], DirectedEdge["coinbase-exchange", "bytestring"], DirectedEdge["coinbase-exchange", "coinbase-exchange"], DirectedEdge["coinbase-exchange", "conduit"], DirectedEdge["coinbase-exchange", "conduit-extra"], DirectedEdge["coinbase-exchange", "cryptohash"], DirectedEdge["coinbase-exchange", "deepseq"], DirectedEdge["coinbase-exchange", "exceptions"], DirectedEdge["coinbase-exchange", "hashable"], DirectedEdge["coinbase-exchange", "http-client"], DirectedEdge["coinbase-exchange", "http-client-tls"], DirectedEdge["coinbase-exchange", "http-conduit"], DirectedEdge["coinbase-exchange", "http-types"], DirectedEdge["coinbase-exchange", "mtl"], DirectedEdge["coinbase-exchange", "network"], DirectedEdge["coinbase-exchange", "old-locale"], DirectedEdge["coinbase-exchange", "resourcet"], DirectedEdge["coinbase-exchange", "scientific"], DirectedEdge["coinbase-exchange", "text"], DirectedEdge["coinbase-exchange", "time"], DirectedEdge["coinbase-exchange", "transformers"], DirectedEdge["coinbase-exchange", "transformers-base"], DirectedEdge["coinbase-exchange", "unordered-containers"], DirectedEdge["coinbase-exchange", "uuid"], DirectedEdge["coinbase-exchange", "uuid-aeson"], DirectedEdge["coinbase-exchange", "vector"], DirectedEdge["coinbase-exchange", "websockets"], DirectedEdge["coinbase-exchange", "wuss"], DirectedEdge["colada", "base"], DirectedEdge["colada", "bytestring"], DirectedEdge["colada", "cereal"], DirectedEdge["colada", "cmdargs"], DirectedEdge["colada", "containers"], DirectedEdge["colada", "fclabels"], DirectedEdge["colada", "ghc-prim"], DirectedEdge["colada", "ListZipper"], DirectedEdge["colada", "monad-atom"], DirectedEdge["colada", "mtl"], DirectedEdge["colada", "nlp-scores"], DirectedEdge["colada", "split"], DirectedEdge["colada", "swift-lda"], DirectedEdge["colada", "text"], DirectedEdge["colada", "vector"], DirectedEdge["colchis", "aeson"], DirectedEdge["colchis", "base"], DirectedEdge["colchis", "conceit"], DirectedEdge["colchis", "network"], DirectedEdge["colchis", "network-simple"], DirectedEdge["colchis", "pipes"], DirectedEdge["colchis", "pipes-aeson"], DirectedEdge["colchis", "pipes-attoparsec"], DirectedEdge["colchis", "pipes-network"], DirectedEdge["colchis", "text"], DirectedEdge["colchis", "transformers"], DirectedEdge["collada-output", "base"], DirectedEdge["collada-output", "collada-types"], DirectedEdge["collada-output", "containers"], DirectedEdge["collada-output", "SVGPath"], DirectedEdge["collada-output", "time"], DirectedEdge["collada-output", "vector"], DirectedEdge["collada-output", "xml"], DirectedEdge["collada-types", "base"], DirectedEdge["collada-types", "containers"], DirectedEdge["collada-types", "enumerable"], DirectedEdge["collada-types", "OpenGL"], DirectedEdge["collada-types", "tuple"], DirectedEdge["collada-types", "tuple-gen"], DirectedEdge["collada-types", "vector"], DirectedEdge["collapse-util", "base"], DirectedEdge["collection-json", "aeson"], DirectedEdge["collection-json", "base"], DirectedEdge["collection-json", "bytestring"], DirectedEdge["collection-json", "text"], DirectedEdge["collections", "array"], DirectedEdge["collections", "base"], DirectedEdge["collections", "bytestring"], DirectedEdge["collections", "containers"], DirectedEdge["collections", "QuickCheck"], DirectedEdge["collections-api", "array"], DirectedEdge["collections-api", "base"], DirectedEdge["collections-api", "QuickCheck"], DirectedEdge["collections-base-instances", "array"], DirectedEdge["collections-base-instances", "base"], DirectedEdge["collections-base-instances", "bytestring"], DirectedEdge["collections-base-instances", "collections-api"], DirectedEdge["collections-base-instances", "containers"], DirectedEdge["colock", "base"], DirectedEdge["colock", "unix"], DirectedEdge["color-counter", "aeson"], DirectedEdge["color-counter", "base"], DirectedEdge["color-counter", "cmdargs"], DirectedEdge["color-counter", "colour"], DirectedEdge["color-counter", "containers"], DirectedEdge["color-counter", "data-default"], DirectedEdge["color-counter", "directory"], DirectedEdge["color-counter", "friday"], DirectedEdge["color-counter", "friday-devil"], DirectedEdge["color-counter", "split"], DirectedEdge["color-counter", "vector"], DirectedEdge["color-counter", "vector-space"], DirectedEdge["color-counter", "yaml"], DirectedEdge["colorize-haskell", "ansi-terminal"], DirectedEdge["colorize-haskell", "base"], DirectedEdge["colorize-haskell", "haskell-lexer"], DirectedEdge["colors", "base"], DirectedEdge["colors", "lens"], DirectedEdge["colors", "linear"], DirectedEdge["colors", "profunctors"], DirectedEdge["colour", "base"], DirectedEdge["coltrane", "base"], DirectedEdge["coltrane", "bytestring"], DirectedEdge["coltrane", "HTTP"], DirectedEdge["coltrane", "http-types"], DirectedEdge["coltrane", "HUnit"], DirectedEdge["coltrane", "mtl"], DirectedEdge["coltrane", "regex-compat"], DirectedEdge["coltrane", "text"], DirectedEdge["coltrane", "wai"], DirectedEdge["coltrane", "wai-extra"], DirectedEdge["coltrane", "warp"], DirectedEdge["com", "base"], DirectedEdge["com", "old-time"], DirectedEdge["combinat", "array"], DirectedEdge["combinat", "base"], DirectedEdge["combinat", "containers"], DirectedEdge["combinat", "random"], DirectedEdge["combinat", "transformers"], DirectedEdge["combinat-diagrams", "array"], DirectedEdge["combinat-diagrams", "base"], DirectedEdge["combinat-diagrams", "colour"], DirectedEdge["combinat-diagrams", "combinat"], DirectedEdge["combinat-diagrams", "containers"], DirectedEdge["combinat-diagrams", "diagrams-core"], DirectedEdge["combinat-diagrams", "diagrams-lib"], DirectedEdge["combinat-diagrams", "linear"], DirectedEdge["combinat-diagrams", "transformers"], DirectedEdge["combinator-interactive", "base"], DirectedEdge["combinator-interactive", "bytestring"], DirectedEdge["combinator-interactive", "cereal"], DirectedEdge["combinator-interactive", "combinator-interactive"], DirectedEdge["combinator-interactive", "containers"], DirectedEdge["combinator-interactive", "directory"], DirectedEdge["combinator-interactive", "lens"], DirectedEdge["combinator-interactive", "mtl"], DirectedEdge["combinator-interactive", "template-haskell"], DirectedEdge["combinator-interactive", "th-lift"], DirectedEdge["combinator-interactive", "trifecta"], DirectedEdge["combinator-interactive", "void"], DirectedEdge["combinatorial-problems", "array"], DirectedEdge["combinatorial-problems", "base"], DirectedEdge["combinatorial-problems", "bytestring"], DirectedEdge["combinatorial-problems", "bytestring-lexing"], DirectedEdge["combinatorial-problems", "containers"], DirectedEdge["combinatorial-problems", "parsec"], DirectedEdge["combinatorial-problems", "random"], DirectedEdge["combinatorics", "exact-combinatorics"], DirectedEdge["combinatorics", "base"], DirectedEdge["combobuffer", "base"], DirectedEdge["combobuffer", "containers"], DirectedEdge["combobuffer", "template-haskell"], DirectedEdge["combobuffer", "vector"], DirectedEdge["combobuffer", "vector-space"], DirectedEdge["comfort-graph", "base"], DirectedEdge["comfort-graph", "containers"], DirectedEdge["comfort-graph", "QuickCheck"], DirectedEdge["comfort-graph", "transformers"], DirectedEdge["comfort-graph", "utility-ht"], DirectedEdge["command", "shake"], DirectedEdge["command", "base"], DirectedEdge["command", "deepseq"], DirectedEdge["command", "process"], DirectedEdge["command-qq", "base"], DirectedEdge["command-qq", "process"], DirectedEdge["command-qq", "template-haskell"], DirectedEdge["command-qq", "text"], DirectedEdge["commander", "base"], DirectedEdge["commander", "commander"], DirectedEdge["commander", "containers"], DirectedEdge["commander", "mtl"], DirectedEdge["commander", "transformers"], DirectedEdge["commodities", "base"], DirectedEdge["commodities", "comonad"], DirectedEdge["commodities", "containers"], DirectedEdge["commodities", "distributive"], DirectedEdge["commodities", "keys"], DirectedEdge["commodities", "lens"], DirectedEdge["commodities", "linear"], DirectedEdge["commodities", "mtl"], DirectedEdge["commodities", "numbers"], DirectedEdge["commodities", "PSQueue"], DirectedEdge["commodities", "semigroupoids"], DirectedEdge["commodities", "semigroups"], DirectedEdge["commodities", "text"], DirectedEdge["commodities", "thyme"], DirectedEdge["commodities", "transformers"], DirectedEdge["commsec", "base"], DirectedEdge["commsec", "bytestring"], DirectedEdge["commsec", "crypto-api"], DirectedEdge["commsec", "network"], DirectedEdge["commsec-keyexchange", "base"], DirectedEdge["commsec-keyexchange", "bytestring"], DirectedEdge["commsec-keyexchange", "cereal"], DirectedEdge["commsec-keyexchange", "commsec"], DirectedEdge["commsec-keyexchange", "crypto-api"], DirectedEdge["commsec-keyexchange", "crypto-pubkey-types"], DirectedEdge["commsec-keyexchange", "cryptohash-cryptoapi"], DirectedEdge["commsec-keyexchange", "DRBG"], DirectedEdge["commsec-keyexchange", "monadcryptorandom"], DirectedEdge["commsec-keyexchange", "network"], DirectedEdge["commsec-keyexchange", "RSA"], DirectedEdge["commutative", "base"], DirectedEdge["commutative", "random"], DirectedEdge["commutative", "semigroups"], DirectedEdge["comonad", "base"], DirectedEdge["comonad", "containers"], DirectedEdge["comonad", "contravariant"], DirectedEdge["comonad", "distributive"], DirectedEdge["comonad", "semigroups"], DirectedEdge["comonad", "tagged"], DirectedEdge["comonad", "transformers"], DirectedEdge["comonad", "transformers-compat"], DirectedEdge["comonad-extras", "array"], DirectedEdge["comonad-extras", "base"], DirectedEdge["comonad-extras", "comonad"], DirectedEdge["comonad-extras", "containers"], DirectedEdge["comonad-extras", "distributive"], DirectedEdge["comonad-extras", "semigroupoids"], DirectedEdge["comonad-extras", "transformers"], DirectedEdge["comonad-random", "base"], DirectedEdge["comonad-random", "category-extras"], DirectedEdge["comonad-random", "random"], DirectedEdge["comonad-transformers", "comonad"], DirectedEdge["comonad-transformers", "base"], DirectedEdge["comonad-transformers", "comonad"], DirectedEdge["comonads-fd", "comonad"], DirectedEdge["comonads-fd", "base"], DirectedEdge["comonads-fd", "comonad"], DirectedEdge["compact-map", "array"], DirectedEdge["compact-map", "base"], DirectedEdge["compact-map", "binary"], DirectedEdge["compact-map", "bytestring"], DirectedEdge["compact-map", "containers"], DirectedEdge["compact-socket", "base"], DirectedEdge["compact-socket", "binary"], DirectedEdge["compact-socket", "bytestring"], DirectedEdge["compact-socket", "compact"], DirectedEdge["compact-socket", "deepseq"], DirectedEdge["compact-socket", "directory"], DirectedEdge["compact-socket", "filepath"], DirectedEdge["compact-socket", "network"], DirectedEdge["compact-socket", "unix"], DirectedEdge["compact-string", "text"], DirectedEdge["compact-string", "base"], DirectedEdge["compact-string", "bytestring"], DirectedEdge["compact-string-fix", "base"], DirectedEdge["compact-string-fix", "bytestring"], DirectedEdge["compactmap", "base"], DirectedEdge["compactmap", "vector"], DirectedEdge["compare-type", "base"], DirectedEdge["compdata", "base"], DirectedEdge["compdata", "containers"], DirectedEdge["compdata", "deepseq"], DirectedEdge["compdata", "derive"], DirectedEdge["compdata", "mtl"], DirectedEdge["compdata", "QuickCheck"], DirectedEdge["compdata", "template-haskell"], DirectedEdge["compdata", "th-expand-syns"], DirectedEdge["compdata", "transformers"], DirectedEdge["compdata", "tree-view"], DirectedEdge["compdata-automata", "base"], DirectedEdge["compdata-automata", "compdata"], DirectedEdge["compdata-automata", "containers"], DirectedEdge["compdata-automata", "projection"], DirectedEdge["compdata-dags", "base"], DirectedEdge["compdata-dags", "compdata"], DirectedEdge["compdata-dags", "containers"], DirectedEdge["compdata-dags", "mtl"], DirectedEdge["compdata-dags", "unordered-containers"], DirectedEdge["compdata-dags", "vector"], DirectedEdge["compdata-param", "base"], DirectedEdge["compdata-param", "compdata"], DirectedEdge["compdata-param", "mtl"], DirectedEdge["compdata-param", "template-haskell"], DirectedEdge["compdata-param", "transformers"], DirectedEdge["compensated", "base"], DirectedEdge["compensated", "bifunctors"], DirectedEdge["compensated", "binary"], DirectedEdge["compensated", "bytes"], DirectedEdge["compensated", "cereal"], DirectedEdge["compensated", "comonad"], DirectedEdge["compensated", "deepseq"], DirectedEdge["compensated", "distributive"], DirectedEdge["compensated", "generic-deriving"], DirectedEdge["compensated", "hashable"], DirectedEdge["compensated", "lens"], DirectedEdge["compensated", "log-domain"], DirectedEdge["compensated", "safecopy"], DirectedEdge["compensated", "semigroupoids"], DirectedEdge["compensated", "semigroups"], DirectedEdge["compensated", "vector"], DirectedEdge["competition", "base"], DirectedEdge["competition", "filepath"], DirectedEdge["competition", "parsec"], DirectedEdge["compilation", "base"], DirectedEdge["compilation", "MissingH"], DirectedEdge["complex-generic", "base"], DirectedEdge["complex-generic", "template-haskell"], DirectedEdge["complex-integrate", "base"], DirectedEdge["complexity", "base"], DirectedEdge["complexity", "Chart"], DirectedEdge["complexity", "colour"], DirectedEdge["complexity", "data-accessor"], DirectedEdge["complexity", "hstats"], DirectedEdge["complexity", "parallel"], DirectedEdge["complexity", "pretty"], DirectedEdge["complexity", "time"], DirectedEdge["complexity", "transformers"], DirectedEdge["compose-ltr", "base"], DirectedEdge["compose-trans", "base"], DirectedEdge["compose-trans", "mtl"], DirectedEdge["composition-extra", "base"], DirectedEdge["composition-extra", "composition"], DirectedEdge["composition-extra", "contravariant"], DirectedEdge["composition-tree", "base"], DirectedEdge["compressed", "base"], DirectedEdge["compressed", "comonad"], DirectedEdge["compressed", "containers"], DirectedEdge["compressed", "fingertree"], DirectedEdge["compressed", "hashable"], DirectedEdge["compressed", "keys"], DirectedEdge["compressed", "pointed"], DirectedEdge["compressed", "reducers"], DirectedEdge["compressed", "semigroupoids"], DirectedEdge["compressed", "semigroups"], DirectedEdge["compressed", "unordered-containers"], DirectedEdge["compression", "base"], DirectedEdge["compression", "mtl"], DirectedEdge["compstrat", "base"], DirectedEdge["compstrat", "compdata"], DirectedEdge["compstrat", "mtl"], DirectedEdge["compstrat", "template-haskell"], DirectedEdge["compstrat", "th-expand-syns"], DirectedEdge["compstrat", "transformers"], DirectedEdge["comptrans", "base"], DirectedEdge["comptrans", "compdata"], DirectedEdge["comptrans", "containers"], DirectedEdge["comptrans", "deepseq"], DirectedEdge["comptrans", "deepseq-generics"], DirectedEdge["comptrans", "ghc-prim"], DirectedEdge["comptrans", "lens"], DirectedEdge["comptrans", "template-haskell"], DirectedEdge["comptrans", "th-expand-syns"], DirectedEdge["computational-algebra", "algebra"], DirectedEdge["computational-algebra", "base"], DirectedEdge["computational-algebra", "containers"], DirectedEdge["computational-algebra", "equational-reasoning"], DirectedEdge["computational-algebra", "heaps"], DirectedEdge["computational-algebra", "lens"], DirectedEdge["computational-algebra", "monad-loops"], DirectedEdge["computational-algebra", "monomorphic"], DirectedEdge["computational-algebra", "peggy"], DirectedEdge["computational-algebra", "singletons"], DirectedEdge["computational-algebra", "sized-vector"], DirectedEdge["computational-algebra", "tagged"], DirectedEdge["computational-algebra", "type-natural"], DirectedEdge["computations", "base"], DirectedEdge["concatenative", "base"], DirectedEdge["concatenative", "template-haskell"], DirectedEdge["conceit", "base"], DirectedEdge["conceit", "bifunctors"], DirectedEdge["conceit", "semigroupoids"], DirectedEdge["conceit", "semigroups"], DirectedEdge["conceit", "void"], DirectedEdge["concorde", "base"], DirectedEdge["concorde", "containers"], DirectedEdge["concorde", "process"], DirectedEdge["concorde", "safe"], DirectedEdge["concorde", "temporary"], DirectedEdge["concraft", "aeson"], DirectedEdge["concraft", "array"], DirectedEdge["concraft", "base"], DirectedEdge["concraft", "binary"], DirectedEdge["concraft", "bytestring"], DirectedEdge["concraft", "cmdargs"], DirectedEdge["concraft", "comonad"], DirectedEdge["concraft", "containers"], DirectedEdge["concraft", "crf-chain1-constrained"], DirectedEdge["concraft", "crf-chain2-tiers"], DirectedEdge["concraft", "data-lens"], DirectedEdge["concraft", "lazy-io"], DirectedEdge["concraft", "logfloat"], DirectedEdge["concraft", "monad-codec"], DirectedEdge["concraft", "monad-ox"], DirectedEdge["concraft", "sgd"], DirectedEdge["concraft", "tagset-positional"], DirectedEdge["concraft", "temporary"], DirectedEdge["concraft", "text"], DirectedEdge["concraft", "text-binary"], DirectedEdge["concraft", "transformers"], DirectedEdge["concraft", "vector"], DirectedEdge["concraft", "vector-binary"], DirectedEdge["concraft", "zlib"], DirectedEdge["concraft-hr", "aeson"], DirectedEdge["concraft-hr", "base"], DirectedEdge["concraft-hr", "binary"], DirectedEdge["concraft-hr", "bytestring"], DirectedEdge["concraft-hr", "cmdargs"], DirectedEdge["concraft-hr", "concraft"], DirectedEdge["concraft-hr", "containers"], DirectedEdge["concraft-hr", "double-conversion"], DirectedEdge["concraft-hr", "lazy-io"], DirectedEdge["concraft-hr", "moan"], DirectedEdge["concraft-hr", "network"], DirectedEdge["concraft-hr", "sgd"], DirectedEdge["concraft-hr", "split"], DirectedEdge["concraft-hr", "tagset-positional"], DirectedEdge["concraft-hr", "text"], DirectedEdge["concraft-pl", "aeson"], DirectedEdge["concraft-pl", "base"], DirectedEdge["concraft-pl", "binary"], DirectedEdge["concraft-pl", "bytestring"], DirectedEdge["concraft-pl", "cmdargs"], DirectedEdge["concraft-pl", "concraft"], DirectedEdge["concraft-pl", "containers"], DirectedEdge["concraft-pl", "lazy-io"], DirectedEdge["concraft-pl", "mtl"], DirectedEdge["concraft-pl", "network"], DirectedEdge["concraft-pl", "process"], DirectedEdge["concraft-pl", "sgd"], DirectedEdge["concraft-pl", "split"], DirectedEdge["concraft-pl", "tagset-positional"], DirectedEdge["concraft-pl", "text"], DirectedEdge["concraft-pl", "transformers"], DirectedEdge["concrete-relaxng-parser", "base"], DirectedEdge["concrete-relaxng-parser", "cmdargs"], DirectedEdge["concrete-relaxng-parser", "containers"], DirectedEdge["concrete-relaxng-parser", "hxt"], DirectedEdge["concrete-relaxng-parser", "hxt-charproperties"], DirectedEdge["concrete-relaxng-parser", "hxt-curl"], DirectedEdge["concrete-relaxng-parser", "hxt-relaxng"], DirectedEdge["concrete-relaxng-parser", "hxt-tagsoup"], DirectedEdge["concrete-typerep", "base"], DirectedEdge["concrete-typerep", "binary"], DirectedEdge["concrete-typerep", "ghc"], DirectedEdge["concrete-typerep", "hashable"], DirectedEdge["concurrent-barrier", "base"], DirectedEdge["concurrent-dns-cache", "array"], DirectedEdge["concurrent-dns-cache", "async"], DirectedEdge["concurrent-dns-cache", "base"], DirectedEdge["concurrent-dns-cache", "bytestring"], DirectedEdge["concurrent-dns-cache", "containers"], DirectedEdge["concurrent-dns-cache", "dns"], DirectedEdge["concurrent-dns-cache", "hashable"], DirectedEdge["concurrent-dns-cache", "iproute"], DirectedEdge["concurrent-dns-cache", "network"], DirectedEdge["concurrent-dns-cache", "stm"], DirectedEdge["concurrent-dns-cache", "time"], DirectedEdge["concurrent-extra", "base"], DirectedEdge["concurrent-extra", "stm"], DirectedEdge["concurrent-extra", "unbounded-delays"], DirectedEdge["concurrent-machines", "async"], DirectedEdge["concurrent-machines", "base"], DirectedEdge["concurrent-machines", "containers"], DirectedEdge["concurrent-machines", "lifted-async"], DirectedEdge["concurrent-machines", "machines"], DirectedEdge["concurrent-machines", "monad-control"], DirectedEdge["concurrent-machines", "semigroups"], DirectedEdge["concurrent-machines", "time"], DirectedEdge["concurrent-machines", "transformers"], DirectedEdge["concurrent-machines", "transformers-base"], DirectedEdge["concurrent-output", "ansi-terminal"], DirectedEdge["concurrent-output", "async"], DirectedEdge["concurrent-output", "base"], DirectedEdge["concurrent-output", "directory"], DirectedEdge["concurrent-output", "exceptions"], DirectedEdge["concurrent-output", "process"], DirectedEdge["concurrent-output", "stm"], DirectedEdge["concurrent-output", "terminal-size"], DirectedEdge["concurrent-output", "text"], DirectedEdge["concurrent-output", "transformers"], DirectedEdge["concurrent-output", "unix"], DirectedEdge["concurrent-rpc", "base"], DirectedEdge["concurrent-sa", "base"], DirectedEdge["concurrent-sa", "MonadRandom"], DirectedEdge["concurrent-split", "base"], DirectedEdge["concurrent-state", "base"], DirectedEdge["concurrent-state", "exceptions"], DirectedEdge["concurrent-state", "mtl"], DirectedEdge["concurrent-state", "stm"], DirectedEdge["concurrent-state", "transformers"], DirectedEdge["concurrent-supply", "base"], DirectedEdge["concurrent-supply", "ghc-prim"], DirectedEdge["concurrent-supply", "hashable"], DirectedEdge["concurrent-utilities", "base"], DirectedEdge["concurrentoutput", "concurrent-output"], DirectedEdge["concurrentoutput", "base"], DirectedEdge["cond", "base"], DirectedEdge["condor", "base"], DirectedEdge["condor", "binary"], DirectedEdge["condor", "containers"], DirectedEdge["condor", "directory"], DirectedEdge["condor", "filepath"], DirectedEdge["condor", "glider-nlp"], DirectedEdge["condor", "text"], DirectedEdge["condorcet", "array"], DirectedEdge["condorcet", "base"], DirectedEdge["conductive-base", "array"], DirectedEdge["conductive-base", "base"], DirectedEdge["conductive-base", "containers"], DirectedEdge["conductive-base", "random"], DirectedEdge["conductive-base", "stm"], DirectedEdge["conductive-base", "time"], DirectedEdge["conductive-hsc3", "base"], DirectedEdge["conductive-hsc3", "conductive-base"], DirectedEdge["conductive-hsc3", "conductive-song"], DirectedEdge["conductive-hsc3", "containers"], DirectedEdge["conductive-hsc3", "directory"], DirectedEdge["conductive-hsc3", "filepath"], DirectedEdge["conductive-hsc3", "hosc"], DirectedEdge["conductive-hsc3", "random"], DirectedEdge["conductive-song", "base"], DirectedEdge["conductive-song", "conductive-base"], DirectedEdge["conductive-song", "random"], DirectedEdge["conduit", "base"], DirectedEdge["conduit", "exceptions"], DirectedEdge["conduit", "lifted-base"], DirectedEdge["conduit", "mmorph"], DirectedEdge["conduit", "mtl"], DirectedEdge["conduit", "resourcet"], DirectedEdge["conduit", "transformers"], DirectedEdge["conduit", "transformers-base"], DirectedEdge["conduit", "void"], DirectedEdge["conduit-audio", "base"], DirectedEdge["conduit-audio", "conduit"], DirectedEdge["conduit-audio", "vector"], DirectedEdge["conduit-audio-lame", "base"], DirectedEdge["conduit-audio-lame", "bytestring"], DirectedEdge["conduit-audio-lame", "conduit"], DirectedEdge["conduit-audio-lame", "conduit-audio"], DirectedEdge["conduit-audio-lame", "resourcet"], DirectedEdge["conduit-audio-lame", "transformers"], DirectedEdge["conduit-audio-lame", "vector"], DirectedEdge["conduit-audio-samplerate", "base"], DirectedEdge["conduit-audio-samplerate", "conduit"], DirectedEdge["conduit-audio-samplerate", "conduit-audio"], DirectedEdge["conduit-audio-samplerate", "resourcet"], DirectedEdge["conduit-audio-samplerate", "transformers"], DirectedEdge["conduit-audio-samplerate", "vector"], DirectedEdge["conduit-audio-sndfile", "base"], DirectedEdge["conduit-audio-sndfile", "conduit"], DirectedEdge["conduit-audio-sndfile", "conduit-audio"], DirectedEdge["conduit-audio-sndfile", "hsndfile"], DirectedEdge["conduit-audio-sndfile", "hsndfile-vector"], DirectedEdge["conduit-audio-sndfile", "resourcet"], DirectedEdge["conduit-audio-sndfile", "transformers"], DirectedEdge["conduit-combinators", "base"], DirectedEdge["conduit-combinators", "base16-bytestring"], DirectedEdge["conduit-combinators", "base64-bytestring"], DirectedEdge["conduit-combinators", "bytestring"], DirectedEdge["conduit-combinators", "chunked-data"], DirectedEdge["conduit-combinators", "conduit"], DirectedEdge["conduit-combinators", "conduit-extra"], DirectedEdge["conduit-combinators", "filepath"], DirectedEdge["conduit-combinators", "monad-control"], DirectedEdge["conduit-combinators", "mono-traversable"], DirectedEdge["conduit-combinators", "mwc-random"], DirectedEdge["conduit-combinators", "primitive"], DirectedEdge["conduit-combinators", "resourcet"], DirectedEdge["conduit-combinators", "text"], DirectedEdge["conduit-combinators", "transformers"], DirectedEdge["conduit-combinators", "transformers-base"], DirectedEdge["conduit-combinators", "unix"], DirectedEdge["conduit-combinators", "unix-compat"], DirectedEdge["conduit-combinators", "vector"], DirectedEdge["conduit-combinators", "void"], DirectedEdge["conduit-connection", "base"], DirectedEdge["conduit-connection", "bytestring"], DirectedEdge["conduit-connection", "conduit"], DirectedEdge["conduit-connection", "connection"], DirectedEdge["conduit-connection", "resourcet"], DirectedEdge["conduit-connection", "transformers"], DirectedEdge["conduit-extra", "async"], DirectedEdge["conduit-extra", "attoparsec"], DirectedEdge["conduit-extra", "base"], DirectedEdge["conduit-extra", "blaze-builder"], DirectedEdge["conduit-extra", "bytestring"], DirectedEdge["conduit-extra", "conduit"], DirectedEdge["conduit-extra", "directory"], DirectedEdge["conduit-extra", "exceptions"], DirectedEdge["conduit-extra", "filepath"], DirectedEdge["conduit-extra", "monad-control"], DirectedEdge["conduit-extra", "network"], DirectedEdge["conduit-extra", "primitive"], DirectedEdge["conduit-extra", "process"], DirectedEdge["conduit-extra", "resourcet"], DirectedEdge["conduit-extra", "stm"], DirectedEdge["conduit-extra", "streaming-commons"], DirectedEdge["conduit-extra", "text"], DirectedEdge["conduit-extra", "transformers"], DirectedEdge["conduit-extra", "transformers-base"], DirectedEdge["conduit-iconv", "base"], DirectedEdge["conduit-iconv", "bytestring"], DirectedEdge["conduit-iconv", "conduit"], DirectedEdge["conduit-network-stream", "base"], DirectedEdge["conduit-network-stream", "bytestring"], DirectedEdge["conduit-network-stream", "conduit"], DirectedEdge["conduit-network-stream", "mtl"], DirectedEdge["conduit-network-stream", "network-conduit"], DirectedEdge["conduit-network-stream", "resourcet"], DirectedEdge["conduit-parse", "base"], DirectedEdge["conduit-parse", "conduit"], DirectedEdge["conduit-parse", "dlist"], DirectedEdge["conduit-parse", "exceptions"], DirectedEdge["conduit-parse", "mtl"], DirectedEdge["conduit-parse", "parsers"], DirectedEdge["conduit-parse", "text"], DirectedEdge["conduit-parse", "transformers"], DirectedEdge["conduit-resumablesink", "base"], DirectedEdge["conduit-resumablesink", "conduit"], DirectedEdge["conduit-resumablesink", "void"], DirectedEdge["conduit-tokenize-attoparsec", "attoparsec"], DirectedEdge["conduit-tokenize-attoparsec", "base"], DirectedEdge["conduit-tokenize-attoparsec", "bytestring"], DirectedEdge["conduit-tokenize-attoparsec", "conduit"], DirectedEdge["conduit-tokenize-attoparsec", "conduit-tokenize-attoparsec"], DirectedEdge["conduit-tokenize-attoparsec", "resourcet"], DirectedEdge["conduit-tokenize-attoparsec", "text"], DirectedEdge["conf", "base"], DirectedEdge["conf", "haskell-src"], DirectedEdge["config-manager", "base"], DirectedEdge["config-manager", "filepath"], DirectedEdge["config-manager", "parsec"], DirectedEdge["config-manager", "text"], DirectedEdge["config-manager", "time"], DirectedEdge["config-manager", "unordered-containers"], DirectedEdge["config-select", "base"], DirectedEdge["config-select", "directory"], DirectedEdge["config-select", "filepath"], DirectedEdge["config-select", "unix"], DirectedEdge["config-select", "vty-menu"], DirectedEdge["config-value", "array"], DirectedEdge["config-value", "base"], DirectedEdge["config-value", "pretty"], DirectedEdge["config-value", "text"], DirectedEdge["config-value", "transformers"], DirectedEdge["config-value-getopt", "base"], DirectedEdge["config-value-getopt", "config-value"], DirectedEdge["config-value-getopt", "text"], DirectedEdge["configifier", "base"], DirectedEdge["configifier", "bytestring"], DirectedEdge["configifier", "case-insensitive"], DirectedEdge["configifier", "configifier"], DirectedEdge["configifier", "containers"], DirectedEdge["configifier", "directory"], DirectedEdge["configifier", "either"], DirectedEdge["configifier", "functor-infix"], DirectedEdge["configifier", "mtl"], DirectedEdge["configifier", "pretty-show"], DirectedEdge["configifier", "safe"], DirectedEdge["configifier", "string-conversions"], DirectedEdge["configifier", "template-haskell"], DirectedEdge["configifier", "text"], DirectedEdge["configifier", "unordered-containers"], DirectedEdge["configifier", "vector"], DirectedEdge["configifier", "yaml"], DirectedEdge["configuration", "base"], DirectedEdge["configuration", "containers"], DirectedEdge["configuration-tools", "aeson"], DirectedEdge["configuration-tools", "ansi-wl-pprint"], DirectedEdge["configuration-tools", "attoparsec"], DirectedEdge["configuration-tools", "base"], DirectedEdge["configuration-tools", "base-unicode-symbols"], DirectedEdge["configuration-tools", "base64-bytestring"], DirectedEdge["configuration-tools", "bytestring"], DirectedEdge["configuration-tools", "Cabal"], DirectedEdge["configuration-tools", "case-insensitive"], DirectedEdge["configuration-tools", "connection"], DirectedEdge["configuration-tools", "data-default"], DirectedEdge["configuration-tools", "deepseq"], DirectedEdge["configuration-tools", "directory"], DirectedEdge["configuration-tools", "dlist"], DirectedEdge["configuration-tools", "enclosed-exceptions"], DirectedEdge["configuration-tools", "filepath"], DirectedEdge["configuration-tools", "http-client"], DirectedEdge["configuration-tools", "http-client-tls"], DirectedEdge["configuration-tools", "http-types"], DirectedEdge["configuration-tools", "monad-control"], DirectedEdge["configuration-tools", "mtl"], DirectedEdge["configuration-tools", "mtl-compat"], DirectedEdge["configuration-tools", "network-uri"], DirectedEdge["configuration-tools", "optparse-applicative"], DirectedEdge["configuration-tools", "process"], DirectedEdge["configuration-tools", "profunctors"], DirectedEdge["configuration-tools", "text"], DirectedEdge["configuration-tools", "tls"], DirectedEdge["configuration-tools", "transformers"], DirectedEdge["configuration-tools", "transformers-compat"], DirectedEdge["configuration-tools", "unordered-containers"], DirectedEdge["configuration-tools", "x509-system"], DirectedEdge["configuration-tools", "x509-validation"], DirectedEdge["configuration-tools", "yaml"], DirectedEdge["configurator", "attoparsec"], DirectedEdge["configurator", "base"], DirectedEdge["configurator", "bytestring"], DirectedEdge["configurator", "directory"], DirectedEdge["configurator", "hashable"], DirectedEdge["configurator", "text"], DirectedEdge["configurator", "unix-compat"], DirectedEdge["configurator", "unordered-containers"], DirectedEdge["configurator-export", "base"], DirectedEdge["configurator-export", "base-compat"], DirectedEdge["configurator-export", "bifunctors"], DirectedEdge["configurator-export", "configurator"], DirectedEdge["configurator-export", "pretty"], DirectedEdge["configurator-export", "semigroups"], DirectedEdge["configurator-export", "text"], DirectedEdge["configurator-export", "unordered-containers"], DirectedEdge["confsolve", "attoparsec"], DirectedEdge["confsolve", "base"], DirectedEdge["confsolve", "cmdargs"], DirectedEdge["confsolve", "process"], DirectedEdge["confsolve", "system-fileio"], DirectedEdge["confsolve", "system-filepath"], DirectedEdge["confsolve", "text"], DirectedEdge["confsolve", "time"], DirectedEdge["confsolve", "unordered-containers"], DirectedEdge["congruence-relation", "array"], DirectedEdge["congruence-relation", "base"], DirectedEdge["congruence-relation", "containers"], DirectedEdge["conjugateGradient", "base"], DirectedEdge["conjugateGradient", "containers"], DirectedEdge["conjugateGradient", "random"], DirectedEdge["conjure", "array"], DirectedEdge["conjure", "base"], DirectedEdge["conjure", "bytestring"], DirectedEdge["conjure", "containers"], DirectedEdge["conjure", "filepath"], DirectedEdge["conjure", "html"], DirectedEdge["conjure", "HTTP"], DirectedEdge["conjure", "mtl"], DirectedEdge["conjure", "network"], DirectedEdge["conjure", "old-time"], DirectedEdge["conjure", "parsec"], DirectedEdge["conjure", "pretty"], DirectedEdge["conjure", "random"], DirectedEdge["conjure", "stm"], DirectedEdge["conjure", "unix"], DirectedEdge["conlogger", "base"], DirectedEdge["conlogger", "conlogger"], DirectedEdge["conlogger", "text"], DirectedEdge["connection", "base"], DirectedEdge["connection", "byteable"], DirectedEdge["connection", "bytestring"], DirectedEdge["connection", "containers"], DirectedEdge["connection", "data-default-class"], DirectedEdge["connection", "network"], DirectedEdge["connection", "socks"], DirectedEdge["connection", "tls"], DirectedEdge["connection", "x509-store"], DirectedEdge["connection", "x509-system"], DirectedEdge["connection", "x509-validation"], DirectedEdge["connection-pool", "base"], DirectedEdge["connection-pool", "between"], DirectedEdge["connection-pool", "data-default-class"], DirectedEdge["connection-pool", "monad-control"], DirectedEdge["connection-pool", "network"], DirectedEdge["connection-pool", "resource-pool"], DirectedEdge["connection-pool", "streaming-commons"], DirectedEdge["connection-pool", "time"], DirectedEdge["connection-pool", "transformers-base"], DirectedEdge["consistent", "base"], DirectedEdge["consistent", "lifted-async"], DirectedEdge["consistent", "lifted-base"], DirectedEdge["consistent", "monad-control"], DirectedEdge["consistent", "stm"], DirectedEdge["consistent", "transformers"], DirectedEdge["consistent", "transformers-base"], DirectedEdge["consistent", "unordered-containers"], DirectedEdge["console-program", "ansi-terminal"], DirectedEdge["console-program", "ansi-wl-pprint"], DirectedEdge["console-program", "base"], DirectedEdge["console-program", "containers"], DirectedEdge["console-program", "directory"], DirectedEdge["console-program", "haskeline"], DirectedEdge["console-program", "parsec"], DirectedEdge["console-program", "parsec-extra"], DirectedEdge["console-program", "split"], DirectedEdge["console-program", "transformers"], DirectedEdge["console-program", "unix"], DirectedEdge["console-program", "utility-ht"], DirectedEdge["const-math-ghc-plugin", "base"], DirectedEdge["const-math-ghc-plugin", "containers"], DirectedEdge["const-math-ghc-plugin", "ghc"], DirectedEdge["constrained-categories", "base"], DirectedEdge["constrained-categories", "tagged"], DirectedEdge["constrained-categories", "void"], DirectedEdge["constrained-normal", "base"], DirectedEdge["constraint-classes", "base"], DirectedEdge["constraints", "base"], DirectedEdge["constraints", "binary"], DirectedEdge["constraints", "deepseq"], DirectedEdge["constraints", "ghc-prim"], DirectedEdge["constraints", "hashable"], DirectedEdge["constraints", "mtl"], DirectedEdge["constraints", "newtype"], DirectedEdge["constraints", "tagged"], DirectedEdge["constraints", "transformers"], DirectedEdge["constraints", "transformers-compat"], DirectedEdge["constructible", "arithmoi"], DirectedEdge["constructible", "base"], DirectedEdge["constructible", "binary-search"], DirectedEdge["constructible", "complex-generic"], DirectedEdge["constructive-algebra", "base"], DirectedEdge["constructive-algebra", "QuickCheck"], DirectedEdge["constructive-algebra", "type-level"], DirectedEdge["consul-haskell", "aeson"], DirectedEdge["consul-haskell", "base"], DirectedEdge["consul-haskell", "base64-bytestring"], DirectedEdge["consul-haskell", "bytestring"], DirectedEdge["consul-haskell", "connection"], DirectedEdge["consul-haskell", "either"], DirectedEdge["consul-haskell", "http-client"], DirectedEdge["consul-haskell", "http-client-tls"], DirectedEdge["consul-haskell", "http-types"], DirectedEdge["consul-haskell", "lifted-async"], DirectedEdge["consul-haskell", "lifted-base"], DirectedEdge["consul-haskell", "monad-control"], DirectedEdge["consul-haskell", "network"], DirectedEdge["consul-haskell", "stm"], DirectedEdge["consul-haskell", "text"], DirectedEdge["consul-haskell", "transformers"], DirectedEdge["consumers", "base"], DirectedEdge["consumers", "containers"], DirectedEdge["consumers", "exceptions"], DirectedEdge["consumers", "hpqtypes"], DirectedEdge["consumers", "lifted-base"], DirectedEdge["consumers", "lifted-threads"], DirectedEdge["consumers", "log"], DirectedEdge["consumers", "monad-control"], DirectedEdge["consumers", "mtl"], DirectedEdge["consumers", "stm"], DirectedEdge["consumers", "time"], DirectedEdge["consumers", "transformers-base"], DirectedEdge["container", "base"], DirectedEdge["container", "containers"], DirectedEdge["container", "data-default"], DirectedEdge["container", "data-layer"], DirectedEdge["container", "functor-utils"], DirectedEdge["container", "lens"], DirectedEdge["container", "lens-utils"], DirectedEdge["container", "mtl"], DirectedEdge["container", "template-haskell"], DirectedEdge["container", "text"], DirectedEdge["container", "transformers"], DirectedEdge["container", "transformers-base"], DirectedEdge["container", "typelevel"], DirectedEdge["container", "vector"], DirectedEdge["container-builder", "base"], DirectedEdge["container-builder", "vector"], DirectedEdge["container-classes", "base"], DirectedEdge["containers", "array"], DirectedEdge["containers", "base"], DirectedEdge["containers", "deepseq"], DirectedEdge["containers", "ghc-prim"], DirectedEdge["containers-benchmark", "base"], DirectedEdge["containers-benchmark", "bytestring"], DirectedEdge["containers-benchmark", "containers"], DirectedEdge["containers-benchmark", "criterion"], DirectedEdge["containers-benchmark", "deepseq"], DirectedEdge["containers-benchmark", "ghc-prim"], DirectedEdge["containers-benchmark", "random"], DirectedEdge["containers-deepseq", "containers"], DirectedEdge["containers-deepseq", "base"], DirectedEdge["containers-deepseq", "containers"], DirectedEdge["containers-deepseq", "deepseq"], DirectedEdge["containers-unicode-symbols", "base"], DirectedEdge["containers-unicode-symbols", "base-unicode-symbols"], DirectedEdge["containers-unicode-symbols", "containers"], DirectedEdge["context-free-grammar", "array"], DirectedEdge["context-free-grammar", "base"], DirectedEdge["context-free-grammar", "containers"], DirectedEdge["context-free-grammar", "control-monad-omega"], DirectedEdge["context-free-grammar", "dlist"], DirectedEdge["context-free-grammar", "mtl"], DirectedEdge["context-free-grammar", "pretty"], DirectedEdge["context-free-grammar", "template-haskell"], DirectedEdge["context-stack", "base"], DirectedEdge["context-stack", "classy-prelude"], DirectedEdge["context-stack", "mtl"], DirectedEdge["context-stack", "unordered-containers"], DirectedEdge["continue", "base"], DirectedEdge["continue", "bifunctors"], DirectedEdge["continue", "monad-control"], DirectedEdge["continue", "mtl"], DirectedEdge["continue", "semigroupoids"], DirectedEdge["continue", "transformers"], DirectedEdge["continue", "transformers-base"], DirectedEdge["continued-fractions", "base"], DirectedEdge["continuum", "base"], DirectedEdge["continuum", "bytestring"], DirectedEdge["continuum", "cereal"], DirectedEdge["continuum", "containers"], DirectedEdge["continuum", "data-default"], DirectedEdge["continuum", "foldl"], DirectedEdge["continuum", "leveldb-haskell-fork"], DirectedEdge["continuum", "mtl"], DirectedEdge["continuum", "nanomsg-haskell"], DirectedEdge["continuum", "parallel-io"], DirectedEdge["continuum", "resourcet"], DirectedEdge["continuum", "stm"], DirectedEdge["continuum", "suspend"], DirectedEdge["continuum", "time"], DirectedEdge["continuum", "timers"], DirectedEdge["continuum", "transformers"], DirectedEdge["continuum", "transformers-base"], DirectedEdge["continuum-client", "base"], DirectedEdge["continuum-client", "bytestring"], DirectedEdge["continuum-client", "cereal"], DirectedEdge["continuum-client", "containers"], DirectedEdge["continuum-client", "mtl"], DirectedEdge["continuum-client", "nanomsg-haskell"], DirectedEdge["continuum-client", "time"], DirectedEdge["contravariant", "base"], DirectedEdge["contravariant", "ghc-prim"], DirectedEdge["contravariant", "semigroups"], DirectedEdge["contravariant", "StateVar"], DirectedEdge["contravariant", "tagged"], DirectedEdge["contravariant", "transformers"], DirectedEdge["contravariant", "transformers-compat"], DirectedEdge["contravariant", "void"], DirectedEdge["contravariant-extras", "base-prelude"], DirectedEdge["contravariant-extras", "contravariant"], DirectedEdge["contravariant-extras", "template-haskell"], DirectedEdge["contravariant-extras", "tuple-th"], DirectedEdge["control-bool", "base"], DirectedEdge["control-event", "base"], DirectedEdge["control-event", "containers"], DirectedEdge["control-event", "stm"], DirectedEdge["control-event", "time"], DirectedEdge["control-monad-attempt", "attempt"], DirectedEdge["control-monad-attempt", "base"], DirectedEdge["control-monad-attempt", "transformers"], DirectedEdge["control-monad-exception", "base"], DirectedEdge["control-monad-exception", "extensible-exceptions"], DirectedEdge["control-monad-exception", "failure"], DirectedEdge["control-monad-exception", "lifted-base"], DirectedEdge["control-monad-exception", "monad-control"], DirectedEdge["control-monad-exception", "monadloc"], DirectedEdge["control-monad-exception", "transformers"], DirectedEdge["control-monad-exception", "transformers-base"], DirectedEdge["control-monad-exception-monadsfd", "base"], DirectedEdge["control-monad-exception-monadsfd", "control-monad-exception"], DirectedEdge["control-monad-exception-monadsfd", "monads-fd"], DirectedEdge["control-monad-exception-monadsfd", "transformers"], DirectedEdge["control-monad-exception-monadstf", "base"], DirectedEdge["control-monad-exception-monadstf", "control-monad-exception"], DirectedEdge["control-monad-exception-monadstf", "monads-tf"], DirectedEdge["control-monad-exception-monadstf", "transformers"], DirectedEdge["control-monad-exception-mtl", "base"], DirectedEdge["control-monad-exception-mtl", "control-monad-exception"], DirectedEdge["control-monad-exception-mtl", "mtl"], DirectedEdge["control-monad-failure", "base"], DirectedEdge["control-monad-failure", "failure"], DirectedEdge["control-monad-failure", "transformers"], DirectedEdge["control-monad-failure-mtl", "base"], DirectedEdge["control-monad-failure-mtl", "failure"], DirectedEdge["control-monad-failure-mtl", "mtl"], DirectedEdge["control-monad-free", "base"], DirectedEdge["control-monad-free", "prelude-extras"], DirectedEdge["control-monad-free", "transformers"], DirectedEdge["control-monad-loop", "base"], DirectedEdge["control-monad-loop", "transformers"], DirectedEdge["control-monad-loop", "transformers-base"], DirectedEdge["control-monad-omega", "base"], DirectedEdge["control-monad-queue", "base"], DirectedEdge["control-timeout", "base"], DirectedEdge["control-timeout", "containers"], DirectedEdge["control-timeout", "stm"], DirectedEdge["control-timeout", "time"], DirectedEdge["contstuff", "base"], DirectedEdge["contstuff", "transformers"], DirectedEdge["contstuff-monads-tf", "contstuff-transformers"], DirectedEdge["contstuff-monads-tf", "base"], DirectedEdge["contstuff-monads-tf", "contstuff"], DirectedEdge["contstuff-monads-tf", "monads-tf"], DirectedEdge["contstuff-transformers", "contstuff"], DirectedEdge["contstuff-transformers", "base"], DirectedEdge["contstuff-transformers", "contstuff"], DirectedEdge["contstuff-transformers", "transformers"], DirectedEdge["converge", "base"], DirectedEdge["conversion", "base-prelude"], DirectedEdge["conversion-bytestring", "base-prelude"], DirectedEdge["conversion-bytestring", "bytestring"], DirectedEdge["conversion-bytestring", "conversion"], DirectedEdge["conversion-case-insensitive", "case-insensitive"], DirectedEdge["conversion-case-insensitive", "conversion"], DirectedEdge["conversion-text", "base-prelude"], DirectedEdge["conversion-text", "bytestring"], DirectedEdge["conversion-text", "conversion"], DirectedEdge["conversion-text", "conversion-bytestring"], DirectedEdge["conversion-text", "text"], DirectedEdge["convert", "base"], DirectedEdge["convert", "bytestring"], DirectedEdge["convert", "containers"], DirectedEdge["convert", "either"], DirectedEdge["convert", "lens"], DirectedEdge["convert", "mtl"], DirectedEdge["convert", "old-locale"], DirectedEdge["convert", "old-time"], DirectedEdge["convert", "template-haskell"], DirectedEdge["convert", "text"], DirectedEdge["convert", "time"], DirectedEdge["convertible", "base"], DirectedEdge["convertible", "bytestring"], DirectedEdge["convertible", "containers"], DirectedEdge["convertible", "HUnit"], DirectedEdge["convertible", "mtl"], DirectedEdge["convertible", "old-locale"], DirectedEdge["convertible", "old-time"], DirectedEdge["convertible", "QuickCheck"], DirectedEdge["convertible", "testpack"], DirectedEdge["convertible", "text"], DirectedEdge["convertible", "time"], DirectedEdge["convertible-ascii", "ascii"], DirectedEdge["convertible-ascii", "base"], DirectedEdge["convertible-ascii", "base-unicode-symbols"], DirectedEdge["convertible-ascii", "blaze-builder"], DirectedEdge["convertible-ascii", "bytestring"], DirectedEdge["convertible-ascii", "convertible-text"], DirectedEdge["convertible-ascii", "failure"], DirectedEdge["convertible-ascii", "text"], DirectedEdge["convertible-text", "attempt"], DirectedEdge["convertible-text", "base"], DirectedEdge["convertible-text", "bytestring"], DirectedEdge["convertible-text", "containers"], DirectedEdge["convertible-text", "HUnit"], DirectedEdge["convertible-text", "old-time"], DirectedEdge["convertible-text", "QuickCheck"], DirectedEdge["convertible-text", "template-haskell"], DirectedEdge["convertible-text", "test-framework"], DirectedEdge["convertible-text", "test-framework-hunit"], DirectedEdge["convertible-text", "text"], DirectedEdge["convertible-text", "time"], DirectedEdge["cookbook", "base"], DirectedEdge["cookbook", "directory"], DirectedEdge["cookbook", "strict"], DirectedEdge["cookie", "base"], DirectedEdge["cookie", "blaze-builder"], DirectedEdge["cookie", "bytestring"], DirectedEdge["cookie", "data-default-class"], DirectedEdge["cookie", "deepseq"], DirectedEdge["cookie", "old-locale"], DirectedEdge["cookie", "text"], DirectedEdge["cookie", "time"], DirectedEdge["coordinate", "base"], DirectedEdge["coordinate", "lens"], DirectedEdge["coordinate", "radian"], DirectedEdge["coordinate", "tagged"], DirectedEdge["coordinate", "transformers"], DirectedEdge["copilot", "base"], DirectedEdge["copilot", "copilot-cbmc"], DirectedEdge["copilot", "copilot-core"], DirectedEdge["copilot", "copilot-language"], DirectedEdge["copilot", "copilot-libraries"], DirectedEdge["copilot", "copilot-sbv"], DirectedEdge["copilot", "copilot-theorem"], DirectedEdge["copilot", "directory"], DirectedEdge["copilot", "random"], DirectedEdge["copilot-c99", "atom"], DirectedEdge["copilot-c99", "base"], DirectedEdge["copilot-c99", "bytestring"], DirectedEdge["copilot-c99", "containers"], DirectedEdge["copilot-c99", "copilot-core"], DirectedEdge["copilot-c99", "csv"], DirectedEdge["copilot-c99", "directory"], DirectedEdge["copilot-c99", "pretty"], DirectedEdge["copilot-c99", "process"], DirectedEdge["copilot-c99", "QuickCheck"], DirectedEdge["copilot-c99", "random"], DirectedEdge["copilot-c99", "text"], DirectedEdge["copilot-c99", "vector"], DirectedEdge["copilot-cbmc", "base"], DirectedEdge["copilot-cbmc", "bytestring"], DirectedEdge["copilot-cbmc", "copilot-core"], DirectedEdge["copilot-cbmc", "copilot-sbv"], DirectedEdge["copilot-cbmc", "directory"], DirectedEdge["copilot-cbmc", "pretty"], DirectedEdge["copilot-cbmc", "process"], DirectedEdge["copilot-core", "base"], DirectedEdge["copilot-core", "containers"], DirectedEdge["copilot-core", "dlist"], DirectedEdge["copilot-core", "mtl"], DirectedEdge["copilot-core", "pretty"], DirectedEdge["copilot-core", "pretty-ncols"], DirectedEdge["copilot-core", "random"], DirectedEdge["copilot-language", "array"], DirectedEdge["copilot-language", "base"], DirectedEdge["copilot-language", "containers"], DirectedEdge["copilot-language", "copilot-core"], DirectedEdge["copilot-language", "copilot-theorem"], DirectedEdge["copilot-language", "data-reify"], DirectedEdge["copilot-language", "ghc-prim"], DirectedEdge["copilot-language", "mtl"], DirectedEdge["copilot-libraries", "array"], DirectedEdge["copilot-libraries", "base"], DirectedEdge["copilot-libraries", "containers"], DirectedEdge["copilot-libraries", "copilot-language"], DirectedEdge["copilot-libraries", "mtl"], DirectedEdge["copilot-libraries", "parsec"], DirectedEdge["copilot-sbv", "base"], DirectedEdge["copilot-sbv", "containers"], DirectedEdge["copilot-sbv", "copilot-core"], DirectedEdge["copilot-sbv", "directory"], DirectedEdge["copilot-sbv", "filepath"], DirectedEdge["copilot-sbv", "pretty"], DirectedEdge["copilot-sbv", "sbv"], DirectedEdge["copilot-theorem", "ansi-terminal"], DirectedEdge["copilot-theorem", "base"], DirectedEdge["copilot-theorem", "bimap"], DirectedEdge["copilot-theorem", "containers"], DirectedEdge["copilot-theorem", "copilot-core"], DirectedEdge["copilot-theorem", "data-default"], DirectedEdge["copilot-theorem", "directory"], DirectedEdge["copilot-theorem", "mtl"], DirectedEdge["copilot-theorem", "parsec"], DirectedEdge["copilot-theorem", "pretty"], DirectedEdge["copilot-theorem", "process"], DirectedEdge["copilot-theorem", "random"], DirectedEdge["copilot-theorem", "transformers"], DirectedEdge["copilot-theorem", "xml"], DirectedEdge["copr", "aeson"], DirectedEdge["copr", "base"], DirectedEdge["copr", "bytestring"], DirectedEdge["copr", "containers"], DirectedEdge["copr", "HsOpenSSL"], DirectedEdge["copr", "http-streams"], DirectedEdge["copr", "io-streams"], DirectedEdge["copr", "semigroups"], DirectedEdge["copr", "text"], DirectedEdge["core", "base"], DirectedEdge["core", "bytestring"], DirectedEdge["core", "parsec"], DirectedEdge["core", "pretty"], DirectedEdge["core-haskell", "base"], DirectedEdge["core-haskell", "haskeline"], DirectedEdge["core-haskell", "haskell-src-exts"], DirectedEdge["core-haskell", "hint"], DirectedEdge["corebot-bliki", "aeson"], DirectedEdge["corebot-bliki", "base"], DirectedEdge["corebot-bliki", "blaze-builder"], DirectedEdge["corebot-bliki", "bytestring"], DirectedEdge["corebot-bliki", "containers"], DirectedEdge["corebot-bliki", "directory"], DirectedEdge["corebot-bliki", "filepath"], DirectedEdge["corebot-bliki", "filestore"], DirectedEdge["corebot-bliki", "http-types"], DirectedEdge["corebot-bliki", "monads-tf"], DirectedEdge["corebot-bliki", "pandoc"], DirectedEdge["corebot-bliki", "template-haskell"], DirectedEdge["corebot-bliki", "text"], DirectedEdge["corebot-bliki", "time"], DirectedEdge["corebot-bliki", "yesod"], DirectedEdge["coroutine-enumerator", "base"], DirectedEdge["coroutine-enumerator", "enumerator"], DirectedEdge["coroutine-enumerator", "monad-coroutine"], DirectedEdge["coroutine-iteratee", "base"], DirectedEdge["coroutine-iteratee", "iteratee"], DirectedEdge["coroutine-iteratee", "monad-coroutine"], DirectedEdge["coroutine-object", "base"], DirectedEdge["coroutine-object", "either"], DirectedEdge["coroutine-object", "free"], DirectedEdge["coroutine-object", "mtl"], DirectedEdge["coroutine-object", "transformers"], DirectedEdge["couch-hs", "aeson"], DirectedEdge["couch-hs", "attoparsec"], DirectedEdge["couch-hs", "base"], DirectedEdge["couch-hs", "bytestring"], DirectedEdge["couch-hs", "hint"], DirectedEdge["couch-hs", "random"], DirectedEdge["couch-hs", "text"], DirectedEdge["couch-hs", "transformers"], DirectedEdge["couch-hs", "vector"], DirectedEdge["couch-simple", "aeson"], DirectedEdge["couch-simple", "attoparsec"], DirectedEdge["couch-simple", "base"], DirectedEdge["couch-simple", "bifunctors"], DirectedEdge["couch-simple", "bytestring"], DirectedEdge["couch-simple", "bytestring-builder"], DirectedEdge["couch-simple", "data-default"], DirectedEdge["couch-simple", "exceptions"], DirectedEdge["couch-simple", "http-client"], DirectedEdge["couch-simple", "http-types"], DirectedEdge["couch-simple", "integer-gmp"], DirectedEdge["couch-simple", "mtl"], DirectedEdge["couch-simple", "text"], DirectedEdge["couch-simple", "transformers"], DirectedEdge["couch-simple", "unordered-containers"], DirectedEdge["couch-simple", "uuid"], DirectedEdge["couch-simple", "vector"], DirectedEdge["couchdb-conduit", "aeson"], DirectedEdge["couchdb-conduit", "attoparsec"], DirectedEdge["couchdb-conduit", "attoparsec-conduit"], DirectedEdge["couchdb-conduit", "base"], DirectedEdge["couchdb-conduit", "blaze-builder"], DirectedEdge["couchdb-conduit", "bytestring"], DirectedEdge["couchdb-conduit", "conduit"], DirectedEdge["couchdb-conduit", "containers"], DirectedEdge["couchdb-conduit", "data-default"], DirectedEdge["couchdb-conduit", "http-conduit"], DirectedEdge["couchdb-conduit", "http-types"], DirectedEdge["couchdb-conduit", "lifted-base"], DirectedEdge["couchdb-conduit", "monad-control"], DirectedEdge["couchdb-conduit", "resourcet"], DirectedEdge["couchdb-conduit", "string-conversions"], DirectedEdge["couchdb-conduit", "syb"], DirectedEdge["couchdb-conduit", "text"], DirectedEdge["couchdb-conduit", "transformers"], DirectedEdge["couchdb-conduit", "unordered-containers"], DirectedEdge["couchdb-conduit", "vector"], DirectedEdge["couchdb-enumerator", "aeson"], DirectedEdge["couchdb-enumerator", "attoparsec"], DirectedEdge["couchdb-enumerator", "attoparsec-enumerator"], DirectedEdge["couchdb-enumerator", "base"], DirectedEdge["couchdb-enumerator", "bytestring"], DirectedEdge["couchdb-enumerator", "enumerator"], DirectedEdge["couchdb-enumerator", "http-enumerator"], DirectedEdge["couchdb-enumerator", "http-types"], DirectedEdge["couchdb-enumerator", "lifted-base"], DirectedEdge["couchdb-enumerator", "monad-control"], DirectedEdge["couchdb-enumerator", "text"], DirectedEdge["couchdb-enumerator", "transformers"], DirectedEdge["couchdb-enumerator", "unordered-containers"], DirectedEdge["couchdb-enumerator", "utf8-string"], DirectedEdge["count", "base"], DirectedEdge["countable", "base"], DirectedEdge["counter", "base"], DirectedEdge["counter", "containers"], DirectedEdge["country-codes", "aeson"], DirectedEdge["country-codes", "base"], DirectedEdge["country-codes", "shakespeare"], DirectedEdge["country-codes", "tagsoup"], DirectedEdge["country-codes", "text"], DirectedEdge["courier", "async"], DirectedEdge["courier", "base"], DirectedEdge["courier", "bytestring"], DirectedEdge["courier", "cereal"], DirectedEdge["courier", "containers"], DirectedEdge["courier", "courier"], DirectedEdge["courier", "hslogger"], DirectedEdge["courier", "network"], DirectedEdge["courier", "stm"], DirectedEdge["courier", "text"], DirectedEdge["courier", "uuid"], DirectedEdge["court", "aeson"], DirectedEdge["court", "base"], DirectedEdge["court", "bytestring"], DirectedEdge["court", "directory"], DirectedEdge["court", "filepath"], DirectedEdge["court", "old-locale"], DirectedEdge["court", "optparse-applicative"], DirectedEdge["court", "process"], DirectedEdge["court", "stm"], DirectedEdge["court", "text"], DirectedEdge["court", "time"], DirectedEdge["court", "unix"], DirectedEdge["coverage", "base"], DirectedEdge["cpio-conduit", "base"], DirectedEdge["cpio-conduit", "base16-bytestring"], DirectedEdge["cpio-conduit", "binary"], DirectedEdge["cpio-conduit", "bytestring"], DirectedEdge["cpio-conduit", "conduit"], DirectedEdge["cpio-conduit", "conduit-extra"], DirectedEdge["cplex-hs", "base"], DirectedEdge["cplex-hs", "containers"], DirectedEdge["cplex-hs", "mtl"], DirectedEdge["cplex-hs", "primitive"], DirectedEdge["cplex-hs", "transformers"], DirectedEdge["cplex-hs", "vector"], DirectedEdge["cplusplus-th", "base"], DirectedEdge["cplusplus-th", "bytestring"], DirectedEdge["cplusplus-th", "containers"], DirectedEdge["cplusplus-th", "process"], DirectedEdge["cplusplus-th", "template-haskell"], DirectedEdge["cpphs", "base"], DirectedEdge["cpphs", "directory"], DirectedEdge["cpphs", "old-locale"], DirectedEdge["cpphs", "old-time"], DirectedEdge["cpphs", "polyparse"], DirectedEdge["cprng-aes", "cryptonite"], DirectedEdge["cprng-aes", "base"], DirectedEdge["cprng-aes", "byteable"], DirectedEdge["cprng-aes", "bytestring"], DirectedEdge["cprng-aes", "cipher-aes"], DirectedEdge["cprng-aes", "crypto-random"], DirectedEdge["cprng-aes-effect", "base"], DirectedEdge["cprng-aes-effect", "cprng-aes"], DirectedEdge["cprng-aes-effect", "crypto-random"], DirectedEdge["cprng-aes-effect", "crypto-random-effect"], DirectedEdge["cprng-aes-effect", "extensible-effects"], DirectedEdge["cpsa", "array"], DirectedEdge["cpsa", "base"], DirectedEdge["cpsa", "containers"], DirectedEdge["cpsa", "parallel"], DirectedEdge["cpu", "base"], DirectedEdge["cpu", "bytestring"], DirectedEdge["cpu", "cpu"], DirectedEdge["cpuid", "base"], DirectedEdge["cpuid", "data-accessor"], DirectedEdge["cpuid", "enumset"], DirectedEdge["cpuperf", "base"], DirectedEdge["cpuperf", "mtl"], DirectedEdge["cpuperf", "process"], DirectedEdge["cpython", "base"], DirectedEdge["cpython", "bytestring"], DirectedEdge["cpython", "text"], DirectedEdge["cql", "base"], DirectedEdge["cql", "bytestring"], DirectedEdge["cql", "cereal"], DirectedEdge["cql", "Decimal"], DirectedEdge["cql", "iproute"], DirectedEdge["cql", "network"], DirectedEdge["cql", "template-haskell"], DirectedEdge["cql", "text"], DirectedEdge["cql", "time"], DirectedEdge["cql", "transformers"], DirectedEdge["cql", "uuid"], DirectedEdge["cql", "vector"], DirectedEdge["cql-io", "async"], DirectedEdge["cql-io", "auto-update"], DirectedEdge["cql-io", "base"], DirectedEdge["cql-io", "bytestring"], DirectedEdge["cql-io", "containers"], DirectedEdge["cql-io", "cql"], DirectedEdge["cql-io", "cryptohash"], DirectedEdge["cql-io", "data-default-class"], DirectedEdge["cql-io", "exceptions"], DirectedEdge["cql-io", "hashable"], DirectedEdge["cql-io", "HsOpenSSL"], DirectedEdge["cql-io", "iproute"], DirectedEdge["cql-io", "lens"], DirectedEdge["cql-io", "monad-control"], DirectedEdge["cql-io", "mtl"], DirectedEdge["cql-io", "mwc-random"], DirectedEdge["cql-io", "network"], DirectedEdge["cql-io", "retry"], DirectedEdge["cql-io", "semigroups"], DirectedEdge["cql-io", "stm"], DirectedEdge["cql-io", "text"], DirectedEdge["cql-io", "time"], DirectedEdge["cql-io", "tinylog"], DirectedEdge["cql-io", "transformers"], DirectedEdge["cql-io", "transformers-base"], DirectedEdge["cql-io", "uuid"], DirectedEdge["cql-io", "vector"], DirectedEdge["cqrs", "base"], DirectedEdge["cqrs-core", "base"], DirectedEdge["cqrs-core", "bytestring"], DirectedEdge["cqrs-core", "containers"], DirectedEdge["cqrs-core", "deepseq"], DirectedEdge["cqrs-core", "io-streams"], DirectedEdge["cqrs-core", "transformers"], DirectedEdge["cqrs-core", "uuid-types"], DirectedEdge["cqrs-example", "aeson"], DirectedEdge["cqrs-example", "async"], DirectedEdge["cqrs-example", "base"], DirectedEdge["cqrs-example", "blaze-builder"], DirectedEdge["cqrs-example", "bytestring"], DirectedEdge["cqrs-example", "cereal"], DirectedEdge["cqrs-example", "containers"], DirectedEdge["cqrs-example", "cqrs-core"], DirectedEdge["cqrs-example", "cqrs-memory"], DirectedEdge["cqrs-example", "deepseq"], DirectedEdge["cqrs-example", "io-streams"], DirectedEdge["cqrs-example", "random"], DirectedEdge["cqrs-example", "scotty"], DirectedEdge["cqrs-example", "stm"], DirectedEdge["cqrs-example", "text"], DirectedEdge["cqrs-example", "transformers"], DirectedEdge["cqrs-example", "uuid-types"], DirectedEdge["cqrs-example", "wai-extra"], DirectedEdge["cqrs-example", "wai-middleware-static"], DirectedEdge["cqrs-example", "warp"], DirectedEdge["cqrs-memory", "base"], DirectedEdge["cqrs-memory", "bytestring"], DirectedEdge["cqrs-memory", "containers"], DirectedEdge["cqrs-memory", "cqrs-core"], DirectedEdge["cqrs-memory", "io-streams"], DirectedEdge["cqrs-memory", "stm"], DirectedEdge["cqrs-memory", "uuid-types"], DirectedEdge["cqrs-postgresql", "base"], DirectedEdge["cqrs-postgresql", "bytestring"], DirectedEdge["cqrs-postgresql", "bytestring-lexing"], DirectedEdge["cqrs-postgresql", "cqrs-core"], DirectedEdge["cqrs-postgresql", "deepseq"], DirectedEdge["cqrs-postgresql", "enclosed-exceptions"], DirectedEdge["cqrs-postgresql", "io-streams"], DirectedEdge["cqrs-postgresql", "postgresql-libpq"], DirectedEdge["cqrs-postgresql", "resource-pool"], DirectedEdge["cqrs-postgresql", "text"], DirectedEdge["cqrs-postgresql", "time"], DirectedEdge["cqrs-postgresql", "transformers"], DirectedEdge["cqrs-postgresql", "uuid-types"], DirectedEdge["cqrs-sqlite3", "base"], DirectedEdge["cqrs-sqlite3", "bytestring"], DirectedEdge["cqrs-sqlite3", "conduit"], DirectedEdge["cqrs-sqlite3", "cqrs-types"], DirectedEdge["cqrs-sqlite3", "direct-sqlite"], DirectedEdge["cqrs-sqlite3", "pool-conduit"], DirectedEdge["cqrs-sqlite3", "text"], DirectedEdge["cqrs-sqlite3", "transformers"], DirectedEdge["cqrs-test", "base"], DirectedEdge["cqrs-test", "bytestring"], DirectedEdge["cqrs-test", "conduit"], DirectedEdge["cqrs-test", "cqrs-types"], DirectedEdge["cqrs-test", "hspec"], DirectedEdge["cqrs-test", "HUnit"], DirectedEdge["cqrs-test", "pool-conduit"], DirectedEdge["cqrs-test", "stm"], DirectedEdge["cqrs-test", "transformers"], DirectedEdge["cqrs-testkit", "base"], DirectedEdge["cqrs-testkit", "bytestring"], DirectedEdge["cqrs-testkit", "containers"], DirectedEdge["cqrs-testkit", "cqrs-core"], DirectedEdge["cqrs-testkit", "deepseq"], DirectedEdge["cqrs-testkit", "hspec"], DirectedEdge["cqrs-testkit", "HUnit"], DirectedEdge["cqrs-testkit", "io-streams"], DirectedEdge["cqrs-testkit", "lifted-base"], DirectedEdge["cqrs-testkit", "random"], DirectedEdge["cqrs-testkit", "transformers"], DirectedEdge["cqrs-testkit", "uuid-types"], DirectedEdge["cqrs-types", "base"], DirectedEdge["cr", "base"], DirectedEdge["cr", "cmdargs"], DirectedEdge["cr", "directory"], DirectedEdge["cr", "process"], DirectedEdge["cr", "shelly"], DirectedEdge["cr", "text"], DirectedEdge["cr", "transformers"], DirectedEdge["cr", "unix"], DirectedEdge["crack", "base"], DirectedEdge["crackNum", "base"], DirectedEdge["craftwerk", "base"], DirectedEdge["craftwerk", "colour"], DirectedEdge["craftwerk", "craftwerk"], DirectedEdge["craftwerk", "HUnit"], DirectedEdge["craftwerk", "mtl"], DirectedEdge["craftwerk", "QuickCheck"], DirectedEdge["craftwerk", "test-framework"], DirectedEdge["craftwerk", "test-framework-hunit"], DirectedEdge["craftwerk", "test-framework-th"], DirectedEdge["craftwerk", "vector-space"], DirectedEdge["craftwerk-cairo", "base"], DirectedEdge["craftwerk-cairo", "cairo"], DirectedEdge["craftwerk-cairo", "craftwerk"], DirectedEdge["craftwerk-cairo", "mtl"], DirectedEdge["craftwerk-gtk", "base"], DirectedEdge["craftwerk-gtk", "cairo"], DirectedEdge["craftwerk-gtk", "containers"], DirectedEdge["craftwerk-gtk", "craftwerk"], DirectedEdge["craftwerk-gtk", "craftwerk-cairo"], DirectedEdge["craftwerk-gtk", "craftwerk-gtk"], DirectedEdge["craftwerk-gtk", "gtk"], DirectedEdge["craftwerk-gtk", "mtl"], DirectedEdge["craze", "async"], DirectedEdge["craze", "base"], DirectedEdge["craze", "bytestring"], DirectedEdge["craze", "containers"], DirectedEdge["craze", "craze"], DirectedEdge["craze", "curl"], DirectedEdge["craze", "data-default-class"], DirectedEdge["craze", "optparse-generic"], DirectedEdge["craze", "text"], DirectedEdge["craze", "transformers"], DirectedEdge["crc", "base"], DirectedEdge["crc", "bytestring"], DirectedEdge["crc", "vector"], DirectedEdge["crc16", "base"], DirectedEdge["crc16", "bytestring"], DirectedEdge["crc16-table", "array"], DirectedEdge["crc16-table", "base"], DirectedEdge["creatur", "array"], DirectedEdge["creatur", "base"], DirectedEdge["creatur", "bytestring"], DirectedEdge["creatur", "cereal"], DirectedEdge["creatur", "cond"], DirectedEdge["creatur", "directory"], DirectedEdge["creatur", "exceptions"], DirectedEdge["creatur", "filepath"], DirectedEdge["creatur", "gray-extended"], DirectedEdge["creatur", "hdaemonize"], DirectedEdge["creatur", "hsyslog"], DirectedEdge["creatur", "MonadRandom"], DirectedEdge["creatur", "mtl"], DirectedEdge["creatur", "old-locale"], DirectedEdge["creatur", "process"], DirectedEdge["creatur", "random"], DirectedEdge["creatur", "split"], DirectedEdge["creatur", "time"], DirectedEdge["creatur", "transformers"], DirectedEdge["creatur", "unix"], DirectedEdge["creatur", "zlib"], DirectedEdge["crf-chain1", "array"], DirectedEdge["crf-chain1", "base"], DirectedEdge["crf-chain1", "binary"], DirectedEdge["crf-chain1", "containers"], DirectedEdge["crf-chain1", "data-lens"], DirectedEdge["crf-chain1", "logfloat"], DirectedEdge["crf-chain1", "monad-codec"], DirectedEdge["crf-chain1", "parallel"], DirectedEdge["crf-chain1", "random"], DirectedEdge["crf-chain1", "sgd"], DirectedEdge["crf-chain1", "vector"], DirectedEdge["crf-chain1", "vector-binary"], DirectedEdge["crf-chain1", "vector-th-unbox"], DirectedEdge["crf-chain1-constrained", "array"], DirectedEdge["crf-chain1-constrained", "base"], DirectedEdge["crf-chain1-constrained", "binary"], DirectedEdge["crf-chain1-constrained", "containers"], DirectedEdge["crf-chain1-constrained", "data-lens"], DirectedEdge["crf-chain1-constrained", "logfloat"], DirectedEdge["crf-chain1-constrained", "monad-codec"], DirectedEdge["crf-chain1-constrained", "parallel"], DirectedEdge["crf-chain1-constrained", "random"], DirectedEdge["crf-chain1-constrained", "sgd"], DirectedEdge["crf-chain1-constrained", "vector"], DirectedEdge["crf-chain1-constrained", "vector-binary"], DirectedEdge["crf-chain1-constrained", "vector-th-unbox"], DirectedEdge["crf-chain2-generic", "array"], DirectedEdge["crf-chain2-generic", "base"], DirectedEdge["crf-chain2-generic", "binary"], DirectedEdge["crf-chain2-generic", "comonad-transformers"], DirectedEdge["crf-chain2-generic", "containers"], DirectedEdge["crf-chain2-generic", "data-lens"], DirectedEdge["crf-chain2-generic", "logfloat"], DirectedEdge["crf-chain2-generic", "monad-codec"], DirectedEdge["crf-chain2-generic", "parallel"], DirectedEdge["crf-chain2-generic", "sgd"], DirectedEdge["crf-chain2-generic", "vector"], DirectedEdge["crf-chain2-generic", "vector-binary"], DirectedEdge["crf-chain2-tiers", "array"], DirectedEdge["crf-chain2-tiers", "base"], DirectedEdge["crf-chain2-tiers", "binary"], DirectedEdge["crf-chain2-tiers", "comonad"], DirectedEdge["crf-chain2-tiers", "containers"], DirectedEdge["crf-chain2-tiers", "data-lens"], DirectedEdge["crf-chain2-tiers", "logfloat"], DirectedEdge["crf-chain2-tiers", "monad-codec"], DirectedEdge["crf-chain2-tiers", "parallel"], DirectedEdge["crf-chain2-tiers", "sgd"], DirectedEdge["crf-chain2-tiers", "vector"], DirectedEdge["crf-chain2-tiers", "vector-binary"], DirectedEdge["crf-chain2-tiers", "vector-th-unbox"], DirectedEdge["critbit", "array"], DirectedEdge["critbit", "base"], DirectedEdge["critbit", "bytestring"], DirectedEdge["critbit", "deepseq"], DirectedEdge["critbit", "text"], DirectedEdge["critbit", "vector"], DirectedEdge["criterion", "aeson"], DirectedEdge["criterion", "ansi-wl-pprint"], DirectedEdge["criterion", "base"], DirectedEdge["criterion", "binary"], DirectedEdge["criterion", "bytestring"], DirectedEdge["criterion", "cassava"], DirectedEdge["criterion", "containers"], DirectedEdge["criterion", "criterion"], DirectedEdge["criterion", "deepseq"], DirectedEdge["criterion", "directory"], DirectedEdge["criterion", "filepath"], DirectedEdge["criterion", "ghc-prim"], DirectedEdge["criterion", "Glob"], DirectedEdge["criterion", "hastache"], DirectedEdge["criterion", "mtl"], DirectedEdge["criterion", "mwc-random"], DirectedEdge["criterion", "optparse-applicative"], DirectedEdge["criterion", "parsec"], DirectedEdge["criterion", "statistics"], DirectedEdge["criterion", "text"], DirectedEdge["criterion", "time"], DirectedEdge["criterion", "transformers"], DirectedEdge["criterion", "transformers-compat"], DirectedEdge["criterion", "vector"], DirectedEdge["criterion", "vector-algorithms"], DirectedEdge["criterion-plus", "base"], DirectedEdge["criterion-plus", "criterion"], DirectedEdge["criterion-plus", "deepseq"], DirectedEdge["criterion-plus", "loch-th"], DirectedEdge["criterion-plus", "monad-control"], DirectedEdge["criterion-plus", "mtl"], DirectedEdge["criterion-plus", "optparse-applicative"], DirectedEdge["criterion-plus", "placeholders"], DirectedEdge["criterion-plus", "statistics"], DirectedEdge["criterion-plus", "string-conversions"], DirectedEdge["criterion-plus", "system-fileio"], DirectedEdge["criterion-plus", "system-filepath"], DirectedEdge["criterion-plus", "text"], DirectedEdge["criterion-plus", "th-printf"], DirectedEdge["criterion-plus", "transformers"], DirectedEdge["criterion-plus", "transformers-base"], DirectedEdge["criterion-plus", "vector"], DirectedEdge["criterion-to-html", "aeson"], DirectedEdge["criterion-to-html", "base"], DirectedEdge["criterion-to-html", "blaze-html"], DirectedEdge["criterion-to-html", "blaze-markup"], DirectedEdge["criterion-to-html", "bytestring"], DirectedEdge["criterion-to-html", "containers"], DirectedEdge["criterion-to-html", "filepath"], DirectedEdge["crockford", "base"], DirectedEdge["crockford", "digits"], DirectedEdge["crockford", "QuickCheck"], DirectedEdge["crockford", "safe"], DirectedEdge["crocodile", "base"], DirectedEdge["crocodile", "bmp"], DirectedEdge["crocodile", "bytestring"], DirectedEdge["crocodile", "deepseq"], DirectedEdge["crocodile", "ghc-prim"], DirectedEdge["crocodile", "heap"], DirectedEdge["crocodile", "HUnit"], DirectedEdge["crocodile", "mtl"], DirectedEdge["crocodile", "parallel"], DirectedEdge["cron", "attoparsec"], DirectedEdge["cron", "base"], DirectedEdge["cron", "mtl"], DirectedEdge["cron", "mtl-compat"], DirectedEdge["cron", "old-locale"], DirectedEdge["cron", "semigroups"], DirectedEdge["cron", "text"], DirectedEdge["cron", "time"], DirectedEdge["cron-compat", "cron"], DirectedEdge["cron-compat", "attoparsec"], DirectedEdge["cron-compat", "base"], DirectedEdge["cron-compat", "mtl"], DirectedEdge["cron-compat", "mtl-compat"], DirectedEdge["cron-compat", "old-locale"], DirectedEdge["cron-compat", "text"], DirectedEdge["cron-compat", "time"], DirectedEdge["cron-compat", "transformers-compat"], DirectedEdge["cruncher-types", "aeson"], DirectedEdge["cruncher-types", "base"], DirectedEdge["cruncher-types", "containers"], DirectedEdge["cruncher-types", "lens"], DirectedEdge["cruncher-types", "text"], DirectedEdge["crunghc", "base"], DirectedEdge["crunghc", "bytestring"], DirectedEdge["crunghc", "directory"], DirectedEdge["crunghc", "filelock"], DirectedEdge["crunghc", "filepath"], DirectedEdge["crunghc", "process"], DirectedEdge["crunghc", "SHA"], DirectedEdge["crunghc", "text"], DirectedEdge["crunghc", "time"], DirectedEdge["crunghc", "transformers"], DirectedEdge["crunghc", "unix"], DirectedEdge["crypto-api", "base"], DirectedEdge["crypto-api", "bytestring"], DirectedEdge["crypto-api", "cereal"], DirectedEdge["crypto-api", "entropy"], DirectedEdge["crypto-api", "tagged"], DirectedEdge["crypto-api", "transformers"], DirectedEdge["crypto-api-tests", "base"], DirectedEdge["crypto-api-tests", "bytestring"], DirectedEdge["crypto-api-tests", "cereal"], DirectedEdge["crypto-api-tests", "crypto-api"], DirectedEdge["crypto-api-tests", "directory"], DirectedEdge["crypto-api-tests", "filepath"], DirectedEdge["crypto-api-tests", "HUnit"], DirectedEdge["crypto-api-tests", "QuickCheck"], DirectedEdge["crypto-api-tests", "test-framework"], DirectedEdge["crypto-api-tests", "test-framework-hunit"], DirectedEdge["crypto-cipher-benchmarks", "base"], DirectedEdge["crypto-cipher-benchmarks", "byteable"], DirectedEdge["crypto-cipher-benchmarks", "bytestring"], DirectedEdge["crypto-cipher-benchmarks", "criterion"], DirectedEdge["crypto-cipher-benchmarks", "crypto-cipher-types"], DirectedEdge["crypto-cipher-benchmarks", "mtl"], DirectedEdge["crypto-cipher-benchmarks", "pretty"], DirectedEdge["crypto-cipher-benchmarks", "securemem"], DirectedEdge["crypto-cipher-tests", "base"], DirectedEdge["crypto-cipher-tests", "byteable"], DirectedEdge["crypto-cipher-tests", "bytestring"], DirectedEdge["crypto-cipher-tests", "crypto-cipher-types"], DirectedEdge["crypto-cipher-tests", "HUnit"], DirectedEdge["crypto-cipher-tests", "mtl"], DirectedEdge["crypto-cipher-tests", "QuickCheck"], DirectedEdge["crypto-cipher-tests", "securemem"], DirectedEdge["crypto-cipher-tests", "test-framework"], DirectedEdge["crypto-cipher-tests", "test-framework-hunit"], DirectedEdge["crypto-cipher-types", "base"], DirectedEdge["crypto-cipher-types", "byteable"], DirectedEdge["crypto-cipher-types", "bytestring"], DirectedEdge["crypto-cipher-types", "securemem"], DirectedEdge["crypto-classical", "base"], DirectedEdge["crypto-classical", "bytestring"], DirectedEdge["crypto-classical", "containers"], DirectedEdge["crypto-classical", "crypto-numbers"], DirectedEdge["crypto-classical", "crypto-random"], DirectedEdge["crypto-classical", "microlens"], DirectedEdge["crypto-classical", "microlens-th"], DirectedEdge["crypto-classical", "modular-arithmetic"], DirectedEdge["crypto-classical", "QuickCheck"], DirectedEdge["crypto-classical", "random"], DirectedEdge["crypto-classical", "random-shuffle"], DirectedEdge["crypto-classical", "text"], DirectedEdge["crypto-classical", "transformers"], DirectedEdge["crypto-conduit", "base"], DirectedEdge["crypto-conduit", "bytestring"], DirectedEdge["crypto-conduit", "cereal"], DirectedEdge["crypto-conduit", "conduit"], DirectedEdge["crypto-conduit", "conduit-extra"], DirectedEdge["crypto-conduit", "crypto-api"], DirectedEdge["crypto-conduit", "resourcet"], DirectedEdge["crypto-conduit", "transformers"], DirectedEdge["crypto-enigma", "base"], DirectedEdge["crypto-enigma", "containers"], DirectedEdge["crypto-enigma", "MissingH"], DirectedEdge["crypto-enigma", "mtl"], DirectedEdge["crypto-enigma", "split"], DirectedEdge["crypto-numbers", "base"], DirectedEdge["crypto-numbers", "bytestring"], DirectedEdge["crypto-numbers", "crypto-random"], DirectedEdge["crypto-numbers", "ghc-prim"], DirectedEdge["crypto-numbers", "integer-gmp"], DirectedEdge["crypto-numbers", "vector"], DirectedEdge["crypto-pubkey", "base"], DirectedEdge["crypto-pubkey", "byteable"], DirectedEdge["crypto-pubkey", "bytestring"], DirectedEdge["crypto-pubkey", "crypto-numbers"], DirectedEdge["crypto-pubkey", "crypto-pubkey-types"], DirectedEdge["crypto-pubkey", "crypto-random"], DirectedEdge["crypto-pubkey", "cryptohash"], DirectedEdge["crypto-pubkey-openssh", "asn1-encoding"], DirectedEdge["crypto-pubkey-openssh", "asn1-types"], DirectedEdge["crypto-pubkey-openssh", "attoparsec"], DirectedEdge["crypto-pubkey-openssh", "base"], DirectedEdge["crypto-pubkey-openssh", "base64-bytestring"], DirectedEdge["crypto-pubkey-openssh", "bytestring"], DirectedEdge["crypto-pubkey-openssh", "cereal"], DirectedEdge["crypto-pubkey-openssh", "crypto-pubkey-types"], DirectedEdge["crypto-pubkey-openssh", "pem"], DirectedEdge["crypto-pubkey-types", "asn1-encoding"], DirectedEdge["crypto-pubkey-types", "asn1-types"], DirectedEdge["crypto-pubkey-types", "base"], DirectedEdge["crypto-random", "cryptonite"], DirectedEdge["crypto-random", "base"], DirectedEdge["crypto-random", "bytestring"], DirectedEdge["crypto-random", "securemem"], DirectedEdge["crypto-random", "unix"], DirectedEdge["crypto-random", "vector"], DirectedEdge["crypto-random-api", "crypto-random"], DirectedEdge["crypto-random-api", "base"], DirectedEdge["crypto-random-api", "bytestring"], DirectedEdge["crypto-random-api", "entropy"], DirectedEdge["crypto-random-effect", "base"], DirectedEdge["crypto-random-effect", "bytestring"], DirectedEdge["crypto-random-effect", "crypto-random"], DirectedEdge["crypto-random-effect", "extensible-effects"], DirectedEdge["crypto-random-effect", "securemem"], DirectedEdge["crypto-random-effect", "transformers"], DirectedEdge["crypto-totp", "base"], DirectedEdge["crypto-totp", "bytestring"], DirectedEdge["crypto-totp", "cereal"], DirectedEdge["crypto-totp", "containers"], DirectedEdge["crypto-totp", "cryptohash"], DirectedEdge["crypto-totp", "tagged"], DirectedEdge["crypto-totp", "unix"], DirectedEdge["cryptocipher", "base"], DirectedEdge["cryptocipher", "cipher-aes"], DirectedEdge["cryptocipher", "cipher-blowfish"], DirectedEdge["cryptocipher", "cipher-camellia"], DirectedEdge["cryptocipher", "cipher-des"], DirectedEdge["cryptocipher", "crypto-cipher-types"], DirectedEdge["cryptohash", "base"], DirectedEdge["cryptohash", "byteable"], DirectedEdge["cryptohash", "bytestring"], DirectedEdge["cryptohash", "cryptonite"], DirectedEdge["cryptohash", "ghc-prim"], DirectedEdge["cryptohash", "memory"], DirectedEdge["cryptohash-conduit", "base"], DirectedEdge["cryptohash-conduit", "bytestring"], DirectedEdge["cryptohash-conduit", "conduit"], DirectedEdge["cryptohash-conduit", "conduit-extra"], DirectedEdge["cryptohash-conduit", "cryptohash"], DirectedEdge["cryptohash-conduit", "resourcet"], DirectedEdge["cryptohash-conduit", "transformers"], DirectedEdge["cryptohash-cryptoapi", "base"], DirectedEdge["cryptohash-cryptoapi", "bytestring"], DirectedEdge["cryptohash-cryptoapi", "cereal"], DirectedEdge["cryptohash-cryptoapi", "crypto-api"], DirectedEdge["cryptohash-cryptoapi", "cryptonite"], DirectedEdge["cryptohash-cryptoapi", "memory"], DirectedEdge["cryptohash-cryptoapi", "tagged"], DirectedEdge["cryptohash-md5", "base"], DirectedEdge["cryptohash-md5", "bytestring"], DirectedEdge["cryptohash-sha1", "base"], DirectedEdge["cryptohash-sha1", "bytestring"], DirectedEdge["cryptohash-sha256", "base"], DirectedEdge["cryptohash-sha256", "bytestring"], DirectedEdge["cryptol", "aeson"], DirectedEdge["cryptol", "aeson-pretty"], DirectedEdge["cryptol", "ansi-terminal"], DirectedEdge["cryptol", "array"], DirectedEdge["cryptol", "async"], DirectedEdge["cryptol", "base"], DirectedEdge["cryptol", "base-compat"], DirectedEdge["cryptol", "bytestring"], DirectedEdge["cryptol", "containers"], DirectedEdge["cryptol", "cryptol"], DirectedEdge["cryptol", "deepseq"], DirectedEdge["cryptol", "deepseq-generics"], DirectedEdge["cryptol", "directory"], DirectedEdge["cryptol", "filepath"], DirectedEdge["cryptol", "generic-trie"], DirectedEdge["cryptol", "gitrev"], DirectedEdge["cryptol", "GraphSCC"], DirectedEdge["cryptol", "haskeline"], DirectedEdge["cryptol", "heredoc"], DirectedEdge["cryptol", "monad-control"], DirectedEdge["cryptol", "monadLib"], DirectedEdge["cryptol", "old-time"], DirectedEdge["cryptol", "optparse-applicative"], DirectedEdge["cryptol", "presburger"], DirectedEdge["cryptol", "pretty"], DirectedEdge["cryptol", "process"], DirectedEdge["cryptol", "QuickCheck"], DirectedEdge["cryptol", "random"], DirectedEdge["cryptol", "sbv"], DirectedEdge["cryptol", "simple-smt"], DirectedEdge["cryptol", "smtLib"], DirectedEdge["cryptol", "syb"], DirectedEdge["cryptol", "template-haskell"], DirectedEdge["cryptol", "text"], DirectedEdge["cryptol", "tf-random"], DirectedEdge["cryptol", "transformers"], DirectedEdge["cryptol", "transformers-base"], DirectedEdge["cryptol", "unix"], DirectedEdge["cryptol", "unordered-containers"], DirectedEdge["cryptol", "utf8-string"], DirectedEdge["cryptol", "zeromq4-haskell"], DirectedEdge["cryptonite", "base"], DirectedEdge["cryptonite", "bytestring"], DirectedEdge["cryptonite", "deepseq"], DirectedEdge["cryptonite", "ghc-prim"], DirectedEdge["cryptonite", "integer-gmp"], DirectedEdge["cryptonite", "memory"], DirectedEdge["cryptonite-conduit", "base"], DirectedEdge["cryptonite-conduit", "bytestring"], DirectedEdge["cryptonite-conduit", "conduit"], DirectedEdge["cryptonite-conduit", "conduit-extra"], DirectedEdge["cryptonite-conduit", "cryptonite"], DirectedEdge["cryptonite-conduit", "resourcet"], DirectedEdge["cryptonite-conduit", "transformers"], DirectedEdge["cryptonite-openssl", "base"], DirectedEdge["cryptonite-openssl", "bytestring"], DirectedEdge["cryptonite-openssl", "memory"], DirectedEdge["cryptsy-api", "aeson"], DirectedEdge["cryptsy-api", "base"], DirectedEdge["cryptsy-api", "bytestring"], DirectedEdge["cryptsy-api", "deepseq"], DirectedEdge["cryptsy-api", "either"], DirectedEdge["cryptsy-api", "http-client"], DirectedEdge["cryptsy-api", "http-client-tls"], DirectedEdge["cryptsy-api", "old-locale"], DirectedEdge["cryptsy-api", "pipes-attoparsec"], DirectedEdge["cryptsy-api", "pipes-http"], DirectedEdge["cryptsy-api", "text"], DirectedEdge["cryptsy-api", "time"], DirectedEdge["cryptsy-api", "transformers"], DirectedEdge["cryptsy-api", "unordered-containers"], DirectedEdge["cryptsy-api", "vector"], DirectedEdge["crystalfontz", "base"], DirectedEdge["crystalfontz", "crc16-table"], DirectedEdge["crystalfontz", "MaybeT"], DirectedEdge["crystalfontz", "serialport"], DirectedEdge["cse-ghc-plugin", "base"], DirectedEdge["cse-ghc-plugin", "ghc"], DirectedEdge["csound-catalog", "base"], DirectedEdge["csound-catalog", "csound-expression"], DirectedEdge["csound-catalog", "csound-sampler"], DirectedEdge["csound-catalog", "sharc-timbre"], DirectedEdge["csound-catalog", "transformers"], DirectedEdge["csound-expression", "base"], DirectedEdge["csound-expression", "Boolean"], DirectedEdge["csound-expression", "colour"], DirectedEdge["csound-expression", "containers"], DirectedEdge["csound-expression", "csound-expression-dynamic"], DirectedEdge["csound-expression", "csound-expression-opcodes"], DirectedEdge["csound-expression", "csound-expression-typed"], DirectedEdge["csound-expression", "data-default"], DirectedEdge["csound-expression", "process"], DirectedEdge["csound-expression", "temporal-media"], DirectedEdge["csound-expression", "transformers"], DirectedEdge["csound-expression-dynamic", "array"], DirectedEdge["csound-expression-dynamic", "base"], DirectedEdge["csound-expression-dynamic", "Boolean"], DirectedEdge["csound-expression-dynamic", "containers"], DirectedEdge["csound-expression-dynamic", "data-default"], DirectedEdge["csound-expression-dynamic", "data-fix"], DirectedEdge["csound-expression-dynamic", "data-fix-cse"], DirectedEdge["csound-expression-dynamic", "hashable"], DirectedEdge["csound-expression-dynamic", "transformers"], DirectedEdge["csound-expression-dynamic", "wl-pprint"], DirectedEdge["csound-expression-opcodes", "base"], DirectedEdge["csound-expression-opcodes", "csound-expression-dynamic"], DirectedEdge["csound-expression-opcodes", "csound-expression-typed"], DirectedEdge["csound-expression-opcodes", "transformers"], DirectedEdge["csound-expression-typed", "base"], DirectedEdge["csound-expression-typed", "Boolean"], DirectedEdge["csound-expression-typed", "colour"], DirectedEdge["csound-expression-typed", "containers"], DirectedEdge["csound-expression-typed", "csound-expression-dynamic"], DirectedEdge["csound-expression-typed", "data-default"], DirectedEdge["csound-expression-typed", "deepseq"], DirectedEdge["csound-expression-typed", "ghc-prim"], DirectedEdge["csound-expression-typed", "hashable"], DirectedEdge["csound-expression-typed", "temporal-media"], DirectedEdge["csound-expression-typed", "transformers"], DirectedEdge["csound-expression-typed", "wl-pprint"], DirectedEdge["csound-sampler", "base"], DirectedEdge["csound-sampler", "csound-expression"], DirectedEdge["csound-sampler", "transformers"], DirectedEdge["csp", "base"], DirectedEdge["csp", "containers"], DirectedEdge["csp", "mtl"], DirectedEdge["csp", "nondeterminism"], DirectedEdge["cspmchecker", "base"], DirectedEdge["cspmchecker", "directory"], DirectedEdge["cspmchecker", "filepath"], DirectedEdge["cspmchecker", "haskeline"], DirectedEdge["cspmchecker", "libcspm"], DirectedEdge["cspmchecker", "mtl"], DirectedEdge["css", "base"], DirectedEdge["css", "mtl"], DirectedEdge["css", "text"], DirectedEdge["css-syntax", "attoparsec"], DirectedEdge["css-syntax", "base"], DirectedEdge["css-syntax", "bytestring"], DirectedEdge["css-syntax", "scientific"], DirectedEdge["css-syntax", "text"], DirectedEdge["css-text", "attoparsec"], DirectedEdge["css-text", "base"], DirectedEdge["css-text", "text"], DirectedEdge["csv", "base"], DirectedEdge["csv", "filepath"], DirectedEdge["csv", "parsec"], DirectedEdge["csv-conduit", "array"], DirectedEdge["csv-conduit", "attoparsec"], DirectedEdge["csv-conduit", "base"], DirectedEdge["csv-conduit", "blaze-builder"], DirectedEdge["csv-conduit", "bytestring"], DirectedEdge["csv-conduit", "conduit"], DirectedEdge["csv-conduit", "conduit-extra"], DirectedEdge["csv-conduit", "containers"], DirectedEdge["csv-conduit", "csv-conduit"], DirectedEdge["csv-conduit", "data-default"], DirectedEdge["csv-conduit", "directory"], DirectedEdge["csv-conduit", "ghc-prim"], DirectedEdge["csv-conduit", "mmorph"], DirectedEdge["csv-conduit", "monad-control"], DirectedEdge["csv-conduit", "mtl"], DirectedEdge["csv-conduit", "primitive"], DirectedEdge["csv-conduit", "resourcet"], DirectedEdge["csv-conduit", "text"], DirectedEdge["csv-conduit", "transformers"], DirectedEdge["csv-conduit", "unordered-containers"], DirectedEdge["csv-conduit", "vector"], DirectedEdge["csv-enumerator", "attoparsec"], DirectedEdge["csv-enumerator", "attoparsec-enumerator"], DirectedEdge["csv-enumerator", "base"], DirectedEdge["csv-enumerator", "bytestring"], DirectedEdge["csv-enumerator", "containers"], DirectedEdge["csv-enumerator", "directory"], DirectedEdge["csv-enumerator", "enumerator"], DirectedEdge["csv-enumerator", "safe"], DirectedEdge["csv-enumerator", "transformers"], DirectedEdge["csv-enumerator", "unix-compat"], DirectedEdge["csv-nptools", "aeson"], DirectedEdge["csv-nptools", "base"], DirectedEdge["csv-nptools", "bytestring"], DirectedEdge["csv-nptools", "csv"], DirectedEdge["csv-nptools", "html"], DirectedEdge["csv-nptools", "tabular"], DirectedEdge["csv-nptools", "text"], DirectedEdge["csv-nptools", "txt-sushi"], DirectedEdge["csv-nptools", "vector"], DirectedEdge["csv-table", "base"], DirectedEdge["csv-table", "containers"], DirectedEdge["csv-table", "csv"], DirectedEdge["csv-table", "filepath"], DirectedEdge["csv-table", "process"], DirectedEdge["csv-to-qif", "base"], DirectedEdge["csv-to-qif", "explicit-exception"], DirectedEdge["csv-to-qif", "regex-tdfa"], DirectedEdge["csv-to-qif", "split"], DirectedEdge["csv-to-qif", "spreadsheet"], DirectedEdge["ctemplate", "base"], DirectedEdge["ctemplate", "bytestring"], DirectedEdge["ctkl", "array"], DirectedEdge["ctkl", "base"], DirectedEdge["ctpl", "array"], DirectedEdge["ctpl", "base"], DirectedEdge["ctpl", "chatty-text"], DirectedEdge["ctpl", "chatty-utils"], DirectedEdge["ctrie", "atomic-primops"], DirectedEdge["ctrie", "base"], DirectedEdge["ctrie", "hashable"], DirectedEdge["ctrie", "primitive"], DirectedEdge["cube", "base"], DirectedEdge["cube", "bytestring"], DirectedEdge["cube", "cereal"], DirectedEdge["cube", "containers"], DirectedEdge["cube", "cube"], DirectedEdge["cube", "hspec"], DirectedEdge["cube", "STL"], DirectedEdge["cubical", "array"], DirectedEdge["cubical", "base"], DirectedEdge["cubical", "BNFC"], DirectedEdge["cubical", "directory"], DirectedEdge["cubical", "filepath"], DirectedEdge["cubical", "haskeline"], DirectedEdge["cubical", "mtl"], DirectedEdge["cubical", "transformers"], DirectedEdge["cubicbezier", "base"], DirectedEdge["cubicbezier", "containers"], DirectedEdge["cubicbezier", "integration"], DirectedEdge["cubicbezier", "matrices"], DirectedEdge["cubicbezier", "microlens"], DirectedEdge["cubicbezier", "microlens-mtl"], DirectedEdge["cubicbezier", "microlens-th"], DirectedEdge["cubicbezier", "mtl"], DirectedEdge["cubicbezier", "vector"], DirectedEdge["cubicspline", "base"], DirectedEdge["cubicspline", "hmatrix"], DirectedEdge["cubicspline", "safe"], DirectedEdge["cublas", "base"], DirectedEdge["cublas", "cuda"], DirectedEdge["cublas", "filepath"], DirectedEdge["cublas", "language-c"], DirectedEdge["cublas", "storable-complex"], DirectedEdge["cublas", "template-haskell"], DirectedEdge["cuboid", "base"], DirectedEdge["cuboid", "GLUT"], DirectedEdge["cuboid", "Yampa"], DirectedEdge["cuda", "base"], DirectedEdge["cuda", "bytestring"], DirectedEdge["cuda", "cuda"], DirectedEdge["cuda", "pretty"], DirectedEdge["cuda", "template-haskell"], DirectedEdge["cudd", "array"], DirectedEdge["cudd", "base"], DirectedEdge["cudd", "mtl"], DirectedEdge["cudd", "transformers"], DirectedEdge["cufft", "base"], DirectedEdge["cufft", "cuda"], DirectedEdge["curl", "base"], DirectedEdge["curl", "bytestring"], DirectedEdge["curl", "containers"], DirectedEdge["curl-aeson", "aeson"], DirectedEdge["curl-aeson", "base"], DirectedEdge["curl-aeson", "curl"], DirectedEdge["curl-aeson", "text"], DirectedEdge["curl-aeson", "utf8-string"], DirectedEdge["curlhs", "base"], DirectedEdge["curlhs", "bytestring"], DirectedEdge["curlhs", "rtld"], DirectedEdge["curlhs", "time"], DirectedEdge["currency", "base"], DirectedEdge["currency", "containers"], DirectedEdge["currency", "hashable"], DirectedEdge["currency", "iso3166-country-codes"], DirectedEdge["current-locale", "base"], DirectedEdge["current-locale", "old-locale"], DirectedEdge["current-locale", "process"], DirectedEdge["current-locale", "split"], DirectedEdge["curry-base", "base"], DirectedEdge["curry-base", "containers"], DirectedEdge["curry-base", "directory"], DirectedEdge["curry-base", "filepath"], DirectedEdge["curry-base", "mtl"], DirectedEdge["curry-base", "old-time"], DirectedEdge["curry-base", "pretty"], DirectedEdge["curry-base", "syb"], DirectedEdge["curry-frontend", "base"], DirectedEdge["curry-frontend", "containers"], DirectedEdge["curry-frontend", "curry-base"], DirectedEdge["curry-frontend", "filepath"], DirectedEdge["curry-frontend", "mtl"], DirectedEdge["curry-frontend", "old-time"], DirectedEdge["curry-frontend", "pretty"], DirectedEdge["curry-frontend", "syb"], DirectedEdge["cursedcsv", "base"], DirectedEdge["cursedcsv", "bytestring"], DirectedEdge["cursedcsv", "csv-enumerator"], DirectedEdge["cursedcsv", "enumerator"], DirectedEdge["cursedcsv", "hscurses"], DirectedEdge["cursedcsv", "mtl"], DirectedEdge["cursedcsv", "natural-sort"], DirectedEdge["cursedcsv", "parseargs"], DirectedEdge["cursedcsv", "regex-tdfa"], DirectedEdge["cursedcsv", "safe"], DirectedEdge["cursedcsv", "unix"], DirectedEdge["curve25519", "base"], DirectedEdge["curve25519", "bytestring"], DirectedEdge["curve25519", "crypto-api"], DirectedEdge["curves", "base"], DirectedEdge["curves", "bytestring"], DirectedEdge["curves", "containers"], DirectedEdge["curves", "filepath"], DirectedEdge["curves", "HaXml"], DirectedEdge["curves", "JuicyPixels"], DirectedEdge["curves", "QuickCheck"], DirectedEdge["custom-prelude", "base"], DirectedEdge["custom-prelude", "basic-prelude"], DirectedEdge["custom-prelude", "monad-loops"], DirectedEdge["cv-combinators", "allocated-processor"], DirectedEdge["cv-combinators", "base"], DirectedEdge["cv-combinators", "HOpenCV"], DirectedEdge["cv-combinators", "vector-space"], DirectedEdge["cyclotomic", "arithmoi"], DirectedEdge["cyclotomic", "base"], DirectedEdge["cyclotomic", "containers"], DirectedEdge["cypher", "aeson"], DirectedEdge["cypher", "attoparsec"], DirectedEdge["cypher", "base"], DirectedEdge["cypher", "bytestring"], DirectedEdge["cypher", "classy-parallel"], DirectedEdge["cypher", "conduit"], DirectedEdge["cypher", "http-conduit"], DirectedEdge["cypher", "http-types"], DirectedEdge["cypher", "resourcet"], DirectedEdge["cypher", "text"], DirectedEdge["cypher", "transformers"], DirectedEdge["cypher", "transformers-base"], DirectedEdge["cypher", "unordered-containers"], DirectedEdge["cypher", "vector"], DirectedEdge["d-bus", "async"], DirectedEdge["d-bus", "attoparsec"], DirectedEdge["d-bus", "base"], DirectedEdge["d-bus", "binary"], DirectedEdge["d-bus", "blaze-builder"], DirectedEdge["d-bus", "bytestring"], DirectedEdge["d-bus", "conduit"], DirectedEdge["d-bus", "conduit-extra"], DirectedEdge["d-bus", "containers"], DirectedEdge["d-bus", "d-bus"], DirectedEdge["d-bus", "data-default"], DirectedEdge["d-bus", "exceptions"], DirectedEdge["d-bus", "free"], DirectedEdge["d-bus", "hslogger"], DirectedEdge["d-bus", "mtl"], DirectedEdge["d-bus", "network"], DirectedEdge["d-bus", "singletons"], DirectedEdge["d-bus", "stm"], DirectedEdge["d-bus", "template-haskell"], DirectedEdge["d-bus", "text"], DirectedEdge["d-bus", "transformers"], DirectedEdge["d-bus", "xml-conduit"], DirectedEdge["d-bus", "xml-picklers"], DirectedEdge["d-bus", "xml-types"], DirectedEdge["d3d11binding", "base"], DirectedEdge["d3d11binding", "c-storable-deriving"], DirectedEdge["d3d11binding", "d3d11binding"], DirectedEdge["d3d11binding", "vect"], DirectedEdge["d3js", "base"], DirectedEdge["d3js", "mtl"], DirectedEdge["d3js", "random"], DirectedEdge["d3js", "text"], DirectedEdge["daemonize-doublefork", "base"], DirectedEdge["daemonize-doublefork", "directory"], DirectedEdge["daemonize-doublefork", "unix"], DirectedEdge["daemons", "base"], DirectedEdge["daemons", "bytestring"], DirectedEdge["daemons", "cereal"], DirectedEdge["daemons", "containers"], DirectedEdge["daemons", "daemons"], DirectedEdge["daemons", "data-default"], DirectedEdge["daemons", "directory"], DirectedEdge["daemons", "filepath"], DirectedEdge["daemons", "ghc-prim"], DirectedEdge["daemons", "network"], DirectedEdge["daemons", "pipes"], DirectedEdge["daemons", "transformers"], DirectedEdge["daemons", "unix"], DirectedEdge["dag", "base"], DirectedEdge["dag", "constraints"], DirectedEdge["dag", "singletons"], DirectedEdge["damnpacket", "attoparsec"], DirectedEdge["damnpacket", "base"], DirectedEdge["damnpacket", "bytestring"], DirectedEdge["damnpacket", "containers"], DirectedEdge["damnpacket", "deepseq"], DirectedEdge["damnpacket", "text"], DirectedEdge["danibot", "aeson"], DirectedEdge["danibot", "async"], DirectedEdge["danibot", "attoparsec"], DirectedEdge["danibot", "base"], DirectedEdge["danibot", "bytestring"], DirectedEdge["danibot", "conceit"], DirectedEdge["danibot", "containers"], DirectedEdge["danibot", "danibot"], DirectedEdge["danibot", "foldl"], DirectedEdge["danibot", "lens"], DirectedEdge["danibot", "lens-aeson"], DirectedEdge["danibot", "monoid-subclasses"], DirectedEdge["danibot", "network"], DirectedEdge["danibot", "optparse-applicative"], DirectedEdge["danibot", "stm"], DirectedEdge["danibot", "streaming"], DirectedEdge["danibot", "text"], DirectedEdge["danibot", "transformers"], DirectedEdge["danibot", "websockets"], DirectedEdge["danibot", "wreq"], DirectedEdge["danibot", "wuss"], DirectedEdge["dao", "array"], DirectedEdge["dao", "base"], DirectedEdge["dao", "binary"], DirectedEdge["dao", "bytestring"], DirectedEdge["dao", "containers"], DirectedEdge["dao", "Crypto"], DirectedEdge["dao", "deepseq"], DirectedEdge["dao", "directory"], DirectedEdge["dao", "filepath"], DirectedEdge["dao", "mtl"], DirectedEdge["dao", "process"], DirectedEdge["dao", "random"], DirectedEdge["dao", "time"], DirectedEdge["dao", "transformers"], DirectedEdge["dao", "utf8-string"], DirectedEdge["dapi", "base"], DirectedEdge["dapi", "containers"], DirectedEdge["dapi", "explicit-exception"], DirectedEdge["dapi", "multiarg"], DirectedEdge["dapi", "old-locale"], DirectedEdge["dapi", "parsec"], DirectedEdge["dapi", "prednote"], DirectedEdge["dapi", "rainbow"], DirectedEdge["dapi", "text"], DirectedEdge["dapi", "time"], DirectedEdge["dapi", "transformers"], DirectedEdge["darcs", "array"], DirectedEdge["darcs", "async"], DirectedEdge["darcs", "attoparsec"], DirectedEdge["darcs", "base"], DirectedEdge["darcs", "base16-bytestring"], DirectedEdge["darcs", "binary"], DirectedEdge["darcs", "bytestring"], DirectedEdge["darcs", "containers"], DirectedEdge["darcs", "cryptohash"], DirectedEdge["darcs", "darcs"], DirectedEdge["darcs", "data-ordlist"], DirectedEdge["darcs", "directory"], DirectedEdge["darcs", "fgl"], DirectedEdge["darcs", "filepath"], DirectedEdge["darcs", "graphviz"], DirectedEdge["darcs", "hashable"], DirectedEdge["darcs", "haskeline"], DirectedEdge["darcs", "html"], DirectedEdge["darcs", "HTTP"], DirectedEdge["darcs", "mmap"], DirectedEdge["darcs", "mtl"], DirectedEdge["darcs", "network"], DirectedEdge["darcs", "network-uri"], DirectedEdge["darcs", "old-locale"], DirectedEdge["darcs", "old-time"], DirectedEdge["darcs", "parsec"], DirectedEdge["darcs", "process"], DirectedEdge["darcs", "random"], DirectedEdge["darcs", "regex-applicative"], DirectedEdge["darcs", "regex-compat-tdfa"], DirectedEdge["darcs", "sandi"], DirectedEdge["darcs", "tar"], DirectedEdge["darcs", "terminfo"], DirectedEdge["darcs", "text"], DirectedEdge["darcs", "time"], DirectedEdge["darcs", "transformers"], DirectedEdge["darcs", "transformers-compat"], DirectedEdge["darcs", "unix"], DirectedEdge["darcs", "unix-compat"], DirectedEdge["darcs", "utf8-string"], DirectedEdge["darcs", "vector"], DirectedEdge["darcs", "zip-archive"], DirectedEdge["darcs", "zlib"], DirectedEdge["darcs-benchmark", "base"], DirectedEdge["darcs-benchmark", "bytestring"], DirectedEdge["darcs-benchmark", "cmdargs"], DirectedEdge["darcs-benchmark", "containers"], DirectedEdge["darcs-benchmark", "datetime"], DirectedEdge["darcs-benchmark", "directory"], DirectedEdge["darcs-benchmark", "filepath"], DirectedEdge["darcs-benchmark", "hs-gchart"], DirectedEdge["darcs-benchmark", "html"], DirectedEdge["darcs-benchmark", "HTTP"], DirectedEdge["darcs-benchmark", "json"], DirectedEdge["darcs-benchmark", "mtl"], DirectedEdge["darcs-benchmark", "network"], DirectedEdge["darcs-benchmark", "old-locale"], DirectedEdge["darcs-benchmark", "process"], DirectedEdge["darcs-benchmark", "regex-posix"], DirectedEdge["darcs-benchmark", "SHA"], DirectedEdge["darcs-benchmark", "split"], DirectedEdge["darcs-benchmark", "statistics"], DirectedEdge["darcs-benchmark", "strict"], DirectedEdge["darcs-benchmark", "tabular"], DirectedEdge["darcs-benchmark", "tar"], DirectedEdge["darcs-benchmark", "time"], DirectedEdge["darcs-benchmark", "utf8-string"], DirectedEdge["darcs-benchmark", "uvector"], DirectedEdge["darcs-benchmark", "zlib"], DirectedEdge["darcs-beta", "array"], DirectedEdge["darcs-beta", "base"], DirectedEdge["darcs-beta", "bytestring"], DirectedEdge["darcs-beta", "cmdlib"], DirectedEdge["darcs-beta", "containers"], DirectedEdge["darcs-beta", "directory"], DirectedEdge["darcs-beta", "extensible-exceptions"], DirectedEdge["darcs-beta", "filepath"], DirectedEdge["darcs-beta", "hashed-storage"], DirectedEdge["darcs-beta", "haskeline"], DirectedEdge["darcs-beta", "html"], DirectedEdge["darcs-beta", "HTTP"], DirectedEdge["darcs-beta", "HUnit"], DirectedEdge["darcs-beta", "mmap"], DirectedEdge["darcs-beta", "mtl"], DirectedEdge["darcs-beta", "network"], DirectedEdge["darcs-beta", "old-time"], DirectedEdge["darcs-beta", "parsec"], DirectedEdge["darcs-beta", "process"], DirectedEdge["darcs-beta", "QuickCheck"], DirectedEdge["darcs-beta", "random"], DirectedEdge["darcs-beta", "regex-compat"], DirectedEdge["darcs-beta", "regex-posix"], DirectedEdge["darcs-beta", "shellish"], DirectedEdge["darcs-beta", "tar"], DirectedEdge["darcs-beta", "terminfo"], DirectedEdge["darcs-beta", "test-framework"], DirectedEdge["darcs-beta", "test-framework-hunit"], DirectedEdge["darcs-beta", "text"], DirectedEdge["darcs-beta", "unix"], DirectedEdge["darcs-beta", "unix-compat"], DirectedEdge["darcs-beta", "vector"], DirectedEdge["darcs-beta", "zlib"], DirectedEdge["darcs-buildpackage", "base"], DirectedEdge["darcs-buildpackage", "ConfigFile"], DirectedEdge["darcs-buildpackage", "directory"], DirectedEdge["darcs-buildpackage", "hslogger"], DirectedEdge["darcs-buildpackage", "MissingH"], DirectedEdge["darcs-buildpackage", "network"], DirectedEdge["darcs-buildpackage", "parsec"], DirectedEdge["darcs-buildpackage", "process"], DirectedEdge["darcs-buildpackage", "regex-compat"], DirectedEdge["darcs-buildpackage", "unix"], DirectedEdge["darcs-cabalized", "darcs"], DirectedEdge["darcs-cabalized", "array"], DirectedEdge["darcs-cabalized", "base"], DirectedEdge["darcs-cabalized", "bytestring"], DirectedEdge["darcs-cabalized", "containers"], DirectedEdge["darcs-cabalized", "directory"], DirectedEdge["darcs-cabalized", "html"], DirectedEdge["darcs-cabalized", "HUnit"], DirectedEdge["darcs-cabalized", "mtl"], DirectedEdge["darcs-cabalized", "old-time"], DirectedEdge["darcs-cabalized", "parsec"], DirectedEdge["darcs-cabalized", "process"], DirectedEdge["darcs-cabalized", "QuickCheck"], DirectedEdge["darcs-cabalized", "regex-compat"], DirectedEdge["darcs-cabalized", "unix"], DirectedEdge["darcs-fastconvert", "attoparsec"], DirectedEdge["darcs-fastconvert", "base"], DirectedEdge["darcs-fastconvert", "bytestring"], DirectedEdge["darcs-fastconvert", "cmdlib"], DirectedEdge["darcs-fastconvert", "containers"], DirectedEdge["darcs-fastconvert", "darcs"], DirectedEdge["darcs-fastconvert", "datetime"], DirectedEdge["darcs-fastconvert", "directory"], DirectedEdge["darcs-fastconvert", "filepath"], DirectedEdge["darcs-fastconvert", "hashed-storage"], DirectedEdge["darcs-fastconvert", "mtl"], DirectedEdge["darcs-fastconvert", "old-time"], DirectedEdge["darcs-fastconvert", "utf8-string"], DirectedEdge["darcs-graph", "base"], DirectedEdge["darcs-graph", "bytestring"], DirectedEdge["darcs-graph", "containers"], DirectedEdge["darcs-graph", "directory"], DirectedEdge["darcs-graph", "old-locale"], DirectedEdge["darcs-graph", "old-time"], DirectedEdge["darcs-graph", "process"], DirectedEdge["darcs-graph", "time"], DirectedEdge["darcs-monitor", "base"], DirectedEdge["darcs-monitor", "containers"], DirectedEdge["darcs-monitor", "directory"], DirectedEdge["darcs-monitor", "HaXml"], DirectedEdge["darcs-monitor", "mtl"], DirectedEdge["darcs-monitor", "process"], DirectedEdge["darcs-scripts", "base"], DirectedEdge["darcs2dot", "darcs"], DirectedEdge["darcs2dot", "base"], DirectedEdge["darcs2dot", "containers"], DirectedEdge["darcs2dot", "darcs"], DirectedEdge["darcs2dot", "graph-wrapper"], DirectedEdge["darcs2dot", "string-conversions"], DirectedEdge["darcsden", "aeson"], DirectedEdge["darcsden", "base"], DirectedEdge["darcsden", "base64-string"], DirectedEdge["darcsden", "blaze-builder"], DirectedEdge["darcsden", "blaze-html"], DirectedEdge["darcsden", "blaze-markup"], DirectedEdge["darcsden", "bytestring"], DirectedEdge["darcsden", "containers"], DirectedEdge["darcsden", "CouchDB"], DirectedEdge["darcsden", "darcs"], DirectedEdge["darcsden", "directory"], DirectedEdge["darcsden", "filepath"], DirectedEdge["darcsden", "harp"], DirectedEdge["darcsden", "hashed-storage"], DirectedEdge["darcsden", "highlighter"], DirectedEdge["darcsden", "highlighting-kate"], DirectedEdge["darcsden", "HsOpenSSL"], DirectedEdge["darcsden", "hsp"], DirectedEdge["darcsden", "http-conduit"], DirectedEdge["darcsden", "HUnit"], DirectedEdge["darcsden", "json"], DirectedEdge["darcsden", "mime-mail"], DirectedEdge["darcsden", "mtl"], DirectedEdge["darcsden", "old-locale"], DirectedEdge["darcsden", "old-time"], DirectedEdge["darcsden", "pandoc"], DirectedEdge["darcsden", "pcre-light"], DirectedEdge["darcsden", "process"], DirectedEdge["darcsden", "random"], DirectedEdge["darcsden", "redis"], DirectedEdge["darcsden", "safe"], DirectedEdge["darcsden", "SHA"], DirectedEdge["darcsden", "snap-core"], DirectedEdge["darcsden", "snap-server"], DirectedEdge["darcsden", "split"], DirectedEdge["darcsden", "ssh"], DirectedEdge["darcsden", "system-uuid"], DirectedEdge["darcsden", "text"], DirectedEdge["darcsden", "time"], DirectedEdge["darcsden", "utf8-string"], DirectedEdge["darcsden", "webdriver"], DirectedEdge["darcsden", "Win32-services-wrapper"], DirectedEdge["darcsden", "xhtml"], DirectedEdge["darcsden", "xml"], DirectedEdge["darcswatch", "base"], DirectedEdge["darcswatch", "bytestring"], DirectedEdge["darcswatch", "cgi"], DirectedEdge["darcswatch", "concurrentoutput"], DirectedEdge["darcswatch", "containers"], DirectedEdge["darcswatch", "Crypto"], DirectedEdge["darcswatch", "directory"], DirectedEdge["darcswatch", "filepath"], DirectedEdge["darcswatch", "HTTP"], DirectedEdge["darcswatch", "mime-string"], DirectedEdge["darcswatch", "mtl"], DirectedEdge["darcswatch", "network"], DirectedEdge["darcswatch", "old-locale"], DirectedEdge["darcswatch", "old-time"], DirectedEdge["darcswatch", "parsec"], DirectedEdge["darcswatch", "process"], DirectedEdge["darcswatch", "regex-compat"], DirectedEdge["darcswatch", "safe"], DirectedEdge["darcswatch", "time"], DirectedEdge["darcswatch", "unix"], DirectedEdge["darcswatch", "xhtml"], DirectedEdge["darcswatch", "zlib"], DirectedEdge["darkplaces-demo", "base"], DirectedEdge["darkplaces-demo", "binary"], DirectedEdge["darkplaces-demo", "bytestring"], DirectedEdge["darkplaces-demo", "containers"], DirectedEdge["darkplaces-demo", "darkplaces-demo"], DirectedEdge["darkplaces-demo", "darkplaces-text"], DirectedEdge["darkplaces-demo", "directory"], DirectedEdge["darkplaces-demo", "mtl"], DirectedEdge["darkplaces-demo", "optparse-applicative"], DirectedEdge["darkplaces-demo", "regex-tdfa"], DirectedEdge["darkplaces-demo", "transformers"], DirectedEdge["darkplaces-rcon", "base"], DirectedEdge["darkplaces-rcon", "byteable"], DirectedEdge["darkplaces-rcon", "bytestring"], DirectedEdge["darkplaces-rcon", "cryptohash"], DirectedEdge["darkplaces-rcon", "network"], DirectedEdge["darkplaces-rcon", "time"], DirectedEdge["darkplaces-rcon-util", "base"], DirectedEdge["darkplaces-rcon-util", "bytestring"], DirectedEdge["darkplaces-rcon-util", "ConfigFile"], DirectedEdge["darkplaces-rcon-util", "containers"], DirectedEdge["darkplaces-rcon-util", "darkplaces-rcon"], DirectedEdge["darkplaces-rcon-util", "darkplaces-rcon-util"], DirectedEdge["darkplaces-rcon-util", "darkplaces-text"], DirectedEdge["darkplaces-rcon-util", "directory"], DirectedEdge["darkplaces-rcon-util", "filepath"], DirectedEdge["darkplaces-rcon-util", "haskeline"], DirectedEdge["darkplaces-rcon-util", "HostAndPort"], DirectedEdge["darkplaces-rcon-util", "mtl"], DirectedEdge["darkplaces-rcon-util", "old-locale"], DirectedEdge["darkplaces-rcon-util", "optparse-applicative"], DirectedEdge["darkplaces-rcon-util", "text"], DirectedEdge["darkplaces-rcon-util", "time"], DirectedEdge["darkplaces-rcon-util", "utf8-string"], DirectedEdge["darkplaces-text", "ansi-terminal"], DirectedEdge["darkplaces-text", "array"], DirectedEdge["darkplaces-text", "base"], DirectedEdge["darkplaces-text", "bytestring"], DirectedEdge["darkplaces-text", "text"], DirectedEdge["darkplaces-text", "utf8-string"], DirectedEdge["darkplaces-text", "vector"], DirectedEdge["dash-haskell", "base"], DirectedEdge["dash-haskell", "Cabal"], DirectedEdge["dash-haskell", "containers"], DirectedEdge["dash-haskell", "direct-sqlite"], DirectedEdge["dash-haskell", "directory"], DirectedEdge["dash-haskell", "either"], DirectedEdge["dash-haskell", "filepath"], DirectedEdge["dash-haskell", "ghc"], DirectedEdge["dash-haskell", "haddock-api"], DirectedEdge["dash-haskell", "optparse-applicative"], DirectedEdge["dash-haskell", "parsec"], DirectedEdge["dash-haskell", "pipes"], DirectedEdge["dash-haskell", "sqlite-simple"], DirectedEdge["dash-haskell", "tagsoup"], DirectedEdge["dash-haskell", "text"], DirectedEdge["dash-haskell", "transformers"], DirectedEdge["data-accessor", "array"], DirectedEdge["data-accessor", "base"], DirectedEdge["data-accessor", "containers"], DirectedEdge["data-accessor", "transformers"], DirectedEdge["data-accessor-monadLib", "base"], DirectedEdge["data-accessor-monadLib", "data-accessor"], DirectedEdge["data-accessor-monadLib", "monadLib"], DirectedEdge["data-accessor-monads-fd", "base"], DirectedEdge["data-accessor-monads-fd", "data-accessor"], DirectedEdge["data-accessor-monads-fd", "monads-fd"], DirectedEdge["data-accessor-monads-fd", "transformers"], DirectedEdge["data-accessor-monads-tf", "base"], DirectedEdge["data-accessor-monads-tf", "data-accessor"], DirectedEdge["data-accessor-monads-tf", "monads-tf"], DirectedEdge["data-accessor-monads-tf", "transformers"], DirectedEdge["data-accessor-mtl", "base"], DirectedEdge["data-accessor-mtl", "data-accessor"], DirectedEdge["data-accessor-mtl", "mtl"], DirectedEdge["data-accessor-template", "base"], DirectedEdge["data-accessor-template", "data-accessor"], DirectedEdge["data-accessor-template", "template-haskell"], DirectedEdge["data-accessor-template", "utility-ht"], DirectedEdge["data-accessor-transformers", "base"], DirectedEdge["data-accessor-transformers", "data-accessor"], DirectedEdge["data-accessor-transformers", "transformers"], DirectedEdge["data-aviary", "base"], DirectedEdge["data-base", "base"], DirectedEdge["data-binary-ieee754", "base"], DirectedEdge["data-binary-ieee754", "binary"], DirectedEdge["data-bword", "base"], DirectedEdge["data-bword", "ghc-prim"], DirectedEdge["data-carousel", "base"], DirectedEdge["data-carousel", "containers"], DirectedEdge["data-carousel", "lens"], DirectedEdge["data-cell", "base"], DirectedEdge["data-checked", "base"], DirectedEdge["data-checked", "deepseq"], DirectedEdge["data-clist", "base"], DirectedEdge["data-clist", "deepseq"], DirectedEdge["data-clist", "QuickCheck"], DirectedEdge["data-concurrent-queue", "base"], DirectedEdge["data-concurrent-queue", "stm"], DirectedEdge["data-construction", "base"], DirectedEdge["data-cycle", "base"], DirectedEdge["data-cycle", "collections-api"], DirectedEdge["data-cycle", "collections-base-instances"], DirectedEdge["data-default", "base"], DirectedEdge["data-default", "data-default-class"], DirectedEdge["data-default", "data-default-instances-base"], DirectedEdge["data-default", "data-default-instances-containers"], DirectedEdge["data-default", "data-default-instances-dlist"], DirectedEdge["data-default", "data-default-instances-old-locale"], DirectedEdge["data-default-class", "base"], DirectedEdge["data-default-extra", "base"], DirectedEdge["data-default-extra", "data-default-class"], DirectedEdge["data-default-extra", "data-default-instances-base"], DirectedEdge["data-default-extra", "data-default-instances-bytestring"], DirectedEdge["data-default-extra", "data-default-instances-case-insensitive"], DirectedEdge["data-default-extra", "data-default-instances-containers"], DirectedEdge["data-default-extra", "data-default-instances-dlist"], DirectedEdge["data-default-extra", "data-default-instances-new-base"], DirectedEdge["data-default-extra", "data-default-instances-old-locale"], DirectedEdge["data-default-extra", "data-default-instances-text"], DirectedEdge["data-default-extra", "data-default-instances-unordered-containers"], DirectedEdge["data-default-extra", "data-default-instances-vector"], DirectedEdge["data-default-extra", "ghc-prim"], DirectedEdge["data-default-generics", "base"], DirectedEdge["data-default-generics", "bytestring"], DirectedEdge["data-default-generics", "containers"], DirectedEdge["data-default-generics", "dlist"], DirectedEdge["data-default-generics", "ghc-prim"], DirectedEdge["data-default-generics", "old-locale"], DirectedEdge["data-default-generics", "text"], DirectedEdge["data-default-generics", "time"], DirectedEdge["data-default-generics", "unordered-containers"], DirectedEdge["data-default-generics", "vector"], DirectedEdge["data-default-instances-base", "base"], DirectedEdge["data-default-instances-base", "data-default-class"], DirectedEdge["data-default-instances-bytestring", "base"], DirectedEdge["data-default-instances-bytestring", "bytestring"], DirectedEdge["data-default-instances-bytestring", "data-default-class"], DirectedEdge["data-default-instances-case-insensitive", "case-insensitive"], DirectedEdge["data-default-instances-case-insensitive", "data-default-class"], DirectedEdge["data-default-instances-containers", "base"], DirectedEdge["data-default-instances-containers", "containers"], DirectedEdge["data-default-instances-containers", "data-default-class"], DirectedEdge["data-default-instances-dlist", "base"], DirectedEdge["data-default-instances-dlist", "data-default-class"], DirectedEdge["data-default-instances-dlist", "dlist"], DirectedEdge["data-default-instances-new-base", "base"], DirectedEdge["data-default-instances-new-base", "data-default-class"], DirectedEdge["data-default-instances-new-base", "data-default-instances-base"], DirectedEdge["data-default-instances-old-locale", "base"], DirectedEdge["data-default-instances-old-locale", "data-default-class"], DirectedEdge["data-default-instances-old-locale", "old-locale"], DirectedEdge["data-default-instances-text", "base"], DirectedEdge["data-default-instances-text", "data-default-class"], DirectedEdge["data-default-instances-text", "text"], DirectedEdge["data-default-instances-unordered-containers", "data-default-class"], DirectedEdge["data-default-instances-unordered-containers", "unordered-containers"], DirectedEdge["data-default-instances-vector", "data-default-class"], DirectedEdge["data-default-instances-vector", "vector"], DirectedEdge["data-dispersal", "AES"], DirectedEdge["data-dispersal", "array"], DirectedEdge["data-dispersal", "base"], DirectedEdge["data-dispersal", "binary"], DirectedEdge["data-dispersal", "bytestring"], DirectedEdge["data-dispersal", "entropy"], DirectedEdge["data-dispersal", "finite-field"], DirectedEdge["data-dispersal", "matrix"], DirectedEdge["data-dispersal", "secret-sharing"], DirectedEdge["data-dispersal", "syb"], DirectedEdge["data-dispersal", "vector"], DirectedEdge["data-dword", "base"], DirectedEdge["data-dword", "data-bword"], DirectedEdge["data-dword", "ghc-prim"], DirectedEdge["data-dword", "hashable"], DirectedEdge["data-dword", "template-haskell"], DirectedEdge["data-easy", "base"], DirectedEdge["data-easy", "containers"], DirectedEdge["data-easy", "safe"], DirectedEdge["data-embed", "base"], DirectedEdge["data-embed", "bytestring"], DirectedEdge["data-embed", "cereal"], DirectedEdge["data-embed", "containers"], DirectedEdge["data-embed", "directory"], DirectedEdge["data-embed", "executable-path"], DirectedEdge["data-embed", "hashable"], DirectedEdge["data-embed", "utf8-string"], DirectedEdge["data-endian", "base"], DirectedEdge["data-extend-generic", "base"], DirectedEdge["data-filepath", "base"], DirectedEdge["data-filepath", "bifunctors"], DirectedEdge["data-filepath", "ghc-prim"], DirectedEdge["data-filepath", "semigroups"], DirectedEdge["data-filepath", "split"], DirectedEdge["data-filepath", "template-haskell"], DirectedEdge["data-fin", "base"], DirectedEdge["data-fin", "lazysmallcheck"], DirectedEdge["data-fin", "prelude-safeenum"], DirectedEdge["data-fin", "QuickCheck"], DirectedEdge["data-fin", "reflection"], DirectedEdge["data-fin", "smallcheck"], DirectedEdge["data-fin", "tagged"], DirectedEdge["data-fin-simple", "base"], DirectedEdge["data-fix", "base"], DirectedEdge["data-fix-cse", "base"], DirectedEdge["data-fix-cse", "containers"], DirectedEdge["data-fix-cse", "data-fix"], DirectedEdge["data-fix-cse", "transformers"], DirectedEdge["data-flags", "base"], DirectedEdge["data-flags", "template-haskell"], DirectedEdge["data-flagset", "base"], DirectedEdge["data-fresh", "base"], DirectedEdge["data-fresh", "free"], DirectedEdge["data-fresh", "transformers"], DirectedEdge["data-function-meld", "base"], DirectedEdge["data-function-tacit", "base"], DirectedEdge["data-hash", "array"], DirectedEdge["data-hash", "base"], DirectedEdge["data-hash", "containers"], DirectedEdge["data-interval", "base"], DirectedEdge["data-interval", "deepseq"], DirectedEdge["data-interval", "extended-reals"], DirectedEdge["data-interval", "hashable"], DirectedEdge["data-interval", "lattices"], DirectedEdge["data-inttrie", "base"], DirectedEdge["data-ivar", "base"], DirectedEdge["data-ivar", "containers"], DirectedEdge["data-json-token", "base"], DirectedEdge["data-json-token", "data-json-token"], DirectedEdge["data-kiln", "base"], DirectedEdge["data-kiln", "containers"], DirectedEdge["data-kiln", "data-fix"], DirectedEdge["data-kiln", "IfElse"], DirectedEdge["data-kiln", "mtl"], DirectedEdge["data-kiln", "transformers"], DirectedEdge["data-layer", "base"], DirectedEdge["data-layer", "convert"], DirectedEdge["data-layer", "data-construction"], DirectedEdge["data-layer", "lens"], DirectedEdge["data-layout", "base"], DirectedEdge["data-layout", "bytestring"], DirectedEdge["data-layout", "vector"], DirectedEdge["data-lens", "base"], DirectedEdge["data-lens", "comonad"], DirectedEdge["data-lens", "containers"], DirectedEdge["data-lens", "semigroupoids"], DirectedEdge["data-lens", "transformers"], DirectedEdge["data-lens-fd", "base"], DirectedEdge["data-lens-fd", "comonad"], DirectedEdge["data-lens-fd", "data-lens"], DirectedEdge["data-lens-fd", "mtl"], DirectedEdge["data-lens-fd", "transformers"], DirectedEdge["data-lens-ixset", "data-store"], DirectedEdge["data-lens-ixset", "tables"], DirectedEdge["data-lens-ixset", "lens"], DirectedEdge["data-lens-ixset", "base"], DirectedEdge["data-lens-ixset", "data-lens"], DirectedEdge["data-lens-ixset", "ixset"], DirectedEdge["data-lens-light", "base"], DirectedEdge["data-lens-light", "mtl"], DirectedEdge["data-lens-light", "template-haskell"], DirectedEdge["data-lens-template", "base"], DirectedEdge["data-lens-template", "data-lens"], DirectedEdge["data-lens-template", "template-haskell"], DirectedEdge["data-list-sequences", "base"], DirectedEdge["data-map-multikey", "base"], DirectedEdge["data-map-multikey", "containers"], DirectedEdge["data-memocombinators", "array"], DirectedEdge["data-memocombinators", "base"], DirectedEdge["data-memocombinators", "data-inttrie"], DirectedEdge["data-named", "attoparsec"], DirectedEdge["data-named", "base"], DirectedEdge["data-named", "binary"], DirectedEdge["data-named", "containers"], DirectedEdge["data-named", "text"], DirectedEdge["data-nat", "base"], DirectedEdge["data-nat", "ghc-prim"], DirectedEdge["data-nat", "semigroups"], DirectedEdge["data-object", "aeson"], DirectedEdge["data-object", "base"], DirectedEdge["data-object", "bytestring"], DirectedEdge["data-object", "failure"], DirectedEdge["data-object", "text"], DirectedEdge["data-object", "time"], DirectedEdge["data-object-json", "aeson"], DirectedEdge["data-object-json", "base"], DirectedEdge["data-object-json", "bytestring"], DirectedEdge["data-object-json", "bytestring-trie"], DirectedEdge["data-object-json", "convertible-text"], DirectedEdge["data-object-json", "data-object"], DirectedEdge["data-object-json", "failure"], DirectedEdge["data-object-json", "JSONb"], DirectedEdge["data-object-json", "text"], DirectedEdge["data-object-yaml", "yaml"], DirectedEdge["data-object-yaml", "base"], DirectedEdge["data-object-yaml", "bytestring"], DirectedEdge["data-object-yaml", "conduit"], DirectedEdge["data-object-yaml", "containers"], DirectedEdge["data-object-yaml", "convertible-text"], DirectedEdge["data-object-yaml", "data-object"], DirectedEdge["data-object-yaml", "failure"], DirectedEdge["data-object-yaml", "HUnit"], DirectedEdge["data-object-yaml", "test-framework"], DirectedEdge["data-object-yaml", "test-framework-hunit"], DirectedEdge["data-object-yaml", "text"], DirectedEdge["data-object-yaml", "transformers"], DirectedEdge["data-object-yaml", "yaml"], DirectedEdge["data-or", "base"], DirectedEdge["data-ordlist", "base"], DirectedEdge["data-partition", "base"], DirectedEdge["data-partition", "containers"], DirectedEdge["data-pprint", "base"], DirectedEdge["data-pprint", "deepseq"], DirectedEdge["data-pprint", "mtl"], DirectedEdge["data-pprint", "parallel"], DirectedEdge["data-pprint", "pretty"], DirectedEdge["data-pprint", "time"], DirectedEdge["data-quotientref", "base"], DirectedEdge["data-r-tree", "base"], DirectedEdge["data-r-tree", "binary"], DirectedEdge["data-r-tree", "deepseq"], DirectedEdge["data-ref", "base"], DirectedEdge["data-ref", "stm"], DirectedEdge["data-ref", "transformers"], DirectedEdge["data-reify", "base"], DirectedEdge["data-reify", "containers"], DirectedEdge["data-reify", "data-reify"], DirectedEdge["data-reify-cse", "base"], DirectedEdge["data-reify-cse", "containers"], DirectedEdge["data-reify-cse", "data-reify"], DirectedEdge["data-repr", "base"], DirectedEdge["data-repr", "generic-deriving"], DirectedEdge["data-repr", "lens"], DirectedEdge["data-result", "base"], DirectedEdge["data-result", "poly-control"], DirectedEdge["data-result", "prologue"], DirectedEdge["data-rev", "base"], DirectedEdge["data-rev", "bytestring"], DirectedEdge["data-rev", "containers"], DirectedEdge["data-rev", "text"], DirectedEdge["data-rev", "vector"], DirectedEdge["data-rope", "base"], DirectedEdge["data-rope", "bytestring"], DirectedEdge["data-rope", "bytestring-mmap"], DirectedEdge["data-rope", "unix"], DirectedEdge["data-rtuple", "base"], DirectedEdge["data-rtuple", "lens"], DirectedEdge["data-rtuple", "typelevel"], DirectedEdge["data-size", "base"], DirectedEdge["data-size", "bytestring"], DirectedEdge["data-size", "containers"], DirectedEdge["data-size", "deepseq"], DirectedEdge["data-size", "text"], DirectedEdge["data-spacepart", "spacepart"], DirectedEdge["data-spacepart", "base"], DirectedEdge["data-spacepart", "vector-space"], DirectedEdge["data-store", "base"], DirectedEdge["data-store", "cereal"], DirectedEdge["data-store", "containers"], DirectedEdge["data-store", "deepseq"], DirectedEdge["data-store", "lens"], DirectedEdge["data-store", "safecopy"], DirectedEdge["data-store", "transformers"], DirectedEdge["data-stringmap", "base"], DirectedEdge["data-stringmap", "binary"], DirectedEdge["data-stringmap", "containers"], DirectedEdge["data-stringmap", "deepseq"], DirectedEdge["data-structure-inferrer", "ansi-terminal"], DirectedEdge["data-structure-inferrer", "array"], DirectedEdge["data-structure-inferrer", "base"], DirectedEdge["data-structure-inferrer", "deepseq"], DirectedEdge["data-structure-inferrer", "derive"], DirectedEdge["data-structure-inferrer", "directory"], DirectedEdge["data-structure-inferrer", "filepath"], DirectedEdge["data-structure-inferrer", "language-c"], DirectedEdge["data-structure-inferrer", "mtl"], DirectedEdge["data-structure-inferrer", "random"], DirectedEdge["data-structure-inferrer", "safe"], DirectedEdge["data-structure-inferrer", "utility-ht"], DirectedEdge["data-tensor", "base"], DirectedEdge["data-textual", "base"], DirectedEdge["data-textual", "bytestring"], DirectedEdge["data-textual", "parsers"], DirectedEdge["data-textual", "text"], DirectedEdge["data-textual", "text-printer"], DirectedEdge["data-timeout", "base"], DirectedEdge["data-timeout", "data-textual"], DirectedEdge["data-timeout", "parsers"], DirectedEdge["data-timeout", "tagged"], DirectedEdge["data-timeout", "text-printer"], DirectedEdge["data-timeout", "transformers-base"], DirectedEdge["data-transform", "base"], DirectedEdge["data-transform", "containers"], DirectedEdge["data-transform", "mtl"], DirectedEdge["data-treify", "base"], DirectedEdge["data-treify", "containers"], DirectedEdge["data-treify", "ty"], DirectedEdge["data-type", "base"], DirectedEdge["data-util", "base"], DirectedEdge["data-variant", "base"], DirectedEdge["data-variant", "safe"], DirectedEdge["database-migrate", "base"], DirectedEdge["database-migrate", "bytestring"], DirectedEdge["database-migrate", "cmdargs"], DirectedEdge["database-migrate", "containers"], DirectedEdge["database-migrate", "directory"], DirectedEdge["database-migrate", "either"], DirectedEdge["database-migrate", "filepath"], DirectedEdge["database-migrate", "lens"], DirectedEdge["database-migrate", "postgresql-simple"], DirectedEdge["database-migrate", "text"], DirectedEdge["database-migrate", "time"], DirectedEdge["database-migrate", "transformers"], DirectedEdge["database-study", "base"], DirectedEdge["database-study", "containers"], DirectedEdge["database-study", "special-functors"], DirectedEdge["datadog", "aeson"], DirectedEdge["datadog", "auto-update"], DirectedEdge["datadog", "base"], DirectedEdge["datadog", "buffer-builder"], DirectedEdge["datadog", "bytestring"], DirectedEdge["datadog", "lens"], DirectedEdge["datadog", "lifted-base"], DirectedEdge["datadog", "monad-control"], DirectedEdge["datadog", "network"], DirectedEdge["datadog", "old-locale"], DirectedEdge["datadog", "text"], DirectedEdge["datadog", "time"], DirectedEdge["datadog", "transformers-base"], DirectedEdge["dataenc", "sandi"], DirectedEdge["dataenc", "array"], DirectedEdge["dataenc", "base"], DirectedEdge["dataenc", "containers"], DirectedEdge["dataenc", "HUnit"], DirectedEdge["dataenc", "QuickCheck"], DirectedEdge["dataenc", "test-framework"], DirectedEdge["dataenc", "test-framework-hunit"], DirectedEdge["dataenc", "test-framework-th"], DirectedEdge["dataflow", "aeson"], DirectedEdge["dataflow", "base"], DirectedEdge["dataflow", "blaze-html"], DirectedEdge["dataflow", "bytestring"], DirectedEdge["dataflow", "containers"], DirectedEdge["dataflow", "dataflow"], DirectedEdge["dataflow", "filepath"], DirectedEdge["dataflow", "gitrev"], DirectedEdge["dataflow", "hastache"], DirectedEdge["dataflow", "markdown"], DirectedEdge["dataflow", "MissingH"], DirectedEdge["dataflow", "mtl"], DirectedEdge["dataflow", "parsec"], DirectedEdge["dataflow", "text"], DirectedEdge["dataflow", "vector"], DirectedEdge["datalog", "base"], DirectedEdge["datalog", "containers"], DirectedEdge["datalog", "datalog"], DirectedEdge["datalog", "exceptions"], DirectedEdge["datalog", "hashable"], DirectedEdge["datalog", "haskeline"], DirectedEdge["datalog", "parsec"], DirectedEdge["datalog", "pretty"], DirectedEdge["datalog", "text"], DirectedEdge["datalog", "transformers"], DirectedEdge["datalog", "unordered-containers"], DirectedEdge["datalog", "vector"], DirectedEdge["datapacker", "base"], DirectedEdge["datapacker", "directory"], DirectedEdge["datapacker", "filepath"], DirectedEdge["datapacker", "hslogger"], DirectedEdge["datapacker", "MissingH"], DirectedEdge["datapacker", "mtl"], DirectedEdge["datapacker", "process"], DirectedEdge["datapacker", "unix"], DirectedEdge["dataurl", "attoparsec"], DirectedEdge["dataurl", "base"], DirectedEdge["dataurl", "base64-bytestring"], DirectedEdge["dataurl", "bytestring"], DirectedEdge["dataurl", "text"], DirectedEdge["date-cache", "base"], DirectedEdge["date-cache", "bytestring"], DirectedEdge["dates", "base"], DirectedEdge["dates", "base-unicode-symbols"], DirectedEdge["dates", "parsec"], DirectedEdge["dates", "syb"], DirectedEdge["dates", "time"], DirectedEdge["datetime", "base"], DirectedEdge["datetime", "old-locale"], DirectedEdge["datetime", "old-time"], DirectedEdge["datetime", "time"], DirectedEdge["datetime-sb", "base"], DirectedEdge["datetime-sb", "old-locale"], DirectedEdge["datetime-sb", "old-time"], DirectedEdge["datetime-sb", "time"], DirectedEdge["dawdle", "base"], DirectedEdge["dawdle", "dawdle"], DirectedEdge["dawdle", "filepath"], DirectedEdge["dawdle", "parsec"], DirectedEdge["dawdle", "pretty"], DirectedEdge["dawdle", "text"], DirectedEdge["dawdle", "time"], DirectedEdge["dawg", "base"], DirectedEdge["dawg", "binary"], DirectedEdge["dawg", "containers"], DirectedEdge["dawg", "mtl"], DirectedEdge["dawg", "transformers"], DirectedEdge["dawg", "vector"], DirectedEdge["dawg", "vector-binary"], DirectedEdge["dawg-ord", "base"], DirectedEdge["dawg-ord", "containers"], DirectedEdge["dawg-ord", "mtl"], DirectedEdge["dawg-ord", "transformers"], DirectedEdge["dawg-ord", "vector"], DirectedEdge["dbcleaner", "base"], DirectedEdge["dbcleaner", "postgresql-simple"], DirectedEdge["dbcleaner", "text"], DirectedEdge["dbf", "base"], DirectedEdge["dbf", "binary"], DirectedEdge["dbf", "bytestring"], DirectedEdge["dbf", "monad-loops"], DirectedEdge["dbf", "rwlock"], DirectedEdge["dbjava", "base"], DirectedEdge["dbjava", "binary"], DirectedEdge["dbjava", "bytestring"], DirectedEdge["dbjava", "process"], DirectedEdge["dbjava", "uulib"], DirectedEdge["dbmigrations", "base"], DirectedEdge["dbmigrations", "bytestring"], DirectedEdge["dbmigrations", "configurator"], DirectedEdge["dbmigrations", "containers"], DirectedEdge["dbmigrations", "dbmigrations"], DirectedEdge["dbmigrations", "directory"], DirectedEdge["dbmigrations", "fgl"], DirectedEdge["dbmigrations", "filepath"], DirectedEdge["dbmigrations", "HDBC"], DirectedEdge["dbmigrations", "HDBC-postgresql"], DirectedEdge["dbmigrations", "mtl"], DirectedEdge["dbmigrations", "mysql"], DirectedEdge["dbmigrations", "mysql-simple"], DirectedEdge["dbmigrations", "random"], DirectedEdge["dbmigrations", "split"], DirectedEdge["dbmigrations", "template-haskell"], DirectedEdge["dbmigrations", "text"], DirectedEdge["dbmigrations", "time"], DirectedEdge["dbmigrations", "yaml-light"], DirectedEdge["dbus", "base"], DirectedEdge["dbus", "bytestring"], DirectedEdge["dbus", "cereal"], DirectedEdge["dbus", "containers"], DirectedEdge["dbus", "libxml-sax"], DirectedEdge["dbus", "network"], DirectedEdge["dbus", "parsec"], DirectedEdge["dbus", "random"], DirectedEdge["dbus", "text"], DirectedEdge["dbus", "transformers"], DirectedEdge["dbus", "unix"], DirectedEdge["dbus", "vector"], DirectedEdge["dbus", "xml-types"], DirectedEdge["dbus-client", "dbus"], DirectedEdge["dbus-client", "base"], DirectedEdge["dbus-client", "containers"], DirectedEdge["dbus-client", "dbus-core"], DirectedEdge["dbus-client", "monads-tf"], DirectedEdge["dbus-client", "text"], DirectedEdge["dbus-client", "transformers"], DirectedEdge["dbus-core", "dbus"], DirectedEdge["dbus-core", "base"], DirectedEdge["dbus-core", "binary"], DirectedEdge["dbus-core", "bytestring"], DirectedEdge["dbus-core", "containers"], DirectedEdge["dbus-core", "libxml-sax"], DirectedEdge["dbus-core", "network"], DirectedEdge["dbus-core", "parsec"], DirectedEdge["dbus-core", "text"], DirectedEdge["dbus-core", "unix"], DirectedEdge["dbus-core", "vector"], DirectedEdge["dbus-core", "xml-types"], DirectedEdge["dbus-qq", "base"], DirectedEdge["dbus-qq", "containers"], DirectedEdge["dbus-qq", "dbus"], DirectedEdge["dbus-qq", "parsec"], DirectedEdge["dbus-qq", "template-haskell"], DirectedEdge["dbus-th", "base"], DirectedEdge["dbus-th", "containers"], DirectedEdge["dbus-th", "dbus"], DirectedEdge["dbus-th", "syb"], DirectedEdge["dbus-th", "template-haskell"], DirectedEdge["dbus-th", "text"], DirectedEdge["dbus-th-introspection", "base"], DirectedEdge["dbus-th-introspection", "cmdargs"], DirectedEdge["dbus-th-introspection", "containers"], DirectedEdge["dbus-th-introspection", "dbus"], DirectedEdge["dbus-th-introspection", "dbus-th"], DirectedEdge["dbus-th-introspection", "template-haskell"], DirectedEdge["dclabel", "lio"], DirectedEdge["dclabel", "base"], DirectedEdge["dclabel", "bytestring"], DirectedEdge["dclabel", "cereal"], DirectedEdge["dclabel", "containers"], DirectedEdge["dclabel-eci11", "lio"], DirectedEdge["dclabel-eci11", "base"], DirectedEdge["dclabel-eci11", "pretty"], DirectedEdge["dclabel-eci11", "QuickCheck"], DirectedEdge["ddc-base", "base"], DirectedEdge["ddc-base", "containers"], DirectedEdge["ddc-base", "deepseq"], DirectedEdge["ddc-base", "parsec"], DirectedEdge["ddc-base", "transformers"], DirectedEdge["ddc-base", "wl-pprint"], DirectedEdge["ddc-build", "base"], DirectedEdge["ddc-build", "containers"], DirectedEdge["ddc-build", "ddc-base"], DirectedEdge["ddc-build", "ddc-core"], DirectedEdge["ddc-build", "ddc-core-babel"], DirectedEdge["ddc-build", "ddc-core-flow"], DirectedEdge["ddc-build", "ddc-core-llvm"], DirectedEdge["ddc-build", "ddc-core-salt"], DirectedEdge["ddc-build", "ddc-core-simpl"], DirectedEdge["ddc-build", "ddc-core-tetra"], DirectedEdge["ddc-build", "ddc-source-tetra"], DirectedEdge["ddc-build", "deepseq"], DirectedEdge["ddc-build", "directory"], DirectedEdge["ddc-build", "filepath"], DirectedEdge["ddc-build", "mtl"], DirectedEdge["ddc-build", "process"], DirectedEdge["ddc-build", "time"], DirectedEdge["ddc-code", "base"], DirectedEdge["ddc-code", "filepath"], DirectedEdge["ddc-core", "array"], DirectedEdge["ddc-core", "base"], DirectedEdge["ddc-core", "containers"], DirectedEdge["ddc-core", "ddc-base"], DirectedEdge["ddc-core", "deepseq"], DirectedEdge["ddc-core", "directory"], DirectedEdge["ddc-core", "mtl"], DirectedEdge["ddc-core", "text"], DirectedEdge["ddc-core", "transformers"], DirectedEdge["ddc-core-babel", "base"], DirectedEdge["ddc-core-babel", "containers"], DirectedEdge["ddc-core-babel", "ddc-base"], DirectedEdge["ddc-core-babel", "ddc-core"], DirectedEdge["ddc-core-babel", "ddc-core-tetra"], DirectedEdge["ddc-core-eval", "array"], DirectedEdge["ddc-core-eval", "base"], DirectedEdge["ddc-core-eval", "containers"], DirectedEdge["ddc-core-eval", "ddc-base"], DirectedEdge["ddc-core-eval", "ddc-core"], DirectedEdge["ddc-core-eval", "deepseq"], DirectedEdge["ddc-core-eval", "mtl"], DirectedEdge["ddc-core-eval", "transformers"], DirectedEdge["ddc-core-flow", "array"], DirectedEdge["ddc-core-flow", "base"], DirectedEdge["ddc-core-flow", "containers"], DirectedEdge["ddc-core-flow", "ddc-base"], DirectedEdge["ddc-core-flow", "ddc-core"], DirectedEdge["ddc-core-flow", "ddc-core-salt"], DirectedEdge["ddc-core-flow", "ddc-core-simpl"], DirectedEdge["ddc-core-flow", "ddc-core-tetra"], DirectedEdge["ddc-core-flow", "deepseq"], DirectedEdge["ddc-core-flow", "limp"], DirectedEdge["ddc-core-flow", "limp-cbc"], DirectedEdge["ddc-core-flow", "mtl"], DirectedEdge["ddc-core-flow", "transformers"], DirectedEdge["ddc-core-llvm", "array"], DirectedEdge["ddc-core-llvm", "base"], DirectedEdge["ddc-core-llvm", "bytestring"], DirectedEdge["ddc-core-llvm", "containers"], DirectedEdge["ddc-core-llvm", "ddc-base"], DirectedEdge["ddc-core-llvm", "ddc-core"], DirectedEdge["ddc-core-llvm", "ddc-core-salt"], DirectedEdge["ddc-core-llvm", "ddc-core-simpl"], DirectedEdge["ddc-core-llvm", "mtl"], DirectedEdge["ddc-core-llvm", "text"], DirectedEdge["ddc-core-llvm", "transformers"], DirectedEdge["ddc-core-salt", "array"], DirectedEdge["ddc-core-salt", "base"], DirectedEdge["ddc-core-salt", "containers"], DirectedEdge["ddc-core-salt", "ddc-base"], DirectedEdge["ddc-core-salt", "ddc-core"], DirectedEdge["ddc-core-salt", "deepseq"], DirectedEdge["ddc-core-salt", "mtl"], DirectedEdge["ddc-core-salt", "text"], DirectedEdge["ddc-core-salt", "transformers"], DirectedEdge["ddc-core-simpl", "array"], DirectedEdge["ddc-core-simpl", "base"], DirectedEdge["ddc-core-simpl", "containers"], DirectedEdge["ddc-core-simpl", "ddc-base"], DirectedEdge["ddc-core-simpl", "ddc-core"], DirectedEdge["ddc-core-simpl", "deepseq"], DirectedEdge["ddc-core-simpl", "mtl"], DirectedEdge["ddc-core-simpl", "transformers"], DirectedEdge["ddc-core-tetra", "array"], DirectedEdge["ddc-core-tetra", "base"], DirectedEdge["ddc-core-tetra", "containers"], DirectedEdge["ddc-core-tetra", "ddc-base"], DirectedEdge["ddc-core-tetra", "ddc-core"], DirectedEdge["ddc-core-tetra", "ddc-core-salt"], DirectedEdge["ddc-core-tetra", "ddc-core-simpl"], DirectedEdge["ddc-core-tetra", "deepseq"], DirectedEdge["ddc-core-tetra", "mtl"], DirectedEdge["ddc-core-tetra", "pretty-show"], DirectedEdge["ddc-core-tetra", "text"], DirectedEdge["ddc-core-tetra", "transformers"], DirectedEdge["ddc-driver", "base"], DirectedEdge["ddc-driver", "containers"], DirectedEdge["ddc-driver", "ddc-base"], DirectedEdge["ddc-driver", "ddc-build"], DirectedEdge["ddc-driver", "ddc-core"], DirectedEdge["ddc-driver", "ddc-core-flow"], DirectedEdge["ddc-driver", "ddc-core-llvm"], DirectedEdge["ddc-driver", "ddc-core-salt"], DirectedEdge["ddc-driver", "ddc-core-simpl"], DirectedEdge["ddc-driver", "ddc-core-tetra"], DirectedEdge["ddc-driver", "ddc-source-tetra"], DirectedEdge["ddc-driver", "deepseq"], DirectedEdge["ddc-driver", "directory"], DirectedEdge["ddc-driver", "filepath"], DirectedEdge["ddc-driver", "mtl"], DirectedEdge["ddc-driver", "process"], DirectedEdge["ddc-driver", "time"], DirectedEdge["ddc-driver", "transformers"], DirectedEdge["ddc-interface", "base"], DirectedEdge["ddc-interface", "containers"], DirectedEdge["ddc-interface", "ddc-base"], DirectedEdge["ddc-interface", "directory"], DirectedEdge["ddc-source-tetra", "array"], DirectedEdge["ddc-source-tetra", "base"], DirectedEdge["ddc-source-tetra", "containers"], DirectedEdge["ddc-source-tetra", "ddc-base"], DirectedEdge["ddc-source-tetra", "ddc-core"], DirectedEdge["ddc-source-tetra", "ddc-core-salt"], DirectedEdge["ddc-source-tetra", "ddc-core-tetra"], DirectedEdge["ddc-source-tetra", "deepseq"], DirectedEdge["ddc-source-tetra", "mtl"], DirectedEdge["ddc-source-tetra", "text"], DirectedEdge["ddc-source-tetra", "transformers"], DirectedEdge["ddc-tools", "base"], DirectedEdge["ddc-tools", "containers"], DirectedEdge["ddc-tools", "ddc-base"], DirectedEdge["ddc-tools", "ddc-build"], DirectedEdge["ddc-tools", "ddc-code"], DirectedEdge["ddc-tools", "ddc-core"], DirectedEdge["ddc-tools", "ddc-core-flow"], DirectedEdge["ddc-tools", "ddc-core-llvm"], DirectedEdge["ddc-tools", "ddc-core-salt"], DirectedEdge["ddc-tools", "ddc-core-simpl"], DirectedEdge["ddc-tools", "ddc-core-tetra"], DirectedEdge["ddc-tools", "ddc-driver"], DirectedEdge["ddc-tools", "ddc-source-tetra"], DirectedEdge["ddc-tools", "directory"], DirectedEdge["ddc-tools", "filepath"], DirectedEdge["ddc-tools", "haskeline"], DirectedEdge["ddc-tools", "mtl"], DirectedEdge["ddc-tools", "process"], DirectedEdge["ddc-tools", "transformers"], DirectedEdge["ddc-war", "base"], DirectedEdge["ddc-war", "buildbox"], DirectedEdge["ddc-war", "containers"], DirectedEdge["ddc-war", "directory"], DirectedEdge["ddc-war", "filepath"], DirectedEdge["ddc-war", "process"], DirectedEdge["ddc-war", "random"], DirectedEdge["ddc-war", "stm"], DirectedEdge["ddci-core", "base"], DirectedEdge["ddci-core", "containers"], DirectedEdge["ddci-core", "ddc-base"], DirectedEdge["ddci-core", "ddc-core"], DirectedEdge["ddci-core", "ddc-core-eval"], DirectedEdge["ddci-core", "ddc-core-simpl"], DirectedEdge["ddci-core", "haskeline"], DirectedEdge["ddci-core", "haskell-src-exts"], DirectedEdge["dead-code-detection", "base"], DirectedEdge["dead-code-detection", "containers"], DirectedEdge["dead-code-detection", "directory"], DirectedEdge["dead-code-detection", "getopt-generics"], DirectedEdge["dead-code-detection", "ghc"], DirectedEdge["dead-code-detection", "ghc-paths"], DirectedEdge["dead-code-detection", "gitrev"], DirectedEdge["dead-code-detection", "Glob"], DirectedEdge["dead-code-detection", "graph-wrapper"], DirectedEdge["dead-code-detection", "silently"], DirectedEdge["dead-code-detection", "string-conversions"], DirectedEdge["dead-code-detection", "uniplate"], DirectedEdge["dead-simple-json", "base"], DirectedEdge["dead-simple-json", "containers"], DirectedEdge["dead-simple-json", "parsec"], DirectedEdge["dead-simple-json", "template-haskell"], DirectedEdge["dead-simple-json", "transformers"], DirectedEdge["dead-simple-json", "vector"], DirectedEdge["debian", "base"], DirectedEdge["debian", "bytestring"], DirectedEdge["debian", "bzlib"], DirectedEdge["debian", "containers"], DirectedEdge["debian", "debian"], DirectedEdge["debian", "directory"], DirectedEdge["debian", "either"], DirectedEdge["debian", "exceptions"], DirectedEdge["debian", "filepath"], DirectedEdge["debian", "HaXml"], DirectedEdge["debian", "HUnit"], DirectedEdge["debian", "ListLike"], DirectedEdge["debian", "mtl"], DirectedEdge["debian", "network"], DirectedEdge["debian", "network-uri"], DirectedEdge["debian", "old-locale"], DirectedEdge["debian", "parsec"], DirectedEdge["debian", "pretty"], DirectedEdge["debian", "prettyclass"], DirectedEdge["debian", "process"], DirectedEdge["debian", "process-extras"], DirectedEdge["debian", "regex-compat"], DirectedEdge["debian", "regex-tdfa"], DirectedEdge["debian", "template-haskell"], DirectedEdge["debian", "text"], DirectedEdge["debian", "time"], DirectedEdge["debian", "unix"], DirectedEdge["debian", "Unixutils"], DirectedEdge["debian", "utf8-string"], DirectedEdge["debian", "zlib"], DirectedEdge["debian-binary", "base"], DirectedEdge["debian-binary", "directory"], DirectedEdge["debian-binary", "filepath"], DirectedEdge["debian-binary", "HSH"], DirectedEdge["debian-build", "base"], DirectedEdge["debian-build", "Cabal"], DirectedEdge["debian-build", "debian-build"], DirectedEdge["debian-build", "directory"], DirectedEdge["debian-build", "filepath"], DirectedEdge["debian-build", "process"], DirectedEdge["debian-build", "split"], DirectedEdge["debian-build", "transformers"], DirectedEdge["debug-diff", "base"], DirectedEdge["debug-diff", "groom"], DirectedEdge["debug-diff", "process"], DirectedEdge["debug-diff", "temporary"], DirectedEdge["debug-time", "base"], DirectedEdge["debug-time", "clock"], DirectedEdge["debug-time", "containers"], DirectedEdge["decepticons", "base"], DirectedEdge["decepticons", "comonad-transformers"], DirectedEdge["decimal-arithmetic", "base"], DirectedEdge["declarative", "base"], DirectedEdge["declarative", "hasty-hamiltonian"], DirectedEdge["declarative", "lens"], DirectedEdge["declarative", "mcmc-types"], DirectedEdge["declarative", "mighty-metropolis"], DirectedEdge["declarative", "mwc-probability"], DirectedEdge["declarative", "pipes"], DirectedEdge["declarative", "primitive"], DirectedEdge["declarative", "speedy-slice"], DirectedEdge["declarative", "transformers"], DirectedEdge["decode-utf8", "api-opentheory-unicode"], DirectedEdge["decode-utf8", "base"], DirectedEdge["decode-utf8", "opentheory-unicode"], DirectedEdge["decoder-conduit", "base"], DirectedEdge["decoder-conduit", "binary"], DirectedEdge["decoder-conduit", "bytestring"], DirectedEdge["decoder-conduit", "conduit"], DirectedEdge["dedukti", "base"], DirectedEdge["dedukti", "bytestring"], DirectedEdge["dedukti", "containers"], DirectedEdge["dedukti", "directory"], DirectedEdge["dedukti", "filepath"], DirectedEdge["dedukti", "haskell-src-exts"], DirectedEdge["dedukti", "haskell-src-exts-qq"], DirectedEdge["dedukti", "hmk"], DirectedEdge["dedukti", "mtl"], DirectedEdge["dedukti", "parsec"], DirectedEdge["dedukti", "process"], DirectedEdge["dedukti", "Stream"], DirectedEdge["dedukti", "stringtable-atom"], DirectedEdge["dedukti", "test-framework"], DirectedEdge["dedukti", "time"], DirectedEdge["dedukti", "unix"], DirectedEdge["dedukti", "wl-pprint"], DirectedEdge["deepcontrol", "base"], DirectedEdge["deepcontrol", "mmorph"], DirectedEdge["deepcontrol", "mtl"], DirectedEdge["deepcontrol", "transformers"], DirectedEdge["deeplearning-hs", "accelerate"], DirectedEdge["deeplearning-hs", "base"], DirectedEdge["deeplearning-hs", "deeplearning-hs"], DirectedEdge["deeplearning-hs", "mtl"], DirectedEdge["deeplearning-hs", "repa"], DirectedEdge["deeplearning-hs", "repa-algorithms"], DirectedEdge["deeplearning-hs", "vector"], DirectedEdge["deepseq", "array"], DirectedEdge["deepseq", "base"], DirectedEdge["deepseq", "ghc-prim"], DirectedEdge["deepseq-bounded", "array"], DirectedEdge["deepseq-bounded", "base"], DirectedEdge["deepseq-bounded", "cpphs"], DirectedEdge["deepseq-bounded", "deepseq"], DirectedEdge["deepseq-bounded", "deepseq-generics"], DirectedEdge["deepseq-bounded", "generics-sop"], DirectedEdge["deepseq-bounded", "mtl"], DirectedEdge["deepseq-bounded", "parallel"], DirectedEdge["deepseq-bounded", "random"], DirectedEdge["deepseq-bounded", "syb"], DirectedEdge["deepseq-generics", "base"], DirectedEdge["deepseq-generics", "deepseq"], DirectedEdge["deepseq-generics", "ghc-prim"], DirectedEdge["deepseq-magic", "base"], DirectedEdge["deepseq-th", "deepseq-generics"], DirectedEdge["deepseq-th", "base"], DirectedEdge["deepseq-th", "deepseq"], DirectedEdge["deepseq-th", "template-haskell"], DirectedEdge["deepzoom", "base"], DirectedEdge["deepzoom", "directory"], DirectedEdge["deepzoom", "filepath"], DirectedEdge["deepzoom", "hsmagick"], DirectedEdge["defargs", "base"], DirectedEdge["defargs", "cluss"], DirectedEdge["definitive-base", "array"], DirectedEdge["definitive-base", "base"], DirectedEdge["definitive-base", "bytestring"], DirectedEdge["definitive-base", "containers"], DirectedEdge["definitive-base", "deepseq"], DirectedEdge["definitive-base", "ghc-prim"], DirectedEdge["definitive-base", "GLURaw"], DirectedEdge["definitive-base", "OpenGL"], DirectedEdge["definitive-base", "OpenGLRaw"], DirectedEdge["definitive-base", "primitive"], DirectedEdge["definitive-base", "vector"], DirectedEdge["definitive-filesystem", "array"], DirectedEdge["definitive-filesystem", "base"], DirectedEdge["definitive-filesystem", "bytestring"], DirectedEdge["definitive-filesystem", "clock"], DirectedEdge["definitive-filesystem", "containers"], DirectedEdge["definitive-filesystem", "deepseq"], DirectedEdge["definitive-filesystem", "definitive-base"], DirectedEdge["definitive-filesystem", "definitive-reactive"], DirectedEdge["definitive-filesystem", "directory"], DirectedEdge["definitive-filesystem", "filepath"], DirectedEdge["definitive-filesystem", "old-locale"], DirectedEdge["definitive-filesystem", "primitive"], DirectedEdge["definitive-filesystem", "time"], DirectedEdge["definitive-filesystem", "unix"], DirectedEdge["definitive-filesystem", "vector"], DirectedEdge["definitive-graphics", "array"], DirectedEdge["definitive-graphics", "base"], DirectedEdge["definitive-graphics", "binary"], DirectedEdge["definitive-graphics", "bytestring"], DirectedEdge["definitive-graphics", "clock"], DirectedEdge["definitive-graphics", "containers"], DirectedEdge["definitive-graphics", "cpu"], DirectedEdge["definitive-graphics", "deepseq"], DirectedEdge["definitive-graphics", "definitive-base"], DirectedEdge["definitive-graphics", "definitive-parser"], DirectedEdge["definitive-graphics", "definitive-reactive"], DirectedEdge["definitive-graphics", "GLFW"], DirectedEdge["definitive-graphics", "JuicyPixels"], DirectedEdge["definitive-graphics", "mtl"], DirectedEdge["definitive-graphics", "primitive"], DirectedEdge["definitive-graphics", "stb-truetype"], DirectedEdge["definitive-graphics", "transformers"], DirectedEdge["definitive-graphics", "utf8-string"], DirectedEdge["definitive-graphics", "vector"], DirectedEdge["definitive-graphics", "zlib"], DirectedEdge["definitive-parser", "array"], DirectedEdge["definitive-parser", "base"], DirectedEdge["definitive-parser", "bytestring"], DirectedEdge["definitive-parser", "containers"], DirectedEdge["definitive-parser", "cpu"], DirectedEdge["definitive-parser", "deepseq"], DirectedEdge["definitive-parser", "definitive-base"], DirectedEdge["definitive-parser", "ghc-prim"], DirectedEdge["definitive-parser", "GLURaw"], DirectedEdge["definitive-parser", "OpenGL"], DirectedEdge["definitive-parser", "OpenGLRaw"], DirectedEdge["definitive-parser", "primitive"], DirectedEdge["definitive-parser", "utf8-string"], DirectedEdge["definitive-parser", "vector"], DirectedEdge["definitive-reactive", "array"], DirectedEdge["definitive-reactive", "base"], DirectedEdge["definitive-reactive", "bytestring"], DirectedEdge["definitive-reactive", "clock"], DirectedEdge["definitive-reactive", "containers"], DirectedEdge["definitive-reactive", "deepseq"], DirectedEdge["definitive-reactive", "definitive-base"], DirectedEdge["definitive-reactive", "primitive"], DirectedEdge["definitive-reactive", "vector"], DirectedEdge["definitive-sound", "alsa-core"], DirectedEdge["definitive-sound", "alsa-pcm"], DirectedEdge["definitive-sound", "array"], DirectedEdge["definitive-sound", "base"], DirectedEdge["definitive-sound", "bytestring"], DirectedEdge["definitive-sound", "clock"], DirectedEdge["definitive-sound", "containers"], DirectedEdge["definitive-sound", "deepseq"], DirectedEdge["definitive-sound", "definitive-base"], DirectedEdge["definitive-sound", "primitive"], DirectedEdge["definitive-sound", "sample-frame"], DirectedEdge["definitive-sound", "storable-record"], DirectedEdge["definitive-sound", "vector"], DirectedEdge["deiko-config", "array"], DirectedEdge["deiko-config", "base"], DirectedEdge["deiko-config", "containers"], DirectedEdge["deiko-config", "exceptions"], DirectedEdge["deiko-config", "mtl"], DirectedEdge["deiko-config", "parsec"], DirectedEdge["deiko-config", "text"], DirectedEdge["deiko-config", "transformers"], DirectedEdge["dejafu", "array"], DirectedEdge["dejafu", "atomic-primops"], DirectedEdge["dejafu", "base"], DirectedEdge["dejafu", "containers"], DirectedEdge["dejafu", "deepseq"], DirectedEdge["dejafu", "dpor"], DirectedEdge["dejafu", "exceptions"], DirectedEdge["dejafu", "monad-control"], DirectedEdge["dejafu", "monad-loops"], DirectedEdge["dejafu", "mtl"], DirectedEdge["dejafu", "semigroups"], DirectedEdge["dejafu", "stm"], DirectedEdge["dejafu", "template-haskell"], DirectedEdge["dejafu", "transformers"], DirectedEdge["dejafu", "transformers-base"], DirectedEdge["deka", "base"], DirectedEdge["deka", "bytestring"], DirectedEdge["deka", "parsec"], DirectedEdge["deka", "transformers"], DirectedEdge["deka-tests", "base"], DirectedEdge["deka-tests", "bytestring"], DirectedEdge["deka-tests", "containers"], DirectedEdge["deka-tests", "deka"], DirectedEdge["deka-tests", "parsec"], DirectedEdge["deka-tests", "pipes"], DirectedEdge["deka-tests", "QuickCheck"], DirectedEdge["deka-tests", "transformers"], DirectedEdge["delaunay", "AC-Vector"], DirectedEdge["delaunay", "base"], DirectedEdge["delaunay", "hashable"], DirectedEdge["delaunay", "unordered-containers"], DirectedEdge["delay", "base"], DirectedEdge["delay", "dimensional"], DirectedEdge["delay", "exceptions"], DirectedEdge["delay", "mtl"], DirectedEdge["delay", "time"], DirectedEdge["delay", "unbounded-delays"], DirectedEdge["delicious", "base"], DirectedEdge["delicious", "bytestring"], DirectedEdge["delicious", "curl"], DirectedEdge["delicious", "feed"], DirectedEdge["delicious", "json"], DirectedEdge["delicious", "xml"], DirectedEdge["delimited-text", "attoparsec"], DirectedEdge["delimited-text", "base"], DirectedEdge["delimited-text", "binary"], DirectedEdge["delimited-text", "bytestring"], DirectedEdge["delimited-text", "bytestring-show"], DirectedEdge["delimiter-separated", "base"], DirectedEdge["delimiter-separated", "uhc-util"], DirectedEdge["delimiter-separated", "uulib"], DirectedEdge["delta", "base"], DirectedEdge["delta", "containers"], DirectedEdge["delta", "delta"], DirectedEdge["delta", "directory"], DirectedEdge["delta", "filepath"], DirectedEdge["delta", "hfsevents"], DirectedEdge["delta", "optparse-applicative"], DirectedEdge["delta", "process"], DirectedEdge["delta", "sodium"], DirectedEdge["delta", "time"], DirectedEdge["delta-h", "base"], DirectedEdge["delta-h", "binary"], DirectedEdge["delta-h", "bytestring"], DirectedEdge["delta-h", "containers"], DirectedEdge["delta-h", "monad-atom"], DirectedEdge["delta-h", "nlp-scores"], DirectedEdge["delta-h", "text"], DirectedEdge["delude", "base"], DirectedEdge["demarcate", "free"], DirectedEdge["demarcate", "base"], DirectedEdge["demarcate", "free"], DirectedEdge["demarcate", "transformers"], DirectedEdge["denominate", "base"], DirectedEdge["denominate", "directory"], DirectedEdge["denominate", "filepath"], DirectedEdge["dependent-map", "base"], DirectedEdge["dependent-map", "containers"], DirectedEdge["dependent-map", "dependent-sum"], DirectedEdge["dependent-state", "base"], DirectedEdge["dependent-state", "lens"], DirectedEdge["dependent-state", "mtl"], DirectedEdge["dependent-state", "prologue"], DirectedEdge["dependent-sum", "base"], DirectedEdge["dependent-sum-template", "base"], DirectedEdge["dependent-sum-template", "dependent-sum"], DirectedEdge["dependent-sum-template", "template-haskell"], DirectedEdge["dependent-sum-template", "th-extras"], DirectedEdge["depends", "cabal-install"], DirectedEdge["depends", "base"], DirectedEdge["depends", "containers"], DirectedEdge["depends", "directory"], DirectedEdge["depends", "filepath"], DirectedEdge["depends", "process"], DirectedEdge["depends", "transformers"], DirectedEdge["depends", "yaml-config"], DirectedEdge["dephd", "base"], DirectedEdge["dephd", "bio"], DirectedEdge["dephd", "bytestring"], DirectedEdge["dephd", "cmdargs"], DirectedEdge["dephd", "directory"], DirectedEdge["dephd", "process"], DirectedEdge["dephd", "regex-compat"], DirectedEdge["dequeue", "base"], DirectedEdge["dequeue", "QuickCheck"], DirectedEdge["dequeue", "safe"], DirectedEdge["derangement", "base"], DirectedEdge["derangement", "fgl"], DirectedEdge["derivation-trees", "applicative-extras"], DirectedEdge["derivation-trees", "base"], DirectedEdge["derivation-trees", "labeled-tree"], DirectedEdge["derivation-trees", "mtl"], DirectedEdge["derive", "base"], DirectedEdge["derive", "bytestring"], DirectedEdge["derive", "containers"], DirectedEdge["derive", "derive"], DirectedEdge["derive", "directory"], DirectedEdge["derive", "filepath"], DirectedEdge["derive", "haskell-src-exts"], DirectedEdge["derive", "pretty"], DirectedEdge["derive", "process"], DirectedEdge["derive", "syb"], DirectedEdge["derive", "template-haskell"], DirectedEdge["derive", "transformers"], DirectedEdge["derive", "uniplate"], DirectedEdge["derive-IG", "base"], DirectedEdge["derive-IG", "instant-generics"], DirectedEdge["derive-IG", "template-haskell"], DirectedEdge["derive-enumerable", "base"], DirectedEdge["derive-enumerable", "data-default"], DirectedEdge["derive-gadt", "base"], DirectedEdge["derive-gadt", "containers"], DirectedEdge["derive-gadt", "haskell-src-exts"], DirectedEdge["derive-gadt", "haskell-src-meta"], DirectedEdge["derive-gadt", "pretty"], DirectedEdge["derive-gadt", "template-haskell"], DirectedEdge["derive-monoid", "base"], DirectedEdge["derive-monoid", "derive-monoid"], DirectedEdge["derive-monoid", "semigroups"], DirectedEdge["derive-monoid", "template-haskell"], DirectedEdge["derive-topdown", "base"], DirectedEdge["derive-topdown", "derive"], DirectedEdge["derive-topdown", "mtl"], DirectedEdge["derive-topdown", "template-haskell"], DirectedEdge["derive-topdown", "template-haskell-util"], DirectedEdge["derive-trie", "array"], DirectedEdge["derive-trie", "base"], DirectedEdge["derive-trie", "containers"], DirectedEdge["derive-trie", "template-haskell"], DirectedEdge["deriving-compat", "base"], DirectedEdge["deriving-compat", "containers"], DirectedEdge["deriving-compat", "ghc-prim"], DirectedEdge["deriving-compat", "template-haskell"], DirectedEdge["derp", "base"], DirectedEdge["derp", "containers"], DirectedEdge["derp-lib", "base"], DirectedEdge["derp-lib", "derp"], DirectedEdge["descrilo", "base"], DirectedEdge["descriptive", "aeson"], DirectedEdge["descriptive", "base"], DirectedEdge["descriptive", "bifunctors"], DirectedEdge["descriptive", "containers"], DirectedEdge["descriptive", "mtl"], DirectedEdge["descriptive", "scientific"], DirectedEdge["descriptive", "text"], DirectedEdge["descriptive", "transformers"], DirectedEdge["descriptive", "vector"], DirectedEdge["despair", "base"], DirectedEdge["despair", "random"], DirectedEdge["deterministic-game-engine", "base"], DirectedEdge["deterministic-game-engine", "mtl"], DirectedEdge["detrospector", "base"], DirectedEdge["detrospector", "binary"], DirectedEdge["detrospector", "bytestring"], DirectedEdge["detrospector", "cmdargs"], DirectedEdge["detrospector", "containers"], DirectedEdge["detrospector", "hashable"], DirectedEdge["detrospector", "mwc-random"], DirectedEdge["detrospector", "text"], DirectedEdge["detrospector", "unordered-containers"], DirectedEdge["detrospector", "zlib"], DirectedEdge["deunicode", "base"], DirectedEdge["deunicode", "bytestring"], DirectedEdge["deunicode", "utf8-string"], DirectedEdge["devil", "aeson"], DirectedEdge["devil", "base"], DirectedEdge["devil", "bytestring"], DirectedEdge["devil", "directory"], DirectedEdge["devil", "filepath"], DirectedEdge["devil", "hinotify"], DirectedEdge["devil", "process"], DirectedEdge["devil", "split"], DirectedEdge["devil", "text"], DirectedEdge["devil", "unix"], DirectedEdge["devil", "unordered-containers"], DirectedEdge["dewdrop", "base"], DirectedEdge["dewdrop", "bytestring"], DirectedEdge["dewdrop", "containers"], DirectedEdge["dewdrop", "elf"], DirectedEdge["dewdrop", "syb"], DirectedEdge["dfrac", "base"], DirectedEdge["dfrac", "scientific"], DirectedEdge["dfsbuild", "base"], DirectedEdge["dfsbuild", "ConfigFile"], DirectedEdge["dfsbuild", "directory"], DirectedEdge["dfsbuild", "filepath"], DirectedEdge["dfsbuild", "HSH"], DirectedEdge["dfsbuild", "hslogger"], DirectedEdge["dfsbuild", "MissingH"], DirectedEdge["dfsbuild", "network"], DirectedEdge["dfsbuild", "old-time"], DirectedEdge["dfsbuild", "parsec"], DirectedEdge["dfsbuild", "random"], DirectedEdge["dfsbuild", "regex-compat"], DirectedEdge["dfsbuild", "unix"], DirectedEdge["dgim", "base"], DirectedEdge["dgs", "base"], DirectedEdge["dgs", "HTTP"], DirectedEdge["dgs", "mtl"], DirectedEdge["dgs", "network"], DirectedEdge["dgs", "split"], DirectedEdge["dia-base", "base"], DirectedEdge["dia-base", "deepseq"], DirectedEdge["dia-functions", "base"], DirectedEdge["dia-functions", "containers"], DirectedEdge["dia-functions", "data-pprint"], DirectedEdge["dia-functions", "deepseq"], DirectedEdge["dia-functions", "dia-base"], DirectedEdge["dia-functions", "mtl"], DirectedEdge["dia-functions", "xhtml"], DirectedEdge["diagrams", "diagrams-contrib"], DirectedEdge["diagrams", "diagrams-core"], DirectedEdge["diagrams", "diagrams-lib"], DirectedEdge["diagrams", "diagrams-svg"], DirectedEdge["diagrams-builder", "base"], DirectedEdge["diagrams-builder", "base-orphans"], DirectedEdge["diagrams-builder", "cmdargs"], DirectedEdge["diagrams-builder", "diagrams-lib"], DirectedEdge["diagrams-builder", "directory"], DirectedEdge["diagrams-builder", "exceptions"], DirectedEdge["diagrams-builder", "filepath"], DirectedEdge["diagrams-builder", "hashable"], DirectedEdge["diagrams-builder", "haskell-src-exts"], DirectedEdge["diagrams-builder", "hint"], DirectedEdge["diagrams-builder", "lens"], DirectedEdge["diagrams-builder", "mtl"], DirectedEdge["diagrams-builder", "split"], DirectedEdge["diagrams-builder", "transformers"], DirectedEdge["diagrams-cairo", "array"], DirectedEdge["diagrams-cairo", "base"], DirectedEdge["diagrams-cairo", "bytestring"], DirectedEdge["diagrams-cairo", "cairo"], DirectedEdge["diagrams-cairo", "colour"], DirectedEdge["diagrams-cairo", "containers"], DirectedEdge["diagrams-cairo", "data-default-class"], DirectedEdge["diagrams-cairo", "diagrams-core"], DirectedEdge["diagrams-cairo", "diagrams-lib"], DirectedEdge["diagrams-cairo", "filepath"], DirectedEdge["diagrams-cairo", "ghc-prim"], DirectedEdge["diagrams-cairo", "hashable"], DirectedEdge["diagrams-cairo", "JuicyPixels"], DirectedEdge["diagrams-cairo", "lens"], DirectedEdge["diagrams-cairo", "mtl"], DirectedEdge["diagrams-cairo", "optparse-applicative"], DirectedEdge["diagrams-cairo", "pango"], DirectedEdge["diagrams-cairo", "split"], DirectedEdge["diagrams-cairo", "statestack"], DirectedEdge["diagrams-cairo", "transformers"], DirectedEdge["diagrams-cairo", "unix"], DirectedEdge["diagrams-cairo", "vector"], DirectedEdge["diagrams-canvas", "base"], DirectedEdge["diagrams-canvas", "blank-canvas"], DirectedEdge["diagrams-canvas", "cmdargs"], DirectedEdge["diagrams-canvas", "containers"], DirectedEdge["diagrams-canvas", "data-default-class"], DirectedEdge["diagrams-canvas", "diagrams-core"], DirectedEdge["diagrams-canvas", "diagrams-lib"], DirectedEdge["diagrams-canvas", "lens"], DirectedEdge["diagrams-canvas", "mtl"], DirectedEdge["diagrams-canvas", "NumInstances"], DirectedEdge["diagrams-canvas", "optparse-applicative"], DirectedEdge["diagrams-canvas", "statestack"], DirectedEdge["diagrams-canvas", "text"], DirectedEdge["diagrams-contrib", "base"], DirectedEdge["diagrams-contrib", "circle-packing"], DirectedEdge["diagrams-contrib", "colour"], DirectedEdge["diagrams-contrib", "containers"], DirectedEdge["diagrams-contrib", "data-default"], DirectedEdge["diagrams-contrib", "data-default-class"], DirectedEdge["diagrams-contrib", "diagrams-core"], DirectedEdge["diagrams-contrib", "diagrams-lib"], DirectedEdge["diagrams-contrib", "diagrams-solve"], DirectedEdge["diagrams-contrib", "force-layout"], DirectedEdge["diagrams-contrib", "lens"], DirectedEdge["diagrams-contrib", "linear"], DirectedEdge["diagrams-contrib", "MonadRandom"], DirectedEdge["diagrams-contrib", "mtl"], DirectedEdge["diagrams-contrib", "parsec"], DirectedEdge["diagrams-contrib", "random"], DirectedEdge["diagrams-contrib", "semigroups"], DirectedEdge["diagrams-contrib", "split"], DirectedEdge["diagrams-contrib", "text"], DirectedEdge["diagrams-core", "adjunctions"], DirectedEdge["diagrams-core", "base"], DirectedEdge["diagrams-core", "containers"], DirectedEdge["diagrams-core", "distributive"], DirectedEdge["diagrams-core", "dual-tree"], DirectedEdge["diagrams-core", "lens"], DirectedEdge["diagrams-core", "linear"], DirectedEdge["diagrams-core", "monoid-extras"], DirectedEdge["diagrams-core", "mtl"], DirectedEdge["diagrams-core", "semigroups"], DirectedEdge["diagrams-core", "unordered-containers"], DirectedEdge["diagrams-graphviz", "base"], DirectedEdge["diagrams-graphviz", "containers"], DirectedEdge["diagrams-graphviz", "diagrams-lib"], DirectedEdge["diagrams-graphviz", "fgl"], DirectedEdge["diagrams-graphviz", "graphviz"], DirectedEdge["diagrams-graphviz", "split"], DirectedEdge["diagrams-gtk", "base"], DirectedEdge["diagrams-gtk", "cairo"], DirectedEdge["diagrams-gtk", "diagrams-cairo"], DirectedEdge["diagrams-gtk", "diagrams-lib"], DirectedEdge["diagrams-gtk", "gtk"], DirectedEdge["diagrams-haddock", "ansi-terminal"], DirectedEdge["diagrams-haddock", "base"], DirectedEdge["diagrams-haddock", "base64-bytestring"], DirectedEdge["diagrams-haddock", "bytestring"], DirectedEdge["diagrams-haddock", "Cabal"], DirectedEdge["diagrams-haddock", "cautious-file"], DirectedEdge["diagrams-haddock", "cmdargs"], DirectedEdge["diagrams-haddock", "containers"], DirectedEdge["diagrams-haddock", "cpphs"], DirectedEdge["diagrams-haddock", "diagrams-builder"], DirectedEdge["diagrams-haddock", "diagrams-haddock"], DirectedEdge["diagrams-haddock", "diagrams-lib"], DirectedEdge["diagrams-haddock", "diagrams-svg"], DirectedEdge["diagrams-haddock", "directory"], DirectedEdge["diagrams-haddock", "filepath"], DirectedEdge["diagrams-haddock", "haskell-src-exts"], DirectedEdge["diagrams-haddock", "lens"], DirectedEdge["diagrams-haddock", "linear"], DirectedEdge["diagrams-haddock", "lucid-svg"], DirectedEdge["diagrams-haddock", "mtl"], DirectedEdge["diagrams-haddock", "parsec"], DirectedEdge["diagrams-haddock", "split"], DirectedEdge["diagrams-haddock", "strict"], DirectedEdge["diagrams-haddock", "text"], DirectedEdge["diagrams-haddock", "uniplate"], DirectedEdge["diagrams-hsqml", "base"], DirectedEdge["diagrams-hsqml", "colour"], DirectedEdge["diagrams-hsqml", "containers"], DirectedEdge["diagrams-hsqml", "diagrams-core"], DirectedEdge["diagrams-hsqml", "diagrams-lib"], DirectedEdge["diagrams-hsqml", "hsqml"], DirectedEdge["diagrams-hsqml", "lens"], DirectedEdge["diagrams-hsqml", "text"], DirectedEdge["diagrams-hsqml", "transformers"], DirectedEdge["diagrams-html5", "base"], DirectedEdge["diagrams-html5", "cmdargs"], DirectedEdge["diagrams-html5", "containers"], DirectedEdge["diagrams-html5", "data-default-class"], DirectedEdge["diagrams-html5", "diagrams-core"], DirectedEdge["diagrams-html5", "diagrams-lib"], DirectedEdge["diagrams-html5", "lens"], DirectedEdge["diagrams-html5", "mtl"], DirectedEdge["diagrams-html5", "NumInstances"], DirectedEdge["diagrams-html5", "optparse-applicative"], DirectedEdge["diagrams-html5", "split"], DirectedEdge["diagrams-html5", "statestack"], DirectedEdge["diagrams-html5", "static-canvas"], DirectedEdge["diagrams-html5", "text"], DirectedEdge["diagrams-lib", "active"], DirectedEdge["diagrams-lib", "adjunctions"], DirectedEdge["diagrams-lib", "array"], DirectedEdge["diagrams-lib", "base"], DirectedEdge["diagrams-lib", "colour"], DirectedEdge["diagrams-lib", "containers"], DirectedEdge["diagrams-lib", "data-default-class"], DirectedEdge["diagrams-lib", "diagrams-core"], DirectedEdge["diagrams-lib", "diagrams-solve"], DirectedEdge["diagrams-lib", "directory"], DirectedEdge["diagrams-lib", "distributive"], DirectedEdge["diagrams-lib", "dual-tree"], DirectedEdge["diagrams-lib", "exceptions"], DirectedEdge["diagrams-lib", "filepath"], DirectedEdge["diagrams-lib", "fingertree"], DirectedEdge["diagrams-lib", "fsnotify"], DirectedEdge["diagrams-lib", "ghc-prim"], DirectedEdge["diagrams-lib", "hashable"], DirectedEdge["diagrams-lib", "intervals"], DirectedEdge["diagrams-lib", "JuicyPixels"], DirectedEdge["diagrams-lib", "lens"], DirectedEdge["diagrams-lib", "linear"], DirectedEdge["diagrams-lib", "monoid-extras"], DirectedEdge["diagrams-lib", "mtl"], DirectedEdge["diagrams-lib", "optparse-applicative"], DirectedEdge["diagrams-lib", "process"], DirectedEdge["diagrams-lib", "semigroups"], DirectedEdge["diagrams-lib", "tagged"], DirectedEdge["diagrams-lib", "text"], DirectedEdge["diagrams-lib", "transformers"], DirectedEdge["diagrams-lib", "unordered-containers"], DirectedEdge["diagrams-pandoc", "base"], DirectedEdge["diagrams-pandoc", "diagrams-builder"], DirectedEdge["diagrams-pandoc", "diagrams-cairo"], DirectedEdge["diagrams-pandoc", "diagrams-lib"], DirectedEdge["diagrams-pandoc", "diagrams-pandoc"], DirectedEdge["diagrams-pandoc", "directory"], DirectedEdge["diagrams-pandoc", "filepath"], DirectedEdge["diagrams-pandoc", "linear"], DirectedEdge["diagrams-pandoc", "optparse-applicative"], DirectedEdge["diagrams-pandoc", "pandoc-types"], DirectedEdge["diagrams-pdf", "base"], DirectedEdge["diagrams-pdf", "cmdargs"], DirectedEdge["diagrams-pdf", "colour"], DirectedEdge["diagrams-pdf", "diagrams-core"], DirectedEdge["diagrams-pdf", "diagrams-lib"], DirectedEdge["diagrams-pdf", "filepath"], DirectedEdge["diagrams-pdf", "HPDF"], DirectedEdge["diagrams-pdf", "lens"], DirectedEdge["diagrams-pdf", "monoid-extras"], DirectedEdge["diagrams-pdf", "mtl"], DirectedEdge["diagrams-pdf", "semigroups"], DirectedEdge["diagrams-pdf", "split"], DirectedEdge["diagrams-pdf", "vector-space"], DirectedEdge["diagrams-pgf", "base"], DirectedEdge["diagrams-pgf", "bytestring"], DirectedEdge["diagrams-pgf", "bytestring-builder"], DirectedEdge["diagrams-pgf", "colour"], DirectedEdge["diagrams-pgf", "containers"], DirectedEdge["diagrams-pgf", "diagrams-core"], DirectedEdge["diagrams-pgf", "diagrams-lib"], DirectedEdge["diagrams-pgf", "directory"], DirectedEdge["diagrams-pgf", "filepath"], DirectedEdge["diagrams-pgf", "hashable"], DirectedEdge["diagrams-pgf", "JuicyPixels"], DirectedEdge["diagrams-pgf", "mtl"], DirectedEdge["diagrams-pgf", "optparse-applicative"], DirectedEdge["diagrams-pgf", "process"], DirectedEdge["diagrams-pgf", "split"], DirectedEdge["diagrams-pgf", "texrunner"], DirectedEdge["diagrams-pgf", "time"], DirectedEdge["diagrams-pgf", "vector"], DirectedEdge["diagrams-pgf", "zlib"], DirectedEdge["diagrams-postscript", "base"], DirectedEdge["diagrams-postscript", "containers"], DirectedEdge["diagrams-postscript", "data-default-class"], DirectedEdge["diagrams-postscript", "diagrams-core"], DirectedEdge["diagrams-postscript", "diagrams-lib"], DirectedEdge["diagrams-postscript", "dlist"], DirectedEdge["diagrams-postscript", "filepath"], DirectedEdge["diagrams-postscript", "ghc-prim"], DirectedEdge["diagrams-postscript", "hashable"], DirectedEdge["diagrams-postscript", "lens"], DirectedEdge["diagrams-postscript", "monoid-extras"], DirectedEdge["diagrams-postscript", "mtl"], DirectedEdge["diagrams-postscript", "semigroups"], DirectedEdge["diagrams-postscript", "split"], DirectedEdge["diagrams-postscript", "statestack"], DirectedEdge["diagrams-qrcode", "array"], DirectedEdge["diagrams-qrcode", "base"], DirectedEdge["diagrams-qrcode", "colour"], DirectedEdge["diagrams-qrcode", "diagrams-core"], DirectedEdge["diagrams-qrcode", "diagrams-lib"], DirectedEdge["diagrams-rasterific", "base"], DirectedEdge["diagrams-rasterific", "bytestring"], DirectedEdge["diagrams-rasterific", "containers"], DirectedEdge["diagrams-rasterific", "data-default-class"], DirectedEdge["diagrams-rasterific", "diagrams-core"], DirectedEdge["diagrams-rasterific", "diagrams-lib"], DirectedEdge["diagrams-rasterific", "filepath"], DirectedEdge["diagrams-rasterific", "FontyFruity"], DirectedEdge["diagrams-rasterific", "hashable"], DirectedEdge["diagrams-rasterific", "JuicyPixels"], DirectedEdge["diagrams-rasterific", "lens"], DirectedEdge["diagrams-rasterific", "mtl"], DirectedEdge["diagrams-rasterific", "optparse-applicative"], DirectedEdge["diagrams-rasterific", "Rasterific"], DirectedEdge["diagrams-rasterific", "split"], DirectedEdge["diagrams-rasterific", "unix"], DirectedEdge["diagrams-reflex", "base"], DirectedEdge["diagrams-reflex", "colour"], DirectedEdge["diagrams-reflex", "containers"], DirectedEdge["diagrams-reflex", "diagrams-core"], DirectedEdge["diagrams-reflex", "diagrams-lib"], DirectedEdge["diagrams-reflex", "lens"], DirectedEdge["diagrams-reflex", "monoid-extras"], DirectedEdge["diagrams-reflex", "mtl"], DirectedEdge["diagrams-reflex", "reflex"], DirectedEdge["diagrams-reflex", "reflex-dom"], DirectedEdge["diagrams-reflex", "reflex-dom-contrib"], DirectedEdge["diagrams-rubiks-cube", "base"], DirectedEdge["diagrams-rubiks-cube", "data-default-class"], DirectedEdge["diagrams-rubiks-cube", "diagrams-lib"], DirectedEdge["diagrams-rubiks-cube", "lens"], DirectedEdge["diagrams-solve", "base"], DirectedEdge["diagrams-svg", "base"], DirectedEdge["diagrams-svg", "base64-bytestring"], DirectedEdge["diagrams-svg", "bytestring"], DirectedEdge["diagrams-svg", "colour"], DirectedEdge["diagrams-svg", "containers"], DirectedEdge["diagrams-svg", "diagrams-core"], DirectedEdge["diagrams-svg", "diagrams-lib"], DirectedEdge["diagrams-svg", "directory"], DirectedEdge["diagrams-svg", "filepath"], DirectedEdge["diagrams-svg", "ghc-prim"], DirectedEdge["diagrams-svg", "hashable"], DirectedEdge["diagrams-svg", "JuicyPixels"], DirectedEdge["diagrams-svg", "lens"], DirectedEdge["diagrams-svg", "monoid-extras"], DirectedEdge["diagrams-svg", "mtl"], DirectedEdge["diagrams-svg", "old-time"], DirectedEdge["diagrams-svg", "optparse-applicative"], DirectedEdge["diagrams-svg", "process"], DirectedEdge["diagrams-svg", "semigroups"], DirectedEdge["diagrams-svg", "split"], DirectedEdge["diagrams-svg", "svg-builder"], DirectedEdge["diagrams-svg", "text"], DirectedEdge["diagrams-svg", "time"], DirectedEdge["diagrams-tikz", "base"], DirectedEdge["diagrams-tikz", "diagrams-core"], DirectedEdge["diagrams-tikz", "diagrams-lib"], DirectedEdge["diagrams-tikz", "dlist"], DirectedEdge["diagrams-tikz", "mtl"], DirectedEdge["diagrams-wx", "base"], DirectedEdge["diagrams-wx", "cairo"], DirectedEdge["diagrams-wx", "diagrams-cairo"], DirectedEdge["diagrams-wx", "diagrams-lib"], DirectedEdge["diagrams-wx", "diagrams-wx"], DirectedEdge["diagrams-wx", "wx"], DirectedEdge["diagrams-wx", "wxcore"], DirectedEdge["dialog", "base"], DirectedEdge["dialog", "bytestring"], DirectedEdge["dialog", "filepath"], DirectedEdge["dialog", "glib"], DirectedEdge["dialog", "open-browser"], DirectedEdge["dialog", "text"], DirectedEdge["dialog", "transformers"], DirectedEdge["dice", "base"], DirectedEdge["dice", "parsec"], DirectedEdge["dice", "random-fu"], DirectedEdge["dice", "transformers"], DirectedEdge["dice-entropy-conduit", "base"], DirectedEdge["dice-entropy-conduit", "bytestring"], DirectedEdge["dice-entropy-conduit", "conduit"], DirectedEdge["dice-entropy-conduit", "entropy"], DirectedEdge["dice-entropy-conduit", "transformers"], DirectedEdge["dicom", "base"], DirectedEdge["dicom", "binary"], DirectedEdge["dicom", "bytestring"], DirectedEdge["dicom", "pretty"], DirectedEdge["dicom", "safe"], DirectedEdge["dicom", "time"], DirectedEdge["dictionary-sharing", "base"], DirectedEdge["dictionary-sharing", "containers"], DirectedEdge["dictparser", "base"], DirectedEdge["dictparser", "dictparser"], DirectedEdge["dictparser", "parsec"], DirectedEdge["dictparser", "split"], DirectedEdge["diet", "base"], DirectedEdge["diff-gestalt", "base"], DirectedEdge["diff-gestalt", "Diff"], DirectedEdge["diff-gestalt", "KMP"], DirectedEdge["diff-gestalt", "QuickCheck"], DirectedEdge["diff-gestalt", "string-similarity"], DirectedEdge["diff-parse", "attoparsec"], DirectedEdge["diff-parse", "base"], DirectedEdge["diff-parse", "text"], DirectedEdge["diff3", "base"], DirectedEdge["diff3", "Diff"], DirectedEdge["diffarray", "array"], DirectedEdge["diffarray", "base"], DirectedEdge["diffcabal", "base"], DirectedEdge["diffcabal", "bytestring"], DirectedEdge["diffcabal", "Cabal"], DirectedEdge["diffcabal", "containers"], DirectedEdge["diffcabal", "Diff"], DirectedEdge["diffcabal", "directory"], DirectedEdge["diffcabal", "filepath"], DirectedEdge["diffcabal", "pretty"], DirectedEdge["diffcabal", "process"], DirectedEdge["diffdump", "ansi-terminal"], DirectedEdge["diffdump", "base"], DirectedEdge["diffdump", "bytestring"], DirectedEdge["diffdump", "cmdargs"], DirectedEdge["diffdump", "directory"], DirectedEdge["diffdump", "filemanip"], DirectedEdge["diffdump", "filepath"], DirectedEdge["diffdump", "parallel-io"], DirectedEdge["diffdump", "process"], DirectedEdge["diffdump", "process-extras"], DirectedEdge["diffdump", "unix"], DirectedEdge["digamma", "math-functions"], DirectedEdge["digamma", "base"], DirectedEdge["digamma", "math-functions"], DirectedEdge["digest", "base"], DirectedEdge["digest", "bytestring"], DirectedEdge["digest", "zlib"], DirectedEdge["digest-pure", "array"], DirectedEdge["digest-pure", "base"], DirectedEdge["digest-pure", "bytestring"], DirectedEdge["digestive-bootstrap", "base"], DirectedEdge["digestive-bootstrap", "blaze-bootstrap"], DirectedEdge["digestive-bootstrap", "blaze-html"], DirectedEdge["digestive-bootstrap", "digestive-functors"], DirectedEdge["digestive-bootstrap", "digestive-functors-blaze"], DirectedEdge["digestive-bootstrap", "http-types"], DirectedEdge["digestive-bootstrap", "text"], DirectedEdge["digestive-foundation-lucid", "base"], DirectedEdge["digestive-foundation-lucid", "digestive-functors"], DirectedEdge["digestive-foundation-lucid", "digestive-functors-lucid"], DirectedEdge["digestive-foundation-lucid", "http-types"], DirectedEdge["digestive-foundation-lucid", "lucid"], DirectedEdge["digestive-foundation-lucid", "lucid-foundation"], DirectedEdge["digestive-foundation-lucid", "text"], DirectedEdge["digestive-functors", "base"], DirectedEdge["digestive-functors", "bytestring"], DirectedEdge["digestive-functors", "containers"], DirectedEdge["digestive-functors", "mtl"], DirectedEdge["digestive-functors", "old-locale"], DirectedEdge["digestive-functors", "text"], DirectedEdge["digestive-functors", "time"], DirectedEdge["digestive-functors-aeson", "aeson"], DirectedEdge["digestive-functors-aeson", "base"], DirectedEdge["digestive-functors-aeson", "containers"], DirectedEdge["digestive-functors-aeson", "digestive-functors"], DirectedEdge["digestive-functors-aeson", "lens"], DirectedEdge["digestive-functors-aeson", "lens-aeson"], DirectedEdge["digestive-functors-aeson", "safe"], DirectedEdge["digestive-functors-aeson", "text"], DirectedEdge["digestive-functors-aeson", "vector"], DirectedEdge["digestive-functors-blaze", "base"], DirectedEdge["digestive-functors-blaze", "blaze-html"], DirectedEdge["digestive-functors-blaze", "blaze-markup"], DirectedEdge["digestive-functors-blaze", "digestive-functors"], DirectedEdge["digestive-functors-blaze", "text"], DirectedEdge["digestive-functors-happstack", "base"], DirectedEdge["digestive-functors-happstack", "bytestring"], DirectedEdge["digestive-functors-happstack", "digestive-functors"], DirectedEdge["digestive-functors-happstack", "happstack-server"], DirectedEdge["digestive-functors-happstack", "text"], DirectedEdge["digestive-functors-heist", "base"], DirectedEdge["digestive-functors-heist", "blaze-builder"], DirectedEdge["digestive-functors-heist", "digestive-functors"], DirectedEdge["digestive-functors-heist", "heist"], DirectedEdge["digestive-functors-heist", "mtl"], DirectedEdge["digestive-functors-heist", "text"], DirectedEdge["digestive-functors-heist", "xmlhtml"], DirectedEdge["digestive-functors-hsp", "base"], DirectedEdge["digestive-functors-hsp", "digestive-functors"], DirectedEdge["digestive-functors-hsp", "hsp"], DirectedEdge["digestive-functors-hsp", "hsx"], DirectedEdge["digestive-functors-hsp", "text"], DirectedEdge["digestive-functors-lucid", "base"], DirectedEdge["digestive-functors-lucid", "digestive-functors"], DirectedEdge["digestive-functors-lucid", "lucid"], DirectedEdge["digestive-functors-lucid", "text"], DirectedEdge["digestive-functors-scotty", "base"], DirectedEdge["digestive-functors-scotty", "bytestring"], DirectedEdge["digestive-functors-scotty", "digestive-functors"], DirectedEdge["digestive-functors-scotty", "http-types"], DirectedEdge["digestive-functors-scotty", "scotty"], DirectedEdge["digestive-functors-scotty", "text"], DirectedEdge["digestive-functors-scotty", "wai"], DirectedEdge["digestive-functors-scotty", "wai-extra"], DirectedEdge["digestive-functors-snap", "base"], DirectedEdge["digestive-functors-snap", "bytestring"], DirectedEdge["digestive-functors-snap", "containers"], DirectedEdge["digestive-functors-snap", "digestive-functors"], DirectedEdge["digestive-functors-snap", "directory"], DirectedEdge["digestive-functors-snap", "filepath"], DirectedEdge["digestive-functors-snap", "mtl"], DirectedEdge["digestive-functors-snap", "snap-core"], DirectedEdge["digestive-functors-snap", "text"], DirectedEdge["digit", "base"], DirectedEdge["digit", "lens"], DirectedEdge["digit", "parsec"], DirectedEdge["digit", "parsers"], DirectedEdge["digit", "semigroups"], DirectedEdge["digit", "template-haskell"], DirectedEdge["digitalocean-kzs", "aeson"], DirectedEdge["digitalocean-kzs", "base"], DirectedEdge["digitalocean-kzs", "bytestring"], DirectedEdge["digitalocean-kzs", "HTTP"], DirectedEdge["digitalocean-kzs", "http-conduit"], DirectedEdge["digitalocean-kzs", "http-types"], DirectedEdge["digitalocean-kzs", "text"], DirectedEdge["digitalocean-kzs", "transformers"], DirectedEdge["digits", "base"], DirectedEdge["digits", "QuickCheck"], DirectedEdge["dimensional", "base"], DirectedEdge["dimensional", "deepseq"], DirectedEdge["dimensional", "exact-pi"], DirectedEdge["dimensional", "numtype-dk"], DirectedEdge["dimensional", "vector"], DirectedEdge["dimensional-codata", "base"], DirectedEdge["dimensional-codata", "dimensional"], DirectedEdge["dimensional-codata", "numtype-dk"], DirectedEdge["dimensional-tf", "dimensional"], DirectedEdge["dimensional-tf", "base"], DirectedEdge["dimensional-tf", "numtype-tf"], DirectedEdge["dimensional-tf", "time"], DirectedEdge["dingo-core", "aeson"], DirectedEdge["dingo-core", "attoparsec"], DirectedEdge["dingo-core", "base"], DirectedEdge["dingo-core", "base64-bytestring"], DirectedEdge["dingo-core", "blaze-builder"], DirectedEdge["dingo-core", "blaze-html"], DirectedEdge["dingo-core", "blaze-textual"], DirectedEdge["dingo-core", "bytestring"], DirectedEdge["dingo-core", "conduit"], DirectedEdge["dingo-core", "containers"], DirectedEdge["dingo-core", "cookie"], DirectedEdge["dingo-core", "deepseq"], DirectedEdge["dingo-core", "fclabels"], DirectedEdge["dingo-core", "file-embed"], DirectedEdge["dingo-core", "hashable"], DirectedEdge["dingo-core", "http-types"], DirectedEdge["dingo-core", "random"], DirectedEdge["dingo-core", "SHA"], DirectedEdge["dingo-core", "shakespeare-js"], DirectedEdge["dingo-core", "strict-concurrency"], DirectedEdge["dingo-core", "template-haskell"], DirectedEdge["dingo-core", "text"], DirectedEdge["dingo-core", "transformers"], DirectedEdge["dingo-core", "unordered-containers"], DirectedEdge["dingo-core", "wai"], DirectedEdge["dingo-core", "wai-eventsource"], DirectedEdge["dingo-core", "wai-extra"], DirectedEdge["dingo-core", "warp"], DirectedEdge["dingo-core", "web-css"], DirectedEdge["dingo-example", "aeson"], DirectedEdge["dingo-example", "base"], DirectedEdge["dingo-example", "blaze-html"], DirectedEdge["dingo-example", "bytestring"], DirectedEdge["dingo-example", "dingo-core"], DirectedEdge["dingo-example", "dingo-widgets"], DirectedEdge["dingo-example", "fclabels"], DirectedEdge["dingo-example", "shakespeare-js"], DirectedEdge["dingo-example", "template-haskell"], DirectedEdge["dingo-example", "text"], DirectedEdge["dingo-example", "transformers"], DirectedEdge["dingo-widgets", "aeson"], DirectedEdge["dingo-widgets", "base"], DirectedEdge["dingo-widgets", "blaze-html"], DirectedEdge["dingo-widgets", "bytestring"], DirectedEdge["dingo-widgets", "containers"], DirectedEdge["dingo-widgets", "dingo-core"], DirectedEdge["dingo-widgets", "fclabels"], DirectedEdge["dingo-widgets", "file-embed"], DirectedEdge["dingo-widgets", "shakespeare-js"], DirectedEdge["dingo-widgets", "template-haskell"], DirectedEdge["dingo-widgets", "text"], DirectedEdge["dingo-widgets", "transformers"], DirectedEdge["dingo-widgets", "unordered-containers"], DirectedEdge["diophantine", "array"], DirectedEdge["diophantine", "base"], DirectedEdge["diplomacy", "base"], DirectedEdge["diplomacy", "containers"], DirectedEdge["diplomacy", "HUnit"], DirectedEdge["diplomacy", "parsec"], DirectedEdge["diplomacy", "transformers"], DirectedEdge["diplomacy", "TypeNat"], DirectedEdge["diplomacy-server", "aeson"], DirectedEdge["diplomacy-server", "async"], DirectedEdge["diplomacy-server", "base"], DirectedEdge["diplomacy-server", "bytestring"], DirectedEdge["diplomacy-server", "containers"], DirectedEdge["diplomacy-server", "deepseq"], DirectedEdge["diplomacy-server", "diplomacy"], DirectedEdge["diplomacy-server", "filepath"], DirectedEdge["diplomacy-server", "hourglass"], DirectedEdge["diplomacy-server", "json-schema"], DirectedEdge["diplomacy-server", "mtl"], DirectedEdge["diplomacy-server", "optparse-applicative"], DirectedEdge["diplomacy-server", "parsec"], DirectedEdge["diplomacy-server", "random"], DirectedEdge["diplomacy-server", "rest-core"], DirectedEdge["diplomacy-server", "rest-wai"], DirectedEdge["diplomacy-server", "stm"], DirectedEdge["diplomacy-server", "Stream"], DirectedEdge["diplomacy-server", "text"], DirectedEdge["diplomacy-server", "transformers"], DirectedEdge["diplomacy-server", "transformers-compat"], DirectedEdge["diplomacy-server", "TypeNat"], DirectedEdge["diplomacy-server", "wai"], DirectedEdge["diplomacy-server", "warp"], DirectedEdge["diplomacy-server", "warp-tls"], DirectedEdge["direct-binary-files", "base"], DirectedEdge["direct-binary-files", "bytestring"], DirectedEdge["direct-binary-files", "mtl"], DirectedEdge["direct-daemonize", "base"], DirectedEdge["direct-daemonize", "unix"], DirectedEdge["direct-fastcgi", "base"], DirectedEdge["direct-fastcgi", "bytestring"], DirectedEdge["direct-fastcgi", "containers"], DirectedEdge["direct-fastcgi", "mtl"], DirectedEdge["direct-fastcgi", "network"], DirectedEdge["direct-fastcgi", "utf8-string"], DirectedEdge["direct-http", "base"], DirectedEdge["direct-http", "bytestring"], DirectedEdge["direct-http", "containers"], DirectedEdge["direct-http", "direct-daemonize"], DirectedEdge["direct-http", "lifted-base"], DirectedEdge["direct-http", "monad-control"], DirectedEdge["direct-http", "mtl"], DirectedEdge["direct-http", "network"], DirectedEdge["direct-http", "old-locale"], DirectedEdge["direct-http", "SafeSemaphore"], DirectedEdge["direct-http", "time"], DirectedEdge["direct-http", "transformers-base"], DirectedEdge["direct-http", "unix"], DirectedEdge["direct-http", "utf8-string"], DirectedEdge["direct-murmur-hash", "base"], DirectedEdge["direct-murmur-hash", "bytestring"], DirectedEdge["direct-plugins", "base"], DirectedEdge["direct-plugins", "ghc"], DirectedEdge["direct-plugins", "ghc-paths"], DirectedEdge["direct-sqlite", "base"], DirectedEdge["direct-sqlite", "bytestring"], DirectedEdge["direct-sqlite", "text"], DirectedEdge["directed-cubical", "base"], DirectedEdge["directed-cubical", "bytestring"], DirectedEdge["directed-cubical", "containers"], DirectedEdge["directed-cubical", "deepseq"], DirectedEdge["directed-cubical", "hashable"], DirectedEdge["directed-cubical", "parallel"], DirectedEdge["directed-cubical", "QuickCheck"], DirectedEdge["directed-cubical", "unordered-containers"], DirectedEdge["directed-cubical", "vector"], DirectedEdge["directory", "base"], DirectedEdge["directory", "filepath"], DirectedEdge["directory", "time"], DirectedEdge["directory", "unix"], DirectedEdge["directory-layout", "base"], DirectedEdge["directory-layout", "bytestring"], DirectedEdge["directory-layout", "command-qq"], DirectedEdge["directory-layout", "containers"], DirectedEdge["directory-layout", "directory"], DirectedEdge["directory-layout", "filepath"], DirectedEdge["directory-layout", "free"], DirectedEdge["directory-layout", "hspec"], DirectedEdge["directory-layout", "lens"], DirectedEdge["directory-layout", "semigroups"], DirectedEdge["directory-layout", "template-haskell"], DirectedEdge["directory-layout", "text"], DirectedEdge["directory-layout", "transformers"], DirectedEdge["directory-layout", "unix"], DirectedEdge["directory-layout", "unordered-containers"], DirectedEdge["directory-listing-webpage-parser", "base"], DirectedEdge["directory-listing-webpage-parser", "bytestring"], DirectedEdge["directory-listing-webpage-parser", "network-uri"], DirectedEdge["directory-listing-webpage-parser", "tagsoup"], DirectedEdge["directory-listing-webpage-parser", "text"], DirectedEdge["directory-listing-webpage-parser", "time"], DirectedEdge["directory-tree", "base"], DirectedEdge["directory-tree", "directory"], DirectedEdge["directory-tree", "filepath"], DirectedEdge["dirfiles", "aeson"], DirectedEdge["dirfiles", "base"], DirectedEdge["dirfiles", "containers"], DirectedEdge["dirfiles", "hblock"], DirectedEdge["dirfiles", "safecopy"], DirectedEdge["dirfiles", "text"], DirectedEdge["dirfiles", "time"], DirectedEdge["dirfiles", "unordered-containers"], DirectedEdge["dirstream", "base"], DirectedEdge["dirstream", "directory"], DirectedEdge["dirstream", "pipes"], DirectedEdge["dirstream", "pipes-safe"], DirectedEdge["dirstream", "system-fileio"], DirectedEdge["dirstream", "system-filepath"], DirectedEdge["dirstream", "unix"], DirectedEdge["disassembler", "array"], DirectedEdge["disassembler", "base"], DirectedEdge["disassembler", "containers"], DirectedEdge["disassembler", "mtl"], DirectedEdge["disassembler", "parsec"], DirectedEdge["discogs-haskell", "aeson"], DirectedEdge["discogs-haskell", "api-builder"], DirectedEdge["discogs-haskell", "base"], DirectedEdge["discogs-haskell", "bytestring"], DirectedEdge["discogs-haskell", "data-default-class"], DirectedEdge["discogs-haskell", "free"], DirectedEdge["discogs-haskell", "http-client"], DirectedEdge["discogs-haskell", "http-client-tls"], DirectedEdge["discogs-haskell", "http-types"], DirectedEdge["discogs-haskell", "network"], DirectedEdge["discogs-haskell", "text"], DirectedEdge["discogs-haskell", "time"], DirectedEdge["discogs-haskell", "transformers"], DirectedEdge["discogs-haskell", "unordered-containers"], DirectedEdge["discogs-haskell", "vector"], DirectedEdge["discordian-calendar", "base"], DirectedEdge["discordian-calendar", "time"], DirectedEdge["discount", "base"], DirectedEdge["discount", "bytestring"], DirectedEdge["discount", "text"], DirectedEdge["discrete-space-map", "adjunctions"], DirectedEdge["discrete-space-map", "base"], DirectedEdge["discrete-space-map", "comonad"], DirectedEdge["discrete-space-map", "distributive"], DirectedEdge["discrete-space-map", "keys"], DirectedEdge["discrete-space-map", "semigroupoids"], DirectedEdge["discrimination", "array"], DirectedEdge["discrimination", "base"], DirectedEdge["discrimination", "containers"], DirectedEdge["discrimination", "contravariant"], DirectedEdge["discrimination", "deepseq"], DirectedEdge["discrimination", "ghc-prim"], DirectedEdge["discrimination", "hashable"], DirectedEdge["discrimination", "primitive"], DirectedEdge["discrimination", "profunctors"], DirectedEdge["discrimination", "promises"], DirectedEdge["discrimination", "semigroups"], DirectedEdge["discrimination", "transformers"], DirectedEdge["discrimination", "transformers-compat"], DirectedEdge["discrimination", "vector"], DirectedEdge["discrimination", "void"], DirectedEdge["disjoint-set", "base"], DirectedEdge["disjoint-set", "containers"], DirectedEdge["disjoint-set", "mtl"], DirectedEdge["disjoint-set", "transformers"], DirectedEdge["disjoint-sets-st", "array"], DirectedEdge["disjoint-sets-st", "base"], DirectedEdge["disk-free-space", "base"], DirectedEdge["dist-upload", "base"], DirectedEdge["dist-upload", "Cabal"], DirectedEdge["dist-upload", "directory"], DirectedEdge["dist-upload", "filepath"], DirectedEdge["dist-upload", "process"], DirectedEdge["distributed-closure", "base"], DirectedEdge["distributed-closure", "binary"], DirectedEdge["distributed-closure", "bytestring"], DirectedEdge["distributed-closure", "constraints"], DirectedEdge["distributed-closure", "syb"], DirectedEdge["distributed-closure", "template-haskell"], DirectedEdge["distributed-process", "base"], DirectedEdge["distributed-process", "binary"], DirectedEdge["distributed-process", "bytestring"], DirectedEdge["distributed-process", "containers"], DirectedEdge["distributed-process", "data-accessor"], DirectedEdge["distributed-process", "deepseq"], DirectedEdge["distributed-process", "distributed-static"], DirectedEdge["distributed-process", "exceptions"], DirectedEdge["distributed-process", "ghc-prim"], DirectedEdge["distributed-process", "hashable"], DirectedEdge["distributed-process", "mtl"], DirectedEdge["distributed-process", "network-transport"], DirectedEdge["distributed-process", "old-locale"], DirectedEdge["distributed-process", "random"], DirectedEdge["distributed-process", "rank1dynamic"], DirectedEdge["distributed-process", "stm"], DirectedEdge["distributed-process", "syb"], DirectedEdge["distributed-process", "template-haskell"], DirectedEdge["distributed-process", "time"], DirectedEdge["distributed-process", "transformers"], DirectedEdge["distributed-process-async", "base"], DirectedEdge["distributed-process-async", "binary"], DirectedEdge["distributed-process-async", "containers"], DirectedEdge["distributed-process-async", "data-accessor"], DirectedEdge["distributed-process-async", "deepseq"], DirectedEdge["distributed-process-async", "derive"], DirectedEdge["distributed-process-async", "distributed-process"], DirectedEdge["distributed-process-async", "distributed-process-extras"], DirectedEdge["distributed-process-async", "fingertree"], DirectedEdge["distributed-process-async", "ghc-prim"], DirectedEdge["distributed-process-async", "hashable"], DirectedEdge["distributed-process-async", "mtl"], DirectedEdge["distributed-process-async", "stm"], DirectedEdge["distributed-process-async", "template-haskell"], DirectedEdge["distributed-process-async", "time"], DirectedEdge["distributed-process-async", "transformers"], DirectedEdge["distributed-process-async", "uniplate"], DirectedEdge["distributed-process-async", "unordered-containers"], DirectedEdge["distributed-process-azure", "azure-service-api"], DirectedEdge["distributed-process-azure", "base"], DirectedEdge["distributed-process-azure", "binary"], DirectedEdge["distributed-process-azure", "binary-generic"], DirectedEdge["distributed-process-azure", "bytestring"], DirectedEdge["distributed-process-azure", "certificate"], DirectedEdge["distributed-process-azure", "distributed-process"], DirectedEdge["distributed-process-azure", "distributed-process-azure"], DirectedEdge["distributed-process-azure", "distributed-static"], DirectedEdge["distributed-process-azure", "executable-path"], DirectedEdge["distributed-process-azure", "filepath"], DirectedEdge["distributed-process-azure", "mtl"], DirectedEdge["distributed-process-azure", "network-transport"], DirectedEdge["distributed-process-azure", "network-transport-tcp"], DirectedEdge["distributed-process-azure", "random"], DirectedEdge["distributed-process-azure", "rank1dynamic"], DirectedEdge["distributed-process-azure", "transformers"], DirectedEdge["distributed-process-azure", "unix"], DirectedEdge["distributed-process-client-server", "base"], DirectedEdge["distributed-process-client-server", "binary"], DirectedEdge["distributed-process-client-server", "containers"], DirectedEdge["distributed-process-client-server", "data-accessor"], DirectedEdge["distributed-process-client-server", "deepseq"], DirectedEdge["distributed-process-client-server", "derive"], DirectedEdge["distributed-process-client-server", "distributed-process"], DirectedEdge["distributed-process-client-server", "distributed-process-async"], DirectedEdge["distributed-process-client-server", "distributed-process-extras"], DirectedEdge["distributed-process-client-server", "fingertree"], DirectedEdge["distributed-process-client-server", "ghc-prim"], DirectedEdge["distributed-process-client-server", "hashable"], DirectedEdge["distributed-process-client-server", "mtl"], DirectedEdge["distributed-process-client-server", "stm"], DirectedEdge["distributed-process-client-server", "template-haskell"], DirectedEdge["distributed-process-client-server", "time"], DirectedEdge["distributed-process-client-server", "transformers"], DirectedEdge["distributed-process-client-server", "uniplate"], DirectedEdge["distributed-process-client-server", "unordered-containers"], DirectedEdge["distributed-process-ekg", "base"], DirectedEdge["distributed-process-ekg", "distributed-process"], DirectedEdge["distributed-process-ekg", "ekg-core"], DirectedEdge["distributed-process-ekg", "text"], DirectedEdge["distributed-process-ekg", "unordered-containers"], DirectedEdge["distributed-process-execution", "base"], DirectedEdge["distributed-process-execution", "binary"], DirectedEdge["distributed-process-execution", "containers"], DirectedEdge["distributed-process-execution", "data-accessor"], DirectedEdge["distributed-process-execution", "deepseq"], DirectedEdge["distributed-process-execution", "derive"], DirectedEdge["distributed-process-execution", "distributed-process"], DirectedEdge["distributed-process-execution", "distributed-process-client-server"], DirectedEdge["distributed-process-execution", "distributed-process-extras"], DirectedEdge["distributed-process-execution", "distributed-process-supervisor"], DirectedEdge["distributed-process-execution", "fingertree"], DirectedEdge["distributed-process-execution", "ghc-prim"], DirectedEdge["distributed-process-execution", "hashable"], DirectedEdge["distributed-process-execution", "mtl"], DirectedEdge["distributed-process-execution", "stm"], DirectedEdge["distributed-process-execution", "template-haskell"], DirectedEdge["distributed-process-execution", "time"], DirectedEdge["distributed-process-execution", "transformers"], DirectedEdge["distributed-process-execution", "uniplate"], DirectedEdge["distributed-process-execution", "unordered-containers"], DirectedEdge["distributed-process-extras", "base"], DirectedEdge["distributed-process-extras", "binary"], DirectedEdge["distributed-process-extras", "containers"], DirectedEdge["distributed-process-extras", "data-accessor"], DirectedEdge["distributed-process-extras", "deepseq"], DirectedEdge["distributed-process-extras", "derive"], DirectedEdge["distributed-process-extras", "distributed-process"], DirectedEdge["distributed-process-extras", "fingertree"], DirectedEdge["distributed-process-extras", "ghc-prim"], DirectedEdge["distributed-process-extras", "hashable"], DirectedEdge["distributed-process-extras", "mtl"], DirectedEdge["distributed-process-extras", "stm"], DirectedEdge["distributed-process-extras", "template-haskell"], DirectedEdge["distributed-process-extras", "time"], DirectedEdge["distributed-process-extras", "transformers"], DirectedEdge["distributed-process-extras", "uniplate"], DirectedEdge["distributed-process-extras", "unordered-containers"], DirectedEdge["distributed-process-lifted", "base"], DirectedEdge["distributed-process-lifted", "deepseq"], DirectedEdge["distributed-process-lifted", "distributed-process"], DirectedEdge["distributed-process-lifted", "distributed-process-monad-control"], DirectedEdge["distributed-process-lifted", "lifted-base"], DirectedEdge["distributed-process-lifted", "monad-control"], DirectedEdge["distributed-process-lifted", "mtl"], DirectedEdge["distributed-process-lifted", "network-transport"], DirectedEdge["distributed-process-lifted", "transformers"], DirectedEdge["distributed-process-lifted", "transformers-base"], DirectedEdge["distributed-process-monad-control", "base"], DirectedEdge["distributed-process-monad-control", "distributed-process"], DirectedEdge["distributed-process-monad-control", "monad-control"], DirectedEdge["distributed-process-monad-control", "transformers"], DirectedEdge["distributed-process-monad-control", "transformers-base"], DirectedEdge["distributed-process-p2p", "base"], DirectedEdge["distributed-process-p2p", "binary"], DirectedEdge["distributed-process-p2p", "bytestring"], DirectedEdge["distributed-process-p2p", "containers"], DirectedEdge["distributed-process-p2p", "distributed-process"], DirectedEdge["distributed-process-p2p", "distributed-process-p2p"], DirectedEdge["distributed-process-p2p", "mtl"], DirectedEdge["distributed-process-p2p", "network"], DirectedEdge["distributed-process-p2p", "network-transport"], DirectedEdge["distributed-process-p2p", "network-transport-tcp"], DirectedEdge["distributed-process-platform", "distributed-process-extras"], DirectedEdge["distributed-process-platform", "distributed-process-async"], DirectedEdge["distributed-process-platform", "distributed-process-client-server"], DirectedEdge["distributed-process-platform", "distributed-process-registry"], DirectedEdge["distributed-process-platform", "distributed-process-supervisor"], DirectedEdge["distributed-process-platform", "distributed-process-task"], DirectedEdge["distributed-process-platform", "distributed-process-execution"], DirectedEdge["distributed-process-platform", "base"], DirectedEdge["distributed-process-platform", "binary"], DirectedEdge["distributed-process-platform", "bytestring"], DirectedEdge["distributed-process-platform", "containers"], DirectedEdge["distributed-process-platform", "data-accessor"], DirectedEdge["distributed-process-platform", "deepseq"], DirectedEdge["distributed-process-platform", "derive"], DirectedEdge["distributed-process-platform", "directory"], DirectedEdge["distributed-process-platform", "distributed-process"], DirectedEdge["distributed-process-platform", "distributed-process-platform"], DirectedEdge["distributed-process-platform", "fingertree"], DirectedEdge["distributed-process-platform", "ghc-prim"], DirectedEdge["distributed-process-platform", "hashable"], DirectedEdge["distributed-process-platform", "mtl"], DirectedEdge["distributed-process-platform", "network-transport-tcp"], DirectedEdge["distributed-process-platform", "old-locale"], DirectedEdge["distributed-process-platform", "stm"], DirectedEdge["distributed-process-platform", "template-haskell"], DirectedEdge["distributed-process-platform", "time"], DirectedEdge["distributed-process-platform", "transformers"], DirectedEdge["distributed-process-platform", "uniplate"], DirectedEdge["distributed-process-platform", "unordered-containers"], DirectedEdge["distributed-process-registry", "base"], DirectedEdge["distributed-process-registry", "binary"], DirectedEdge["distributed-process-registry", "containers"], DirectedEdge["distributed-process-registry", "data-accessor"], DirectedEdge["distributed-process-registry", "deepseq"], DirectedEdge["distributed-process-registry", "derive"], DirectedEdge["distributed-process-registry", "distributed-process"], DirectedEdge["distributed-process-registry", "distributed-process-client-server"], DirectedEdge["distributed-process-registry", "distributed-process-extras"], DirectedEdge["distributed-process-registry", "distributed-process-supervisor"], DirectedEdge["distributed-process-registry", "fingertree"], DirectedEdge["distributed-process-registry", "ghc-prim"], DirectedEdge["distributed-process-registry", "hashable"], DirectedEdge["distributed-process-registry", "mtl"], DirectedEdge["distributed-process-registry", "stm"], DirectedEdge["distributed-process-registry", "template-haskell"], DirectedEdge["distributed-process-registry", "time"], DirectedEdge["distributed-process-registry", "transformers"], DirectedEdge["distributed-process-registry", "uniplate"], DirectedEdge["distributed-process-registry", "unordered-containers"], DirectedEdge["distributed-process-simplelocalnet", "base"], DirectedEdge["distributed-process-simplelocalnet", "binary"], DirectedEdge["distributed-process-simplelocalnet", "bytestring"], DirectedEdge["distributed-process-simplelocalnet", "containers"], DirectedEdge["distributed-process-simplelocalnet", "data-accessor"], DirectedEdge["distributed-process-simplelocalnet", "distributed-process"], DirectedEdge["distributed-process-simplelocalnet", "network"], DirectedEdge["distributed-process-simplelocalnet", "network-multicast"], DirectedEdge["distributed-process-simplelocalnet", "network-transport"], DirectedEdge["distributed-process-simplelocalnet", "network-transport-tcp"], DirectedEdge["distributed-process-simplelocalnet", "transformers"], DirectedEdge["distributed-process-supervisor", "base"], DirectedEdge["distributed-process-supervisor", "binary"], DirectedEdge["distributed-process-supervisor", "containers"], DirectedEdge["distributed-process-supervisor", "data-accessor"], DirectedEdge["distributed-process-supervisor", "deepseq"], DirectedEdge["distributed-process-supervisor", "derive"], DirectedEdge["distributed-process-supervisor", "distributed-process"], DirectedEdge["distributed-process-supervisor", "distributed-process-client-server"], DirectedEdge["distributed-process-supervisor", "distributed-process-extras"], DirectedEdge["distributed-process-supervisor", "fingertree"], DirectedEdge["distributed-process-supervisor", "ghc-prim"], DirectedEdge["distributed-process-supervisor", "hashable"], DirectedEdge["distributed-process-supervisor", "mtl"], DirectedEdge["distributed-process-supervisor", "stm"], DirectedEdge["distributed-process-supervisor", "template-haskell"], DirectedEdge["distributed-process-supervisor", "time"], DirectedEdge["distributed-process-supervisor", "transformers"], DirectedEdge["distributed-process-supervisor", "uniplate"], DirectedEdge["distributed-process-supervisor", "unordered-containers"], DirectedEdge["distributed-process-task", "base"], DirectedEdge["distributed-process-task", "binary"], DirectedEdge["distributed-process-task", "containers"], DirectedEdge["distributed-process-task", "data-accessor"], DirectedEdge["distributed-process-task", "deepseq"], DirectedEdge["distributed-process-task", "derive"], DirectedEdge["distributed-process-task", "distributed-process"], DirectedEdge["distributed-process-task", "distributed-process-async"], DirectedEdge["distributed-process-task", "distributed-process-client-server"], DirectedEdge["distributed-process-task", "distributed-process-extras"], DirectedEdge["distributed-process-task", "fingertree"], DirectedEdge["distributed-process-task", "ghc-prim"], DirectedEdge["distributed-process-task", "hashable"], DirectedEdge["distributed-process-task", "mtl"], DirectedEdge["distributed-process-task", "stm"], DirectedEdge["distributed-process-task", "template-haskell"], DirectedEdge["distributed-process-task", "time"], DirectedEdge["distributed-process-task", "transformers"], DirectedEdge["distributed-process-task", "uniplate"], DirectedEdge["distributed-process-task", "unordered-containers"], DirectedEdge["distributed-process-tests", "ansi-terminal"], DirectedEdge["distributed-process-tests", "base"], DirectedEdge["distributed-process-tests", "binary"], DirectedEdge["distributed-process-tests", "bytestring"], DirectedEdge["distributed-process-tests", "distributed-process"], DirectedEdge["distributed-process-tests", "distributed-static"], DirectedEdge["distributed-process-tests", "ghc-prim"], DirectedEdge["distributed-process-tests", "HUnit"], DirectedEdge["distributed-process-tests", "network"], DirectedEdge["distributed-process-tests", "network-transport"], DirectedEdge["distributed-process-tests", "random"], DirectedEdge["distributed-process-tests", "rematch"], DirectedEdge["distributed-process-tests", "setenv"], DirectedEdge["distributed-process-tests", "stm"], DirectedEdge["distributed-process-tests", "test-framework"], DirectedEdge["distributed-process-tests", "test-framework-hunit"], DirectedEdge["distributed-process-zookeeper", "base"], DirectedEdge["distributed-process-zookeeper", "binary"], DirectedEdge["distributed-process-zookeeper", "bytestring"], DirectedEdge["distributed-process-zookeeper", "containers"], DirectedEdge["distributed-process-zookeeper", "deepseq"], DirectedEdge["distributed-process-zookeeper", "distributed-process"], DirectedEdge["distributed-process-zookeeper", "distributed-process-zookeeper"], DirectedEdge["distributed-process-zookeeper", "hzk"], DirectedEdge["distributed-process-zookeeper", "mtl"], DirectedEdge["distributed-process-zookeeper", "network"], DirectedEdge["distributed-process-zookeeper", "network-transport"], DirectedEdge["distributed-process-zookeeper", "network-transport-tcp"], DirectedEdge["distributed-process-zookeeper", "transformers"], DirectedEdge["distributed-static", "base"], DirectedEdge["distributed-static", "binary"], DirectedEdge["distributed-static", "bytestring"], DirectedEdge["distributed-static", "containers"], DirectedEdge["distributed-static", "deepseq"], DirectedEdge["distributed-static", "rank1dynamic"], DirectedEdge["distribution", "array"], DirectedEdge["distribution", "base"], DirectedEdge["distribution", "containers"], DirectedEdge["distribution", "MonadRandom"], DirectedEdge["distribution", "random"], DirectedEdge["distribution-plot", "base"], DirectedEdge["distribution-plot", "Chart"], DirectedEdge["distribution-plot", "Chart-cairo"], DirectedEdge["distribution-plot", "colour"], DirectedEdge["distribution-plot", "containers"], DirectedEdge["distribution-plot", "data-default-class"], DirectedEdge["distribution-plot", "distribution"], DirectedEdge["distribution-plot", "lens"], DirectedEdge["distributive", "base"], DirectedEdge["distributive", "base-orphans"], DirectedEdge["distributive", "ghc-prim"], DirectedEdge["distributive", "tagged"], DirectedEdge["distributive", "transformers"], DirectedEdge["distributive", "transformers-compat"], DirectedEdge["diversity", "base"], DirectedEdge["diversity", "containers"], DirectedEdge["diversity", "data-ordlist"], DirectedEdge["diversity", "diversity"], DirectedEdge["diversity", "fasta"], DirectedEdge["diversity", "math-functions"], DirectedEdge["diversity", "MonadRandom"], DirectedEdge["diversity", "optparse-applicative"], DirectedEdge["diversity", "parsec"], DirectedEdge["diversity", "pipes"], DirectedEdge["diversity", "random-shuffle"], DirectedEdge["diversity", "scientific"], DirectedEdge["diversity", "split"], DirectedEdge["dixi", "acid-state"], DirectedEdge["dixi", "aeson"], DirectedEdge["dixi", "base"], DirectedEdge["dixi", "base-orphans"], DirectedEdge["dixi", "blaze-html"], DirectedEdge["dixi", "blaze-markup"], DirectedEdge["dixi", "bytestring"], DirectedEdge["dixi", "composition-tree"], DirectedEdge["dixi", "containers"], DirectedEdge["dixi", "data-default"], DirectedEdge["dixi", "directory"], DirectedEdge["dixi", "dixi"], DirectedEdge["dixi", "either"], DirectedEdge["dixi", "filepath"], DirectedEdge["dixi", "heredoc"], DirectedEdge["dixi", "lens"], DirectedEdge["dixi", "network-uri"], DirectedEdge["dixi", "pandoc"], DirectedEdge["dixi", "pandoc-types"], DirectedEdge["dixi", "patches-vector"], DirectedEdge["dixi", "safecopy"], DirectedEdge["dixi", "servant"], DirectedEdge["dixi", "servant-blaze"], DirectedEdge["dixi", "servant-server"], DirectedEdge["dixi", "shakespeare"], DirectedEdge["dixi", "template-haskell"], DirectedEdge["dixi", "text"], DirectedEdge["dixi", "time"], DirectedEdge["dixi", "time-locale-compat"], DirectedEdge["dixi", "timezone-olson"], DirectedEdge["dixi", "timezone-series"], DirectedEdge["dixi", "transformers"], DirectedEdge["dixi", "transformers-compat"], DirectedEdge["dixi", "vector"], DirectedEdge["dixi", "warp"], DirectedEdge["dixi", "yaml"], DirectedEdge["djembe", "base"], DirectedEdge["djembe", "hmidi"], DirectedEdge["djembe", "hspec"], DirectedEdge["djembe", "lens"], DirectedEdge["djembe", "mtl"], DirectedEdge["djembe", "QuickCheck"], DirectedEdge["djembe", "random"], DirectedEdge["djinn", "array"], DirectedEdge["djinn", "base"], DirectedEdge["djinn", "containers"], DirectedEdge["djinn", "haskeline"], DirectedEdge["djinn", "mtl"], DirectedEdge["djinn", "pretty"], DirectedEdge["djinn-ghc", "async"], DirectedEdge["djinn-ghc", "base"], DirectedEdge["djinn-ghc", "containers"], DirectedEdge["djinn-ghc", "djinn-lib"], DirectedEdge["djinn-ghc", "ghc"], DirectedEdge["djinn-ghc", "mtl"], DirectedEdge["djinn-ghc", "transformers"], DirectedEdge["djinn-lib", "base"], DirectedEdge["djinn-lib", "containers"], DirectedEdge["djinn-lib", "mtl"], DirectedEdge["djinn-lib", "pretty"], DirectedEdge["djinn-th", "base"], DirectedEdge["djinn-th", "containers"], DirectedEdge["djinn-th", "logict"], DirectedEdge["djinn-th", "template-haskell"], DirectedEdge["dlist", "base"], DirectedEdge["dlist", "deepseq"], DirectedEdge["dlist-instances", "base"], DirectedEdge["dlist-instances", "dlist"], DirectedEdge["dlist-instances", "semigroups"], DirectedEdge["dns", "attoparsec"], DirectedEdge["dns", "base"], DirectedEdge["dns", "binary"], DirectedEdge["dns", "blaze-builder"], DirectedEdge["dns", "bytestring"], DirectedEdge["dns", "conduit"], DirectedEdge["dns", "conduit-extra"], DirectedEdge["dns", "containers"], DirectedEdge["dns", "iproute"], DirectedEdge["dns", "mtl"], DirectedEdge["dns", "network"], DirectedEdge["dns", "network-bytestring"], DirectedEdge["dns", "random"], DirectedEdge["dns", "resourcet"], DirectedEdge["dnscache", "base"], DirectedEdge["dnscache", "bytestring"], DirectedEdge["dnscache", "containers"], DirectedEdge["dnscache", "contstuff"], DirectedEdge["dnscache", "dns"], DirectedEdge["dnscache", "iproute"], DirectedEdge["dnscache", "time"], DirectedEdge["dnsrbl", "base"], DirectedEdge["dnsrbl", "containers"], DirectedEdge["dnsrbl", "hsdns"], DirectedEdge["dnsrbl", "HUnit"], DirectedEdge["dnsrbl", "network"], DirectedEdge["dnssd", "base"], DirectedEdge["dnssd", "transformers"], DirectedEdge["doc-review", "base"], DirectedEdge["doc-review", "base64-bytestring"], DirectedEdge["doc-review", "binary"], DirectedEdge["doc-review", "bytestring"], DirectedEdge["doc-review", "containers"], DirectedEdge["doc-review", "directory"], DirectedEdge["doc-review", "feed"], DirectedEdge["doc-review", "filepath"], DirectedEdge["doc-review", "heist"], DirectedEdge["doc-review", "hexpat"], DirectedEdge["doc-review", "json"], DirectedEdge["doc-review", "MonadCatchIO-transformers"], DirectedEdge["doc-review", "MonadRandom"], DirectedEdge["doc-review", "monads-fd"], DirectedEdge["doc-review", "network"], DirectedEdge["doc-review", "old-locale"], DirectedEdge["doc-review", "snap-core"], DirectedEdge["doc-review", "snap-server"], DirectedEdge["doc-review", "sqlite"], DirectedEdge["doc-review", "tagchup"], DirectedEdge["doc-review", "text"], DirectedEdge["doc-review", "time"], DirectedEdge["doc-review", "transformers"], DirectedEdge["doc-review", "unix"], DirectedEdge["doc-review", "xhtml-combinators"], DirectedEdge["doc-review", "xml"], DirectedEdge["doc-review", "xml-basic"], DirectedEdge["doccheck", "attoparsec"], DirectedEdge["doccheck", "base"], DirectedEdge["doccheck", "directory"], DirectedEdge["doccheck", "directory-tree"], DirectedEdge["doccheck", "filepath"], DirectedEdge["doccheck", "ghc"], DirectedEdge["doccheck", "ghc-paths"], DirectedEdge["doccheck", "text"], DirectedEdge["docidx", "base"], DirectedEdge["docidx", "Cabal"], DirectedEdge["docidx", "containers"], DirectedEdge["docidx", "directory"], DirectedEdge["docidx", "filepath"], DirectedEdge["docidx", "html"], DirectedEdge["docidx", "MissingH"], DirectedEdge["docidx", "mtl"], DirectedEdge["docidx", "old-locale"], DirectedEdge["docidx", "tagsoup"], DirectedEdge["docidx", "time"], DirectedEdge["docker", "aeson"], DirectedEdge["docker", "base"], DirectedEdge["docker", "bytestring"], DirectedEdge["docker", "containers"], DirectedEdge["docker", "data-default"], DirectedEdge["docker", "HsOpenSSL"], DirectedEdge["docker", "http-client-openssl"], DirectedEdge["docker", "lens"], DirectedEdge["docker", "lens-aeson"], DirectedEdge["docker", "network-uri"], DirectedEdge["docker", "pipes"], DirectedEdge["docker", "pipes-bytestring"], DirectedEdge["docker", "pipes-http"], DirectedEdge["docker", "pipes-text"], DirectedEdge["docker", "text"], DirectedEdge["docker", "wreq"], DirectedEdge["dockercook", "aeson"], DirectedEdge["dockercook", "aeson-pretty"], DirectedEdge["dockercook", "attoparsec"], DirectedEdge["dockercook", "base"], DirectedEdge["dockercook", "base16-bytestring"], DirectedEdge["dockercook", "bytestring"], DirectedEdge["dockercook", "conduit"], DirectedEdge["dockercook", "conduit-combinators"], DirectedEdge["dockercook", "conduit-extra"], DirectedEdge["dockercook", "containers"], DirectedEdge["dockercook", "cryptohash"], DirectedEdge["dockercook", "directory"], DirectedEdge["dockercook", "dockercook"], DirectedEdge["dockercook", "filepath"], DirectedEdge["dockercook", "hashable"], DirectedEdge["dockercook", "hslogger"], DirectedEdge["dockercook", "http-client"], DirectedEdge["dockercook", "lens"], DirectedEdge["dockercook", "monad-logger"], DirectedEdge["dockercook", "mtl"], DirectedEdge["dockercook", "optparse-applicative"], DirectedEdge["dockercook", "persistent-sqlite"], DirectedEdge["dockercook", "persistent-template"], DirectedEdge["dockercook", "process"], DirectedEdge["dockercook", "regex-compat"], DirectedEdge["dockercook", "resourcet"], DirectedEdge["dockercook", "retry"], DirectedEdge["dockercook", "stm"], DirectedEdge["dockercook", "streaming-commons"], DirectedEdge["dockercook", "system-filepath"], DirectedEdge["dockercook", "temporary"], DirectedEdge["dockercook", "text"], DirectedEdge["dockercook", "time"], DirectedEdge["dockercook", "transformers"], DirectedEdge["dockercook", "unix"], DirectedEdge["dockercook", "unordered-containers"], DirectedEdge["dockercook", "vector"], DirectedEdge["dockercook", "wreq"], DirectedEdge["dockerfile", "base"], DirectedEdge["docopt", "base"], DirectedEdge["docopt", "containers"], DirectedEdge["docopt", "parsec"], DirectedEdge["docopt", "template-haskell"], DirectedEdge["docopt", "th-lift"], DirectedEdge["doctest", "base"], DirectedEdge["doctest", "base-compat"], DirectedEdge["doctest", "deepseq"], DirectedEdge["doctest", "directory"], DirectedEdge["doctest", "doctest"], DirectedEdge["doctest", "filepath"], DirectedEdge["doctest", "ghc"], DirectedEdge["doctest", "ghc-paths"], DirectedEdge["doctest", "process"], DirectedEdge["doctest", "syb"], DirectedEdge["doctest", "transformers"], DirectedEdge["doctest-discover", "aeson"], DirectedEdge["doctest-discover", "base"], DirectedEdge["doctest-discover", "bytestring"], DirectedEdge["doctest-discover", "directory"], DirectedEdge["doctest-discover", "doctest"], DirectedEdge["doctest-discover", "filepath"], DirectedEdge["doctest-discover-configurator", "base"], DirectedEdge["doctest-discover-configurator", "bytestring"], DirectedEdge["doctest-discover-configurator", "configurator"], DirectedEdge["doctest-discover-configurator", "directory"], DirectedEdge["doctest-discover-configurator", "doctest"], DirectedEdge["doctest-discover-configurator", "filepath"], DirectedEdge["doctest-prop", "doctest"], DirectedEdge["doctest-prop", "base"], DirectedEdge["doctest-prop", "HUnit"], DirectedEdge["doctest-prop", "QuickCheck"], DirectedEdge["dom-lt", "array"], DirectedEdge["dom-lt", "base"], DirectedEdge["dom-lt", "containers"], DirectedEdge["dom-parser", "base"], DirectedEdge["dom-parser", "lens"], DirectedEdge["dom-parser", "mtl"], DirectedEdge["dom-parser", "semigroups"], DirectedEdge["dom-parser", "shakespeare"], DirectedEdge["dom-parser", "text"], DirectedEdge["dom-parser", "transformers"], DirectedEdge["dom-parser", "xml-conduit"], DirectedEdge["dom-selector", "base"], DirectedEdge["dom-selector", "blaze-html"], DirectedEdge["dom-selector", "containers"], DirectedEdge["dom-selector", "html-conduit"], DirectedEdge["dom-selector", "parsec"], DirectedEdge["dom-selector", "QuickCheck"], DirectedEdge["dom-selector", "template-haskell"], DirectedEdge["dom-selector", "text"], DirectedEdge["dom-selector", "th-lift"], DirectedEdge["dom-selector", "xml-conduit"], DirectedEdge["domain-auth", "appar"], DirectedEdge["domain-auth", "base"], DirectedEdge["domain-auth", "binary"], DirectedEdge["domain-auth", "blaze-builder"], DirectedEdge["domain-auth", "bytestring"], DirectedEdge["domain-auth", "containers"], DirectedEdge["domain-auth", "crypto-pubkey-types"], DirectedEdge["domain-auth", "dns"], DirectedEdge["domain-auth", "iproute"], DirectedEdge["domain-auth", "network"], DirectedEdge["domain-auth", "RSA"], DirectedEdge["domain-auth", "SHA"], DirectedEdge["dominion", "base"], DirectedEdge["dominion", "hscolour"], DirectedEdge["dominion", "lens"], DirectedEdge["dominion", "mtl"], DirectedEdge["dominion", "random"], DirectedEdge["dominion", "random-extras"], DirectedEdge["dominion", "random-fu"], DirectedEdge["dominion", "transformers"], DirectedEdge["domplate", "base"], DirectedEdge["domplate", "bytestring"], DirectedEdge["domplate", "containers"], DirectedEdge["domplate", "tagsoup"], DirectedEdge["domplate", "text"], DirectedEdge["domplate", "unordered-containers"], DirectedEdge["domplate", "vector"], DirectedEdge["domplate", "yaml"], DirectedEdge["dot2graphml", "base"], DirectedEdge["dot2graphml", "containers"], DirectedEdge["dot2graphml", "graphviz"], DirectedEdge["dot2graphml", "hxt"], DirectedEdge["dot2graphml", "text"], DirectedEdge["dotenv", "base"], DirectedEdge["dotenv", "base-compat"], DirectedEdge["dotenv", "megaparsec"], DirectedEdge["dotenv", "optparse-applicative"], DirectedEdge["dotenv", "process"], DirectedEdge["dotenv", "text"], DirectedEdge["dotfs", "base"], DirectedEdge["dotfs", "bytestring"], DirectedEdge["dotfs", "containers"], DirectedEdge["dotfs", "directory"], DirectedEdge["dotfs", "filepath"], DirectedEdge["dotfs", "haskell-src"], DirectedEdge["dotfs", "HFuse"], DirectedEdge["dotfs", "HUnit"], DirectedEdge["dotfs", "parsec"], DirectedEdge["dotfs", "process"], DirectedEdge["dotfs", "QuickCheck"], DirectedEdge["dotfs", "template-haskell"], DirectedEdge["dotfs", "test-framework"], DirectedEdge["dotfs", "test-framework-hunit"], DirectedEdge["dotfs", "transformers"], DirectedEdge["dotfs", "unix"], DirectedEdge["dotgen", "base"], DirectedEdge["dotgen", "containers"], DirectedEdge["dotgen", "dotgen"], DirectedEdge["dotnet-timespan", "base"], DirectedEdge["double-conversion", "base"], DirectedEdge["double-conversion", "bytestring"], DirectedEdge["double-conversion", "ghc-prim"], DirectedEdge["double-conversion", "integer"], DirectedEdge["double-conversion", "integer-gmp"], DirectedEdge["double-conversion", "text"], DirectedEdge["double-metaphone", "base"], DirectedEdge["double-metaphone", "bytestring"], DirectedEdge["dove", "base"], DirectedEdge["dow", "array"], DirectedEdge["dow", "base"], DirectedEdge["dow", "directory"], DirectedEdge["dow", "elerea"], DirectedEdge["dow", "GLFW"], DirectedEdge["dow", "mersenne-random"], DirectedEdge["dow", "OpenGL"], DirectedEdge["download", "base"], DirectedEdge["download", "bytestring"], DirectedEdge["download", "feed"], DirectedEdge["download", "tagsoup"], DirectedEdge["download", "xml"], DirectedEdge["download-curl", "base"], DirectedEdge["download-curl", "bytestring"], DirectedEdge["download-curl", "curl"], DirectedEdge["download-curl", "feed"], DirectedEdge["download-curl", "tagsoup"], DirectedEdge["download-curl", "xml"], DirectedEdge["download-media-content", "base"], DirectedEdge["download-media-content", "bytestring"], DirectedEdge["download-media-content", "filepath"], DirectedEdge["download-media-content", "http-enumerator"], DirectedEdge["download-media-content", "tagsoup"], DirectedEdge["download-media-content", "text"], DirectedEdge["dozenal", "base"], DirectedEdge["dozens", "aeson"], DirectedEdge["dozens", "base"], DirectedEdge["dozens", "bytestring"], DirectedEdge["dozens", "data-default-class"], DirectedEdge["dozens", "http-client"], DirectedEdge["dozens", "http-types"], DirectedEdge["dozens", "reflection"], DirectedEdge["dozens", "scientific"], DirectedEdge["dozens", "text"], DirectedEdge["dozens", "transformers"], DirectedEdge["dph-base", "array"], DirectedEdge["dph-base", "base"], DirectedEdge["dph-base", "ghc-prim"], DirectedEdge["dph-base", "pretty"], DirectedEdge["dph-base", "random"], DirectedEdge["dph-base", "vector"], DirectedEdge["dph-examples", "base"], DirectedEdge["dph-examples", "containers"], DirectedEdge["dph-examples", "dph-base"], DirectedEdge["dph-examples", "dph-lifted-vseg"], DirectedEdge["dph-examples", "dph-prim-par"], DirectedEdge["dph-examples", "HUnit"], DirectedEdge["dph-examples", "old-time"], DirectedEdge["dph-examples", "parseargs"], DirectedEdge["dph-examples", "random"], DirectedEdge["dph-examples", "vector"], DirectedEdge["dph-lifted-base", "array"], DirectedEdge["dph-lifted-base", "base"], DirectedEdge["dph-lifted-base", "containers"], DirectedEdge["dph-lifted-base", "dph-base"], DirectedEdge["dph-lifted-base", "dph-prim-par"], DirectedEdge["dph-lifted-base", "ghc"], DirectedEdge["dph-lifted-base", "pretty"], DirectedEdge["dph-lifted-base", "random"], DirectedEdge["dph-lifted-base", "template-haskell"], DirectedEdge["dph-lifted-base", "vector"], DirectedEdge["dph-lifted-copy", "array"], DirectedEdge["dph-lifted-copy", "base"], DirectedEdge["dph-lifted-copy", "dph-base"], DirectedEdge["dph-lifted-copy", "dph-prim-par"], DirectedEdge["dph-lifted-copy", "ghc"], DirectedEdge["dph-lifted-copy", "random"], DirectedEdge["dph-lifted-copy", "template-haskell"], DirectedEdge["dph-lifted-copy", "vector"], DirectedEdge["dph-lifted-vseg", "array"], DirectedEdge["dph-lifted-vseg", "base"], DirectedEdge["dph-lifted-vseg", "containers"], DirectedEdge["dph-lifted-vseg", "dph-base"], DirectedEdge["dph-lifted-vseg", "dph-lifted-base"], DirectedEdge["dph-lifted-vseg", "dph-prim-par"], DirectedEdge["dph-lifted-vseg", "ghc"], DirectedEdge["dph-lifted-vseg", "pretty"], DirectedEdge["dph-lifted-vseg", "random"], DirectedEdge["dph-lifted-vseg", "template-haskell"], DirectedEdge["dph-lifted-vseg", "vector"], DirectedEdge["dph-prim-interface", "base"], DirectedEdge["dph-prim-interface", "dph-base"], DirectedEdge["dph-prim-interface", "random"], DirectedEdge["dph-prim-interface", "vector"], DirectedEdge["dph-prim-par", "base"], DirectedEdge["dph-prim-par", "dph-base"], DirectedEdge["dph-prim-par", "dph-prim-interface"], DirectedEdge["dph-prim-par", "dph-prim-seq"], DirectedEdge["dph-prim-par", "old-time"], DirectedEdge["dph-prim-par", "random"], DirectedEdge["dph-prim-par", "vector"], DirectedEdge["dph-prim-seq", "base"], DirectedEdge["dph-prim-seq", "dph-base"], DirectedEdge["dph-prim-seq", "dph-prim-interface"], DirectedEdge["dph-prim-seq", "ghc-prim"], DirectedEdge["dph-prim-seq", "primitive"], DirectedEdge["dph-prim-seq", "random"], DirectedEdge["dph-prim-seq", "vector"], DirectedEdge["dpkg", "base"], DirectedEdge["dpkg", "bindings-DSL"], DirectedEdge["dpkg", "bytestring"], DirectedEdge["dpkg", "monad-loops"], DirectedEdge["dpor", "base"], DirectedEdge["dpor", "containers"], DirectedEdge["dpor", "deepseq"], DirectedEdge["dpor", "random"], DirectedEdge["dpor", "semigroups"], DirectedEdge["drClickOn", "base"], DirectedEdge["drClickOn", "containers"], DirectedEdge["draw-poker", "base"], DirectedEdge["draw-poker", "draw-poker"], DirectedEdge["draw-poker", "random-shuffle"], DirectedEdge["draw-poker", "safe"], DirectedEdge["drawille", "AC-Angle"], DirectedEdge["drawille", "base"], DirectedEdge["drawille", "containers"], DirectedEdge["drawille", "friday"], DirectedEdge["drawille", "terminal-size"], DirectedEdge["drawille", "vector"], DirectedEdge["dresdner-verkehrsbetriebe", "aeson"], DirectedEdge["dresdner-verkehrsbetriebe", "base"], DirectedEdge["dresdner-verkehrsbetriebe", "bytestring"], DirectedEdge["dresdner-verkehrsbetriebe", "HTTP"], DirectedEdge["dresdner-verkehrsbetriebe", "old-locale"], DirectedEdge["dresdner-verkehrsbetriebe", "optparse-applicative"], DirectedEdge["dresdner-verkehrsbetriebe", "time"], DirectedEdge["dresdner-verkehrsbetriebe", "unordered-containers"], DirectedEdge["dresdner-verkehrsbetriebe", "vector"], DirectedEdge["drifter", "base"], DirectedEdge["drifter", "containers"], DirectedEdge["drifter", "fgl"], DirectedEdge["drifter", "text"], DirectedEdge["drifter-postgresql", "base"], DirectedEdge["drifter-postgresql", "drifter"], DirectedEdge["drifter-postgresql", "either"], DirectedEdge["drifter-postgresql", "mtl"], DirectedEdge["drifter-postgresql", "postgresql-simple"], DirectedEdge["drifter-postgresql", "time"], DirectedEdge["dropbox-sdk", "base"], DirectedEdge["dropbox-sdk", "blaze-builder"], DirectedEdge["dropbox-sdk", "bytestring"], DirectedEdge["dropbox-sdk", "case-insensitive"], DirectedEdge["dropbox-sdk", "certificate"], DirectedEdge["dropbox-sdk", "conduit"], DirectedEdge["dropbox-sdk", "HTTP"], DirectedEdge["dropbox-sdk", "http-conduit"], DirectedEdge["dropbox-sdk", "http-types"], DirectedEdge["dropbox-sdk", "json"], DirectedEdge["dropbox-sdk", "monad-control"], DirectedEdge["dropbox-sdk", "network"], DirectedEdge["dropbox-sdk", "old-locale"], DirectedEdge["dropbox-sdk", "pem"], DirectedEdge["dropbox-sdk", "resourcet"], DirectedEdge["dropbox-sdk", "template-haskell"], DirectedEdge["dropbox-sdk", "time"], DirectedEdge["dropbox-sdk", "tls"], DirectedEdge["dropbox-sdk", "tls-extra"], DirectedEdge["dropbox-sdk", "transformers"], DirectedEdge["dropbox-sdk", "urlencoded"], DirectedEdge["dropbox-sdk", "utf8-string"], DirectedEdge["dropsolve", "confsolve"], DirectedEdge["dropsolve", "base"], DirectedEdge["dropsolve", "containers"], DirectedEdge["dropsolve", "directory"], DirectedEdge["dropsolve", "filepath"], DirectedEdge["dropsolve", "process"], DirectedEdge["dropsolve", "regex-posix"], DirectedEdge["dropsolve", "time"], DirectedEdge["ds-kanren", "base"], DirectedEdge["ds-kanren", "containers"], DirectedEdge["ds-kanren", "logict"], DirectedEdge["dsh-sql", "aeson"], DirectedEdge["dsh-sql", "algebra-dag"], DirectedEdge["dsh-sql", "algebra-sql"], DirectedEdge["dsh-sql", "base"], DirectedEdge["dsh-sql", "bytestring"], DirectedEdge["dsh-sql", "bytestring-lexing"], DirectedEdge["dsh-sql", "containers"], DirectedEdge["dsh-sql", "Decimal"], DirectedEdge["dsh-sql", "DSH"], DirectedEdge["dsh-sql", "dsh-sql"], DirectedEdge["dsh-sql", "either"], DirectedEdge["dsh-sql", "HDBC"], DirectedEdge["dsh-sql", "HDBC-odbc"], DirectedEdge["dsh-sql", "HUnit"], DirectedEdge["dsh-sql", "mtl"], DirectedEdge["dsh-sql", "process"], DirectedEdge["dsh-sql", "QuickCheck"], DirectedEdge["dsh-sql", "random"], DirectedEdge["dsh-sql", "semigroups"], DirectedEdge["dsh-sql", "set-monad"], DirectedEdge["dsh-sql", "template-haskell"], DirectedEdge["dsh-sql", "test-framework"], DirectedEdge["dsh-sql", "test-framework-hunit"], DirectedEdge["dsh-sql", "text"], DirectedEdge["dsh-sql", "vector"], DirectedEdge["dsmc", "attoparsec"], DirectedEdge["dsmc", "base"], DirectedEdge["dsmc", "bytestring"], DirectedEdge["dsmc", "containers"], DirectedEdge["dsmc", "entropy"], DirectedEdge["dsmc", "hslogger"], DirectedEdge["dsmc", "mwc-random"], DirectedEdge["dsmc", "parallel"], DirectedEdge["dsmc", "primitive"], DirectedEdge["dsmc", "repa"], DirectedEdge["dsmc", "strict"], DirectedEdge["dsmc", "transformers"], DirectedEdge["dsmc", "vector"], DirectedEdge["dsmc-tools", "base"], DirectedEdge["dsmc-tools", "bytestring"], DirectedEdge["dsmc-tools", "cmdargs"], DirectedEdge["dsmc-tools", "ConfigFile"], DirectedEdge["dsmc-tools", "dsmc"], DirectedEdge["dsmc-tools", "gloss"], DirectedEdge["dsmc-tools", "gloss-raster"], DirectedEdge["dsmc-tools", "hslogger"], DirectedEdge["dsmc-tools", "mtl"], DirectedEdge["dsmc-tools", "repa"], DirectedEdge["dsmc-tools", "strict"], DirectedEdge["dsmc-tools", "transformers"], DirectedEdge["dsmc-tools", "vector"], DirectedEdge["dson", "base"], DirectedEdge["dson", "parsec"], DirectedEdge["dson-parsec", "base"], DirectedEdge["dson-parsec", "parsec"], DirectedEdge["dsp", "array"], DirectedEdge["dsp", "base"], DirectedEdge["dsp", "dsp"], DirectedEdge["dsp", "random"], DirectedEdge["dstring", "base"], DirectedEdge["dstring", "base-unicode-symbols"], DirectedEdge["dstring", "dlist"], DirectedEdge["dtab", "array"], DirectedEdge["dtab", "base"], DirectedEdge["dtab", "binary"], DirectedEdge["dtab", "bytestring"], DirectedEdge["dtab", "containers"], DirectedEdge["dtab", "dtab"], DirectedEdge["dtab", "pretty"], DirectedEdge["dtab", "transformers"], DirectedEdge["dtd", "attoparsec"], DirectedEdge["dtd", "attoparsec-conduit"], DirectedEdge["dtd", "base"], DirectedEdge["dtd", "blaze-builder"], DirectedEdge["dtd", "conduit"], DirectedEdge["dtd", "containers"], DirectedEdge["dtd", "lifted-base"], DirectedEdge["dtd", "monad-control"], DirectedEdge["dtd", "network"], DirectedEdge["dtd", "resourcet"], DirectedEdge["dtd", "text"], DirectedEdge["dtd", "transformers"], DirectedEdge["dtd", "uri-conduit"], DirectedEdge["dtd", "xml-catalog"], DirectedEdge["dtd", "xml-conduit"], DirectedEdge["dtd", "xml-types"], DirectedEdge["dtd-text", "attoparsec"], DirectedEdge["dtd-text", "base"], DirectedEdge["dtd-text", "containers"], DirectedEdge["dtd-text", "dtd-types"], DirectedEdge["dtd-text", "text"], DirectedEdge["dtd-text", "xml-types"], DirectedEdge["dtd-types", "base"], DirectedEdge["dtd-types", "text"], DirectedEdge["dtd-types", "xml-types"], DirectedEdge["dtrace", "base"], DirectedEdge["dtw", "base"], DirectedEdge["dtw", "containers"], DirectedEdge["dtw", "vector"], DirectedEdge["dtw", "vector-space"], DirectedEdge["dual-tree", "base"], DirectedEdge["dual-tree", "monoid-extras"], DirectedEdge["dual-tree", "newtype"], DirectedEdge["dual-tree", "semigroups"], DirectedEdge["dump", "base"], DirectedEdge["dump", "haskell-src-meta"], DirectedEdge["dump", "template-haskell"], DirectedEdge["dump", "text"], DirectedEdge["duplo", "aeson"], DirectedEdge["duplo", "aeson-pretty"], DirectedEdge["duplo", "ansi-terminal"], DirectedEdge["duplo", "base"], DirectedEdge["duplo", "base64-bytestring"], DirectedEdge["duplo", "bytestring"], DirectedEdge["duplo", "containers"], DirectedEdge["duplo", "directory"], DirectedEdge["duplo", "duplo"], DirectedEdge["duplo", "executable-path"], DirectedEdge["duplo", "filepath"], DirectedEdge["duplo", "fsnotify"], DirectedEdge["duplo", "http-types"], DirectedEdge["duplo", "language-javascript"], DirectedEdge["duplo", "lens"], DirectedEdge["duplo", "MissingH"], DirectedEdge["duplo", "mtl"], DirectedEdge["duplo", "process"], DirectedEdge["duplo", "regex-compat"], DirectedEdge["duplo", "scotty"], DirectedEdge["duplo", "shake"], DirectedEdge["duplo", "system-fileio"], DirectedEdge["duplo", "system-filepath"], DirectedEdge["duplo", "text"], DirectedEdge["duplo", "text-format"], DirectedEdge["duplo", "transformers"], DirectedEdge["duplo", "unordered-containers"], DirectedEdge["duplo", "utf8-string"], DirectedEdge["duplo", "wai"], DirectedEdge["duplo", "warp"], DirectedEdge["dvda", "dynobud"], DirectedEdge["dvda", "base"], DirectedEdge["dvda", "containers"], DirectedEdge["dvda", "hashable"], DirectedEdge["dvda", "hashtables"], DirectedEdge["dvda", "mtl"], DirectedEdge["dvda", "unordered-containers"], DirectedEdge["dvda", "vector"], DirectedEdge["dvdread", "base"], DirectedEdge["dvdread", "bytestring"], DirectedEdge["dvdread", "mtl"], DirectedEdge["dvi-processing", "base"], DirectedEdge["dvi-processing", "bytestring"], DirectedEdge["dvi-processing", "filepath"], DirectedEdge["dvi-processing", "transformers"], DirectedEdge["dvorak", "base"], DirectedEdge["dvorak", "containers"], DirectedEdge["dwarf", "base"], DirectedEdge["dwarf", "binary"], DirectedEdge["dwarf", "bytestring"], DirectedEdge["dwarf", "containers"], DirectedEdge["dwarf-el", "base"], DirectedEdge["dwarf-el", "binary"], DirectedEdge["dwarf-el", "bytestring"], DirectedEdge["dwarf-el", "containers"], DirectedEdge["dwarf-el", "transformers"], DirectedEdge["dwarf-el", "utf8-string"], DirectedEdge["dwarfadt", "base"], DirectedEdge["dwarfadt", "bytestring"], DirectedEdge["dwarfadt", "bytestring-mmap"], DirectedEdge["dwarfadt", "containers"], DirectedEdge["dwarfadt", "dwarf-el"], DirectedEdge["dwarfadt", "dwarfadt"], DirectedEdge["dwarfadt", "elf"], DirectedEdge["dwarfadt", "lens"], DirectedEdge["dwarfadt", "pretty"], DirectedEdge["dwarfadt", "transformers"], DirectedEdge["dx9base", "base"], DirectedEdge["dx9d3d", "base"], DirectedEdge["dx9d3d", "dx9base"], DirectedEdge["dx9d3dx", "base"], DirectedEdge["dx9d3dx", "dx9base"], DirectedEdge["dx9d3dx", "dx9d3d"], DirectedEdge["dynamic-cabal", "base"], DirectedEdge["dynamic-cabal", "containers"], DirectedEdge["dynamic-cabal", "data-default"], DirectedEdge["dynamic-cabal", "directory"], DirectedEdge["dynamic-cabal", "filepath"], DirectedEdge["dynamic-cabal", "ghc"], DirectedEdge["dynamic-cabal", "ghc-paths"], DirectedEdge["dynamic-cabal", "haskell-generate"], DirectedEdge["dynamic-cabal", "haskell-src-exts"], DirectedEdge["dynamic-cabal", "time"], DirectedEdge["dynamic-cabal", "void"], DirectedEdge["dynamic-graph", "base"], DirectedEdge["dynamic-graph", "cairo"], DirectedEdge["dynamic-graph", "colour"], DirectedEdge["dynamic-graph", "either"], DirectedEdge["dynamic-graph", "GLFW-b"], DirectedEdge["dynamic-graph", "GLUtil"], DirectedEdge["dynamic-graph", "OpenGL"], DirectedEdge["dynamic-graph", "pango"], DirectedEdge["dynamic-graph", "pipes"], DirectedEdge["dynamic-graph", "transformers"], DirectedEdge["dynamic-linker-template", "base"], DirectedEdge["dynamic-linker-template", "containers"], DirectedEdge["dynamic-linker-template", "template-haskell"], DirectedEdge["dynamic-linker-template", "unix"], DirectedEdge["dynamic-loader", "base"], DirectedEdge["dynamic-loader", "directory"], DirectedEdge["dynamic-loader", "ghc-prim"], DirectedEdge["dynamic-loader", "hashable"], DirectedEdge["dynamic-loader", "hashtables"], DirectedEdge["dynamic-loader", "time"], DirectedEdge["dynamic-loader", "transformers"], DirectedEdge["dynamic-mvector", "base"], DirectedEdge["dynamic-mvector", "primitive"], DirectedEdge["dynamic-mvector", "vector"], DirectedEdge["dynamic-object", "base"], DirectedEdge["dynamic-object", "containers"], DirectedEdge["dynamic-object", "lens"], DirectedEdge["dynamic-object", "mtl"], DirectedEdge["dynamic-object", "QuickCheck"], DirectedEdge["dynamic-object", "text"], DirectedEdge["dynamic-object", "transformers"], DirectedEdge["dynamic-plot", "async"], DirectedEdge["dynamic-plot", "base"], DirectedEdge["dynamic-plot", "colour"], DirectedEdge["dynamic-plot", "constrained-categories"], DirectedEdge["dynamic-plot", "containers"], DirectedEdge["dynamic-plot", "data-default"], DirectedEdge["dynamic-plot", "deepseq"], DirectedEdge["dynamic-plot", "diagrams-cairo"], DirectedEdge["dynamic-plot", "diagrams-core"], DirectedEdge["dynamic-plot", "diagrams-gtk"], DirectedEdge["dynamic-plot", "diagrams-lib"], DirectedEdge["dynamic-plot", "glib"], DirectedEdge["dynamic-plot", "gtk"], DirectedEdge["dynamic-plot", "lens"], DirectedEdge["dynamic-plot", "manifolds"], DirectedEdge["dynamic-plot", "MemoTrie"], DirectedEdge["dynamic-plot", "MonadRandom"], DirectedEdge["dynamic-plot", "mtl"], DirectedEdge["dynamic-plot", "process"], DirectedEdge["dynamic-plot", "random"], DirectedEdge["dynamic-plot", "semigroups"], DirectedEdge["dynamic-plot", "tagged"], DirectedEdge["dynamic-plot", "time"], DirectedEdge["dynamic-plot", "transformers"], DirectedEdge["dynamic-plot", "vector"], DirectedEdge["dynamic-plot", "vector-space"], DirectedEdge["dynamic-pp", "ansi-terminal"], DirectedEdge["dynamic-pp", "base"], DirectedEdge["dynamic-pp", "blaze-builder"], DirectedEdge["dynamic-pp", "bytestring"], DirectedEdge["dynamic-pp", "Cabal"], DirectedEdge["dynamic-pp", "hashable"], DirectedEdge["dynamic-pp", "unordered-containers"], DirectedEdge["dynamic-pp", "utf8-string"], DirectedEdge["dynamic-state", "base"], DirectedEdge["dynamic-state", "binary"], DirectedEdge["dynamic-state", "bytestring"], DirectedEdge["dynamic-state", "hashable"], DirectedEdge["dynamic-state", "unordered-containers"], DirectedEdge["dynobud", "aeson"], DirectedEdge["dynobud", "base"], DirectedEdge["dynobud", "binary"], DirectedEdge["dynobud", "bytestring"], DirectedEdge["dynobud", "casadi-bindings"], DirectedEdge["dynobud", "casadi-bindings-core"], DirectedEdge["dynobud", "cereal"], DirectedEdge["dynobud", "Chart"], DirectedEdge["dynobud", "Chart-gtk"], DirectedEdge["dynobud", "cmdargs"], DirectedEdge["dynobud", "colour"], DirectedEdge["dynobud", "containers"], DirectedEdge["dynobud", "data-default-class"], DirectedEdge["dynobud", "directory"], DirectedEdge["dynobud", "distributive"], DirectedEdge["dynobud", "dynobud"], DirectedEdge["dynobud", "generic-accessors"], DirectedEdge["dynobud", "hmatrix"], DirectedEdge["dynobud", "hmatrix-gsl"], DirectedEdge["dynobud", "jacobi-roots"], DirectedEdge["dynobud", "lens"], DirectedEdge["dynobud", "linear"], DirectedEdge["dynobud", "mtl"], DirectedEdge["dynobud", "mwc-random"], DirectedEdge["dynobud", "not-gloss"], DirectedEdge["dynobud", "Plot-ho-matic"], DirectedEdge["dynobud", "process"], DirectedEdge["dynobud", "reflection"], DirectedEdge["dynobud", "semigroups"], DirectedEdge["dynobud", "spatial-math"], DirectedEdge["dynobud", "stm"], DirectedEdge["dynobud", "time"], DirectedEdge["dynobud", "unordered-containers"], DirectedEdge["dynobud", "vector"], DirectedEdge["dynobud", "vector-binary-instances"], DirectedEdge["dynobud", "zeromq4-haskell"], DirectedEdge["dyre", "base"], DirectedEdge["dyre", "binary"], DirectedEdge["dyre", "directory"], DirectedEdge["dyre", "executable-path"], DirectedEdge["dyre", "filepath"], DirectedEdge["dyre", "ghc-paths"], DirectedEdge["dyre", "io-storage"], DirectedEdge["dyre", "process"], DirectedEdge["dyre", "time"], DirectedEdge["dyre", "unix"], DirectedEdge["dyre", "xdg-basedir"], DirectedEdge["dywapitchtrack", "base"], DirectedEdge["dywapitchtrack", "bytestring"], DirectedEdge["dywapitchtrack", "transformers"], DirectedEdge["dzen-utils", "base"], DirectedEdge["dzen-utils", "colour"], DirectedEdge["dzen-utils", "process"], DirectedEdge["eager-sockets", "base"], DirectedEdge["eager-sockets", "bytestring"], DirectedEdge["eager-sockets", "network"], DirectedEdge["easy-api", "aeson"], DirectedEdge["easy-api", "base"], DirectedEdge["easy-api", "bytestring"], DirectedEdge["easy-api", "either"], DirectedEdge["easy-api", "http-conduit"], DirectedEdge["easy-api", "mtl"], DirectedEdge["easy-api", "resourcet"], DirectedEdge["easy-api", "text"], DirectedEdge["easy-bitcoin", "aeson"], DirectedEdge["easy-bitcoin", "base"], DirectedEdge["easy-bitcoin", "base16-bytestring"], DirectedEdge["easy-bitcoin", "binary"], DirectedEdge["easy-bitcoin", "byteable"], DirectedEdge["easy-bitcoin", "bytestring"], DirectedEdge["easy-bitcoin", "cryptohash"], DirectedEdge["easy-bitcoin", "deepseq"], DirectedEdge["easy-bitcoin", "lens"], DirectedEdge["easy-bitcoin", "postgresql-simple"], DirectedEdge["easy-bitcoin", "safe"], DirectedEdge["easy-bitcoin", "text"], DirectedEdge["easy-file", "base"], DirectedEdge["easy-file", "directory"], DirectedEdge["easy-file", "filepath"], DirectedEdge["easy-file", "time"], DirectedEdge["easy-file", "unix"], DirectedEdge["easyjson", "base"], DirectedEdge["easyjson", "mtl"], DirectedEdge["easyjson", "parsec"], DirectedEdge["easyjson", "text"], DirectedEdge["easyjson", "unordered-containers"], DirectedEdge["easyjson", "vector"], DirectedEdge["easyplot", "base"], DirectedEdge["easyplot", "process"], DirectedEdge["easyrender", "base"], DirectedEdge["easyrender", "bytestring"], DirectedEdge["easyrender", "containers"], DirectedEdge["easyrender", "mtl"], DirectedEdge["easyrender", "superdoc"], DirectedEdge["easyrender", "zlib"], DirectedEdge["ebeats", "base"], DirectedEdge["ebeats", "time"], DirectedEdge["ebnf-bff", "aeson"], DirectedEdge["ebnf-bff", "base"], DirectedEdge["ebnf-bff", "bytestring"], DirectedEdge["ebnf-bff", "cond"], DirectedEdge["ebnf-bff", "directory"], DirectedEdge["ebnf-bff", "ebnf-bff"], DirectedEdge["ebnf-bff", "parsec"], DirectedEdge["ebnf-bff", "text"], DirectedEdge["ec2-signature", "base"], DirectedEdge["ec2-signature", "base64-bytestring"], DirectedEdge["ec2-signature", "bytestring"], DirectedEdge["ec2-signature", "http-types"], DirectedEdge["ec2-signature", "SHA"], DirectedEdge["ecdsa", "base"], DirectedEdge["ecdsa", "bytestring"], DirectedEdge["ecdsa", "crypto-api"], DirectedEdge["ecdsa", "crypto-pubkey-types"], DirectedEdge["ecdsa", "hecc"], DirectedEdge["ecma262", "base"], DirectedEdge["ecma262", "containers"], DirectedEdge["ecma262", "data-default"], DirectedEdge["ecma262", "lens"], DirectedEdge["ecma262", "parsec"], DirectedEdge["ecma262", "safe"], DirectedEdge["ecma262", "transformers"], DirectedEdge["ecu", "base"], DirectedEdge["ecu", "bytestring"], DirectedEdge["ecu", "digest"], DirectedEdge["ecu", "directory"], DirectedEdge["ecu", "process"], DirectedEdge["ecu", "vcd"], DirectedEdge["ed25519", "base"], DirectedEdge["ed25519", "bytestring"], DirectedEdge["ed25519", "ghc-prim"], DirectedEdge["ed25519-donna", "base"], DirectedEdge["ed25519-donna", "bytestring"], DirectedEdge["ed25519-donna", "crypto-api"], DirectedEdge["eddie", "base"], DirectedEdge["eddie", "bifunctors"], DirectedEdge["eddie", "classy-prelude"], DirectedEdge["eddie", "hint"], DirectedEdge["eddie", "optparse-applicative"], DirectedEdge["eddie", "safe"], DirectedEdge["ede", "aeson"], DirectedEdge["ede", "ansi-wl-pprint"], DirectedEdge["ede", "base"], DirectedEdge["ede", "bifunctors"], DirectedEdge["ede", "bytestring"], DirectedEdge["ede", "comonad"], DirectedEdge["ede", "directory"], DirectedEdge["ede", "filepath"], DirectedEdge["ede", "free"], DirectedEdge["ede", "lens"], DirectedEdge["ede", "mtl"], DirectedEdge["ede", "parsers"], DirectedEdge["ede", "scientific"], DirectedEdge["ede", "semigroups"], DirectedEdge["ede", "text"], DirectedEdge["ede", "text-format"], DirectedEdge["ede", "text-manipulate"], DirectedEdge["ede", "trifecta"], DirectedEdge["ede", "unordered-containers"], DirectedEdge["ede", "vector"], DirectedEdge["edenmodules", "base"], DirectedEdge["edenmodules", "containers"], DirectedEdge["edenmodules", "deepseq"], DirectedEdge["edenmodules", "parallel"], DirectedEdge["edenskel", "base"], DirectedEdge["edenskel", "edenmodules"], DirectedEdge["edenskel", "parallel"], DirectedEdge["edentv", "array"], DirectedEdge["edentv", "base"], DirectedEdge["edentv", "binary"], DirectedEdge["edentv", "bytestring"], DirectedEdge["edentv", "cairo"], DirectedEdge["edentv", "containers"], DirectedEdge["edentv", "directory"], DirectedEdge["edentv", "filepath"], DirectedEdge["edentv", "ghc-events-parallel"], DirectedEdge["edentv", "gtk"], DirectedEdge["edentv", "mtl"], DirectedEdge["edentv", "text"], DirectedEdge["edentv", "zip-archive"], DirectedEdge["edge", "ALUT"], DirectedEdge["edge", "base"], DirectedEdge["edge", "cmdtheline"], DirectedEdge["edge", "containers"], DirectedEdge["edge", "gloss"], DirectedEdge["edge", "random"], DirectedEdge["edge", "wraparound"], DirectedEdge["edis", "base"], DirectedEdge["edis", "bytestring"], DirectedEdge["edis", "cereal"], DirectedEdge["edis", "hedis"], DirectedEdge["edit-distance", "array"], DirectedEdge["edit-distance", "base"], DirectedEdge["edit-distance", "containers"], DirectedEdge["edit-distance", "random"], DirectedEdge["edit-distance-vector", "base"], DirectedEdge["edit-distance-vector", "vector"], DirectedEdge["edit-lenses", "base"], DirectedEdge["edit-lenses", "containers"], DirectedEdge["edit-lenses", "data-default"], DirectedEdge["edit-lenses", "lattices"], DirectedEdge["edit-lenses", "mtl"], DirectedEdge["edit-lenses-demo", "base"], DirectedEdge["edit-lenses-demo", "containers"], DirectedEdge["edit-lenses-demo", "data-default"], DirectedEdge["edit-lenses-demo", "Diff"], DirectedEdge["edit-lenses-demo", "edit-lenses"], DirectedEdge["edit-lenses-demo", "gtk"], DirectedEdge["edit-lenses-demo", "regex-pcre"], DirectedEdge["editable", "base"], DirectedEdge["editable", "text"], DirectedEdge["editable", "vty"], DirectedEdge["editable", "vty-ui"], DirectedEdge["editline", "base"], DirectedEdge["editor-open", "base"], DirectedEdge["editor-open", "bytestring"], DirectedEdge["editor-open", "conduit"], DirectedEdge["editor-open", "conduit-extra"], DirectedEdge["editor-open", "directory"], DirectedEdge["editor-open", "editor-open"], DirectedEdge["editor-open", "process"], DirectedEdge["editor-open", "resourcet"], DirectedEdge["editor-open", "temporary"], DirectedEdge["editor-open", "transformers"], DirectedEdge["editor-open", "unix"], DirectedEdge["editpipe", "base"], DirectedEdge["editpipe", "optparse-applicative"], DirectedEdge["editpipe", "process"], DirectedEdge["editpipe", "temporary"], DirectedEdge["editpipe", "unix"], DirectedEdge["effect-handlers", "base"], DirectedEdge["effect-handlers", "free"], DirectedEdge["effect-handlers", "kan-extensions"], DirectedEdge["effect-handlers", "mtl"], DirectedEdge["effect-monad", "base"], DirectedEdge["effect-monad", "ghc-prim"], DirectedEdge["effect-monad", "type-level-sets"], DirectedEdge["effective-aspects", "base"], DirectedEdge["effective-aspects", "ghc-prim"], DirectedEdge["effective-aspects", "hashtables"], DirectedEdge["effective-aspects", "HUnit"], DirectedEdge["effective-aspects", "mtl"], DirectedEdge["effective-aspects", "QuickCheck"], DirectedEdge["effective-aspects-mzv", "base"], DirectedEdge["effective-aspects-mzv", "ghc-prim"], DirectedEdge["effective-aspects-mzv", "hashtables"], DirectedEdge["effective-aspects-mzv", "HUnit"], DirectedEdge["effective-aspects-mzv", "mzv"], DirectedEdge["effective-aspects-mzv", "QuickCheck"], DirectedEdge["effects", "base"], DirectedEdge["effects", "containers"], DirectedEdge["effects", "newtype"], DirectedEdge["effects", "void"], DirectedEdge["effects-parser", "base"], DirectedEdge["effects-parser", "effects"], DirectedEdge["effin", "base"], DirectedEdge["effin", "mtl"], DirectedEdge["egison", "array"], DirectedEdge["egison", "base"], DirectedEdge["egison", "containers"], DirectedEdge["egison", "directory"], DirectedEdge["egison", "egison"], DirectedEdge["egison", "filepath"], DirectedEdge["egison", "ghc"], DirectedEdge["egison", "ghc-paths"], DirectedEdge["egison", "haskeline"], DirectedEdge["egison", "mtl"], DirectedEdge["egison", "parsec"], DirectedEdge["egison", "process"], DirectedEdge["egison", "random"], DirectedEdge["egison", "regex-tdfa"], DirectedEdge["egison", "text"], DirectedEdge["egison", "transformers"], DirectedEdge["egison", "unordered-containers"], DirectedEdge["egison-quote", "base"], DirectedEdge["egison-quote", "egison"], DirectedEdge["egison-quote", "mtl"], DirectedEdge["egison-quote", "parsec"], DirectedEdge["egison-quote", "template-haskell"], DirectedEdge["egison-tutorial", "array"], DirectedEdge["egison-tutorial", "base"], DirectedEdge["egison-tutorial", "bytestring"], DirectedEdge["egison-tutorial", "containers"], DirectedEdge["egison-tutorial", "directory"], DirectedEdge["egison-tutorial", "egison"], DirectedEdge["egison-tutorial", "filepath"], DirectedEdge["egison-tutorial", "ghc"], DirectedEdge["egison-tutorial", "ghc-paths"], DirectedEdge["egison-tutorial", "haskeline"], DirectedEdge["egison-tutorial", "mtl"], DirectedEdge["egison-tutorial", "parsec"], DirectedEdge["egison-tutorial", "regex-posix"], DirectedEdge["egison-tutorial", "transformers"], DirectedEdge["egison-tutorial", "unordered-containers"], DirectedEdge["ehaskell", "base"], DirectedEdge["ehaskell", "directory"], DirectedEdge["ehaskell", "filepath"], DirectedEdge["ehaskell", "mtlparse"], DirectedEdge["ehaskell", "process"], DirectedEdge["ehaskell", "regexpr"], DirectedEdge["ehaskell", "utf8-string"], DirectedEdge["ehaskell", "yjtools"], DirectedEdge["ehs", "base"], DirectedEdge["ehs", "bytestring"], DirectedEdge["ehs", "ehs"], DirectedEdge["ehs", "haskell-src-meta"], DirectedEdge["ehs", "parsec"], DirectedEdge["ehs", "template-haskell"], DirectedEdge["ehs", "text"], DirectedEdge["ehs", "time"], DirectedEdge["ehs", "transformers"], DirectedEdge["eibd-client-simple", "base"], DirectedEdge["eibd-client-simple", "bytestring"], DirectedEdge["eibd-client-simple", "containers"], DirectedEdge["eibd-client-simple", "mtl"], DirectedEdge["eibd-client-simple", "transformers"], DirectedEdge["eigen", "base"], DirectedEdge["eigen", "binary"], DirectedEdge["eigen", "bytestring"], DirectedEdge["eigen", "primitive"], DirectedEdge["eigen", "transformers"], DirectedEdge["eigen", "vector"], DirectedEdge["either", "base"], DirectedEdge["either", "bifunctors"], DirectedEdge["either", "exceptions"], DirectedEdge["either", "free"], DirectedEdge["either", "mmorph"], DirectedEdge["either", "monad-control"], DirectedEdge["either", "MonadRandom"], DirectedEdge["either", "mtl"], DirectedEdge["either", "profunctors"], DirectedEdge["either", "semigroupoids"], DirectedEdge["either", "semigroups"], DirectedEdge["either", "transformers"], DirectedEdge["either", "transformers-base"], DirectedEdge["either-unwrap", "either"], DirectedEdge["either-unwrap", "base"], DirectedEdge["eithers", "either"], DirectedEdge["ekg", "aeson"], DirectedEdge["ekg", "base"], DirectedEdge["ekg", "bytestring"], DirectedEdge["ekg", "ekg-core"], DirectedEdge["ekg", "ekg-json"], DirectedEdge["ekg", "filepath"], DirectedEdge["ekg", "network"], DirectedEdge["ekg", "snap-core"], DirectedEdge["ekg", "snap-server"], DirectedEdge["ekg", "text"], DirectedEdge["ekg", "time"], DirectedEdge["ekg", "transformers"], DirectedEdge["ekg", "unordered-containers"], DirectedEdge["ekg-bosun", "aeson"], DirectedEdge["ekg-bosun", "base"], DirectedEdge["ekg-bosun", "ekg-core"], DirectedEdge["ekg-bosun", "http-client"], DirectedEdge["ekg-bosun", "lens"], DirectedEdge["ekg-bosun", "network"], DirectedEdge["ekg-bosun", "network-uri"], DirectedEdge["ekg-bosun", "old-locale"], DirectedEdge["ekg-bosun", "text"], DirectedEdge["ekg-bosun", "time"], DirectedEdge["ekg-bosun", "unordered-containers"], DirectedEdge["ekg-bosun", "vector"], DirectedEdge["ekg-bosun", "wreq"], DirectedEdge["ekg-carbon", "base"], DirectedEdge["ekg-carbon", "ekg-core"], DirectedEdge["ekg-carbon", "network"], DirectedEdge["ekg-carbon", "network-carbon"], DirectedEdge["ekg-carbon", "text"], DirectedEdge["ekg-carbon", "time"], DirectedEdge["ekg-carbon", "unordered-containers"], DirectedEdge["ekg-carbon", "vector"], DirectedEdge["ekg-core", "base"], DirectedEdge["ekg-core", "containers"], DirectedEdge["ekg-core", "ghc-prim"], DirectedEdge["ekg-core", "text"], DirectedEdge["ekg-core", "unordered-containers"], DirectedEdge["ekg-json", "aeson"], DirectedEdge["ekg-json", "base"], DirectedEdge["ekg-json", "ekg-core"], DirectedEdge["ekg-json", "text"], DirectedEdge["ekg-json", "unordered-containers"], DirectedEdge["ekg-log", "aeson"], DirectedEdge["ekg-log", "base"], DirectedEdge["ekg-log", "bytestring"], DirectedEdge["ekg-log", "directory"], DirectedEdge["ekg-log", "ekg-core"], DirectedEdge["ekg-log", "fast-logger"], DirectedEdge["ekg-log", "filepath"], DirectedEdge["ekg-log", "text"], DirectedEdge["ekg-log", "time"], DirectedEdge["ekg-log", "unix"], DirectedEdge["ekg-log", "unordered-containers"], DirectedEdge["ekg-push", "base"], DirectedEdge["ekg-push", "bytestring"], DirectedEdge["ekg-push", "ekg-core"], DirectedEdge["ekg-push", "ekg-push"], DirectedEdge["ekg-push", "text"], DirectedEdge["ekg-push", "time"], DirectedEdge["ekg-push", "unordered-containers"], DirectedEdge["ekg-rrd", "base"], DirectedEdge["ekg-rrd", "directory"], DirectedEdge["ekg-rrd", "ekg-core"], DirectedEdge["ekg-rrd", "mtl"], DirectedEdge["ekg-rrd", "process"], DirectedEdge["ekg-rrd", "text"], DirectedEdge["ekg-rrd", "time"], DirectedEdge["ekg-rrd", "unordered-containers"], DirectedEdge["ekg-statsd", "base"], DirectedEdge["ekg-statsd", "bytestring"], DirectedEdge["ekg-statsd", "ekg-core"], DirectedEdge["ekg-statsd", "network"], DirectedEdge["ekg-statsd", "text"], DirectedEdge["ekg-statsd", "time"], DirectedEdge["ekg-statsd", "unordered-containers"], DirectedEdge["electrum-mnemonic", "base"], DirectedEdge["elerea", "base"], DirectedEdge["elerea", "containers"], DirectedEdge["elerea", "transformers"], DirectedEdge["elerea", "transformers-base"], DirectedEdge["elerea-examples", "base"], DirectedEdge["elerea-examples", "elerea"], DirectedEdge["elerea-examples", "GLFW"], DirectedEdge["elerea-examples", "OpenGL"], DirectedEdge["elerea-sdl", "base"], DirectedEdge["elerea-sdl", "elerea"], DirectedEdge["elerea-sdl", "SDL"], DirectedEdge["elevator", "base"], DirectedEdge["elevator", "extensible"], DirectedEdge["elevator", "transformers"], DirectedEdge["elf", "base"], DirectedEdge["elf", "binary"], DirectedEdge["elf", "bytestring"], DirectedEdge["elision", "base"], DirectedEdge["elision", "elision"], DirectedEdge["elision", "profunctors"], DirectedEdge["elm-bridge", "aeson"], DirectedEdge["elm-bridge", "base"], DirectedEdge["elm-bridge", "template-haskell"], DirectedEdge["elm-build-lib", "base"], DirectedEdge["elm-build-lib", "bytestring"], DirectedEdge["elm-build-lib", "containers"], DirectedEdge["elm-build-lib", "elm-compiler"], DirectedEdge["elm-build-lib", "elm-core-sources"], DirectedEdge["elm-build-lib", "file-embed"], DirectedEdge["elm-build-lib", "template-haskell"], DirectedEdge["elm-compiler", "aeson"], DirectedEdge["elm-compiler", "aeson-pretty"], DirectedEdge["elm-compiler", "base"], DirectedEdge["elm-compiler", "binary"], DirectedEdge["elm-compiler", "blaze-html"], DirectedEdge["elm-compiler", "blaze-markup"], DirectedEdge["elm-compiler", "bytestring"], DirectedEdge["elm-compiler", "cmdargs"], DirectedEdge["elm-compiler", "containers"], DirectedEdge["elm-compiler", "directory"], DirectedEdge["elm-compiler", "edit-distance"], DirectedEdge["elm-compiler", "filepath"], DirectedEdge["elm-compiler", "indents"], DirectedEdge["elm-compiler", "language-ecmascript"], DirectedEdge["elm-compiler", "language-glsl"], DirectedEdge["elm-compiler", "mtl"], DirectedEdge["elm-compiler", "parsec"], DirectedEdge["elm-compiler", "pretty"], DirectedEdge["elm-compiler", "process"], DirectedEdge["elm-compiler", "text"], DirectedEdge["elm-compiler", "transformers"], DirectedEdge["elm-compiler", "union-find"], DirectedEdge["elm-compiler", "unordered-containers"], DirectedEdge["elm-core-sources", "base"], DirectedEdge["elm-core-sources", "bytestring"], DirectedEdge["elm-core-sources", "containers"], DirectedEdge["elm-core-sources", "file-embed"], DirectedEdge["elm-core-sources", "template-haskell"], DirectedEdge["elm-export", "base"], DirectedEdge["elm-export", "bytestring"], DirectedEdge["elm-export", "containers"], DirectedEdge["elm-export", "directory"], DirectedEdge["elm-export", "mtl"], DirectedEdge["elm-export", "text"], DirectedEdge["elm-export", "time"], DirectedEdge["elm-get", "elm-package"], DirectedEdge["elm-get", "aeson"], DirectedEdge["elm-get", "aeson-pretty"], DirectedEdge["elm-get", "ansi-wl-pprint"], DirectedEdge["elm-get", "base"], DirectedEdge["elm-get", "binary"], DirectedEdge["elm-get", "bytestring"], DirectedEdge["elm-get", "containers"], DirectedEdge["elm-get", "directory"], DirectedEdge["elm-get", "Elm"], DirectedEdge["elm-get", "filepath"], DirectedEdge["elm-get", "HTTP"], DirectedEdge["elm-get", "http-client"], DirectedEdge["elm-get", "http-client-tls"], DirectedEdge["elm-get", "http-types"], DirectedEdge["elm-get", "mtl"], DirectedEdge["elm-get", "network"], DirectedEdge["elm-get", "optparse-applicative"], DirectedEdge["elm-get", "process"], DirectedEdge["elm-get", "vector"], DirectedEdge["elm-init", "aeson"], DirectedEdge["elm-init", "aeson-pretty"], DirectedEdge["elm-init", "base"], DirectedEdge["elm-init", "base-unicode-symbols"], DirectedEdge["elm-init", "bytestring"], DirectedEdge["elm-init", "containers"], DirectedEdge["elm-init", "directory"], DirectedEdge["elm-init", "file-embed"], DirectedEdge["elm-init", "filepath"], DirectedEdge["elm-init", "process"], DirectedEdge["elm-init", "text"], DirectedEdge["elm-init", "time"], DirectedEdge["elm-make", "ansi-wl-pprint"], DirectedEdge["elm-make", "base"], DirectedEdge["elm-make", "binary"], DirectedEdge["elm-make", "blaze-html"], DirectedEdge["elm-make", "blaze-markup"], DirectedEdge["elm-make", "bytestring"], DirectedEdge["elm-make", "containers"], DirectedEdge["elm-make", "directory"], DirectedEdge["elm-make", "elm-compiler"], DirectedEdge["elm-make", "elm-package"], DirectedEdge["elm-make", "filepath"], DirectedEdge["elm-make", "mtl"], DirectedEdge["elm-make", "optparse-applicative"], DirectedEdge["elm-make", "text"], DirectedEdge["elm-package", "aeson"], DirectedEdge["elm-package", "aeson-pretty"], DirectedEdge["elm-package", "ansi-wl-pprint"], DirectedEdge["elm-package", "base"], DirectedEdge["elm-package", "binary"], DirectedEdge["elm-package", "bytestring"], DirectedEdge["elm-package", "containers"], DirectedEdge["elm-package", "directory"], DirectedEdge["elm-package", "elm-compiler"], DirectedEdge["elm-package", "filepath"], DirectedEdge["elm-package", "HTTP"], DirectedEdge["elm-package", "http-client"], DirectedEdge["elm-package", "http-client-tls"], DirectedEdge["elm-package", "http-types"], DirectedEdge["elm-package", "mtl"], DirectedEdge["elm-package", "network"], DirectedEdge["elm-package", "optparse-applicative"], DirectedEdge["elm-package", "pretty"], DirectedEdge["elm-package", "process"], DirectedEdge["elm-package", "text"], DirectedEdge["elm-package", "time"], DirectedEdge["elm-package", "unordered-containers"], DirectedEdge["elm-package", "vector"], DirectedEdge["elm-package", "zip-archive"], DirectedEdge["elm-reactor", "base"], DirectedEdge["elm-reactor", "blaze-html"], DirectedEdge["elm-reactor", "blaze-markup"], DirectedEdge["elm-reactor", "bytestring"], DirectedEdge["elm-reactor", "cmdargs"], DirectedEdge["elm-reactor", "containers"], DirectedEdge["elm-reactor", "directory"], DirectedEdge["elm-reactor", "elm-compiler"], DirectedEdge["elm-reactor", "filepath"], DirectedEdge["elm-reactor", "fsnotify"], DirectedEdge["elm-reactor", "HTTP"], DirectedEdge["elm-reactor", "mtl"], DirectedEdge["elm-reactor", "process"], DirectedEdge["elm-reactor", "snap-core"], DirectedEdge["elm-reactor", "snap-server"], DirectedEdge["elm-reactor", "system-filepath"], DirectedEdge["elm-reactor", "text"], DirectedEdge["elm-reactor", "time"], DirectedEdge["elm-reactor", "transformers"], DirectedEdge["elm-reactor", "unordered-containers"], DirectedEdge["elm-reactor", "websockets"], DirectedEdge["elm-reactor", "websockets-snap"], DirectedEdge["elm-repl", "base"], DirectedEdge["elm-repl", "binary"], DirectedEdge["elm-repl", "bytestring"], DirectedEdge["elm-repl", "bytestring-trie"], DirectedEdge["elm-repl", "cmdargs"], DirectedEdge["elm-repl", "containers"], DirectedEdge["elm-repl", "directory"], DirectedEdge["elm-repl", "elm-compiler"], DirectedEdge["elm-repl", "elm-package"], DirectedEdge["elm-repl", "filepath"], DirectedEdge["elm-repl", "haskeline"], DirectedEdge["elm-repl", "mtl"], DirectedEdge["elm-repl", "parsec"], DirectedEdge["elm-repl", "process"], DirectedEdge["elm-server", "elm-reactor"], DirectedEdge["elm-server", "base"], DirectedEdge["elm-server", "bytestring"], DirectedEdge["elm-server", "cmdargs"], DirectedEdge["elm-server", "containers"], DirectedEdge["elm-server", "directory"], DirectedEdge["elm-server", "Elm"], DirectedEdge["elm-server", "filepath"], DirectedEdge["elm-server", "mtl"], DirectedEdge["elm-server", "process"], DirectedEdge["elm-server", "snap-core"], DirectedEdge["elm-server", "snap-server"], DirectedEdge["elm-server", "unordered-containers"], DirectedEdge["elm-yesod", "base"], DirectedEdge["elm-yesod", "blaze-markup"], DirectedEdge["elm-yesod", "Elm"], DirectedEdge["elm-yesod", "shakespeare-js"], DirectedEdge["elm-yesod", "text"], DirectedEdge["elm-yesod", "yesod-core"], DirectedEdge["elo", "base"], DirectedEdge["elocrypt", "base"], DirectedEdge["elocrypt", "elocrypt"], DirectedEdge["elocrypt", "MonadRandom"], DirectedEdge["elocrypt", "random"], DirectedEdge["emacs-keys", "base"], DirectedEdge["emacs-keys", "split"], DirectedEdge["emacs-keys", "template-haskell"], DirectedEdge["emacs-keys", "th-lift"], DirectedEdge["emacs-keys", "xkbcommon"], DirectedEdge["email", "array"], DirectedEdge["email", "base"], DirectedEdge["email", "bytestring"], DirectedEdge["email", "encoding"], DirectedEdge["email", "HaskellNet"], DirectedEdge["email", "hsemail"], DirectedEdge["email", "old-locale"], DirectedEdge["email", "old-time"], DirectedEdge["email", "parsec"], DirectedEdge["email", "process"], DirectedEdge["email", "time"], DirectedEdge["email-header", "attoparsec"], DirectedEdge["email-header", "base"], DirectedEdge["email-header", "base64-bytestring"], DirectedEdge["email-header", "bytestring"], DirectedEdge["email-header", "case-insensitive"], DirectedEdge["email-header", "containers"], DirectedEdge["email-header", "text"], DirectedEdge["email-header", "text-icu"], DirectedEdge["email-header", "time"], DirectedEdge["email-postmark", "postmark"], DirectedEdge["email-postmark", "aeson"], DirectedEdge["email-postmark", "attoparsec"], DirectedEdge["email-postmark", "base"], DirectedEdge["email-postmark", "bytestring"], DirectedEdge["email-postmark", "containers"], DirectedEdge["email-postmark", "HTTP"], DirectedEdge["email-postmark", "network"], DirectedEdge["email-validate", "attoparsec"], DirectedEdge["email-validate", "base"], DirectedEdge["email-validate", "bytestring"], DirectedEdge["email-validate", "ghc-prim"], DirectedEdge["email-validate-json", "aeson"], DirectedEdge["email-validate-json", "base"], DirectedEdge["email-validate-json", "email-validate"], DirectedEdge["email-validate-json", "text"], DirectedEdge["email-validator", "base"], DirectedEdge["email-validator", "bytestring"], DirectedEdge["email-validator", "cmdargs"], DirectedEdge["email-validator", "directory"], DirectedEdge["email-validator", "dns"], DirectedEdge["email-validator", "email-validate"], DirectedEdge["email-validator", "HUnit"], DirectedEdge["email-validator", "parallel-io"], DirectedEdge["email-validator", "pcre-light"], DirectedEdge["email-validator", "tasty"], DirectedEdge["email-validator", "tasty-hunit"], DirectedEdge["embeddock", "base"], DirectedEdge["embeddock", "filepath"], DirectedEdge["embeddock", "her-lexer"], DirectedEdge["embeddock", "MissingH"], DirectedEdge["embeddock", "process"], DirectedEdge["embeddock-example", "base"], DirectedEdge["embeddock-example", "embeddock"], DirectedEdge["embeddock-example", "time"], DirectedEdge["embroidery", "base"], DirectedEdge["embroidery", "bytestring"], DirectedEdge["embroidery", "dlist"], DirectedEdge["embroidery", "gloss"], DirectedEdge["embroidery", "HCodecs"], DirectedEdge["embroidery", "mtl"], DirectedEdge["emgm", "base"], DirectedEdge["enclosed-exceptions", "async"], DirectedEdge["enclosed-exceptions", "base"], DirectedEdge["enclosed-exceptions", "deepseq"], DirectedEdge["enclosed-exceptions", "lifted-base"], DirectedEdge["enclosed-exceptions", "monad-control"], DirectedEdge["enclosed-exceptions", "transformers"], DirectedEdge["enclosed-exceptions", "transformers-base"], DirectedEdge["encoding", "array"], DirectedEdge["encoding", "base"], DirectedEdge["encoding", "binary"], DirectedEdge["encoding", "bytestring"], DirectedEdge["encoding", "containers"], DirectedEdge["encoding", "extensible-exceptions"], DirectedEdge["encoding", "ghc-prim"], DirectedEdge["encoding", "HaXml"], DirectedEdge["encoding", "mtl"], DirectedEdge["encoding", "regex-compat"], DirectedEdge["endo", "base"], DirectedEdge["endo", "between"], DirectedEdge["endo", "data-default-class"], DirectedEdge["endo", "mtl"], DirectedEdge["endo", "transformers"], DirectedEdge["engine-io", "aeson"], DirectedEdge["engine-io", "async"], DirectedEdge["engine-io", "attoparsec"], DirectedEdge["engine-io", "base"], DirectedEdge["engine-io", "base64-bytestring"], DirectedEdge["engine-io", "bytestring"], DirectedEdge["engine-io", "either"], DirectedEdge["engine-io", "free"], DirectedEdge["engine-io", "monad-loops"], DirectedEdge["engine-io", "mwc-random"], DirectedEdge["engine-io", "stm"], DirectedEdge["engine-io", "stm-delay"], DirectedEdge["engine-io", "text"], DirectedEdge["engine-io", "transformers"], DirectedEdge["engine-io", "unordered-containers"], DirectedEdge["engine-io", "vector"], DirectedEdge["engine-io", "websockets"], DirectedEdge["engine-io-growler", "base"], DirectedEdge["engine-io-growler", "bytestring"], DirectedEdge["engine-io-growler", "engine-io"], DirectedEdge["engine-io-growler", "growler"], DirectedEdge["engine-io-growler", "http-types"], DirectedEdge["engine-io-growler", "mtl"], DirectedEdge["engine-io-growler", "pipes"], DirectedEdge["engine-io-growler", "pipes-attoparsec"], DirectedEdge["engine-io-growler", "pipes-wai"], DirectedEdge["engine-io-growler", "socket-io"], DirectedEdge["engine-io-growler", "text"], DirectedEdge["engine-io-growler", "transformers"], DirectedEdge["engine-io-growler", "unordered-containers"], DirectedEdge["engine-io-growler", "wai"], DirectedEdge["engine-io-growler", "wai-websockets"], DirectedEdge["engine-io-growler", "websockets"], DirectedEdge["engine-io-snap", "attoparsec-enumerator"], DirectedEdge["engine-io-snap", "base"], DirectedEdge["engine-io-snap", "bytestring"], DirectedEdge["engine-io-snap", "containers"], DirectedEdge["engine-io-snap", "engine-io"], DirectedEdge["engine-io-snap", "MonadCatchIO-transformers"], DirectedEdge["engine-io-snap", "snap-core"], DirectedEdge["engine-io-snap", "unordered-containers"], DirectedEdge["engine-io-snap", "websockets"], DirectedEdge["engine-io-snap", "websockets-snap"], DirectedEdge["engine-io-wai", "attoparsec"], DirectedEdge["engine-io-wai", "base"], DirectedEdge["engine-io-wai", "bytestring"], DirectedEdge["engine-io-wai", "either"], DirectedEdge["engine-io-wai", "engine-io"], DirectedEdge["engine-io-wai", "http-types"], DirectedEdge["engine-io-wai", "mtl"], DirectedEdge["engine-io-wai", "text"], DirectedEdge["engine-io-wai", "transformers"], DirectedEdge["engine-io-wai", "transformers-compat"], DirectedEdge["engine-io-wai", "unordered-containers"], DirectedEdge["engine-io-wai", "wai"], DirectedEdge["engine-io-wai", "wai-websockets"], DirectedEdge["engine-io-wai", "websockets"], DirectedEdge["engine-io-yesod", "base"], DirectedEdge["engine-io-yesod", "bytestring"], DirectedEdge["engine-io-yesod", "conduit"], DirectedEdge["engine-io-yesod", "conduit-extra"], DirectedEdge["engine-io-yesod", "engine-io"], DirectedEdge["engine-io-yesod", "http-types"], DirectedEdge["engine-io-yesod", "text"], DirectedEdge["engine-io-yesod", "unordered-containers"], DirectedEdge["engine-io-yesod", "wai"], DirectedEdge["engine-io-yesod", "wai-websockets"], DirectedEdge["engine-io-yesod", "websockets"], DirectedEdge["engine-io-yesod", "yesod-core"], DirectedEdge["engineering-units", "base"], DirectedEdge["entropy", "base"], DirectedEdge["entropy", "bytestring"], DirectedEdge["entropy", "unix"], DirectedEdge["enumerable", "base"], DirectedEdge["enumerable", "control-monad-omega"], DirectedEdge["enumerable", "tagged"], DirectedEdge["enumerate", "array"], DirectedEdge["enumerate", "base"], DirectedEdge["enumerate", "containers"], DirectedEdge["enumerate", "deepseq"], DirectedEdge["enumerate", "enumerate"], DirectedEdge["enumerate", "ghc-prim"], DirectedEdge["enumerate", "template-haskell"], DirectedEdge["enumerate", "vinyl"], DirectedEdge["enumeration", "arith-encode"], DirectedEdge["enumeration", "arithmoi"], DirectedEdge["enumeration", "base"], DirectedEdge["enumeration", "binary"], DirectedEdge["enumeration", "Cabal"], DirectedEdge["enumeration", "containers"], DirectedEdge["enumeration", "heap"], DirectedEdge["enumerator", "base"], DirectedEdge["enumerator", "bytestring"], DirectedEdge["enumerator", "containers"], DirectedEdge["enumerator", "text"], DirectedEdge["enumerator", "transformers"], DirectedEdge["enumerator-fd", "base"], DirectedEdge["enumerator-fd", "enumerator"], DirectedEdge["enumerator-fd", "mtl"], DirectedEdge["enumerator-tf", "base"], DirectedEdge["enumerator-tf", "enumerator"], DirectedEdge["enumerator-tf", "monads-tf"], DirectedEdge["enumfun", "base"], DirectedEdge["enumfun", "enummapset-th"], DirectedEdge["enummapmap", "base"], DirectedEdge["enummapmap", "contravariant"], DirectedEdge["enummapmap", "data-default"], DirectedEdge["enummapmap", "deepseq"], DirectedEdge["enummapmap", "ghc-prim"], DirectedEdge["enummapmap", "lens"], DirectedEdge["enummapmap", "safecopy"], DirectedEdge["enummapmap", "semigroups"], DirectedEdge["enummapset", "base"], DirectedEdge["enummapset", "containers"], DirectedEdge["enummapset", "deepseq"], DirectedEdge["enummapset-th", "base"], DirectedEdge["enummapset-th", "containers"], DirectedEdge["enummapset-th", "deepseq"], DirectedEdge["enummapset-th", "template-haskell"], DirectedEdge["enumset", "base"], DirectedEdge["enumset", "data-accessor"], DirectedEdge["enumset", "storable-record"], DirectedEdge["env-parser", "aeson"], DirectedEdge["env-parser", "attoparsec"], DirectedEdge["env-parser", "base"], DirectedEdge["env-parser", "base16-bytestring"], DirectedEdge["env-parser", "base64-bytestring"], DirectedEdge["env-parser", "bytestring"], DirectedEdge["env-parser", "containers"], DirectedEdge["env-parser", "http-types"], DirectedEdge["env-parser", "mtl"], DirectedEdge["env-parser", "network"], DirectedEdge["env-parser", "old-locale"], DirectedEdge["env-parser", "text"], DirectedEdge["env-parser", "time"], DirectedEdge["env-parser", "transformers"], DirectedEdge["envelope", "aeson"], DirectedEdge["envelope", "base"], DirectedEdge["envelope", "mtl"], DirectedEdge["envelope", "text"], DirectedEdge["envparse", "base"], DirectedEdge["envparse", "containers"], DirectedEdge["envy", "base"], DirectedEdge["envy", "bytestring"], DirectedEdge["envy", "containers"], DirectedEdge["envy", "mtl"], DirectedEdge["envy", "text"], DirectedEdge["envy", "time"], DirectedEdge["envy", "transformers"], DirectedEdge["epanet-haskell", "base"], DirectedEdge["epass", "base"], DirectedEdge["epass", "stm"], DirectedEdge["epass", "time"], DirectedEdge["epic", "array"], DirectedEdge["epic", "base"], DirectedEdge["epic", "Cabal"], DirectedEdge["epic", "directory"], DirectedEdge["epic", "mtl"], DirectedEdge["epic", "process"], DirectedEdge["epoll", "base"], DirectedEdge["epoll", "unix"], DirectedEdge["eprocess", "base"], DirectedEdge["eprocess", "exceptions"], DirectedEdge["eprocess", "mtl"], DirectedEdge["epub", "epub-metadata"], DirectedEdge["epub", "base"], DirectedEdge["epub", "bytestring"], DirectedEdge["epub", "filepath"], DirectedEdge["epub", "old-time"], DirectedEdge["epub", "utf8-string"], DirectedEdge["epub", "xml"], DirectedEdge["epub", "zip-archive"], DirectedEdge["epub-metadata", "base"], DirectedEdge["epub-metadata", "bytestring"], DirectedEdge["epub-metadata", "containers"], DirectedEdge["epub-metadata", "directory"], DirectedEdge["epub-metadata", "filepath"], DirectedEdge["epub-metadata", "hxt"], DirectedEdge["epub-metadata", "mtl"], DirectedEdge["epub-metadata", "regex-compat"], DirectedEdge["epub-metadata", "zip-archive"], DirectedEdge["epub-tools", "base"], DirectedEdge["epub-tools", "bytestring"], DirectedEdge["epub-tools", "directory"], DirectedEdge["epub-tools", "epub-metadata"], DirectedEdge["epub-tools", "filepath"], DirectedEdge["epub-tools", "mtl"], DirectedEdge["epub-tools", "parsec"], DirectedEdge["epub-tools", "process"], DirectedEdge["epub-tools", "regex-compat"], DirectedEdge["epub-tools", "zip-archive"], DirectedEdge["epubname", "epub-tools"], DirectedEdge["epubname", "base"], DirectedEdge["epubname", "directory"], DirectedEdge["epubname", "epub-metadata"], DirectedEdge["epubname", "mtl"], DirectedEdge["epubname", "regex-compat"], DirectedEdge["eq", "base"], DirectedEdge["eq", "semigroupoids"], DirectedEdge["equal-files", "base"], DirectedEdge["equal-files", "bytestring"], DirectedEdge["equal-files", "explicit-exception"], DirectedEdge["equal-files", "filemanip"], DirectedEdge["equal-files", "transformers"], DirectedEdge["equal-files", "utility-ht"], DirectedEdge["equational-reasoning", "base"], DirectedEdge["equational-reasoning", "singletons"], DirectedEdge["equational-reasoning", "tagged"], DirectedEdge["equational-reasoning", "template-haskell"], DirectedEdge["equational-reasoning", "void"], DirectedEdge["equivalence", "base"], DirectedEdge["equivalence", "containers"], DirectedEdge["equivalence", "mtl"], DirectedEdge["equivalence", "STMonadTrans"], DirectedEdge["equivalence", "transformers"], DirectedEdge["equivalence", "transformers-compat"], DirectedEdge["erd", "base"], DirectedEdge["erd", "bytestring"], DirectedEdge["erd", "containers"], DirectedEdge["erd", "graphviz"], DirectedEdge["erd", "parsec"], DirectedEdge["erd", "text"], DirectedEdge["erf", "base"], DirectedEdge["erf-native", "base"], DirectedEdge["erf-native", "polynomial"], DirectedEdge["erlang", "base"], DirectedEdge["erlang", "binary"], DirectedEdge["erlang", "bytestring"], DirectedEdge["erlang", "directory"], DirectedEdge["erlang", "filepath"], DirectedEdge["erlang", "MissingH"], DirectedEdge["erlang", "network"], DirectedEdge["erlang", "random"], DirectedEdge["eros", "aeson"], DirectedEdge["eros", "base"], DirectedEdge["eros", "bytestring"], DirectedEdge["eros", "containers"], DirectedEdge["eros", "text"], DirectedEdge["eros-client", "aeson"], DirectedEdge["eros-client", "aeson-pretty"], DirectedEdge["eros-client", "base"], DirectedEdge["eros-client", "bytestring"], DirectedEdge["eros-client", "containers"], DirectedEdge["eros-client", "eros"], DirectedEdge["eros-client", "text"], DirectedEdge["eros-http", "aeson"], DirectedEdge["eros-http", "base"], DirectedEdge["eros-http", "blaze-html"], DirectedEdge["eros-http", "bytestring"], DirectedEdge["eros-http", "eros"], DirectedEdge["eros-http", "http-types"], DirectedEdge["eros-http", "markdown"], DirectedEdge["eros-http", "text"], DirectedEdge["eros-http", "wai"], DirectedEdge["eros-http", "warp"], DirectedEdge["errno", "base"], DirectedEdge["errno", "mtl"], DirectedEdge["error-analyze", "base"], DirectedEdge["error-analyze", "text"], DirectedEdge["error-continuations", "base"], DirectedEdge["error-continuations", "either"], DirectedEdge["error-continuations", "mtl"], DirectedEdge["error-continuations", "transformers"], DirectedEdge["error-list", "base"], DirectedEdge["error-list", "mtl"], DirectedEdge["error-list", "text"], DirectedEdge["error-list", "text-render"], DirectedEdge["error-loc", "base"], DirectedEdge["error-loc", "template-haskell"], DirectedEdge["error-location", "file-location"], DirectedEdge["error-location", "base"], DirectedEdge["error-location", "template-haskell"], DirectedEdge["error-message", "ansi-wl-pprint"], DirectedEdge["error-message", "base"], DirectedEdge["error-message", "containers"], DirectedEdge["error-message", "either-unwrap"], DirectedEdge["error-message", "InfixApplicative"], DirectedEdge["error-message", "mtl"], DirectedEdge["error-util", "base"], DirectedEdge["error-util", "transformers"], DirectedEdge["errorcall-eq-instance", "base-orphans"], DirectedEdge["errorcall-eq-instance", "base"], DirectedEdge["errorcall-eq-instance", "base-orphans"], DirectedEdge["errors", "base"], DirectedEdge["errors", "safe"], DirectedEdge["errors", "transformers"], DirectedEdge["errors", "transformers-compat"], DirectedEdge["errors", "unexceptionalio"], DirectedEdge["ersatz", "array"], DirectedEdge["ersatz", "base"], DirectedEdge["ersatz", "bytestring"], DirectedEdge["ersatz", "containers"], DirectedEdge["ersatz", "data-default"], DirectedEdge["ersatz", "ersatz"], DirectedEdge["ersatz", "ghc-prim"], DirectedEdge["ersatz", "lens"], DirectedEdge["ersatz", "mtl"], DirectedEdge["ersatz", "parsec"], DirectedEdge["ersatz", "process"], DirectedEdge["ersatz", "temporary"], DirectedEdge["ersatz", "transformers"], DirectedEdge["ersatz", "unordered-containers"], DirectedEdge["ersatz-toysat", "array"], DirectedEdge["ersatz-toysat", "base"], DirectedEdge["ersatz-toysat", "containers"], DirectedEdge["ersatz-toysat", "ersatz"], DirectedEdge["ersatz-toysat", "toysolver"], DirectedEdge["ersatz-toysat", "transformers"], DirectedEdge["ert", "aeson"], DirectedEdge["ert", "attoparsec"], DirectedEdge["ert", "attoparsec-expr"], DirectedEdge["ert", "base"], DirectedEdge["ert", "bytestring"], DirectedEdge["ert", "ert"], DirectedEdge["ert", "regex-compat"], DirectedEdge["ert", "text"], DirectedEdge["ert", "unordered-containers"], DirectedEdge["ert", "vector"], DirectedEdge["ert", "yaml"], DirectedEdge["esotericbot", "attoparsec"], DirectedEdge["esotericbot", "base"], DirectedEdge["esotericbot", "bytestring"], DirectedEdge["esotericbot", "containers"], DirectedEdge["esotericbot", "directory"], DirectedEdge["esotericbot", "fgl"], DirectedEdge["esotericbot", "mtl"], DirectedEdge["esotericbot", "network"], DirectedEdge["esotericbot", "stm"], DirectedEdge["esotericbot", "stream-fusion"], DirectedEdge["esotericbot", "tuple"], DirectedEdge["esotericbot", "unix"], DirectedEdge["esqueleto", "base"], DirectedEdge["esqueleto", "blaze-html"], DirectedEdge["esqueleto", "bytestring"], DirectedEdge["esqueleto", "conduit"], DirectedEdge["esqueleto", "monad-logger"], DirectedEdge["esqueleto", "persistent"], DirectedEdge["esqueleto", "resourcet"], DirectedEdge["esqueleto", "tagged"], DirectedEdge["esqueleto", "text"], DirectedEdge["esqueleto", "transformers"], DirectedEdge["esqueleto", "unordered-containers"], DirectedEdge["ess", "base"], DirectedEdge["estimator", "ad"], DirectedEdge["estimator", "base"], DirectedEdge["estimator", "distributive"], DirectedEdge["estimator", "lens"], DirectedEdge["estimator", "linear"], DirectedEdge["estimator", "reflection"], DirectedEdge["estimators", "base"], DirectedEdge["estimators", "binary"], DirectedEdge["estimators", "containers"], DirectedEdge["estimators", "deepseq"], DirectedEdge["estimators", "list-tries"], DirectedEdge["estimators", "MonadRandom"], DirectedEdge["estimators", "mtl"], DirectedEdge["estimators", "pretty"], DirectedEdge["estimators", "prettyclass"], DirectedEdge["estimators", "QuickCheck"], DirectedEdge["estimators", "text"], DirectedEdge["estreps", "base"], DirectedEdge["estreps", "bio"], DirectedEdge["estreps", "bytestring"], DirectedEdge["estreps", "containers"], DirectedEdge["estreps", "random"], DirectedEdge["etcd", "aeson"], DirectedEdge["etcd", "base"], DirectedEdge["etcd", "bytestring"], DirectedEdge["etcd", "http-conduit"], DirectedEdge["etcd", "text"], DirectedEdge["etcd", "time"], DirectedEdge["eternal", "base"], DirectedEdge["eternal", "base-unicode-symbols"], DirectedEdge["eternal", "transformers"], DirectedEdge["eternal", "utf8-string"], DirectedEdge["ether", "base"], DirectedEdge["ether", "exceptions"], DirectedEdge["ether", "mmorph"], DirectedEdge["ether", "monad-control"], DirectedEdge["ether", "mtl"], DirectedEdge["ether", "template-haskell"], DirectedEdge["ether", "transformers"], DirectedEdge["ether", "transformers-base"], DirectedEdge["ether", "transformers-lift"], DirectedEdge["ethereum-client-haskell", "ansi-wl-pprint"], DirectedEdge["ethereum-client-haskell", "array"], DirectedEdge["ethereum-client-haskell", "base"], DirectedEdge["ethereum-client-haskell", "base16-bytestring"], DirectedEdge["ethereum-client-haskell", "binary"], DirectedEdge["ethereum-client-haskell", "bytestring"], DirectedEdge["ethereum-client-haskell", "cmdargs"], DirectedEdge["ethereum-client-haskell", "containers"], DirectedEdge["ethereum-client-haskell", "cryptohash"], DirectedEdge["ethereum-client-haskell", "data-default"], DirectedEdge["ethereum-client-haskell", "directory"], DirectedEdge["ethereum-client-haskell", "either"], DirectedEdge["ethereum-client-haskell", "entropy"], DirectedEdge["ethereum-client-haskell", "ethereum-merkle-patricia-db"], DirectedEdge["ethereum-client-haskell", "ethereum-rlp"], DirectedEdge["ethereum-client-haskell", "filepath"], DirectedEdge["ethereum-client-haskell", "haskoin"], DirectedEdge["ethereum-client-haskell", "leveldb-haskell"], DirectedEdge["ethereum-client-haskell", "mtl"], DirectedEdge["ethereum-client-haskell", "network"], DirectedEdge["ethereum-client-haskell", "network-simple"], DirectedEdge["ethereum-client-haskell", "nibblestring"], DirectedEdge["ethereum-client-haskell", "resourcet"], DirectedEdge["ethereum-client-haskell", "time"], DirectedEdge["ethereum-client-haskell", "transformers"], DirectedEdge["ethereum-client-haskell", "vector"], DirectedEdge["ethereum-merkle-patricia-db", "ansi-wl-pprint"], DirectedEdge["ethereum-merkle-patricia-db", "base"], DirectedEdge["ethereum-merkle-patricia-db", "base16-bytestring"], DirectedEdge["ethereum-merkle-patricia-db", "binary"], DirectedEdge["ethereum-merkle-patricia-db", "bytestring"], DirectedEdge["ethereum-merkle-patricia-db", "cryptohash"], DirectedEdge["ethereum-merkle-patricia-db", "data-default"], DirectedEdge["ethereum-merkle-patricia-db", "ethereum-rlp"], DirectedEdge["ethereum-merkle-patricia-db", "leveldb-haskell"], DirectedEdge["ethereum-merkle-patricia-db", "nibblestring"], DirectedEdge["ethereum-merkle-patricia-db", "resourcet"], DirectedEdge["ethereum-rlp", "ansi-wl-pprint"], DirectedEdge["ethereum-rlp", "base"], DirectedEdge["ethereum-rlp", "base16-bytestring"], DirectedEdge["ethereum-rlp", "bytestring"], DirectedEdge["ety", "base"], DirectedEdge["ety", "bytestring"], DirectedEdge["ety", "curl"], DirectedEdge["ety", "random"], DirectedEdge["ety", "text-icu"], DirectedEdge["ety", "utf8-string"], DirectedEdge["ety", "xml"], DirectedEdge["euler", "base"], DirectedEdge["euphoria", "base"], DirectedEdge["euphoria", "containers"], DirectedEdge["euphoria", "data-default"], DirectedEdge["euphoria", "deepseq"], DirectedEdge["euphoria", "elerea"], DirectedEdge["euphoria", "enummapset-th"], DirectedEdge["euphoria", "hashable"], DirectedEdge["euphoria", "HUnit"], DirectedEdge["euphoria", "transformers"], DirectedEdge["euphoria", "unordered-containers"], DirectedEdge["eurofxref", "base"], DirectedEdge["eurofxref", "bytestring"], DirectedEdge["eurofxref", "conduit"], DirectedEdge["eurofxref", "containers"], DirectedEdge["eurofxref", "failure"], DirectedEdge["eurofxref", "hexpat"], DirectedEdge["eurofxref", "http-conduit"], DirectedEdge["eurofxref", "http-types"], DirectedEdge["eurofxref", "monad-control"], DirectedEdge["eurofxref", "mtl"], DirectedEdge["eurofxref", "time"], DirectedEdge["event", "base"], DirectedEdge["event", "containers"], DirectedEdge["event", "semigroups"], DirectedEdge["event", "transformers"], DirectedEdge["event-driven", "base"], DirectedEdge["event-driven", "monads-tf"], DirectedEdge["event-driven", "yjtools"], DirectedEdge["event-handlers", "base"], DirectedEdge["event-handlers", "containers"], DirectedEdge["event-list", "base"], DirectedEdge["event-list", "non-negative"], DirectedEdge["event-list", "QuickCheck"], DirectedEdge["event-list", "special-functors"], DirectedEdge["event-list", "transformers"], DirectedEdge["event-list", "utility-ht"], DirectedEdge["event-monad", "base"], DirectedEdge["event-monad", "containers"], DirectedEdge["event-monad", "event-handlers"], DirectedEdge["event-monad", "monad-loops"], DirectedEdge["event-monad", "mtl"], DirectedEdge["event-monad", "pretty"], DirectedEdge["event-monad", "prettyclass"], DirectedEdge["event-monad", "priority-queue"], DirectedEdge["event-monad", "stateref"], DirectedEdge["eventloop", "aeson"], DirectedEdge["eventloop", "base"], DirectedEdge["eventloop", "bytestring"], DirectedEdge["eventloop", "concurrent-utilities"], DirectedEdge["eventloop", "deepseq"], DirectedEdge["eventloop", "network"], DirectedEdge["eventloop", "stm"], DirectedEdge["eventloop", "suspend"], DirectedEdge["eventloop", "text"], DirectedEdge["eventloop", "timers"], DirectedEdge["eventloop", "websockets"], DirectedEdge["eventsourced", "base"], DirectedEdge["eventsourced", "blaze-builder"], DirectedEdge["eventsourced", "bytestring"], DirectedEdge["eventsourced", "eventsourced"], DirectedEdge["eventsourced", "wai"], DirectedEdge["eventsourced", "wai-extra"], DirectedEdge["eventsourced", "warp"], DirectedEdge["eventstore", "aeson"], DirectedEdge["eventstore", "array"], DirectedEdge["eventstore", "async"], DirectedEdge["eventstore", "base"], DirectedEdge["eventstore", "bytestring"], DirectedEdge["eventstore", "cereal"], DirectedEdge["eventstore", "connection"], DirectedEdge["eventstore", "containers"], DirectedEdge["eventstore", "dns"], DirectedEdge["eventstore", "dotnet-timespan"], DirectedEdge["eventstore", "http-client"], DirectedEdge["eventstore", "protobuf"], DirectedEdge["eventstore", "random"], DirectedEdge["eventstore", "semigroups"], DirectedEdge["eventstore", "stm"], DirectedEdge["eventstore", "text"], DirectedEdge["eventstore", "time"], DirectedEdge["eventstore", "unordered-containers"], DirectedEdge["eventstore", "uuid"], DirectedEdge["every-bit-counts", "base"], DirectedEdge["ewe", "array"], DirectedEdge["ewe", "base"], DirectedEdge["ewe", "containers"], DirectedEdge["ewe", "mtl"], DirectedEdge["ewe", "pretty"], DirectedEdge["ewe", "transformers"], DirectedEdge["ex-pool", "base"], DirectedEdge["ex-pool", "exceptions"], DirectedEdge["ex-pool", "hashable"], DirectedEdge["ex-pool", "stm"], DirectedEdge["ex-pool", "time"], DirectedEdge["ex-pool", "transformers"], DirectedEdge["ex-pool", "vector"], DirectedEdge["exact-combinatorics", "base"], DirectedEdge["exact-pi", "base"], DirectedEdge["exact-pi", "numtype-dk"], DirectedEdge["exact-real", "base"], DirectedEdge["exact-real", "integer-gmp"], DirectedEdge["exact-real", "memoize"], DirectedEdge["exact-real", "random"], DirectedEdge["exception-hierarchy", "base"], DirectedEdge["exception-hierarchy", "template-haskell"], DirectedEdge["exception-mailer", "base"], DirectedEdge["exception-mailer", "hslogger"], DirectedEdge["exception-mailer", "mime-mail"], DirectedEdge["exception-mailer", "text"], DirectedEdge["exception-monads-fd", "exception-mtl"], DirectedEdge["exception-monads-fd", "base"], DirectedEdge["exception-monads-fd", "exception-transformers"], DirectedEdge["exception-monads-fd", "monads-fd"], DirectedEdge["exception-monads-fd", "transformers"], DirectedEdge["exception-monads-tf", "base"], DirectedEdge["exception-monads-tf", "exception-transformers"], DirectedEdge["exception-monads-tf", "monads-tf"], DirectedEdge["exception-monads-tf", "transformers"], DirectedEdge["exception-mtl", "base"], DirectedEdge["exception-mtl", "exception-transformers"], DirectedEdge["exception-mtl", "mtl"], DirectedEdge["exception-mtl", "transformers"], DirectedEdge["exception-transformers", "base"], DirectedEdge["exception-transformers", "stm"], DirectedEdge["exception-transformers", "transformers"], DirectedEdge["exception-transformers", "transformers-compat"], DirectedEdge["exceptional", "base"], DirectedEdge["exceptional", "exceptions"], DirectedEdge["exceptions", "base"], DirectedEdge["exceptions", "mtl"], DirectedEdge["exceptions", "stm"], DirectedEdge["exceptions", "template-haskell"], DirectedEdge["exceptions", "transformers"], DirectedEdge["exceptions", "transformers-compat"], DirectedEdge["executable-hash", "base"], DirectedEdge["executable-hash", "bytestring"], DirectedEdge["executable-hash", "cryptohash"], DirectedEdge["executable-hash", "directory"], DirectedEdge["executable-hash", "executable-hash"], DirectedEdge["executable-hash", "executable-path"], DirectedEdge["executable-hash", "file-embed"], DirectedEdge["executable-hash", "template-haskell"], DirectedEdge["executable-path", "base"], DirectedEdge["executable-path", "directory"], DirectedEdge["executable-path", "filepath"], DirectedEdge["executable-path", "unix"], DirectedEdge["exhaustive", "base"], DirectedEdge["exhaustive", "generics-sop"], DirectedEdge["exhaustive", "template-haskell"], DirectedEdge["exhaustive", "transformers"], DirectedEdge["exherbo-cabal", "ansi-wl-pprint"], DirectedEdge["exherbo-cabal", "base"], DirectedEdge["exherbo-cabal", "bytestring"], DirectedEdge["exherbo-cabal", "Cabal"], DirectedEdge["exherbo-cabal", "containers"], DirectedEdge["exherbo-cabal", "data-default"], DirectedEdge["exherbo-cabal", "exherbo-cabal"], DirectedEdge["exherbo-cabal", "haddock-library"], DirectedEdge["exherbo-cabal", "http-client"], DirectedEdge["exherbo-cabal", "http-types"], DirectedEdge["exherbo-cabal", "optparse-applicative"], DirectedEdge["exherbo-cabal", "pcre-light"], DirectedEdge["exherbo-cabal", "pretty"], DirectedEdge["exif", "base"], DirectedEdge["exinst", "base"], DirectedEdge["exinst", "constraints"], DirectedEdge["exinst", "singletons"], DirectedEdge["exinst-aeson", "aeson"], DirectedEdge["exinst-aeson", "base"], DirectedEdge["exinst-aeson", "constraints"], DirectedEdge["exinst-aeson", "exinst"], DirectedEdge["exinst-aeson", "singletons"], DirectedEdge["exinst-bytes", "base"], DirectedEdge["exinst-bytes", "bytes"], DirectedEdge["exinst-bytes", "constraints"], DirectedEdge["exinst-bytes", "exinst"], DirectedEdge["exinst-bytes", "singletons"], DirectedEdge["exinst-deepseq", "base"], DirectedEdge["exinst-deepseq", "constraints"], DirectedEdge["exinst-deepseq", "deepseq"], DirectedEdge["exinst-deepseq", "exinst"], DirectedEdge["exinst-hashable", "base"], DirectedEdge["exinst-hashable", "constraints"], DirectedEdge["exinst-hashable", "exinst"], DirectedEdge["exinst-hashable", "hashable"], DirectedEdge["exinst-hashable", "singletons"], DirectedEdge["existential", "base"], DirectedEdge["existential", "existential"], DirectedEdge["existential", "lens"], DirectedEdge["existential", "QuickCheck"], DirectedEdge["existential", "template-haskell"], DirectedEdge["exists", "base"], DirectedEdge["exists", "contravariant"], DirectedEdge["exit-codes", "base"], DirectedEdge["exp-extended", "base"], DirectedEdge["exp-extended", "compensated"], DirectedEdge["exp-extended", "log-domain"], DirectedEdge["exp-pairs", "base"], DirectedEdge["exp-pairs", "deepseq"], DirectedEdge["exp-pairs", "ghc-prim"], DirectedEdge["exp-pairs", "memoize"], DirectedEdge["exp-pairs", "wl-pprint"], DirectedEdge["expand", "AspectAG"], DirectedEdge["expand", "base"], DirectedEdge["expand", "HList"], DirectedEdge["expand", "murder"], DirectedEdge["expand", "uu-parsinglib"], DirectedEdge["expat-enumerator", "base"], DirectedEdge["expat-enumerator", "bytestring"], DirectedEdge["expat-enumerator", "enumerator"], DirectedEdge["expat-enumerator", "hexpat"], DirectedEdge["expat-enumerator", "text"], DirectedEdge["expat-enumerator", "transformers"], DirectedEdge["expat-enumerator", "xml-types"], DirectedEdge["expiring-cache-map", "base"], DirectedEdge["expiring-cache-map", "containers"], DirectedEdge["expiring-cache-map", "hashable"], DirectedEdge["expiring-cache-map", "unordered-containers"], DirectedEdge["expiring-mvar", "base"], DirectedEdge["explain", "ansi-wl-pprint"], DirectedEdge["explain", "base"], DirectedEdge["explain", "haskell-src-exts"], DirectedEdge["explicit-determinant", "base"], DirectedEdge["explicit-exception", "applicative"], DirectedEdge["explicit-exception", "base"], DirectedEdge["explicit-exception", "bytestring"], DirectedEdge["explicit-exception", "deepseq"], DirectedEdge["explicit-exception", "special-functors"], DirectedEdge["explicit-exception", "tar"], DirectedEdge["explicit-exception", "transformers"], DirectedEdge["explicit-iomodes", "base"], DirectedEdge["explicit-iomodes", "base-unicode-symbols"], DirectedEdge["explicit-iomodes", "tagged"], DirectedEdge["explicit-iomodes-bytestring", "base"], DirectedEdge["explicit-iomodes-bytestring", "bytestring"], DirectedEdge["explicit-iomodes-bytestring", "explicit-iomodes"], DirectedEdge["explicit-iomodes-text", "base"], DirectedEdge["explicit-iomodes-text", "explicit-iomodes"], DirectedEdge["explicit-iomodes-text", "text"], DirectedEdge["explicit-sharing", "base"], DirectedEdge["explicit-sharing", "containers"], DirectedEdge["explicit-sharing", "derive"], DirectedEdge["explicit-sharing", "mtl"], DirectedEdge["explicit-sharing", "template-haskell"], DirectedEdge["explore", "array"], DirectedEdge["explore", "base"], DirectedEdge["explore", "directory"], DirectedEdge["explore", "pngload"], DirectedEdge["exposed-containers", "array"], DirectedEdge["exposed-containers", "base"], DirectedEdge["exposed-containers", "deepseq"], DirectedEdge["exposed-containers", "ghc-prim"], DirectedEdge["expression-parser", "base"], DirectedEdge["extcore", "array"], DirectedEdge["extcore", "base"], DirectedEdge["extcore", "bytestring"], DirectedEdge["extcore", "containers"], DirectedEdge["extcore", "directory"], DirectedEdge["extcore", "filepath"], DirectedEdge["extcore", "mtl"], DirectedEdge["extcore", "parsec"], DirectedEdge["extcore", "pretty"], DirectedEdge["extcore", "syb"], DirectedEdge["extemp", "base"], DirectedEdge["extemp", "bytestring"], DirectedEdge["extemp", "containers"], DirectedEdge["extemp", "feed"], DirectedEdge["extemp", "happstack-auth"], DirectedEdge["extemp", "happstack-server"], DirectedEdge["extemp", "happstack-state"], DirectedEdge["extemp", "happstack-util"], DirectedEdge["extemp", "HTTP"], DirectedEdge["extemp", "MaybeT"], DirectedEdge["extemp", "monad-parallel"], DirectedEdge["extemp", "mtl"], DirectedEdge["extemp", "network"], DirectedEdge["extemp", "old-locale"], DirectedEdge["extemp", "regex-tdfa"], DirectedEdge["extemp", "smartGroup"], DirectedEdge["extemp", "stringsearch"], DirectedEdge["extemp", "time"], DirectedEdge["extemp", "xhtml"], DirectedEdge["extemp", "xml"], DirectedEdge["extended-categories", "base"], DirectedEdge["extended-categories", "constraints"], DirectedEdge["extended-categories", "ghc-prim"], DirectedEdge["extended-categories", "tagged"], DirectedEdge["extended-reals", "base"], DirectedEdge["extended-reals", "deepseq"], DirectedEdge["extended-reals", "hashable"], DirectedEdge["extensible", "base"], DirectedEdge["extensible", "constraints"], DirectedEdge["extensible", "monad-skeleton"], DirectedEdge["extensible", "profunctors"], DirectedEdge["extensible", "tagged"], DirectedEdge["extensible", "template-haskell"], DirectedEdge["extensible", "transformers"], DirectedEdge["extensible-data", "base"], DirectedEdge["extensible-data", "data-lens"], DirectedEdge["extensible-data", "hashable"], DirectedEdge["extensible-data", "template-haskell"], DirectedEdge["extensible-data", "unordered-containers"], DirectedEdge["extensible-effects", "base"], DirectedEdge["extensible-effects", "transformers"], DirectedEdge["extensible-effects", "transformers-base"], DirectedEdge["extensible-effects", "type-aligned"], DirectedEdge["extensible-effects", "void"], DirectedEdge["extensible-exceptions", "base"], DirectedEdge["external-sort", "base"], DirectedEdge["external-sort", "binary"], DirectedEdge["external-sort", "bytestring"], DirectedEdge["external-sort", "EdisonAPI"], DirectedEdge["external-sort", "EdisonCore"], DirectedEdge["extra", "base"], DirectedEdge["extra", "directory"], DirectedEdge["extra", "filepath"], DirectedEdge["extra", "process"], DirectedEdge["extra", "time"], DirectedEdge["extra", "unix"], DirectedEdge["extract-dependencies", "async"], DirectedEdge["extract-dependencies", "base"], DirectedEdge["extract-dependencies", "Cabal"], DirectedEdge["extract-dependencies", "containers"], DirectedEdge["extract-dependencies", "package-description-remote"], DirectedEdge["extractelf", "base"], DirectedEdge["extractelf", "bytestring"], DirectedEdge["extractelf", "bytestring-mmap"], DirectedEdge["extractelf", "directory"], DirectedEdge["extractelf", "elf"], DirectedEdge["extractelf", "filepath"], DirectedEdge["extractelf", "optparse-applicative"], DirectedEdge["ez-couch", "aeson"], DirectedEdge["ez-couch", "attoparsec"], DirectedEdge["ez-couch", "attoparsec-conduit"], DirectedEdge["ez-couch", "base"], DirectedEdge["ez-couch", "blaze-builder"], DirectedEdge["ez-couch", "bytestring"], DirectedEdge["ez-couch", "classy-prelude"], DirectedEdge["ez-couch", "classy-prelude-conduit"], DirectedEdge["ez-couch", "containers"], DirectedEdge["ez-couch", "ghc-prim"], DirectedEdge["ez-couch", "hashable"], DirectedEdge["ez-couch", "hslogger"], DirectedEdge["ez-couch", "http-conduit"], DirectedEdge["ez-couch", "http-types"], DirectedEdge["ez-couch", "mtl"], DirectedEdge["ez-couch", "neat-interpolation"], DirectedEdge["ez-couch", "old-locale"], DirectedEdge["ez-couch", "random"], DirectedEdge["ez-couch", "resourcet"], DirectedEdge["ez-couch", "string-conversions"], DirectedEdge["ez-couch", "text"], DirectedEdge["ez-couch", "time"], DirectedEdge["ez-couch", "unordered-containers"], DirectedEdge["ez-couch", "vector"], DirectedEdge["faceted", "base"], DirectedEdge["faceted", "free"], DirectedEdge["factory", "array"], DirectedEdge["factory", "base"], DirectedEdge["factory", "Cabal"], DirectedEdge["factory", "containers"], DirectedEdge["factory", "deepseq"], DirectedEdge["factory", "factory"], DirectedEdge["factory", "parallel"], DirectedEdge["factory", "primes"], DirectedEdge["factory", "random"], DirectedEdge["factory", "toolshed"], DirectedEdge["factual-api", "aeson"], DirectedEdge["factual-api", "attoparsec"], DirectedEdge["factual-api", "base"], DirectedEdge["factual-api", "bytestring"], DirectedEdge["factual-api", "containers"], DirectedEdge["factual-api", "curl"], DirectedEdge["factual-api", "dataenc"], DirectedEdge["factual-api", "hoauth"], DirectedEdge["factual-api", "HTTP"], DirectedEdge["factual-api", "MissingH"], DirectedEdge["factual-api", "text"], DirectedEdge["factual-api", "unordered-containers"], DirectedEdge["factual-api", "utf8-string"], DirectedEdge["factual-api", "vector"], DirectedEdge["fad", "base"], DirectedEdge["fadno-braids", "base"], DirectedEdge["fadno-braids", "containers"], DirectedEdge["fadno-braids", "diagrams"], DirectedEdge["fadno-braids", "diagrams-lib"], DirectedEdge["fadno-braids", "diagrams-rasterific"], DirectedEdge["fadno-braids", "lens"], DirectedEdge["fadno-braids", "transformers-compat"], DirectedEdge["fail", "base"], DirectedEdge["failable-list", "enumerator"], DirectedEdge["failable-list", "base"], DirectedEdge["failure", "exceptions"], DirectedEdge["failure", "base"], DirectedEdge["failure", "transformers"], DirectedEdge["failure-detector", "base"], DirectedEdge["failure-detector", "containers"], DirectedEdge["failure-detector", "statistics"], DirectedEdge["failure-detector", "time"], DirectedEdge["fair-predicates", "base"], DirectedEdge["fake-type", "base"], DirectedEdge["fake-type", "base-prelude"], DirectedEdge["fake-type", "split"], DirectedEdge["faker", "base"], DirectedEdge["faker", "gimlh"], DirectedEdge["faker", "random"], DirectedEdge["faker", "split"], DirectedEdge["falling-turnip", "base"], DirectedEdge["falling-turnip", "gloss"], DirectedEdge["falling-turnip", "gloss-raster"], DirectedEdge["falling-turnip", "JuicyPixels-repa"], DirectedEdge["falling-turnip", "QuickCheck"], DirectedEdge["falling-turnip", "random"], DirectedEdge["falling-turnip", "repa"], DirectedEdge["falling-turnip", "repa-algorithms"], DirectedEdge["falling-turnip", "vector"], DirectedEdge["fallingblocks", "base"], DirectedEdge["fallingblocks", "containers"], DirectedEdge["fallingblocks", "SDL"], DirectedEdge["fallingblocks", "SDL-mixer"], DirectedEdge["fallingblocks", "SDL-ttf"], DirectedEdge["family-tree", "base"], DirectedEdge["family-tree", "binary"], DirectedEdge["family-tree", "containers"], DirectedEdge["family-tree", "hashable"], DirectedEdge["family-tree", "intervals"], DirectedEdge["family-tree", "lens"], DirectedEdge["family-tree", "tables"], DirectedEdge["family-tree", "text"], DirectedEdge["family-tree", "time"], DirectedEdge["family-tree", "unordered-containers"], DirectedEdge["farmhash", "base"], DirectedEdge["farmhash", "bytestring"], DirectedEdge["fast-builder", "base"], DirectedEdge["fast-builder", "bytestring"], DirectedEdge["fast-builder", "ghc-prim"], DirectedEdge["fast-digits", "base"], DirectedEdge["fast-digits", "integer-gmp"], DirectedEdge["fast-logger", "array"], DirectedEdge["fast-logger", "auto-update"], DirectedEdge["fast-logger", "base"], DirectedEdge["fast-logger", "bytestring"], DirectedEdge["fast-logger", "bytestring-builder"], DirectedEdge["fast-logger", "directory"], DirectedEdge["fast-logger", "easy-file"], DirectedEdge["fast-logger", "filepath"], DirectedEdge["fast-logger", "old-locale"], DirectedEdge["fast-logger", "text"], DirectedEdge["fast-logger", "time"], DirectedEdge["fast-logger", "unix"], DirectedEdge["fast-logger", "unix-time"], DirectedEdge["fast-math", "base"], DirectedEdge["fast-tags", "array"], DirectedEdge["fast-tags", "async"], DirectedEdge["fast-tags", "base"], DirectedEdge["fast-tags", "bytestring"], DirectedEdge["fast-tags", "containers"], DirectedEdge["fast-tags", "cpphs"], DirectedEdge["fast-tags", "deepseq"], DirectedEdge["fast-tags", "directory"], DirectedEdge["fast-tags", "fast-tags"], DirectedEdge["fast-tags", "filepath"], DirectedEdge["fast-tags", "mtl"], DirectedEdge["fast-tags", "text"], DirectedEdge["fast-tags", "utf8-string"], DirectedEdge["fast-tagsoup", "base"], DirectedEdge["fast-tagsoup", "bytestring"], DirectedEdge["fast-tagsoup", "containers"], DirectedEdge["fast-tagsoup", "tagsoup"], DirectedEdge["fast-tagsoup", "text"], DirectedEdge["fast-tagsoup", "text-icu"], DirectedEdge["fast-tagsoup-utf8-only", "base"], DirectedEdge["fast-tagsoup-utf8-only", "bytestring"], DirectedEdge["fast-tagsoup-utf8-only", "tagsoup"], DirectedEdge["fast-tagsoup-utf8-only", "text"], DirectedEdge["fasta", "attoparsec"], DirectedEdge["fasta", "base"], DirectedEdge["fasta", "bytestring"], DirectedEdge["fasta", "containers"], DirectedEdge["fasta", "foldl"], DirectedEdge["fasta", "lens"], DirectedEdge["fasta", "parsec"], DirectedEdge["fasta", "pipes"], DirectedEdge["fasta", "pipes-attoparsec"], DirectedEdge["fasta", "pipes-bytestring"], DirectedEdge["fasta", "pipes-group"], DirectedEdge["fasta", "pipes-text"], DirectedEdge["fasta", "split"], DirectedEdge["fasta", "text"], DirectedEdge["fastbayes", "base"], DirectedEdge["fastbayes", "hmatrix"], DirectedEdge["fastbayes", "vector"], DirectedEdge["fastcgi", "base"], DirectedEdge["fastcgi", "bytestring"], DirectedEdge["fastcgi", "cgi"], DirectedEdge["fastedit", "base"], DirectedEdge["fastedit", "base-prelude"], DirectedEdge["fastedit", "bytestring"], DirectedEdge["fastedit", "containers"], DirectedEdge["fastedit", "hashable"], DirectedEdge["fastedit", "safe"], DirectedEdge["fastedit", "unordered-containers"], DirectedEdge["fastirc", "attoparsec"], DirectedEdge["fastirc", "base"], DirectedEdge["fastirc", "bytestring"], DirectedEdge["fastirc", "bytestring-show"], DirectedEdge["fastirc", "containers"], DirectedEdge["fastirc", "monadLib"], DirectedEdge["fastirc", "network-fancy"], DirectedEdge["fault-tree", "base"], DirectedEdge["fault-tree", "yices"], DirectedEdge["fay", "aeson"], DirectedEdge["fay", "base"], DirectedEdge["fay", "base-compat"], DirectedEdge["fay", "bytestring"], DirectedEdge["fay", "containers"], DirectedEdge["fay", "data-default"], DirectedEdge["fay", "data-lens-light"], DirectedEdge["fay", "directory"], DirectedEdge["fay", "fay"], DirectedEdge["fay", "filepath"], DirectedEdge["fay", "ghc-paths"], DirectedEdge["fay", "haskell-src-exts"], DirectedEdge["fay", "language-ecmascript"], DirectedEdge["fay", "mtl"], DirectedEdge["fay", "mtl-compat"], DirectedEdge["fay", "optparse-applicative"], DirectedEdge["fay", "process"], DirectedEdge["fay", "safe"], DirectedEdge["fay", "sourcemap"], DirectedEdge["fay", "split"], DirectedEdge["fay", "spoon"], DirectedEdge["fay", "syb"], DirectedEdge["fay", "tagged"], DirectedEdge["fay", "text"], DirectedEdge["fay", "time"], DirectedEdge["fay", "transformers"], DirectedEdge["fay", "transformers-compat"], DirectedEdge["fay", "traverse-with-class"], DirectedEdge["fay", "type-eq"], DirectedEdge["fay", "uniplate"], DirectedEdge["fay", "unordered-containers"], DirectedEdge["fay", "utf8-string"], DirectedEdge["fay", "vector"], DirectedEdge["fay-base", "base"], DirectedEdge["fay-base", "fay"], DirectedEdge["fay-builder", "base"], DirectedEdge["fay-builder", "Cabal"], DirectedEdge["fay-builder", "data-default"], DirectedEdge["fay-builder", "directory"], DirectedEdge["fay-builder", "fay"], DirectedEdge["fay-builder", "filepath"], DirectedEdge["fay-builder", "safe"], DirectedEdge["fay-builder", "split"], DirectedEdge["fay-builder", "text"], DirectedEdge["fay-dom", "fay-base"], DirectedEdge["fay-geoposition", "fay-base"], DirectedEdge["fay-geoposition", "fay-text"], DirectedEdge["fay-hsx", "fay-base"], DirectedEdge["fay-hsx", "fay-jquery"], DirectedEdge["fay-jquery", "fay-base"], DirectedEdge["fay-jquery", "fay-text"], DirectedEdge["fay-ref", "fay-base"], DirectedEdge["fay-text", "fay"], DirectedEdge["fay-text", "fay-base"], DirectedEdge["fay-text", "text"], DirectedEdge["fay-uri", "fay-base"], DirectedEdge["fb", "aeson"], DirectedEdge["fb", "attoparsec"], DirectedEdge["fb", "attoparsec-conduit"], DirectedEdge["fb", "base"], DirectedEdge["fb", "base16-bytestring"], DirectedEdge["fb", "base64-bytestring"], DirectedEdge["fb", "bytestring"], DirectedEdge["fb", "cereal"], DirectedEdge["fb", "conduit"], DirectedEdge["fb", "conduit-extra"], DirectedEdge["fb", "crypto-api"], DirectedEdge["fb", "cryptohash"], DirectedEdge["fb", "cryptohash-cryptoapi"], DirectedEdge["fb", "data-default"], DirectedEdge["fb", "http-conduit"], DirectedEdge["fb", "http-types"], DirectedEdge["fb", "lifted-base"], DirectedEdge["fb", "monad-control"], DirectedEdge["fb", "monad-logger"], DirectedEdge["fb", "old-locale"], DirectedEdge["fb", "resourcet"], DirectedEdge["fb", "text"], DirectedEdge["fb", "time"], DirectedEdge["fb", "transformers"], DirectedEdge["fb", "transformers-base"], DirectedEdge["fb", "unordered-containers"], DirectedEdge["fb-persistent", "base"], DirectedEdge["fb-persistent", "cereal"], DirectedEdge["fb-persistent", "fb"], DirectedEdge["fb-persistent", "persistent"], DirectedEdge["fb-persistent", "text"], DirectedEdge["fb-persistent", "time"], DirectedEdge["fca", "base"], DirectedEdge["fca", "bytestring"], DirectedEdge["fca", "containers"], DirectedEdge["fca", "cryptohash"], DirectedEdge["fca", "hashable"], DirectedEdge["fca", "text"], DirectedEdge["fca", "unordered-containers"], DirectedEdge["fcache", "base"], DirectedEdge["fcache", "containers"], DirectedEdge["fcache", "hashable"], DirectedEdge["fcache", "mtl"], DirectedEdge["fcache", "unordered-containers"], DirectedEdge["fcd", "array"], DirectedEdge["fcd", "base"], DirectedEdge["fcd", "directory"], DirectedEdge["fcd", "fcd"], DirectedEdge["fcd", "process"], DirectedEdge["fcd", "text"], DirectedEdge["fcd", "unix"], DirectedEdge["fcd", "vty"], DirectedEdge["fcd", "vty-ui"], DirectedEdge["fckeditor", "base"], DirectedEdge["fckeditor", "cgi"], DirectedEdge["fckeditor", "HaXml"], DirectedEdge["fckeditor", "xhtml"], DirectedEdge["fclabels", "base"], DirectedEdge["fclabels", "mtl"], DirectedEdge["fclabels", "template-haskell"], DirectedEdge["fclabels", "transformers"], DirectedEdge["fclabels-monadlib", "base"], DirectedEdge["fclabels-monadlib", "fclabels"], DirectedEdge["fclabels-monadlib", "monadLib"], DirectedEdge["fdo-notify", "base"], DirectedEdge["fdo-notify", "containers"], DirectedEdge["fdo-notify", "dbus"], DirectedEdge["fdo-trash", "base"], DirectedEdge["fdo-trash", "Diff"], DirectedEdge["fdo-trash", "directory"], DirectedEdge["fdo-trash", "fdo-trash"], DirectedEdge["fdo-trash", "filepath"], DirectedEdge["fdo-trash", "old-locale"], DirectedEdge["fdo-trash", "parsec"], DirectedEdge["fdo-trash", "time"], DirectedEdge["fdo-trash", "unix"], DirectedEdge["fdo-trash", "url"], DirectedEdge["feature-flags", "base"], DirectedEdge["feature-flags", "text"], DirectedEdge["fec", "base"], DirectedEdge["fec", "bytestring"], DirectedEdge["fedora-packages", "aeson"], DirectedEdge["fedora-packages", "base"], DirectedEdge["fedora-packages", "bytestring"], DirectedEdge["fedora-packages", "containers"], DirectedEdge["fedora-packages", "HsOpenSSL"], DirectedEdge["fedora-packages", "http-streams"], DirectedEdge["fedora-packages", "io-streams"], DirectedEdge["fedora-packages", "lens"], DirectedEdge["fedora-packages", "text"], DirectedEdge["feed", "base"], DirectedEdge["feed", "old-locale"], DirectedEdge["feed", "old-time"], DirectedEdge["feed", "time"], DirectedEdge["feed", "time-locale-compat"], DirectedEdge["feed", "utf8-string"], DirectedEdge["feed", "xml"], DirectedEdge["feed-cli", "base"], DirectedEdge["feed-cli", "directory"], DirectedEdge["feed-cli", "feed"], DirectedEdge["feed-cli", "old-locale"], DirectedEdge["feed-cli", "old-time"], DirectedEdge["feed-cli", "time"], DirectedEdge["feed-cli", "xml"], DirectedEdge["feed-collect", "base"], DirectedEdge["feed-collect", "data-default-class"], DirectedEdge["feed-collect", "feed"], DirectedEdge["feed-collect", "http-client"], DirectedEdge["feed-collect", "http-client-tls"], DirectedEdge["feed-collect", "time"], DirectedEdge["feed-collect", "time-interval"], DirectedEdge["feed-collect", "time-units"], DirectedEdge["feed-collect", "timerep"], DirectedEdge["feed-collect", "transformers"], DirectedEdge["feed-collect", "utf8-string"], DirectedEdge["feed-crawl", "base"], DirectedEdge["feed-crawl", "bytestring"], DirectedEdge["feed-crawl", "conduit"], DirectedEdge["feed-crawl", "connection"], DirectedEdge["feed-crawl", "http-conduit"], DirectedEdge["feed-crawl", "http-types"], DirectedEdge["feed-crawl", "hxt"], DirectedEdge["feed-crawl", "network-uri"], DirectedEdge["feed-crawl", "text"], DirectedEdge["feed-crawl", "transformers"], DirectedEdge["feed-gipeda", "aeson"], DirectedEdge["feed-gipeda", "base"], DirectedEdge["feed-gipeda", "binary"], DirectedEdge["feed-gipeda", "bytestring"], DirectedEdge["feed-gipeda", "concurrent-extra"], DirectedEdge["feed-gipeda", "containers"], DirectedEdge["feed-gipeda", "data-hash"], DirectedEdge["feed-gipeda", "directory"], DirectedEdge["feed-gipeda", "distributed-process"], DirectedEdge["feed-gipeda", "distributed-process-async"], DirectedEdge["feed-gipeda", "distributed-process-client-server"], DirectedEdge["feed-gipeda", "distributed-process-extras"], DirectedEdge["feed-gipeda", "distributed-process-simplelocalnet"], DirectedEdge["feed-gipeda", "feed-gipeda"], DirectedEdge["feed-gipeda", "file-embed"], DirectedEdge["feed-gipeda", "filepath"], DirectedEdge["feed-gipeda", "fsnotify"], DirectedEdge["feed-gipeda", "logging"], DirectedEdge["feed-gipeda", "network-uri"], DirectedEdge["feed-gipeda", "optparse-applicative"], DirectedEdge["feed-gipeda", "process"], DirectedEdge["feed-gipeda", "reactive-banana"], DirectedEdge["feed-gipeda", "temporary"], DirectedEdge["feed-gipeda", "text"], DirectedEdge["feed-gipeda", "time"], DirectedEdge["feed-gipeda", "transformers"], DirectedEdge["feed-gipeda", "yaml"], DirectedEdge["feed-translator", "base"], DirectedEdge["feed-translator", "blaze-html"], DirectedEdge["feed-translator", "blaze-markup"], DirectedEdge["feed-translator", "bytestring"], DirectedEdge["feed-translator", "cmdargs"], DirectedEdge["feed-translator", "containers"], DirectedEdge["feed-translator", "cryptohash"], DirectedEdge["feed-translator", "feed"], DirectedEdge["feed-translator", "lens"], DirectedEdge["feed-translator", "naver-translate"], DirectedEdge["feed-translator", "network-uri"], DirectedEdge["feed-translator", "raw-strings-qq"], DirectedEdge["feed-translator", "scotty"], DirectedEdge["feed-translator", "text"], DirectedEdge["feed-translator", "transformers"], DirectedEdge["feed-translator", "wai"], DirectedEdge["feed-translator", "warp"], DirectedEdge["feed-translator", "wreq"], DirectedEdge["feed-translator", "xml"], DirectedEdge["feed2lj", "base"], DirectedEdge["feed2lj", "curl"], DirectedEdge["feed2lj", "directory"], DirectedEdge["feed2lj", "feed"], DirectedEdge["feed2lj", "HTTP"], DirectedEdge["feed2lj", "old-locale"], DirectedEdge["feed2lj", "regex-posix"], DirectedEdge["feed2lj", "tagsoup"], DirectedEdge["feed2lj", "time"], DirectedEdge["feed2lj", "utf8-string"], DirectedEdge["feed2twitter", "base"], DirectedEdge["feed2twitter", "bytestring"], DirectedEdge["feed2twitter", "download-curl"], DirectedEdge["feed2twitter", "feed"], DirectedEdge["feed2twitter", "hs-twitter"], DirectedEdge["feldspar-compiler", "base"], DirectedEdge["feldspar-compiler", "Cabal"], DirectedEdge["feldspar-compiler", "containers"], DirectedEdge["feldspar-compiler", "data-default"], DirectedEdge["feldspar-compiler", "directory"], DirectedEdge["feldspar-compiler", "feldspar-language"], DirectedEdge["feldspar-compiler", "filepath"], DirectedEdge["feldspar-compiler", "ghc-paths"], DirectedEdge["feldspar-compiler", "mtl"], DirectedEdge["feldspar-compiler", "plugins"], DirectedEdge["feldspar-compiler", "plugins-multistage"], DirectedEdge["feldspar-compiler", "pretty"], DirectedEdge["feldspar-compiler", "process"], DirectedEdge["feldspar-compiler", "storable-record"], DirectedEdge["feldspar-compiler", "storable-tuple"], DirectedEdge["feldspar-compiler", "syntactic"], DirectedEdge["feldspar-compiler", "template-haskell"], DirectedEdge["feldspar-language", "array"], DirectedEdge["feldspar-language", "base"], DirectedEdge["feldspar-language", "containers"], DirectedEdge["feldspar-language", "data-default"], DirectedEdge["feldspar-language", "data-hash"], DirectedEdge["feldspar-language", "data-lens"], DirectedEdge["feldspar-language", "deepseq"], DirectedEdge["feldspar-language", "monad-par"], DirectedEdge["feldspar-language", "mtl"], DirectedEdge["feldspar-language", "patch-combinators"], DirectedEdge["feldspar-language", "QuickCheck"], DirectedEdge["feldspar-language", "random"], DirectedEdge["feldspar-language", "syntactic"], DirectedEdge["feldspar-language", "tagged"], DirectedEdge["feldspar-language", "tuple"], DirectedEdge["feldspar-signal", "base"], DirectedEdge["feldspar-signal", "base-compat"], DirectedEdge["feldspar-signal", "feldspar-compiler"], DirectedEdge["feldspar-signal", "feldspar-compiler-shim"], DirectedEdge["feldspar-signal", "feldspar-language"], DirectedEdge["feldspar-signal", "imperative-edsl"], DirectedEdge["feldspar-signal", "mainland-pretty"], DirectedEdge["feldspar-signal", "monadic-edsl-priv"], DirectedEdge["fen2s", "api-opentheory-unicode"], DirectedEdge["fen2s", "base"], DirectedEdge["fen2s", "opentheory-unicode"], DirectedEdge["fences", "base"], DirectedEdge["fenfire", "base"], DirectedEdge["fenfire", "cairo"], DirectedEdge["fenfire", "gtk"], DirectedEdge["fenfire", "harp"], DirectedEdge["fenfire", "HaXml"], DirectedEdge["fenfire", "mtl"], DirectedEdge["fenfire", "template-haskell"], DirectedEdge["fenfire", "unix"], DirectedEdge["fez-conf", "base"], DirectedEdge["fez-conf", "containers"], DirectedEdge["fez-conf", "regex-compat"], DirectedEdge["ffeed", "base"], DirectedEdge["ffeed", "HTTP"], DirectedEdge["ffeed", "json"], DirectedEdge["ffeed", "network"], DirectedEdge["ffeed", "pretty"], DirectedEdge["ffeed", "utf8-string"], DirectedEdge["fficxx", "base"], DirectedEdge["fficxx", "bytestring"], DirectedEdge["fficxx", "Cabal"], DirectedEdge["fficxx", "containers"], DirectedEdge["fficxx", "data-default"], DirectedEdge["fficxx", "directory"], DirectedEdge["fficxx", "either"], DirectedEdge["fficxx", "errors"], DirectedEdge["fficxx", "filepath"], DirectedEdge["fficxx", "hashable"], DirectedEdge["fficxx", "HStringTemplate"], DirectedEdge["fficxx", "lens"], DirectedEdge["fficxx", "mtl"], DirectedEdge["fficxx", "process"], DirectedEdge["fficxx", "split"], DirectedEdge["fficxx", "template-haskell"], DirectedEdge["fficxx", "transformers"], DirectedEdge["fficxx", "unordered-containers"], DirectedEdge["fficxx-runtime", "base"], DirectedEdge["ffmpeg-light", "base"], DirectedEdge["ffmpeg-light", "either"], DirectedEdge["ffmpeg-light", "exceptions"], DirectedEdge["ffmpeg-light", "JuicyPixels"], DirectedEdge["ffmpeg-light", "mtl"], DirectedEdge["ffmpeg-light", "transformers"], DirectedEdge["ffmpeg-light", "vector"], DirectedEdge["ffmpeg-tutorials", "base"], DirectedEdge["ffmpeg-tutorials", "bytestring"], DirectedEdge["ffmpeg-tutorials", "hs-ffmpeg"], DirectedEdge["ffmpeg-tutorials", "SDL"], DirectedEdge["ffmpeg-tutorials", "stm"], DirectedEdge["fft", "array"], DirectedEdge["fft", "base"], DirectedEdge["fft", "carray"], DirectedEdge["fft", "ix-shapable"], DirectedEdge["fft", "storable-complex"], DirectedEdge["fft", "syb"], DirectedEdge["fft", "transformers"], DirectedEdge["fftwRaw", "base"], DirectedEdge["fgl", "array"], DirectedEdge["fgl", "base"], DirectedEdge["fgl", "containers"], DirectedEdge["fgl", "deepseq"], DirectedEdge["fgl", "ghc-prim"], DirectedEdge["fgl", "transformers"], DirectedEdge["fgl-arbitrary", "base"], DirectedEdge["fgl-arbitrary", "fgl"], DirectedEdge["fgl-arbitrary", "QuickCheck"], DirectedEdge["fgl-extras-decompositions", "base"], DirectedEdge["fgl-extras-decompositions", "containers"], DirectedEdge["fgl-extras-decompositions", "fgl"], DirectedEdge["fgl-visualize", "base"], DirectedEdge["fgl-visualize", "dotgen"], DirectedEdge["fgl-visualize", "fgl"], DirectedEdge["fibon", "attoparsec"], DirectedEdge["fibon", "base"], DirectedEdge["fibon", "bytestring"], DirectedEdge["fibon", "bytestring-lexing"], DirectedEdge["fibon", "Cabal"], DirectedEdge["fibon", "cereal"], DirectedEdge["fibon", "containers"], DirectedEdge["fibon", "directory"], DirectedEdge["fibon", "filepath"], DirectedEdge["fibon", "hslogger"], DirectedEdge["fibon", "mtl"], DirectedEdge["fibon", "old-locale"], DirectedEdge["fibon", "old-time"], DirectedEdge["fibon", "process"], DirectedEdge["fibon", "regex-compat"], DirectedEdge["fibon", "statistics"], DirectedEdge["fibon", "syb"], DirectedEdge["fibon", "tabular"], DirectedEdge["fibon", "time"], DirectedEdge["fibon", "vector"], DirectedEdge["fibonacci", "base"], DirectedEdge["fields", "array"], DirectedEdge["fields", "base"], DirectedEdge["fields", "containers"], DirectedEdge["fields", "fclabels"], DirectedEdge["fields", "monads-fd"], DirectedEdge["fields", "transformers"], DirectedEdge["fields-json", "base"], DirectedEdge["fields-json", "base64-bytestring"], DirectedEdge["fields-json", "containers"], DirectedEdge["fields-json", "json"], DirectedEdge["fields-json", "mtl"], DirectedEdge["fields-json", "utf8-string"], DirectedEdge["fieldwise", "base"], DirectedEdge["fieldwise", "template-haskell"], DirectedEdge["fig", "base"], DirectedEdge["fig", "containers"], DirectedEdge["fig", "parsec"], DirectedEdge["fig", "pretty"], DirectedEdge["file-collection", "base"], DirectedEdge["file-collection", "bytestring"], DirectedEdge["file-collection", "clock"], DirectedEdge["file-collection", "directory"], DirectedEdge["file-collection", "zip-archive"], DirectedEdge["file-command-qq", "base"], DirectedEdge["file-command-qq", "parsec"], DirectedEdge["file-command-qq", "process"], DirectedEdge["file-command-qq", "system-filepath"], DirectedEdge["file-command-qq", "template-haskell"], DirectedEdge["file-command-qq", "text"], DirectedEdge["file-embed", "base"], DirectedEdge["file-embed", "bytestring"], DirectedEdge["file-embed", "directory"], DirectedEdge["file-embed", "filepath"], DirectedEdge["file-embed", "template-haskell"], DirectedEdge["file-location", "base"], DirectedEdge["file-location", "containers"], DirectedEdge["file-location", "HUnit"], DirectedEdge["file-location", "lifted-base"], DirectedEdge["file-location", "template-haskell"], DirectedEdge["file-location", "th-orphans"], DirectedEdge["file-location", "transformers"], DirectedEdge["file-modules", "async"], DirectedEdge["file-modules", "base"], DirectedEdge["file-modules", "directory"], DirectedEdge["file-modules", "filepath"], DirectedEdge["file-modules", "haskell-src-exts"], DirectedEdge["file-modules", "MissingH"], DirectedEdge["file-modules", "regex-compat"], DirectedEdge["file-modules", "regex-pcre"], DirectedEdge["filecache", "base"], DirectedEdge["filecache", "exceptions"], DirectedEdge["filecache", "hashable"], DirectedEdge["filecache", "hinotify"], DirectedEdge["filecache", "lens"], DirectedEdge["filecache", "mtl"], DirectedEdge["filecache", "stm"], DirectedEdge["filecache", "strict-base-types"], DirectedEdge["filecache", "unordered-containers"], DirectedEdge["filediff", "base"], DirectedEdge["filediff", "bytestring"], DirectedEdge["filediff", "data-default"], DirectedEdge["filediff", "data-memocombinators"], DirectedEdge["filediff", "directory"], DirectedEdge["filediff", "either"], DirectedEdge["filediff", "hashmap"], DirectedEdge["filediff", "mtl"], DirectedEdge["filediff", "rainbow"], DirectedEdge["filediff", "tasty"], DirectedEdge["filediff", "tasty-hunit"], DirectedEdge["filediff", "text"], DirectedEdge["filediff", "threads"], DirectedEdge["filediff", "time"], DirectedEdge["filediff", "transformers"], DirectedEdge["filediff", "Zora"], DirectedEdge["filelock", "base"], DirectedEdge["filelock", "unix"], DirectedEdge["filemanip", "base"], DirectedEdge["filemanip", "bytestring"], DirectedEdge["filemanip", "directory"], DirectedEdge["filemanip", "filepath"], DirectedEdge["filemanip", "mtl"], DirectedEdge["filemanip", "unix-compat"], DirectedEdge["filepath", "base"], DirectedEdge["filepath-io-access", "base"], DirectedEdge["filepath-io-access", "base-io-access"], DirectedEdge["filepath-io-access", "filepath"], DirectedEdge["filepather", "base"], DirectedEdge["filepather", "comonad"], DirectedEdge["filepather", "comonad-transformers"], DirectedEdge["filepather", "data-lens"], DirectedEdge["filepather", "directory"], DirectedEdge["filepather", "filepath"], DirectedEdge["filepather", "mtl"], DirectedEdge["filepather", "transformers"], DirectedEdge["filestore", "base"], DirectedEdge["filestore", "bytestring"], DirectedEdge["filestore", "containers"], DirectedEdge["filestore", "Diff"], DirectedEdge["filestore", "directory"], DirectedEdge["filestore", "filepath"], DirectedEdge["filestore", "old-locale"], DirectedEdge["filestore", "parsec"], DirectedEdge["filestore", "process"], DirectedEdge["filestore", "split"], DirectedEdge["filestore", "time"], DirectedEdge["filestore", "utf8-string"], DirectedEdge["filestore", "xml"], DirectedEdge["filesystem-conduit", "conduit-combinators"], DirectedEdge["filesystem-conduit", "base"], DirectedEdge["filesystem-conduit", "bytestring"], DirectedEdge["filesystem-conduit", "conduit"], DirectedEdge["filesystem-conduit", "containers"], DirectedEdge["filesystem-conduit", "system-fileio"], DirectedEdge["filesystem-conduit", "system-filepath"], DirectedEdge["filesystem-conduit", "text"], DirectedEdge["filesystem-conduit", "transformers"], DirectedEdge["filesystem-conduit", "unix"], DirectedEdge["filesystem-enumerator", "base"], DirectedEdge["filesystem-enumerator", "enumerator"], DirectedEdge["filesystem-enumerator", "system-fileio"], DirectedEdge["filesystem-enumerator", "system-filepath"], DirectedEdge["filesystem-enumerator", "transformers"], DirectedEdge["filesystem-enumerator", "unix"], DirectedEdge["filesystem-trees", "base"], DirectedEdge["filesystem-trees", "cond"], DirectedEdge["filesystem-trees", "containers"], DirectedEdge["filesystem-trees", "data-lens-light"], DirectedEdge["filesystem-trees", "deepseq"], DirectedEdge["filesystem-trees", "directory"], DirectedEdge["filesystem-trees", "dlist"], DirectedEdge["filesystem-trees", "filepath"], DirectedEdge["filesystem-trees", "mtl"], DirectedEdge["filesystem-trees", "unix"], DirectedEdge["filtrable", "base"], DirectedEdge["final", "base"], DirectedEdge["final", "stm"], DirectedEdge["final", "transformers"], DirectedEdge["find-clumpiness", "aeson"], DirectedEdge["find-clumpiness", "base"], DirectedEdge["find-clumpiness", "bytestring"], DirectedEdge["find-clumpiness", "clumpiness"], DirectedEdge["find-clumpiness", "containers"], DirectedEdge["find-clumpiness", "find-clumpiness"], DirectedEdge["find-clumpiness", "optparse-applicative"], DirectedEdge["find-clumpiness", "text"], DirectedEdge["find-clumpiness", "text-show"], DirectedEdge["find-clumpiness", "tree-fun"], DirectedEdge["find-clumpiness", "unordered-containers"], DirectedEdge["find-clumpiness", "vector"], DirectedEdge["find-conduit", "pipes-files"], DirectedEdge["find-conduit", "attoparsec"], DirectedEdge["find-conduit", "base"], DirectedEdge["find-conduit", "conduit"], DirectedEdge["find-conduit", "conduit-combinators"], DirectedEdge["find-conduit", "conduit-extra"], DirectedEdge["find-conduit", "either"], DirectedEdge["find-conduit", "exceptions"], DirectedEdge["find-conduit", "filepath"], DirectedEdge["find-conduit", "find-conduit"], DirectedEdge["find-conduit", "mmorph"], DirectedEdge["find-conduit", "monad-control"], DirectedEdge["find-conduit", "mtl"], DirectedEdge["find-conduit", "regex-posix"], DirectedEdge["find-conduit", "semigroups"], DirectedEdge["find-conduit", "streaming-commons"], DirectedEdge["find-conduit", "text"], DirectedEdge["find-conduit", "time"], DirectedEdge["find-conduit", "transformers"], DirectedEdge["find-conduit", "transformers-base"], DirectedEdge["find-conduit", "unix"], DirectedEdge["find-conduit", "unix-compat"], DirectedEdge["fingertree", "base"], DirectedEdge["fingertree-psqueue", "base"], DirectedEdge["fingertree-psqueue", "fingertree"], DirectedEdge["fingertree-tf", "base"], DirectedEdge["finite-field", "base"], DirectedEdge["finite-field", "deepseq"], DirectedEdge["finite-field", "hashable"], DirectedEdge["finite-field", "template-haskell"], DirectedEdge["finite-field", "type-level-numbers"], DirectedEdge["finite-typelits", "base"], DirectedEdge["first-and-last", "base"], DirectedEdge["first-class-patterns", "base"], DirectedEdge["first-class-patterns", "transformers"], DirectedEdge["firstify", "base"], DirectedEdge["firstify", "containers"], DirectedEdge["firstify", "directory"], DirectedEdge["firstify", "filepath"], DirectedEdge["firstify", "homeomorphic"], DirectedEdge["firstify", "mtl"], DirectedEdge["firstify", "Safe"], DirectedEdge["firstify", "yhccore"], DirectedEdge["fishfood", "base"], DirectedEdge["fishfood", "Cabal"], DirectedEdge["fishfood", "containers"], DirectedEdge["fishfood", "directory"], DirectedEdge["fishfood", "factory"], DirectedEdge["fishfood", "fishfood"], DirectedEdge["fishfood", "mtl"], DirectedEdge["fishfood", "toolshed"], DirectedEdge["fit", "attoparsec"], DirectedEdge["fit", "base"], DirectedEdge["fit", "bytestring"], DirectedEdge["fit", "containers"], DirectedEdge["fit", "contravariant"], DirectedEdge["fit", "mtl"], DirectedEdge["fit", "text"], DirectedEdge["fitsio", "base"], DirectedEdge["fitsio", "filepath"], DirectedEdge["fitsio", "mtl"], DirectedEdge["fix-imports", "base"], DirectedEdge["fix-imports", "containers"], DirectedEdge["fix-imports", "cpphs"], DirectedEdge["fix-imports", "directory"], DirectedEdge["fix-imports", "filepath"], DirectedEdge["fix-imports", "haskell-src-exts"], DirectedEdge["fix-imports", "process"], DirectedEdge["fix-imports", "split"], DirectedEdge["fix-imports", "text"], DirectedEdge["fix-imports", "uniplate"], DirectedEdge["fix-parser-simple", "base"], DirectedEdge["fix-parser-simple", "mmtl"], DirectedEdge["fix-parser-simple", "mtl"], DirectedEdge["fix-symbols-gitit", "base"], DirectedEdge["fix-symbols-gitit", "containers"], DirectedEdge["fix-symbols-gitit", "gitit"], DirectedEdge["fixed", "base"], DirectedEdge["fixed-length", "base"], DirectedEdge["fixed-length", "non-empty"], DirectedEdge["fixed-length", "tfp"], DirectedEdge["fixed-length", "utility-ht"], DirectedEdge["fixed-list", "base"], DirectedEdge["fixed-point", "base"], DirectedEdge["fixed-point-vector", "base"], DirectedEdge["fixed-point-vector", "fixed-point"], DirectedEdge["fixed-point-vector", "vector"], DirectedEdge["fixed-point-vector-space", "base"], DirectedEdge["fixed-point-vector-space", "fixed-point"], DirectedEdge["fixed-point-vector-space", "vector-space"], DirectedEdge["fixed-precision", "base"], DirectedEdge["fixed-precision", "hmpfr"], DirectedEdge["fixed-precision", "integer-gmp"], DirectedEdge["fixed-precision", "reflection"], DirectedEdge["fixed-precision", "tagged"], DirectedEdge["fixed-precision", "template-haskell"], DirectedEdge["fixed-storable-array", "array"], DirectedEdge["fixed-storable-array", "base"], DirectedEdge["fixed-storable-array", "tagged"], DirectedEdge["fixed-vector", "base"], DirectedEdge["fixed-vector", "deepseq"], DirectedEdge["fixed-vector", "primitive"], DirectedEdge["fixed-vector-binary", "base"], DirectedEdge["fixed-vector-binary", "binary"], DirectedEdge["fixed-vector-binary", "fixed-vector"], DirectedEdge["fixed-vector-cereal", "base"], DirectedEdge["fixed-vector-cereal", "cereal"], DirectedEdge["fixed-vector-cereal", "fixed-vector"], DirectedEdge["fixed-vector-hetero", "base"], DirectedEdge["fixed-vector-hetero", "deepseq"], DirectedEdge["fixed-vector-hetero", "fixed-vector"], DirectedEdge["fixed-vector-hetero", "ghc-prim"], DirectedEdge["fixed-vector-hetero", "primitive"], DirectedEdge["fixed-vector-hetero", "transformers"], DirectedEdge["fixedprec", "base"], DirectedEdge["fixedprec", "random"], DirectedEdge["fixedwidth-hs", "aeson"], DirectedEdge["fixedwidth-hs", "attoparsec"], DirectedEdge["fixedwidth-hs", "base"], DirectedEdge["fixedwidth-hs", "bytestring"], DirectedEdge["fixedwidth-hs", "text"], DirectedEdge["fixfile", "array"], DirectedEdge["fixfile", "base"], DirectedEdge["fixfile", "binary"], DirectedEdge["fixfile", "bytestring"], DirectedEdge["fixfile", "containers"], DirectedEdge["fixfile", "directory"], DirectedEdge["fixfile", "filepath"], DirectedEdge["fixfile", "hashable"], DirectedEdge["fixfile", "hashtables"], DirectedEdge["fixfile", "lens"], DirectedEdge["fixfile", "mtl"], DirectedEdge["fixfile", "temporary"], DirectedEdge["fixfile", "vector"], DirectedEdge["fixhs", "attoparsec"], DirectedEdge["fixhs", "attoparsec-enumerator"], DirectedEdge["fixhs", "base"], DirectedEdge["fixhs", "bytestring"], DirectedEdge["fixhs", "containers"], DirectedEdge["fixhs", "deepseq"], DirectedEdge["fixhs", "dlist"], DirectedEdge["fixhs", "enumerator"], DirectedEdge["fixhs", "HaXml"], DirectedEdge["fixhs", "MissingH"], DirectedEdge["fixhs", "network"], DirectedEdge["fixhs", "old-time"], DirectedEdge["fixhs", "parallel"], DirectedEdge["fixhs", "QuickCheck"], DirectedEdge["fixhs", "text"], DirectedEdge["fixplate", "base"], DirectedEdge["fixplate", "containers"], DirectedEdge["fixplate", "QuickCheck"], DirectedEdge["fixpoint", "base"], DirectedEdge["fixtime", "base"], DirectedEdge["fixtime", "time"], DirectedEdge["fizz-buzz", "base"], DirectedEdge["flaccuraterip", "base"], DirectedEdge["flaccuraterip", "binary"], DirectedEdge["flaccuraterip", "deepseq"], DirectedEdge["flaccuraterip", "HTTP"], DirectedEdge["flaccuraterip", "optparse-applicative"], DirectedEdge["flaccuraterip", "process"], DirectedEdge["flamethrower", "base"], DirectedEdge["flamethrower", "template-haskell"], DirectedEdge["flamethrower", "text"], DirectedEdge["flamingra", "base"], DirectedEdge["flamingra", "either"], DirectedEdge["flamingra", "optparse-applicative"], DirectedEdge["flamingra", "pipes"], DirectedEdge["flat-maybe", "base"], DirectedEdge["flat-maybe", "ghc-prim"], DirectedEdge["flat-mcmc", "base"], DirectedEdge["flat-mcmc", "mcmc-types"], DirectedEdge["flat-mcmc", "monad-par"], DirectedEdge["flat-mcmc", "monad-par-extras"], DirectedEdge["flat-mcmc", "mwc-probability"], DirectedEdge["flat-mcmc", "pipes"], DirectedEdge["flat-mcmc", "primitive"], DirectedEdge["flat-mcmc", "transformers"], DirectedEdge["flat-mcmc", "vector"], DirectedEdge["flat-tex", "base"], DirectedEdge["flat-tex", "directory"], DirectedEdge["flat-tex", "parsec"], DirectedEdge["flexible-defaults", "base"], DirectedEdge["flexible-defaults", "containers"], DirectedEdge["flexible-defaults", "template-haskell"], DirectedEdge["flexible-defaults", "th-extras"], DirectedEdge["flexible-defaults", "transformers"], DirectedEdge["flexible-time", "base"], DirectedEdge["flexible-time", "bytestring"], DirectedEdge["flexible-time", "unix-time"], DirectedEdge["flexible-unlit", "base"], DirectedEdge["flexible-unlit", "bytestring"], DirectedEdge["flexible-unlit", "flexible-unlit"], DirectedEdge["flexible-unlit", "text"], DirectedEdge["flexiwrap", "base"], DirectedEdge["flexiwrap", "data-type"], DirectedEdge["flexiwrap", "mtl"], DirectedEdge["flexiwrap", "QuickCheck"], DirectedEdge["flexiwrap", "special-functors"], DirectedEdge["flexiwrap-smallcheck", "base"], DirectedEdge["flexiwrap-smallcheck", "data-type"], DirectedEdge["flexiwrap-smallcheck", "flexiwrap"], DirectedEdge["flexiwrap-smallcheck", "mtl"], DirectedEdge["flexiwrap-smallcheck", "smallcheck"], DirectedEdge["flexiwrap-smallcheck", "special-functors"], DirectedEdge["flickr", "base"], DirectedEdge["flickr", "filepath"], DirectedEdge["flickr", "HTTP"], DirectedEdge["flickr", "mime"], DirectedEdge["flickr", "network"], DirectedEdge["flickr", "random"], DirectedEdge["flickr", "utf8-string"], DirectedEdge["flickr", "xhtml"], DirectedEdge["flickr", "xml"], DirectedEdge["flippers", "base"], DirectedEdge["flite", "array"], DirectedEdge["flite", "base"], DirectedEdge["flite", "containers"], DirectedEdge["flite", "parsec"], DirectedEdge["flo", "base"], DirectedEdge["flo", "bytestring"], DirectedEdge["flo", "mtl"], DirectedEdge["flo", "mtl-compat"], DirectedEdge["flo", "parsec"], DirectedEdge["flo", "regex-compat"], DirectedEdge["flo", "text"], DirectedEdge["float-binstring", "attoparsec"], DirectedEdge["float-binstring", "base"], DirectedEdge["float-binstring", "split"], DirectedEdge["float-binstring", "text"], DirectedEdge["floating-bits", "base"], DirectedEdge["floatshow", "array"], DirectedEdge["floatshow", "base"], DirectedEdge["floatshow", "integer-gmp"], DirectedEdge["floatshow", "integer-simple"], DirectedEdge["flock", "base"], DirectedEdge["flock", "lifted-base"], DirectedEdge["flock", "monad-control"], DirectedEdge["flock", "transformers"], DirectedEdge["flock", "unix"], DirectedEdge["flow", "base"], DirectedEdge["flow2dot", "base"], DirectedEdge["flow2dot", "containers"], DirectedEdge["flow2dot", "mtl"], DirectedEdge["flow2dot", "parsec"], DirectedEdge["flow2dot", "QuickCheck"], DirectedEdge["flow2dot", "utf8-string"], DirectedEdge["flowdock", "aeson"], DirectedEdge["flowdock", "base"], DirectedEdge["flowdock", "base64-bytestring"], DirectedEdge["flowdock", "bytestring"], DirectedEdge["flowdock", "http-client"], DirectedEdge["flowdock", "http-client-tls"], DirectedEdge["flowdock", "lens"], DirectedEdge["flowdock", "lens-action"], DirectedEdge["flowdock", "mtl"], DirectedEdge["flowdock", "network"], DirectedEdge["flowdock", "pipes"], DirectedEdge["flowdock", "pipes-aeson"], DirectedEdge["flowdock", "pipes-http"], DirectedEdge["flowdock", "pipes-parse"], DirectedEdge["flowdock", "template-haskell"], DirectedEdge["flowdock", "text"], DirectedEdge["flowdock", "unordered-containers"], DirectedEdge["flowdock", "uuid"], DirectedEdge["flowdock-api", "aeson"], DirectedEdge["flowdock-api", "base"], DirectedEdge["flowdock-api", "base64-bytestring"], DirectedEdge["flowdock-api", "blaze-builder"], DirectedEdge["flowdock-api", "bytestring"], DirectedEdge["flowdock-api", "data-default"], DirectedEdge["flowdock-api", "directory"], DirectedEdge["flowdock-api", "filepath"], DirectedEdge["flowdock-api", "HsOpenSSL"], DirectedEdge["flowdock-api", "http-streams"], DirectedEdge["flowdock-api", "http-types"], DirectedEdge["flowdock-api", "io-streams"], DirectedEdge["flowdock-api", "monad-logger"], DirectedEdge["flowdock-api", "MonadCatchIO-transformers"], DirectedEdge["flowdock-api", "optparse-applicative"], DirectedEdge["flowdock-api", "split"], DirectedEdge["flowdock-api", "text"], DirectedEdge["flowdock-api", "time"], DirectedEdge["flowdock-api", "transformers"], DirectedEdge["flowdock-api", "unordered-containers"], DirectedEdge["flowdock-api", "vector"], DirectedEdge["flowdock-rest", "aeson"], DirectedEdge["flowdock-rest", "ansi-wl-pprint"], DirectedEdge["flowdock-rest", "base"], DirectedEdge["flowdock-rest", "binary"], DirectedEdge["flowdock-rest", "binary-orphans"], DirectedEdge["flowdock-rest", "binary-tagged"], DirectedEdge["flowdock-rest", "bytestring"], DirectedEdge["flowdock-rest", "deepseq"], DirectedEdge["flowdock-rest", "exceptions"], DirectedEdge["flowdock-rest", "generics-sop"], DirectedEdge["flowdock-rest", "hashable"], DirectedEdge["flowdock-rest", "http-client"], DirectedEdge["flowdock-rest", "http-client-tls"], DirectedEdge["flowdock-rest", "lens"], DirectedEdge["flowdock-rest", "semigroups"], DirectedEdge["flowdock-rest", "tagged"], DirectedEdge["flowdock-rest", "text"], DirectedEdge["flowdock-rest", "time"], DirectedEdge["flowdock-rest", "unordered-containers"], DirectedEdge["flower", "array"], DirectedEdge["flower", "base"], DirectedEdge["flower", "binary"], DirectedEdge["flower", "bio"], DirectedEdge["flower", "bytestring"], DirectedEdge["flower", "cmdargs"], DirectedEdge["flower", "containers"], DirectedEdge["flower", "mtl"], DirectedEdge["flower", "random"], DirectedEdge["flowlocks-framework", "base"], DirectedEdge["flowlocks-framework", "containers"], DirectedEdge["flowlocks-framework", "syb"], DirectedEdge["flowsim", "array"], DirectedEdge["flowsim", "base"], DirectedEdge["flowsim", "biocore"], DirectedEdge["flowsim", "biofasta"], DirectedEdge["flowsim", "biosff"], DirectedEdge["flowsim", "bytestring"], DirectedEdge["flowsim", "cmdargs"], DirectedEdge["flowsim", "containers"], DirectedEdge["flowsim", "directory"], DirectedEdge["flowsim", "MonadRandom"], DirectedEdge["flowsim", "mtl"], DirectedEdge["flowsim", "random"], DirectedEdge["fltkhs", "base"], DirectedEdge["fltkhs", "bytestring"], DirectedEdge["fltkhs", "directory"], DirectedEdge["fltkhs", "filepath"], DirectedEdge["fltkhs", "fltkhs"], DirectedEdge["fltkhs", "mtl"], DirectedEdge["fltkhs", "parsec"], DirectedEdge["fltkhs-demos", "base"], DirectedEdge["fltkhs-demos", "bytestring"], DirectedEdge["fltkhs-demos", "directory"], DirectedEdge["fltkhs-demos", "fltkhs"], DirectedEdge["fltkhs-demos", "process"], DirectedEdge["fltkhs-demos", "stm"], DirectedEdge["fltkhs-fluid-demos", "base"], DirectedEdge["fltkhs-fluid-demos", "bytestring"], DirectedEdge["fltkhs-fluid-demos", "fltkhs"], DirectedEdge["fltkhs-fluid-examples", "fltkhs-fluid-demos"], DirectedEdge["fltkhs-fluid-examples", "base"], DirectedEdge["fltkhs-fluid-examples", "bytestring"], DirectedEdge["fltkhs-fluid-examples", "fltkhs"], DirectedEdge["fltkhs-hello-world", "base"], DirectedEdge["fltkhs-hello-world", "fltkhs"], DirectedEdge["fluent-logger", "base"], DirectedEdge["fluent-logger", "bytestring"], DirectedEdge["fluent-logger", "cereal"], DirectedEdge["fluent-logger", "containers"], DirectedEdge["fluent-logger", "messagepack"], DirectedEdge["fluent-logger", "network"], DirectedEdge["fluent-logger", "network-socket-options"], DirectedEdge["fluent-logger", "random"], DirectedEdge["fluent-logger", "stm"], DirectedEdge["fluent-logger", "text"], DirectedEdge["fluent-logger", "time"], DirectedEdge["fluent-logger", "vector"], DirectedEdge["fluent-logger-conduit", "base"], DirectedEdge["fluent-logger-conduit", "bytestring"], DirectedEdge["fluent-logger-conduit", "conduit"], DirectedEdge["fluent-logger-conduit", "fluent-logger"], DirectedEdge["fluent-logger-conduit", "resourcet"], DirectedEdge["fluent-logger-conduit", "transformers"], DirectedEdge["fluidsynth", "base"], DirectedEdge["fluidsynth", "bindings-DSL"], DirectedEdge["fluidsynth", "containers"], DirectedEdge["fluidsynth", "directory"], DirectedEdge["fmark", "base"], DirectedEdge["fmark", "directory"], DirectedEdge["fmark", "filepath"], DirectedEdge["fmark", "mtl"], DirectedEdge["fmark", "process"], DirectedEdge["fmark", "Unixutils"], DirectedEdge["fmlist", "base"], DirectedEdge["fn", "base"], DirectedEdge["fn", "blaze-builder"], DirectedEdge["fn", "bytestring"], DirectedEdge["fn", "directory"], DirectedEdge["fn", "filepath"], DirectedEdge["fn", "http-types"], DirectedEdge["fn", "text"], DirectedEdge["fn", "unordered-containers"], DirectedEdge["fn", "wai"], DirectedEdge["fn", "wai-extra"], DirectedEdge["fn-extra", "base"], DirectedEdge["fn-extra", "blaze-builder"], DirectedEdge["fn-extra", "bytestring"], DirectedEdge["fn-extra", "digestive-functors"], DirectedEdge["fn-extra", "directory"], DirectedEdge["fn-extra", "either"], DirectedEdge["fn-extra", "fn"], DirectedEdge["fn-extra", "heist"], DirectedEdge["fn-extra", "http-types"], DirectedEdge["fn-extra", "lens"], DirectedEdge["fn-extra", "mtl"], DirectedEdge["fn-extra", "resourcet"], DirectedEdge["fn-extra", "text"], DirectedEdge["fn-extra", "wai"], DirectedEdge["fn-extra", "wai-extra"], DirectedEdge["fn-extra", "wai-util"], DirectedEdge["fn-extra", "xmlhtml"], DirectedEdge["focus", "base"], DirectedEdge["fold-debounce", "base"], DirectedEdge["fold-debounce", "data-default-class"], DirectedEdge["fold-debounce", "stm"], DirectedEdge["fold-debounce", "stm-delay"], DirectedEdge["fold-debounce", "time"], DirectedEdge["fold-debounce-conduit", "base"], DirectedEdge["fold-debounce-conduit", "conduit"], DirectedEdge["fold-debounce-conduit", "fold-debounce"], DirectedEdge["fold-debounce-conduit", "resourcet"], DirectedEdge["fold-debounce-conduit", "stm"], DirectedEdge["fold-debounce-conduit", "transformers"], DirectedEdge["fold-debounce-conduit", "transformers-base"], DirectedEdge["foldl", "base"], DirectedEdge["foldl", "bytestring"], DirectedEdge["foldl", "comonad"], DirectedEdge["foldl", "containers"], DirectedEdge["foldl", "contravariant"], DirectedEdge["foldl", "mwc-random"], DirectedEdge["foldl", "primitive"], DirectedEdge["foldl", "profunctors"], DirectedEdge["foldl", "text"], DirectedEdge["foldl", "transformers"], DirectedEdge["foldl", "vector"], DirectedEdge["foldl-incremental", "base"], DirectedEdge["foldl-incremental", "containers"], DirectedEdge["foldl-incremental", "deepseq"], DirectedEdge["foldl-incremental", "foldl"], DirectedEdge["foldl-incremental", "histogram-fill"], DirectedEdge["foldl-incremental", "vector"], DirectedEdge["foldl-transduce", "base"], DirectedEdge["foldl-transduce", "bifunctors"], DirectedEdge["foldl-transduce", "bytestring"], DirectedEdge["foldl-transduce", "comonad"], DirectedEdge["foldl-transduce", "containers"], DirectedEdge["foldl-transduce", "foldl"], DirectedEdge["foldl-transduce", "free"], DirectedEdge["foldl-transduce", "monoid-subclasses"], DirectedEdge["foldl-transduce", "profunctors"], DirectedEdge["foldl-transduce", "semigroupoids"], DirectedEdge["foldl-transduce", "semigroups"], DirectedEdge["foldl-transduce", "split"], DirectedEdge["foldl-transduce", "text"], DirectedEdge["foldl-transduce", "transformers"], DirectedEdge["foldl-transduce", "void"], DirectedEdge["foldl-transduce-attoparsec", "attoparsec"], DirectedEdge["foldl-transduce-attoparsec", "base"], DirectedEdge["foldl-transduce-attoparsec", "bytestring"], DirectedEdge["foldl-transduce-attoparsec", "foldl-transduce"], DirectedEdge["foldl-transduce-attoparsec", "monoid-subclasses"], DirectedEdge["foldl-transduce-attoparsec", "text"], DirectedEdge["foldl-transduce-attoparsec", "transformers"], DirectedEdge["folds", "adjunctions"], DirectedEdge["folds", "base"], DirectedEdge["folds", "bifunctors"], DirectedEdge["folds", "comonad"], DirectedEdge["folds", "constraints"], DirectedEdge["folds", "contravariant"], DirectedEdge["folds", "data-reify"], DirectedEdge["folds", "distributive"], DirectedEdge["folds", "lens"], DirectedEdge["folds", "mtl"], DirectedEdge["folds", "pointed"], DirectedEdge["folds", "profunctors"], DirectedEdge["folds", "reflection"], DirectedEdge["folds", "semigroupoids"], DirectedEdge["folds", "semigroups"], DirectedEdge["folds", "tagged"], DirectedEdge["folds", "transformers"], DirectedEdge["folds", "unordered-containers"], DirectedEdge["folds", "vector"], DirectedEdge["folds-common", "base"], DirectedEdge["folds-common", "containers"], DirectedEdge["folds-common", "folds"], DirectedEdge["follower", "ansi-wl-pprint"], DirectedEdge["follower", "base"], DirectedEdge["follower", "cmdargs"], DirectedEdge["follower", "directory"], DirectedEdge["follower", "filepath"], DirectedEdge["follower", "hs-twitter"], DirectedEdge["follower", "old-locale"], DirectedEdge["follower", "strict"], DirectedEdge["follower", "time"], DirectedEdge["foma", "base"], DirectedEdge["font-opengl-basic4x6", "base"], DirectedEdge["font-opengl-basic4x6", "GLFW-b"], DirectedEdge["font-opengl-basic4x6", "OpenGL"], DirectedEdge["foo", "base"], DirectedEdge["foo", "containers"], DirectedEdge["foo", "GLUT"], DirectedEdge["foo", "OpenGL"], DirectedEdge["for-free", "base"], DirectedEdge["for-free", "comonad"], DirectedEdge["for-free", "comonad-transformers"], DirectedEdge["for-free", "containers"], DirectedEdge["for-free", "contravariant"], DirectedEdge["for-free", "transformers"], DirectedEdge["forbidden-fruit", "base"], DirectedEdge["forbidden-fruit", "control-monad-loop"], DirectedEdge["forbidden-fruit", "hashable"], DirectedEdge["forbidden-fruit", "hashtables"], DirectedEdge["forbidden-fruit", "primitive"], DirectedEdge["forbidden-fruit", "transformers"], DirectedEdge["forbidden-fruit", "transformers-base"], DirectedEdge["forbidden-fruit", "vector"], DirectedEdge["force-layout", "base"], DirectedEdge["force-layout", "containers"], DirectedEdge["force-layout", "data-default-class"], DirectedEdge["force-layout", "lens"], DirectedEdge["force-layout", "linear"], DirectedEdge["fordo", "base"], DirectedEdge["fordo", "process"], DirectedEdge["fordo", "transformers"], DirectedEdge["forecast-io", "aeson"], DirectedEdge["forecast-io", "base"], DirectedEdge["forecast-io", "text"], DirectedEdge["foreign-storable-asymmetric", "base"], DirectedEdge["foreign-store", "base"], DirectedEdge["foreign-var", "base"], DirectedEdge["foreign-var", "stm"], DirectedEdge["foreign-var", "transformers"], DirectedEdge["forger", "base"], DirectedEdge["forger", "forger"], DirectedEdge["forkable-monad", "base"], DirectedEdge["forkable-monad", "transformers"], DirectedEdge["formal", "ansi-terminal"], DirectedEdge["formal", "base"], DirectedEdge["formal", "bytestring"], DirectedEdge["formal", "containers"], DirectedEdge["formal", "directory"], DirectedEdge["formal", "file-embed"], DirectedEdge["formal", "HTTP"], DirectedEdge["formal", "indents"], DirectedEdge["formal", "jmacro"], DirectedEdge["formal", "MissingH"], DirectedEdge["formal", "mtl"], DirectedEdge["formal", "network"], DirectedEdge["formal", "pandoc"], DirectedEdge["formal", "parsec"], DirectedEdge["formal", "process"], DirectedEdge["formal", "text"], DirectedEdge["formal", "transformers"], DirectedEdge["formal", "urlencoded"], DirectedEdge["formal", "wl-pprint-text"], DirectedEdge["format", "parsec"], DirectedEdge["format-status", "base"], DirectedEdge["format-status", "data-concurrent-queue"], DirectedEdge["format-status", "old-locale"], DirectedEdge["format-status", "stm"], DirectedEdge["format-status", "text"], DirectedEdge["format-status", "time"], DirectedEdge["formattable", "base"], DirectedEdge["formattable", "bytestring"], DirectedEdge["formattable", "data-default-class"], DirectedEdge["formattable", "old-locale"], DirectedEdge["formattable", "text"], DirectedEdge["formattable", "time"], DirectedEdge["formatting", "base"], DirectedEdge["formatting", "clock"], DirectedEdge["formatting", "old-locale"], DirectedEdge["formatting", "scientific"], DirectedEdge["formatting", "text"], DirectedEdge["formatting", "text-format"], DirectedEdge["formatting", "time"], DirectedEdge["forml", "ansi-terminal"], DirectedEdge["forml", "base"], DirectedEdge["forml", "bytestring"], DirectedEdge["forml", "cereal"], DirectedEdge["forml", "containers"], DirectedEdge["forml", "directory"], DirectedEdge["forml", "file-embed"], DirectedEdge["forml", "ghc-prim"], DirectedEdge["forml", "GraphSCC"], DirectedEdge["forml", "hslogger"], DirectedEdge["forml", "HTTP"], DirectedEdge["forml", "indents"], DirectedEdge["forml", "jmacro"], DirectedEdge["forml", "MissingH"], DirectedEdge["forml", "mtl"], DirectedEdge["forml", "network"], DirectedEdge["forml", "pandoc"], DirectedEdge["forml", "parsec"], DirectedEdge["forml", "process"], DirectedEdge["forml", "text"], DirectedEdge["forml", "urlencoded"], DirectedEdge["forml", "utf8-string"], DirectedEdge["forml", "zlib"], DirectedEdge["formlets", "digestive-functors"], DirectedEdge["formlets", "applicative-extras"], DirectedEdge["formlets", "base"], DirectedEdge["formlets", "blaze-html"], DirectedEdge["formlets", "bytestring"], DirectedEdge["formlets", "syb"], DirectedEdge["formlets", "transformers"], DirectedEdge["formlets", "xhtml"], DirectedEdge["formlets-hsp", "digestive-functors-hsp"], DirectedEdge["formlets-hsp", "applicative-extras"], DirectedEdge["formlets-hsp", "base"], DirectedEdge["formlets-hsp", "formlets"], DirectedEdge["formlets-hsp", "hsp"], DirectedEdge["formlets-hsp", "hsx"], DirectedEdge["formlets-hsp", "mtl"], DirectedEdge["formura", "ansi-wl-pprint"], DirectedEdge["formura", "base"], DirectedEdge["formura", "containers"], DirectedEdge["formura", "either"], DirectedEdge["formura", "formura"], DirectedEdge["formura", "lattices"], DirectedEdge["formura", "lens"], DirectedEdge["formura", "mmorph"], DirectedEdge["formura", "mtl"], DirectedEdge["formura", "parsers"], DirectedEdge["formura", "QuickCheck"], DirectedEdge["formura", "text"], DirectedEdge["formura", "trifecta"], DirectedEdge["formura", "vector"], DirectedEdge["forth-hll", "array-forth"], DirectedEdge["forth-hll", "base"], DirectedEdge["forth-hll", "free"], DirectedEdge["forth-hll", "mtl"], DirectedEdge["foscam-directory", "base"], DirectedEdge["foscam-directory", "directory"], DirectedEdge["foscam-directory", "foscam-filename"], DirectedEdge["foscam-directory", "lens"], DirectedEdge["foscam-directory", "pretty"], DirectedEdge["foscam-directory", "trifecta"], DirectedEdge["foscam-directory", "utf8-string"], DirectedEdge["foscam-filename", "base"], DirectedEdge["foscam-filename", "bifunctors"], DirectedEdge["foscam-filename", "digit"], DirectedEdge["foscam-filename", "lens"], DirectedEdge["foscam-filename", "parsers"], DirectedEdge["foscam-filename", "semigroupoids"], DirectedEdge["foscam-filename", "semigroups"], DirectedEdge["foscam-sort", "base"], DirectedEdge["foscam-sort", "digit"], DirectedEdge["foscam-sort", "directory"], DirectedEdge["foscam-sort", "filepath"], DirectedEdge["foscam-sort", "foscam-directory"], DirectedEdge["foscam-sort", "foscam-filename"], DirectedEdge["foscam-sort", "lens"], DirectedEdge["foscam-sort", "unix"], DirectedEdge["fountain", "base"], DirectedEdge["fountain", "containers"], DirectedEdge["fountain", "random"], DirectedEdge["fpco-api", "aeson"], DirectedEdge["fpco-api", "attoparsec"], DirectedEdge["fpco-api", "base"], DirectedEdge["fpco-api", "base64-bytestring"], DirectedEdge["fpco-api", "blaze-html"], DirectedEdge["fpco-api", "bytestring"], DirectedEdge["fpco-api", "cereal"], DirectedEdge["fpco-api", "containers"], DirectedEdge["fpco-api", "data-default"], DirectedEdge["fpco-api", "deepseq"], DirectedEdge["fpco-api", "deepseq-generics"], DirectedEdge["fpco-api", "directory"], DirectedEdge["fpco-api", "failure"], DirectedEdge["fpco-api", "fay"], DirectedEdge["fpco-api", "filepath"], DirectedEdge["fpco-api", "fpco-api"], DirectedEdge["fpco-api", "ghc-prim"], DirectedEdge["fpco-api", "hashable"], DirectedEdge["fpco-api", "http-conduit"], DirectedEdge["fpco-api", "http-types"], DirectedEdge["fpco-api", "ini"], DirectedEdge["fpco-api", "lifted-async"], DirectedEdge["fpco-api", "lifted-base"], DirectedEdge["fpco-api", "monad-control"], DirectedEdge["fpco-api", "monad-extras"], DirectedEdge["fpco-api", "monad-logger"], DirectedEdge["fpco-api", "mtl"], DirectedEdge["fpco-api", "network"], DirectedEdge["fpco-api", "optparse-applicative"], DirectedEdge["fpco-api", "persistent"], DirectedEdge["fpco-api", "persistent-template"], DirectedEdge["fpco-api", "pretty-show"], DirectedEdge["fpco-api", "process"], DirectedEdge["fpco-api", "random"], DirectedEdge["fpco-api", "resourcet"], DirectedEdge["fpco-api", "safe"], DirectedEdge["fpco-api", "semigroups"], DirectedEdge["fpco-api", "shakespeare"], DirectedEdge["fpco-api", "shakespeare-i18n"], DirectedEdge["fpco-api", "stm"], DirectedEdge["fpco-api", "syb"], DirectedEdge["fpco-api", "template-haskell"], DirectedEdge["fpco-api", "text"], DirectedEdge["fpco-api", "time"], DirectedEdge["fpco-api", "transformers"], DirectedEdge["fpco-api", "transformers-base"], DirectedEdge["fpco-api", "unordered-containers"], DirectedEdge["fpco-api", "vector"], DirectedEdge["fpco-api", "yesod-core"], DirectedEdge["fpipe", "base"], DirectedEdge["fpnla", "base"], DirectedEdge["fpnla-examples", "accelerate"], DirectedEdge["fpnla-examples", "array"], DirectedEdge["fpnla-examples", "base"], DirectedEdge["fpnla-examples", "deepseq"], DirectedEdge["fpnla-examples", "fpnla"], DirectedEdge["fpnla-examples", "hmatrix"], DirectedEdge["fpnla-examples", "linear-algebra-cblas"], DirectedEdge["fpnla-examples", "monad-par"], DirectedEdge["fpnla-examples", "parallel"], DirectedEdge["fpnla-examples", "repa"], DirectedEdge["fpnla-examples", "vector"], DirectedEdge["fptest", "base"], DirectedEdge["fptest", "HUnit"], DirectedEdge["fptest", "parsec"], DirectedEdge["fptest", "parsec3-numbers"], DirectedEdge["fptest", "QuickCheck"], DirectedEdge["fptest", "test-framework"], DirectedEdge["fptest", "test-framework-hunit"], DirectedEdge["fquery", "base"], DirectedEdge["fquery", "directory"], DirectedEdge["fquery", "filepath"], DirectedEdge["fquery", "hashtables"], DirectedEdge["fquery", "parsec"], DirectedEdge["fquery", "process"], DirectedEdge["fquery", "regex-compat"], DirectedEdge["fquery", "unix"], DirectedEdge["fractal", "base"], DirectedEdge["fractals", "base"], DirectedEdge["fraction", "base"], DirectedEdge["fraction", "semigroups"], DirectedEdge["frag", "array"], DirectedEdge["frag", "base"], DirectedEdge["frag", "GLUT"], DirectedEdge["frag", "OpenGL"], DirectedEdge["frag", "random"], DirectedEdge["frame", "base"], DirectedEdge["frame", "bytestring"], DirectedEdge["frame", "containers"], DirectedEdge["frame", "directory"], DirectedEdge["frame", "ghc-binary"], DirectedEdge["frame", "happstack-fastcgi"], DirectedEdge["frame", "happstack-server"], DirectedEdge["frame", "haskelldb"], DirectedEdge["frame", "haskelldb-hdbc"], DirectedEdge["frame", "haskelldb-hdbc-odbc"], DirectedEdge["frame", "HDBC"], DirectedEdge["frame", "HDBC-odbc"], DirectedEdge["frame", "HTTP"], DirectedEdge["frame", "MissingH"], DirectedEdge["frame", "mtl"], DirectedEdge["frame", "old-time"], DirectedEdge["frame", "pretty"], DirectedEdge["frame", "utf8-string"], DirectedEdge["frame-markdown", "base"], DirectedEdge["frame-markdown", "frame"], DirectedEdge["frame-markdown", "pandoc"], DirectedEdge["franchise", "base"], DirectedEdge["freddy", "amqp"], DirectedEdge["freddy", "base"], DirectedEdge["freddy", "broadcast-chan"], DirectedEdge["freddy", "bytestring"], DirectedEdge["freddy", "data-default"], DirectedEdge["freddy", "random"], DirectedEdge["freddy", "text"], DirectedEdge["freddy", "uuid"], DirectedEdge["free", "base"], DirectedEdge["free", "bifunctors"], DirectedEdge["free", "comonad"], DirectedEdge["free", "containers"], DirectedEdge["free", "distributive"], DirectedEdge["free", "exceptions"], DirectedEdge["free", "mtl"], DirectedEdge["free", "prelude-extras"], DirectedEdge["free", "profunctors"], DirectedEdge["free", "semigroupoids"], DirectedEdge["free", "semigroups"], DirectedEdge["free", "template-haskell"], DirectedEdge["free", "transformers"], DirectedEdge["free", "transformers-compat"], DirectedEdge["free-concurrent", "base"], DirectedEdge["free-concurrent", "type-aligned"], DirectedEdge["free-functors", "algebraic-classes"], DirectedEdge["free-functors", "base"], DirectedEdge["free-functors", "comonad"], DirectedEdge["free-functors", "constraints"], DirectedEdge["free-functors", "template-haskell"], DirectedEdge["free-functors", "transformers"], DirectedEdge["free-functors", "void"], DirectedEdge["free-game", "array"], DirectedEdge["free-game", "base"], DirectedEdge["free-game", "boundingboxes"], DirectedEdge["free-game", "colors"], DirectedEdge["free-game", "containers"], DirectedEdge["free-game", "control-bool"], DirectedEdge["free-game", "directory"], DirectedEdge["free-game", "filepath"], DirectedEdge["free-game", "free"], DirectedEdge["free-game", "GLFW-b"], DirectedEdge["free-game", "hashable"], DirectedEdge["free-game", "JuicyPixels"], DirectedEdge["free-game", "JuicyPixels-util"], DirectedEdge["free-game", "lens"], DirectedEdge["free-game", "linear"], DirectedEdge["free-game", "mtl"], DirectedEdge["free-game", "OpenGL"], DirectedEdge["free-game", "OpenGLRaw"], DirectedEdge["free-game", "random"], DirectedEdge["free-game", "reflection"], DirectedEdge["free-game", "template-haskell"], DirectedEdge["free-game", "transformers"], DirectedEdge["free-game", "vector"], DirectedEdge["free-game", "void"], DirectedEdge["free-http", "base"], DirectedEdge["free-http", "bytestring"], DirectedEdge["free-http", "free"], DirectedEdge["free-http", "http-client"], DirectedEdge["free-http", "http-types"], DirectedEdge["free-http", "mtl"], DirectedEdge["free-http", "QuickCheck"], DirectedEdge["free-http", "text"], DirectedEdge["free-http", "time"], DirectedEdge["free-http", "transformers"], DirectedEdge["free-operational", "base"], DirectedEdge["free-operational", "comonad-transformers"], DirectedEdge["free-operational", "free"], DirectedEdge["free-operational", "kan-extensions"], DirectedEdge["free-operational", "mtl"], DirectedEdge["free-operational", "transformers"], DirectedEdge["free-theorems", "base"], DirectedEdge["free-theorems", "containers"], DirectedEdge["free-theorems", "haskell-src"], DirectedEdge["free-theorems", "haskell-src-exts"], DirectedEdge["free-theorems", "mtl"], DirectedEdge["free-theorems", "pretty"], DirectedEdge["free-theorems", "syb"], DirectedEdge["free-theorems-counterexamples", "base"], DirectedEdge["free-theorems-counterexamples", "cgi"], DirectedEdge["free-theorems-counterexamples", "containers"], DirectedEdge["free-theorems-counterexamples", "free-theorems"], DirectedEdge["free-theorems-counterexamples", "haskell-src"], DirectedEdge["free-theorems-counterexamples", "haskell-src-exts"], DirectedEdge["free-theorems-counterexamples", "HUnit"], DirectedEdge["free-theorems-counterexamples", "mtl"], DirectedEdge["free-theorems-counterexamples", "pretty"], DirectedEdge["free-theorems-counterexamples", "syb"], DirectedEdge["free-theorems-counterexamples", "utf8-string"], DirectedEdge["free-theorems-counterexamples", "xhtml"], DirectedEdge["free-theorems-seq", "array"], DirectedEdge["free-theorems-seq", "base"], DirectedEdge["free-theorems-seq", "bytestring"], DirectedEdge["free-theorems-seq", "containers"], DirectedEdge["free-theorems-seq", "free-theorems"], DirectedEdge["free-theorems-seq", "haskell-src"], DirectedEdge["free-theorems-seq", "mtl"], DirectedEdge["free-theorems-seq", "old-locale"], DirectedEdge["free-theorems-seq", "old-time"], DirectedEdge["free-theorems-seq", "parsec"], DirectedEdge["free-theorems-seq", "pretty"], DirectedEdge["free-theorems-seq", "syb"], DirectedEdge["free-theorems-seq", "utf8-string"], DirectedEdge["free-theorems-seq", "xhtml"], DirectedEdge["free-theorems-seq-webui", "base"], DirectedEdge["free-theorems-seq-webui", "cgi"], DirectedEdge["free-theorems-seq-webui", "containers"], DirectedEdge["free-theorems-seq-webui", "free-theorems-seq"], DirectedEdge["free-theorems-seq-webui", "mtl"], DirectedEdge["free-theorems-seq-webui", "network"], DirectedEdge["free-theorems-seq-webui", "pretty"], DirectedEdge["free-theorems-seq-webui", "syb"], DirectedEdge["free-theorems-seq-webui", "utf8-string"], DirectedEdge["free-theorems-seq-webui", "xhtml"], DirectedEdge["free-theorems-webui", "base"], DirectedEdge["free-theorems-webui", "bytestring"], DirectedEdge["free-theorems-webui", "cgi"], DirectedEdge["free-theorems-webui", "csv"], DirectedEdge["free-theorems-webui", "dataenc"], DirectedEdge["free-theorems-webui", "directory"], DirectedEdge["free-theorems-webui", "filepath"], DirectedEdge["free-theorems-webui", "free-theorems"], DirectedEdge["free-theorems-webui", "process"], DirectedEdge["free-theorems-webui", "time"], DirectedEdge["free-theorems-webui", "xhtml"], DirectedEdge["free-vl", "base"], DirectedEdge["free-vl", "free-vl"], DirectedEdge["freekick2", "array"], DirectedEdge["freekick2", "base"], DirectedEdge["freekick2", "binary"], DirectedEdge["freekick2", "bytestring"], DirectedEdge["freekick2", "containers"], DirectedEdge["freekick2", "directory"], DirectedEdge["freekick2", "EdisonCore"], DirectedEdge["freekick2", "filepath"], DirectedEdge["freekick2", "FTGL"], DirectedEdge["freekick2", "mtl"], DirectedEdge["freekick2", "OpenGL"], DirectedEdge["freekick2", "pngload"], DirectedEdge["freekick2", "random"], DirectedEdge["freekick2", "SDL"], DirectedEdge["freekick2", "template-haskell"], DirectedEdge["freenect", "base"], DirectedEdge["freenect", "vector"], DirectedEdge["freer", "base"], DirectedEdge["freer", "freer"], DirectedEdge["freesect", "array"], DirectedEdge["freesect", "base"], DirectedEdge["freesect", "cpphs"], DirectedEdge["freesect", "directory"], DirectedEdge["freesect", "mtl"], DirectedEdge["freesect", "parallel"], DirectedEdge["freesect", "pretty"], DirectedEdge["freesect", "random"], DirectedEdge["freesect", "syb"], DirectedEdge["freesound", "aeson"], DirectedEdge["freesound", "base"], DirectedEdge["freesound", "blaze-builder"], DirectedEdge["freesound", "bytestring"], DirectedEdge["freesound", "data-default"], DirectedEdge["freesound", "filepath"], DirectedEdge["freesound", "http-types"], DirectedEdge["freesound", "lens"], DirectedEdge["freesound", "mtl"], DirectedEdge["freesound", "network"], DirectedEdge["freesound", "network-uri"], DirectedEdge["freesound", "old-locale"], DirectedEdge["freesound", "text"], DirectedEdge["freesound", "time"], DirectedEdge["freesound", "transformers"], DirectedEdge["freesound", "wreq"], DirectedEdge["freetype-simple", "base"], DirectedEdge["freetype-simple", "boundingboxes"], DirectedEdge["freetype-simple", "bytestring"], DirectedEdge["freetype-simple", "linear"], DirectedEdge["freetype2", "array"], DirectedEdge["freetype2", "base"], DirectedEdge["freetype2", "missing-foreign"], DirectedEdge["fresco-binding", "base"], DirectedEdge["fresco-binding", "bytestring"], DirectedEdge["fresco-binding", "cereal"], DirectedEdge["fresco-binding", "containers"], DirectedEdge["fresco-binding", "messagepack"], DirectedEdge["fresco-binding", "text"], DirectedEdge["fresco-binding", "unix"], DirectedEdge["fresh", "base"], DirectedEdge["fresh", "containers"], DirectedEdge["fresh", "haskell-src-exts"], DirectedEdge["fresh", "syb"], DirectedEdge["friday", "base"], DirectedEdge["friday", "convertible"], DirectedEdge["friday", "deepseq"], DirectedEdge["friday", "primitive"], DirectedEdge["friday", "ratio-int"], DirectedEdge["friday", "transformers"], DirectedEdge["friday", "vector"], DirectedEdge["friday-devil", "base"], DirectedEdge["friday-devil", "bytestring"], DirectedEdge["friday-devil", "convertible"], DirectedEdge["friday-devil", "deepseq"], DirectedEdge["friday-devil", "friday"], DirectedEdge["friday-devil", "transformers"], DirectedEdge["friday-devil", "vector"], DirectedEdge["friday-juicypixels", "base"], DirectedEdge["friday-juicypixels", "friday"], DirectedEdge["friday-juicypixels", "JuicyPixels"], DirectedEdge["friday-juicypixels", "vector"], DirectedEdge["friday-scale-dct", "base"], DirectedEdge["friday-scale-dct", "base-compat"], DirectedEdge["friday-scale-dct", "carray"], DirectedEdge["friday-scale-dct", "fft"], DirectedEdge["friday-scale-dct", "friday"], DirectedEdge["friday-scale-dct", "friday-juicypixels"], DirectedEdge["friday-scale-dct", "friday-scale-dct"], DirectedEdge["friday-scale-dct", "JuicyPixels"], DirectedEdge["friday-scale-dct", "JuicyPixels-util"], DirectedEdge["friday-scale-dct", "time"], DirectedEdge["friday-scale-dct", "vector"], DirectedEdge["friendly-time", "base"], DirectedEdge["friendly-time", "old-locale"], DirectedEdge["friendly-time", "time"], DirectedEdge["frisby", "array"], DirectedEdge["frisby", "base"], DirectedEdge["frisby", "containers"], DirectedEdge["frisby", "mtl"], DirectedEdge["frontmatter", "attoparsec"], DirectedEdge["frontmatter", "base"], DirectedEdge["frontmatter", "bytestring"], DirectedEdge["frontmatter", "yaml"], DirectedEdge["frown", "base"], DirectedEdge["frown", "directory"], DirectedEdge["frp-arduino", "base"], DirectedEdge["frp-arduino", "containers"], DirectedEdge["frp-arduino", "mtl"], DirectedEdge["frpnow", "base"], DirectedEdge["frpnow", "containers"], DirectedEdge["frpnow", "mtl"], DirectedEdge["frpnow", "transformers"], DirectedEdge["frpnow-gloss", "base"], DirectedEdge["frpnow-gloss", "containers"], DirectedEdge["frpnow-gloss", "frpnow"], DirectedEdge["frpnow-gloss", "gloss"], DirectedEdge["frpnow-gloss", "mtl"], DirectedEdge["frpnow-gloss", "transformers"], DirectedEdge["frpnow-gtk", "base"], DirectedEdge["frpnow-gtk", "containers"], DirectedEdge["frpnow-gtk", "frpnow"], DirectedEdge["frpnow-gtk", "glib"], DirectedEdge["frpnow-gtk", "gtk"], DirectedEdge["frpnow-gtk", "mtl"], DirectedEdge["frpnow-gtk", "transformers"], DirectedEdge["frquotes", "base"], DirectedEdge["fs-events", "base"], DirectedEdge["fsharp", "base"], DirectedEdge["fsmActions", "base"], DirectedEdge["fsmActions", "containers"], DirectedEdge["fsmActions", "fgl"], DirectedEdge["fsmActions", "filepath"], DirectedEdge["fsmActions", "graphviz"], DirectedEdge["fsmActions", "MissingH"], DirectedEdge["fsmActions", "mtl"], DirectedEdge["fsmActions", "parsec"], DirectedEdge["fsmActions", "pretty"], DirectedEdge["fsnotify", "async"], DirectedEdge["fsnotify", "base"], DirectedEdge["fsnotify", "containers"], DirectedEdge["fsnotify", "directory"], DirectedEdge["fsnotify", "filepath"], DirectedEdge["fsnotify", "hfsevents"], DirectedEdge["fsnotify", "hinotify"], DirectedEdge["fsnotify", "text"], DirectedEdge["fsnotify", "time"], DirectedEdge["fsnotify", "unix-compat"], DirectedEdge["fsnotify", "Win32-notify"], DirectedEdge["fst", "array"], DirectedEdge["fst", "base"], DirectedEdge["fst", "haskeline"], DirectedEdge["fst", "mtl"], DirectedEdge["fst", "transformers"], DirectedEdge["fsutils", "base"], DirectedEdge["fsutils", "directory"], DirectedEdge["fsutils", "filepath"], DirectedEdge["fswatcher", "base"], DirectedEdge["fswatcher", "directory"], DirectedEdge["fswatcher", "fsnotify"], DirectedEdge["fswatcher", "optparse-applicative"], DirectedEdge["fswatcher", "process"], DirectedEdge["fswatcher", "regex-pcre-builtin"], DirectedEdge["fswatcher", "system-filepath"], DirectedEdge["fswatcher", "unix"], DirectedEdge["ftdi", "base"], DirectedEdge["ftdi", "base-unicode-symbols"], DirectedEdge["ftdi", "bytestring"], DirectedEdge["ftdi", "derive"], DirectedEdge["ftdi", "QuickCheck"], DirectedEdge["ftdi", "random"], DirectedEdge["ftdi", "safe"], DirectedEdge["ftdi", "tagged"], DirectedEdge["ftdi", "test-framework"], DirectedEdge["ftdi", "transformers"], DirectedEdge["ftdi", "usb"], DirectedEdge["ftp-conduit", "base"], DirectedEdge["ftp-conduit", "byteorder"], DirectedEdge["ftp-conduit", "bytestring"], DirectedEdge["ftp-conduit", "conduit"], DirectedEdge["ftp-conduit", "MissingH"], DirectedEdge["ftp-conduit", "network"], DirectedEdge["ftp-conduit", "transformers"], DirectedEdge["ftp-conduit", "utf8-string"], DirectedEdge["ftphs", "base"], DirectedEdge["ftphs", "hslogger"], DirectedEdge["ftphs", "HUnit"], DirectedEdge["ftphs", "MissingH"], DirectedEdge["ftphs", "mtl"], DirectedEdge["ftphs", "network"], DirectedEdge["ftphs", "parsec"], DirectedEdge["ftphs", "regex-compat"], DirectedEdge["ftphs", "testpack"], DirectedEdge["ftree", "base"], DirectedEdge["ftree", "ShowF"], DirectedEdge["ftree", "type-unary"], DirectedEdge["ftshell", "base"], DirectedEdge["ftshell", "containers"], DirectedEdge["ftshell", "free-theorems"], DirectedEdge["ftshell", "mtl"], DirectedEdge["ftshell", "pretty"], DirectedEdge["ftshell", "Shellac"], DirectedEdge["ftshell", "Shellac-readline"], DirectedEdge["fugue", "base"], DirectedEdge["full-sessions", "base"], DirectedEdge["full-sessions", "ghc"], DirectedEdge["full-sessions", "network"], DirectedEdge["full-text-search", "array"], DirectedEdge["full-text-search", "base"], DirectedEdge["full-text-search", "bytestring"], DirectedEdge["full-text-search", "Cabal"], DirectedEdge["full-text-search", "containers"], DirectedEdge["full-text-search", "directory"], DirectedEdge["full-text-search", "filepath"], DirectedEdge["full-text-search", "full-text-search"], DirectedEdge["full-text-search", "mtl"], DirectedEdge["full-text-search", "snowball"], DirectedEdge["full-text-search", "split"], DirectedEdge["full-text-search", "tar"], DirectedEdge["full-text-search", "text"], DirectedEdge["full-text-search", "time"], DirectedEdge["full-text-search", "tokenize"], DirectedEdge["full-text-search", "transformers"], DirectedEdge["full-text-search", "vector"], DirectedEdge["fullstop", "base"], DirectedEdge["fullstop", "fullstop"], DirectedEdge["fullstop", "split"], DirectedEdge["funbot", "aeson"], DirectedEdge["funbot", "auto-update"], DirectedEdge["funbot", "base"], DirectedEdge["funbot", "bytestring"], DirectedEdge["funbot", "case-insensitive"], DirectedEdge["funbot", "clock"], DirectedEdge["funbot", "containers"], DirectedEdge["funbot", "data-default-class"], DirectedEdge["funbot", "feed"], DirectedEdge["funbot", "feed-collect"], DirectedEdge["funbot", "formatting"], DirectedEdge["funbot", "funbot-ext-events"], DirectedEdge["funbot", "hashable"], DirectedEdge["funbot", "HTTP"], DirectedEdge["funbot", "http-client"], DirectedEdge["funbot", "http-client-tls"], DirectedEdge["funbot", "http-listen"], DirectedEdge["funbot", "irc-fun-bot"], DirectedEdge["funbot", "irc-fun-client"], DirectedEdge["funbot", "irc-fun-color"], DirectedEdge["funbot", "irc-fun-types"], DirectedEdge["funbot", "json-state"], DirectedEdge["funbot", "network-uri"], DirectedEdge["funbot", "settings"], DirectedEdge["funbot", "tagsoup"], DirectedEdge["funbot", "text"], DirectedEdge["funbot", "time"], DirectedEdge["funbot", "time-interval"], DirectedEdge["funbot", "time-units"], DirectedEdge["funbot", "transformers"], DirectedEdge["funbot", "unordered-containers"], DirectedEdge["funbot", "utf8-string"], DirectedEdge["funbot", "vcs-web-hook-parse"], DirectedEdge["funbot-client", "aeson"], DirectedEdge["funbot-client", "aeson-pretty"], DirectedEdge["funbot-client", "base"], DirectedEdge["funbot-client", "bytestring"], DirectedEdge["funbot-client", "funbot-ext-events"], DirectedEdge["funbot-client", "HTTP"], DirectedEdge["funbot-client", "network"], DirectedEdge["funbot-client", "network-uri"], DirectedEdge["funbot-ext-events", "aeson"], DirectedEdge["funbot-ext-events", "base"], DirectedEdge["funbot-ext-events", "text"], DirectedEdge["funbot-git-hook", "base"], DirectedEdge["funbot-git-hook", "bytestring"], DirectedEdge["funbot-git-hook", "directory"], DirectedEdge["funbot-git-hook", "filepath"], DirectedEdge["funbot-git-hook", "funbot-client"], DirectedEdge["funbot-git-hook", "funbot-ext-events"], DirectedEdge["funbot-git-hook", "hit"], DirectedEdge["funbot-git-hook", "network"], DirectedEdge["funbot-git-hook", "network-uri"], DirectedEdge["funbot-git-hook", "template"], DirectedEdge["funbot-git-hook", "text"], DirectedEdge["funbot-git-hook", "utf8-string"], DirectedEdge["funcmp", "base"], DirectedEdge["funcmp", "filepath"], DirectedEdge["funcmp", "process"], DirectedEdge["funcons-tools", "base"], DirectedEdge["funcons-tools", "bv"], DirectedEdge["funcons-tools", "containers"], DirectedEdge["funcons-tools", "directory"], DirectedEdge["funcons-tools", "funcons-tools"], DirectedEdge["funcons-tools", "mtl"], DirectedEdge["funcons-tools", "multiset"], DirectedEdge["funcons-tools", "parsec"], DirectedEdge["funcons-tools", "split"], DirectedEdge["funcons-tools", "text"], DirectedEdge["funcons-tools", "vector"], DirectedEdge["function-combine", "base"], DirectedEdge["function-combine", "data-type"], DirectedEdge["function-instances-algebra", "base"], DirectedEdge["function-instances-algebra", "numeric-prelude"], DirectedEdge["functional-arrow", "base"], DirectedEdge["functional-arrow", "HList"], DirectedEdge["functional-kmp", "base"], DirectedEdge["functor-apply", "semigroupoids"], DirectedEdge["functor-combo", "base"], DirectedEdge["functor-combo", "base-orphans"], DirectedEdge["functor-combo", "containers"], DirectedEdge["functor-combo", "data-inttrie"], DirectedEdge["functor-combo", "lub"], DirectedEdge["functor-combo", "type-unary"], DirectedEdge["functor-combo", "TypeCompose"], DirectedEdge["functor-infix", "base"], DirectedEdge["functor-infix", "template-haskell"], DirectedEdge["functor-monadic", "base"], DirectedEdge["functor-utils", "base"], DirectedEdge["functor-utils", "ghc-prim"], DirectedEdge["functorm", "base"], DirectedEdge["functors", "base"], DirectedEdge["funion", "base"], DirectedEdge["funion", "bytestring"], DirectedEdge["funion", "directory"], DirectedEdge["funion", "filepath"], DirectedEdge["funion", "HFuse"], DirectedEdge["funion", "unix"], DirectedEdge["funnyprint", "base"], DirectedEdge["funnyprint", "hscolour"], DirectedEdge["funnyprint", "ipprint"], DirectedEdge["funpat", "base"], DirectedEdge["funpat", "mtl"], DirectedEdge["funsat", "array"], DirectedEdge["funsat", "base"], DirectedEdge["funsat", "bimap"], DirectedEdge["funsat", "bitset"], DirectedEdge["funsat", "containers"], DirectedEdge["funsat", "fgl"], DirectedEdge["funsat", "mtl"], DirectedEdge["funsat", "parse-dimacs"], DirectedEdge["funsat", "pretty"], DirectedEdge["funsat", "QuickCheck"], DirectedEdge["funsat", "random"], DirectedEdge["funsat", "time"], DirectedEdge["fusion", "streaming"], DirectedEdge["fusion", "base"], DirectedEdge["fusion", "pipes-safe"], DirectedEdge["fusion", "transformers"], DirectedEdge["fusion", "void"], DirectedEdge["futun", "base"], DirectedEdge["futun", "bytestring"], DirectedEdge["futun", "network"], DirectedEdge["futun", "unix"], DirectedEdge["future", "base"], DirectedEdge["future-resource", "base"], DirectedEdge["future-resource", "transformers"], DirectedEdge["fuzzcheck", "base"], DirectedEdge["fuzzcheck", "lifted-base"], DirectedEdge["fuzzcheck", "monad-control"], DirectedEdge["fuzzcheck", "QuickCheck"], DirectedEdge["fuzzcheck", "random"], DirectedEdge["fuzzcheck", "transformers"], DirectedEdge["fuzzy", "base"], DirectedEdge["fuzzy", "monoid-subclasses"], DirectedEdge["fuzzy-timings", "base"], DirectedEdge["fuzzy-timings", "containers"], DirectedEdge["fuzzy-timings", "glpk-hs"], DirectedEdge["fuzzy-timings", "mtl"], DirectedEdge["fuzzy-timings", "random"], DirectedEdge["fuzzy-timings", "time"], DirectedEdge["fuzzytime", "base"], DirectedEdge["fuzzytime", "cmdargs"], DirectedEdge["fuzzytime", "directory"], DirectedEdge["fuzzytime", "old-time"], DirectedEdge["fuzzytime", "process"], DirectedEdge["fwgl", "base"], DirectedEdge["fwgl", "hashable"], DirectedEdge["fwgl", "transformers"], DirectedEdge["fwgl", "unordered-containers"], DirectedEdge["fwgl", "vect"], DirectedEdge["fwgl", "vector"], DirectedEdge["fwgl", "Yampa"], DirectedEdge["fwgl-glfw", "base"], DirectedEdge["fwgl-glfw", "fwgl"], DirectedEdge["fwgl-glfw", "gl"], DirectedEdge["fwgl-glfw", "GLFW-b"], DirectedEdge["fwgl-glfw", "hashable"], DirectedEdge["fwgl-glfw", "JuicyPixels"], DirectedEdge["fwgl-glfw", "transformers"], DirectedEdge["fwgl-glfw", "unordered-containers"], DirectedEdge["fwgl-glfw", "vect"], DirectedEdge["fwgl-glfw", "vector"], DirectedEdge["fwgl-javascript", "base"], DirectedEdge["fwgl-javascript", "fwgl"], DirectedEdge["fwgl-javascript", "ghcjs-base"], DirectedEdge["fwgl-javascript", "hashable"], DirectedEdge["fwgl-javascript", "unordered-containers"], DirectedEdge["fwgl-javascript", "vect"], DirectedEdge["g-npm", "base"], DirectedEdge["g-npm", "HTTP"], DirectedEdge["g-npm", "json"], DirectedEdge["gact", "base"], DirectedEdge["gact", "biopsl"], DirectedEdge["gact", "bytestring"], DirectedEdge["gact", "cmdargs"], DirectedEdge["gact", "hashable"], DirectedEdge["gact", "unordered-containers"], DirectedEdge["game-of-life", "array"], DirectedEdge["game-of-life", "base"], DirectedEdge["game-of-life", "hscurses"], DirectedEdge["game-of-life", "random"], DirectedEdge["game-of-life", "text"], DirectedEdge["game-probability", "base"], DirectedEdge["game-probability", "containers"], DirectedEdge["game-probability", "probability"], DirectedEdge["game-probability", "random"], DirectedEdge["game-tree", "base"], DirectedEdge["gameclock", "base"], DirectedEdge["gameclock", "cairo"], DirectedEdge["gameclock", "containers"], DirectedEdge["gameclock", "glib"], DirectedEdge["gameclock", "gtk"], DirectedEdge["gameclock", "time"], DirectedEdge["gamma", "base"], DirectedEdge["gamma", "continued-fractions"], DirectedEdge["gamma", "converge"], DirectedEdge["gamma", "template-haskell"], DirectedEdge["gamma", "vector"], DirectedEdge["gang-of-threads", "base"], DirectedEdge["gang-of-threads", "containers"], DirectedEdge["gang-of-threads", "mtl"], DirectedEdge["gang-of-threads", "stm"], DirectedEdge["gang-of-threads", "transformers"], DirectedEdge["garepinoh", "base"], DirectedEdge["garepinoh", "haskeline"], DirectedEdge["garepinoh", "transformers"], DirectedEdge["garsia-wachs", "base"], DirectedEdge["gbu", "base"], DirectedEdge["gbu", "containers"], DirectedEdge["gbu", "fgl"], DirectedEdge["gbu", "Graphalyze"], DirectedEdge["gbu", "mtl"], DirectedEdge["gbu", "regex-posix"], DirectedEdge["gc", "base"], DirectedEdge["gc-monitoring-wai", "aeson"], DirectedEdge["gc-monitoring-wai", "base"], DirectedEdge["gc-monitoring-wai", "blaze-builder"], DirectedEdge["gc-monitoring-wai", "conduit"], DirectedEdge["gc-monitoring-wai", "http-types"], DirectedEdge["gc-monitoring-wai", "text"], DirectedEdge["gc-monitoring-wai", "transformers"], DirectedEdge["gc-monitoring-wai", "unordered-containers"], DirectedEdge["gc-monitoring-wai", "wai"], DirectedEdge["gconf", "base"], DirectedEdge["gconf", "glib"], DirectedEdge["gconf", "text"], DirectedEdge["gd", "base"], DirectedEdge["gd", "bytestring"], DirectedEdge["gdiff", "base"], DirectedEdge["gdiff-ig", "array"], DirectedEdge["gdiff-ig", "base"], DirectedEdge["gdiff-ig", "ghc-prim"], DirectedEdge["gdiff-ig", "instant-generics"], DirectedEdge["gdiff-ig", "template-haskell"], DirectedEdge["gdiff-th", "base"], DirectedEdge["gdiff-th", "containers"], DirectedEdge["gdiff-th", "gdiff"], DirectedEdge["gdiff-th", "mtl"], DirectedEdge["gdiff-th", "template-haskell"], DirectedEdge["gdiff-th", "th-expand-syns"], DirectedEdge["gdiff-th", "uniplate"], DirectedEdge["gdo", "base"], DirectedEdge["gdo", "bytestring"], DirectedEdge["gdo", "containers"], DirectedEdge["gdo", "cryptohash"], DirectedEdge["gdo", "directory"], DirectedEdge["gdo", "filepath"], DirectedEdge["gdo", "process"], DirectedEdge["gdo", "transformers"], DirectedEdge["gearbox", "base"], DirectedEdge["gearbox", "GLUT"], DirectedEdge["gearbox", "OpenGLRaw"], DirectedEdge["gearbox", "Vec"], DirectedEdge["geek", "aeson"], DirectedEdge["geek", "aeson-pretty"], DirectedEdge["geek", "air"], DirectedEdge["geek", "air-extra"], DirectedEdge["geek", "air-th"], DirectedEdge["geek", "base"], DirectedEdge["geek", "bytestring"], DirectedEdge["geek", "containers"], DirectedEdge["geek", "curl"], DirectedEdge["geek", "data-default"], DirectedEdge["geek", "directory"], DirectedEdge["geek", "filepath"], DirectedEdge["geek", "fsnotify"], DirectedEdge["geek", "Glob"], DirectedEdge["geek", "hack2-contrib"], DirectedEdge["geek", "miku"], DirectedEdge["geek", "moe"], DirectedEdge["geek", "mtl"], DirectedEdge["geek", "process"], DirectedEdge["geek", "random"], DirectedEdge["geek", "safe"], DirectedEdge["geek", "system-filepath"], DirectedEdge["geek", "text"], DirectedEdge["geek", "text-icu"], DirectedEdge["geek", "time"], DirectedEdge["geek-server", "air"], DirectedEdge["geek-server", "base"], DirectedEdge["geek-server", "bytestring"], DirectedEdge["geek-server", "data-default"], DirectedEdge["geek-server", "geek"], DirectedEdge["geek-server", "hack2-handler-snap-server"], DirectedEdge["geek-server", "pandoc"], DirectedEdge["geek-server", "text"], DirectedEdge["gelatin", "async"], DirectedEdge["gelatin", "base"], DirectedEdge["gelatin", "bytestring"], DirectedEdge["gelatin", "containers"], DirectedEdge["gelatin", "directory"], DirectedEdge["gelatin", "file-embed"], DirectedEdge["gelatin", "FontyFruity"], DirectedEdge["gelatin", "gelatin"], DirectedEdge["gelatin", "gl"], DirectedEdge["gelatin", "GLFW-b"], DirectedEdge["gelatin", "JuicyPixels"], DirectedEdge["gelatin", "lens"], DirectedEdge["gelatin", "linear"], DirectedEdge["gelatin", "time"], DirectedEdge["gelatin", "vector"], DirectedEdge["gemstone", "array"], DirectedEdge["gemstone", "base"], DirectedEdge["gemstone", "bitmap"], DirectedEdge["gemstone", "bitmap-opengl"], DirectedEdge["gemstone", "containers"], DirectedEdge["gemstone", "FTGL"], DirectedEdge["gemstone", "lens"], DirectedEdge["gemstone", "linear"], DirectedEdge["gemstone", "OpenGL"], DirectedEdge["gemstone", "random"], DirectedEdge["gemstone", "SDL"], DirectedEdge["gemstone", "SDL-image"], DirectedEdge["gemstone", "stb-image"], DirectedEdge["gemstone", "transformers"], DirectedEdge["gencheck", "base"], DirectedEdge["gencheck", "combinat"], DirectedEdge["gencheck", "containers"], DirectedEdge["gencheck", "memoize"], DirectedEdge["gencheck", "random"], DirectedEdge["gencheck", "template-haskell"], DirectedEdge["gencheck", "transformers"], DirectedEdge["gender", "attoparsec"], DirectedEdge["gender", "base"], DirectedEdge["gender", "text"], DirectedEdge["genders", "base"], DirectedEdge["genders", "bytestring"], DirectedEdge["genders", "filepath"], DirectedEdge["genders", "vector"], DirectedEdge["general-prelude", "base"], DirectedEdge["general-prelude", "lens"], DirectedEdge["general-prelude", "pointless-fun"], DirectedEdge["general-prelude", "strict"], DirectedEdge["general-prelude", "system-filepath"], DirectedEdge["generator", "base"], DirectedEdge["generator", "List"], DirectedEdge["generator", "transformers"], DirectedEdge["generators", "base"], DirectedEdge["generators", "mtl"], DirectedEdge["generators", "random"], DirectedEdge["generic-accessors", "base"], DirectedEdge["generic-accessors", "binary"], DirectedEdge["generic-accessors", "cereal"], DirectedEdge["generic-accessors", "lens"], DirectedEdge["generic-accessors", "linear"], DirectedEdge["generic-accessors", "spatial-math"], DirectedEdge["generic-accessors", "TypeCompose"], DirectedEdge["generic-aeson", "aeson"], DirectedEdge["generic-aeson", "attoparsec"], DirectedEdge["generic-aeson", "base"], DirectedEdge["generic-aeson", "generic-deriving"], DirectedEdge["generic-aeson", "ghc-prim"], DirectedEdge["generic-aeson", "mtl"], DirectedEdge["generic-aeson", "tagged"], DirectedEdge["generic-aeson", "text"], DirectedEdge["generic-aeson", "unordered-containers"], DirectedEdge["generic-aeson", "vector"], DirectedEdge["generic-binary", "base"], DirectedEdge["generic-binary", "binary"], DirectedEdge["generic-binary", "bytestring"], DirectedEdge["generic-binary", "ghc-prim"], DirectedEdge["generic-church", "base"], DirectedEdge["generic-deepseq", "base"], DirectedEdge["generic-deepseq", "ghc-prim"], DirectedEdge["generic-deriving", "base"], DirectedEdge["generic-deriving", "containers"], DirectedEdge["generic-deriving", "ghc-prim"], DirectedEdge["generic-deriving", "template-haskell"], DirectedEdge["generic-lucid-scaffold", "webpage"], DirectedEdge["generic-lucid-scaffold", "base"], DirectedEdge["generic-lucid-scaffold", "lucid"], DirectedEdge["generic-lucid-scaffold", "text"], DirectedEdge["generic-maybe", "base"], DirectedEdge["generic-maybe", "ghc-prim"], DirectedEdge["generic-pretty", "ansi-wl-pprint"], DirectedEdge["generic-pretty", "base"], DirectedEdge["generic-pretty", "bytestring"], DirectedEdge["generic-pretty", "containers"], DirectedEdge["generic-pretty", "text"], DirectedEdge["generic-pretty", "vector"], DirectedEdge["generic-random", "ad"], DirectedEdge["generic-random", "base"], DirectedEdge["generic-random", "containers"], DirectedEdge["generic-random", "hashable"], DirectedEdge["generic-random", "hmatrix"], DirectedEdge["generic-random", "MonadRandom"], DirectedEdge["generic-random", "mtl"], DirectedEdge["generic-random", "QuickCheck"], DirectedEdge["generic-random", "transformers"], DirectedEdge["generic-random", "unordered-containers"], DirectedEdge["generic-random", "vector"], DirectedEdge["generic-server", "base"], DirectedEdge["generic-server", "bytestring"], DirectedEdge["generic-server", "network"], DirectedEdge["generic-storable", "base"], DirectedEdge["generic-storable", "ghc-prim"], DirectedEdge["generic-tree", "free"], DirectedEdge["generic-tree", "base"], DirectedEdge["generic-trie", "base"], DirectedEdge["generic-trie", "containers"], DirectedEdge["generic-trie", "transformers"], DirectedEdge["generic-xml", "base"], DirectedEdge["generic-xml", "HaXml"], DirectedEdge["generic-xml", "mtl"], DirectedEdge["generic-xml", "syb-with-class"], DirectedEdge["generic-xml", "template-haskell"], DirectedEdge["generic-xmlpickler", "base"], DirectedEdge["generic-xmlpickler", "generic-deriving"], DirectedEdge["generic-xmlpickler", "ghc-prim"], DirectedEdge["generic-xmlpickler", "hxt"], DirectedEdge["generic-xmlpickler", "text"], DirectedEdge["generics-eot", "base"], DirectedEdge["generics-eot", "markdown-unlit"], DirectedEdge["generics-sop", "base"], DirectedEdge["generics-sop", "ghc-prim"], DirectedEdge["generics-sop", "tagged"], DirectedEdge["generics-sop", "template-haskell"], DirectedEdge["generics-sop-lens", "base"], DirectedEdge["generics-sop-lens", "generics-sop"], DirectedEdge["generics-sop-lens", "lens"], DirectedEdge["genericserialize", "base"], DirectedEdge["genetics", "base"], DirectedEdge["genetics", "random-fu"], DirectedEdge["geni-gui", "array"], DirectedEdge["geni-gui", "base"], DirectedEdge["geni-gui", "cabal-macosx"], DirectedEdge["geni-gui", "containers"], DirectedEdge["geni-gui", "directory"], DirectedEdge["geni-gui", "filepath"], DirectedEdge["geni-gui", "GenI"], DirectedEdge["geni-gui", "geni-gui"], DirectedEdge["geni-gui", "graphviz"], DirectedEdge["geni-gui", "hslogger"], DirectedEdge["geni-gui", "json"], DirectedEdge["geni-gui", "mtl"], DirectedEdge["geni-gui", "process"], DirectedEdge["geni-gui", "text"], DirectedEdge["geni-gui", "transformers"], DirectedEdge["geni-gui", "wx"], DirectedEdge["geni-gui", "wxcore"], DirectedEdge["geni-gui", "yaml-light"], DirectedEdge["geni-util", "base"], DirectedEdge["geni-util", "blaze-html"], DirectedEdge["geni-util", "blaze-markup"], DirectedEdge["geni-util", "bytestring"], DirectedEdge["geni-util", "cmdargs"], DirectedEdge["geni-util", "directory"], DirectedEdge["geni-util", "filepath"], DirectedEdge["geni-util", "GenI"], DirectedEdge["geni-util", "geni-util"], DirectedEdge["geni-util", "geniserver"], DirectedEdge["geni-util", "HTTP"], DirectedEdge["geni-util", "http-streams"], DirectedEdge["geni-util", "io-streams"], DirectedEdge["geni-util", "json"], DirectedEdge["geni-util", "text"], DirectedEdge["geniconvert", "base"], DirectedEdge["geniconvert", "binary"], DirectedEdge["geniconvert", "containers"], DirectedEdge["geniconvert", "GenI"], DirectedEdge["geniconvert", "HaXml"], DirectedEdge["geniconvert", "HUnit"], DirectedEdge["geniconvert", "mtl"], DirectedEdge["geniconvert", "parsec"], DirectedEdge["geniconvert", "QuickCheck"], DirectedEdge["geniconvert", "utf8-string"], DirectedEdge["genifunctors", "base"], DirectedEdge["genifunctors", "containers"], DirectedEdge["genifunctors", "mtl"], DirectedEdge["genifunctors", "template-haskell"], DirectedEdge["geniplate", "base"], DirectedEdge["geniplate", "mtl"], DirectedEdge["geniplate", "template-haskell"], DirectedEdge["geniplate-mirror", "base"], DirectedEdge["geniplate-mirror", "mtl"], DirectedEdge["geniplate-mirror", "template-haskell"], DirectedEdge["geniserver", "base"], DirectedEdge["geniserver", "bytestring"], DirectedEdge["geniserver", "cmdargs"], DirectedEdge["geniserver", "GenI"], DirectedEdge["geniserver", "geniserver"], DirectedEdge["geniserver", "http-types"], DirectedEdge["geniserver", "json"], DirectedEdge["geniserver", "snap-core"], DirectedEdge["geniserver", "snap-server"], DirectedEdge["geniserver", "text"], DirectedEdge["geniserver", "transformers"], DirectedEdge["geniserver", "utf8-string"], DirectedEdge["genprog", "base"], DirectedEdge["genprog", "MonadRandom"], DirectedEdge["genprog", "syb"], DirectedEdge["genprog", "syz"], DirectedEdge["gentlemark", "base"], DirectedEdge["gentlemark", "parsec"], DirectedEdge["gentlemark", "transformers"], DirectedEdge["geo-resolver", "aeson"], DirectedEdge["geo-resolver", "base"], DirectedEdge["geo-resolver", "blaze-builder"], DirectedEdge["geo-resolver", "bytestring"], DirectedEdge["geo-resolver", "http-conduit"], DirectedEdge["geo-resolver", "http-types"], DirectedEdge["geo-resolver", "text"], DirectedEdge["geo-resolver", "unordered-containers"], DirectedEdge["geo-uk", "array"], DirectedEdge["geo-uk", "base"], DirectedEdge["geo-uk", "binary"], DirectedEdge["geo-uk", "bytestring"], DirectedEdge["geo-uk", "bzlib"], DirectedEdge["geo-uk", "file-embed"], DirectedEdge["geo-uk", "template-haskell"], DirectedEdge["geo-uk", "th-lift"], DirectedEdge["geocalc", "base"], DirectedEdge["geocode-google", "base"], DirectedEdge["geocode-google", "containers"], DirectedEdge["geocode-google", "hjson"], DirectedEdge["geocode-google", "HTTP"], DirectedEdge["geocode-google", "network"], DirectedEdge["geocode-google", "network-uri"], DirectedEdge["geodetic", "base"], DirectedEdge["geodetic", "coordinate"], DirectedEdge["geodetic", "lens"], DirectedEdge["geodetic", "optional"], DirectedEdge["geodetic", "radian"], DirectedEdge["geodetics", "array"], DirectedEdge["geodetics", "base"], DirectedEdge["geodetics", "dimensional"], DirectedEdge["geohash", "array"], DirectedEdge["geohash", "base"], DirectedEdge["geoip2", "base"], DirectedEdge["geoip2", "bytestring"], DirectedEdge["geoip2", "cereal"], DirectedEdge["geoip2", "containers"], DirectedEdge["geoip2", "iproute"], DirectedEdge["geoip2", "mmap"], DirectedEdge["geoip2", "reinterpret-cast"], DirectedEdge["geoip2", "text"], DirectedEdge["geojson", "aeson"], DirectedEdge["geojson", "base"], DirectedEdge["geojson", "lens"], DirectedEdge["geojson", "semigroups"], DirectedEdge["geojson", "text"], DirectedEdge["geojson", "transformers"], DirectedEdge["geojson", "validation"], DirectedEdge["geojson", "vector"], DirectedEdge["geojson-types", "aeson"], DirectedEdge["geojson-types", "base"], DirectedEdge["geojson-types", "bson"], DirectedEdge["geojson-types", "bytestring"], DirectedEdge["geojson-types", "lens"], DirectedEdge["geojson-types", "text"], DirectedEdge["geom2d", "base"], DirectedEdge["geom2d", "linear"], DirectedEdge["geom2d", "QuickCheck"], DirectedEdge["getemx", "base"], DirectedEdge["getemx", "curl"], DirectedEdge["getemx", "directory"], DirectedEdge["getemx", "filepath"], DirectedEdge["getemx", "hxt"], DirectedEdge["getemx", "mtl"], DirectedEdge["getemx", "old-locale"], DirectedEdge["getemx", "process"], DirectedEdge["getemx", "time"], DirectedEdge["getflag", "base"], DirectedEdge["getopt-generics", "base"], DirectedEdge["getopt-generics", "base-compat"], DirectedEdge["getopt-generics", "base-orphans"], DirectedEdge["getopt-generics", "generics-sop"], DirectedEdge["getopt-generics", "tagged"], DirectedEdge["getopt-simple", "base"], DirectedEdge["getopt-simple", "containers"], DirectedEdge["gf", "array"], DirectedEdge["gf", "base"], DirectedEdge["gf", "binary"], DirectedEdge["gf", "bytestring"], DirectedEdge["gf", "cgi"], DirectedEdge["gf", "containers"], DirectedEdge["gf", "directory"], DirectedEdge["gf", "exceptions"], DirectedEdge["gf", "filepath"], DirectedEdge["gf", "gf"], DirectedEdge["gf", "haskeline"], DirectedEdge["gf", "httpd-shed"], DirectedEdge["gf", "json"], DirectedEdge["gf", "lifted-base"], DirectedEdge["gf", "mtl"], DirectedEdge["gf", "network"], DirectedEdge["gf", "network-uri"], DirectedEdge["gf", "old-locale"], DirectedEdge["gf", "parallel"], DirectedEdge["gf", "pretty"], DirectedEdge["gf", "process"], DirectedEdge["gf", "random"], DirectedEdge["gf", "terminfo"], DirectedEdge["gf", "time"], DirectedEdge["gf", "time-compat"], DirectedEdge["gf", "unix"], DirectedEdge["gf", "utf8-string"], DirectedEdge["ggtsTC", "base"], DirectedEdge["ggtsTC", "containers"], DirectedEdge["ggtsTC", "parsec"], DirectedEdge["ghc-boot", "base"], DirectedEdge["ghc-boot", "binary"], DirectedEdge["ghc-boot", "bytestring"], DirectedEdge["ghc-boot", "directory"], DirectedEdge["ghc-boot", "filepath"], DirectedEdge["ghc-boot", "ghc-boot-th"], DirectedEdge["ghc-boot-th", "base"], DirectedEdge["ghc-core", "base"], DirectedEdge["ghc-core", "colorize-haskell"], DirectedEdge["ghc-core", "directory"], DirectedEdge["ghc-core", "filepath"], DirectedEdge["ghc-core", "pcre-light"], DirectedEdge["ghc-core", "process"], DirectedEdge["ghc-core-html", "base"], DirectedEdge["ghc-core-html", "blaze-html"], DirectedEdge["ghc-core-html", "bytestring"], DirectedEdge["ghc-core-html", "containers"], DirectedEdge["ghc-core-html", "mtl"], DirectedEdge["ghc-core-html", "parsec"], DirectedEdge["ghc-core-html", "process"], DirectedEdge["ghc-datasize", "base"], DirectedEdge["ghc-datasize", "ghc-heap-view"], DirectedEdge["ghc-dump-tree", "aeson"], DirectedEdge["ghc-dump-tree", "base"], DirectedEdge["ghc-dump-tree", "bytestring"], DirectedEdge["ghc-dump-tree", "ghc"], DirectedEdge["ghc-dump-tree", "ghc-dump-tree"], DirectedEdge["ghc-dump-tree", "optparse-applicative"], DirectedEdge["ghc-dump-tree", "pretty"], DirectedEdge["ghc-dump-tree", "pretty-show"], DirectedEdge["ghc-dump-tree", "process"], DirectedEdge["ghc-dump-tree", "unordered-containers"], DirectedEdge["ghc-dump-tree", "vector"], DirectedEdge["ghc-dup", "base"], DirectedEdge["ghc-dup", "ghc"], DirectedEdge["ghc-events", "array"], DirectedEdge["ghc-events", "base"], DirectedEdge["ghc-events", "binary"], DirectedEdge["ghc-events", "bytestring"], DirectedEdge["ghc-events", "containers"], DirectedEdge["ghc-events", "mtl"], DirectedEdge["ghc-events-analyze", "base"], DirectedEdge["ghc-events-analyze", "containers"], DirectedEdge["ghc-events-analyze", "diagrams-lib"], DirectedEdge["ghc-events-analyze", "diagrams-svg"], DirectedEdge["ghc-events-analyze", "filepath"], DirectedEdge["ghc-events-analyze", "ghc-events"], DirectedEdge["ghc-events-analyze", "lens"], DirectedEdge["ghc-events-analyze", "mtl"], DirectedEdge["ghc-events-analyze", "optparse-applicative"], DirectedEdge["ghc-events-analyze", "parsec"], DirectedEdge["ghc-events-analyze", "SVGFonts"], DirectedEdge["ghc-events-analyze", "template-haskell"], DirectedEdge["ghc-events-analyze", "th-lift"], DirectedEdge["ghc-events-analyze", "transformers"], DirectedEdge["ghc-events-parallel", "array"], DirectedEdge["ghc-events-parallel", "base"], DirectedEdge["ghc-events-parallel", "binary"], DirectedEdge["ghc-events-parallel", "bytestring"], DirectedEdge["ghc-events-parallel", "containers"], DirectedEdge["ghc-events-parallel", "transformers"], DirectedEdge["ghc-exactprint", "base"], DirectedEdge["ghc-exactprint", "bytestring"], DirectedEdge["ghc-exactprint", "containers"], DirectedEdge["ghc-exactprint", "Diff"], DirectedEdge["ghc-exactprint", "directory"], DirectedEdge["ghc-exactprint", "filemanip"], DirectedEdge["ghc-exactprint", "filepath"], DirectedEdge["ghc-exactprint", "free"], DirectedEdge["ghc-exactprint", "ghc"], DirectedEdge["ghc-exactprint", "ghc-boot"], DirectedEdge["ghc-exactprint", "ghc-exactprint"], DirectedEdge["ghc-exactprint", "ghc-paths"], DirectedEdge["ghc-exactprint", "HUnit"], DirectedEdge["ghc-exactprint", "mtl"], DirectedEdge["ghc-exactprint", "syb"], DirectedEdge["ghc-exactprint", "temporary"], DirectedEdge["ghc-exactprint", "text"], DirectedEdge["ghc-exactprint", "time"], DirectedEdge["ghc-exactprint", "turtle"], DirectedEdge["ghc-gc-tune", "base"], DirectedEdge["ghc-gc-tune", "directory"], DirectedEdge["ghc-gc-tune", "filepath"], DirectedEdge["ghc-gc-tune", "process"], DirectedEdge["ghc-generic-instances", "base"], DirectedEdge["ghc-generic-instances", "ghc"], DirectedEdge["ghc-heap-view", "base"], DirectedEdge["ghc-heap-view", "binary"], DirectedEdge["ghc-heap-view", "bytestring"], DirectedEdge["ghc-heap-view", "containers"], DirectedEdge["ghc-heap-view", "ghc"], DirectedEdge["ghc-heap-view", "template-haskell"], DirectedEdge["ghc-heap-view", "transformers"], DirectedEdge["ghc-imported-from", "base"], DirectedEdge["ghc-imported-from", "bytestring"], DirectedEdge["ghc-imported-from", "Cabal"], DirectedEdge["ghc-imported-from", "containers"], DirectedEdge["ghc-imported-from", "directory"], DirectedEdge["ghc-imported-from", "exceptions"], DirectedEdge["ghc-imported-from", "filepath"], DirectedEdge["ghc-imported-from", "ghc"], DirectedEdge["ghc-imported-from", "ghc-imported-from"], DirectedEdge["ghc-imported-from", "ghc-mod"], DirectedEdge["ghc-imported-from", "ghc-paths"], DirectedEdge["ghc-imported-from", "ghc-syb-utils"], DirectedEdge["ghc-imported-from", "haddock-api"], DirectedEdge["ghc-imported-from", "hspec"], DirectedEdge["ghc-imported-from", "hspec-discover"], DirectedEdge["ghc-imported-from", "monad-journal"], DirectedEdge["ghc-imported-from", "mtl"], DirectedEdge["ghc-imported-from", "optparse-applicative"], DirectedEdge["ghc-imported-from", "parsec"], DirectedEdge["ghc-imported-from", "pipes-transduce"], DirectedEdge["ghc-imported-from", "process"], DirectedEdge["ghc-imported-from", "process-streaming"], DirectedEdge["ghc-imported-from", "safe"], DirectedEdge["ghc-imported-from", "syb"], DirectedEdge["ghc-imported-from", "transformers"], DirectedEdge["ghc-make", "base"], DirectedEdge["ghc-make", "process"], DirectedEdge["ghc-make", "shake"], DirectedEdge["ghc-make", "unordered-containers"], DirectedEdge["ghc-man-completion", "base"], DirectedEdge["ghc-man-completion", "parsec"], DirectedEdge["ghc-man-completion", "process"], DirectedEdge["ghc-mod", "base"], DirectedEdge["ghc-mod", "binary"], DirectedEdge["ghc-mod", "bytestring"], DirectedEdge["ghc-mod", "cabal-helper"], DirectedEdge["ghc-mod", "containers"], DirectedEdge["ghc-mod", "convertible"], DirectedEdge["ghc-mod", "deepseq"], DirectedEdge["ghc-mod", "directory"], DirectedEdge["ghc-mod", "djinn-ghc"], DirectedEdge["ghc-mod", "extra"], DirectedEdge["ghc-mod", "fclabels"], DirectedEdge["ghc-mod", "filepath"], DirectedEdge["ghc-mod", "ghc"], DirectedEdge["ghc-mod", "ghc-mod"], DirectedEdge["ghc-mod", "ghc-paths"], DirectedEdge["ghc-mod", "ghc-prim"], DirectedEdge["ghc-mod", "ghc-syb-utils"], DirectedEdge["ghc-mod", "haskell-src-exts"], DirectedEdge["ghc-mod", "hlint"], DirectedEdge["ghc-mod", "monad-control"], DirectedEdge["ghc-mod", "monad-journal"], DirectedEdge["ghc-mod", "mtl"], DirectedEdge["ghc-mod", "old-time"], DirectedEdge["ghc-mod", "optparse-applicative"], DirectedEdge["ghc-mod", "pipes"], DirectedEdge["ghc-mod", "pretty"], DirectedEdge["ghc-mod", "process"], DirectedEdge["ghc-mod", "random"], DirectedEdge["ghc-mod", "safe"], DirectedEdge["ghc-mod", "split"], DirectedEdge["ghc-mod", "syb"], DirectedEdge["ghc-mod", "temporary"], DirectedEdge["ghc-mod", "text"], DirectedEdge["ghc-mod", "time"], DirectedEdge["ghc-mod", "transformers"], DirectedEdge["ghc-mod", "transformers-base"], DirectedEdge["ghc-mtl", "base"], DirectedEdge["ghc-mtl", "exceptions"], DirectedEdge["ghc-mtl", "extensible-exceptions"], DirectedEdge["ghc-mtl", "ghc"], DirectedEdge["ghc-mtl", "mtl"], DirectedEdge["ghc-options", "base"], DirectedEdge["ghc-options", "bin-package-db"], DirectedEdge["ghc-options", "Cabal"], DirectedEdge["ghc-options", "directory"], DirectedEdge["ghc-options", "filepath"], DirectedEdge["ghc-options", "ghc"], DirectedEdge["ghc-options", "ghc-paths"], DirectedEdge["ghc-options", "process"], DirectedEdge["ghc-options", "transformers"], DirectedEdge["ghc-options", "unix"], DirectedEdge["ghc-parmake", "array"], DirectedEdge["ghc-parmake", "base"], DirectedEdge["ghc-parmake", "containers"], DirectedEdge["ghc-parmake", "directory"], DirectedEdge["ghc-parmake", "filepath"], DirectedEdge["ghc-parmake", "ghc-parmake"], DirectedEdge["ghc-parmake", "process"], DirectedEdge["ghc-parmake", "temporary"], DirectedEdge["ghc-parser", "base"], DirectedEdge["ghc-parser", "ghc"], DirectedEdge["ghc-paths", "base"], DirectedEdge["ghc-pkg-autofix", "base"], DirectedEdge["ghc-pkg-autofix", "Cabal"], DirectedEdge["ghc-pkg-autofix", "cmdargs"], DirectedEdge["ghc-pkg-autofix", "filepath"], DirectedEdge["ghc-pkg-autofix", "parsec"], DirectedEdge["ghc-pkg-autofix", "process"], DirectedEdge["ghc-pkg-autofix", "split"], DirectedEdge["ghc-pkg-lib", "base"], DirectedEdge["ghc-pkg-lib", "Cabal"], DirectedEdge["ghc-pkg-lib", "directory"], DirectedEdge["ghc-pkg-lib", "filepath"], DirectedEdge["ghc-pkg-lib", "ghc"], DirectedEdge["ghc-pkg-lib", "ghc-paths"], DirectedEdge["ghc-prim", "rts"], DirectedEdge["ghc-prof-flamegraph", "base"], DirectedEdge["ghc-prof-flamegraph", "ghc-prof-flamegraph"], DirectedEdge["ghc-session", "base"], DirectedEdge["ghc-session", "exceptions"], DirectedEdge["ghc-session", "ghc"], DirectedEdge["ghc-session", "ghc-mtl"], DirectedEdge["ghc-session", "ghc-paths"], DirectedEdge["ghc-session", "ghc-session"], DirectedEdge["ghc-session", "transformers"], DirectedEdge["ghc-session", "transformers-compat"], DirectedEdge["ghc-simple", "base"], DirectedEdge["ghc-simple", "binary"], DirectedEdge["ghc-simple", "bytestring"], DirectedEdge["ghc-simple", "directory"], DirectedEdge["ghc-simple", "filepath"], DirectedEdge["ghc-simple", "ghc"], DirectedEdge["ghc-simple", "ghc-paths"], DirectedEdge["ghc-srcspan-plugin", "array"], DirectedEdge["ghc-srcspan-plugin", "base"], DirectedEdge["ghc-srcspan-plugin", "containers"], DirectedEdge["ghc-srcspan-plugin", "ghc"], DirectedEdge["ghc-srcspan-plugin", "hpc"], DirectedEdge["ghc-syb", "base"], DirectedEdge["ghc-syb", "ghc"], DirectedEdge["ghc-syb-utils", "base"], DirectedEdge["ghc-syb-utils", "ghc"], DirectedEdge["ghc-syb-utils", "ghc-syb"], DirectedEdge["ghc-syb-utils", "syb"], DirectedEdge["ghc-tcplugins-extra", "base"], DirectedEdge["ghc-tcplugins-extra", "ghc"], DirectedEdge["ghc-time-alloc-prof", "attoparsec"], DirectedEdge["ghc-time-alloc-prof", "base"], DirectedEdge["ghc-time-alloc-prof", "containers"], DirectedEdge["ghc-time-alloc-prof", "ghc-time-alloc-prof"], DirectedEdge["ghc-time-alloc-prof", "text"], DirectedEdge["ghc-time-alloc-prof", "time"], DirectedEdge["ghc-typelits-extra", "base"], DirectedEdge["ghc-typelits-extra", "ghc"], DirectedEdge["ghc-typelits-extra", "ghc-tcplugins-extra"], DirectedEdge["ghc-typelits-natnormalise", "base"], DirectedEdge["ghc-typelits-natnormalise", "ghc"], DirectedEdge["ghc-typelits-natnormalise", "ghc-tcplugins-extra"], DirectedEdge["ghc-vis", "base"], DirectedEdge["ghc-vis", "cairo"], DirectedEdge["ghc-vis", "containers"], DirectedEdge["ghc-vis", "deepseq"], DirectedEdge["ghc-vis", "fgl"], DirectedEdge["ghc-vis", "ghc-heap-view"], DirectedEdge["ghc-vis", "graphviz"], DirectedEdge["ghc-vis", "mtl"], DirectedEdge["ghc-vis", "svgcairo"], DirectedEdge["ghc-vis", "text"], DirectedEdge["ghc-vis", "transformers"], DirectedEdge["ghc-vis", "xdot"], DirectedEdge["ghci", "array"], DirectedEdge["ghci", "base"], DirectedEdge["ghci", "binary"], DirectedEdge["ghci", "bytestring"], DirectedEdge["ghci", "containers"], DirectedEdge["ghci", "deepseq"], DirectedEdge["ghci", "filepath"], DirectedEdge["ghci", "ghc-boot"], DirectedEdge["ghci", "template-haskell"], DirectedEdge["ghci", "transformers"], DirectedEdge["ghci", "unix"], DirectedEdge["ghci-diagrams", "activehs"], DirectedEdge["ghci-diagrams", "base"], DirectedEdge["ghci-diagrams", "cairo"], DirectedEdge["ghci-diagrams", "colour"], DirectedEdge["ghci-diagrams", "diagrams"], DirectedEdge["ghci-diagrams", "gtk"], DirectedEdge["ghci-haskeline", "array"], DirectedEdge["ghci-haskeline", "base"], DirectedEdge["ghci-haskeline", "bytestring"], DirectedEdge["ghci-haskeline", "directory"], DirectedEdge["ghci-haskeline", "filepath"], DirectedEdge["ghci-haskeline", "ghc"], DirectedEdge["ghci-haskeline", "ghc-paths"], DirectedEdge["ghci-haskeline", "haskeline"], DirectedEdge["ghci-haskeline", "mtl"], DirectedEdge["ghci-haskeline", "process"], DirectedEdge["ghci-haskeline", "unix"], DirectedEdge["ghci-lib", "base"], DirectedEdge["ghci-lib", "ghc"], DirectedEdge["ghci-lib", "MissingH"], DirectedEdge["ghci-ng", "array"], DirectedEdge["ghci-ng", "base"], DirectedEdge["ghci-ng", "bytestring"], DirectedEdge["ghci-ng", "containers"], DirectedEdge["ghci-ng", "directory"], DirectedEdge["ghci-ng", "filepath"], DirectedEdge["ghci-ng", "ghc"], DirectedEdge["ghci-ng", "ghc-paths"], DirectedEdge["ghci-ng", "haskeline"], DirectedEdge["ghci-ng", "process"], DirectedEdge["ghci-ng", "syb"], DirectedEdge["ghci-ng", "time"], DirectedEdge["ghci-ng", "transformers"], DirectedEdge["ghci-ng", "unix"], DirectedEdge["ghci-pretty", "base"], DirectedEdge["ghci-pretty", "hscolour"], DirectedEdge["ghci-pretty", "ipprint"], DirectedEdge["ghcid", "ansi-terminal"], DirectedEdge["ghcid", "base"], DirectedEdge["ghcid", "cmdargs"], DirectedEdge["ghcid", "containers"], DirectedEdge["ghcid", "directory"], DirectedEdge["ghcid", "extra"], DirectedEdge["ghcid", "filepath"], DirectedEdge["ghcid", "fsnotify"], DirectedEdge["ghcid", "process"], DirectedEdge["ghcid", "terminal-size"], DirectedEdge["ghcid", "time"], DirectedEdge["ghcid", "unix"], DirectedEdge["ghcjs-ajax", "base"], DirectedEdge["ghcjs-ajax", "ghcjs-base"], DirectedEdge["ghcjs-ajax", "http-types"], DirectedEdge["ghcjs-ajax", "text"], DirectedEdge["ghcjs-codemirror", "base"], DirectedEdge["ghcjs-dom", "base"], DirectedEdge["ghcjs-dom", "ghc-prim"], DirectedEdge["ghcjs-dom", "ghcjs-base"], DirectedEdge["ghcjs-dom", "ghcjs-prim"], DirectedEdge["ghcjs-dom", "glib"], DirectedEdge["ghcjs-dom", "gtk"], DirectedEdge["ghcjs-dom", "jsaddle-dom"], DirectedEdge["ghcjs-dom", "text"], DirectedEdge["ghcjs-dom", "transformers"], DirectedEdge["ghcjs-dom", "webkit"], DirectedEdge["ghcjs-dom-hello", "base"], DirectedEdge["ghcjs-dom-hello", "ghcjs-dom"], DirectedEdge["ghcjs-dom-hello", "mtl"], DirectedEdge["ghcjs-hplay", "base"], DirectedEdge["ghcjs-hplay", "containers"], DirectedEdge["ghcjs-hplay", "ghcjs-base"], DirectedEdge["ghcjs-hplay", "ghcjs-perch"], DirectedEdge["ghcjs-hplay", "mtl"], DirectedEdge["ghcjs-hplay", "transformers"], DirectedEdge["ghcjs-hplay", "transient"], DirectedEdge["ghcjs-hplay", "transient-universe"], DirectedEdge["ghcjs-websockets", "base"], DirectedEdge["ghcjs-websockets", "base64-bytestring"], DirectedEdge["ghcjs-websockets", "binary"], DirectedEdge["ghcjs-websockets", "bytestring"], DirectedEdge["ghcjs-websockets", "ghcjs-base"], DirectedEdge["ghcjs-websockets", "text"], DirectedEdge["ghclive", "aeson"], DirectedEdge["ghclive", "base"], DirectedEdge["ghclive", "blaze-html"], DirectedEdge["ghclive", "blaze-markup"], DirectedEdge["ghclive", "bytestring"], DirectedEdge["ghclive", "containers"], DirectedEdge["ghclive", "diagrams-lib"], DirectedEdge["ghclive", "diagrams-svg"], DirectedEdge["ghclive", "directory"], DirectedEdge["ghclive", "file-embed"], DirectedEdge["ghclive", "ghc-prim"], DirectedEdge["ghclive", "ghclive"], DirectedEdge["ghclive", "hint"], DirectedEdge["ghclive", "mtl"], DirectedEdge["ghclive", "text"], DirectedEdge["ghclive", "time"], DirectedEdge["ghclive", "unix"], DirectedEdge["ghclive", "unordered-containers"], DirectedEdge["ghclive", "vector"], DirectedEdge["ghclive", "wai"], DirectedEdge["ghclive", "wai-websockets"], DirectedEdge["ghclive", "warp"], DirectedEdge["ghclive", "websockets"], DirectedEdge["ghclive", "yesod"], DirectedEdge["ghclive", "yesod-static"], DirectedEdge["ghczdecode", "base"], DirectedEdge["ghczdecode", "zenc"], DirectedEdge["ght", "base"], DirectedEdge["ght", "binary"], DirectedEdge["ght", "bytestring"], DirectedEdge["ght", "data-default"], DirectedEdge["ght", "directory"], DirectedEdge["ght", "filepath"], DirectedEdge["ght", "iteratee"], DirectedEdge["ght", "iteratee-compress"], DirectedEdge["ght", "mmap"], DirectedEdge["ght", "mtl"], DirectedEdge["ght", "old-locale"], DirectedEdge["ght", "SHA"], DirectedEdge["ght", "storable-endian"], DirectedEdge["ght", "time"], DirectedEdge["ght", "ui-command"], DirectedEdge["ght", "unix"], DirectedEdge["ght", "zlib"], DirectedEdge["gi-atk", "base"], DirectedEdge["gi-atk", "bytestring"], DirectedEdge["gi-atk", "containers"], DirectedEdge["gi-atk", "gi-glib"], DirectedEdge["gi-atk", "gi-gobject"], DirectedEdge["gi-atk", "haskell-gi-base"], DirectedEdge["gi-atk", "text"], DirectedEdge["gi-atk", "transformers"], DirectedEdge["gi-cairo", "base"], DirectedEdge["gi-cairo", "bytestring"], DirectedEdge["gi-cairo", "containers"], DirectedEdge["gi-cairo", "haskell-gi-base"], DirectedEdge["gi-cairo", "text"], DirectedEdge["gi-cairo", "transformers"], DirectedEdge["gi-gdk", "base"], DirectedEdge["gi-gdk", "bytestring"], DirectedEdge["gi-gdk", "containers"], DirectedEdge["gi-gdk", "gi-cairo"], DirectedEdge["gi-gdk", "gi-gdkpixbuf"], DirectedEdge["gi-gdk", "gi-gio"], DirectedEdge["gi-gdk", "gi-glib"], DirectedEdge["gi-gdk", "gi-gobject"], DirectedEdge["gi-gdk", "gi-pango"], DirectedEdge["gi-gdk", "haskell-gi-base"], DirectedEdge["gi-gdk", "text"], DirectedEdge["gi-gdk", "transformers"], DirectedEdge["gi-gdkpixbuf", "base"], DirectedEdge["gi-gdkpixbuf", "bytestring"], DirectedEdge["gi-gdkpixbuf", "containers"], DirectedEdge["gi-gdkpixbuf", "gi-gio"], DirectedEdge["gi-gdkpixbuf", "gi-glib"], DirectedEdge["gi-gdkpixbuf", "gi-gobject"], DirectedEdge["gi-gdkpixbuf", "haskell-gi-base"], DirectedEdge["gi-gdkpixbuf", "text"], DirectedEdge["gi-gdkpixbuf", "transformers"], DirectedEdge["gi-gio", "base"], DirectedEdge["gi-gio", "bytestring"], DirectedEdge["gi-gio", "containers"], DirectedEdge["gi-gio", "gi-glib"], DirectedEdge["gi-gio", "gi-gobject"], DirectedEdge["gi-gio", "haskell-gi-base"], DirectedEdge["gi-gio", "text"], DirectedEdge["gi-gio", "transformers"], DirectedEdge["gi-girepository", "base"], DirectedEdge["gi-girepository", "bytestring"], DirectedEdge["gi-girepository", "containers"], DirectedEdge["gi-girepository", "gi-gobject"], DirectedEdge["gi-girepository", "haskell-gi-base"], DirectedEdge["gi-girepository", "text"], DirectedEdge["gi-girepository", "transformers"], DirectedEdge["gi-glib", "base"], DirectedEdge["gi-glib", "bytestring"], DirectedEdge["gi-glib", "containers"], DirectedEdge["gi-glib", "haskell-gi-base"], DirectedEdge["gi-glib", "text"], DirectedEdge["gi-glib", "transformers"], DirectedEdge["gi-gobject", "base"], DirectedEdge["gi-gobject", "bytestring"], DirectedEdge["gi-gobject", "containers"], DirectedEdge["gi-gobject", "gi-glib"], DirectedEdge["gi-gobject", "haskell-gi-base"], DirectedEdge["gi-gobject", "text"], DirectedEdge["gi-gobject", "transformers"], DirectedEdge["gi-gst", "base"], DirectedEdge["gi-gst", "bytestring"], DirectedEdge["gi-gst", "containers"], DirectedEdge["gi-gst", "gi-glib"], DirectedEdge["gi-gst", "gi-gobject"], DirectedEdge["gi-gst", "haskell-gi-base"], DirectedEdge["gi-gst", "text"], DirectedEdge["gi-gst", "transformers"], DirectedEdge["gi-gstaudio", "base"], DirectedEdge["gi-gstaudio", "bytestring"], DirectedEdge["gi-gstaudio", "containers"], DirectedEdge["gi-gstaudio", "gi-glib"], DirectedEdge["gi-gstaudio", "gi-gobject"], DirectedEdge["gi-gstaudio", "gi-gst"], DirectedEdge["gi-gstaudio", "gi-gstbase"], DirectedEdge["gi-gstaudio", "haskell-gi-base"], DirectedEdge["gi-gstaudio", "text"], DirectedEdge["gi-gstaudio", "transformers"], DirectedEdge["gi-gstbase", "base"], DirectedEdge["gi-gstbase", "bytestring"], DirectedEdge["gi-gstbase", "containers"], DirectedEdge["gi-gstbase", "gi-glib"], DirectedEdge["gi-gstbase", "gi-gobject"], DirectedEdge["gi-gstbase", "gi-gst"], DirectedEdge["gi-gstbase", "haskell-gi-base"], DirectedEdge["gi-gstbase", "text"], DirectedEdge["gi-gstbase", "transformers"], DirectedEdge["gi-gstvideo", "base"], DirectedEdge["gi-gstvideo", "bytestring"], DirectedEdge["gi-gstvideo", "containers"], DirectedEdge["gi-gstvideo", "gi-glib"], DirectedEdge["gi-gstvideo", "gi-gobject"], DirectedEdge["gi-gstvideo", "gi-gst"], DirectedEdge["gi-gstvideo", "gi-gstbase"], DirectedEdge["gi-gstvideo", "haskell-gi-base"], DirectedEdge["gi-gstvideo", "text"], DirectedEdge["gi-gstvideo", "transformers"], DirectedEdge["gi-gtk", "base"], DirectedEdge["gi-gtk", "bytestring"], DirectedEdge["gi-gtk", "containers"], DirectedEdge["gi-gtk", "gi-atk"], DirectedEdge["gi-gtk", "gi-cairo"], DirectedEdge["gi-gtk", "gi-gdk"], DirectedEdge["gi-gtk", "gi-gdkpixbuf"], DirectedEdge["gi-gtk", "gi-gio"], DirectedEdge["gi-gtk", "gi-glib"], DirectedEdge["gi-gtk", "gi-gobject"], DirectedEdge["gi-gtk", "gi-pango"], DirectedEdge["gi-gtk", "haskell-gi-base"], DirectedEdge["gi-gtk", "text"], DirectedEdge["gi-gtk", "transformers"], DirectedEdge["gi-gtk-hs", "base"], DirectedEdge["gi-gtk-hs", "base-compat"], DirectedEdge["gi-gtk-hs", "containers"], DirectedEdge["gi-gtk-hs", "gi-gdk"], DirectedEdge["gi-gtk-hs", "gi-gdkpixbuf"], DirectedEdge["gi-gtk-hs", "gi-glib"], DirectedEdge["gi-gtk-hs", "gi-gobject"], DirectedEdge["gi-gtk-hs", "gi-gtk"], DirectedEdge["gi-gtk-hs", "haskell-gi-base"], DirectedEdge["gi-gtk-hs", "mtl"], DirectedEdge["gi-gtk-hs", "text"], DirectedEdge["gi-gtk-hs", "transformers"], DirectedEdge["gi-gtkosxapplication", "base"], DirectedEdge["gi-gtkosxapplication", "bytestring"], DirectedEdge["gi-gtkosxapplication", "containers"], DirectedEdge["gi-gtkosxapplication", "gi-gdkpixbuf"], DirectedEdge["gi-gtkosxapplication", "gi-gobject"], DirectedEdge["gi-gtkosxapplication", "gi-gtk"], DirectedEdge["gi-gtkosxapplication", "haskell-gi-base"], DirectedEdge["gi-gtkosxapplication", "text"], DirectedEdge["gi-gtkosxapplication", "transformers"], DirectedEdge["gi-gtksource", "base"], DirectedEdge["gi-gtksource", "bytestring"], DirectedEdge["gi-gtksource", "containers"], DirectedEdge["gi-gtksource", "gi-atk"], DirectedEdge["gi-gtksource", "gi-cairo"], DirectedEdge["gi-gtksource", "gi-gdk"], DirectedEdge["gi-gtksource", "gi-gdkpixbuf"], DirectedEdge["gi-gtksource", "gi-gio"], DirectedEdge["gi-gtksource", "gi-glib"], DirectedEdge["gi-gtksource", "gi-gobject"], DirectedEdge["gi-gtksource", "gi-gtk"], DirectedEdge["gi-gtksource", "gi-pango"], DirectedEdge["gi-gtksource", "haskell-gi-base"], DirectedEdge["gi-gtksource", "text"], DirectedEdge["gi-gtksource", "transformers"], DirectedEdge["gi-javascriptcore", "base"], DirectedEdge["gi-javascriptcore", "bytestring"], DirectedEdge["gi-javascriptcore", "containers"], DirectedEdge["gi-javascriptcore", "haskell-gi-base"], DirectedEdge["gi-javascriptcore", "text"], DirectedEdge["gi-javascriptcore", "transformers"], DirectedEdge["gi-notify", "base"], DirectedEdge["gi-notify", "bytestring"], DirectedEdge["gi-notify", "containers"], DirectedEdge["gi-notify", "gi-gdkpixbuf"], DirectedEdge["gi-notify", "gi-glib"], DirectedEdge["gi-notify", "gi-gobject"], DirectedEdge["gi-notify", "haskell-gi-base"], DirectedEdge["gi-notify", "text"], DirectedEdge["gi-notify", "transformers"], DirectedEdge["gi-pango", "base"], DirectedEdge["gi-pango", "bytestring"], DirectedEdge["gi-pango", "containers"], DirectedEdge["gi-pango", "gi-glib"], DirectedEdge["gi-pango", "gi-gobject"], DirectedEdge["gi-pango", "haskell-gi-base"], DirectedEdge["gi-pango", "text"], DirectedEdge["gi-pango", "transformers"], DirectedEdge["gi-pangocairo", "base"], DirectedEdge["gi-pangocairo", "bytestring"], DirectedEdge["gi-pangocairo", "containers"], DirectedEdge["gi-pangocairo", "gi-cairo"], DirectedEdge["gi-pangocairo", "gi-glib"], DirectedEdge["gi-pangocairo", "gi-gobject"], DirectedEdge["gi-pangocairo", "gi-pango"], DirectedEdge["gi-pangocairo", "haskell-gi-base"], DirectedEdge["gi-pangocairo", "text"], DirectedEdge["gi-pangocairo", "transformers"], DirectedEdge["gi-poppler", "base"], DirectedEdge["gi-poppler", "bytestring"], DirectedEdge["gi-poppler", "containers"], DirectedEdge["gi-poppler", "gi-cairo"], DirectedEdge["gi-poppler", "gi-gio"], DirectedEdge["gi-poppler", "gi-glib"], DirectedEdge["gi-poppler", "gi-gobject"], DirectedEdge["gi-poppler", "haskell-gi-base"], DirectedEdge["gi-poppler", "text"], DirectedEdge["gi-poppler", "transformers"], DirectedEdge["gi-soup", "base"], DirectedEdge["gi-soup", "bytestring"], DirectedEdge["gi-soup", "containers"], DirectedEdge["gi-soup", "gi-gio"], DirectedEdge["gi-soup", "gi-glib"], DirectedEdge["gi-soup", "gi-gobject"], DirectedEdge["gi-soup", "haskell-gi-base"], DirectedEdge["gi-soup", "text"], DirectedEdge["gi-soup", "transformers"], DirectedEdge["gi-vte", "base"], DirectedEdge["gi-vte", "bytestring"], DirectedEdge["gi-vte", "containers"], DirectedEdge["gi-vte", "gi-atk"], DirectedEdge["gi-vte", "gi-gdk"], DirectedEdge["gi-vte", "gi-gio"], DirectedEdge["gi-vte", "gi-glib"], DirectedEdge["gi-vte", "gi-gobject"], DirectedEdge["gi-vte", "gi-gtk"], DirectedEdge["gi-vte", "gi-pango"], DirectedEdge["gi-vte", "haskell-gi-base"], DirectedEdge["gi-vte", "text"], DirectedEdge["gi-vte", "transformers"], DirectedEdge["gi-webkit", "base"], DirectedEdge["gi-webkit", "bytestring"], DirectedEdge["gi-webkit", "containers"], DirectedEdge["gi-webkit", "gi-atk"], DirectedEdge["gi-webkit", "gi-cairo"], DirectedEdge["gi-webkit", "gi-gdk"], DirectedEdge["gi-webkit", "gi-gdkpixbuf"], DirectedEdge["gi-webkit", "gi-gio"], DirectedEdge["gi-webkit", "gi-glib"], DirectedEdge["gi-webkit", "gi-gobject"], DirectedEdge["gi-webkit", "gi-gtk"], DirectedEdge["gi-webkit", "gi-javascriptcore"], DirectedEdge["gi-webkit", "gi-soup"], DirectedEdge["gi-webkit", "haskell-gi-base"], DirectedEdge["gi-webkit", "text"], DirectedEdge["gi-webkit", "transformers"], DirectedEdge["gi-webkit2", "base"], DirectedEdge["gi-webkit2", "bytestring"], DirectedEdge["gi-webkit2", "containers"], DirectedEdge["gi-webkit2", "gi-atk"], DirectedEdge["gi-webkit2", "gi-cairo"], DirectedEdge["gi-webkit2", "gi-gdk"], DirectedEdge["gi-webkit2", "gi-gio"], DirectedEdge["gi-webkit2", "gi-glib"], DirectedEdge["gi-webkit2", "gi-gobject"], DirectedEdge["gi-webkit2", "gi-gtk"], DirectedEdge["gi-webkit2", "gi-javascriptcore"], DirectedEdge["gi-webkit2", "gi-soup"], DirectedEdge["gi-webkit2", "haskell-gi-base"], DirectedEdge["gi-webkit2", "text"], DirectedEdge["gi-webkit2", "transformers"], DirectedEdge["gi-webkit2webextension", "base"], DirectedEdge["gi-webkit2webextension", "bytestring"], DirectedEdge["gi-webkit2webextension", "containers"], DirectedEdge["gi-webkit2webextension", "gi-gobject"], DirectedEdge["gi-webkit2webextension", "gi-gtk"], DirectedEdge["gi-webkit2webextension", "gi-javascriptcore"], DirectedEdge["gi-webkit2webextension", "gi-soup"], DirectedEdge["gi-webkit2webextension", "haskell-gi-base"], DirectedEdge["gi-webkit2webextension", "text"], DirectedEdge["gi-webkit2webextension", "transformers"], DirectedEdge["gimlh", "base"], DirectedEdge["gimlh", "split"], DirectedEdge["ginger", "aeson"], DirectedEdge["ginger", "base"], DirectedEdge["ginger", "bytestring"], DirectedEdge["ginger", "data-default"], DirectedEdge["ginger", "filepath"], DirectedEdge["ginger", "ginger"], DirectedEdge["ginger", "http-types"], DirectedEdge["ginger", "mtl"], DirectedEdge["ginger", "parsec"], DirectedEdge["ginger", "safe"], DirectedEdge["ginger", "scientific"], DirectedEdge["ginger", "text"], DirectedEdge["ginger", "transformers"], DirectedEdge["ginger", "unordered-containers"], DirectedEdge["ginger", "utf8-string"], DirectedEdge["ginger", "vector"], DirectedEdge["ginsu", "array"], DirectedEdge["ginsu", "async"], DirectedEdge["ginsu", "base"], DirectedEdge["ginsu", "binary"], DirectedEdge["ginsu", "bytestring"], DirectedEdge["ginsu", "containers"], DirectedEdge["ginsu", "directory"], DirectedEdge["ginsu", "hashable"], DirectedEdge["ginsu", "hashtables"], DirectedEdge["ginsu", "mtl"], DirectedEdge["ginsu", "network"], DirectedEdge["ginsu", "old-locale"], DirectedEdge["ginsu", "old-time"], DirectedEdge["ginsu", "parsec"], DirectedEdge["ginsu", "pretty"], DirectedEdge["ginsu", "process"], DirectedEdge["ginsu", "random"], DirectedEdge["ginsu", "regex-posix"], DirectedEdge["ginsu", "syb"], DirectedEdge["ginsu", "unix"], DirectedEdge["ginsu", "utf8-string"], DirectedEdge["gio", "array"], DirectedEdge["gio", "base"], DirectedEdge["gio", "bytestring"], DirectedEdge["gio", "containers"], DirectedEdge["gio", "glib"], DirectedEdge["gio", "mtl"], DirectedEdge["gipeda", "aeson"], DirectedEdge["gipeda", "base"], DirectedEdge["gipeda", "bytestring"], DirectedEdge["gipeda", "cassava"], DirectedEdge["gipeda", "concurrent-output"], DirectedEdge["gipeda", "conduit-combinators"], DirectedEdge["gipeda", "containers"], DirectedEdge["gipeda", "directory"], DirectedEdge["gipeda", "extra"], DirectedEdge["gipeda", "file-embed"], DirectedEdge["gipeda", "filepath"], DirectedEdge["gipeda", "gitlib"], DirectedEdge["gipeda", "scientific"], DirectedEdge["gipeda", "shake"], DirectedEdge["gipeda", "split"], DirectedEdge["gipeda", "tagged"], DirectedEdge["gipeda", "text"], DirectedEdge["gipeda", "transformers"], DirectedEdge["gipeda", "unordered-containers"], DirectedEdge["gipeda", "vector"], DirectedEdge["gipeda", "yaml"], DirectedEdge["giphy-api", "aeson"], DirectedEdge["giphy-api", "base"], DirectedEdge["giphy-api", "containers"], DirectedEdge["giphy-api", "http-api-data"], DirectedEdge["giphy-api", "http-client"], DirectedEdge["giphy-api", "http-client-tls"], DirectedEdge["giphy-api", "microlens"], DirectedEdge["giphy-api", "microlens-th"], DirectedEdge["giphy-api", "mtl"], DirectedEdge["giphy-api", "network-uri"], DirectedEdge["giphy-api", "servant"], DirectedEdge["giphy-api", "servant-client"], DirectedEdge["giphy-api", "text"], DirectedEdge["giphy-api", "transformers"], DirectedEdge["gist", "aeson"], DirectedEdge["gist", "base"], DirectedEdge["gist", "bytestring"], DirectedEdge["gist", "conduit"], DirectedEdge["gist", "http-conduit"], DirectedEdge["gist", "text"], DirectedEdge["git", "base"], DirectedEdge["git", "byteable"], DirectedEdge["git", "bytestring"], DirectedEdge["git", "containers"], DirectedEdge["git", "cryptonite"], DirectedEdge["git", "hourglass"], DirectedEdge["git", "memory"], DirectedEdge["git", "mtl"], DirectedEdge["git", "patience"], DirectedEdge["git", "random"], DirectedEdge["git", "system-fileio"], DirectedEdge["git", "system-filepath"], DirectedEdge["git", "unix-compat"], DirectedEdge["git", "utf8-string"], DirectedEdge["git", "vector"], DirectedEdge["git", "zlib"], DirectedEdge["git", "zlib-bindings"], DirectedEdge["git-all", "base"], DirectedEdge["git-all", "cmdargs"], DirectedEdge["git-all", "hslogger"], DirectedEdge["git-all", "parallel-io"], DirectedEdge["git-all", "regex-posix"], DirectedEdge["git-all", "shelly"], DirectedEdge["git-all", "system-fileio"], DirectedEdge["git-all", "system-filepath"], DirectedEdge["git-all", "text"], DirectedEdge["git-all", "transformers"], DirectedEdge["git-all", "unix"], DirectedEdge["git-annex", "aeson"], DirectedEdge["git-annex", "async"], DirectedEdge["git-annex", "aws"], DirectedEdge["git-annex", "base"], DirectedEdge["git-annex", "blaze-builder"], DirectedEdge["git-annex", "bloomfilter"], DirectedEdge["git-annex", "byteable"], DirectedEdge["git-annex", "bytestring"], DirectedEdge["git-annex", "case-insensitive"], DirectedEdge["git-annex", "clientsession"], DirectedEdge["git-annex", "concurrent-output"], DirectedEdge["git-annex", "conduit"], DirectedEdge["git-annex", "conduit-extra"], DirectedEdge["git-annex", "containers"], DirectedEdge["git-annex", "criterion"], DirectedEdge["git-annex", "crypto-api"], DirectedEdge["git-annex", "cryptohash"], DirectedEdge["git-annex", "cryptonite"], DirectedEdge["git-annex", "data-default"], DirectedEdge["git-annex", "data-endian"], DirectedEdge["git-annex", "DAV"], DirectedEdge["git-annex", "dbus"], DirectedEdge["git-annex", "deepseq"], DirectedEdge["git-annex", "directory"], DirectedEdge["git-annex", "disk-free-space"], DirectedEdge["git-annex", "dlist"], DirectedEdge["git-annex", "dns"], DirectedEdge["git-annex", "edit-distance"], DirectedEdge["git-annex", "ekg"], DirectedEdge["git-annex", "esqueleto"], DirectedEdge["git-annex", "exceptions"], DirectedEdge["git-annex", "fdo-notify"], DirectedEdge["git-annex", "feed"], DirectedEdge["git-annex", "filepath"], DirectedEdge["git-annex", "gnutls"], DirectedEdge["git-annex", "hfsevents"], DirectedEdge["git-annex", "hinotify"], DirectedEdge["git-annex", "hslogger"], DirectedEdge["git-annex", "http-client"], DirectedEdge["git-annex", "http-conduit"], DirectedEdge["git-annex", "http-types"], DirectedEdge["git-annex", "IfElse"], DirectedEdge["git-annex", "json"], DirectedEdge["git-annex", "magic"], DirectedEdge["git-annex", "MissingH"], DirectedEdge["git-annex", "monad-control"], DirectedEdge["git-annex", "monad-logger"], DirectedEdge["git-annex", "mountpoints"], DirectedEdge["git-annex", "mtl"], DirectedEdge["git-annex", "network"], DirectedEdge["git-annex", "network-info"], DirectedEdge["git-annex", "network-multicast"], DirectedEdge["git-annex", "network-protocol-xmpp"], DirectedEdge["git-annex", "network-uri"], DirectedEdge["git-annex", "old-locale"], DirectedEdge["git-annex", "optparse-applicative"], DirectedEdge["git-annex", "path-pieces"], DirectedEdge["git-annex", "persistent"], DirectedEdge["git-annex", "persistent-sqlite"], DirectedEdge["git-annex", "persistent-template"], DirectedEdge["git-annex", "process"], DirectedEdge["git-annex", "QuickCheck"], DirectedEdge["git-annex", "random"], DirectedEdge["git-annex", "regex-tdfa"], DirectedEdge["git-annex", "resourcet"], DirectedEdge["git-annex", "SafeSemaphore"], DirectedEdge["git-annex", "sandi"], DirectedEdge["git-annex", "securemem"], DirectedEdge["git-annex", "setenv"], DirectedEdge["git-annex", "shakespeare"], DirectedEdge["git-annex", "stm"], DirectedEdge["git-annex", "tasty"], DirectedEdge["git-annex", "tasty-hunit"], DirectedEdge["git-annex", "tasty-quickcheck"], DirectedEdge["git-annex", "tasty-rerun"], DirectedEdge["git-annex", "template-haskell"], DirectedEdge["git-annex", "text"], DirectedEdge["git-annex", "time"], DirectedEdge["git-annex", "torrent"], DirectedEdge["git-annex", "transformers"], DirectedEdge["git-annex", "unix"], DirectedEdge["git-annex", "unix-compat"], DirectedEdge["git-annex", "utf8-string"], DirectedEdge["git-annex", "uuid"], DirectedEdge["git-annex", "wai"], DirectedEdge["git-annex", "wai-extra"], DirectedEdge["git-annex", "warp"], DirectedEdge["git-annex", "warp-tls"], DirectedEdge["git-annex", "Win32-extras"], DirectedEdge["git-annex", "Win32-notify"], DirectedEdge["git-annex", "xml-types"], DirectedEdge["git-annex", "yesod"], DirectedEdge["git-annex", "yesod-core"], DirectedEdge["git-annex", "yesod-default"], DirectedEdge["git-annex", "yesod-form"], DirectedEdge["git-annex", "yesod-static"], DirectedEdge["git-checklist", "base"], DirectedEdge["git-checklist", "directory"], DirectedEdge["git-checklist", "filepath"], DirectedEdge["git-checklist", "optparse-applicative"], DirectedEdge["git-checklist", "parsec"], DirectedEdge["git-checklist", "pretty"], DirectedEdge["git-checklist", "process"], DirectedEdge["git-date", "base"], DirectedEdge["git-date", "bytestring"], DirectedEdge["git-date", "time"], DirectedEdge["git-date", "utf8-string"], DirectedEdge["git-embed", "gitrev"], DirectedEdge["git-embed", "base"], DirectedEdge["git-embed", "directory"], DirectedEdge["git-embed", "filepath"], DirectedEdge["git-embed", "process"], DirectedEdge["git-embed", "template-haskell"], DirectedEdge["git-fmt", "base"], DirectedEdge["git-fmt", "exceptions"], DirectedEdge["git-fmt", "extra"], DirectedEdge["git-fmt", "fast-logger"], DirectedEdge["git-fmt", "filepath"], DirectedEdge["git-fmt", "monad-logger"], DirectedEdge["git-fmt", "monad-parallel"], DirectedEdge["git-fmt", "mtl"], DirectedEdge["git-fmt", "omnifmt"], DirectedEdge["git-fmt", "optparse-applicative"], DirectedEdge["git-fmt", "pipes"], DirectedEdge["git-fmt", "pipes-concurrency"], DirectedEdge["git-fmt", "process"], DirectedEdge["git-fmt", "temporary"], DirectedEdge["git-fmt", "text"], DirectedEdge["git-fmt", "time"], DirectedEdge["git-freq", "base"], DirectedEdge["git-freq", "bytestring"], DirectedEdge["git-freq", "containers"], DirectedEdge["git-freq", "io-streams"], DirectedEdge["git-freq", "optparse-applicative"], DirectedEdge["git-freq", "process"], DirectedEdge["git-freq", "text"], DirectedEdge["git-gpush", "base"], DirectedEdge["git-gpush", "bytestring"], DirectedEdge["git-gpush", "containers"], DirectedEdge["git-gpush", "directory"], DirectedEdge["git-gpush", "filepath"], DirectedEdge["git-gpush", "gitlib"], DirectedEdge["git-gpush", "gitlib-cmdline"], DirectedEdge["git-gpush", "hslogger"], DirectedEdge["git-gpush", "old-locale"], DirectedEdge["git-gpush", "optparse-applicative"], DirectedEdge["git-gpush", "shelly"], DirectedEdge["git-gpush", "tagged"], DirectedEdge["git-gpush", "text"], DirectedEdge["git-gpush", "time"], DirectedEdge["git-gpush", "transformers"], DirectedEdge["git-jump", "base"], DirectedEdge["git-jump", "base-compat"], DirectedEdge["git-jump", "process"], DirectedEdge["git-monitor", "base"], DirectedEdge["git-monitor", "bytestring"], DirectedEdge["git-monitor", "containers"], DirectedEdge["git-monitor", "directory"], DirectedEdge["git-monitor", "filepath"], DirectedEdge["git-monitor", "gitlib"], DirectedEdge["git-monitor", "lifted-async"], DirectedEdge["git-monitor", "logging"], DirectedEdge["git-monitor", "old-locale"], DirectedEdge["git-monitor", "optparse-applicative"], DirectedEdge["git-monitor", "shelly"], DirectedEdge["git-monitor", "tagged"], DirectedEdge["git-monitor", "template-haskell"], DirectedEdge["git-monitor", "text"], DirectedEdge["git-monitor", "time"], DirectedEdge["git-monitor", "transformers"], DirectedEdge["git-monitor", "unix"], DirectedEdge["git-monitor", "unordered-containers"], DirectedEdge["git-object", "gitlib"], DirectedEdge["git-object", "attoparsec"], DirectedEdge["git-object", "attoparsec-enumerator"], DirectedEdge["git-object", "base"], DirectedEdge["git-object", "bytestring"], DirectedEdge["git-object", "directory"], DirectedEdge["git-object", "enumerator"], DirectedEdge["git-object", "filepath"], DirectedEdge["git-object", "zlib-enum"], DirectedEdge["git-repair", "async"], DirectedEdge["git-repair", "base"], DirectedEdge["git-repair", "bytestring"], DirectedEdge["git-repair", "containers"], DirectedEdge["git-repair", "directory"], DirectedEdge["git-repair", "exceptions"], DirectedEdge["git-repair", "filepath"], DirectedEdge["git-repair", "hslogger"], DirectedEdge["git-repair", "IfElse"], DirectedEdge["git-repair", "MissingH"], DirectedEdge["git-repair", "mtl"], DirectedEdge["git-repair", "network"], DirectedEdge["git-repair", "network-uri"], DirectedEdge["git-repair", "optparse-applicative"], DirectedEdge["git-repair", "process"], DirectedEdge["git-repair", "QuickCheck"], DirectedEdge["git-repair", "setenv"], DirectedEdge["git-repair", "text"], DirectedEdge["git-repair", "time"], DirectedEdge["git-repair", "transformers"], DirectedEdge["git-repair", "unix"], DirectedEdge["git-repair", "unix-compat"], DirectedEdge["git-repair", "utf8-string"], DirectedEdge["git-sanity", "base"], DirectedEdge["git-sanity", "bytestring"], DirectedEdge["git-sanity", "Cabal"], DirectedEdge["git-sanity", "git-sanity"], DirectedEdge["git-sanity", "machines"], DirectedEdge["git-sanity", "machines-io"], DirectedEdge["git-sanity", "machines-process"], DirectedEdge["git-sanity", "process"], DirectedEdge["git-sanity", "safe"], DirectedEdge["git-sanity", "transformers"], DirectedEdge["git-vogue", "base"], DirectedEdge["git-vogue", "bifunctors"], DirectedEdge["git-vogue", "Cabal"], DirectedEdge["git-vogue", "containers"], DirectedEdge["git-vogue", "cpphs"], DirectedEdge["git-vogue", "Diff"], DirectedEdge["git-vogue", "directory"], DirectedEdge["git-vogue", "filepath"], DirectedEdge["git-vogue", "formatting"], DirectedEdge["git-vogue", "ghc-mod"], DirectedEdge["git-vogue", "git-vogue"], DirectedEdge["git-vogue", "haskell-src-exts"], DirectedEdge["git-vogue", "hlint"], DirectedEdge["git-vogue", "hscolour"], DirectedEdge["git-vogue", "optparse-applicative"], DirectedEdge["git-vogue", "process"], DirectedEdge["git-vogue", "split"], DirectedEdge["git-vogue", "strict"], DirectedEdge["git-vogue", "stylish-haskell"], DirectedEdge["git-vogue", "text"], DirectedEdge["git-vogue", "transformers"], DirectedEdge["git-vogue", "unix"], DirectedEdge["gitHUD", "base"], DirectedEdge["gitHUD", "gitHUD"], DirectedEdge["gitHUD", "mtl"], DirectedEdge["gitHUD", "parsec"], DirectedEdge["gitHUD", "process"], DirectedEdge["gitHUD", "unix"], DirectedEdge["gitcache", "base"], DirectedEdge["gitcache", "cryptohash"], DirectedEdge["gitcache", "directory"], DirectedEdge["gitcache", "filepath"], DirectedEdge["gitcache", "process"], DirectedEdge["gitcache", "utf8-string"], DirectedEdge["gitdo", "aeson"], DirectedEdge["gitdo", "aeson-lens"], DirectedEdge["gitdo", "base"], DirectedEdge["gitdo", "bytestring"], DirectedEdge["gitdo", "foldl"], DirectedEdge["gitdo", "lens"], DirectedEdge["gitdo", "mtl"], DirectedEdge["gitdo", "optparse-applicative"], DirectedEdge["gitdo", "sqlite-simple"], DirectedEdge["gitdo", "system-filepath"], DirectedEdge["gitdo", "text"], DirectedEdge["gitdo", "turtle"], DirectedEdge["gitdo", "wreq"], DirectedEdge["github", "aeson"], DirectedEdge["github", "aeson-compat"], DirectedEdge["github", "aeson-extra"], DirectedEdge["github", "attoparsec"], DirectedEdge["github", "base"], DirectedEdge["github", "base-compat"], DirectedEdge["github", "base16-bytestring"], DirectedEdge["github", "binary"], DirectedEdge["github", "binary-orphans"], DirectedEdge["github", "byteable"], DirectedEdge["github", "bytestring"], DirectedEdge["github", "containers"], DirectedEdge["github", "cryptohash"], DirectedEdge["github", "deepseq"], DirectedEdge["github", "deepseq-generics"], DirectedEdge["github", "exceptions"], DirectedEdge["github", "hashable"], DirectedEdge["github", "http-client"], DirectedEdge["github", "http-client-tls"], DirectedEdge["github", "http-link-header"], DirectedEdge["github", "http-types"], DirectedEdge["github", "iso8601-time"], DirectedEdge["github", "mtl"], DirectedEdge["github", "network-uri"], DirectedEdge["github", "semigroups"], DirectedEdge["github", "text"], DirectedEdge["github", "time"], DirectedEdge["github", "transformers"], DirectedEdge["github", "transformers-compat"], DirectedEdge["github", "unordered-containers"], DirectedEdge["github", "vector"], DirectedEdge["github", "vector-instances"], DirectedEdge["github-backup", "base"], DirectedEdge["github-backup", "bytestring"], DirectedEdge["github-backup", "containers"], DirectedEdge["github-backup", "directory"], DirectedEdge["github-backup", "exceptions"], DirectedEdge["github-backup", "filepath"], DirectedEdge["github-backup", "github"], DirectedEdge["github-backup", "hslogger"], DirectedEdge["github-backup", "IfElse"], DirectedEdge["github-backup", "MissingH"], DirectedEdge["github-backup", "mtl"], DirectedEdge["github-backup", "network"], DirectedEdge["github-backup", "network-uri"], DirectedEdge["github-backup", "optparse-applicative"], DirectedEdge["github-backup", "pretty-show"], DirectedEdge["github-backup", "process"], DirectedEdge["github-backup", "setenv"], DirectedEdge["github-backup", "text"], DirectedEdge["github-backup", "transformers"], DirectedEdge["github-backup", "unix"], DirectedEdge["github-backup", "unix-compat"], DirectedEdge["github-backup", "utf8-string"], DirectedEdge["github-backup", "vector"], DirectedEdge["github-post-receive", "aeson"], DirectedEdge["github-post-receive", "base"], DirectedEdge["github-post-receive", "bytestring"], DirectedEdge["github-post-receive", "containers"], DirectedEdge["github-post-receive", "email-validate"], DirectedEdge["github-post-receive", "http-types"], DirectedEdge["github-post-receive", "text"], DirectedEdge["github-post-receive", "wai"], DirectedEdge["github-post-receive", "wai-logger"], DirectedEdge["github-post-receive", "warp"], DirectedEdge["github-release", "aeson"], DirectedEdge["github-release", "base"], DirectedEdge["github-release", "bytestring"], DirectedEdge["github-release", "github-release"], DirectedEdge["github-release", "http-client"], DirectedEdge["github-release", "http-client-tls"], DirectedEdge["github-release", "http-types"], DirectedEdge["github-release", "mime-types"], DirectedEdge["github-release", "optparse-generic"], DirectedEdge["github-release", "text"], DirectedEdge["github-release", "unordered-containers"], DirectedEdge["github-release", "uri-templater"], DirectedEdge["github-types", "aeson"], DirectedEdge["github-types", "base"], DirectedEdge["github-types", "text"], DirectedEdge["github-types", "time"], DirectedEdge["github-utils", "base"], DirectedEdge["github-utils", "basic-prelude"], DirectedEdge["github-utils", "github"], DirectedEdge["github-utils", "text"], DirectedEdge["github-webhook-handler", "aeson"], DirectedEdge["github-webhook-handler", "base"], DirectedEdge["github-webhook-handler", "bytestring"], DirectedEdge["github-webhook-handler", "cryptohash"], DirectedEdge["github-webhook-handler", "github-types"], DirectedEdge["github-webhook-handler", "text"], DirectedEdge["github-webhook-handler", "transformers"], DirectedEdge["github-webhook-handler", "uuid"], DirectedEdge["github-webhook-handler", "vector"], DirectedEdge["github-webhook-handler-snap", "base"], DirectedEdge["github-webhook-handler-snap", "bytestring"], DirectedEdge["github-webhook-handler-snap", "case-insensitive"], DirectedEdge["github-webhook-handler-snap", "github-types"], DirectedEdge["github-webhook-handler-snap", "github-webhook-handler"], DirectedEdge["github-webhook-handler-snap", "snap-core"], DirectedEdge["github-webhook-handler-snap", "uuid"], DirectedEdge["gitignore", "aeson"], DirectedEdge["gitignore", "base"], DirectedEdge["gitignore", "base64-bytestring"], DirectedEdge["gitignore", "bytestring"], DirectedEdge["gitignore", "http-conduit"], DirectedEdge["gitignore", "network"], DirectedEdge["gitignore", "safe"], DirectedEdge["gitignore", "text"], DirectedEdge["gitit", "aeson"], DirectedEdge["gitit", "base"], DirectedEdge["gitit", "base64-bytestring"], DirectedEdge["gitit", "blaze-html"], DirectedEdge["gitit", "bytestring"], DirectedEdge["gitit", "ConfigFile"], DirectedEdge["gitit", "containers"], DirectedEdge["gitit", "directory"], DirectedEdge["gitit", "feed"], DirectedEdge["gitit", "filepath"], DirectedEdge["gitit", "filestore"], DirectedEdge["gitit", "ghc"], DirectedEdge["gitit", "ghc-paths"], DirectedEdge["gitit", "gitit"], DirectedEdge["gitit", "happstack-server"], DirectedEdge["gitit", "highlighting-kate"], DirectedEdge["gitit", "hslogger"], DirectedEdge["gitit", "HStringTemplate"], DirectedEdge["gitit", "HTTP"], DirectedEdge["gitit", "http-client-tls"], DirectedEdge["gitit", "http-conduit"], DirectedEdge["gitit", "json"], DirectedEdge["gitit", "mtl"], DirectedEdge["gitit", "network"], DirectedEdge["gitit", "network-uri"], DirectedEdge["gitit", "old-locale"], DirectedEdge["gitit", "old-time"], DirectedEdge["gitit", "pandoc"], DirectedEdge["gitit", "pandoc-types"], DirectedEdge["gitit", "parsec"], DirectedEdge["gitit", "pretty"], DirectedEdge["gitit", "process"], DirectedEdge["gitit", "random"], DirectedEdge["gitit", "recaptcha"], DirectedEdge["gitit", "safe"], DirectedEdge["gitit", "SHA"], DirectedEdge["gitit", "split"], DirectedEdge["gitit", "syb"], DirectedEdge["gitit", "tagsoup"], DirectedEdge["gitit", "text"], DirectedEdge["gitit", "time"], DirectedEdge["gitit", "uri"], DirectedEdge["gitit", "url"], DirectedEdge["gitit", "utf8-string"], DirectedEdge["gitit", "uuid"], DirectedEdge["gitit", "xhtml"], DirectedEdge["gitit", "xml"], DirectedEdge["gitit", "xss-sanitize"], DirectedEdge["gitit", "zlib"], DirectedEdge["gitlib", "base"], DirectedEdge["gitlib", "base16-bytestring"], DirectedEdge["gitlib", "bytestring"], DirectedEdge["gitlib", "conduit"], DirectedEdge["gitlib", "conduit-combinators"], DirectedEdge["gitlib", "containers"], DirectedEdge["gitlib", "directory"], DirectedEdge["gitlib", "exceptions"], DirectedEdge["gitlib", "filepath"], DirectedEdge["gitlib", "hashable"], DirectedEdge["gitlib", "lifted-async"], DirectedEdge["gitlib", "lifted-base"], DirectedEdge["gitlib", "monad-control"], DirectedEdge["gitlib", "mtl"], DirectedEdge["gitlib", "resourcet"], DirectedEdge["gitlib", "semigroups"], DirectedEdge["gitlib", "tagged"], DirectedEdge["gitlib", "text"], DirectedEdge["gitlib", "time"], DirectedEdge["gitlib", "transformers"], DirectedEdge["gitlib", "unix"], DirectedEdge["gitlib", "unordered-containers"], DirectedEdge["gitlib-cmdline", "base"], DirectedEdge["gitlib-cmdline", "bytestring"], DirectedEdge["gitlib-cmdline", "conduit"], DirectedEdge["gitlib-cmdline", "conduit-combinators"], DirectedEdge["gitlib-cmdline", "containers"], DirectedEdge["gitlib-cmdline", "directory"], DirectedEdge["gitlib-cmdline", "exceptions"], DirectedEdge["gitlib-cmdline", "gitlib"], DirectedEdge["gitlib-cmdline", "monad-control"], DirectedEdge["gitlib-cmdline", "mtl"], DirectedEdge["gitlib-cmdline", "old-locale"], DirectedEdge["gitlib-cmdline", "parsec"], DirectedEdge["gitlib-cmdline", "process-extras"], DirectedEdge["gitlib-cmdline", "shelly"], DirectedEdge["gitlib-cmdline", "system-filepath"], DirectedEdge["gitlib-cmdline", "tagged"], DirectedEdge["gitlib-cmdline", "text"], DirectedEdge["gitlib-cmdline", "time"], DirectedEdge["gitlib-cmdline", "time-locale-compat"], DirectedEdge["gitlib-cmdline", "transformers"], DirectedEdge["gitlib-cmdline", "transformers-base"], DirectedEdge["gitlib-cmdline", "unordered-containers"], DirectedEdge["gitlib-cross", "base"], DirectedEdge["gitlib-libgit2", "base"], DirectedEdge["gitlib-libgit2", "bytestring"], DirectedEdge["gitlib-libgit2", "conduit"], DirectedEdge["gitlib-libgit2", "conduit-combinators"], DirectedEdge["gitlib-libgit2", "containers"], DirectedEdge["gitlib-libgit2", "directory"], DirectedEdge["gitlib-libgit2", "exceptions"], DirectedEdge["gitlib-libgit2", "fast-logger"], DirectedEdge["gitlib-libgit2", "filepath"], DirectedEdge["gitlib-libgit2", "gitlib"], DirectedEdge["gitlib-libgit2", "lifted-async"], DirectedEdge["gitlib-libgit2", "lifted-base"], DirectedEdge["gitlib-libgit2", "missing-foreign"], DirectedEdge["gitlib-libgit2", "mmorph"], DirectedEdge["gitlib-libgit2", "monad-control"], DirectedEdge["gitlib-libgit2", "monad-loops"], DirectedEdge["gitlib-libgit2", "mtl"], DirectedEdge["gitlib-libgit2", "resourcet"], DirectedEdge["gitlib-libgit2", "stm"], DirectedEdge["gitlib-libgit2", "stm-conduit"], DirectedEdge["gitlib-libgit2", "tagged"], DirectedEdge["gitlib-libgit2", "template-haskell"], DirectedEdge["gitlib-libgit2", "text"], DirectedEdge["gitlib-libgit2", "text-icu"], DirectedEdge["gitlib-libgit2", "time"], DirectedEdge["gitlib-libgit2", "transformers"], DirectedEdge["gitlib-libgit2", "transformers-base"], DirectedEdge["gitlib-s3", "aeson"], DirectedEdge["gitlib-s3", "attempt"], DirectedEdge["gitlib-s3", "aws"], DirectedEdge["gitlib-s3", "base"], DirectedEdge["gitlib-s3", "bifunctors"], DirectedEdge["gitlib-s3", "binary"], DirectedEdge["gitlib-s3", "bytestring"], DirectedEdge["gitlib-s3", "conduit"], DirectedEdge["gitlib-s3", "conduit-combinators"], DirectedEdge["gitlib-s3", "data-default"], DirectedEdge["gitlib-s3", "directory"], DirectedEdge["gitlib-s3", "exceptions"], DirectedEdge["gitlib-s3", "filepath"], DirectedEdge["gitlib-s3", "ghc-prim"], DirectedEdge["gitlib-s3", "gitlib"], DirectedEdge["gitlib-s3", "http-conduit"], DirectedEdge["gitlib-s3", "lens"], DirectedEdge["gitlib-s3", "lifted-base"], DirectedEdge["gitlib-s3", "monad-control"], DirectedEdge["gitlib-s3", "monad-logger"], DirectedEdge["gitlib-s3", "resourcet"], DirectedEdge["gitlib-s3", "retry"], DirectedEdge["gitlib-s3", "split"], DirectedEdge["gitlib-s3", "stm"], DirectedEdge["gitlib-s3", "template-haskell"], DirectedEdge["gitlib-s3", "text"], DirectedEdge["gitlib-s3", "time"], DirectedEdge["gitlib-s3", "transformers"], DirectedEdge["gitlib-s3", "unordered-containers"], DirectedEdge["gitlib-sample", "base"], DirectedEdge["gitlib-sample", "exceptions"], DirectedEdge["gitlib-sample", "gitlib"], DirectedEdge["gitlib-sample", "mtl"], DirectedEdge["gitlib-sample", "transformers"], DirectedEdge["gitlib-test", "base"], DirectedEdge["gitlib-test", "bytestring"], DirectedEdge["gitlib-test", "conduit"], DirectedEdge["gitlib-test", "conduit-combinators"], DirectedEdge["gitlib-test", "exceptions"], DirectedEdge["gitlib-test", "gitlib"], DirectedEdge["gitlib-test", "hspec"], DirectedEdge["gitlib-test", "hspec-expectations"], DirectedEdge["gitlib-test", "HUnit"], DirectedEdge["gitlib-test", "monad-control"], DirectedEdge["gitlib-test", "tagged"], DirectedEdge["gitlib-test", "text"], DirectedEdge["gitlib-test", "time"], DirectedEdge["gitlib-test", "transformers"], DirectedEdge["gitlib-utils", "gitlib"], DirectedEdge["gitlib-utils", "base"], DirectedEdge["gitlib-utils", "bytestring"], DirectedEdge["gitlib-utils", "conduit"], DirectedEdge["gitlib-utils", "data-default"], DirectedEdge["gitlib-utils", "failure"], DirectedEdge["gitlib-utils", "gitlib"], DirectedEdge["gitlib-utils", "hex"], DirectedEdge["gitlib-utils", "lifted-base"], DirectedEdge["gitlib-utils", "system-fileio"], DirectedEdge["gitlib-utils", "system-filepath"], DirectedEdge["gitlib-utils", "tagged"], DirectedEdge["gitlib-utils", "text"], DirectedEdge["gitlib-utils", "transformers"], DirectedEdge["gitlib-utils", "unordered-containers"], DirectedEdge["gitrev", "base"], DirectedEdge["gitrev", "directory"], DirectedEdge["gitrev", "filepath"], DirectedEdge["gitrev", "process"], DirectedEdge["gitrev", "template-haskell"], DirectedEdge["gitson", "aeson"], DirectedEdge["gitson", "aeson-pretty"], DirectedEdge["gitson", "base"], DirectedEdge["gitson", "bytestring"], DirectedEdge["gitson", "directory"], DirectedEdge["gitson", "errors"], DirectedEdge["gitson", "filepath"], DirectedEdge["gitson", "flock"], DirectedEdge["gitson", "monad-control"], DirectedEdge["gitson", "process"], DirectedEdge["gitson", "transformers"], DirectedEdge["gitter", "aeson"], DirectedEdge["gitter", "base"], DirectedEdge["gitter", "bytestring"], DirectedEdge["gitter", "exceptions"], DirectedEdge["gitter", "lens"], DirectedEdge["gitter", "lens-aeson"], DirectedEdge["gitter", "mtl"], DirectedEdge["gitter", "text"], DirectedEdge["gitter", "wreq"], DirectedEdge["givegif", "base"], DirectedEdge["givegif", "base64-bytestring"], DirectedEdge["givegif", "bytestring"], DirectedEdge["givegif", "containers"], DirectedEdge["givegif", "errors"], DirectedEdge["givegif", "giphy-api"], DirectedEdge["givegif", "givegif"], DirectedEdge["givegif", "lens"], DirectedEdge["givegif", "network-uri"], DirectedEdge["givegif", "optparse-applicative"], DirectedEdge["givegif", "text"], DirectedEdge["givegif", "transformers"], DirectedEdge["givegif", "wreq"], DirectedEdge["gl", "base"], DirectedEdge["gl", "containers"], DirectedEdge["gl", "directory"], DirectedEdge["gl", "filepath"], DirectedEdge["gl", "fixed"], DirectedEdge["gl", "half"], DirectedEdge["gl", "hxt"], DirectedEdge["gl", "split"], DirectedEdge["gl", "transformers"], DirectedEdge["gl-capture", "base"], DirectedEdge["gl-capture", "bytestring"], DirectedEdge["gl-capture", "OpenGL"], DirectedEdge["glade", "base"], DirectedEdge["glade", "glib"], DirectedEdge["glade", "gtk"], DirectedEdge["gladexml-accessor", "base"], DirectedEdge["gladexml-accessor", "glade"], DirectedEdge["gladexml-accessor", "HaXml"], DirectedEdge["gladexml-accessor", "template-haskell"], DirectedEdge["glambda", "ansi-wl-pprint"], DirectedEdge["glambda", "base"], DirectedEdge["glambda", "containers"], DirectedEdge["glambda", "directory"], DirectedEdge["glambda", "either"], DirectedEdge["glambda", "glambda"], DirectedEdge["glambda", "haskeline"], DirectedEdge["glambda", "mtl"], DirectedEdge["glambda", "parsec"], DirectedEdge["glambda", "transformers"], DirectedEdge["glapp", "base"], DirectedEdge["glapp", "containers"], DirectedEdge["glapp", "GLFW-b"], DirectedEdge["glapp", "lens"], DirectedEdge["glapp", "mtl"], DirectedEdge["glapp", "OpenGL"], DirectedEdge["glasso", "base"], DirectedEdge["glasso", "vector"], DirectedEdge["glib", "base"], DirectedEdge["glib", "bytestring"], DirectedEdge["glib", "containers"], DirectedEdge["glib", "text"], DirectedEdge["glib", "utf8-string"], DirectedEdge["glicko", "base"], DirectedEdge["glicko", "containers"], DirectedEdge["glicko", "data-default"], DirectedEdge["glicko", "deepseq"], DirectedEdge["glicko", "lens"], DirectedEdge["glicko", "parallel"], DirectedEdge["glicko", "statistics"], DirectedEdge["glider-nlp", "base"], DirectedEdge["glider-nlp", "containers"], DirectedEdge["glider-nlp", "text"], DirectedEdge["glintcollider", "base"], DirectedEdge["glintcollider", "ppm"], DirectedEdge["glintcollider", "split"], DirectedEdge["gll", "array"], DirectedEdge["gll", "base"], DirectedEdge["gll", "containers"], DirectedEdge["gll", "pretty"], DirectedEdge["gll", "regex-applicative"], DirectedEdge["gll", "text"], DirectedEdge["gll", "TypeCompose"], DirectedEdge["global", "base"], DirectedEdge["global", "haskell-src-exts"], DirectedEdge["global", "haskell-src-exts-qq"], DirectedEdge["global", "loch-th"], DirectedEdge["global", "SafeSemaphore"], DirectedEdge["global", "stm"], DirectedEdge["global", "syntax-trees-fork-bairyn"], DirectedEdge["global", "tagged"], DirectedEdge["global", "template-haskell"], DirectedEdge["global-config", "base"], DirectedEdge["global-config", "data-default"], DirectedEdge["global-config", "global-variables"], DirectedEdge["global-config", "transformers"], DirectedEdge["global-lock", "base"], DirectedEdge["global-variables", "base"], DirectedEdge["global-variables", "containers"], DirectedEdge["global-variables", "stm"], DirectedEdge["glome-hs", "array"], DirectedEdge["glome-hs", "base"], DirectedEdge["glome-hs", "GlomeTrace"], DirectedEdge["glome-hs", "GlomeVec"], DirectedEdge["glome-hs", "GLUT"], DirectedEdge["glome-hs", "OpenGL"], DirectedEdge["glome-hs", "parallel"], DirectedEdge["glome-hs", "random"], DirectedEdge["glome-hs", "time"], DirectedEdge["gloss", "base"], DirectedEdge["gloss", "bmp"], DirectedEdge["gloss", "bytestring"], DirectedEdge["gloss", "containers"], DirectedEdge["gloss", "ghc-prim"], DirectedEdge["gloss", "GLFW-b"], DirectedEdge["gloss", "gloss-rendering"], DirectedEdge["gloss", "GLUT"], DirectedEdge["gloss", "OpenGL"], DirectedEdge["gloss-accelerate", "accelerate"], DirectedEdge["gloss-accelerate", "base"], DirectedEdge["gloss-accelerate", "gloss"], DirectedEdge["gloss-accelerate", "gloss-rendering"], DirectedEdge["gloss-algorithms", "base"], DirectedEdge["gloss-algorithms", "containers"], DirectedEdge["gloss-algorithms", "ghc-prim"], DirectedEdge["gloss-algorithms", "gloss"], DirectedEdge["gloss-banana", "base"], DirectedEdge["gloss-banana", "gloss"], DirectedEdge["gloss-banana", "reactive-banana"], DirectedEdge["gloss-devil", "base"], DirectedEdge["gloss-devil", "bytestring"], DirectedEdge["gloss-devil", "gloss"], DirectedEdge["gloss-devil", "repa"], DirectedEdge["gloss-devil", "repa-devil"], DirectedEdge["gloss-examples", "base"], DirectedEdge["gloss-examples", "bmp"], DirectedEdge["gloss-examples", "bytestring"], DirectedEdge["gloss-examples", "containers"], DirectedEdge["gloss-examples", "ghc-prim"], DirectedEdge["gloss-examples", "GLFW-b"], DirectedEdge["gloss-examples", "gloss"], DirectedEdge["gloss-examples", "gloss-algorithms"], DirectedEdge["gloss-examples", "gloss-raster"], DirectedEdge["gloss-examples", "gloss-rendering"], DirectedEdge["gloss-examples", "random"], DirectedEdge["gloss-examples", "repa"], DirectedEdge["gloss-examples", "repa-algorithms"], DirectedEdge["gloss-examples", "repa-io"], DirectedEdge["gloss-examples", "vector"], DirectedEdge["gloss-game", "base"], DirectedEdge["gloss-game", "gloss"], DirectedEdge["gloss-game", "gloss-juicy"], DirectedEdge["gloss-juicy", "base"], DirectedEdge["gloss-juicy", "bmp"], DirectedEdge["gloss-juicy", "bytestring"], DirectedEdge["gloss-juicy", "gloss"], DirectedEdge["gloss-juicy", "JuicyPixels"], DirectedEdge["gloss-juicy", "vector"], DirectedEdge["gloss-raster", "base"], DirectedEdge["gloss-raster", "containers"], DirectedEdge["gloss-raster", "ghc-prim"], DirectedEdge["gloss-raster", "gloss"], DirectedEdge["gloss-raster", "gloss-rendering"], DirectedEdge["gloss-raster", "repa"], DirectedEdge["gloss-raster-accelerate", "accelerate"], DirectedEdge["gloss-raster-accelerate", "accelerate-cuda"], DirectedEdge["gloss-raster-accelerate", "base"], DirectedEdge["gloss-raster-accelerate", "gloss"], DirectedEdge["gloss-raster-accelerate", "gloss-accelerate"], DirectedEdge["gloss-rendering", "base"], DirectedEdge["gloss-rendering", "bmp"], DirectedEdge["gloss-rendering", "bytestring"], DirectedEdge["gloss-rendering", "containers"], DirectedEdge["gloss-rendering", "GLUT"], DirectedEdge["gloss-rendering", "OpenGL"], DirectedEdge["gloss-sodium", "base"], DirectedEdge["gloss-sodium", "gloss"], DirectedEdge["gloss-sodium", "sodium"], DirectedEdge["glpk-hs", "array"], DirectedEdge["glpk-hs", "base"], DirectedEdge["glpk-hs", "containers"], DirectedEdge["glpk-hs", "deepseq"], DirectedEdge["glpk-hs", "mtl"], DirectedEdge["glue", "glue-common"], DirectedEdge["glue", "glue-core"], DirectedEdge["glue", "glue-ekg"], DirectedEdge["glue", "glue-example"], DirectedEdge["glue", "async"], DirectedEdge["glue", "base"], DirectedEdge["glue", "ekg-core"], DirectedEdge["glue", "glue"], DirectedEdge["glue", "hashable"], DirectedEdge["glue", "lifted-base"], DirectedEdge["glue", "monad-control"], DirectedEdge["glue", "monad-loops"], DirectedEdge["glue", "text"], DirectedEdge["glue", "time"], DirectedEdge["glue", "transformers"], DirectedEdge["glue", "transformers-base"], DirectedEdge["glue", "unordered-containers"], DirectedEdge["glue-common", "base"], DirectedEdge["glue-common", "hashable"], DirectedEdge["glue-common", "lifted-base"], DirectedEdge["glue-common", "monad-control"], DirectedEdge["glue-common", "text"], DirectedEdge["glue-common", "time"], DirectedEdge["glue-common", "transformers"], DirectedEdge["glue-common", "transformers-base"], DirectedEdge["glue-common", "unordered-containers"], DirectedEdge["glue-core", "base"], DirectedEdge["glue-core", "glue-common"], DirectedEdge["glue-core", "hashable"], DirectedEdge["glue-core", "lifted-base"], DirectedEdge["glue-core", "monad-control"], DirectedEdge["glue-core", "text"], DirectedEdge["glue-core", "time"], DirectedEdge["glue-core", "transformers"], DirectedEdge["glue-core", "transformers-base"], DirectedEdge["glue-core", "unordered-containers"], DirectedEdge["glue-ekg", "base"], DirectedEdge["glue-ekg", "ekg-core"], DirectedEdge["glue-ekg", "glue-common"], DirectedEdge["glue-ekg", "hashable"], DirectedEdge["glue-ekg", "lifted-base"], DirectedEdge["glue-ekg", "monad-control"], DirectedEdge["glue-ekg", "text"], DirectedEdge["glue-ekg", "time"], DirectedEdge["glue-ekg", "transformers"], DirectedEdge["glue-ekg", "transformers-base"], DirectedEdge["glue-ekg", "unordered-containers"], DirectedEdge["glue-example", "async"], DirectedEdge["glue-example", "base"], DirectedEdge["glue-example", "ekg-core"], DirectedEdge["glue-example", "glue-common"], DirectedEdge["glue-example", "glue-core"], DirectedEdge["glue-example", "glue-ekg"], DirectedEdge["glue-example", "hashable"], DirectedEdge["glue-example", "lifted-base"], DirectedEdge["glue-example", "monad-control"], DirectedEdge["glue-example", "monad-loops"], DirectedEdge["glue-example", "text"], DirectedEdge["glue-example", "time"], DirectedEdge["glue-example", "transformers"], DirectedEdge["glue-example", "transformers-base"], DirectedEdge["glue-example", "unordered-containers"], DirectedEdge["gluturtle", "base"], DirectedEdge["gluturtle", "convertible"], DirectedEdge["gluturtle", "GLUT"], DirectedEdge["gluturtle", "stm"], DirectedEdge["gluturtle", "yjsvg"], DirectedEdge["gluturtle", "yjtools"], DirectedEdge["gmap", "array"], DirectedEdge["gmap", "AvlTree"], DirectedEdge["gmap", "base"], DirectedEdge["gmap", "COrdering"], DirectedEdge["gmap", "QuickCheck"], DirectedEdge["gmap", "random"], DirectedEdge["gmndl", "ad"], DirectedEdge["gmndl", "array"], DirectedEdge["gmndl", "base"], DirectedEdge["gmndl", "gtk"], DirectedEdge["gmndl", "gtkglext"], DirectedEdge["gmndl", "mtl"], DirectedEdge["gmndl", "OpenGL"], DirectedEdge["gmndl", "OpenGLRaw"], DirectedEdge["gmndl", "parsec"], DirectedEdge["gmndl", "priority-queue"], DirectedEdge["gmndl", "qd"], DirectedEdge["gmndl", "reflection"], DirectedEdge["gmndl", "Vec"], DirectedEdge["gnome-desktop", "base"], DirectedEdge["gnome-desktop", "directory"], DirectedEdge["gnome-desktop", "gconf"], DirectedEdge["gnome-desktop", "glib"], DirectedEdge["gnome-desktop", "gtk"], DirectedEdge["gnome-desktop", "random"], DirectedEdge["gnome-keyring", "base"], DirectedEdge["gnome-keyring", "bytestring"], DirectedEdge["gnome-keyring", "text"], DirectedEdge["gnome-keyring", "time"], DirectedEdge["gnomevfs", "array"], DirectedEdge["gnomevfs", "base"], DirectedEdge["gnomevfs", "containers"], DirectedEdge["gnomevfs", "glib"], DirectedEdge["gnomevfs", "gtk"], DirectedEdge["gnomevfs", "mtl"], DirectedEdge["gnss-converters", "base"], DirectedEdge["gnss-converters", "basic-prelude"], DirectedEdge["gnss-converters", "binary-conduit"], DirectedEdge["gnss-converters", "conduit"], DirectedEdge["gnss-converters", "conduit-extra"], DirectedEdge["gnss-converters", "gnss-converters"], DirectedEdge["gnss-converters", "lens"], DirectedEdge["gnss-converters", "resourcet"], DirectedEdge["gnss-converters", "rtcm"], DirectedEdge["gnss-converters", "sbp"], DirectedEdge["gnss-converters", "time"], DirectedEdge["gnuidn", "base"], DirectedEdge["gnuidn", "bytestring"], DirectedEdge["gnuidn", "text"], DirectedEdge["gnuplot", "array"], DirectedEdge["gnuplot", "base"], DirectedEdge["gnuplot", "containers"], DirectedEdge["gnuplot", "data-accessor"], DirectedEdge["gnuplot", "data-accessor-transformers"], DirectedEdge["gnuplot", "deepseq"], DirectedEdge["gnuplot", "filepath"], DirectedEdge["gnuplot", "process"], DirectedEdge["gnuplot", "temporary"], DirectedEdge["gnuplot", "time"], DirectedEdge["gnuplot", "transformers"], DirectedEdge["gnuplot", "utility-ht"], DirectedEdge["gnutls", "base"], DirectedEdge["gnutls", "bytestring"], DirectedEdge["gnutls", "monads-tf"], DirectedEdge["gnutls", "transformers"], DirectedEdge["goa", "base"], DirectedEdge["goa", "directory"], DirectedEdge["goa", "filepath"], DirectedEdge["goa", "process"], DirectedEdge["goal-core", "base"], DirectedEdge["goal-core", "cairo"], DirectedEdge["goal-core", "Chart"], DirectedEdge["goal-core", "Chart-cairo"], DirectedEdge["goal-core", "Chart-gtk"], DirectedEdge["goal-core", "colour"], DirectedEdge["goal-core", "containers"], DirectedEdge["goal-core", "data-default-class"], DirectedEdge["goal-core", "goal-core"], DirectedEdge["goal-core", "gtk"], DirectedEdge["goal-core", "lens"], DirectedEdge["goal-geometry", "base"], DirectedEdge["goal-geometry", "goal-core"], DirectedEdge["goal-geometry", "goal-geometry"], DirectedEdge["goal-geometry", "hmatrix"], DirectedEdge["goal-geometry", "vector"], DirectedEdge["goal-probability", "base"], DirectedEdge["goal-probability", "goal-core"], DirectedEdge["goal-probability", "goal-geometry"], DirectedEdge["goal-probability", "goal-probability"], DirectedEdge["goal-probability", "hmatrix"], DirectedEdge["goal-probability", "math-functions"], DirectedEdge["goal-probability", "mwc-random"], DirectedEdge["goal-probability", "mwc-random-monad"], DirectedEdge["goal-probability", "statistics"], DirectedEdge["goal-probability", "vector"], DirectedEdge["goal-simulation", "base"], DirectedEdge["goal-simulation", "cairo"], DirectedEdge["goal-simulation", "clock"], DirectedEdge["goal-simulation", "directory"], DirectedEdge["goal-simulation", "goal-core"], DirectedEdge["goal-simulation", "goal-geometry"], DirectedEdge["goal-simulation", "goal-probability"], DirectedEdge["goal-simulation", "goal-simulation"], DirectedEdge["goal-simulation", "gtk"], DirectedEdge["goal-simulation", "hmatrix"], DirectedEdge["goal-simulation", "machines"], DirectedEdge["goal-simulation", "mtl"], DirectedEdge["goal-simulation", "vector"], DirectedEdge["goatee", "base"], DirectedEdge["goatee", "containers"], DirectedEdge["goatee", "mtl"], DirectedEdge["goatee", "parsec"], DirectedEdge["goatee", "template-haskell"], DirectedEdge["goatee-gtk", "base"], DirectedEdge["goatee-gtk", "cairo"], DirectedEdge["goatee-gtk", "containers"], DirectedEdge["goatee-gtk", "directory"], DirectedEdge["goatee-gtk", "filepath"], DirectedEdge["goatee-gtk", "glib"], DirectedEdge["goatee-gtk", "goatee"], DirectedEdge["goatee-gtk", "goatee-gtk"], DirectedEdge["goatee-gtk", "gtk"], DirectedEdge["goatee-gtk", "mtl"], DirectedEdge["goatee-gtk", "parsec"], DirectedEdge["gofer-prelude", "base"], DirectedEdge["gofer-prelude", "ghc-prim"], DirectedEdge["gogol", "aeson"], DirectedEdge["gogol", "base"], DirectedEdge["gogol", "bytestring"], DirectedEdge["gogol", "case-insensitive"], DirectedEdge["gogol", "cryptonite"], DirectedEdge["gogol", "data-default-class"], DirectedEdge["gogol", "directory"], DirectedEdge["gogol", "exceptions"], DirectedEdge["gogol", "filepath"], DirectedEdge["gogol", "gogol-core"], DirectedEdge["gogol", "http-client"], DirectedEdge["gogol", "http-conduit"], DirectedEdge["gogol", "http-media"], DirectedEdge["gogol", "http-types"], DirectedEdge["gogol", "lens"], DirectedEdge["gogol", "memory"], DirectedEdge["gogol", "monad-control"], DirectedEdge["gogol", "mtl"], DirectedEdge["gogol", "resourcet"], DirectedEdge["gogol", "text"], DirectedEdge["gogol", "time"], DirectedEdge["gogol", "transformers"], DirectedEdge["gogol", "transformers-base"], DirectedEdge["gogol", "unordered-containers"], DirectedEdge["gogol", "x509-store"], DirectedEdge["gogol-adexchange-buyer", "base"], DirectedEdge["gogol-adexchange-buyer", "gogol-core"], DirectedEdge["gogol-adexchange-seller", "base"], DirectedEdge["gogol-adexchange-seller", "gogol-core"], DirectedEdge["gogol-admin-datatransfer", "base"], DirectedEdge["gogol-admin-datatransfer", "gogol-core"], DirectedEdge["gogol-admin-directory", "base"], DirectedEdge["gogol-admin-directory", "gogol-core"], DirectedEdge["gogol-admin-emailmigration", "base"], DirectedEdge["gogol-admin-emailmigration", "gogol-core"], DirectedEdge["gogol-admin-reports", "base"], DirectedEdge["gogol-admin-reports", "gogol-core"], DirectedEdge["gogol-adsense", "base"], DirectedEdge["gogol-adsense", "gogol-core"], DirectedEdge["gogol-adsense-host", "base"], DirectedEdge["gogol-adsense-host", "gogol-core"], DirectedEdge["gogol-affiliates", "base"], DirectedEdge["gogol-affiliates", "gogol-core"], DirectedEdge["gogol-analytics", "base"], DirectedEdge["gogol-analytics", "gogol-core"], DirectedEdge["gogol-android-enterprise", "base"], DirectedEdge["gogol-android-enterprise", "gogol-core"], DirectedEdge["gogol-android-publisher", "base"], DirectedEdge["gogol-android-publisher", "gogol-core"], DirectedEdge["gogol-appengine", "base"], DirectedEdge["gogol-appengine", "gogol-core"], DirectedEdge["gogol-apps-activity", "base"], DirectedEdge["gogol-apps-activity", "gogol-core"], DirectedEdge["gogol-apps-calendar", "base"], DirectedEdge["gogol-apps-calendar", "gogol-core"], DirectedEdge["gogol-apps-licensing", "base"], DirectedEdge["gogol-apps-licensing", "gogol-core"], DirectedEdge["gogol-apps-reseller", "base"], DirectedEdge["gogol-apps-reseller", "gogol-core"], DirectedEdge["gogol-apps-tasks", "base"], DirectedEdge["gogol-apps-tasks", "gogol-core"], DirectedEdge["gogol-appstate", "base"], DirectedEdge["gogol-appstate", "gogol-core"], DirectedEdge["gogol-autoscaler", "base"], DirectedEdge["gogol-autoscaler", "gogol-core"], DirectedEdge["gogol-bigquery", "base"], DirectedEdge["gogol-bigquery", "gogol-core"], DirectedEdge["gogol-billing", "base"], DirectedEdge["gogol-billing", "gogol-core"], DirectedEdge["gogol-blogger", "base"], DirectedEdge["gogol-blogger", "gogol-core"], DirectedEdge["gogol-books", "base"], DirectedEdge["gogol-books", "gogol-core"], DirectedEdge["gogol-civicinfo", "base"], DirectedEdge["gogol-civicinfo", "gogol-core"], DirectedEdge["gogol-classroom", "base"], DirectedEdge["gogol-classroom", "gogol-core"], DirectedEdge["gogol-cloudtrace", "base"], DirectedEdge["gogol-cloudtrace", "gogol-core"], DirectedEdge["gogol-compute", "base"], DirectedEdge["gogol-compute", "gogol-core"], DirectedEdge["gogol-container", "base"], DirectedEdge["gogol-container", "gogol-core"], DirectedEdge["gogol-core", "aeson"], DirectedEdge["gogol-core", "attoparsec"], DirectedEdge["gogol-core", "base"], DirectedEdge["gogol-core", "bytestring"], DirectedEdge["gogol-core", "case-insensitive"], DirectedEdge["gogol-core", "conduit"], DirectedEdge["gogol-core", "dlist"], DirectedEdge["gogol-core", "exceptions"], DirectedEdge["gogol-core", "hashable"], DirectedEdge["gogol-core", "http-client"], DirectedEdge["gogol-core", "http-media"], DirectedEdge["gogol-core", "http-types"], DirectedEdge["gogol-core", "lens"], DirectedEdge["gogol-core", "nats"], DirectedEdge["gogol-core", "old-locale"], DirectedEdge["gogol-core", "resourcet"], DirectedEdge["gogol-core", "scientific"], DirectedEdge["gogol-core", "servant"], DirectedEdge["gogol-core", "text"], DirectedEdge["gogol-core", "time"], DirectedEdge["gogol-core", "unordered-containers"], DirectedEdge["gogol-customsearch", "base"], DirectedEdge["gogol-customsearch", "gogol-core"], DirectedEdge["gogol-dataflow", "base"], DirectedEdge["gogol-dataflow", "gogol-core"], DirectedEdge["gogol-datastore", "base"], DirectedEdge["gogol-datastore", "gogol-core"], DirectedEdge["gogol-debugger", "base"], DirectedEdge["gogol-debugger", "gogol-core"], DirectedEdge["gogol-deploymentmanager", "base"], DirectedEdge["gogol-deploymentmanager", "gogol-core"], DirectedEdge["gogol-dfareporting", "base"], DirectedEdge["gogol-dfareporting", "gogol-core"], DirectedEdge["gogol-discovery", "base"], DirectedEdge["gogol-discovery", "gogol-core"], DirectedEdge["gogol-dns", "base"], DirectedEdge["gogol-dns", "gogol-core"], DirectedEdge["gogol-doubleclick-bids", "base"], DirectedEdge["gogol-doubleclick-bids", "gogol-core"], DirectedEdge["gogol-doubleclick-search", "base"], DirectedEdge["gogol-doubleclick-search", "gogol-core"], DirectedEdge["gogol-drive", "base"], DirectedEdge["gogol-drive", "gogol-core"], DirectedEdge["gogol-fitness", "base"], DirectedEdge["gogol-fitness", "gogol-core"], DirectedEdge["gogol-fonts", "base"], DirectedEdge["gogol-fonts", "gogol-core"], DirectedEdge["gogol-freebasesearch", "base"], DirectedEdge["gogol-freebasesearch", "gogol-core"], DirectedEdge["gogol-fusiontables", "base"], DirectedEdge["gogol-fusiontables", "gogol-core"], DirectedEdge["gogol-games", "base"], DirectedEdge["gogol-games", "gogol-core"], DirectedEdge["gogol-games-configuration", "base"], DirectedEdge["gogol-games-configuration", "gogol-core"], DirectedEdge["gogol-games-management", "base"], DirectedEdge["gogol-games-management", "gogol-core"], DirectedEdge["gogol-genomics", "base"], DirectedEdge["gogol-genomics", "gogol-core"], DirectedEdge["gogol-gmail", "base"], DirectedEdge["gogol-gmail", "gogol-core"], DirectedEdge["gogol-groups-migration", "base"], DirectedEdge["gogol-groups-migration", "gogol-core"], DirectedEdge["gogol-groups-settings", "base"], DirectedEdge["gogol-groups-settings", "gogol-core"], DirectedEdge["gogol-identity-toolkit", "base"], DirectedEdge["gogol-identity-toolkit", "gogol-core"], DirectedEdge["gogol-latencytest", "base"], DirectedEdge["gogol-latencytest", "gogol-core"], DirectedEdge["gogol-logging", "base"], DirectedEdge["gogol-logging", "gogol-core"], DirectedEdge["gogol-maps-coordinate", "base"], DirectedEdge["gogol-maps-coordinate", "gogol-core"], DirectedEdge["gogol-maps-engine", "base"], DirectedEdge["gogol-maps-engine", "gogol-core"], DirectedEdge["gogol-mirror", "base"], DirectedEdge["gogol-mirror", "gogol-core"], DirectedEdge["gogol-monitoring", "base"], DirectedEdge["gogol-monitoring", "gogol-core"], DirectedEdge["gogol-oauth2", "base"], DirectedEdge["gogol-oauth2", "gogol-core"], DirectedEdge["gogol-pagespeed", "base"], DirectedEdge["gogol-pagespeed", "gogol-core"], DirectedEdge["gogol-partners", "base"], DirectedEdge["gogol-partners", "gogol-core"], DirectedEdge["gogol-play-moviespartner", "base"], DirectedEdge["gogol-play-moviespartner", "gogol-core"], DirectedEdge["gogol-plus", "base"], DirectedEdge["gogol-plus", "gogol-core"], DirectedEdge["gogol-plus-domains", "base"], DirectedEdge["gogol-plus-domains", "gogol-core"], DirectedEdge["gogol-prediction", "base"], DirectedEdge["gogol-prediction", "gogol-core"], DirectedEdge["gogol-proximitybeacon", "base"], DirectedEdge["gogol-proximitybeacon", "gogol-core"], DirectedEdge["gogol-pubsub", "base"], DirectedEdge["gogol-pubsub", "gogol-core"], DirectedEdge["gogol-qpxexpress", "base"], DirectedEdge["gogol-qpxexpress", "gogol-core"], DirectedEdge["gogol-replicapool", "base"], DirectedEdge["gogol-replicapool", "gogol-core"], DirectedEdge["gogol-replicapool-updater", "base"], DirectedEdge["gogol-replicapool-updater", "gogol-core"], DirectedEdge["gogol-resourcemanager", "base"], DirectedEdge["gogol-resourcemanager", "gogol-core"], DirectedEdge["gogol-resourceviews", "base"], DirectedEdge["gogol-resourceviews", "gogol-core"], DirectedEdge["gogol-shopping-content", "base"], DirectedEdge["gogol-shopping-content", "gogol-core"], DirectedEdge["gogol-siteverification", "base"], DirectedEdge["gogol-siteverification", "gogol-core"], DirectedEdge["gogol-spectrum", "base"], DirectedEdge["gogol-spectrum", "gogol-core"], DirectedEdge["gogol-sqladmin", "base"], DirectedEdge["gogol-sqladmin", "gogol-core"], DirectedEdge["gogol-storage", "base"], DirectedEdge["gogol-storage", "gogol-core"], DirectedEdge["gogol-storage-transfer", "base"], DirectedEdge["gogol-storage-transfer", "gogol-core"], DirectedEdge["gogol-tagmanager", "base"], DirectedEdge["gogol-tagmanager", "gogol-core"], DirectedEdge["gogol-taskqueue", "base"], DirectedEdge["gogol-taskqueue", "gogol-core"], DirectedEdge["gogol-translate", "base"], DirectedEdge["gogol-translate", "gogol-core"], DirectedEdge["gogol-urlshortener", "base"], DirectedEdge["gogol-urlshortener", "gogol-core"], DirectedEdge["gogol-useraccounts", "base"], DirectedEdge["gogol-useraccounts", "gogol-core"], DirectedEdge["gogol-webmaster-tools", "base"], DirectedEdge["gogol-webmaster-tools", "gogol-core"], DirectedEdge["gogol-youtube", "base"], DirectedEdge["gogol-youtube", "gogol-core"], DirectedEdge["gogol-youtube-analytics", "base"], DirectedEdge["gogol-youtube-analytics", "gogol-core"], DirectedEdge["gogol-youtube-reporting", "base"], DirectedEdge["gogol-youtube-reporting", "gogol-core"], DirectedEdge["gooey", "base"], DirectedEdge["gooey", "renderable"], DirectedEdge["gooey", "transformers"], DirectedEdge["gooey", "varying"], DirectedEdge["google-cloud", "aeson"], DirectedEdge["google-cloud", "base"], DirectedEdge["google-cloud", "bytestring"], DirectedEdge["google-cloud", "http-client"], DirectedEdge["google-cloud", "http-client-tls"], DirectedEdge["google-cloud", "http-types"], DirectedEdge["google-cloud", "mtl"], DirectedEdge["google-cloud", "random"], DirectedEdge["google-cloud", "scientific"], DirectedEdge["google-cloud", "stm"], DirectedEdge["google-cloud", "text"], DirectedEdge["google-cloud", "time"], DirectedEdge["google-cloud", "unordered-containers"], DirectedEdge["google-dictionary", "aeson"], DirectedEdge["google-dictionary", "base"], DirectedEdge["google-dictionary", "bytestring"], DirectedEdge["google-dictionary", "HTTP"], DirectedEdge["google-dictionary", "lens"], DirectedEdge["google-dictionary", "mtl"], DirectedEdge["google-drive", "aeson"], DirectedEdge["google-drive", "base"], DirectedEdge["google-drive", "bytestring"], DirectedEdge["google-drive", "conduit"], DirectedEdge["google-drive", "conduit-extra"], DirectedEdge["google-drive", "directory"], DirectedEdge["google-drive", "filepath"], DirectedEdge["google-drive", "http-conduit"], DirectedEdge["google-drive", "http-types"], DirectedEdge["google-drive", "mtl"], DirectedEdge["google-drive", "random"], DirectedEdge["google-drive", "resourcet"], DirectedEdge["google-drive", "text"], DirectedEdge["google-drive", "time"], DirectedEdge["google-drive", "unordered-containers"], DirectedEdge["google-html5-slide", "base"], DirectedEdge["google-html5-slide", "blaze-html"], DirectedEdge["google-html5-slide", "cmdargs"], DirectedEdge["google-html5-slide", "data-default"], DirectedEdge["google-html5-slide", "hamlet"], DirectedEdge["google-html5-slide", "pandoc"], DirectedEdge["google-html5-slide", "shakespeare-css"], DirectedEdge["google-html5-slide", "syb"], DirectedEdge["google-html5-slide", "text"], DirectedEdge["google-html5-slide", "time"], DirectedEdge["google-mail-filters", "base"], DirectedEdge["google-mail-filters", "containers"], DirectedEdge["google-mail-filters", "google-search"], DirectedEdge["google-mail-filters", "old-locale"], DirectedEdge["google-mail-filters", "text"], DirectedEdge["google-mail-filters", "time"], DirectedEdge["google-mail-filters", "xml-conduit"], DirectedEdge["google-oauth2", "aeson"], DirectedEdge["google-oauth2", "base"], DirectedEdge["google-oauth2", "bytestring"], DirectedEdge["google-oauth2", "HTTP"], DirectedEdge["google-oauth2", "http-conduit"], DirectedEdge["google-search", "base"], DirectedEdge["google-search", "free"], DirectedEdge["google-search", "nats"], DirectedEdge["google-search", "old-locale"], DirectedEdge["google-search", "text"], DirectedEdge["google-search", "time"], DirectedEdge["google-translate", "aeson"], DirectedEdge["google-translate", "base"], DirectedEdge["google-translate", "bytestring"], DirectedEdge["google-translate", "http-api-data"], DirectedEdge["google-translate", "http-client"], DirectedEdge["google-translate", "servant"], DirectedEdge["google-translate", "servant-client"], DirectedEdge["google-translate", "text"], DirectedEdge["google-translate", "transformers"], DirectedEdge["googleplus", "aeson"], DirectedEdge["googleplus", "attoparsec"], DirectedEdge["googleplus", "base"], DirectedEdge["googleplus", "bytestring"], DirectedEdge["googleplus", "containers"], DirectedEdge["googleplus", "enumerator"], DirectedEdge["googleplus", "http-enumerator"], DirectedEdge["googleplus", "http-types"], DirectedEdge["googleplus", "mtl"], DirectedEdge["googleplus", "text"], DirectedEdge["googleplus", "time"], DirectedEdge["googleplus", "timerep"], DirectedEdge["googleplus", "transformers"], DirectedEdge["googleplus", "url"], DirectedEdge["googlepolyline", "base"], DirectedEdge["googlepolyline", "bytestring"], DirectedEdge["googlepolyline", "text"], DirectedEdge["gopherbot", "base"], DirectedEdge["gopherbot", "HDBC"], DirectedEdge["gopherbot", "HDBC-postgresql"], DirectedEdge["gopherbot", "MissingH"], DirectedEdge["gopherbot", "network"], DirectedEdge["gopherbot", "parsec"], DirectedEdge["gopherbot", "unix"], DirectedEdge["gore-and-ash", "base"], DirectedEdge["gore-and-ash", "containers"], DirectedEdge["gore-and-ash", "deepseq"], DirectedEdge["gore-and-ash", "exceptions"], DirectedEdge["gore-and-ash", "hashable"], DirectedEdge["gore-and-ash", "linear"], DirectedEdge["gore-and-ash", "mtl"], DirectedEdge["gore-and-ash", "parallel"], DirectedEdge["gore-and-ash", "profunctors"], DirectedEdge["gore-and-ash", "random"], DirectedEdge["gore-and-ash", "semigroups"], DirectedEdge["gore-and-ash", "time"], DirectedEdge["gore-and-ash", "transformers"], DirectedEdge["gore-and-ash", "unordered-containers"], DirectedEdge["gore-and-ash-actor", "base"], DirectedEdge["gore-and-ash-actor", "containers"], DirectedEdge["gore-and-ash-actor", "deepseq"], DirectedEdge["gore-and-ash-actor", "exceptions"], DirectedEdge["gore-and-ash-actor", "gore-and-ash"], DirectedEdge["gore-and-ash-actor", "hashable"], DirectedEdge["gore-and-ash-actor", "mtl"], DirectedEdge["gore-and-ash-actor", "resourcet"], DirectedEdge["gore-and-ash-actor", "transformers"], DirectedEdge["gore-and-ash-actor", "transformers-base"], DirectedEdge["gore-and-ash-actor", "unordered-containers"], DirectedEdge["gore-and-ash-async", "async"], DirectedEdge["gore-and-ash-async", "base"], DirectedEdge["gore-and-ash-async", "containers"], DirectedEdge["gore-and-ash-async", "deepseq"], DirectedEdge["gore-and-ash-async", "exceptions"], DirectedEdge["gore-and-ash-async", "gore-and-ash"], DirectedEdge["gore-and-ash-async", "hashable"], DirectedEdge["gore-and-ash-async", "mtl"], DirectedEdge["gore-and-ash-async", "resourcet"], DirectedEdge["gore-and-ash-async", "transformers"], DirectedEdge["gore-and-ash-async", "transformers-base"], DirectedEdge["gore-and-ash-async", "unordered-containers"], DirectedEdge["gore-and-ash-demo", "base"], DirectedEdge["gore-and-ash-demo", "bytestring"], DirectedEdge["gore-and-ash-demo", "cereal"], DirectedEdge["gore-and-ash-demo", "containers"], DirectedEdge["gore-and-ash-demo", "deepseq"], DirectedEdge["gore-and-ash-demo", "exception-transformers"], DirectedEdge["gore-and-ash-demo", "exceptions"], DirectedEdge["gore-and-ash-demo", "GLFW-b"], DirectedEdge["gore-and-ash-demo", "gore-and-ash"], DirectedEdge["gore-and-ash-demo", "gore-and-ash-actor"], DirectedEdge["gore-and-ash-demo", "gore-and-ash-logging"], DirectedEdge["gore-and-ash-demo", "gore-and-ash-network"], DirectedEdge["gore-and-ash-demo", "gore-and-ash-sdl"], DirectedEdge["gore-and-ash-demo", "gore-and-ash-sync"], DirectedEdge["gore-and-ash-demo", "hashable"], DirectedEdge["gore-and-ash-demo", "lens"], DirectedEdge["gore-and-ash-demo", "linear"], DirectedEdge["gore-and-ash-demo", "network"], DirectedEdge["gore-and-ash-demo", "OpenGL"], DirectedEdge["gore-and-ash-demo", "text"], DirectedEdge["gore-and-ash-demo", "text-show"], DirectedEdge["gore-and-ash-demo", "time"], DirectedEdge["gore-and-ash-demo", "transformers"], DirectedEdge["gore-and-ash-demo", "unordered-containers"], DirectedEdge["gore-and-ash-demo", "vector"], DirectedEdge["gore-and-ash-glfw", "base"], DirectedEdge["gore-and-ash-glfw", "deepseq"], DirectedEdge["gore-and-ash-glfw", "exceptions"], DirectedEdge["gore-and-ash-glfw", "extra"], DirectedEdge["gore-and-ash-glfw", "GLFW-b"], DirectedEdge["gore-and-ash-glfw", "gore-and-ash"], DirectedEdge["gore-and-ash-glfw", "hashable"], DirectedEdge["gore-and-ash-glfw", "mtl"], DirectedEdge["gore-and-ash-glfw", "transformers"], DirectedEdge["gore-and-ash-glfw", "unordered-containers"], DirectedEdge["gore-and-ash-logging", "base"], DirectedEdge["gore-and-ash-logging", "containers"], DirectedEdge["gore-and-ash-logging", "deepseq"], DirectedEdge["gore-and-ash-logging", "exceptions"], DirectedEdge["gore-and-ash-logging", "extra"], DirectedEdge["gore-and-ash-logging", "gore-and-ash"], DirectedEdge["gore-and-ash-logging", "hashable"], DirectedEdge["gore-and-ash-logging", "mtl"], DirectedEdge["gore-and-ash-logging", "resourcet"], DirectedEdge["gore-and-ash-logging", "text"], DirectedEdge["gore-and-ash-logging", "text-show"], DirectedEdge["gore-and-ash-logging", "transformers"], DirectedEdge["gore-and-ash-logging", "transformers-base"], DirectedEdge["gore-and-ash-logging", "unordered-containers"], DirectedEdge["gore-and-ash-network", "base"], DirectedEdge["gore-and-ash-network", "bytestring"], DirectedEdge["gore-and-ash-network", "containers"], DirectedEdge["gore-and-ash-network", "deepseq"], DirectedEdge["gore-and-ash-network", "exceptions"], DirectedEdge["gore-and-ash-network", "extra"], DirectedEdge["gore-and-ash-network", "ghc-prim"], DirectedEdge["gore-and-ash-network", "gore-and-ash"], DirectedEdge["gore-and-ash-network", "gore-and-ash-logging"], DirectedEdge["gore-and-ash-network", "hashable"], DirectedEdge["gore-and-ash-network", "integer-gmp"], DirectedEdge["gore-and-ash-network", "mtl"], DirectedEdge["gore-and-ash-network", "network"], DirectedEdge["gore-and-ash-network", "resourcet"], DirectedEdge["gore-and-ash-network", "text"], DirectedEdge["gore-and-ash-network", "text-show"], DirectedEdge["gore-and-ash-network", "transformers"], DirectedEdge["gore-and-ash-network", "transformers-base"], DirectedEdge["gore-and-ash-network", "typesafe-endian"], DirectedEdge["gore-and-ash-network", "unordered-containers"], DirectedEdge["gore-and-ash-sdl", "base"], DirectedEdge["gore-and-ash-sdl", "containers"], DirectedEdge["gore-and-ash-sdl", "deepseq"], DirectedEdge["gore-and-ash-sdl", "exceptions"], DirectedEdge["gore-and-ash-sdl", "gore-and-ash"], DirectedEdge["gore-and-ash-sdl", "lens"], DirectedEdge["gore-and-ash-sdl", "linear"], DirectedEdge["gore-and-ash-sdl", "mtl"], DirectedEdge["gore-and-ash-sdl", "resourcet"], DirectedEdge["gore-and-ash-sdl", "text"], DirectedEdge["gore-and-ash-sdl", "transformers"], DirectedEdge["gore-and-ash-sdl", "transformers-base"], DirectedEdge["gore-and-ash-sdl", "unordered-containers"], DirectedEdge["gore-and-ash-sync", "base"], DirectedEdge["gore-and-ash-sync", "bytestring"], DirectedEdge["gore-and-ash-sync", "cereal"], DirectedEdge["gore-and-ash-sync", "containers"], DirectedEdge["gore-and-ash-sync", "deepseq"], DirectedEdge["gore-and-ash-sync", "exceptions"], DirectedEdge["gore-and-ash-sync", "gore-and-ash"], DirectedEdge["gore-and-ash-sync", "gore-and-ash-actor"], DirectedEdge["gore-and-ash-sync", "gore-and-ash-logging"], DirectedEdge["gore-and-ash-sync", "gore-and-ash-network"], DirectedEdge["gore-and-ash-sync", "hashable"], DirectedEdge["gore-and-ash-sync", "mtl"], DirectedEdge["gore-and-ash-sync", "resourcet"], DirectedEdge["gore-and-ash-sync", "text"], DirectedEdge["gore-and-ash-sync", "transformers"], DirectedEdge["gore-and-ash-sync", "transformers-base"], DirectedEdge["gore-and-ash-sync", "unordered-containers"], DirectedEdge["gpah", "base"], DirectedEdge["gpah", "bytestring"], DirectedEdge["gpah", "Cabal"], DirectedEdge["gpah", "cmdargs"], DirectedEdge["gpah", "containers"], DirectedEdge["gpah", "csv"], DirectedEdge["gpah", "deepseq"], DirectedEdge["gpah", "directory"], DirectedEdge["gpah", "filepath"], DirectedEdge["gpah", "haskell-src-exts"], DirectedEdge["gpah", "hint"], DirectedEdge["gpah", "HTTP"], DirectedEdge["gpah", "network"], DirectedEdge["gpah", "process"], DirectedEdge["gpah", "syb"], DirectedEdge["gpah", "tar"], DirectedEdge["gpah", "uniplate"], DirectedEdge["gpah", "uu-parsinglib"], DirectedEdge["gpah", "zlib"], DirectedEdge["gpcsets", "base"], DirectedEdge["gpio", "base"], DirectedEdge["gpio", "basic-prelude"], DirectedEdge["gpio", "gpio"], DirectedEdge["gpio", "monad-control"], DirectedEdge["gpio", "optparse-generic"], DirectedEdge["gpio", "string-conversions"], DirectedEdge["gpolyline", "base"], DirectedEdge["gpolyline", "split"], DirectedEdge["gps", "base"], DirectedEdge["gps", "pretty"], DirectedEdge["gps", "prettyclass"], DirectedEdge["gps", "statistics"], DirectedEdge["gps", "text"], DirectedEdge["gps", "time"], DirectedEdge["gps", "vector"], DirectedEdge["gps2htmlReport", "base"], DirectedEdge["gps2htmlReport", "bytestring"], DirectedEdge["gps2htmlReport", "cairo"], DirectedEdge["gps2htmlReport", "Chart"], DirectedEdge["gps2htmlReport", "cmdargs"], DirectedEdge["gps2htmlReport", "colour"], DirectedEdge["gps2htmlReport", "data-accessor"], DirectedEdge["gps2htmlReport", "directory"], DirectedEdge["gps2htmlReport", "filepath"], DirectedEdge["gps2htmlReport", "gd"], DirectedEdge["gps2htmlReport", "gps"], DirectedEdge["gps2htmlReport", "GPX"], DirectedEdge["gps2htmlReport", "hsmagick"], DirectedEdge["gps2htmlReport", "html"], DirectedEdge["gps2htmlReport", "http-enumerator"], DirectedEdge["gps2htmlReport", "process"], DirectedEdge["gps2htmlReport", "random"], DirectedEdge["gps2htmlReport", "tar"], DirectedEdge["gps2htmlReport", "time"], DirectedEdge["gps2htmlReport", "xsd"], DirectedEdge["gpx-conduit", "attoparsec"], DirectedEdge["gpx-conduit", "base"], DirectedEdge["gpx-conduit", "conduit"], DirectedEdge["gpx-conduit", "filepath"], DirectedEdge["gpx-conduit", "monad-control"], DirectedEdge["gpx-conduit", "old-locale"], DirectedEdge["gpx-conduit", "text"], DirectedEdge["gpx-conduit", "time"], DirectedEdge["gpx-conduit", "void"], DirectedEdge["gpx-conduit", "xml-conduit"], DirectedEdge["gpx-conduit", "xml-types"], DirectedEdge["graceful", "base"], DirectedEdge["graceful", "directory"], DirectedEdge["graceful", "network"], DirectedEdge["graceful", "stm"], DirectedEdge["graceful", "unix"], DirectedEdge["grammar-combinators", "base"], DirectedEdge["grammar-combinators", "containers"], DirectedEdge["grammar-combinators", "enumerable"], DirectedEdge["grammar-combinators", "fgl"], DirectedEdge["grammar-combinators", "graphviz"], DirectedEdge["grammar-combinators", "MaybeT"], DirectedEdge["grammar-combinators", "mtl"], DirectedEdge["grammar-combinators", "multirec"], DirectedEdge["grammar-combinators", "parsec"], DirectedEdge["grammar-combinators", "template-haskell"], DirectedEdge["grammar-combinators", "text"], DirectedEdge["grammar-combinators", "uu-parsinglib"], DirectedEdge["grapefruit-examples", "base"], DirectedEdge["grapefruit-examples", "colour"], DirectedEdge["grapefruit-examples", "containers"], DirectedEdge["grapefruit-examples", "fraction"], DirectedEdge["grapefruit-examples", "grapefruit-frp"], DirectedEdge["grapefruit-examples", "grapefruit-records"], DirectedEdge["grapefruit-examples", "grapefruit-ui"], DirectedEdge["grapefruit-frp", "arrows"], DirectedEdge["grapefruit-frp", "base"], DirectedEdge["grapefruit-frp", "containers"], DirectedEdge["grapefruit-frp", "fingertree"], DirectedEdge["grapefruit-frp", "semigroups"], DirectedEdge["grapefruit-frp", "TypeCompose"], DirectedEdge["grapefruit-records", "arrows"], DirectedEdge["grapefruit-records", "base"], DirectedEdge["grapefruit-records", "grapefruit-frp"], DirectedEdge["grapefruit-ui", "arrows"], DirectedEdge["grapefruit-ui", "base"], DirectedEdge["grapefruit-ui", "colour"], DirectedEdge["grapefruit-ui", "containers"], DirectedEdge["grapefruit-ui", "fraction"], DirectedEdge["grapefruit-ui", "grapefruit-frp"], DirectedEdge["grapefruit-ui", "grapefruit-records"], DirectedEdge["grapefruit-ui-gtk", "base"], DirectedEdge["grapefruit-ui-gtk", "colour"], DirectedEdge["grapefruit-ui-gtk", "containers"], DirectedEdge["grapefruit-ui-gtk", "fraction"], DirectedEdge["grapefruit-ui-gtk", "glib"], DirectedEdge["grapefruit-ui-gtk", "grapefruit-frp"], DirectedEdge["grapefruit-ui-gtk", "grapefruit-records"], DirectedEdge["grapefruit-ui-gtk", "grapefruit-ui"], DirectedEdge["grapefruit-ui-gtk", "gtk"], DirectedEdge["graph-core", "base"], DirectedEdge["graph-core", "containers"], DirectedEdge["graph-core", "deepseq"], DirectedEdge["graph-core", "hashable"], DirectedEdge["graph-core", "mtl"], DirectedEdge["graph-core", "safe"], DirectedEdge["graph-core", "unordered-containers"], DirectedEdge["graph-core", "vector"], DirectedEdge["graph-generators", "base"], DirectedEdge["graph-generators", "containers"], DirectedEdge["graph-generators", "directory"], DirectedEdge["graph-generators", "fgl"], DirectedEdge["graph-generators", "multiset"], DirectedEdge["graph-generators", "mwc-random"], DirectedEdge["graph-matchings", "base"], DirectedEdge["graph-matchings", "containers"], DirectedEdge["graph-matchings", "fgl"], DirectedEdge["graph-rewriting", "base"], DirectedEdge["graph-rewriting", "base-unicode-symbols"], DirectedEdge["graph-rewriting", "containers"], DirectedEdge["graph-rewriting", "mtl"], DirectedEdge["graph-rewriting-cl", "graph-rewriting-trs"], DirectedEdge["graph-rewriting-cl", "base"], DirectedEdge["graph-rewriting-cl", "base-unicode-symbols"], DirectedEdge["graph-rewriting-cl", "GLUT"], DirectedEdge["graph-rewriting-cl", "graph-rewriting"], DirectedEdge["graph-rewriting-cl", "graph-rewriting-gl"], DirectedEdge["graph-rewriting-cl", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-cl", "OpenGL"], DirectedEdge["graph-rewriting-cl", "parsec"], DirectedEdge["graph-rewriting-gl", "AC-Vector"], DirectedEdge["graph-rewriting-gl", "base"], DirectedEdge["graph-rewriting-gl", "base-unicode-symbols"], DirectedEdge["graph-rewriting-gl", "containers"], DirectedEdge["graph-rewriting-gl", "GLUT"], DirectedEdge["graph-rewriting-gl", "graph-rewriting"], DirectedEdge["graph-rewriting-gl", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-gl", "OpenGL"], DirectedEdge["graph-rewriting-lambdascope", "base"], DirectedEdge["graph-rewriting-lambdascope", "base-unicode-symbols"], DirectedEdge["graph-rewriting-lambdascope", "GLUT"], DirectedEdge["graph-rewriting-lambdascope", "graph-rewriting"], DirectedEdge["graph-rewriting-lambdascope", "graph-rewriting-gl"], DirectedEdge["graph-rewriting-lambdascope", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-lambdascope", "graph-rewriting-strategies"], DirectedEdge["graph-rewriting-lambdascope", "IndentParser"], DirectedEdge["graph-rewriting-lambdascope", "OpenGL"], DirectedEdge["graph-rewriting-lambdascope", "parsec"], DirectedEdge["graph-rewriting-layout", "AC-Vector"], DirectedEdge["graph-rewriting-layout", "base"], DirectedEdge["graph-rewriting-layout", "base-unicode-symbols"], DirectedEdge["graph-rewriting-layout", "graph-rewriting"], DirectedEdge["graph-rewriting-ski", "base"], DirectedEdge["graph-rewriting-ski", "base-unicode-symbols"], DirectedEdge["graph-rewriting-ski", "GLUT"], DirectedEdge["graph-rewriting-ski", "graph-rewriting"], DirectedEdge["graph-rewriting-ski", "graph-rewriting-gl"], DirectedEdge["graph-rewriting-ski", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-ski", "OpenGL"], DirectedEdge["graph-rewriting-ski", "parsec"], DirectedEdge["graph-rewriting-strategies", "base"], DirectedEdge["graph-rewriting-strategies", "base-unicode-symbols"], DirectedEdge["graph-rewriting-strategies", "containers"], DirectedEdge["graph-rewriting-strategies", "graph-rewriting"], DirectedEdge["graph-rewriting-trs", "base"], DirectedEdge["graph-rewriting-trs", "base-unicode-symbols"], DirectedEdge["graph-rewriting-trs", "containers"], DirectedEdge["graph-rewriting-trs", "directory"], DirectedEdge["graph-rewriting-trs", "filepath"], DirectedEdge["graph-rewriting-trs", "GLUT"], DirectedEdge["graph-rewriting-trs", "graph-rewriting"], DirectedEdge["graph-rewriting-trs", "graph-rewriting-gl"], DirectedEdge["graph-rewriting-trs", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-trs", "OpenGL"], DirectedEdge["graph-rewriting-trs", "uu-parsinglib"], DirectedEdge["graph-rewriting-ww", "base"], DirectedEdge["graph-rewriting-ww", "base-unicode-symbols"], DirectedEdge["graph-rewriting-ww", "GLUT"], DirectedEdge["graph-rewriting-ww", "graph-rewriting"], DirectedEdge["graph-rewriting-ww", "graph-rewriting-gl"], DirectedEdge["graph-rewriting-ww", "graph-rewriting-layout"], DirectedEdge["graph-rewriting-ww", "IndentParser"], DirectedEdge["graph-rewriting-ww", "OpenGL"], DirectedEdge["graph-rewriting-ww", "parsec"], DirectedEdge["graph-serialize", "array"], DirectedEdge["graph-serialize", "base"], DirectedEdge["graph-serialize", "bytestring"], DirectedEdge["graph-serialize", "containers"], DirectedEdge["graph-utils", "base"], DirectedEdge["graph-utils", "containers"], DirectedEdge["graph-utils", "fgl"], DirectedEdge["graph-utils", "mtl"], DirectedEdge["graph-utils", "parsec"], DirectedEdge["graph-utils", "syb"], DirectedEdge["graph-utils", "template-haskell"], DirectedEdge["graph-visit", "base"], DirectedEdge["graph-visit", "containers"], DirectedEdge["graph-visit", "data-lens"], DirectedEdge["graph-visit", "data-lens-template"], DirectedEdge["graph-visit", "mtl"], DirectedEdge["graph-wrapper", "array"], DirectedEdge["graph-wrapper", "base"], DirectedEdge["graph-wrapper", "containers"], DirectedEdge["graphbuilder", "base"], DirectedEdge["graphbuilder", "containers"], DirectedEdge["graphbuilder", "mtl"], DirectedEdge["graphene", "base"], DirectedEdge["graphene", "bifunctors"], DirectedEdge["graphene", "containers"], DirectedEdge["graphene", "hashable"], DirectedEdge["graphene", "lens-family"], DirectedEdge["graphene", "lens-family-core"], DirectedEdge["graphene", "mtl"], DirectedEdge["graphene", "transformers"], DirectedEdge["graphics-drawingcombinators", "base"], DirectedEdge["graphics-drawingcombinators", "bitmap"], DirectedEdge["graphics-drawingcombinators", "bitmap-opengl"], DirectedEdge["graphics-drawingcombinators", "FTGL"], DirectedEdge["graphics-drawingcombinators", "GLFW-b"], DirectedEdge["graphics-drawingcombinators", "GLUT"], DirectedEdge["graphics-drawingcombinators", "graphics-drawingcombinators"], DirectedEdge["graphics-drawingcombinators", "OpenGL"], DirectedEdge["graphics-drawingcombinators", "stb-image"], DirectedEdge["graphics-formats-collada", "base"], DirectedEdge["graphics-formats-collada", "bitmap-opengl"], DirectedEdge["graphics-formats-collada", "containers"], DirectedEdge["graphics-formats-collada", "hxt"], DirectedEdge["graphics-formats-collada", "OpenGL"], DirectedEdge["graphics-formats-collada", "stb-image"], DirectedEdge["graphics-formats-collada", "transformers"], DirectedEdge["graphicsFormats", "base"], DirectedEdge["graphicsFormats", "OpenGL"], DirectedEdge["graphicsFormats", "QuickCheck"], DirectedEdge["graphicstools", "base"], DirectedEdge["graphicstools", "bindings-DSL"], DirectedEdge["graphicstools", "containers"], DirectedEdge["graphicstools", "CV"], DirectedEdge["graphicstools", "directory"], DirectedEdge["graphicstools", "ghc-prim"], DirectedEdge["graphicstools", "graphicstools"], DirectedEdge["graphicstools", "wx"], DirectedEdge["graphicstools", "wxcore"], DirectedEdge["graphmod", "base"], DirectedEdge["graphmod", "Cabal"], DirectedEdge["graphmod", "containers"], DirectedEdge["graphmod", "directory"], DirectedEdge["graphmod", "dotgen"], DirectedEdge["graphmod", "filepath"], DirectedEdge["graphmod", "haskell-lexer"], DirectedEdge["graphql", "attoparsec"], DirectedEdge["graphql", "base"], DirectedEdge["graphql", "text"], DirectedEdge["graphs", "array"], DirectedEdge["graphs", "base"], DirectedEdge["graphs", "containers"], DirectedEdge["graphs", "transformers"], DirectedEdge["graphs", "transformers-compat"], DirectedEdge["graphs", "void"], DirectedEdge["graphtype", "base"], DirectedEdge["graphtype", "containers"], DirectedEdge["graphtype", "dotgen"], DirectedEdge["graphtype", "haskell-src-exts"], DirectedEdge["graphtype", "uniplate"], DirectedEdge["graphviz", "base"], DirectedEdge["graphviz", "bytestring"], DirectedEdge["graphviz", "colour"], DirectedEdge["graphviz", "containers"], DirectedEdge["graphviz", "directory"], DirectedEdge["graphviz", "dlist"], DirectedEdge["graphviz", "fgl"], DirectedEdge["graphviz", "filepath"], DirectedEdge["graphviz", "graphviz"], DirectedEdge["graphviz", "polyparse"], DirectedEdge["graphviz", "process"], DirectedEdge["graphviz", "temporary"], DirectedEdge["graphviz", "text"], DirectedEdge["graphviz", "transformers"], DirectedEdge["graphviz", "wl-pprint-text"], DirectedEdge["grasp", "base"], DirectedEdge["grasp", "clock"], DirectedEdge["grasp", "directory"], DirectedEdge["grasp", "extra"], DirectedEdge["grasp", "filepath"], DirectedEdge["grasp", "grasp"], DirectedEdge["grasp", "hashable"], DirectedEdge["grasp", "lens"], DirectedEdge["grasp", "megaparsec"], DirectedEdge["grasp", "MonadRandom"], DirectedEdge["grasp", "mtl"], DirectedEdge["grasp", "pcre-heavy"], DirectedEdge["grasp", "primitive"], DirectedEdge["grasp", "process"], DirectedEdge["grasp", "random-shuffle"], DirectedEdge["grasp", "safe"], DirectedEdge["grasp", "split"], DirectedEdge["grasp", "system-filepath"], DirectedEdge["grasp", "text"], DirectedEdge["grasp", "transformers"], DirectedEdge["grasp", "turtle"], DirectedEdge["grasp", "unordered-containers"], DirectedEdge["grasp", "vector"], DirectedEdge["gravatar", "base"], DirectedEdge["gravatar", "bytestring"], DirectedEdge["gravatar", "data-default"], DirectedEdge["gravatar", "HTTP"], DirectedEdge["gravatar", "text"], DirectedEdge["gray-code", "base"], DirectedEdge["gray-extended", "base"], DirectedEdge["graylog", "aeson"], DirectedEdge["graylog", "aeson-casing"], DirectedEdge["graylog", "base"], DirectedEdge["graylog", "bytestring"], DirectedEdge["graylog", "network"], DirectedEdge["graylog", "random"], DirectedEdge["graylog", "scientific"], DirectedEdge["graylog", "text"], DirectedEdge["graylog", "time"], DirectedEdge["graylog", "vector"], DirectedEdge["greencard", "array"], DirectedEdge["greencard", "base"], DirectedEdge["greencard", "containers"], DirectedEdge["greencard", "pretty"], DirectedEdge["greencard-lib", "array"], DirectedEdge["greencard-lib", "base"], DirectedEdge["greencard-lib", "containers"], DirectedEdge["greencard-lib", "greencard"], DirectedEdge["greencard-lib", "pretty"], DirectedEdge["greg-client", "base"], DirectedEdge["greg-client", "binary"], DirectedEdge["greg-client", "bytestring"], DirectedEdge["greg-client", "clock"], DirectedEdge["greg-client", "hostname"], DirectedEdge["greg-client", "network"], DirectedEdge["greg-client", "stm"], DirectedEdge["greg-client", "system-uuid"], DirectedEdge["greg-client", "time"], DirectedEdge["gremlin-haskell", "aeson"], DirectedEdge["gremlin-haskell", "aeson-qq"], DirectedEdge["gremlin-haskell", "base"], DirectedEdge["gremlin-haskell", "containers"], DirectedEdge["gremlin-haskell", "gremlin-haskell"], DirectedEdge["gremlin-haskell", "lens"], DirectedEdge["gremlin-haskell", "lens-aeson"], DirectedEdge["gremlin-haskell", "mtl"], DirectedEdge["gremlin-haskell", "stm"], DirectedEdge["gremlin-haskell", "text"], DirectedEdge["gremlin-haskell", "transformers"], DirectedEdge["gremlin-haskell", "unordered-containers"], DirectedEdge["gremlin-haskell", "uuid"], DirectedEdge["gremlin-haskell", "websockets"], DirectedEdge["greplicate", "base"], DirectedEdge["greplicate", "lens"], DirectedEdge["grid", "base"], DirectedEdge["grid", "cereal"], DirectedEdge["grid", "containers"], DirectedEdge["gridfs", "base"], DirectedEdge["gridfs", "bson"], DirectedEdge["gridfs", "bytestring"], DirectedEdge["gridfs", "conduit"], DirectedEdge["gridfs", "conduit-extra"], DirectedEdge["gridfs", "monad-control"], DirectedEdge["gridfs", "mongoDB"], DirectedEdge["gridfs", "mtl"], DirectedEdge["gridfs", "resourcet"], DirectedEdge["gridfs", "tagged"], DirectedEdge["gridfs", "text"], DirectedEdge["gridfs", "time"], DirectedEdge["gridfs", "transformers"], DirectedEdge["gridland", "array"], DirectedEdge["gridland", "astar"], DirectedEdge["gridland", "base"], DirectedEdge["gridland", "containers"], DirectedEdge["gridland", "grid"], DirectedEdge["gridland", "gridland"], DirectedEdge["gridland", "htiled"], DirectedEdge["gridland", "mtl"], DirectedEdge["gridland", "random"], DirectedEdge["gridland", "safe"], DirectedEdge["gridland", "SDL"], DirectedEdge["gridland", "SDL-gfx"], DirectedEdge["gridland", "SDL-image"], DirectedEdge["gridland", "SDL-mixer"], DirectedEdge["gridland", "tuple"], DirectedEdge["gridland", "vector"], DirectedEdge["grm", "base"], DirectedEdge["grm", "Cabal"], DirectedEdge["grm", "cmdargs"], DirectedEdge["grm", "directory"], DirectedEdge["grm", "filepath"], DirectedEdge["grm", "parsec"], DirectedEdge["grm", "process"], DirectedEdge["grm", "syb"], DirectedEdge["grm", "wl-pprint"], DirectedEdge["groom", "base"], DirectedEdge["groom", "haskell-src-exts"], DirectedEdge["groundhog", "aeson"], DirectedEdge["groundhog", "attoparsec"], DirectedEdge["groundhog", "base"], DirectedEdge["groundhog", "base64-bytestring"], DirectedEdge["groundhog", "blaze-builder"], DirectedEdge["groundhog", "bytestring"], DirectedEdge["groundhog", "containers"], DirectedEdge["groundhog", "monad-control"], DirectedEdge["groundhog", "monad-logger"], DirectedEdge["groundhog", "mtl"], DirectedEdge["groundhog", "scientific"], DirectedEdge["groundhog", "text"], DirectedEdge["groundhog", "time"], DirectedEdge["groundhog", "transformers"], DirectedEdge["groundhog", "transformers-base"], DirectedEdge["groundhog-converters", "aeson"], DirectedEdge["groundhog-converters", "base"], DirectedEdge["groundhog-converters", "bimap"], DirectedEdge["groundhog-converters", "bytestring"], DirectedEdge["groundhog-converters", "containers"], DirectedEdge["groundhog-inspector", "aeson-pretty"], DirectedEdge["groundhog-inspector", "base"], DirectedEdge["groundhog-inspector", "bytestring"], DirectedEdge["groundhog-inspector", "cmdargs"], DirectedEdge["groundhog-inspector", "containers"], DirectedEdge["groundhog-inspector", "groundhog"], DirectedEdge["groundhog-inspector", "groundhog-inspector"], DirectedEdge["groundhog-inspector", "groundhog-mysql"], DirectedEdge["groundhog-inspector", "groundhog-postgresql"], DirectedEdge["groundhog-inspector", "groundhog-sqlite"], DirectedEdge["groundhog-inspector", "groundhog-th"], DirectedEdge["groundhog-inspector", "mtl"], DirectedEdge["groundhog-inspector", "regex-compat"], DirectedEdge["groundhog-inspector", "syb"], DirectedEdge["groundhog-inspector", "template-haskell"], DirectedEdge["groundhog-inspector", "text"], DirectedEdge["groundhog-inspector", "time"], DirectedEdge["groundhog-inspector", "transformers"], DirectedEdge["groundhog-mysql", "base"], DirectedEdge["groundhog-mysql", "bytestring"], DirectedEdge["groundhog-mysql", "containers"], DirectedEdge["groundhog-mysql", "groundhog"], DirectedEdge["groundhog-mysql", "monad-control"], DirectedEdge["groundhog-mysql", "monad-logger"], DirectedEdge["groundhog-mysql", "mysql"], DirectedEdge["groundhog-mysql", "mysql-simple"], DirectedEdge["groundhog-mysql", "resource-pool"], DirectedEdge["groundhog-mysql", "text"], DirectedEdge["groundhog-mysql", "time"], DirectedEdge["groundhog-mysql", "transformers"], DirectedEdge["groundhog-postgresql", "attoparsec"], DirectedEdge["groundhog-postgresql", "base"], DirectedEdge["groundhog-postgresql", "blaze-builder"], DirectedEdge["groundhog-postgresql", "bytestring"], DirectedEdge["groundhog-postgresql", "containers"], DirectedEdge["groundhog-postgresql", "groundhog"], DirectedEdge["groundhog-postgresql", "monad-control"], DirectedEdge["groundhog-postgresql", "monad-logger"], DirectedEdge["groundhog-postgresql", "postgresql-libpq"], DirectedEdge["groundhog-postgresql", "postgresql-simple"], DirectedEdge["groundhog-postgresql", "resource-pool"], DirectedEdge["groundhog-postgresql", "text"], DirectedEdge["groundhog-postgresql", "time"], DirectedEdge["groundhog-postgresql", "transformers"], DirectedEdge["groundhog-sqlite", "base"], DirectedEdge["groundhog-sqlite", "bytestring"], DirectedEdge["groundhog-sqlite", "containers"], DirectedEdge["groundhog-sqlite", "direct-sqlite"], DirectedEdge["groundhog-sqlite", "groundhog"], DirectedEdge["groundhog-sqlite", "monad-control"], DirectedEdge["groundhog-sqlite", "monad-logger"], DirectedEdge["groundhog-sqlite", "resource-pool"], DirectedEdge["groundhog-sqlite", "text"], DirectedEdge["groundhog-sqlite", "transformers"], DirectedEdge["groundhog-sqlite", "unordered-containers"], DirectedEdge["groundhog-th", "aeson"], DirectedEdge["groundhog-th", "base"], DirectedEdge["groundhog-th", "bytestring"], DirectedEdge["groundhog-th", "containers"], DirectedEdge["groundhog-th", "groundhog"], DirectedEdge["groundhog-th", "template-haskell"], DirectedEdge["groundhog-th", "text"], DirectedEdge["groundhog-th", "time"], DirectedEdge["groundhog-th", "unordered-containers"], DirectedEdge["groundhog-th", "yaml"], DirectedEdge["group-with", "base"], DirectedEdge["group-with", "containers"], DirectedEdge["grouped-list", "base"], DirectedEdge["grouped-list", "containers"], DirectedEdge["grouped-list", "deepseq"], DirectedEdge["grouped-list", "pointed"], DirectedEdge["grouped-list", "transformers"], DirectedEdge["groupoid", "base"], DirectedEdge["groupoids", "semigroupoids"], DirectedEdge["groupoids", "base"], DirectedEdge["groupoids", "semigroupoids"], DirectedEdge["groups", "base"], DirectedEdge["growler", "aeson"], DirectedEdge["growler", "base"], DirectedEdge["growler", "blaze-builder"], DirectedEdge["growler", "bytestring"], DirectedEdge["growler", "case-insensitive"], DirectedEdge["growler", "either"], DirectedEdge["growler", "http-types"], DirectedEdge["growler", "lens"], DirectedEdge["growler", "monad-control"], DirectedEdge["growler", "mtl"], DirectedEdge["growler", "pipes"], DirectedEdge["growler", "pipes-aeson"], DirectedEdge["growler", "pipes-wai"], DirectedEdge["growler", "regex-compat"], DirectedEdge["growler", "text"], DirectedEdge["growler", "transformers"], DirectedEdge["growler", "transformers-base"], DirectedEdge["growler", "unordered-containers"], DirectedEdge["growler", "vector"], DirectedEdge["growler", "wai"], DirectedEdge["growler", "wai-extra"], DirectedEdge["growler", "warp"], DirectedEdge["gruff", "base"], DirectedEdge["gruff", "bytestring"], DirectedEdge["gruff", "containers"], DirectedEdge["gruff", "directory"], DirectedEdge["gruff", "filepath"], DirectedEdge["gruff", "FTGL"], DirectedEdge["gruff", "gruff"], DirectedEdge["gruff", "gtk"], DirectedEdge["gruff", "gtkglext"], DirectedEdge["gruff", "hmpfr"], DirectedEdge["gruff", "mtl"], DirectedEdge["gruff", "old-locale"], DirectedEdge["gruff", "OpenGL"], DirectedEdge["gruff", "OpenGLRaw"], DirectedEdge["gruff", "parallel"], DirectedEdge["gruff", "qd"], DirectedEdge["gruff", "qd-vec"], DirectedEdge["gruff", "ruff"], DirectedEdge["gruff", "time"], DirectedEdge["gruff", "Vec"], DirectedEdge["gruff-examples", "base"], DirectedEdge["gruff-examples", "containers"], DirectedEdge["gruff-examples", "data-memocombinators"], DirectedEdge["gruff-examples", "filepath"], DirectedEdge["gruff-examples", "gruff"], DirectedEdge["gruff-examples", "hmpfr"], DirectedEdge["gruff-examples", "qd"], DirectedEdge["gruff-examples", "qd-vec"], DirectedEdge["gruff-examples", "random"], DirectedEdge["gruff-examples", "ruff"], DirectedEdge["gruff-examples", "Vec"], DirectedEdge["gsasl", "base"], DirectedEdge["gsasl", "bytestring"], DirectedEdge["gsasl", "transformers"], DirectedEdge["gsc-weighting", "base"], DirectedEdge["gsc-weighting", "hierarchical-clustering"], DirectedEdge["gsl-random", "base"], DirectedEdge["gsl-random", "vector"], DirectedEdge["gsl-random-fu", "base"], DirectedEdge["gsl-random-fu", "gsl-random"], DirectedEdge["gsl-random-fu", "random-fu"], DirectedEdge["gsmenu", "base"], DirectedEdge["gsmenu", "containers"], DirectedEdge["gsmenu", "mtl"], DirectedEdge["gsmenu", "parsec"], DirectedEdge["gsmenu", "permute"], DirectedEdge["gsmenu", "sindre"], DirectedEdge["gsmenu", "text"], DirectedEdge["gstreamer", "array"], DirectedEdge["gstreamer", "base"], DirectedEdge["gstreamer", "bytestring"], DirectedEdge["gstreamer", "directory"], DirectedEdge["gstreamer", "glib"], DirectedEdge["gstreamer", "mtl"], DirectedEdge["gt-tools", "base"], DirectedEdge["gt-tools", "containers"], DirectedEdge["gt-tools", "extensible-exceptions"], DirectedEdge["gt-tools", "glade"], DirectedEdge["gt-tools", "gtk"], DirectedEdge["gt-tools", "haskeline"], DirectedEdge["gt-tools", "HTTP"], DirectedEdge["gt-tools", "json"], DirectedEdge["gt-tools", "mtl"], DirectedEdge["gt-tools", "text"], DirectedEdge["gt-tools", "unix"], DirectedEdge["gt-tools", "url"], DirectedEdge["gt-tools", "utf8-string"], DirectedEdge["gtfs", "base"], DirectedEdge["gtfs", "csv"], DirectedEdge["gtfs", "directory"], DirectedEdge["gtfs", "filepath"], DirectedEdge["gtfs", "rowrecord"], DirectedEdge["gtfs", "split"], DirectedEdge["gtk", "array"], DirectedEdge["gtk", "base"], DirectedEdge["gtk", "bytestring"], DirectedEdge["gtk", "cairo"], DirectedEdge["gtk", "containers"], DirectedEdge["gtk", "gio"], DirectedEdge["gtk", "glib"], DirectedEdge["gtk", "mtl"], DirectedEdge["gtk", "pango"], DirectedEdge["gtk", "text"], DirectedEdge["gtk-helpers", "array"], DirectedEdge["gtk-helpers", "base"], DirectedEdge["gtk-helpers", "gio"], DirectedEdge["gtk-helpers", "glib"], DirectedEdge["gtk-helpers", "gtk"], DirectedEdge["gtk-helpers", "mtl"], DirectedEdge["gtk-helpers", "process"], DirectedEdge["gtk-helpers", "template-haskell"], DirectedEdge["gtk-jsinput", "base"], DirectedEdge["gtk-jsinput", "gtk"], DirectedEdge["gtk-jsinput", "json"], DirectedEdge["gtk-jsinput", "transformers"], DirectedEdge["gtk-largeTreeStore", "base"], DirectedEdge["gtk-largeTreeStore", "containers"], DirectedEdge["gtk-largeTreeStore", "glib"], DirectedEdge["gtk-largeTreeStore", "mtl"], DirectedEdge["gtk-largeTreeStore", "nested-sets"], DirectedEdge["gtk-mac-integration", "array"], DirectedEdge["gtk-mac-integration", "base"], DirectedEdge["gtk-mac-integration", "containers"], DirectedEdge["gtk-mac-integration", "glib"], DirectedEdge["gtk-mac-integration", "gtk"], DirectedEdge["gtk-mac-integration", "mtl"], DirectedEdge["gtk-serialized-event", "array"], DirectedEdge["gtk-serialized-event", "base"], DirectedEdge["gtk-serialized-event", "containers"], DirectedEdge["gtk-serialized-event", "glib"], DirectedEdge["gtk-serialized-event", "gtk"], DirectedEdge["gtk-serialized-event", "mtl"], DirectedEdge["gtk-simple-list-view", "base"], DirectedEdge["gtk-simple-list-view", "gtk"], DirectedEdge["gtk-toggle-button-list", "base"], DirectedEdge["gtk-toggle-button-list", "gtk"], DirectedEdge["gtk-toy", "base"], DirectedEdge["gtk-toy", "containers"], DirectedEdge["gtk-toy", "gtk"], DirectedEdge["gtk-traymanager", "base"], DirectedEdge["gtk-traymanager", "glib"], DirectedEdge["gtk-traymanager", "gtk"], DirectedEdge["gtk2hs-buildtools", "array"], DirectedEdge["gtk2hs-buildtools", "base"], DirectedEdge["gtk2hs-buildtools", "Cabal"], DirectedEdge["gtk2hs-buildtools", "containers"], DirectedEdge["gtk2hs-buildtools", "directory"], DirectedEdge["gtk2hs-buildtools", "filepath"], DirectedEdge["gtk2hs-buildtools", "gtk2hs-buildtools"], DirectedEdge["gtk2hs-buildtools", "hashtables"], DirectedEdge["gtk2hs-buildtools", "pretty"], DirectedEdge["gtk2hs-buildtools", "process"], DirectedEdge["gtk2hs-buildtools", "random"], DirectedEdge["gtk2hs-cast-glade", "base"], DirectedEdge["gtk2hs-cast-glade", "glade"], DirectedEdge["gtk2hs-cast-glade", "gtk"], DirectedEdge["gtk2hs-cast-glade", "gtk2hs-cast-glib"], DirectedEdge["gtk2hs-cast-glade", "hint"], DirectedEdge["gtk2hs-cast-glade", "template-haskell"], DirectedEdge["gtk2hs-cast-glib", "base"], DirectedEdge["gtk2hs-cast-glib", "glib"], DirectedEdge["gtk2hs-cast-gnomevfs", "base"], DirectedEdge["gtk2hs-cast-gnomevfs", "gnomevfs"], DirectedEdge["gtk2hs-cast-gnomevfs", "gtk2hs-cast-glib"], DirectedEdge["gtk2hs-cast-gnomevfs", "gtk2hs-cast-th"], DirectedEdge["gtk2hs-cast-gnomevfs", "hint"], DirectedEdge["gtk2hs-cast-gnomevfs", "template-haskell"], DirectedEdge["gtk2hs-cast-gtk", "base"], DirectedEdge["gtk2hs-cast-gtk", "gtk"], DirectedEdge["gtk2hs-cast-gtk", "gtk2hs-cast-glib"], DirectedEdge["gtk2hs-cast-gtk", "gtk2hs-cast-th"], DirectedEdge["gtk2hs-cast-gtk", "hint"], DirectedEdge["gtk2hs-cast-gtk", "template-haskell"], DirectedEdge["gtk2hs-cast-gtkglext", "base"], DirectedEdge["gtk2hs-cast-gtkglext", "gtk2hs-cast-glib"], DirectedEdge["gtk2hs-cast-gtkglext", "gtk2hs-cast-th"], DirectedEdge["gtk2hs-cast-gtkglext", "gtkglext"], DirectedEdge["gtk2hs-cast-gtkglext", "hint"], DirectedEdge["gtk2hs-cast-gtkglext", "template-haskell"], DirectedEdge["gtk2hs-cast-gtksourceview2", "base"], DirectedEdge["gtk2hs-cast-gtksourceview2", "gtk2hs-cast-glib"], DirectedEdge["gtk2hs-cast-gtksourceview2", "gtk2hs-cast-th"], DirectedEdge["gtk2hs-cast-gtksourceview2", "hint"], DirectedEdge["gtk2hs-cast-gtksourceview2", "template-haskell"], DirectedEdge["gtk2hs-cast-th", "base"], DirectedEdge["gtk2hs-cast-th", "hint"], DirectedEdge["gtk2hs-cast-th", "template-haskell"], DirectedEdge["gtk2hs-hello", "base"], DirectedEdge["gtk2hs-hello", "glib"], DirectedEdge["gtk2hs-hello", "transformers"], DirectedEdge["gtk2hs-rpn", "base"], DirectedEdge["gtk2hs-rpn", "cairo"], DirectedEdge["gtk2hs-rpn", "glib"], DirectedEdge["gtk2hs-rpn", "gtk"], DirectedEdge["gtk2hs-rpn", "mtl"], DirectedEdge["gtk3", "array"], DirectedEdge["gtk3", "base"], DirectedEdge["gtk3", "bytestring"], DirectedEdge["gtk3", "cairo"], DirectedEdge["gtk3", "containers"], DirectedEdge["gtk3", "gio"], DirectedEdge["gtk3", "glib"], DirectedEdge["gtk3", "mtl"], DirectedEdge["gtk3", "pango"], DirectedEdge["gtk3", "text"], DirectedEdge["gtk3", "time"], DirectedEdge["gtk3", "transformers"], DirectedEdge["gtk3-mac-integration", "array"], DirectedEdge["gtk3-mac-integration", "base"], DirectedEdge["gtk3-mac-integration", "containers"], DirectedEdge["gtk3-mac-integration", "glib"], DirectedEdge["gtk3-mac-integration", "mtl"], DirectedEdge["gtkglext", "base"], DirectedEdge["gtkglext", "glib"], DirectedEdge["gtkglext", "gtk"], DirectedEdge["gtkglext", "pango"], DirectedEdge["gtkimageview", "array"], DirectedEdge["gtkimageview", "base"], DirectedEdge["gtkimageview", "containers"], DirectedEdge["gtkimageview", "glib"], DirectedEdge["gtkimageview", "gtk"], DirectedEdge["gtkimageview", "mtl"], DirectedEdge["gtkrsync", "base"], DirectedEdge["gtkrsync", "gconf"], DirectedEdge["gtkrsync", "glade"], DirectedEdge["gtkrsync", "gtk"], DirectedEdge["gtkrsync", "MissingH"], DirectedEdge["gtkrsync", "process"], DirectedEdge["gtkrsync", "regex-posix"], DirectedEdge["gtkrsync", "unix"], DirectedEdge["gtksourceview2", "array"], DirectedEdge["gtksourceview2", "base"], DirectedEdge["gtksourceview2", "containers"], DirectedEdge["gtksourceview2", "glib"], DirectedEdge["gtksourceview2", "gtk"], DirectedEdge["gtksourceview2", "mtl"], DirectedEdge["gtksourceview2", "text"], DirectedEdge["gtksourceview3", "array"], DirectedEdge["gtksourceview3", "base"], DirectedEdge["gtksourceview3", "containers"], DirectedEdge["gtksourceview3", "glib"], DirectedEdge["gtksourceview3", "mtl"], DirectedEdge["gtksourceview3", "text"], DirectedEdge["guarded-rewriting", "base"], DirectedEdge["guarded-rewriting", "instant-generics"], DirectedEdge["guess-combinator", "base"], DirectedEdge["guess-combinator", "HList"], DirectedEdge["guid", "base"], DirectedEdge["guid", "bytestring"], DirectedEdge["guid", "text"], DirectedEdge["guid", "uuid"], DirectedEdge["guid", "uuid-types"], DirectedEdge["gulcii", "base"], DirectedEdge["gulcii", "cairo"], DirectedEdge["gulcii", "containers"], DirectedEdge["gulcii", "filepath"], DirectedEdge["gulcii", "gtk"], DirectedEdge["gutenberg-fibonaccis", "base"], DirectedEdge["gyah-bin", "base"], DirectedEdge["gyah-bin", "extra"], DirectedEdge["gyah-bin", "GiveYouAHead"], DirectedEdge["h-booru", "base"], DirectedEdge["h-booru", "bytestring"], DirectedEdge["h-booru", "containers"], DirectedEdge["h-booru", "directory"], DirectedEdge["h-booru", "filepath"], DirectedEdge["h-booru", "http-conduit"], DirectedEdge["h-booru", "hxt"], DirectedEdge["h-booru", "mtl"], DirectedEdge["h-booru", "stm"], DirectedEdge["h-booru", "template-haskell"], DirectedEdge["h-booru", "transformers"], DirectedEdge["h-booru", "utf8-string"], DirectedEdge["h-booru", "vinyl"], DirectedEdge["h-gpgme", "base"], DirectedEdge["h-gpgme", "bindings-gpgme"], DirectedEdge["h-gpgme", "bytestring"], DirectedEdge["h-gpgme", "either"], DirectedEdge["h-gpgme", "time"], DirectedEdge["h-gpgme", "unix"], DirectedEdge["h2048", "base"], DirectedEdge["h2048", "MonadRandom"], DirectedEdge["h2048", "mtl"], DirectedEdge["h2048", "text"], DirectedEdge["h2048", "transformers"], DirectedEdge["h2048", "vty"], DirectedEdge["h2048", "vty-ui"], DirectedEdge["hArduino", "base"], DirectedEdge["hArduino", "bytestring"], DirectedEdge["hArduino", "containers"], DirectedEdge["hArduino", "mtl"], DirectedEdge["hArduino", "serialport"], DirectedEdge["hArduino", "time"], DirectedEdge["hBDD", "base"], DirectedEdge["hBDD-CMUBDD", "base"], DirectedEdge["hBDD-CMUBDD", "containers"], DirectedEdge["hBDD-CMUBDD", "deepseq"], DirectedEdge["hBDD-CMUBDD", "hBDD"], DirectedEdge["hBDD-CMUBDD", "unix"], DirectedEdge["hBDD-CUDD", "base"], DirectedEdge["hBDD-CUDD", "containers"], DirectedEdge["hBDD-CUDD", "deepseq"], DirectedEdge["hBDD-CUDD", "hBDD"], DirectedEdge["hBDD-CUDD", "unix"], DirectedEdge["hCsound", "base"], DirectedEdge["hCsound", "monads-tf"], DirectedEdge["hCsound", "transformers"], DirectedEdge["hCsound", "vector"], DirectedEdge["hDFA", "base"], DirectedEdge["hDFA", "containers"], DirectedEdge["hDFA", "directory"], DirectedEdge["hDFA", "process"], DirectedEdge["hF2", "base"], DirectedEdge["hF2", "cereal"], DirectedEdge["hF2", "vector"], DirectedEdge["hGelf", "aeson"], DirectedEdge["hGelf", "base"], DirectedEdge["hGelf", "bytestring"], DirectedEdge["hGelf", "cereal"], DirectedEdge["hGelf", "network"], DirectedEdge["hGelf", "old-time"], DirectedEdge["hGelf", "QuickCheck"], DirectedEdge["hGelf", "text"], DirectedEdge["hGelf", "time"], DirectedEdge["hGelf", "zlib"], DirectedEdge["hLLVM", "array"], DirectedEdge["hLLVM", "base"], DirectedEdge["hLLVM", "bytestring"], DirectedEdge["hLLVM", "cmdargs"], DirectedEdge["hLLVM", "containers"], DirectedEdge["hLLVM", "data-dword"], DirectedEdge["hLLVM", "directory"], DirectedEdge["hLLVM", "filepath"], DirectedEdge["hLLVM", "hooplext"], DirectedEdge["hLLVM", "mtl"], DirectedEdge["hLLVM", "parsec"], DirectedEdge["hLLVM", "pretty"], DirectedEdge["hLLVM", "template-haskell"], DirectedEdge["hLLVM", "transformers"], DirectedEdge["hMollom", "aeson"], DirectedEdge["hMollom", "attoparsec"], DirectedEdge["hMollom", "base"], DirectedEdge["hMollom", "bytestring"], DirectedEdge["hMollom", "Crypto"], DirectedEdge["hMollom", "dataenc"], DirectedEdge["hMollom", "ghc-prim"], DirectedEdge["hMollom", "HTTP"], DirectedEdge["hMollom", "mtl"], DirectedEdge["hMollom", "old-locale"], DirectedEdge["hMollom", "old-time"], DirectedEdge["hMollom", "random"], DirectedEdge["hMollom", "time"], DirectedEdge["hOpenPGP", "aeson"], DirectedEdge["hOpenPGP", "attoparsec"], DirectedEdge["hOpenPGP", "base"], DirectedEdge["hOpenPGP", "base64-bytestring"], DirectedEdge["hOpenPGP", "bifunctors"], DirectedEdge["hOpenPGP", "binary"], DirectedEdge["hOpenPGP", "binary-conduit"], DirectedEdge["hOpenPGP", "byteable"], DirectedEdge["hOpenPGP", "bytestring"], DirectedEdge["hOpenPGP", "bzlib"], DirectedEdge["hOpenPGP", "conduit"], DirectedEdge["hOpenPGP", "conduit-extra"], DirectedEdge["hOpenPGP", "containers"], DirectedEdge["hOpenPGP", "crypto-cipher-types"], DirectedEdge["hOpenPGP", "cryptonite"], DirectedEdge["hOpenPGP", "data-default-class"], DirectedEdge["hOpenPGP", "errors"], DirectedEdge["hOpenPGP", "hashable"], DirectedEdge["hOpenPGP", "incremental-parser"], DirectedEdge["hOpenPGP", "ixset-typed"], DirectedEdge["hOpenPGP", "lens"], DirectedEdge["hOpenPGP", "memory"], DirectedEdge["hOpenPGP", "monad-loops"], DirectedEdge["hOpenPGP", "nettle"], DirectedEdge["hOpenPGP", "network"], DirectedEdge["hOpenPGP", "network-uri"], DirectedEdge["hOpenPGP", "newtype"], DirectedEdge["hOpenPGP", "openpgp-asciiarmor"], DirectedEdge["hOpenPGP", "resourcet"], DirectedEdge["hOpenPGP", "securemem"], DirectedEdge["hOpenPGP", "semigroups"], DirectedEdge["hOpenPGP", "split"], DirectedEdge["hOpenPGP", "text"], DirectedEdge["hOpenPGP", "time"], DirectedEdge["hOpenPGP", "time-locale-compat"], DirectedEdge["hOpenPGP", "transformers"], DirectedEdge["hOpenPGP", "unordered-containers"], DirectedEdge["hOpenPGP", "wl-pprint-extras"], DirectedEdge["hOpenPGP", "zlib"], DirectedEdge["hPDB", "AC-Vector"], DirectedEdge["hPDB", "base"], DirectedEdge["hPDB", "bytestring"], DirectedEdge["hPDB", "containers"], DirectedEdge["hPDB", "deepseq"], DirectedEdge["hPDB", "directory"], DirectedEdge["hPDB", "ghc-prim"], DirectedEdge["hPDB", "iterable"], DirectedEdge["hPDB", "mmap"], DirectedEdge["hPDB", "mtl"], DirectedEdge["hPDB", "Octree"], DirectedEdge["hPDB", "parallel"], DirectedEdge["hPDB", "QuickCheck"], DirectedEdge["hPDB", "tagged"], DirectedEdge["hPDB", "template-haskell"], DirectedEdge["hPDB", "text"], DirectedEdge["hPDB", "text-format"], DirectedEdge["hPDB", "vector"], DirectedEdge["hPDB", "zlib"], DirectedEdge["hPDB-examples", "AC-Vector"], DirectedEdge["hPDB-examples", "base"], DirectedEdge["hPDB-examples", "bytestring"], DirectedEdge["hPDB-examples", "containers"], DirectedEdge["hPDB-examples", "deepseq"], DirectedEdge["hPDB-examples", "directory"], DirectedEdge["hPDB-examples", "ghc-prim"], DirectedEdge["hPDB-examples", "GLUT"], DirectedEdge["hPDB-examples", "hPDB"], DirectedEdge["hPDB-examples", "iterable"], DirectedEdge["hPDB-examples", "mtl"], DirectedEdge["hPDB-examples", "Octree"], DirectedEdge["hPDB-examples", "OpenGL"], DirectedEdge["hPDB-examples", "QuickCheck"], DirectedEdge["hPDB-examples", "template-haskell"], DirectedEdge["hPDB-examples", "text"], DirectedEdge["hPDB-examples", "text-format"], DirectedEdge["hPDB-examples", "vector"], DirectedEdge["hPushover", "aeson"], DirectedEdge["hPushover", "base"], DirectedEdge["hPushover", "bytestring"], DirectedEdge["hPushover", "http-conduit"], DirectedEdge["hPushover", "network"], DirectedEdge["hPushover", "text"], DirectedEdge["hR", "array"], DirectedEdge["hR", "base"], DirectedEdge["hR", "containers"], DirectedEdge["hR", "unix"], DirectedEdge["hRESP", "attoparsec"], DirectedEdge["hRESP", "base"], DirectedEdge["hRESP", "bytestring"], DirectedEdge["hS3", "base"], DirectedEdge["hS3", "bytestring"], DirectedEdge["hS3", "Crypto"], DirectedEdge["hS3", "dataenc"], DirectedEdge["hS3", "HTTP"], DirectedEdge["hS3", "hxt"], DirectedEdge["hS3", "MissingH"], DirectedEdge["hS3", "network"], DirectedEdge["hS3", "network-uri"], DirectedEdge["hS3", "old-locale"], DirectedEdge["hS3", "old-time"], DirectedEdge["hS3", "random"], DirectedEdge["hS3", "regex-compat"], DirectedEdge["hS3", "utf8-string"], DirectedEdge["hScraper", "base"], DirectedEdge["hScraper", "bytestring"], DirectedEdge["hScraper", "directory"], DirectedEdge["hScraper", "HTTP"], DirectedEdge["hScraper", "http-conduit"], DirectedEdge["hScraper", "http-types"], DirectedEdge["hScraper", "parsec"], DirectedEdge["hScraper", "process"], DirectedEdge["hScraper", "regex-compat"], DirectedEdge["hScraper", "text"], DirectedEdge["hScraper", "transformers"], DirectedEdge["hSimpleDB", "base"], DirectedEdge["hSimpleDB", "bytestring"], DirectedEdge["hSimpleDB", "Crypto"], DirectedEdge["hSimpleDB", "dataenc"], DirectedEdge["hSimpleDB", "HTTP"], DirectedEdge["hSimpleDB", "hxt"], DirectedEdge["hSimpleDB", "network"], DirectedEdge["hSimpleDB", "old-locale"], DirectedEdge["hSimpleDB", "old-time"], DirectedEdge["hSimpleDB", "utf8-string"], DirectedEdge["hTalos", "base"], DirectedEdge["hTalos", "bytestring"], DirectedEdge["hTensor", "base"], DirectedEdge["hTensor", "containers"], DirectedEdge["hTensor", "hmatrix"], DirectedEdge["hTensor", "random"], DirectedEdge["hVOIDP", "array"], DirectedEdge["hVOIDP", "base"], DirectedEdge["hVOIDP", "hmatrix"], DirectedEdge["hXmixer", "base"], DirectedEdge["hXmixer", "directory"], DirectedEdge["hXmixer", "process"], DirectedEdge["hXmixer", "split"], DirectedEdge["hXmixer", "text"], DirectedEdge["haar", "base"], DirectedEdge["haar", "split"], DirectedEdge["hablog", "base"], DirectedEdge["hablog", "bifunctors"], DirectedEdge["hablog", "blaze-html"], DirectedEdge["hablog", "blaze-markup"], DirectedEdge["hablog", "bytestring"], DirectedEdge["hablog", "containers"], DirectedEdge["hablog", "directory"], DirectedEdge["hablog", "filepath"], DirectedEdge["hablog", "hablog"], DirectedEdge["hablog", "markdown"], DirectedEdge["hablog", "mime-types"], DirectedEdge["hablog", "mtl"], DirectedEdge["hablog", "scotty"], DirectedEdge["hablog", "scotty-tls"], DirectedEdge["hablog", "text"], DirectedEdge["hablog", "transformers"], DirectedEdge["hacanon-light", "base"], DirectedEdge["hacanon-light", "mtl"], DirectedEdge["hacanon-light", "template-haskell"], DirectedEdge["hack", "base"], DirectedEdge["hack", "bytestring"], DirectedEdge["hack", "data-default"], DirectedEdge["hack-contrib", "ansi-wl-pprint"], DirectedEdge["hack-contrib", "base"], DirectedEdge["hack-contrib", "bytestring"], DirectedEdge["hack-contrib", "cgi"], DirectedEdge["hack-contrib", "containers"], DirectedEdge["hack-contrib", "data-default"], DirectedEdge["hack-contrib", "directory"], DirectedEdge["hack-contrib", "filepath"], DirectedEdge["hack-contrib", "hack"], DirectedEdge["hack-contrib", "mps"], DirectedEdge["hack-contrib", "network"], DirectedEdge["hack-contrib", "old-locale"], DirectedEdge["hack-contrib", "old-time"], DirectedEdge["hack-contrib", "time"], DirectedEdge["hack-contrib", "utf8-string"], DirectedEdge["hack-contrib-press", "base"], DirectedEdge["hack-contrib-press", "bytestring"], DirectedEdge["hack-contrib-press", "bytestring-class"], DirectedEdge["hack-contrib-press", "containers"], DirectedEdge["hack-contrib-press", "hack"], DirectedEdge["hack-contrib-press", "json"], DirectedEdge["hack-contrib-press", "mtl"], DirectedEdge["hack-contrib-press", "parsec"], DirectedEdge["hack-contrib-press", "press"], DirectedEdge["hack-frontend-happstack", "base"], DirectedEdge["hack-frontend-happstack", "bytestring"], DirectedEdge["hack-frontend-happstack", "containers"], DirectedEdge["hack-frontend-happstack", "hack"], DirectedEdge["hack-frontend-happstack", "happstack-server"], DirectedEdge["hack-frontend-happstack", "network"], DirectedEdge["hack-frontend-happstack", "utf8-string"], DirectedEdge["hack-frontend-monadcgi", "wai-frontend-monadcgi"], DirectedEdge["hack-frontend-monadcgi", "base"], DirectedEdge["hack-frontend-monadcgi", "bytestring"], DirectedEdge["hack-frontend-monadcgi", "cgi"], DirectedEdge["hack-frontend-monadcgi", "containers"], DirectedEdge["hack-frontend-monadcgi", "hack"], DirectedEdge["hack-handler-cgi", "wai-extra"], DirectedEdge["hack-handler-cgi", "base"], DirectedEdge["hack-handler-cgi", "bytestring"], DirectedEdge["hack-handler-cgi", "hack"], DirectedEdge["hack-handler-epoll", "base"], DirectedEdge["hack-handler-epoll", "containers"], DirectedEdge["hack-handler-epoll", "data-default"], DirectedEdge["hack-handler-epoll", "epoll"], DirectedEdge["hack-handler-epoll", "failure"], DirectedEdge["hack-handler-epoll", "hack"], DirectedEdge["hack-handler-epoll", "HTTP"], DirectedEdge["hack-handler-epoll", "network"], DirectedEdge["hack-handler-epoll", "unix"], DirectedEdge["hack-handler-epoll", "utf8-string"], DirectedEdge["hack-handler-evhttp", "base"], DirectedEdge["hack-handler-evhttp", "bytestring"], DirectedEdge["hack-handler-evhttp", "bytestring-class"], DirectedEdge["hack-handler-evhttp", "containers"], DirectedEdge["hack-handler-evhttp", "data-default"], DirectedEdge["hack-handler-evhttp", "hack"], DirectedEdge["hack-handler-evhttp", "hack-contrib"], DirectedEdge["hack-handler-evhttp", "network"], DirectedEdge["hack-handler-fastcgi", "wai-handler-fastcgi"], DirectedEdge["hack-handler-fastcgi", "base"], DirectedEdge["hack-handler-fastcgi", "bytestring"], DirectedEdge["hack-handler-fastcgi", "hack"], DirectedEdge["hack-handler-fastcgi", "hack-handler-cgi"], DirectedEdge["hack-handler-happstack", "base"], DirectedEdge["hack-handler-happstack", "bytestring"], DirectedEdge["hack-handler-happstack", "cgi"], DirectedEdge["hack-handler-happstack", "containers"], DirectedEdge["hack-handler-happstack", "data-default"], DirectedEdge["hack-handler-happstack", "hack"], DirectedEdge["hack-handler-happstack", "happstack-server"], DirectedEdge["hack-handler-happstack", "mtl"], DirectedEdge["hack-handler-happstack", "network"], DirectedEdge["hack-handler-hyena", "base"], DirectedEdge["hack-handler-hyena", "bytestring"], DirectedEdge["hack-handler-hyena", "containers"], DirectedEdge["hack-handler-hyena", "data-default"], DirectedEdge["hack-handler-hyena", "hack"], DirectedEdge["hack-handler-hyena", "hyena"], DirectedEdge["hack-handler-hyena", "network"], DirectedEdge["hack-handler-kibro", "base"], DirectedEdge["hack-handler-kibro", "cgi"], DirectedEdge["hack-handler-kibro", "data-default"], DirectedEdge["hack-handler-kibro", "hack"], DirectedEdge["hack-handler-kibro", "kibro"], DirectedEdge["hack-handler-kibro", "network"], DirectedEdge["hack-handler-simpleserver", "warp"], DirectedEdge["hack-handler-simpleserver", "base"], DirectedEdge["hack-handler-simpleserver", "bytestring"], DirectedEdge["hack-handler-simpleserver", "failure"], DirectedEdge["hack-handler-simpleserver", "hack"], DirectedEdge["hack-handler-simpleserver", "network"], DirectedEdge["hack-handler-simpleserver", "web-encodings"], DirectedEdge["hack-middleware-cleanpath", "base"], DirectedEdge["hack-middleware-cleanpath", "bytestring"], DirectedEdge["hack-middleware-cleanpath", "hack"], DirectedEdge["hack-middleware-cleanpath", "split"], DirectedEdge["hack-middleware-cleanpath", "web-encodings"], DirectedEdge["hack-middleware-clientsession", "base"], DirectedEdge["hack-middleware-clientsession", "clientsession"], DirectedEdge["hack-middleware-clientsession", "hack"], DirectedEdge["hack-middleware-clientsession", "old-locale"], DirectedEdge["hack-middleware-clientsession", "predicates"], DirectedEdge["hack-middleware-clientsession", "time"], DirectedEdge["hack-middleware-clientsession", "web-encodings"], DirectedEdge["hack-middleware-gzip", "wai-extra"], DirectedEdge["hack-middleware-gzip", "base"], DirectedEdge["hack-middleware-gzip", "hack"], DirectedEdge["hack-middleware-gzip", "split"], DirectedEdge["hack-middleware-gzip", "zlib"], DirectedEdge["hack-middleware-jsonp", "wai-extra"], DirectedEdge["hack-middleware-jsonp", "base"], DirectedEdge["hack-middleware-jsonp", "bytestring"], DirectedEdge["hack-middleware-jsonp", "bytestring-class"], DirectedEdge["hack-middleware-jsonp", "hack"], DirectedEdge["hack-middleware-jsonp", "web-encodings"], DirectedEdge["hack2", "base"], DirectedEdge["hack2", "bytestring"], DirectedEdge["hack2", "data-default"], DirectedEdge["hack2-contrib", "air"], DirectedEdge["hack2-contrib", "base"], DirectedEdge["hack2-contrib", "bytestring"], DirectedEdge["hack2-contrib", "containers"], DirectedEdge["hack2-contrib", "data-default"], DirectedEdge["hack2-contrib", "directory"], DirectedEdge["hack2-contrib", "filepath"], DirectedEdge["hack2-contrib", "network"], DirectedEdge["hack2-contrib", "network-uri"], DirectedEdge["hack2-contrib", "text"], DirectedEdge["hack2-contrib", "time"], DirectedEdge["hack2-contrib-extra", "air"], DirectedEdge["hack2-contrib-extra", "air-extra"], DirectedEdge["hack2-contrib-extra", "base"], DirectedEdge["hack2-contrib-extra", "bytestring"], DirectedEdge["hack2-contrib-extra", "cgi"], DirectedEdge["hack2-contrib-extra", "containers"], DirectedEdge["hack2-contrib-extra", "data-default"], DirectedEdge["hack2-contrib-extra", "directory"], DirectedEdge["hack2-contrib-extra", "filepath"], DirectedEdge["hack2-contrib-extra", "hack2-contrib"], DirectedEdge["hack2-contrib-extra", "network"], DirectedEdge["hack2-contrib-extra", "old-locale"], DirectedEdge["hack2-contrib-extra", "old-time"], DirectedEdge["hack2-contrib-extra", "time"], DirectedEdge["hack2-handler-happstack-server", "base"], DirectedEdge["hack2-handler-happstack-server", "bytestring"], DirectedEdge["hack2-handler-happstack-server", "cgi"], DirectedEdge["hack2-handler-happstack-server", "containers"], DirectedEdge["hack2-handler-happstack-server", "data-default"], DirectedEdge["hack2-handler-happstack-server", "enumerator"], DirectedEdge["hack2-handler-happstack-server", "happstack-server"], DirectedEdge["hack2-handler-happstack-server", "mtl"], DirectedEdge["hack2-handler-happstack-server", "network"], DirectedEdge["hack2-handler-mongrel2-http", "aeson"], DirectedEdge["hack2-handler-mongrel2-http", "air"], DirectedEdge["hack2-handler-mongrel2-http", "attoparsec"], DirectedEdge["hack2-handler-mongrel2-http", "base"], DirectedEdge["hack2-handler-mongrel2-http", "blaze-builder"], DirectedEdge["hack2-handler-mongrel2-http", "blaze-textual"], DirectedEdge["hack2-handler-mongrel2-http", "bytestring"], DirectedEdge["hack2-handler-mongrel2-http", "containers"], DirectedEdge["hack2-handler-mongrel2-http", "data-default"], DirectedEdge["hack2-handler-mongrel2-http", "directory"], DirectedEdge["hack2-handler-mongrel2-http", "enumerator"], DirectedEdge["hack2-handler-mongrel2-http", "mtl"], DirectedEdge["hack2-handler-mongrel2-http", "network"], DirectedEdge["hack2-handler-mongrel2-http", "safe"], DirectedEdge["hack2-handler-mongrel2-http", "stm"], DirectedEdge["hack2-handler-mongrel2-http", "text"], DirectedEdge["hack2-handler-mongrel2-http", "unix"], DirectedEdge["hack2-handler-mongrel2-http", "zeromq-haskell"], DirectedEdge["hack2-handler-snap-server", "air"], DirectedEdge["hack2-handler-snap-server", "base"], DirectedEdge["hack2-handler-snap-server", "blaze-builder"], DirectedEdge["hack2-handler-snap-server", "bytestring"], DirectedEdge["hack2-handler-snap-server", "case-insensitive"], DirectedEdge["hack2-handler-snap-server", "containers"], DirectedEdge["hack2-handler-snap-server", "data-default"], DirectedEdge["hack2-handler-snap-server", "directory"], DirectedEdge["hack2-handler-snap-server", "enumerator"], DirectedEdge["hack2-handler-snap-server", "mtl"], DirectedEdge["hack2-handler-snap-server", "network"], DirectedEdge["hack2-handler-snap-server", "snap-core"], DirectedEdge["hack2-handler-snap-server", "snap-server"], DirectedEdge["hack2-handler-warp", "air"], DirectedEdge["hack2-handler-warp", "base"], DirectedEdge["hack2-handler-warp", "data-default"], DirectedEdge["hack2-handler-warp", "hack2-interface-wai"], DirectedEdge["hack2-handler-warp", "warp"], DirectedEdge["hack2-interface-wai", "air"], DirectedEdge["hack2-interface-wai", "base"], DirectedEdge["hack2-interface-wai", "bytestring"], DirectedEdge["hack2-interface-wai", "case-insensitive"], DirectedEdge["hack2-interface-wai", "containers"], DirectedEdge["hack2-interface-wai", "data-default"], DirectedEdge["hack2-interface-wai", "http-types"], DirectedEdge["hack2-interface-wai", "mtl"], DirectedEdge["hack2-interface-wai", "network"], DirectedEdge["hack2-interface-wai", "safe"], DirectedEdge["hack2-interface-wai", "wai"], DirectedEdge["hackage-db", "base"], DirectedEdge["hackage-db", "bytestring"], DirectedEdge["hackage-db", "Cabal"], DirectedEdge["hackage-db", "containers"], DirectedEdge["hackage-db", "directory"], DirectedEdge["hackage-db", "filepath"], DirectedEdge["hackage-db", "tar"], DirectedEdge["hackage-db", "utf8-string"], DirectedEdge["hackage-diff", "ansi-terminal"], DirectedEdge["hackage-diff", "async"], DirectedEdge["hackage-diff", "attoparsec"], DirectedEdge["hackage-diff", "base"], DirectedEdge["hackage-diff", "Cabal"], DirectedEdge["hackage-diff", "cpphs"], DirectedEdge["hackage-diff", "directory"], DirectedEdge["hackage-diff", "filepath"], DirectedEdge["hackage-diff", "haskell-src-exts"], DirectedEdge["hackage-diff", "HTTP"], DirectedEdge["hackage-diff", "mtl"], DirectedEdge["hackage-diff", "process"], DirectedEdge["hackage-diff", "text"], DirectedEdge["hackage-mirror", "aws"], DirectedEdge["hackage-mirror", "base"], DirectedEdge["hackage-mirror", "bytestring"], DirectedEdge["hackage-mirror", "cereal"], DirectedEdge["hackage-mirror", "conduit"], DirectedEdge["hackage-mirror", "conduit-extra"], DirectedEdge["hackage-mirror", "cryptohash"], DirectedEdge["hackage-mirror", "data-default"], DirectedEdge["hackage-mirror", "directory"], DirectedEdge["hackage-mirror", "exceptions"], DirectedEdge["hackage-mirror", "fast-logger"], DirectedEdge["hackage-mirror", "filepath"], DirectedEdge["hackage-mirror", "hackage-mirror"], DirectedEdge["hackage-mirror", "http-conduit"], DirectedEdge["hackage-mirror", "lifted-async"], DirectedEdge["hackage-mirror", "lifted-base"], DirectedEdge["hackage-mirror", "mmorph"], DirectedEdge["hackage-mirror", "monad-control"], DirectedEdge["hackage-mirror", "monad-logger"], DirectedEdge["hackage-mirror", "old-locale"], DirectedEdge["hackage-mirror", "optparse-applicative"], DirectedEdge["hackage-mirror", "resourcet"], DirectedEdge["hackage-mirror", "retry"], DirectedEdge["hackage-mirror", "shakespeare"], DirectedEdge["hackage-mirror", "stm"], DirectedEdge["hackage-mirror", "tar"], DirectedEdge["hackage-mirror", "template-haskell"], DirectedEdge["hackage-mirror", "temporary"], DirectedEdge["hackage-mirror", "text"], DirectedEdge["hackage-mirror", "thyme"], DirectedEdge["hackage-mirror", "transformers"], DirectedEdge["hackage-mirror", "unordered-containers"], DirectedEdge["hackage-plot", "base"], DirectedEdge["hackage-plot", "bytestring"], DirectedEdge["hackage-plot", "containers"], DirectedEdge["hackage-plot", "directory"], DirectedEdge["hackage-plot", "download-curl"], DirectedEdge["hackage-plot", "filepath"], DirectedEdge["hackage-plot", "gnuplot"], DirectedEdge["hackage-plot", "old-locale"], DirectedEdge["hackage-plot", "old-time"], DirectedEdge["hackage-plot", "parsedate"], DirectedEdge["hackage-processing", "base"], DirectedEdge["hackage-processing", "Cabal"], DirectedEdge["hackage-processing", "containers"], DirectedEdge["hackage-processing", "hackage-db"], DirectedEdge["hackage-proxy", "base"], DirectedEdge["hackage-proxy", "basic-prelude"], DirectedEdge["hackage-proxy", "blaze-builder"], DirectedEdge["hackage-proxy", "bytestring"], DirectedEdge["hackage-proxy", "Cabal"], DirectedEdge["hackage-proxy", "case-insensitive"], DirectedEdge["hackage-proxy", "conduit"], DirectedEdge["hackage-proxy", "containers"], DirectedEdge["hackage-proxy", "filepath"], DirectedEdge["hackage-proxy", "http-client"], DirectedEdge["hackage-proxy", "http-client-conduit"], DirectedEdge["hackage-proxy", "http-conduit"], DirectedEdge["hackage-proxy", "http-types"], DirectedEdge["hackage-proxy", "optparse-applicative"], DirectedEdge["hackage-proxy", "tar"], DirectedEdge["hackage-proxy", "text"], DirectedEdge["hackage-proxy", "transformers"], DirectedEdge["hackage-proxy", "unordered-containers"], DirectedEdge["hackage-proxy", "wai"], DirectedEdge["hackage-proxy", "warp"], DirectedEdge["hackage-proxy", "zlib"], DirectedEdge["hackage-proxy", "zlib-conduit"], DirectedEdge["hackage-repo-tool", "base"], DirectedEdge["hackage-repo-tool", "bytestring"], DirectedEdge["hackage-repo-tool", "Cabal"], DirectedEdge["hackage-repo-tool", "directory"], DirectedEdge["hackage-repo-tool", "filepath"], DirectedEdge["hackage-repo-tool", "hackage-security"], DirectedEdge["hackage-repo-tool", "network"], DirectedEdge["hackage-repo-tool", "network-uri"], DirectedEdge["hackage-repo-tool", "optparse-applicative"], DirectedEdge["hackage-repo-tool", "tar"], DirectedEdge["hackage-repo-tool", "time"], DirectedEdge["hackage-repo-tool", "unix"], DirectedEdge["hackage-repo-tool", "zlib"], DirectedEdge["hackage-security", "base"], DirectedEdge["hackage-security", "base16-bytestring"], DirectedEdge["hackage-security", "base64-bytestring"], DirectedEdge["hackage-security", "bytestring"], DirectedEdge["hackage-security", "Cabal"], DirectedEdge["hackage-security", "containers"], DirectedEdge["hackage-security", "directory"], DirectedEdge["hackage-security", "filepath"], DirectedEdge["hackage-security", "ghc-prim"], DirectedEdge["hackage-security", "mtl"], DirectedEdge["hackage-security", "network"], DirectedEdge["hackage-security", "network-uri"], DirectedEdge["hackage-security", "old-locale"], DirectedEdge["hackage-security", "old-time"], DirectedEdge["hackage-security", "parsec"], DirectedEdge["hackage-security", "pretty"], DirectedEdge["hackage-security", "tar"], DirectedEdge["hackage-security", "template-haskell"], DirectedEdge["hackage-security", "time"], DirectedEdge["hackage-security", "transformers"], DirectedEdge["hackage-security", "zlib"], DirectedEdge["hackage-security-HTTP", "base"], DirectedEdge["hackage-security-HTTP", "bytestring"], DirectedEdge["hackage-security-HTTP", "hackage-security"], DirectedEdge["hackage-security-HTTP", "HTTP"], DirectedEdge["hackage-security-HTTP", "mtl"], DirectedEdge["hackage-security-HTTP", "network"], DirectedEdge["hackage-security-HTTP", "network-uri"], DirectedEdge["hackage-security-HTTP", "zlib"], DirectedEdge["hackage-server", "acid-state"], DirectedEdge["hackage-server", "aeson"], DirectedEdge["hackage-server", "array"], DirectedEdge["hackage-server", "async"], DirectedEdge["hackage-server", "attoparsec"], DirectedEdge["hackage-server", "base"], DirectedEdge["hackage-server", "base16-bytestring"], DirectedEdge["hackage-server", "base64-bytestring"], DirectedEdge["hackage-server", "binary"], DirectedEdge["hackage-server", "blaze-builder"], DirectedEdge["hackage-server", "bytestring"], DirectedEdge["hackage-server", "Cabal"], DirectedEdge["hackage-server", "cereal"], DirectedEdge["hackage-server", "containers"], DirectedEdge["hackage-server", "crypto-api"], DirectedEdge["hackage-server", "csv"], DirectedEdge["hackage-server", "deepseq"], DirectedEdge["hackage-server", "directory"], DirectedEdge["hackage-server", "filepath"], DirectedEdge["hackage-server", "happstack-server"], DirectedEdge["hackage-server", "HaXml"], DirectedEdge["hackage-server", "hscolour"], DirectedEdge["hackage-server", "hslogger"], DirectedEdge["hackage-server", "HStringTemplate"], DirectedEdge["hackage-server", "HTTP"], DirectedEdge["hackage-server", "lifted-base"], DirectedEdge["hackage-server", "mime-mail"], DirectedEdge["hackage-server", "mtl"], DirectedEdge["hackage-server", "network"], DirectedEdge["hackage-server", "old-locale"], DirectedEdge["hackage-server", "parsec"], DirectedEdge["hackage-server", "pretty"], DirectedEdge["hackage-server", "process"], DirectedEdge["hackage-server", "QuickCheck"], DirectedEdge["hackage-server", "random"], DirectedEdge["hackage-server", "rss"], DirectedEdge["hackage-server", "safecopy"], DirectedEdge["hackage-server", "snowball"], DirectedEdge["hackage-server", "split"], DirectedEdge["hackage-server", "stm"], DirectedEdge["hackage-server", "tar"], DirectedEdge["hackage-server", "text"], DirectedEdge["hackage-server", "time"], DirectedEdge["hackage-server", "tokenize"], DirectedEdge["hackage-server", "transformers"], DirectedEdge["hackage-server", "unix"], DirectedEdge["hackage-server", "unordered-containers"], DirectedEdge["hackage-server", "vector"], DirectedEdge["hackage-server", "xhtml"], DirectedEdge["hackage-server", "zlib"], DirectedEdge["hackage-sparks", "base"], DirectedEdge["hackage-sparks", "bytestring"], DirectedEdge["hackage-sparks", "directory"], DirectedEdge["hackage-sparks", "download"], DirectedEdge["hackage-sparks", "filepath"], DirectedEdge["hackage-sparks", "hsparklines"], DirectedEdge["hackage-sparks", "old-locale"], DirectedEdge["hackage-sparks", "old-time"], DirectedEdge["hackage-sparks", "parsedate"], DirectedEdge["hackage-sparks", "tagsoup"], DirectedEdge["hackage-whatsnew", "base"], DirectedEdge["hackage-whatsnew", "Cabal"], DirectedEdge["hackage-whatsnew", "containers"], DirectedEdge["hackage-whatsnew", "directory"], DirectedEdge["hackage-whatsnew", "filepath"], DirectedEdge["hackage-whatsnew", "hackage-db"], DirectedEdge["hackage-whatsnew", "process"], DirectedEdge["hackage-whatsnew", "temporary"], DirectedEdge["hackage2hwn", "base"], DirectedEdge["hackage2hwn", "download"], DirectedEdge["hackage2hwn", "feed"], DirectedEdge["hackage2hwn", "tagsoup"], DirectedEdge["hackage2twitter", "base"], DirectedEdge["hackage2twitter", "feed"], DirectedEdge["hackage2twitter", "feed2twitter"], DirectedEdge["hackager", "base"], DirectedEdge["hackager", "Cabal"], DirectedEdge["hackager", "containers"], DirectedEdge["hackager", "directory"], DirectedEdge["hackager", "filepath"], DirectedEdge["hackager", "mtl"], DirectedEdge["hackager", "process"], DirectedEdge["hackager", "regex-tdfa"], DirectedEdge["hackernews", "aeson"], DirectedEdge["hackernews", "attoparsec"], DirectedEdge["hackernews", "base"], DirectedEdge["hackernews", "bytestring"], DirectedEdge["hackernews", "either"], DirectedEdge["hackernews", "ghcjs-base"], DirectedEdge["hackernews", "HsOpenSSL"], DirectedEdge["hackernews", "http-streams"], DirectedEdge["hackernews", "io-streams"], DirectedEdge["hackernews", "text"], DirectedEdge["hackernews", "time"], DirectedEdge["hackernews", "transformers"], DirectedEdge["hackertyper", "base"], DirectedEdge["hackmanager", "base"], DirectedEdge["hackmanager", "bytestring"], DirectedEdge["hackmanager", "Cabal"], DirectedEdge["hackmanager", "directory"], DirectedEdge["hackmanager", "file-embed"], DirectedEdge["hackmanager", "Glob"], DirectedEdge["hackmanager", "hackmanager"], DirectedEdge["hackmanager", "hastache"], DirectedEdge["hackmanager", "http-client"], DirectedEdge["hackmanager", "http-client-tls"], DirectedEdge["hackmanager", "http-types"], DirectedEdge["hackmanager", "mtl"], DirectedEdge["hackmanager", "optparse-applicative"], DirectedEdge["hackmanager", "process"], DirectedEdge["hackmanager", "text"], DirectedEdge["hackport", "array"], DirectedEdge["hackport", "base"], DirectedEdge["hackport", "base64-bytestring"], DirectedEdge["hackport", "binary"], DirectedEdge["hackport", "bytestring"], DirectedEdge["hackport", "containers"], DirectedEdge["hackport", "cryptohash"], DirectedEdge["hackport", "deepseq"], DirectedEdge["hackport", "directory"], DirectedEdge["hackport", "extensible-exceptions"], DirectedEdge["hackport", "filepath"], DirectedEdge["hackport", "ghc-prim"], DirectedEdge["hackport", "hashable"], DirectedEdge["hackport", "HTTP"], DirectedEdge["hackport", "MissingH"], DirectedEdge["hackport", "mtl"], DirectedEdge["hackport", "network"], DirectedEdge["hackport", "network-uri"], DirectedEdge["hackport", "old-locale"], DirectedEdge["hackport", "old-time"], DirectedEdge["hackport", "parsec"], DirectedEdge["hackport", "pretty"], DirectedEdge["hackport", "process"], DirectedEdge["hackport", "random"], DirectedEdge["hackport", "regex-compat"], DirectedEdge["hackport", "split"], DirectedEdge["hackport", "stm"], DirectedEdge["hackport", "tar"], DirectedEdge["hackport", "template-haskell"], DirectedEdge["hackport", "time"], DirectedEdge["hackport", "transformers"], DirectedEdge["hackport", "unix"], DirectedEdge["hackport", "xml"], DirectedEdge["hackport", "zlib"], DirectedEdge["hactor", "base"], DirectedEdge["hactor", "containers"], DirectedEdge["hactor", "monad-control"], DirectedEdge["hactor", "mtl"], DirectedEdge["hactor", "resourcet"], DirectedEdge["hactor", "stm"], DirectedEdge["hactor", "stm-chans"], DirectedEdge["hactor", "transformers-base"], DirectedEdge["hactors", "base"], DirectedEdge["hactors", "stm"], DirectedEdge["haddock", "base"], DirectedEdge["haddock", "haddock-api"], DirectedEdge["haddock-api", "array"], DirectedEdge["haddock-api", "base"], DirectedEdge["haddock-api", "bytestring"], DirectedEdge["haddock-api", "Cabal"], DirectedEdge["haddock-api", "containers"], DirectedEdge["haddock-api", "deepseq"], DirectedEdge["haddock-api", "directory"], DirectedEdge["haddock-api", "filepath"], DirectedEdge["haddock-api", "ghc"], DirectedEdge["haddock-api", "ghc-boot"], DirectedEdge["haddock-api", "ghc-paths"], DirectedEdge["haddock-api", "haddock-library"], DirectedEdge["haddock-api", "transformers"], DirectedEdge["haddock-api", "xhtml"], DirectedEdge["haddock-leksah", "haddock"], DirectedEdge["haddock-leksah", "array"], DirectedEdge["haddock-leksah", "base"], DirectedEdge["haddock-leksah", "Cabal"], DirectedEdge["haddock-leksah", "containers"], DirectedEdge["haddock-leksah", "directory"], DirectedEdge["haddock-leksah", "filepath"], DirectedEdge["haddock-leksah", "ghc"], DirectedEdge["haddock-leksah", "ghc-paths"], DirectedEdge["haddock-leksah", "pretty"], DirectedEdge["haddock-library", "base"], DirectedEdge["haddock-library", "bytestring"], DirectedEdge["haddock-library", "deepseq"], DirectedEdge["haddock-library", "transformers"], DirectedEdge["haddocset", "base"], DirectedEdge["haddocset", "Cabal"], DirectedEdge["haddocset", "conduit"], DirectedEdge["haddocset", "conduit-extra"], DirectedEdge["haddocset", "directory"], DirectedEdge["haddocset", "exceptions"], DirectedEdge["haddocset", "filepath"], DirectedEdge["haddocset", "ghc"], DirectedEdge["haddocset", "haddock"], DirectedEdge["haddocset", "haddock-api"], DirectedEdge["haddocset", "http-types"], DirectedEdge["haddocset", "mtl"], DirectedEdge["haddocset", "optparse-applicative"], DirectedEdge["haddocset", "process"], DirectedEdge["haddocset", "resourcet"], DirectedEdge["haddocset", "sqlite-simple"], DirectedEdge["haddocset", "tagsoup"], DirectedEdge["haddocset", "text"], DirectedEdge["haddocset", "transformers"], DirectedEdge["hadoop-formats", "attoparsec"], DirectedEdge["hadoop-formats", "base"], DirectedEdge["hadoop-formats", "bytestring"], DirectedEdge["hadoop-formats", "text"], DirectedEdge["hadoop-formats", "vector"], DirectedEdge["hadoop-rpc", "attoparsec"], DirectedEdge["hadoop-rpc", "base"], DirectedEdge["hadoop-rpc", "bytestring"], DirectedEdge["hadoop-rpc", "cereal"], DirectedEdge["hadoop-rpc", "exceptions"], DirectedEdge["hadoop-rpc", "gsasl"], DirectedEdge["hadoop-rpc", "hashable"], DirectedEdge["hadoop-rpc", "monad-loops"], DirectedEdge["hadoop-rpc", "network"], DirectedEdge["hadoop-rpc", "protobuf"], DirectedEdge["hadoop-rpc", "random"], DirectedEdge["hadoop-rpc", "socks"], DirectedEdge["hadoop-rpc", "stm"], DirectedEdge["hadoop-rpc", "text"], DirectedEdge["hadoop-rpc", "transformers"], DirectedEdge["hadoop-rpc", "unix"], DirectedEdge["hadoop-rpc", "unordered-containers"], DirectedEdge["hadoop-rpc", "uuid"], DirectedEdge["hadoop-rpc", "vector"], DirectedEdge["hadoop-rpc", "xmlhtml"], DirectedEdge["hadoop-tools", "attoparsec"], DirectedEdge["hadoop-tools", "base"], DirectedEdge["hadoop-tools", "boxes"], DirectedEdge["hadoop-tools", "bytestring"], DirectedEdge["hadoop-tools", "clock"], DirectedEdge["hadoop-tools", "configurator"], DirectedEdge["hadoop-tools", "exceptions"], DirectedEdge["hadoop-tools", "filepath"], DirectedEdge["hadoop-tools", "hadoop-rpc"], DirectedEdge["hadoop-tools", "old-locale"], DirectedEdge["hadoop-tools", "optparse-applicative"], DirectedEdge["hadoop-tools", "protobuf"], DirectedEdge["hadoop-tools", "regex-pcre-builtin"], DirectedEdge["hadoop-tools", "split"], DirectedEdge["hadoop-tools", "stm"], DirectedEdge["hadoop-tools", "text"], DirectedEdge["hadoop-tools", "time"], DirectedEdge["hadoop-tools", "transformers"], DirectedEdge["hadoop-tools", "unix"], DirectedEdge["hadoop-tools", "vector"], DirectedEdge["haeredes", "base"], DirectedEdge["haeredes", "bytestring"], DirectedEdge["haeredes", "cmdargs"], DirectedEdge["haeredes", "dns"], DirectedEdge["haeredes", "iproute"], DirectedEdge["haeredes", "MissingH"], DirectedEdge["haeredes", "parallel-io"], DirectedEdge["haggis", "base"], DirectedEdge["haggis", "blaze-builder"], DirectedEdge["haggis", "blaze-html"], DirectedEdge["haggis", "bytestring"], DirectedEdge["haggis", "containers"], DirectedEdge["haggis", "convertible"], DirectedEdge["haggis", "directory"], DirectedEdge["haggis", "filemanip"], DirectedEdge["haggis", "filepath"], DirectedEdge["haggis", "haggis"], DirectedEdge["haggis", "HDBC"], DirectedEdge["haggis", "hquery"], DirectedEdge["haggis", "MissingH"], DirectedEdge["haggis", "network-uri"], DirectedEdge["haggis", "old-locale"], DirectedEdge["haggis", "optparse-applicative"], DirectedEdge["haggis", "pandoc"], DirectedEdge["haggis", "pandoc-types"], DirectedEdge["haggis", "parsec"], DirectedEdge["haggis", "rss"], DirectedEdge["haggis", "split"], DirectedEdge["haggis", "text"], DirectedEdge["haggis", "time"], DirectedEdge["haggis", "unix"], DirectedEdge["haggis", "xmlhtml"], DirectedEdge["haha", "base"], DirectedEdge["haha", "containers"], DirectedEdge["haha", "time"], DirectedEdge["hahp", "base"], DirectedEdge["hahp", "containers"], DirectedEdge["hahp", "hahp"], DirectedEdge["hahp", "hmatrix"], DirectedEdge["hahp", "parallel"], DirectedEdge["hahp", "random"], DirectedEdge["hahp", "time"], DirectedEdge["haiji", "aeson"], DirectedEdge["haiji", "attoparsec"], DirectedEdge["haiji", "base"], DirectedEdge["haiji", "data-default"], DirectedEdge["haiji", "mtl"], DirectedEdge["haiji", "scientific"], DirectedEdge["haiji", "tagged"], DirectedEdge["haiji", "template-haskell"], DirectedEdge["haiji", "text"], DirectedEdge["haiji", "transformers"], DirectedEdge["haiji", "unordered-containers"], DirectedEdge["haiji", "vector"], DirectedEdge["hailgun", "aeson"], DirectedEdge["hailgun", "base"], DirectedEdge["hailgun", "bytestring"], DirectedEdge["hailgun", "email-validate"], DirectedEdge["hailgun", "exceptions"], DirectedEdge["hailgun", "filepath"], DirectedEdge["hailgun", "http-client"], DirectedEdge["hailgun", "http-client-tls"], DirectedEdge["hailgun", "http-types"], DirectedEdge["hailgun", "old-locale"], DirectedEdge["hailgun", "tagsoup"], DirectedEdge["hailgun", "text"], DirectedEdge["hailgun", "time"], DirectedEdge["hailgun", "transformers"], DirectedEdge["hailgun-send", "base"], DirectedEdge["hailgun-send", "bytestring"], DirectedEdge["hailgun-send", "configurator"], DirectedEdge["hailgun-send", "hailgun"], DirectedEdge["hailgun-send", "text"], DirectedEdge["hails", "authenticate"], DirectedEdge["hails", "base"], DirectedEdge["hails", "base64-bytestring"], DirectedEdge["hails", "binary"], DirectedEdge["hails", "blaze-builder"], DirectedEdge["hails", "bson"], DirectedEdge["hails", "bytestring"], DirectedEdge["hails", "conduit"], DirectedEdge["hails", "conduit-extra"], DirectedEdge["hails", "containers"], DirectedEdge["hails", "cookie"], DirectedEdge["hails", "directory"], DirectedEdge["hails", "exceptions"], DirectedEdge["hails", "failure"], DirectedEdge["hails", "filepath"], DirectedEdge["hails", "ghc-paths"], DirectedEdge["hails", "hails"], DirectedEdge["hails", "hint"], DirectedEdge["hails", "http-conduit"], DirectedEdge["hails", "http-types"], DirectedEdge["hails", "lio"], DirectedEdge["hails", "mongoDB"], DirectedEdge["hails", "mtl"], DirectedEdge["hails", "network"], DirectedEdge["hails", "network-uri"], DirectedEdge["hails", "parsec"], DirectedEdge["hails", "resourcet"], DirectedEdge["hails", "SHA"], DirectedEdge["hails", "text"], DirectedEdge["hails", "time"], DirectedEdge["hails", "transformers"], DirectedEdge["hails", "unix"], DirectedEdge["hails", "wai"], DirectedEdge["hails", "wai-app-static"], DirectedEdge["hails", "wai-extra"], DirectedEdge["hails", "warp"], DirectedEdge["hails-bin", "hails"], DirectedEdge["hails-bin", "base"], DirectedEdge["hails-bin", "bson"], DirectedEdge["hails-bin", "bytestring"], DirectedEdge["hails-bin", "containers"], DirectedEdge["hails-bin", "ghc-paths"], DirectedEdge["hails-bin", "hails"], DirectedEdge["hails-bin", "iterIO"], DirectedEdge["hails-bin", "iterio-server"], DirectedEdge["hails-bin", "mongoDB"], DirectedEdge["hails-bin", "mtl"], DirectedEdge["hairy", "aeson"], DirectedEdge["hairy", "base"], DirectedEdge["hairy", "data-default"], DirectedEdge["hairy", "hairy"], DirectedEdge["hairy", "heroku"], DirectedEdge["hairy", "http-types"], DirectedEdge["hairy", "monad-logger"], DirectedEdge["hairy", "mtl"], DirectedEdge["hairy", "persistent"], DirectedEdge["hairy", "persistent-postgresql"], DirectedEdge["hairy", "persistent-template"], DirectedEdge["hairy", "scotty"], DirectedEdge["hairy", "text"], DirectedEdge["hairy", "time"], DirectedEdge["hairy", "transformers"], DirectedEdge["hairy", "wai"], DirectedEdge["hairy", "wai-extra"], DirectedEdge["hairy", "warp"], DirectedEdge["hakaru", "aeson"], DirectedEdge["hakaru", "array"], DirectedEdge["hakaru", "base"], DirectedEdge["hakaru", "bytestring"], DirectedEdge["hakaru", "cassava"], DirectedEdge["hakaru", "containers"], DirectedEdge["hakaru", "directory"], DirectedEdge["hakaru", "hmatrix"], DirectedEdge["hakaru", "integration"], DirectedEdge["hakaru", "logfloat"], DirectedEdge["hakaru", "math-functions"], DirectedEdge["hakaru", "monad-loops"], DirectedEdge["hakaru", "mwc-random"], DirectedEdge["hakaru", "parallel"], DirectedEdge["hakaru", "parsec"], DirectedEdge["hakaru", "pretty"], DirectedEdge["hakaru", "primitive"], DirectedEdge["hakaru", "random"], DirectedEdge["hakaru", "statistics"], DirectedEdge["hakaru", "text"], DirectedEdge["hakaru", "transformers"], DirectedEdge["hakaru", "vector"], DirectedEdge["hakaru", "zlib"], DirectedEdge["hake", "base"], DirectedEdge["hake", "directory"], DirectedEdge["hake", "filepath"], DirectedEdge["hake", "mtl"], DirectedEdge["hake", "process"], DirectedEdge["hake", "regexpr"], DirectedEdge["hake", "time"], DirectedEdge["hake", "yjtools"], DirectedEdge["hakismet", "base"], DirectedEdge["hakismet", "HTTP"], DirectedEdge["hakismet", "network"], DirectedEdge["hako", "base"], DirectedEdge["hako", "haskell-src-meta"], DirectedEdge["hako", "parsec"], DirectedEdge["hako", "template-haskell"], DirectedEdge["hako", "text"], DirectedEdge["hako", "transformers"], DirectedEdge["hakyll", "base"], DirectedEdge["hakyll", "binary"], DirectedEdge["hakyll", "blaze-html"], DirectedEdge["hakyll", "blaze-markup"], DirectedEdge["hakyll", "bytestring"], DirectedEdge["hakyll", "cmdargs"], DirectedEdge["hakyll", "containers"], DirectedEdge["hakyll", "cryptohash"], DirectedEdge["hakyll", "data-default"], DirectedEdge["hakyll", "deepseq"], DirectedEdge["hakyll", "directory"], DirectedEdge["hakyll", "filepath"], DirectedEdge["hakyll", "fsnotify"], DirectedEdge["hakyll", "http-conduit"], DirectedEdge["hakyll", "http-types"], DirectedEdge["hakyll", "lrucache"], DirectedEdge["hakyll", "mtl"], DirectedEdge["hakyll", "network"], DirectedEdge["hakyll", "network-uri"], DirectedEdge["hakyll", "pandoc"], DirectedEdge["hakyll", "pandoc-citeproc"], DirectedEdge["hakyll", "parsec"], DirectedEdge["hakyll", "process"], DirectedEdge["hakyll", "random"], DirectedEdge["hakyll", "regex-base"], DirectedEdge["hakyll", "regex-tdfa"], DirectedEdge["hakyll", "resourcet"], DirectedEdge["hakyll", "scientific"], DirectedEdge["hakyll", "snap-core"], DirectedEdge["hakyll", "snap-server"], DirectedEdge["hakyll", "system-filepath"], DirectedEdge["hakyll", "tagsoup"], DirectedEdge["hakyll", "text"], DirectedEdge["hakyll", "time"], DirectedEdge["hakyll", "time-locale-compat"], DirectedEdge["hakyll", "unordered-containers"], DirectedEdge["hakyll", "vector"], DirectedEdge["hakyll", "yaml"], DirectedEdge["hakyll-R", "R-pandoc"], DirectedEdge["hakyll-R", "base"], DirectedEdge["hakyll-R", "directory"], DirectedEdge["hakyll-R", "filepath"], DirectedEdge["hakyll-R", "hakyll"], DirectedEdge["hakyll-R", "pandoc"], DirectedEdge["hakyll-R", "process"], DirectedEdge["hakyll-agda", "Agda"], DirectedEdge["hakyll-agda", "base"], DirectedEdge["hakyll-agda", "containers"], DirectedEdge["hakyll-agda", "directory"], DirectedEdge["hakyll-agda", "filepath"], DirectedEdge["hakyll-agda", "hakyll"], DirectedEdge["hakyll-agda", "mtl"], DirectedEdge["hakyll-agda", "pandoc"], DirectedEdge["hakyll-agda", "transformers"], DirectedEdge["hakyll-agda", "xhtml"], DirectedEdge["hakyll-blaze-templates", "base"], DirectedEdge["hakyll-blaze-templates", "blaze-html"], DirectedEdge["hakyll-blaze-templates", "blaze-markup"], DirectedEdge["hakyll-blaze-templates", "hakyll"], DirectedEdge["hakyll-contrib", "base"], DirectedEdge["hakyll-contrib", "directory"], DirectedEdge["hakyll-contrib", "filepath"], DirectedEdge["hakyll-contrib", "hakyll"], DirectedEdge["hakyll-contrib", "pandoc"], DirectedEdge["hakyll-contrib-csv", "base"], DirectedEdge["hakyll-contrib-csv", "blaze-html"], DirectedEdge["hakyll-contrib-csv", "bytestring"], DirectedEdge["hakyll-contrib-csv", "cassava"], DirectedEdge["hakyll-contrib-csv", "hakyll"], DirectedEdge["hakyll-contrib-csv", "vector"], DirectedEdge["hakyll-contrib-elm", "base"], DirectedEdge["hakyll-contrib-elm", "bytestring"], DirectedEdge["hakyll-contrib-elm", "directory"], DirectedEdge["hakyll-contrib-elm", "hakyll"], DirectedEdge["hakyll-contrib-elm", "hakyll-contrib-elm"], DirectedEdge["hakyll-contrib-elm", "process"], DirectedEdge["hakyll-contrib-elm", "temporary"], DirectedEdge["hakyll-contrib-hyphenation", "base"], DirectedEdge["hakyll-contrib-hyphenation", "hakyll"], DirectedEdge["hakyll-contrib-hyphenation", "hyphenation"], DirectedEdge["hakyll-contrib-hyphenation", "split"], DirectedEdge["hakyll-contrib-hyphenation", "tagsoup"], DirectedEdge["hakyll-contrib-links", "base"], DirectedEdge["hakyll-contrib-links", "binary"], DirectedEdge["hakyll-contrib-links", "containers"], DirectedEdge["hakyll-contrib-links", "hakyll"], DirectedEdge["hakyll-contrib-links", "pandoc"], DirectedEdge["hakyll-contrib-links", "pandoc-types"], DirectedEdge["hakyll-contrib-links", "parsec"], DirectedEdge["hakyll-convert", "base"], DirectedEdge["hakyll-convert", "binary"], DirectedEdge["hakyll-convert", "bytestring"], DirectedEdge["hakyll-convert", "cmdargs"], DirectedEdge["hakyll-convert", "directory"], DirectedEdge["hakyll-convert", "feed"], DirectedEdge["hakyll-convert", "filepath"], DirectedEdge["hakyll-convert", "hakyll"], DirectedEdge["hakyll-convert", "hakyll-convert"], DirectedEdge["hakyll-convert", "old-locale"], DirectedEdge["hakyll-convert", "text"], DirectedEdge["hakyll-convert", "time"], DirectedEdge["hakyll-convert", "xml"], DirectedEdge["hakyll-elm", "base"], DirectedEdge["hakyll-elm", "blaze-html"], DirectedEdge["hakyll-elm", "blaze-markup"], DirectedEdge["hakyll-elm", "Elm"], DirectedEdge["hakyll-elm", "hakyll"], DirectedEdge["hakyll-elm", "mtl"], DirectedEdge["hakyll-filestore", "base"], DirectedEdge["hakyll-filestore", "filestore"], DirectedEdge["hakyll-filestore", "hakyll"], DirectedEdge["hakyll-filestore", "time"], DirectedEdge["hakyll-filestore", "time-locale-compat"], DirectedEdge["hakyll-sass", "base"], DirectedEdge["hakyll-sass", "data-default-class"], DirectedEdge["hakyll-sass", "filepath"], DirectedEdge["hakyll-sass", "hakyll"], DirectedEdge["hakyll-sass", "hsass"], DirectedEdge["halberd", "base"], DirectedEdge["halberd", "Cabal"], DirectedEdge["halberd", "containers"], DirectedEdge["halberd", "halberd"], DirectedEdge["halberd", "haskell-names"], DirectedEdge["halberd", "haskell-packages"], DirectedEdge["halberd", "haskell-src-exts"], DirectedEdge["halberd", "mtl"], DirectedEdge["halberd", "safe"], DirectedEdge["halberd", "syb"], DirectedEdge["halberd", "tagged"], DirectedEdge["half", "base"], DirectedEdge["halfs", "array"], DirectedEdge["halfs", "base"], DirectedEdge["halfs", "bytestring"], DirectedEdge["halfs", "cereal"], DirectedEdge["halfs", "containers"], DirectedEdge["halfs", "directory"], DirectedEdge["halfs", "filepath"], DirectedEdge["halfs", "fingertree"], DirectedEdge["halfs", "halfs"], DirectedEdge["halfs", "HFuse"], DirectedEdge["halfs", "mtl"], DirectedEdge["halfs", "QuickCheck"], DirectedEdge["halfs", "random"], DirectedEdge["halfs", "time"], DirectedEdge["halfs", "unix"], DirectedEdge["halipeto", "base"], DirectedEdge["halipeto", "directory"], DirectedEdge["halipeto", "HaXml"], DirectedEdge["halipeto", "pandoc"], DirectedEdge["halive", "base"], DirectedEdge["halive", "bin-package-db"], DirectedEdge["halive", "containers"], DirectedEdge["halive", "directory"], DirectedEdge["halive", "filepath"], DirectedEdge["halive", "foreign-store"], DirectedEdge["halive", "fsnotify"], DirectedEdge["halive", "ghc"], DirectedEdge["halive", "ghc-paths"], DirectedEdge["halive", "halive"], DirectedEdge["halive", "process"], DirectedEdge["halive", "transformers"], DirectedEdge["halma", "async"], DirectedEdge["halma", "base"], DirectedEdge["halma", "containers"], DirectedEdge["halma", "data-default"], DirectedEdge["halma", "diagrams-cairo"], DirectedEdge["halma", "diagrams-gtk"], DirectedEdge["halma", "diagrams-lib"], DirectedEdge["halma", "grid"], DirectedEdge["halma", "gtk"], DirectedEdge["halma", "halma"], DirectedEdge["halma", "mtl"], DirectedEdge["halma", "mvc"], DirectedEdge["halma", "pipes"], DirectedEdge["halma", "timeit"], DirectedEdge["haltavista", "base"], DirectedEdge["haltavista", "hint"], DirectedEdge["haltavista", "process"], DirectedEdge["hamid", "base"], DirectedEdge["hamid", "HCodecs"], DirectedEdge["hamid", "newtype"], DirectedEdge["hamlet", "shakespeare"], DirectedEdge["hamlet", "base"], DirectedEdge["hamlet", "shakespeare"], DirectedEdge["hampp", "base"], DirectedEdge["hampp", "bytestring"], DirectedEdge["hampp", "containers"], DirectedEdge["hampp", "directory"], DirectedEdge["hampp", "filepath"], DirectedEdge["hampp", "Glob"], DirectedEdge["hampp", "preprocessor-tools"], DirectedEdge["hamtmap", "array"], DirectedEdge["hamtmap", "base"], DirectedEdge["hamtmap", "deepseq"], DirectedEdge["hamtmap", "hashable"], DirectedEdge["hamusic", "base"], DirectedEdge["hamusic", "containers"], DirectedEdge["hamusic", "directory"], DirectedEdge["hamusic", "filepath"], DirectedEdge["hamusic", "haskore"], DirectedEdge["hamusic", "HaXml"], DirectedEdge["hamusic", "musicxml"], DirectedEdge["hamusic", "non-negative"], DirectedEdge["hamusic", "process"], DirectedEdge["handa-gdata", "base"], DirectedEdge["handa-gdata", "base64-bytestring"], DirectedEdge["handa-gdata", "binary"], DirectedEdge["handa-gdata", "bytestring"], DirectedEdge["handa-gdata", "case-insensitive"], DirectedEdge["handa-gdata", "cmdargs"], DirectedEdge["handa-gdata", "data-default"], DirectedEdge["handa-gdata", "directory"], DirectedEdge["handa-gdata", "filepath"], DirectedEdge["handa-gdata", "GenericPretty"], DirectedEdge["handa-gdata", "HTTP"], DirectedEdge["handa-gdata", "http-conduit"], DirectedEdge["handa-gdata", "json"], DirectedEdge["handa-gdata", "network"], DirectedEdge["handa-gdata", "old-locale"], DirectedEdge["handa-gdata", "pretty"], DirectedEdge["handa-gdata", "process"], DirectedEdge["handa-gdata", "random"], DirectedEdge["handa-gdata", "regex-posix"], DirectedEdge["handa-gdata", "resourcet"], DirectedEdge["handa-gdata", "split"], DirectedEdge["handa-gdata", "time"], DirectedEdge["handa-gdata", "unix-compat"], DirectedEdge["handa-gdata", "utf8-string"], DirectedEdge["handa-gdata", "xml"], DirectedEdge["handa-geodata", "aeson"], DirectedEdge["handa-geodata", "base"], DirectedEdge["handa-geodata", "bytestring"], DirectedEdge["handa-geodata", "containers"], DirectedEdge["handa-geodata", "handa-geodata"], DirectedEdge["handa-geodata", "scientific"], DirectedEdge["handa-opengl", "aeson"], DirectedEdge["handa-opengl", "array"], DirectedEdge["handa-opengl", "base"], DirectedEdge["handa-opengl", "binary"], DirectedEdge["handa-opengl", "data-default"], DirectedEdge["handa-opengl", "GLUT"], DirectedEdge["handa-opengl", "OpenGL"], DirectedEdge["handa-opengl", "opengl-dlp-stereo"], DirectedEdge["handa-opengl", "split"], DirectedEdge["handa-opengl", "vector-space"], DirectedEdge["handle-like", "base"], DirectedEdge["handle-like", "bytestring"], DirectedEdge["handsy", "base"], DirectedEdge["handsy", "bytestring"], DirectedEdge["handsy", "data-default-class"], DirectedEdge["handsy", "operational"], DirectedEdge["handsy", "process-extras"], DirectedEdge["handsy", "retry"], DirectedEdge["handsy", "shell-escape"], DirectedEdge["handsy", "split"], DirectedEdge["handsy", "transformers"], DirectedEdge["handwriting", "aeson"], DirectedEdge["handwriting", "base"], DirectedEdge["handwriting", "bytestring"], DirectedEdge["handwriting", "containers"], DirectedEdge["handwriting", "directory"], DirectedEdge["handwriting", "filepath"], DirectedEdge["handwriting", "handwriting"], DirectedEdge["handwriting", "lens"], DirectedEdge["handwriting", "lens-aeson"], DirectedEdge["handwriting", "random"], DirectedEdge["handwriting", "split"], DirectedEdge["handwriting", "text"], DirectedEdge["handwriting", "transformers"], DirectedEdge["handwriting", "wreq"], DirectedEdge["hangman", "base"], DirectedEdge["hangman", "mtl"], DirectedEdge["hangman", "random"], DirectedEdge["hangman", "utility-ht"], DirectedEdge["hannahci", "aeson"], DirectedEdge["hannahci", "base"], DirectedEdge["hannahci", "bytestring"], DirectedEdge["hannahci", "directory"], DirectedEdge["hannahci", "formatting"], DirectedEdge["hannahci", "http-types"], DirectedEdge["hannahci", "lens"], DirectedEdge["hannahci", "lens-aeson"], DirectedEdge["hannahci", "process"], DirectedEdge["hannahci", "scotty"], DirectedEdge["hannahci", "text"], DirectedEdge["hannahci", "transformers"], DirectedEdge["hannahci", "unix-time"], DirectedEdge["hannahci", "wai-extra"], DirectedEdge["hannahci", "wai-middleware-static"], DirectedEdge["hannahci", "yaml"], DirectedEdge["hans", "base"], DirectedEdge["hans", "blaze-html"], DirectedEdge["hans", "blaze-markup"], DirectedEdge["hans", "BoundedChan"], DirectedEdge["hans", "bytestring"], DirectedEdge["hans", "cereal"], DirectedEdge["hans", "containers"], DirectedEdge["hans", "fingertree"], DirectedEdge["hans", "HALVMCore"], DirectedEdge["hans", "hans"], DirectedEdge["hans", "HTTP"], DirectedEdge["hans", "monadLib"], DirectedEdge["hans", "network"], DirectedEdge["hans", "old-locale"], DirectedEdge["hans", "QuickCheck"], DirectedEdge["hans", "random"], DirectedEdge["hans", "stm"], DirectedEdge["hans", "test-framework"], DirectedEdge["hans", "time"], DirectedEdge["hans", "unix"], DirectedEdge["hans", "XenDevice"], DirectedEdge["hans-pcap", "base"], DirectedEdge["hans-pcap", "bytestring"], DirectedEdge["hans-pcap", "hans"], DirectedEdge["hans-pcap", "pcap"], DirectedEdge["hans-pfq", "base"], DirectedEdge["hans-pfq", "bytestring"], DirectedEdge["hans-pfq", "hans"], DirectedEdge["hans-pfq", "pfq"], DirectedEdge["haphviz", "base"], DirectedEdge["haphviz", "mtl"], DirectedEdge["haphviz", "text"], DirectedEdge["hapistrano", "base"], DirectedEdge["hapistrano", "base-compat"], DirectedEdge["hapistrano", "either"], DirectedEdge["hapistrano", "filepath"], DirectedEdge["hapistrano", "hapistrano"], DirectedEdge["hapistrano", "mtl"], DirectedEdge["hapistrano", "process"], DirectedEdge["hapistrano", "time"], DirectedEdge["hapistrano", "time-locale-compat"], DirectedEdge["hapistrano", "transformers"], DirectedEdge["happindicator", "array"], DirectedEdge["happindicator", "base"], DirectedEdge["happindicator", "bytestring"], DirectedEdge["happindicator", "containers"], DirectedEdge["happindicator", "glib"], DirectedEdge["happindicator", "gtk"], DirectedEdge["happindicator", "mtl"], DirectedEdge["happindicator3", "base"], DirectedEdge["happindicator3", "glib"], DirectedEdge["happindicator3", "text"], DirectedEdge["happraise", "base"], DirectedEdge["happraise", "directory"], DirectedEdge["happraise", "filepath"], DirectedEdge["happs-hsp", "base"], DirectedEdge["happs-hsp", "bytestring"], DirectedEdge["happs-hsp", "HAppS-Server"], DirectedEdge["happs-hsp", "hsp"], DirectedEdge["happs-hsp", "mtl"], DirectedEdge["happs-hsp", "plugins"], DirectedEdge["happs-hsp-template", "base"], DirectedEdge["happs-hsp-template", "bytestring"], DirectedEdge["happs-hsp-template", "containers"], DirectedEdge["happs-hsp-template", "directory"], DirectedEdge["happs-hsp-template", "filepath"], DirectedEdge["happs-hsp-template", "HAppS-Server"], DirectedEdge["happs-hsp-template", "hinotify"], DirectedEdge["happs-hsp-template", "hsp"], DirectedEdge["happs-hsp-template", "mtl"], DirectedEdge["happs-hsp-template", "network"], DirectedEdge["happs-hsp-template", "plugins"], DirectedEdge["happs-hsp-template", "RJson"], DirectedEdge["happs-tutorial", "base"], DirectedEdge["happs-tutorial", "bytestring"], DirectedEdge["happs-tutorial", "containers"], DirectedEdge["happs-tutorial", "DebugTraceHelpers"], DirectedEdge["happs-tutorial", "directory"], DirectedEdge["happs-tutorial", "filepath"], DirectedEdge["happs-tutorial", "happstack"], DirectedEdge["happs-tutorial", "happstack-data"], DirectedEdge["happs-tutorial", "happstack-helpers"], DirectedEdge["happs-tutorial", "happstack-ixset"], DirectedEdge["happs-tutorial", "happstack-server"], DirectedEdge["happs-tutorial", "happstack-state"], DirectedEdge["happs-tutorial", "hscolour"], DirectedEdge["happs-tutorial", "HStringTemplate"], DirectedEdge["happs-tutorial", "HStringTemplateHelpers"], DirectedEdge["happs-tutorial", "HTTP"], DirectedEdge["happs-tutorial", "mtl"], DirectedEdge["happs-tutorial", "old-time"], DirectedEdge["happs-tutorial", "parsec"], DirectedEdge["happs-tutorial", "pretty"], DirectedEdge["happs-tutorial", "safe"], DirectedEdge["happs-tutorial", "syb"], DirectedEdge["happstack", "base"], DirectedEdge["happstack", "happstack-server"], DirectedEdge["happstack", "HUnit"], DirectedEdge["happstack-auth", "base"], DirectedEdge["happstack-auth", "bytestring"], DirectedEdge["happstack-auth", "containers"], DirectedEdge["happstack-auth", "convertible"], DirectedEdge["happstack-auth", "happstack"], DirectedEdge["happstack-auth", "happstack-data"], DirectedEdge["happstack-auth", "happstack-ixset"], DirectedEdge["happstack-auth", "happstack-server"], DirectedEdge["happstack-auth", "happstack-state"], DirectedEdge["happstack-auth", "mtl"], DirectedEdge["happstack-auth", "old-time"], DirectedEdge["happstack-auth", "random"], DirectedEdge["happstack-authenticate", "acid-state"], DirectedEdge["happstack-authenticate", "aeson"], DirectedEdge["happstack-authenticate", "authenticate"], DirectedEdge["happstack-authenticate", "base"], DirectedEdge["happstack-authenticate", "base64-bytestring"], DirectedEdge["happstack-authenticate", "boomerang"], DirectedEdge["happstack-authenticate", "bytestring"], DirectedEdge["happstack-authenticate", "containers"], DirectedEdge["happstack-authenticate", "data-default"], DirectedEdge["happstack-authenticate", "email-validate"], DirectedEdge["happstack-authenticate", "filepath"], DirectedEdge["happstack-authenticate", "happstack-hsp"], DirectedEdge["happstack-authenticate", "happstack-jmacro"], DirectedEdge["happstack-authenticate", "happstack-server"], DirectedEdge["happstack-authenticate", "hsp"], DirectedEdge["happstack-authenticate", "hsx-jmacro"], DirectedEdge["happstack-authenticate", "hsx2hs"], DirectedEdge["happstack-authenticate", "http-conduit"], DirectedEdge["happstack-authenticate", "http-types"], DirectedEdge["happstack-authenticate", "ixset-typed"], DirectedEdge["happstack-authenticate", "jmacro"], DirectedEdge["happstack-authenticate", "jwt"], DirectedEdge["happstack-authenticate", "lens"], DirectedEdge["happstack-authenticate", "mime-mail"], DirectedEdge["happstack-authenticate", "mtl"], DirectedEdge["happstack-authenticate", "pwstore-purehaskell"], DirectedEdge["happstack-authenticate", "random"], DirectedEdge["happstack-authenticate", "safecopy"], DirectedEdge["happstack-authenticate", "shakespeare"], DirectedEdge["happstack-authenticate", "text"], DirectedEdge["happstack-authenticate", "time"], DirectedEdge["happstack-authenticate", "unordered-containers"], DirectedEdge["happstack-authenticate", "userid"], DirectedEdge["happstack-authenticate", "web-routes"], DirectedEdge["happstack-authenticate", "web-routes-boomerang"], DirectedEdge["happstack-authenticate", "web-routes-happstack"], DirectedEdge["happstack-authenticate", "web-routes-hsp"], DirectedEdge["happstack-authenticate", "web-routes-th"], DirectedEdge["happstack-clientsession", "base"], DirectedEdge["happstack-clientsession", "bytestring"], DirectedEdge["happstack-clientsession", "cereal"], DirectedEdge["happstack-clientsession", "clientsession"], DirectedEdge["happstack-clientsession", "happstack-server"], DirectedEdge["happstack-clientsession", "monad-control"], DirectedEdge["happstack-clientsession", "mtl"], DirectedEdge["happstack-clientsession", "safecopy"], DirectedEdge["happstack-clientsession", "transformers-base"], DirectedEdge["happstack-contrib", "base"], DirectedEdge["happstack-contrib", "bytestring"], DirectedEdge["happstack-contrib", "directory"], DirectedEdge["happstack-contrib", "happstack-data"], DirectedEdge["happstack-contrib", "happstack-ixset"], DirectedEdge["happstack-contrib", "happstack-server"], DirectedEdge["happstack-contrib", "happstack-state"], DirectedEdge["happstack-contrib", "happstack-util"], DirectedEdge["happstack-contrib", "HTTP"], DirectedEdge["happstack-contrib", "HUnit"], DirectedEdge["happstack-contrib", "mtl"], DirectedEdge["happstack-contrib", "network"], DirectedEdge["happstack-contrib", "old-time"], DirectedEdge["happstack-contrib", "syb"], DirectedEdge["happstack-contrib", "template-haskell"], DirectedEdge["happstack-contrib", "unix"], DirectedEdge["happstack-data", "safecopy"], DirectedEdge["happstack-data", "base"], DirectedEdge["happstack-data", "binary"], DirectedEdge["happstack-data", "bytestring"], DirectedEdge["happstack-data", "containers"], DirectedEdge["happstack-data", "HaXml"], DirectedEdge["happstack-data", "HUnit"], DirectedEdge["happstack-data", "mtl"], DirectedEdge["happstack-data", "pretty"], DirectedEdge["happstack-data", "syb"], DirectedEdge["happstack-data", "syb-with-class"], DirectedEdge["happstack-data", "syb-with-class-instances-text"], DirectedEdge["happstack-data", "template-haskell"], DirectedEdge["happstack-data", "text"], DirectedEdge["happstack-data", "time"], DirectedEdge["happstack-dlg", "applicative-extras"], DirectedEdge["happstack-dlg", "base"], DirectedEdge["happstack-dlg", "bytestring"], DirectedEdge["happstack-dlg", "containers"], DirectedEdge["happstack-dlg", "formlets"], DirectedEdge["happstack-dlg", "happstack-server"], DirectedEdge["happstack-dlg", "mtl"], DirectedEdge["happstack-dlg", "random"], DirectedEdge["happstack-dlg", "template-haskell"], DirectedEdge["happstack-dlg", "time"], DirectedEdge["happstack-dlg", "xhtml"], DirectedEdge["happstack-facebook", "fb"], DirectedEdge["happstack-facebook", "applicative-extras"], DirectedEdge["happstack-facebook", "base"], DirectedEdge["happstack-facebook", "bytestring"], DirectedEdge["happstack-facebook", "containers"], DirectedEdge["happstack-facebook", "filepath"], DirectedEdge["happstack-facebook", "formlets"], DirectedEdge["happstack-facebook", "formlets-hsp"], DirectedEdge["happstack-facebook", "happstack"], DirectedEdge["happstack-facebook", "happstack-data"], DirectedEdge["happstack-facebook", "happstack-extra"], DirectedEdge["happstack-facebook", "happstack-hsp"], DirectedEdge["happstack-facebook", "happstack-ixset"], DirectedEdge["happstack-facebook", "happstack-server"], DirectedEdge["happstack-facebook", "happstack-state"], DirectedEdge["happstack-facebook", "happstack-util"], DirectedEdge["happstack-facebook", "harp"], DirectedEdge["happstack-facebook", "hsp"], DirectedEdge["happstack-facebook", "hsx"], DirectedEdge["happstack-facebook", "html"], DirectedEdge["happstack-facebook", "HTTP"], DirectedEdge["happstack-facebook", "json"], DirectedEdge["happstack-facebook", "mtl"], DirectedEdge["happstack-facebook", "network"], DirectedEdge["happstack-facebook", "old-time"], DirectedEdge["happstack-facebook", "random"], DirectedEdge["happstack-facebook", "RJson"], DirectedEdge["happstack-facebook", "syb"], DirectedEdge["happstack-facebook", "text"], DirectedEdge["happstack-facebook", "time"], DirectedEdge["happstack-facebook", "utf8-string"], DirectedEdge["happstack-facebook", "web-routes"], DirectedEdge["happstack-facebook", "web-routes-mtl"], DirectedEdge["happstack-fastcgi", "base"], DirectedEdge["happstack-fastcgi", "bytestring"], DirectedEdge["happstack-fastcgi", "cgi"], DirectedEdge["happstack-fastcgi", "containers"], DirectedEdge["happstack-fastcgi", "fastcgi"], DirectedEdge["happstack-fastcgi", "happstack-server"], DirectedEdge["happstack-fastcgi", "mtl"], DirectedEdge["happstack-fastcgi", "utf8-string"], DirectedEdge["happstack-fay", "aeson"], DirectedEdge["happstack-fay", "base"], DirectedEdge["happstack-fay", "fay"], DirectedEdge["happstack-fay", "happstack-fay-ajax"], DirectedEdge["happstack-fay", "happstack-server"], DirectedEdge["happstack-fay", "mtl"], DirectedEdge["happstack-fay-ajax", "fay-base"], DirectedEdge["happstack-fay-ajax", "fay-jquery"], DirectedEdge["happstack-foundation", "acid-state"], DirectedEdge["happstack-foundation", "base"], DirectedEdge["happstack-foundation", "happstack-hsp"], DirectedEdge["happstack-foundation", "happstack-server"], DirectedEdge["happstack-foundation", "hsp"], DirectedEdge["happstack-foundation", "lifted-base"], DirectedEdge["happstack-foundation", "monad-control"], DirectedEdge["happstack-foundation", "mtl"], DirectedEdge["happstack-foundation", "reform"], DirectedEdge["happstack-foundation", "reform-happstack"], DirectedEdge["happstack-foundation", "reform-hsp"], DirectedEdge["happstack-foundation", "safecopy"], DirectedEdge["happstack-foundation", "text"], DirectedEdge["happstack-foundation", "web-routes"], DirectedEdge["happstack-foundation", "web-routes-happstack"], DirectedEdge["happstack-foundation", "web-routes-hsp"], DirectedEdge["happstack-foundation", "web-routes-th"], DirectedEdge["happstack-hamlet", "base"], DirectedEdge["happstack-hamlet", "happstack-server"], DirectedEdge["happstack-hamlet", "shakespeare"], DirectedEdge["happstack-hamlet", "text"], DirectedEdge["happstack-heist", "base"], DirectedEdge["happstack-heist", "blaze-builder"], DirectedEdge["happstack-heist", "bytestring"], DirectedEdge["happstack-heist", "either"], DirectedEdge["happstack-heist", "filepath"], DirectedEdge["happstack-heist", "happstack-server"], DirectedEdge["happstack-heist", "heist"], DirectedEdge["happstack-heist", "mtl"], DirectedEdge["happstack-heist", "text"], DirectedEdge["happstack-helpers", "base"], DirectedEdge["happstack-helpers", "bytestring"], DirectedEdge["happstack-helpers", "containers"], DirectedEdge["happstack-helpers", "DebugTraceHelpers"], DirectedEdge["happstack-helpers", "directory"], DirectedEdge["happstack-helpers", "filepath"], DirectedEdge["happstack-helpers", "happstack-data"], DirectedEdge["happstack-helpers", "happstack-ixset"], DirectedEdge["happstack-helpers", "happstack-server"], DirectedEdge["happstack-helpers", "happstack-state"], DirectedEdge["happstack-helpers", "hscolour"], DirectedEdge["happstack-helpers", "HSH"], DirectedEdge["happstack-helpers", "HStringTemplate"], DirectedEdge["happstack-helpers", "HStringTemplateHelpers"], DirectedEdge["happstack-helpers", "HTTP"], DirectedEdge["happstack-helpers", "MissingH"], DirectedEdge["happstack-helpers", "mtl"], DirectedEdge["happstack-helpers", "network"], DirectedEdge["happstack-helpers", "old-time"], DirectedEdge["happstack-helpers", "parsec"], DirectedEdge["happstack-helpers", "random"], DirectedEdge["happstack-helpers", "safe"], DirectedEdge["happstack-helpers", "syb"], DirectedEdge["happstack-helpers", "text"], DirectedEdge["happstack-helpers", "utf8-string"], DirectedEdge["happstack-hsp", "base"], DirectedEdge["happstack-hsp", "bytestring"], DirectedEdge["happstack-hsp", "happstack-server"], DirectedEdge["happstack-hsp", "harp"], DirectedEdge["happstack-hsp", "hsp"], DirectedEdge["happstack-hsp", "hsx2hs"], DirectedEdge["happstack-hsp", "mtl"], DirectedEdge["happstack-hsp", "syb"], DirectedEdge["happstack-hsp", "text"], DirectedEdge["happstack-hsp", "utf8-string"], DirectedEdge["happstack-hstringtemplate", "base"], DirectedEdge["happstack-hstringtemplate", "bytestring"], DirectedEdge["happstack-hstringtemplate", "happstack-server"], DirectedEdge["happstack-hstringtemplate", "hslogger"], DirectedEdge["happstack-hstringtemplate", "HStringTemplate"], DirectedEdge["happstack-hstringtemplate", "mtl"], DirectedEdge["happstack-ixset", "ixset"], DirectedEdge["happstack-ixset", "base"], DirectedEdge["happstack-ixset", "containers"], DirectedEdge["happstack-ixset", "happstack-data"], DirectedEdge["happstack-ixset", "happstack-util"], DirectedEdge["happstack-ixset", "HUnit"], DirectedEdge["happstack-ixset", "mtl"], DirectedEdge["happstack-ixset", "QuickCheck"], DirectedEdge["happstack-ixset", "syb"], DirectedEdge["happstack-ixset", "syb-with-class"], DirectedEdge["happstack-ixset", "template-haskell"], DirectedEdge["happstack-jmacro", "base"], DirectedEdge["happstack-jmacro", "base64-bytestring"], DirectedEdge["happstack-jmacro", "bytestring"], DirectedEdge["happstack-jmacro", "cereal"], DirectedEdge["happstack-jmacro", "digest"], DirectedEdge["happstack-jmacro", "happstack-server"], DirectedEdge["happstack-jmacro", "jmacro"], DirectedEdge["happstack-jmacro", "text"], DirectedEdge["happstack-jmacro", "utf8-string"], DirectedEdge["happstack-jmacro", "wl-pprint-text"], DirectedEdge["happstack-lite", "base"], DirectedEdge["happstack-lite", "bytestring"], DirectedEdge["happstack-lite", "happstack-server"], DirectedEdge["happstack-lite", "mtl"], DirectedEdge["happstack-lite", "text"], DirectedEdge["happstack-monad-peel", "base"], DirectedEdge["happstack-monad-peel", "happstack-server"], DirectedEdge["happstack-monad-peel", "monad-peel"], DirectedEdge["happstack-monad-peel", "mtl"], DirectedEdge["happstack-monad-peel", "transformers"], DirectedEdge["happstack-plugins", "base"], DirectedEdge["happstack-plugins", "happstack-server"], DirectedEdge["happstack-plugins", "mtl"], DirectedEdge["happstack-plugins", "plugins-auto"], DirectedEdge["happstack-plugins", "template-haskell"], DirectedEdge["happstack-plugins", "th-lift"], DirectedEdge["happstack-server", "base"], DirectedEdge["happstack-server", "base64-bytestring"], DirectedEdge["happstack-server", "blaze-html"], DirectedEdge["happstack-server", "bytestring"], DirectedEdge["happstack-server", "containers"], DirectedEdge["happstack-server", "directory"], DirectedEdge["happstack-server", "exceptions"], DirectedEdge["happstack-server", "extensible-exceptions"], DirectedEdge["happstack-server", "filepath"], DirectedEdge["happstack-server", "hslogger"], DirectedEdge["happstack-server", "html"], DirectedEdge["happstack-server", "monad-control"], DirectedEdge["happstack-server", "mtl"], DirectedEdge["happstack-server", "network"], DirectedEdge["happstack-server", "network-uri"], DirectedEdge["happstack-server", "old-locale"], DirectedEdge["happstack-server", "parsec"], DirectedEdge["happstack-server", "process"], DirectedEdge["happstack-server", "sendfile"], DirectedEdge["happstack-server", "syb"], DirectedEdge["happstack-server", "system-filepath"], DirectedEdge["happstack-server", "template-haskell"], DirectedEdge["happstack-server", "text"], DirectedEdge["happstack-server", "threads"], DirectedEdge["happstack-server", "time"], DirectedEdge["happstack-server", "time-compat"], DirectedEdge["happstack-server", "transformers"], DirectedEdge["happstack-server", "transformers-base"], DirectedEdge["happstack-server", "transformers-compat"], DirectedEdge["happstack-server", "unix"], DirectedEdge["happstack-server", "utf8-string"], DirectedEdge["happstack-server", "xhtml"], DirectedEdge["happstack-server", "zlib"], DirectedEdge["happstack-server-tls", "base"], DirectedEdge["happstack-server-tls", "bytestring"], DirectedEdge["happstack-server-tls", "extensible-exceptions"], DirectedEdge["happstack-server-tls", "happstack-server"], DirectedEdge["happstack-server-tls", "hslogger"], DirectedEdge["happstack-server-tls", "HsOpenSSL"], DirectedEdge["happstack-server-tls", "network"], DirectedEdge["happstack-server-tls", "sendfile"], DirectedEdge["happstack-server-tls", "time"], DirectedEdge["happstack-server-tls", "unix"], DirectedEdge["happstack-server-tls-cryptonite", "base"], DirectedEdge["happstack-server-tls-cryptonite", "bytestring"], DirectedEdge["happstack-server-tls-cryptonite", "cryptonite"], DirectedEdge["happstack-server-tls-cryptonite", "data-default-class"], DirectedEdge["happstack-server-tls-cryptonite", "extensible-exceptions"], DirectedEdge["happstack-server-tls-cryptonite", "happstack-server"], DirectedEdge["happstack-server-tls-cryptonite", "hslogger"], DirectedEdge["happstack-server-tls-cryptonite", "network"], DirectedEdge["happstack-server-tls-cryptonite", "sendfile"], DirectedEdge["happstack-server-tls-cryptonite", "time"], DirectedEdge["happstack-server-tls-cryptonite", "tls"], DirectedEdge["happstack-server-tls-cryptonite", "unix"], DirectedEdge["happstack-state", "acid-state"], DirectedEdge["happstack-state", "base"], DirectedEdge["happstack-state", "bencode"], DirectedEdge["happstack-state", "binary"], DirectedEdge["happstack-state", "bytestring"], DirectedEdge["happstack-state", "containers"], DirectedEdge["happstack-state", "directory"], DirectedEdge["happstack-state", "extensible-exceptions"], DirectedEdge["happstack-state", "filepath"], DirectedEdge["happstack-state", "happstack-data"], DirectedEdge["happstack-state", "happstack-util"], DirectedEdge["happstack-state", "hslogger"], DirectedEdge["happstack-state", "HUnit"], DirectedEdge["happstack-state", "mtl"], DirectedEdge["happstack-state", "network"], DirectedEdge["happstack-state", "old-time"], DirectedEdge["happstack-state", "process"], DirectedEdge["happstack-state", "QuickCheck"], DirectedEdge["happstack-state", "random"], DirectedEdge["happstack-state", "SHA"], DirectedEdge["happstack-state", "stm"], DirectedEdge["happstack-state", "syb"], DirectedEdge["happstack-state", "template-haskell"], DirectedEdge["happstack-state", "unix"], DirectedEdge["happstack-static-routing", "base"], DirectedEdge["happstack-static-routing", "containers"], DirectedEdge["happstack-static-routing", "happstack-server"], DirectedEdge["happstack-static-routing", "list-tries"], DirectedEdge["happstack-static-routing", "transformers"], DirectedEdge["happstack-util", "array"], DirectedEdge["happstack-util", "base"], DirectedEdge["happstack-util", "bytestring"], DirectedEdge["happstack-util", "directory"], DirectedEdge["happstack-util", "extensible-exceptions"], DirectedEdge["happstack-util", "filepath"], DirectedEdge["happstack-util", "hslogger"], DirectedEdge["happstack-util", "HUnit"], DirectedEdge["happstack-util", "mtl"], DirectedEdge["happstack-util", "network"], DirectedEdge["happstack-util", "old-locale"], DirectedEdge["happstack-util", "old-time"], DirectedEdge["happstack-util", "parsec"], DirectedEdge["happstack-util", "process"], DirectedEdge["happstack-util", "QuickCheck"], DirectedEdge["happstack-util", "random"], DirectedEdge["happstack-util", "template-haskell"], DirectedEdge["happstack-util", "time"], DirectedEdge["happstack-util", "unix"], DirectedEdge["happstack-util", "unix-compat"], DirectedEdge["happstack-yui", "base"], DirectedEdge["happstack-yui", "boomerang"], DirectedEdge["happstack-yui", "bytestring"], DirectedEdge["happstack-yui", "containers"], DirectedEdge["happstack-yui", "directory"], DirectedEdge["happstack-yui", "file-embed"], DirectedEdge["happstack-yui", "happstack-jmacro"], DirectedEdge["happstack-yui", "happstack-server"], DirectedEdge["happstack-yui", "hsp"], DirectedEdge["happstack-yui", "jmacro"], DirectedEdge["happstack-yui", "mtl"], DirectedEdge["happstack-yui", "pretty"], DirectedEdge["happstack-yui", "template-haskell"], DirectedEdge["happstack-yui", "text"], DirectedEdge["happstack-yui", "web-routes"], DirectedEdge["happstack-yui", "web-routes-boomerang"], DirectedEdge["happstack-yui", "web-routes-happstack"], DirectedEdge["happstack-yui", "web-routes-th"], DirectedEdge["happy", "array"], DirectedEdge["happy", "base"], DirectedEdge["happy", "containers"], DirectedEdge["happy", "mtl"], DirectedEdge["happy-meta", "array"], DirectedEdge["happy-meta", "base"], DirectedEdge["happy-meta", "containers"], DirectedEdge["happy-meta", "haskell-src-meta"], DirectedEdge["happy-meta", "mtl"], DirectedEdge["happy-meta", "template-haskell"], DirectedEdge["happybara", "aeson"], DirectedEdge["happybara", "base"], DirectedEdge["happybara", "filepath"], DirectedEdge["happybara", "http-types"], DirectedEdge["happybara", "lifted-base"], DirectedEdge["happybara", "monad-control"], DirectedEdge["happybara", "mtl"], DirectedEdge["happybara", "text"], DirectedEdge["happybara", "time"], DirectedEdge["happybara", "transformers"], DirectedEdge["happybara", "transformers-base"], DirectedEdge["happybara-webkit", "aeson"], DirectedEdge["happybara-webkit", "base"], DirectedEdge["happybara-webkit", "bytestring"], DirectedEdge["happybara-webkit", "case-insensitive"], DirectedEdge["happybara-webkit", "data-default"], DirectedEdge["happybara-webkit", "directory"], DirectedEdge["happybara-webkit", "filepath"], DirectedEdge["happybara-webkit", "happybara"], DirectedEdge["happybara-webkit", "http-types"], DirectedEdge["happybara-webkit", "lifted-base"], DirectedEdge["happybara-webkit", "monad-control"], DirectedEdge["happybara-webkit", "mtl"], DirectedEdge["happybara-webkit", "network"], DirectedEdge["happybara-webkit", "process"], DirectedEdge["happybara-webkit", "text"], DirectedEdge["happybara-webkit", "time"], DirectedEdge["happybara-webkit", "transformers"], DirectedEdge["happybara-webkit", "transformers-base"], DirectedEdge["happybara-webkit", "vector"], DirectedEdge["happybara-webkit-server", "base"], DirectedEdge["happybara-webkit-server", "directory"], DirectedEdge["happybara-webkit-server", "filepath"], DirectedEdge["happybara-webkit-server", "process"], DirectedEdge["hapstone", "base"], DirectedEdge["har", "aeson"], DirectedEdge["har", "base"], DirectedEdge["har", "bytestring"], DirectedEdge["har", "directory"], DirectedEdge["har", "filepath"], DirectedEdge["har", "text"], DirectedEdge["harchive", "base"], DirectedEdge["harchive", "binary"], DirectedEdge["harchive", "network"], DirectedEdge["harchive", "parsec"], DirectedEdge["harchive", "unix"], DirectedEdge["harchive", "zlib"], DirectedEdge["hardware-edsl", "array"], DirectedEdge["hardware-edsl", "base"], DirectedEdge["hardware-edsl", "bytestring"], DirectedEdge["hardware-edsl", "constraints"], DirectedEdge["hardware-edsl", "containers"], DirectedEdge["hardware-edsl", "language-vhdl"], DirectedEdge["hardware-edsl", "mtl"], DirectedEdge["hardware-edsl", "operational-alacarte"], DirectedEdge["hardware-edsl", "pretty"], DirectedEdge["hardware-edsl", "syntactic"], DirectedEdge["hark", "base"], DirectedEdge["hark", "bytestring"], DirectedEdge["hark", "directory"], DirectedEdge["hark", "filepath"], DirectedEdge["hark", "mtl"], DirectedEdge["hark", "old-locale"], DirectedEdge["hark", "old-time"], DirectedEdge["hark", "regex-pcre"], DirectedEdge["harmony", "array"], DirectedEdge["harmony", "base"], DirectedEdge["harmony", "BNFC"], DirectedEdge["harmony", "containers"], DirectedEdge["harmony", "derive"], DirectedEdge["harmony", "directory"], DirectedEdge["harmony", "harmony"], DirectedEdge["harmony", "hastache"], DirectedEdge["harmony", "hslogger"], DirectedEdge["harmony", "mtl"], DirectedEdge["harmony", "process"], DirectedEdge["harmony", "QuickCheck"], DirectedEdge["harmony", "text"], DirectedEdge["haroonga", "base"], DirectedEdge["haroonga", "bindings-DSL"], DirectedEdge["haroonga", "monad-control"], DirectedEdge["haroonga", "resourcet"], DirectedEdge["haroonga", "transformers"], DirectedEdge["haroonga-httpd", "base"], DirectedEdge["haroonga-httpd", "directory"], DirectedEdge["haroonga-httpd", "haroonga"], DirectedEdge["haroonga-httpd", "http-types"], DirectedEdge["haroonga-httpd", "old-locale"], DirectedEdge["haroonga-httpd", "optparse-applicative"], DirectedEdge["haroonga-httpd", "scotty"], DirectedEdge["haroonga-httpd", "text"], DirectedEdge["haroonga-httpd", "time"], DirectedEdge["haroonga-httpd", "transformers"], DirectedEdge["haroonga-httpd", "wai-extra"], DirectedEdge["harp", "base"], DirectedEdge["harpy", "array"], DirectedEdge["harpy", "base"], DirectedEdge["harpy", "containers"], DirectedEdge["harpy", "disassembler"], DirectedEdge["harpy", "mtl"], DirectedEdge["harpy", "parsec"], DirectedEdge["harpy", "pretty"], DirectedEdge["harpy", "template-haskell"], DirectedEdge["harvest-api", "aeson"], DirectedEdge["harvest-api", "base"], DirectedEdge["harvest-api", "bytestring"], DirectedEdge["harvest-api", "http-client"], DirectedEdge["harvest-api", "mtl"], DirectedEdge["harvest-api", "servant"], DirectedEdge["harvest-api", "servant-client"], DirectedEdge["harvest-api", "text"], DirectedEdge["harvest-api", "time"], DirectedEdge["harvest-api", "transformers"], DirectedEdge["has", "base"], DirectedEdge["has", "HUnit"], DirectedEdge["has", "QuickCheck"], DirectedEdge["has", "test-framework"], DirectedEdge["has", "test-framework-hunit"], DirectedEdge["has-th", "base"], DirectedEdge["has-th", "has"], DirectedEdge["has-th", "template-haskell"], DirectedEdge["hascal", "base"], DirectedEdge["hascal", "numbers"], DirectedEdge["hascat", "base"], DirectedEdge["hascat", "bytestring"], DirectedEdge["hascat", "hascat-lib"], DirectedEdge["hascat", "hascat-setup"], DirectedEdge["hascat", "hascat-system"], DirectedEdge["hascat", "HaXml"], DirectedEdge["hascat", "haxr"], DirectedEdge["hascat", "html"], DirectedEdge["hascat", "HTTP"], DirectedEdge["hascat", "network"], DirectedEdge["hascat", "unix"], DirectedEdge["hascat-lib", "base"], DirectedEdge["hascat-lib", "bytestring"], DirectedEdge["hascat-lib", "containers"], DirectedEdge["hascat-lib", "directory"], DirectedEdge["hascat-lib", "HaXml"], DirectedEdge["hascat-lib", "html"], DirectedEdge["hascat-lib", "HTTP"], DirectedEdge["hascat-lib", "mtl"], DirectedEdge["hascat-lib", "network"], DirectedEdge["hascat-lib", "old-locale"], DirectedEdge["hascat-lib", "old-time"], DirectedEdge["hascat-lib", "parsec"], DirectedEdge["hascat-lib", "plugins"], DirectedEdge["hascat-lib", "xhtml"], DirectedEdge["hascat-setup", "base"], DirectedEdge["hascat-setup", "directory"], DirectedEdge["hascat-setup", "hascat-lib"], DirectedEdge["hascat-setup", "hascat-system"], DirectedEdge["hascat-setup", "plugins"], DirectedEdge["hascat-system", "base"], DirectedEdge["hascat-system", "bytestring"], DirectedEdge["hascat-system", "containers"], DirectedEdge["hascat-system", "hascat-lib"], DirectedEdge["hascat-system", "HaXml"], DirectedEdge["hascat-system", "HTTP"], DirectedEdge["hascat-system", "mtl"], DirectedEdge["hascat-system", "network"], DirectedEdge["hascat-system", "old-time"], DirectedEdge["hascat-system", "parsec"], DirectedEdge["hascat-system", "plugins"], DirectedEdge["hascat-system", "unix"], DirectedEdge["hash", "base"], DirectedEdge["hash", "bifunctors"], DirectedEdge["hash", "bytestring"], DirectedEdge["hash", "data-default"], DirectedEdge["hash", "generic-deriving"], DirectedEdge["hash", "hashable"], DirectedEdge["hash", "lens"], DirectedEdge["hash", "transformers"], DirectedEdge["hashable", "base"], DirectedEdge["hashable", "bytestring"], DirectedEdge["hashable", "ghc-prim"], DirectedEdge["hashable", "integer-gmp"], DirectedEdge["hashable", "text"], DirectedEdge["hashable-extras", "base"], DirectedEdge["hashable-extras", "bifunctors"], DirectedEdge["hashable-extras", "bytestring"], DirectedEdge["hashable-extras", "hashable"], DirectedEdge["hashable-extras", "transformers"], DirectedEdge["hashable-extras", "transformers-compat"], DirectedEdge["hashable-generics", "base"], DirectedEdge["hashable-generics", "ghc-prim"], DirectedEdge["hashable-generics", "hashable"], DirectedEdge["hashable-time", "base"], DirectedEdge["hashable-time", "hashable"], DirectedEdge["hashable-time", "old-locale"], DirectedEdge["hashable-time", "time"], DirectedEdge["hashabler", "array"], DirectedEdge["hashabler", "base"], DirectedEdge["hashabler", "bytestring"], DirectedEdge["hashabler", "ghc-prim"], DirectedEdge["hashabler", "integer-gmp"], DirectedEdge["hashabler", "primitive"], DirectedEdge["hashabler", "template-haskell"], DirectedEdge["hashabler", "text"], DirectedEdge["hashabler", "transformers"], DirectedEdge["hashed-storage", "base"], DirectedEdge["hashed-storage", "binary"], DirectedEdge["hashed-storage", "bytestring"], DirectedEdge["hashed-storage", "containers"], DirectedEdge["hashed-storage", "dataenc"], DirectedEdge["hashed-storage", "directory"], DirectedEdge["hashed-storage", "extensible-exceptions"], DirectedEdge["hashed-storage", "filepath"], DirectedEdge["hashed-storage", "HUnit"], DirectedEdge["hashed-storage", "lcs"], DirectedEdge["hashed-storage", "mmap"], DirectedEdge["hashed-storage", "mtl"], DirectedEdge["hashed-storage", "process"], DirectedEdge["hashed-storage", "QuickCheck"], DirectedEdge["hashed-storage", "test-framework"], DirectedEdge["hashed-storage", "test-framework-hunit"], DirectedEdge["hashed-storage", "zip-archive"], DirectedEdge["hashed-storage", "zlib"], DirectedEdge["hashids", "base"], DirectedEdge["hashids", "bytestring"], DirectedEdge["hashids", "containers"], DirectedEdge["hashids", "split"], DirectedEdge["hashmap", "unordered-containers"], DirectedEdge["hashmap", "base"], DirectedEdge["hashmap", "containers"], DirectedEdge["hashmap", "deepseq"], DirectedEdge["hashmap", "hashable"], DirectedEdge["hashring", "base"], DirectedEdge["hashring", "containers"], DirectedEdge["hashring", "hashable"], DirectedEdge["hashtables", "base"], DirectedEdge["hashtables", "ghc-prim"], DirectedEdge["hashtables", "hashable"], DirectedEdge["hashtables", "primitive"], DirectedEdge["hashtables", "vector"], DirectedEdge["hashtables-plus", "base"], DirectedEdge["hashtables-plus", "hashable"], DirectedEdge["hashtables-plus", "hashtables"], DirectedEdge["hashtables-plus", "loch-th"], DirectedEdge["hashtables-plus", "placeholders"], DirectedEdge["hasim", "base"], DirectedEdge["hasim", "containers"], DirectedEdge["hasim", "mtl"], DirectedEdge["hask", "base"], DirectedEdge["hask", "constraints"], DirectedEdge["hask", "ghc-prim"], DirectedEdge["hask", "reflection"], DirectedEdge["hask", "tagged"], DirectedEdge["hask", "transformers"], DirectedEdge["hask", "void"], DirectedEdge["hask-home", "base"], DirectedEdge["hask-home", "Cabal"], DirectedEdge["hask-home", "directory"], DirectedEdge["hask-home", "hmarkup"], DirectedEdge["hask-home", "hsemail"], DirectedEdge["hask-home", "network"], DirectedEdge["hask-home", "parsec"], DirectedEdge["hask-home", "process"], DirectedEdge["hask-home", "regex-compat"], DirectedEdge["hask-home", "xhtml"], DirectedEdge["haskades", "base"], DirectedEdge["haskades", "bytestring"], DirectedEdge["haskades", "containers"], DirectedEdge["haskades", "errors"], DirectedEdge["haskades", "haskell-src"], DirectedEdge["haskades", "text"], DirectedEdge["haskades", "text-format"], DirectedEdge["haskakafka", "base"], DirectedEdge["haskakafka", "bytestring"], DirectedEdge["haskakafka", "containers"], DirectedEdge["haskakafka", "temporary"], DirectedEdge["haskakafka", "unix"], DirectedEdge["haskanoid", "base"], DirectedEdge["haskanoid", "freenect"], DirectedEdge["haskanoid", "hcwiid"], DirectedEdge["haskanoid", "IfElse"], DirectedEdge["haskanoid", "MissingH"], DirectedEdge["haskanoid", "mtl"], DirectedEdge["haskanoid", "SDL"], DirectedEdge["haskanoid", "SDL-image"], DirectedEdge["haskanoid", "SDL-mixer"], DirectedEdge["haskanoid", "SDL-ttf"], DirectedEdge["haskanoid", "transformers"], DirectedEdge["haskanoid", "vector"], DirectedEdge["haskanoid", "Yampa"], DirectedEdge["haskarrow", "base"], DirectedEdge["haskarrow", "cmdargs"], DirectedEdge["haskarrow", "containers"], DirectedEdge["haskarrow", "cpphs"], DirectedEdge["haskarrow", "directory"], DirectedEdge["haskarrow", "her-lexer"], DirectedEdge["haskarrow", "split"], DirectedEdge["haskbot-core", "aeson"], DirectedEdge["haskbot-core", "base"], DirectedEdge["haskbot-core", "bytestring"], DirectedEdge["haskbot-core", "connection"], DirectedEdge["haskbot-core", "containers"], DirectedEdge["haskbot-core", "http-conduit"], DirectedEdge["haskbot-core", "http-types"], DirectedEdge["haskbot-core", "monads-tf"], DirectedEdge["haskbot-core", "stm"], DirectedEdge["haskbot-core", "text"], DirectedEdge["haskbot-core", "wai"], DirectedEdge["haskbot-core", "warp"], DirectedEdge["haskdeep", "attoparsec"], DirectedEdge["haskdeep", "base"], DirectedEdge["haskdeep", "base16-bytestring"], DirectedEdge["haskdeep", "bytestring"], DirectedEdge["haskdeep", "cereal"], DirectedEdge["haskdeep", "conduit"], DirectedEdge["haskdeep", "conduit-combinators"], DirectedEdge["haskdeep", "conduit-extra"], DirectedEdge["haskdeep", "containers"], DirectedEdge["haskdeep", "crypto-api"], DirectedEdge["haskdeep", "crypto-conduit"], DirectedEdge["haskdeep", "cryptohash"], DirectedEdge["haskdeep", "cryptohash-cryptoapi"], DirectedEdge["haskdeep", "directory"], DirectedEdge["haskdeep", "filepath"], DirectedEdge["haskdeep", "optparse-applicative"], DirectedEdge["haskdeep", "regex-tdfa"], DirectedEdge["haskdeep", "regex-tdfa-text"], DirectedEdge["haskdeep", "resourcet"], DirectedEdge["haskdeep", "text"], DirectedEdge["haskdeep", "time"], DirectedEdge["haskdeep", "transformers"], DirectedEdge["haskdeep", "unix-compat"], DirectedEdge["haskdogs", "base"], DirectedEdge["haskdogs", "bytestring"], DirectedEdge["haskdogs", "containers"], DirectedEdge["haskdogs", "directory"], DirectedEdge["haskdogs", "filepath"], DirectedEdge["haskdogs", "optparse-applicative"], DirectedEdge["haskdogs", "process"], DirectedEdge["haskdogs", "text"], DirectedEdge["haskeem", "base"], DirectedEdge["haskeem", "containers"], DirectedEdge["haskeem", "directory"], DirectedEdge["haskeem", "haskeline"], DirectedEdge["haskeem", "mtl"], DirectedEdge["haskeem", "network"], DirectedEdge["haskeem", "old-time"], DirectedEdge["haskeem", "parsec"], DirectedEdge["haskeem", "process"], DirectedEdge["haskeem", "random"], DirectedEdge["haskeem", "unix"], DirectedEdge["haskeline", "base"], DirectedEdge["haskeline", "bytestring"], DirectedEdge["haskeline", "containers"], DirectedEdge["haskeline", "directory"], DirectedEdge["haskeline", "filepath"], DirectedEdge["haskeline", "terminfo"], DirectedEdge["haskeline", "transformers"], DirectedEdge["haskeline", "unix"], DirectedEdge["haskeline", "utf8-string"], DirectedEdge["haskeline-class", "base"], DirectedEdge["haskeline-class", "haskeline"], DirectedEdge["haskeline-class", "mtl"], DirectedEdge["haskell-aliyun", "aeson"], DirectedEdge["haskell-aliyun", "base"], DirectedEdge["haskell-aliyun", "base64-bytestring"], DirectedEdge["haskell-aliyun", "basic-prelude"], DirectedEdge["haskell-aliyun", "blaze-builder"], DirectedEdge["haskell-aliyun", "bytestring"], DirectedEdge["haskell-aliyun", "case-insensitive"], DirectedEdge["haskell-aliyun", "conduit"], DirectedEdge["haskell-aliyun", "Crypto"], DirectedEdge["haskell-aliyun", "data-default"], DirectedEdge["haskell-aliyun", "http-conduit"], DirectedEdge["haskell-aliyun", "http-types"], DirectedEdge["haskell-aliyun", "lifted-base"], DirectedEdge["haskell-aliyun", "monad-control"], DirectedEdge["haskell-aliyun", "old-locale"], DirectedEdge["haskell-aliyun", "resourcet"], DirectedEdge["haskell-aliyun", "safe"], DirectedEdge["haskell-aliyun", "system-filepath"], DirectedEdge["haskell-aliyun", "text"], DirectedEdge["haskell-aliyun", "time"], DirectedEdge["haskell-aliyun", "transformers"], DirectedEdge["haskell-aliyun", "transformers-base"], DirectedEdge["haskell-aliyun", "vector"], DirectedEdge["haskell-aliyun", "xml2json"], DirectedEdge["haskell-awk", "base"], DirectedEdge["haskell-awk", "bytestring"], DirectedEdge["haskell-awk", "containers"], DirectedEdge["haskell-awk", "directory"], DirectedEdge["haskell-awk", "easy-file"], DirectedEdge["haskell-awk", "exceptions"], DirectedEdge["haskell-awk", "filepath"], DirectedEdge["haskell-awk", "haskell-awk"], DirectedEdge["haskell-awk", "haskell-src-exts"], DirectedEdge["haskell-awk", "hint"], DirectedEdge["haskell-awk", "mtl"], DirectedEdge["haskell-awk", "network"], DirectedEdge["haskell-awk", "process"], DirectedEdge["haskell-awk", "stringsearch"], DirectedEdge["haskell-awk", "time"], DirectedEdge["haskell-awk", "transformers"], DirectedEdge["haskell-bcrypt", "base"], DirectedEdge["haskell-bcrypt", "bytestring"], DirectedEdge["haskell-brainfuck", "base"], DirectedEdge["haskell-brainfuck", "bytestring"], DirectedEdge["haskell-brainfuck", "haskell-brainfuck"], DirectedEdge["haskell-brainfuck", "mtl"], DirectedEdge["haskell-brainfuck", "parsec"], DirectedEdge["haskell-cnc", "array"], DirectedEdge["haskell-cnc", "base"], DirectedEdge["haskell-cnc", "bytestring"], DirectedEdge["haskell-cnc", "containers"], DirectedEdge["haskell-cnc", "directory"], DirectedEdge["haskell-cnc", "extensible-exceptions"], DirectedEdge["haskell-cnc", "ghc-prim"], DirectedEdge["haskell-cnc", "HSH"], DirectedEdge["haskell-cnc", "HUnit"], DirectedEdge["haskell-cnc", "MissingH"], DirectedEdge["haskell-cnc", "mtl"], DirectedEdge["haskell-cnc", "process"], DirectedEdge["haskell-cnc", "random"], DirectedEdge["haskell-cnc", "time"], DirectedEdge["haskell-cnc", "unix"], DirectedEdge["haskell-coffee", "base"], DirectedEdge["haskell-coffee", "process"], DirectedEdge["haskell-compression", "base"], DirectedEdge["haskell-compression", "bimap"], DirectedEdge["haskell-compression", "boolean-list"], DirectedEdge["haskell-compression", "bytestring"], DirectedEdge["haskell-compression", "containers"], DirectedEdge["haskell-course-preludes", "base"], DirectedEdge["haskell-course-preludes", "deepseq"], DirectedEdge["haskell-docs", "aeson"], DirectedEdge["haskell-docs", "base"], DirectedEdge["haskell-docs", "base16-bytestring"], DirectedEdge["haskell-docs", "bytestring"], DirectedEdge["haskell-docs", "Cabal"], DirectedEdge["haskell-docs", "containers"], DirectedEdge["haskell-docs", "cryptohash"], DirectedEdge["haskell-docs", "directory"], DirectedEdge["haskell-docs", "filepath"], DirectedEdge["haskell-docs", "ghc"], DirectedEdge["haskell-docs", "ghc-paths"], DirectedEdge["haskell-docs", "haddock"], DirectedEdge["haskell-docs", "haddock-api"], DirectedEdge["haskell-docs", "haddock-library"], DirectedEdge["haskell-docs", "haskell-docs"], DirectedEdge["haskell-docs", "monad-loops"], DirectedEdge["haskell-docs", "process"], DirectedEdge["haskell-docs", "text"], DirectedEdge["haskell-docs", "unordered-containers"], DirectedEdge["haskell-exp-parser", "base"], DirectedEdge["haskell-exp-parser", "template-haskell"], DirectedEdge["haskell-formatter", "base"], DirectedEdge["haskell-formatter", "containers"], DirectedEdge["haskell-formatter", "directory"], DirectedEdge["haskell-formatter", "filepath"], DirectedEdge["haskell-formatter", "haskell-formatter"], DirectedEdge["haskell-formatter", "haskell-src-exts"], DirectedEdge["haskell-formatter", "optparse-applicative"], DirectedEdge["haskell-formatter", "scientific"], DirectedEdge["haskell-formatter", "text"], DirectedEdge["haskell-formatter", "unordered-containers"], DirectedEdge["haskell-formatter", "yaml"], DirectedEdge["haskell-ftp", "base"], DirectedEdge["haskell-ftp", "basic-prelude"], DirectedEdge["haskell-ftp", "bytestring"], DirectedEdge["haskell-ftp", "case-insensitive"], DirectedEdge["haskell-ftp", "conduit"], DirectedEdge["haskell-ftp", "directory"], DirectedEdge["haskell-ftp", "lifted-base"], DirectedEdge["haskell-ftp", "monad-control"], DirectedEdge["haskell-ftp", "network"], DirectedEdge["haskell-ftp", "network-conduit"], DirectedEdge["haskell-ftp", "process-conduit"], DirectedEdge["haskell-ftp", "system-filepath"], DirectedEdge["haskell-ftp", "text"], DirectedEdge["haskell-ftp", "transformers"], DirectedEdge["haskell-ftp", "transformers-base"], DirectedEdge["haskell-ftp", "unix"], DirectedEdge["haskell-generate", "base"], DirectedEdge["haskell-generate", "containers"], DirectedEdge["haskell-generate", "haskell-src-exts"], DirectedEdge["haskell-generate", "template-haskell"], DirectedEdge["haskell-generate", "transformers"], DirectedEdge["haskell-gi", "base"], DirectedEdge["haskell-gi", "bytestring"], DirectedEdge["haskell-gi", "Cabal"], DirectedEdge["haskell-gi", "containers"], DirectedEdge["haskell-gi", "directory"], DirectedEdge["haskell-gi", "file-embed"], DirectedEdge["haskell-gi", "filepath"], DirectedEdge["haskell-gi", "haskell-gi"], DirectedEdge["haskell-gi", "haskell-gi-base"], DirectedEdge["haskell-gi", "mtl"], DirectedEdge["haskell-gi", "pretty-show"], DirectedEdge["haskell-gi", "process"], DirectedEdge["haskell-gi", "safe"], DirectedEdge["haskell-gi", "text"], DirectedEdge["haskell-gi", "transformers"], DirectedEdge["haskell-gi", "xdg-basedir"], DirectedEdge["haskell-gi", "xml-conduit"], DirectedEdge["haskell-gi-base", "base"], DirectedEdge["haskell-gi-base", "bytestring"], DirectedEdge["haskell-gi-base", "containers"], DirectedEdge["haskell-gi-base", "text"], DirectedEdge["haskell-gi-base", "transformers"], DirectedEdge["haskell-import-graph", "base"], DirectedEdge["haskell-import-graph", "classy-prelude"], DirectedEdge["haskell-import-graph", "ghc"], DirectedEdge["haskell-import-graph", "graphviz"], DirectedEdge["haskell-import-graph", "haskell-import-graph"], DirectedEdge["haskell-import-graph", "process"], DirectedEdge["haskell-import-graph", "text"], DirectedEdge["haskell-import-graph", "transformers"], DirectedEdge["haskell-in-space", "base"], DirectedEdge["haskell-in-space", "HGL"], DirectedEdge["haskell-in-space", "random"], DirectedEdge["haskell-kubernetes", "aeson"], DirectedEdge["haskell-kubernetes", "base"], DirectedEdge["haskell-kubernetes", "bytestring"], DirectedEdge["haskell-kubernetes", "containers"], DirectedEdge["haskell-kubernetes", "either"], DirectedEdge["haskell-kubernetes", "haskell-kubernetes"], DirectedEdge["haskell-kubernetes", "http-api-data"], DirectedEdge["haskell-kubernetes", "http-types"], DirectedEdge["haskell-kubernetes", "lens"], DirectedEdge["haskell-kubernetes", "network-uri"], DirectedEdge["haskell-kubernetes", "QuickCheck"], DirectedEdge["haskell-kubernetes", "quickcheck-instances"], DirectedEdge["haskell-kubernetes", "scientific"], DirectedEdge["haskell-kubernetes", "servant"], DirectedEdge["haskell-kubernetes", "servant-client"], DirectedEdge["haskell-kubernetes", "servant-server"], DirectedEdge["haskell-kubernetes", "split"], DirectedEdge["haskell-kubernetes", "text"], DirectedEdge["haskell-kubernetes", "transformers"], DirectedEdge["haskell-kubernetes", "unordered-containers"], DirectedEdge["haskell-kubernetes", "vector"], DirectedEdge["haskell-kubernetes", "wai"], DirectedEdge["haskell-lexer", "base"], DirectedEdge["haskell-modbus", "array"], DirectedEdge["haskell-modbus", "base"], DirectedEdge["haskell-modbus", "bytestring"], DirectedEdge["haskell-modbus", "cereal"], DirectedEdge["haskell-mpfr", "base"], DirectedEdge["haskell-mpfr", "ghc-prim"], DirectedEdge["haskell-mpfr", "integer-gmp"], DirectedEdge["haskell-mpi", "array"], DirectedEdge["haskell-mpi", "base"], DirectedEdge["haskell-mpi", "bytestring"], DirectedEdge["haskell-mpi", "cereal"], DirectedEdge["haskell-mpi", "extensible-exceptions"], DirectedEdge["haskell-mpi", "hpc"], DirectedEdge["haskell-mpi", "HUnit"], DirectedEdge["haskell-mpi", "process"], DirectedEdge["haskell-mpi", "testrunner"], DirectedEdge["haskell-mpi", "unix"], DirectedEdge["haskell-names", "aeson"], DirectedEdge["haskell-names", "base"], DirectedEdge["haskell-names", "bytestring"], DirectedEdge["haskell-names", "containers"], DirectedEdge["haskell-names", "data-lens-light"], DirectedEdge["haskell-names", "filepath"], DirectedEdge["haskell-names", "haskell-src-exts"], DirectedEdge["haskell-names", "mtl"], DirectedEdge["haskell-names", "transformers"], DirectedEdge["haskell-names", "traverse-with-class"], DirectedEdge["haskell-names", "uniplate"], DirectedEdge["haskell-neo4j-client", "aeson"], DirectedEdge["haskell-neo4j-client", "base"], DirectedEdge["haskell-neo4j-client", "bytestring"], DirectedEdge["haskell-neo4j-client", "containers"], DirectedEdge["haskell-neo4j-client", "data-default"], DirectedEdge["haskell-neo4j-client", "hashable"], DirectedEdge["haskell-neo4j-client", "HTTP"], DirectedEdge["haskell-neo4j-client", "http-client"], DirectedEdge["haskell-neo4j-client", "http-client-tls"], DirectedEdge["haskell-neo4j-client", "http-conduit"], DirectedEdge["haskell-neo4j-client", "http-types"], DirectedEdge["haskell-neo4j-client", "lifted-base"], DirectedEdge["haskell-neo4j-client", "mtl"], DirectedEdge["haskell-neo4j-client", "network-uri"], DirectedEdge["haskell-neo4j-client", "resourcet"], DirectedEdge["haskell-neo4j-client", "scientific"], DirectedEdge["haskell-neo4j-client", "text"], DirectedEdge["haskell-neo4j-client", "transformers"], DirectedEdge["haskell-neo4j-client", "transformers-base"], DirectedEdge["haskell-neo4j-client", "transformers-compat"], DirectedEdge["haskell-neo4j-client", "unordered-containers"], DirectedEdge["haskell-neo4j-client", "vector"], DirectedEdge["haskell-openflow", "base"], DirectedEdge["haskell-openflow", "bytestring"], DirectedEdge["haskell-openflow", "cereal"], DirectedEdge["haskell-openflow", "network"], DirectedEdge["haskell-openflow", "network-info"], DirectedEdge["haskell-packages", "aeson"], DirectedEdge["haskell-packages", "base"], DirectedEdge["haskell-packages", "bytestring"], DirectedEdge["haskell-packages", "Cabal"], DirectedEdge["haskell-packages", "containers"], DirectedEdge["haskell-packages", "deepseq"], DirectedEdge["haskell-packages", "directory"], DirectedEdge["haskell-packages", "filepath"], DirectedEdge["haskell-packages", "haskell-src-exts"], DirectedEdge["haskell-packages", "hse-cpp"], DirectedEdge["haskell-packages", "mtl"], DirectedEdge["haskell-packages", "optparse-applicative"], DirectedEdge["haskell-packages", "tagged"], DirectedEdge["haskell-packages", "transformers"], DirectedEdge["haskell-packages", "transformers-compat"], DirectedEdge["haskell-pdf-presenter", "base"], DirectedEdge["haskell-pdf-presenter", "bytestring"], DirectedEdge["haskell-pdf-presenter", "cairo"], DirectedEdge["haskell-pdf-presenter", "containers"], DirectedEdge["haskell-pdf-presenter", "directory"], DirectedEdge["haskell-pdf-presenter", "filepath"], DirectedEdge["haskell-pdf-presenter", "glib"], DirectedEdge["haskell-pdf-presenter", "gtk"], DirectedEdge["haskell-pdf-presenter", "old-locale"], DirectedEdge["haskell-pdf-presenter", "poppler"], DirectedEdge["haskell-pdf-presenter", "template-haskell"], DirectedEdge["haskell-pdf-presenter", "time"], DirectedEdge["haskell-pdf-presenter", "zlib"], DirectedEdge["haskell-platform-test", "array"], DirectedEdge["haskell-platform-test", "base"], DirectedEdge["haskell-platform-test", "bytestring"], DirectedEdge["haskell-platform-test", "Cabal"], DirectedEdge["haskell-platform-test", "cgi"], DirectedEdge["haskell-platform-test", "containers"], DirectedEdge["haskell-platform-test", "deepseq"], DirectedEdge["haskell-platform-test", "directory"], DirectedEdge["haskell-platform-test", "extensible-exceptions"], DirectedEdge["haskell-platform-test", "fgl"], DirectedEdge["haskell-platform-test", "filepath"], DirectedEdge["haskell-platform-test", "ghc"], DirectedEdge["haskell-platform-test", "ghc-prim"], DirectedEdge["haskell-platform-test", "GLUT"], DirectedEdge["haskell-platform-test", "haskell-src"], DirectedEdge["haskell-platform-test", "hpc"], DirectedEdge["haskell-platform-test", "html"], DirectedEdge["haskell-platform-test", "HTTP"], DirectedEdge["haskell-platform-test", "HUnit"], DirectedEdge["haskell-platform-test", "mtl"], DirectedEdge["haskell-platform-test", "network"], DirectedEdge["haskell-platform-test", "old-locale"], DirectedEdge["haskell-platform-test", "old-time"], DirectedEdge["haskell-platform-test", "OpenGL"], DirectedEdge["haskell-platform-test", "parallel"], DirectedEdge["haskell-platform-test", "parsec"], DirectedEdge["haskell-platform-test", "pretty"], DirectedEdge["haskell-platform-test", "process"], DirectedEdge["haskell-platform-test", "QuickCheck"], DirectedEdge["haskell-platform-test", "random"], DirectedEdge["haskell-platform-test", "regex-base"], DirectedEdge["haskell-platform-test", "regex-compat"], DirectedEdge["haskell-platform-test", "regex-posix"], DirectedEdge["haskell-platform-test", "stm"], DirectedEdge["haskell-platform-test", "syb"], DirectedEdge["haskell-platform-test", "template-haskell"], DirectedEdge["haskell-platform-test", "time"], DirectedEdge["haskell-platform-test", "unix"], DirectedEdge["haskell-platform-test", "xhtml"], DirectedEdge["haskell-platform-test", "zlib"], DirectedEdge["haskell-player", "base"], DirectedEdge["haskell-player", "brick"], DirectedEdge["haskell-player", "bytestring"], DirectedEdge["haskell-player", "data-default"], DirectedEdge["haskell-player", "directory"], DirectedEdge["haskell-player", "filepath"], DirectedEdge["haskell-player", "haskell-player"], DirectedEdge["haskell-player", "microlens"], DirectedEdge["haskell-player", "process"], DirectedEdge["haskell-player", "text"], DirectedEdge["haskell-player", "transformers"], DirectedEdge["haskell-player", "vector"], DirectedEdge["haskell-player", "vty"], DirectedEdge["haskell-player", "xml-conduit"], DirectedEdge["haskell-plot", "base"], DirectedEdge["haskell-plot", "Chart"], DirectedEdge["haskell-plot", "Chart-cairo"], DirectedEdge["haskell-plot", "Chart-gtk"], DirectedEdge["haskell-plot", "colour"], DirectedEdge["haskell-plot", "data-default"], DirectedEdge["haskell-plot", "lens"], DirectedEdge["haskell-plot", "math-functions"], DirectedEdge["haskell-plot", "vector"], DirectedEdge["haskell-qrencode", "base"], DirectedEdge["haskell-qrencode", "bytestring"], DirectedEdge["haskell-read-editor", "read-editor"], DirectedEdge["haskell-read-editor", "base"], DirectedEdge["haskell-read-editor", "directory"], DirectedEdge["haskell-read-editor", "process"], DirectedEdge["haskell-reflect", "base"], DirectedEdge["haskell-reflect", "containers"], DirectedEdge["haskell-reflect", "hint"], DirectedEdge["haskell-reflect", "MonadCatchIO-mtl"], DirectedEdge["haskell-reflect", "mtl"], DirectedEdge["haskell-reflect", "parsec"], DirectedEdge["haskell-reflect", "template-haskell"], DirectedEdge["haskell-reflect", "transformers"], DirectedEdge["haskell-rules", "base"], DirectedEdge["haskell-rules", "syb"], DirectedEdge["haskell-spacegoo", "aeson"], DirectedEdge["haskell-spacegoo", "base"], DirectedEdge["haskell-spacegoo", "bytestring"], DirectedEdge["haskell-spacegoo", "conduit"], DirectedEdge["haskell-spacegoo", "conduit-extra"], DirectedEdge["haskell-spacegoo", "mtl"], DirectedEdge["haskell-spacegoo", "pretty"], DirectedEdge["haskell-spacegoo", "pretty-show"], DirectedEdge["haskell-spacegoo", "text"], DirectedEdge["haskell-spacegoo", "vector"], DirectedEdge["haskell-spacegoo", "vector-space"], DirectedEdge["haskell-src", "array"], DirectedEdge["haskell-src", "base"], DirectedEdge["haskell-src", "pretty"], DirectedEdge["haskell-src", "syb"], DirectedEdge["haskell-src-exts", "array"], DirectedEdge["haskell-src-exts", "base"], DirectedEdge["haskell-src-exts", "cpphs"], DirectedEdge["haskell-src-exts", "ghc-prim"], DirectedEdge["haskell-src-exts", "pretty"], DirectedEdge["haskell-src-exts-qq", "base"], DirectedEdge["haskell-src-exts-qq", "haskell-src-exts"], DirectedEdge["haskell-src-exts-qq", "haskell-src-meta"], DirectedEdge["haskell-src-exts-qq", "syb"], DirectedEdge["haskell-src-exts-qq", "template-haskell"], DirectedEdge["haskell-src-meta", "base"], DirectedEdge["haskell-src-meta", "haskell-src-exts"], DirectedEdge["haskell-src-meta", "pretty"], DirectedEdge["haskell-src-meta", "syb"], DirectedEdge["haskell-src-meta", "template-haskell"], DirectedEdge["haskell-src-meta", "th-orphans"], DirectedEdge["haskell-src-meta-mwotton", "haskell-src-meta"], DirectedEdge["haskell-src-meta-mwotton", "base"], DirectedEdge["haskell-src-meta-mwotton", "containers"], DirectedEdge["haskell-src-meta-mwotton", "ghc-prim"], DirectedEdge["haskell-src-meta-mwotton", "haskell-src-exts"], DirectedEdge["haskell-src-meta-mwotton", "pretty"], DirectedEdge["haskell-src-meta-mwotton", "syb"], DirectedEdge["haskell-src-meta-mwotton", "template-haskell"], DirectedEdge["haskell-token-utils", "base"], DirectedEdge["haskell-token-utils", "containers"], DirectedEdge["haskell-token-utils", "dual-tree"], DirectedEdge["haskell-token-utils", "ghc"], DirectedEdge["haskell-token-utils", "ghc-paths"], DirectedEdge["haskell-token-utils", "ghc-syb-utils"], DirectedEdge["haskell-token-utils", "haskell-src-exts"], DirectedEdge["haskell-token-utils", "monoid-extras"], DirectedEdge["haskell-token-utils", "mtl"], DirectedEdge["haskell-token-utils", "pretty"], DirectedEdge["haskell-token-utils", "rosezipper"], DirectedEdge["haskell-token-utils", "semigroups"], DirectedEdge["haskell-token-utils", "syb"], DirectedEdge["haskell-tor", "array"], DirectedEdge["haskell-tor", "asn1-encoding"], DirectedEdge["haskell-tor", "asn1-types"], DirectedEdge["haskell-tor", "async"], DirectedEdge["haskell-tor", "attoparsec"], DirectedEdge["haskell-tor", "base"], DirectedEdge["haskell-tor", "base64-bytestring"], DirectedEdge["haskell-tor", "binary"], DirectedEdge["haskell-tor", "bytestring"], DirectedEdge["haskell-tor", "cereal"], DirectedEdge["haskell-tor", "containers"], DirectedEdge["haskell-tor", "cryptonite"], DirectedEdge["haskell-tor", "fingertree"], DirectedEdge["haskell-tor", "HALVMCore"], DirectedEdge["haskell-tor", "hans"], DirectedEdge["haskell-tor", "haskell-tor"], DirectedEdge["haskell-tor", "hourglass"], DirectedEdge["haskell-tor", "memory"], DirectedEdge["haskell-tor", "monadLib"], DirectedEdge["haskell-tor", "network"], DirectedEdge["haskell-tor", "pretty-hex"], DirectedEdge["haskell-tor", "pure-zlib"], DirectedEdge["haskell-tor", "time"], DirectedEdge["haskell-tor", "tls"], DirectedEdge["haskell-tor", "x509-store"], DirectedEdge["haskell-tor", "XenDevice"], DirectedEdge["haskell-type-exts", "base"], DirectedEdge["haskell-type-exts", "containers"], DirectedEdge["haskell-type-exts", "haskell-src-exts"], DirectedEdge["haskell-type-exts", "pretty"], DirectedEdge["haskell-typescript", "base"], DirectedEdge["haskell-typescript", "process"], DirectedEdge["haskell-tyrant", "base"], DirectedEdge["haskell-tyrant", "binary"], DirectedEdge["haskell-tyrant", "bytestring"], DirectedEdge["haskell-tyrant", "network"], DirectedEdge["haskell-updater", "base"], DirectedEdge["haskell-updater", "bytestring"], DirectedEdge["haskell-updater", "Cabal"], DirectedEdge["haskell-updater", "containers"], DirectedEdge["haskell-updater", "directory"], DirectedEdge["haskell-updater", "filepath"], DirectedEdge["haskell-updater", "process"], DirectedEdge["haskell-xmpp", "array"], DirectedEdge["haskell-xmpp", "base"], DirectedEdge["haskell-xmpp", "HaXml"], DirectedEdge["haskell-xmpp", "html"], DirectedEdge["haskell-xmpp", "mtl"], DirectedEdge["haskell-xmpp", "network"], DirectedEdge["haskell-xmpp", "polyparse"], DirectedEdge["haskell-xmpp", "pretty"], DirectedEdge["haskell-xmpp", "random"], DirectedEdge["haskell-xmpp", "regex-compat"], DirectedEdge["haskell-xmpp", "stm"], DirectedEdge["haskell-xmpp", "utf8-string"], DirectedEdge["haskell2010", "array"], DirectedEdge["haskell2010", "base"], DirectedEdge["haskell2010", "ghc-prim"], DirectedEdge["haskell98", "array"], DirectedEdge["haskell98", "base"], DirectedEdge["haskell98", "directory"], DirectedEdge["haskell98", "old-locale"], DirectedEdge["haskell98", "old-time"], DirectedEdge["haskell98", "process"], DirectedEdge["haskell98", "time"], DirectedEdge["haskell98libraries", "array"], DirectedEdge["haskell98libraries", "base"], DirectedEdge["haskell98libraries", "directory"], DirectedEdge["haskell98libraries", "old-locale"], DirectedEdge["haskell98libraries", "old-time"], DirectedEdge["haskell98libraries", "process"], DirectedEdge["haskell98libraries", "time"], DirectedEdge["haskelldb", "base"], DirectedEdge["haskelldb", "containers"], DirectedEdge["haskelldb", "directory"], DirectedEdge["haskelldb", "mtl"], DirectedEdge["haskelldb", "old-locale"], DirectedEdge["haskelldb", "old-time"], DirectedEdge["haskelldb", "pretty"], DirectedEdge["haskelldb", "time"], DirectedEdge["haskelldb-connect-hdbc", "base"], DirectedEdge["haskelldb-connect-hdbc", "containers"], DirectedEdge["haskelldb-connect-hdbc", "haskelldb"], DirectedEdge["haskelldb-connect-hdbc", "HDBC"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "base"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "haskelldb"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "haskelldb-connect-hdbc"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "HDBC"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "MonadCatchIO-mtl"], DirectedEdge["haskelldb-connect-hdbc-catchio-mtl", "mtl"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "base"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "haskelldb"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "haskelldb-connect-hdbc"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "HDBC"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "MonadCatchIO-transformers"], DirectedEdge["haskelldb-connect-hdbc-catchio-tf", "transformers"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "base"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "haskelldb"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "haskelldb-connect-hdbc"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "HDBC"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "MonadCatchIO-transformers"], DirectedEdge["haskelldb-connect-hdbc-catchio-transformers", "transformers"], DirectedEdge["haskelldb-connect-hdbc-lifted", "base"], DirectedEdge["haskelldb-connect-hdbc-lifted", "haskelldb"], DirectedEdge["haskelldb-connect-hdbc-lifted", "haskelldb-connect-hdbc"], DirectedEdge["haskelldb-connect-hdbc-lifted", "HDBC"], DirectedEdge["haskelldb-connect-hdbc-lifted", "lifted-base"], DirectedEdge["haskelldb-connect-hdbc-lifted", "monad-control"], DirectedEdge["haskelldb-connect-hdbc-lifted", "transformers-base"], DirectedEdge["haskelldb-dynamic", "base"], DirectedEdge["haskelldb-dynamic", "haskelldb"], DirectedEdge["haskelldb-dynamic", "mtl"], DirectedEdge["haskelldb-dynamic", "plugins"], DirectedEdge["haskelldb-flat", "base"], DirectedEdge["haskelldb-flat", "containers"], DirectedEdge["haskelldb-flat", "directory"], DirectedEdge["haskelldb-flat", "haskelldb"], DirectedEdge["haskelldb-flat", "mtl"], DirectedEdge["haskelldb-flat", "old-time"], DirectedEdge["haskelldb-hdbc", "base"], DirectedEdge["haskelldb-hdbc", "containers"], DirectedEdge["haskelldb-hdbc", "convertible"], DirectedEdge["haskelldb-hdbc", "haskelldb"], DirectedEdge["haskelldb-hdbc", "HDBC"], DirectedEdge["haskelldb-hdbc", "mtl"], DirectedEdge["haskelldb-hdbc", "old-time"], DirectedEdge["haskelldb-hdbc-mysql", "base"], DirectedEdge["haskelldb-hdbc-mysql", "haskelldb"], DirectedEdge["haskelldb-hdbc-mysql", "haskelldb-hdbc"], DirectedEdge["haskelldb-hdbc-mysql", "HDBC"], DirectedEdge["haskelldb-hdbc-mysql", "HDBC-mysql"], DirectedEdge["haskelldb-hdbc-mysql", "mtl"], DirectedEdge["haskelldb-hdbc-odbc", "base"], DirectedEdge["haskelldb-hdbc-odbc", "haskelldb"], DirectedEdge["haskelldb-hdbc-odbc", "haskelldb-hdbc"], DirectedEdge["haskelldb-hdbc-odbc", "HDBC"], DirectedEdge["haskelldb-hdbc-odbc", "HDBC-odbc"], DirectedEdge["haskelldb-hdbc-odbc", "mtl"], DirectedEdge["haskelldb-hdbc-postgresql", "base"], DirectedEdge["haskelldb-hdbc-postgresql", "haskelldb"], DirectedEdge["haskelldb-hdbc-postgresql", "haskelldb-hdbc"], DirectedEdge["haskelldb-hdbc-postgresql", "HDBC"], DirectedEdge["haskelldb-hdbc-postgresql", "HDBC-postgresql"], DirectedEdge["haskelldb-hdbc-postgresql", "mtl"], DirectedEdge["haskelldb-hdbc-sqlite3", "base"], DirectedEdge["haskelldb-hdbc-sqlite3", "haskelldb"], DirectedEdge["haskelldb-hdbc-sqlite3", "haskelldb-hdbc"], DirectedEdge["haskelldb-hdbc-sqlite3", "HDBC"], DirectedEdge["haskelldb-hdbc-sqlite3", "mtl"], DirectedEdge["haskelldb-hsql", "base"], DirectedEdge["haskelldb-hsql", "haskelldb"], DirectedEdge["haskelldb-hsql", "hsql"], DirectedEdge["haskelldb-hsql", "mtl"], DirectedEdge["haskelldb-hsql", "old-time"], DirectedEdge["haskelldb-hsql-mysql", "base"], DirectedEdge["haskelldb-hsql-mysql", "haskelldb"], DirectedEdge["haskelldb-hsql-mysql", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-mysql", "hsql"], DirectedEdge["haskelldb-hsql-mysql", "hsql-mysql"], DirectedEdge["haskelldb-hsql-mysql", "mtl"], DirectedEdge["haskelldb-hsql-odbc", "base"], DirectedEdge["haskelldb-hsql-odbc", "haskelldb"], DirectedEdge["haskelldb-hsql-odbc", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-odbc", "hsql"], DirectedEdge["haskelldb-hsql-odbc", "hsql-odbc"], DirectedEdge["haskelldb-hsql-odbc", "mtl"], DirectedEdge["haskelldb-hsql-oracle", "base"], DirectedEdge["haskelldb-hsql-oracle", "haskelldb"], DirectedEdge["haskelldb-hsql-oracle", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-oracle", "hsql"], DirectedEdge["haskelldb-hsql-oracle", "hsql-oracle"], DirectedEdge["haskelldb-hsql-oracle", "mtl"], DirectedEdge["haskelldb-hsql-postgresql", "base"], DirectedEdge["haskelldb-hsql-postgresql", "haskelldb"], DirectedEdge["haskelldb-hsql-postgresql", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-postgresql", "hsql"], DirectedEdge["haskelldb-hsql-postgresql", "hsql-postgresql"], DirectedEdge["haskelldb-hsql-postgresql", "mtl"], DirectedEdge["haskelldb-hsql-sqlite", "base"], DirectedEdge["haskelldb-hsql-sqlite", "haskelldb"], DirectedEdge["haskelldb-hsql-sqlite", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-sqlite", "hsql"], DirectedEdge["haskelldb-hsql-sqlite", "hsql-sqlite"], DirectedEdge["haskelldb-hsql-sqlite", "mtl"], DirectedEdge["haskelldb-hsql-sqlite3", "base"], DirectedEdge["haskelldb-hsql-sqlite3", "haskelldb"], DirectedEdge["haskelldb-hsql-sqlite3", "haskelldb-hsql"], DirectedEdge["haskelldb-hsql-sqlite3", "hsql"], DirectedEdge["haskelldb-hsql-sqlite3", "mtl"], DirectedEdge["haskelldb-th", "base"], DirectedEdge["haskelldb-th", "haskelldb"], DirectedEdge["haskelldb-th", "mtl"], DirectedEdge["haskelldb-th", "template-haskell"], DirectedEdge["haskellscrabble", "array"], DirectedEdge["haskellscrabble", "arrows"], DirectedEdge["haskellscrabble", "base"], DirectedEdge["haskellscrabble", "containers"], DirectedEdge["haskellscrabble", "errors"], DirectedEdge["haskellscrabble", "listsafe"], DirectedEdge["haskellscrabble", "mtl"], DirectedEdge["haskellscrabble", "parsec"], DirectedEdge["haskellscrabble", "QuickCheck"], DirectedEdge["haskellscrabble", "random"], DirectedEdge["haskellscrabble", "safe"], DirectedEdge["haskellscrabble", "semigroups"], DirectedEdge["haskellscrabble", "split"], DirectedEdge["haskellscrabble", "transformers"], DirectedEdge["haskellscrabble", "unordered-containers"], DirectedEdge["haskellscript", "base"], DirectedEdge["haskellscript", "cryptohash"], DirectedEdge["haskellscript", "directory"], DirectedEdge["haskellscript", "either"], DirectedEdge["haskellscript", "filepath"], DirectedEdge["haskellscript", "mtl"], DirectedEdge["haskellscript", "process"], DirectedEdge["haskellscript", "text"], DirectedEdge["haskelm", "aeson"], DirectedEdge["haskelm", "base"], DirectedEdge["haskelm", "binary"], DirectedEdge["haskelm", "containers"], DirectedEdge["haskelm", "directory"], DirectedEdge["haskelm", "haskell-src-exts"], DirectedEdge["haskelm", "haskell-src-meta"], DirectedEdge["haskelm", "mtl"], DirectedEdge["haskelm", "parsec"], DirectedEdge["haskelm", "pretty"], DirectedEdge["haskelm", "split"], DirectedEdge["haskelm", "template-haskell"], DirectedEdge["haskelm", "temporary"], DirectedEdge["haskelm", "text"], DirectedEdge["haskelm", "th-desugar"], DirectedEdge["haskelm", "unordered-containers"], DirectedEdge["haskelm", "vector"], DirectedEdge["haskgame", "base"], DirectedEdge["haskgame", "containers"], DirectedEdge["haskgame", "SDL"], DirectedEdge["haskgame", "SDL-ttf"], DirectedEdge["haskheap", "aeson"], DirectedEdge["haskheap", "base"], DirectedEdge["haskheap", "bytestring"], DirectedEdge["haskheap", "http-conduit"], DirectedEdge["haskheap", "http-types"], DirectedEdge["haskheap", "network"], DirectedEdge["haskheap", "old-locale"], DirectedEdge["haskheap", "text"], DirectedEdge["haskheap", "time"], DirectedEdge["haskheap", "unordered-containers"], DirectedEdge["haskhol-core", "acid-state"], DirectedEdge["haskhol-core", "base"], DirectedEdge["haskhol-core", "containers"], DirectedEdge["haskhol-core", "deepseq"], DirectedEdge["haskhol-core", "filepath"], DirectedEdge["haskhol-core", "ghc-prim"], DirectedEdge["haskhol-core", "hashable"], DirectedEdge["haskhol-core", "mtl"], DirectedEdge["haskhol-core", "parsec"], DirectedEdge["haskhol-core", "pretty"], DirectedEdge["haskhol-core", "safecopy"], DirectedEdge["haskhol-core", "shelly"], DirectedEdge["haskhol-core", "template-haskell"], DirectedEdge["haskhol-core", "text"], DirectedEdge["haskhol-core", "text-show"], DirectedEdge["haskhol-core", "th-lift"], DirectedEdge["haskhol-core", "unordered-containers"], DirectedEdge["haskintex", "base"], DirectedEdge["haskintex", "binary"], DirectedEdge["haskintex", "bytestring"], DirectedEdge["haskintex", "containers"], DirectedEdge["haskintex", "directory"], DirectedEdge["haskintex", "filepath"], DirectedEdge["haskintex", "haskell-src-exts"], DirectedEdge["haskintex", "haskintex"], DirectedEdge["haskintex", "HaTeX"], DirectedEdge["haskintex", "hint"], DirectedEdge["haskintex", "parsec"], DirectedEdge["haskintex", "process"], DirectedEdge["haskintex", "text"], DirectedEdge["haskintex", "transformers"], DirectedEdge["haskmon", "aeson"], DirectedEdge["haskmon", "base"], DirectedEdge["haskmon", "bytestring"], DirectedEdge["haskmon", "containers"], DirectedEdge["haskmon", "http-streams"], DirectedEdge["haskmon", "io-streams"], DirectedEdge["haskmon", "time"], DirectedEdge["haskmon", "vector"], DirectedEdge["haskoin", "haskoin-core"], DirectedEdge["haskoin", "aeson"], DirectedEdge["haskoin", "base"], DirectedEdge["haskoin", "binary"], DirectedEdge["haskoin", "byteable"], DirectedEdge["haskoin", "bytestring"], DirectedEdge["haskoin", "containers"], DirectedEdge["haskoin", "cryptohash"], DirectedEdge["haskoin", "deepseq"], DirectedEdge["haskoin", "either"], DirectedEdge["haskoin", "json-rpc"], DirectedEdge["haskoin", "mtl"], DirectedEdge["haskoin", "pbkdf"], DirectedEdge["haskoin", "split"], DirectedEdge["haskoin", "text"], DirectedEdge["haskoin-core", "aeson"], DirectedEdge["haskoin-core", "base"], DirectedEdge["haskoin-core", "base16-bytestring"], DirectedEdge["haskoin-core", "binary"], DirectedEdge["haskoin-core", "byteable"], DirectedEdge["haskoin-core", "bytestring"], DirectedEdge["haskoin-core", "conduit"], DirectedEdge["haskoin-core", "containers"], DirectedEdge["haskoin-core", "cryptohash"], DirectedEdge["haskoin-core", "deepseq"], DirectedEdge["haskoin-core", "either"], DirectedEdge["haskoin-core", "entropy"], DirectedEdge["haskoin-core", "largeword"], DirectedEdge["haskoin-core", "mtl"], DirectedEdge["haskoin-core", "network"], DirectedEdge["haskoin-core", "pbkdf"], DirectedEdge["haskoin-core", "QuickCheck"], DirectedEdge["haskoin-core", "split"], DirectedEdge["haskoin-core", "string-conversions"], DirectedEdge["haskoin-core", "text"], DirectedEdge["haskoin-core", "time"], DirectedEdge["haskoin-core", "vector"], DirectedEdge["haskoin-crypto", "haskoin"], DirectedEdge["haskoin-crypto", "base"], DirectedEdge["haskoin-crypto", "binary"], DirectedEdge["haskoin-crypto", "byteable"], DirectedEdge["haskoin-crypto", "bytestring"], DirectedEdge["haskoin-crypto", "containers"], DirectedEdge["haskoin-crypto", "cryptohash"], DirectedEdge["haskoin-crypto", "haskoin-util"], DirectedEdge["haskoin-crypto", "mtl"], DirectedEdge["haskoin-crypto", "QuickCheck"], DirectedEdge["haskoin-node", "aeson"], DirectedEdge["haskoin-node", "async"], DirectedEdge["haskoin-node", "base"], DirectedEdge["haskoin-node", "binary"], DirectedEdge["haskoin-node", "bytestring"], DirectedEdge["haskoin-node", "concurrent-extra"], DirectedEdge["haskoin-node", "conduit"], DirectedEdge["haskoin-node", "conduit-extra"], DirectedEdge["haskoin-node", "containers"], DirectedEdge["haskoin-node", "data-default"], DirectedEdge["haskoin-node", "deepseq"], DirectedEdge["haskoin-node", "either"], DirectedEdge["haskoin-node", "exceptions"], DirectedEdge["haskoin-node", "haskoin-core"], DirectedEdge["haskoin-node", "leveldb-haskell"], DirectedEdge["haskoin-node", "lifted-async"], DirectedEdge["haskoin-node", "lifted-base"], DirectedEdge["haskoin-node", "monad-control"], DirectedEdge["haskoin-node", "monad-logger"], DirectedEdge["haskoin-node", "mtl"], DirectedEdge["haskoin-node", "network"], DirectedEdge["haskoin-node", "random"], DirectedEdge["haskoin-node", "stm"], DirectedEdge["haskoin-node", "stm-chans"], DirectedEdge["haskoin-node", "stm-conduit"], DirectedEdge["haskoin-node", "string-conversions"], DirectedEdge["haskoin-node", "text"], DirectedEdge["haskoin-node", "time"], DirectedEdge["haskoin-protocol", "haskoin"], DirectedEdge["haskoin-protocol", "base"], DirectedEdge["haskoin-protocol", "binary"], DirectedEdge["haskoin-protocol", "bytestring"], DirectedEdge["haskoin-protocol", "haskoin-crypto"], DirectedEdge["haskoin-protocol", "haskoin-util"], DirectedEdge["haskoin-protocol", "QuickCheck"], DirectedEdge["haskoin-script", "haskoin"], DirectedEdge["haskoin-script", "base"], DirectedEdge["haskoin-script", "binary"], DirectedEdge["haskoin-script", "bytestring"], DirectedEdge["haskoin-script", "haskoin-crypto"], DirectedEdge["haskoin-script", "haskoin-protocol"], DirectedEdge["haskoin-script", "haskoin-util"], DirectedEdge["haskoin-script", "mtl"], DirectedEdge["haskoin-script", "QuickCheck"], DirectedEdge["haskoin-util", "haskoin"], DirectedEdge["haskoin-util", "base"], DirectedEdge["haskoin-util", "binary"], DirectedEdge["haskoin-util", "bytestring"], DirectedEdge["haskoin-util", "either"], DirectedEdge["haskoin-util", "mtl"], DirectedEdge["haskoin-util", "QuickCheck"], DirectedEdge["haskoin-wallet", "aeson"], DirectedEdge["haskoin-wallet", "aeson-pretty"], DirectedEdge["haskoin-wallet", "base"], DirectedEdge["haskoin-wallet", "bytestring"], DirectedEdge["haskoin-wallet", "conduit"], DirectedEdge["haskoin-wallet", "containers"], DirectedEdge["haskoin-wallet", "daemons"], DirectedEdge["haskoin-wallet", "data-default"], DirectedEdge["haskoin-wallet", "deepseq"], DirectedEdge["haskoin-wallet", "directory"], DirectedEdge["haskoin-wallet", "esqueleto"], DirectedEdge["haskoin-wallet", "exceptions"], DirectedEdge["haskoin-wallet", "file-embed"], DirectedEdge["haskoin-wallet", "filepath"], DirectedEdge["haskoin-wallet", "haskoin-core"], DirectedEdge["haskoin-wallet", "haskoin-node"], DirectedEdge["haskoin-wallet", "haskoin-wallet"], DirectedEdge["haskoin-wallet", "leveldb-haskell"], DirectedEdge["haskoin-wallet", "lifted-async"], DirectedEdge["haskoin-wallet", "lifted-base"], DirectedEdge["haskoin-wallet", "monad-control"], DirectedEdge["haskoin-wallet", "monad-logger"], DirectedEdge["haskoin-wallet", "mtl"], DirectedEdge["haskoin-wallet", "persistent"], DirectedEdge["haskoin-wallet", "persistent-mysql"], DirectedEdge["haskoin-wallet", "persistent-sqlite"], DirectedEdge["haskoin-wallet", "persistent-template"], DirectedEdge["haskoin-wallet", "resourcet"], DirectedEdge["haskoin-wallet", "SafeSemaphore"], DirectedEdge["haskoin-wallet", "split"], DirectedEdge["haskoin-wallet", "stm"], DirectedEdge["haskoin-wallet", "stm-chans"], DirectedEdge["haskoin-wallet", "stm-conduit"], DirectedEdge["haskoin-wallet", "string-conversions"], DirectedEdge["haskoin-wallet", "text"], DirectedEdge["haskoin-wallet", "time"], DirectedEdge["haskoin-wallet", "transformers-base"], DirectedEdge["haskoin-wallet", "unix"], DirectedEdge["haskoin-wallet", "unordered-containers"], DirectedEdge["haskoin-wallet", "yaml"], DirectedEdge["haskoin-wallet", "zeromq4-haskell"], DirectedEdge["haskoon", "base"], DirectedEdge["haskoon", "bytestring"], DirectedEdge["haskoon", "cgi"], DirectedEdge["haskoon", "directory"], DirectedEdge["haskoon", "fastcgi"], DirectedEdge["haskoon", "filepath"], DirectedEdge["haskoon", "hslogger"], DirectedEdge["haskoon", "hsp"], DirectedEdge["haskoon", "hsx"], DirectedEdge["haskoon", "MaybeT"], DirectedEdge["haskoon", "MissingH"], DirectedEdge["haskoon", "mtl"], DirectedEdge["haskoon", "network"], DirectedEdge["haskoon", "regex-posix"], DirectedEdge["haskoon", "safe"], DirectedEdge["haskoon", "utf8-string"], DirectedEdge["haskoon-httpspec", "base"], DirectedEdge["haskoon-httpspec", "bidispec"], DirectedEdge["haskoon-httpspec", "bytestring"], DirectedEdge["haskoon-httpspec", "haskoon"], DirectedEdge["haskoon-httpspec", "hslogger"], DirectedEdge["haskoon-httpspec", "HTTP"], DirectedEdge["haskoon-httpspec", "httpspec"], DirectedEdge["haskoon-httpspec", "mtl"], DirectedEdge["haskoon-httpspec", "network"], DirectedEdge["haskoon-salvia", "base"], DirectedEdge["haskoon-salvia", "bytestring"], DirectedEdge["haskoon-salvia", "cgi"], DirectedEdge["haskoon-salvia", "fclabels"], DirectedEdge["haskoon-salvia", "haskoon"], DirectedEdge["haskoon-salvia", "hslogger"], DirectedEdge["haskoon-salvia", "HTTP"], DirectedEdge["haskoon-salvia", "monads-fd"], DirectedEdge["haskoon-salvia", "mtl"], DirectedEdge["haskoon-salvia", "network"], DirectedEdge["haskoon-salvia", "salvia"], DirectedEdge["haskoon-salvia", "salvia-protocol"], DirectedEdge["haskoon-salvia", "transformers"], DirectedEdge["haskore", "array"], DirectedEdge["haskore", "base"], DirectedEdge["haskore", "bytestring"], DirectedEdge["haskore", "containers"], DirectedEdge["haskore", "data-accessor"], DirectedEdge["haskore", "event-list"], DirectedEdge["haskore", "haskell-src"], DirectedEdge["haskore", "haskore"], DirectedEdge["haskore", "markov-chain"], DirectedEdge["haskore", "midi"], DirectedEdge["haskore", "non-negative"], DirectedEdge["haskore", "parsec"], DirectedEdge["haskore", "process"], DirectedEdge["haskore", "random"], DirectedEdge["haskore", "special-functors"], DirectedEdge["haskore", "transformers"], DirectedEdge["haskore", "utility-ht"], DirectedEdge["haskore-realtime", "base"], DirectedEdge["haskore-realtime", "bytestring"], DirectedEdge["haskore-realtime", "data-accessor"], DirectedEdge["haskore-realtime", "directory"], DirectedEdge["haskore-realtime", "event-list"], DirectedEdge["haskore-realtime", "haskore"], DirectedEdge["haskore-realtime", "midi"], DirectedEdge["haskore-realtime", "non-negative"], DirectedEdge["haskore-realtime", "old-time"], DirectedEdge["haskore-realtime", "process"], DirectedEdge["haskore-realtime", "transformers"], DirectedEdge["haskore-realtime", "unix"], DirectedEdge["haskore-realtime", "utility-ht"], DirectedEdge["haskore-supercollider", "array"], DirectedEdge["haskore-supercollider", "base"], DirectedEdge["haskore-supercollider", "bytestring"], DirectedEdge["haskore-supercollider", "containers"], DirectedEdge["haskore-supercollider", "data-accessor"], DirectedEdge["haskore-supercollider", "event-list"], DirectedEdge["haskore-supercollider", "haskore"], DirectedEdge["haskore-supercollider", "haskore-realtime"], DirectedEdge["haskore-supercollider", "hosc"], DirectedEdge["haskore-supercollider", "HUnit"], DirectedEdge["haskore-supercollider", "non-negative"], DirectedEdge["haskore-supercollider", "opensoundcontrol-ht"], DirectedEdge["haskore-supercollider", "process"], DirectedEdge["haskore-supercollider", "QuickCheck"], DirectedEdge["haskore-supercollider", "random"], DirectedEdge["haskore-supercollider", "supercollider-ht"], DirectedEdge["haskore-supercollider", "transformers"], DirectedEdge["haskore-supercollider", "unix"], DirectedEdge["haskore-supercollider", "utility-ht"], DirectedEdge["haskore-synthesizer", "base"], DirectedEdge["haskore-synthesizer", "data-accessor"], DirectedEdge["haskore-synthesizer", "event-list"], DirectedEdge["haskore-synthesizer", "haskore"], DirectedEdge["haskore-synthesizer", "haskore-synthesizer"], DirectedEdge["haskore-synthesizer", "non-negative"], DirectedEdge["haskore-synthesizer", "numeric-prelude"], DirectedEdge["haskore-synthesizer", "random"], DirectedEdge["haskore-synthesizer", "synthesizer-core"], DirectedEdge["haskore-synthesizer", "synthesizer-filter"], DirectedEdge["haskore-synthesizer", "utility-ht"], DirectedEdge["haskore-vintage", "base"], DirectedEdge["hasktags", "base"], DirectedEdge["hasktags", "bytestring"], DirectedEdge["hasktags", "directory"], DirectedEdge["hasktags", "filepath"], DirectedEdge["hasktags", "hasktags"], DirectedEdge["hasktags", "json"], DirectedEdge["hasktags", "unix"], DirectedEdge["hasktags", "utf8-string"], DirectedEdge["haslo", "base"], DirectedEdge["haslo", "mtl"], DirectedEdge["haslo", "old-time"], DirectedEdge["haslo", "QuickCheck"], DirectedEdge["haslo", "time"], DirectedEdge["haslo", "wtk"], DirectedEdge["hasloGUI", "base"], DirectedEdge["hasloGUI", "convertible"], DirectedEdge["hasloGUI", "gtk"], DirectedEdge["hasloGUI", "haslo"], DirectedEdge["hasloGUI", "lenses"], DirectedEdge["hasloGUI", "mtl"], DirectedEdge["hasloGUI", "old-time"], DirectedEdge["hasloGUI", "QuickCheck"], DirectedEdge["hasloGUI", "time"], DirectedEdge["hasloGUI", "wtk"], DirectedEdge["hasloGUI", "wtk-gtk"], DirectedEdge["hasparql-client", "base"], DirectedEdge["hasparql-client", "HTTP"], DirectedEdge["hasparql-client", "monads-fd"], DirectedEdge["hasparql-client", "network"], DirectedEdge["hasparql-client", "xml"], DirectedEdge["haspell", "base"], DirectedEdge["haspell", "bytestring"], DirectedEdge["hasql", "aeson"], DirectedEdge["hasql", "attoparsec"], DirectedEdge["hasql", "base"], DirectedEdge["hasql", "base-prelude"], DirectedEdge["hasql", "bytestring"], DirectedEdge["hasql", "bytestring-tree-builder"], DirectedEdge["hasql", "contravariant"], DirectedEdge["hasql", "contravariant-extras"], DirectedEdge["hasql", "data-default-class"], DirectedEdge["hasql", "dlist"], DirectedEdge["hasql", "either"], DirectedEdge["hasql", "hashable"], DirectedEdge["hasql", "hashtables"], DirectedEdge["hasql", "loch-th"], DirectedEdge["hasql", "mtl"], DirectedEdge["hasql", "placeholders"], DirectedEdge["hasql", "postgresql-binary"], DirectedEdge["hasql", "postgresql-libpq"], DirectedEdge["hasql", "profunctors"], DirectedEdge["hasql", "scientific"], DirectedEdge["hasql", "semigroups"], DirectedEdge["hasql", "text"], DirectedEdge["hasql", "time"], DirectedEdge["hasql", "transformers"], DirectedEdge["hasql", "uuid"], DirectedEdge["hasql", "vector"], DirectedEdge["hasql-backend", "hasql"], DirectedEdge["hasql-backend", "base-prelude"], DirectedEdge["hasql-backend", "bytestring"], DirectedEdge["hasql-backend", "either"], DirectedEdge["hasql-backend", "free"], DirectedEdge["hasql-backend", "list-t"], DirectedEdge["hasql-backend", "text"], DirectedEdge["hasql-backend", "transformers"], DirectedEdge["hasql-backend", "vector"], DirectedEdge["hasql-optparse-applicative", "base-prelude"], DirectedEdge["hasql-optparse-applicative", "hasql"], DirectedEdge["hasql-optparse-applicative", "hasql-pool"], DirectedEdge["hasql-optparse-applicative", "optparse-applicative"], DirectedEdge["hasql-pool", "base-prelude"], DirectedEdge["hasql-pool", "hasql"], DirectedEdge["hasql-pool", "resource-pool"], DirectedEdge["hasql-pool", "time"], DirectedEdge["hasql-postgres", "hasql"], DirectedEdge["hasql-postgres", "aeson"], DirectedEdge["hasql-postgres", "attoparsec"], DirectedEdge["hasql-postgres", "base-prelude"], DirectedEdge["hasql-postgres", "bytestring"], DirectedEdge["hasql-postgres", "either"], DirectedEdge["hasql-postgres", "free"], DirectedEdge["hasql-postgres", "hashable"], DirectedEdge["hasql-postgres", "hashtables"], DirectedEdge["hasql-postgres", "hasql-backend"], DirectedEdge["hasql-postgres", "list-t"], DirectedEdge["hasql-postgres", "loch-th"], DirectedEdge["hasql-postgres", "mmorph"], DirectedEdge["hasql-postgres", "placeholders"], DirectedEdge["hasql-postgres", "postgresql-binary"], DirectedEdge["hasql-postgres", "postgresql-libpq"], DirectedEdge["hasql-postgres", "scientific"], DirectedEdge["hasql-postgres", "template-haskell"], DirectedEdge["hasql-postgres", "text"], DirectedEdge["hasql-postgres", "time"], DirectedEdge["hasql-postgres", "transformers"], DirectedEdge["hasql-postgres", "uuid"], DirectedEdge["hasql-postgres", "vector"], DirectedEdge["hasql-postgres-options", "hasql-optparse-applicative"], DirectedEdge["hasql-postgres-options", "base-prelude"], DirectedEdge["hasql-postgres-options", "hasql-postgres"], DirectedEdge["hasql-postgres-options", "optparse-applicative"], DirectedEdge["hasql-th", "base-prelude"], DirectedEdge["hasql-th", "bytestring"], DirectedEdge["hasql-th", "template-haskell"], DirectedEdge["hasql-th", "text"], DirectedEdge["hasql-transaction", "base"], DirectedEdge["hasql-transaction", "base-prelude"], DirectedEdge["hasql-transaction", "bytestring"], DirectedEdge["hasql-transaction", "bytestring-tree-builder"], DirectedEdge["hasql-transaction", "contravariant"], DirectedEdge["hasql-transaction", "contravariant-extras"], DirectedEdge["hasql-transaction", "either"], DirectedEdge["hasql-transaction", "hasql"], DirectedEdge["hasql-transaction", "mtl"], DirectedEdge["hasql-transaction", "postgresql-error-codes"], DirectedEdge["hasql-transaction", "transformers"], DirectedEdge["hastache", "mustache"], DirectedEdge["hastache", "base"], DirectedEdge["hastache", "blaze-builder"], DirectedEdge["hastache", "bytestring"], DirectedEdge["hastache", "containers"], DirectedEdge["hastache", "directory"], DirectedEdge["hastache", "filepath"], DirectedEdge["hastache", "hastache"], DirectedEdge["hastache", "mtl"], DirectedEdge["hastache", "process"], DirectedEdge["hastache", "syb"], DirectedEdge["hastache", "text"], DirectedEdge["hastache", "transformers"], DirectedEdge["hastache-aeson", "aeson"], DirectedEdge["hastache-aeson", "base"], DirectedEdge["hastache-aeson", "bytestring"], DirectedEdge["hastache-aeson", "containers"], DirectedEdge["hastache-aeson", "hastache"], DirectedEdge["hastache-aeson", "scientific"], DirectedEdge["hastache-aeson", "text"], DirectedEdge["hastache-aeson", "unordered-containers"], DirectedEdge["hastache-aeson", "vector"], DirectedEdge["haste", "base"], DirectedEdge["haste", "curl"], DirectedEdge["haste", "filepath"], DirectedEdge["haste", "mtl"], DirectedEdge["haste-compiler", "array"], DirectedEdge["haste-compiler", "base"], DirectedEdge["haste-compiler", "bin-package-db"], DirectedEdge["haste-compiler", "binary"], DirectedEdge["haste-compiler", "blaze-builder"], DirectedEdge["haste-compiler", "bytestring"], DirectedEdge["haste-compiler", "bzlib"], DirectedEdge["haste-compiler", "Cabal"], DirectedEdge["haste-compiler", "containers"], DirectedEdge["haste-compiler", "directory"], DirectedEdge["haste-compiler", "either"], DirectedEdge["haste-compiler", "filepath"], DirectedEdge["haste-compiler", "ghc"], DirectedEdge["haste-compiler", "ghc-paths"], DirectedEdge["haste-compiler", "ghc-prim"], DirectedEdge["haste-compiler", "ghc-simple"], DirectedEdge["haste-compiler", "HTTP"], DirectedEdge["haste-compiler", "monads-tf"], DirectedEdge["haste-compiler", "mtl"], DirectedEdge["haste-compiler", "network"], DirectedEdge["haste-compiler", "network-uri"], DirectedEdge["haste-compiler", "process"], DirectedEdge["haste-compiler", "random"], DirectedEdge["haste-compiler", "shellmate"], DirectedEdge["haste-compiler", "system-fileio"], DirectedEdge["haste-compiler", "tar"], DirectedEdge["haste-compiler", "terminfo"], DirectedEdge["haste-compiler", "transformers"], DirectedEdge["haste-compiler", "unix"], DirectedEdge["haste-compiler", "utf8-string"], DirectedEdge["haste-compiler", "websockets"], DirectedEdge["haste-gapi", "base"], DirectedEdge["haste-gapi", "data-default"], DirectedEdge["haste-gapi", "haste-compiler"], DirectedEdge["haste-gapi", "haste-lib"], DirectedEdge["haste-gapi", "transformers"], DirectedEdge["haste-markup", "base"], DirectedEdge["haste-markup", "containers"], DirectedEdge["haste-markup", "directory"], DirectedEdge["haste-markup", "filepath"], DirectedEdge["haste-markup", "haste-lib"], DirectedEdge["haste-perch", "base"], DirectedEdge["haste-perch", "haste-compiler"], DirectedEdge["haste-perch", "haste-lib"], DirectedEdge["haste-perch", "transformers"], DirectedEdge["hastily", "aeson"], DirectedEdge["hastily", "base"], DirectedEdge["hastily", "bytestring"], DirectedEdge["hastily", "concurrent-extra"], DirectedEdge["hastily", "containers"], DirectedEdge["hastily", "directory"], DirectedEdge["hastily", "directory-tree"], DirectedEdge["hastily", "exceptions"], DirectedEdge["hastily", "filepath"], DirectedEdge["hastily", "hastily"], DirectedEdge["hastily", "http-client"], DirectedEdge["hastily", "http-types"], DirectedEdge["hastily", "hxt"], DirectedEdge["hastily", "parsec"], DirectedEdge["hastily", "string-conversions"], DirectedEdge["hastily", "text"], DirectedEdge["hastily", "unbounded-delays"], DirectedEdge["hastily", "zip-archive"], DirectedEdge["hasty-hamiltonian", "base"], DirectedEdge["hasty-hamiltonian", "lens"], DirectedEdge["hasty-hamiltonian", "mcmc-types"], DirectedEdge["hasty-hamiltonian", "mwc-probability"], DirectedEdge["hasty-hamiltonian", "pipes"], DirectedEdge["hasty-hamiltonian", "primitive"], DirectedEdge["hasty-hamiltonian", "transformers"], DirectedEdge["hat", "base"], DirectedEdge["hat", "bytestring"], DirectedEdge["hat", "containers"], DirectedEdge["hat", "directory"], DirectedEdge["hat", "filepath"], DirectedEdge["hat", "haskeline"], DirectedEdge["hat", "haskell-src-exts"], DirectedEdge["hat", "old-locale"], DirectedEdge["hat", "old-time"], DirectedEdge["hat", "polyparse"], DirectedEdge["hat", "process"], DirectedEdge["hat", "random"], DirectedEdge["hatex-guide", "base"], DirectedEdge["hatex-guide", "blaze-html"], DirectedEdge["hatex-guide", "directory"], DirectedEdge["hatex-guide", "filepath"], DirectedEdge["hatex-guide", "HaTeX"], DirectedEdge["hatex-guide", "parsec"], DirectedEdge["hatex-guide", "text"], DirectedEdge["hatex-guide", "time"], DirectedEdge["hatex-guide", "transformers"], DirectedEdge["hath", "base"], DirectedEdge["hath", "cmdargs"], DirectedEdge["hath", "MissingH"], DirectedEdge["hath", "split"], DirectedEdge["hath", "tasty"], DirectedEdge["hath", "tasty-hunit"], DirectedEdge["hath", "tasty-quickcheck"], DirectedEdge["hatt", "ansi-wl-pprint"], DirectedEdge["hatt", "base"], DirectedEdge["hatt", "cmdargs"], DirectedEdge["hatt", "containers"], DirectedEdge["hatt", "haskeline"], DirectedEdge["hatt", "hatt"], DirectedEdge["hatt", "parsec"], DirectedEdge["hatt", "QuickCheck"], DirectedEdge["haverer", "base"], DirectedEdge["haverer", "basic-prelude"], DirectedEdge["haverer", "containers"], DirectedEdge["haverer", "errors"], DirectedEdge["haverer", "haverer"], DirectedEdge["haverer", "lens"], DirectedEdge["haverer", "MonadRandom"], DirectedEdge["haverer", "mtl"], DirectedEdge["haverer", "random-shuffle"], DirectedEdge["haverer", "tasty"], DirectedEdge["haverer", "tasty-quickcheck"], DirectedEdge["haverer", "text"], DirectedEdge["hawitter", "base"], DirectedEdge["hawitter", "base64-string"], DirectedEdge["hawitter", "bytestring"], DirectedEdge["hawitter", "clock"], DirectedEdge["hawitter", "containers"], DirectedEdge["hawitter", "gconf"], DirectedEdge["hawitter", "glade"], DirectedEdge["hawitter", "gtk"], DirectedEdge["hawitter", "hoauth"], DirectedEdge["hawitter", "HTTP"], DirectedEdge["hawitter", "json"], DirectedEdge["hawitter", "mtl"], DirectedEdge["hawitter", "network"], DirectedEdge["hawitter", "old-locale"], DirectedEdge["hawitter", "parsec"], DirectedEdge["hawitter", "regex-base"], DirectedEdge["hawitter", "regex-tdfa"], DirectedEdge["hawitter", "SHA"], DirectedEdge["hawitter", "time"], DirectedEdge["hawitter", "utf8-string"], DirectedEdge["haxl", "aeson"], DirectedEdge["haxl", "base"], DirectedEdge["haxl", "bytestring"], DirectedEdge["haxl", "containers"], DirectedEdge["haxl", "deepseq"], DirectedEdge["haxl", "directory"], DirectedEdge["haxl", "exceptions"], DirectedEdge["haxl", "filepath"], DirectedEdge["haxl", "hashable"], DirectedEdge["haxl", "haxl"], DirectedEdge["haxl", "HUnit"], DirectedEdge["haxl", "pretty"], DirectedEdge["haxl", "text"], DirectedEdge["haxl", "time"], DirectedEdge["haxl", "unordered-containers"], DirectedEdge["haxl", "vector"], DirectedEdge["haxl-amazonka", "amazonka"], DirectedEdge["haxl-amazonka", "amazonka-core"], DirectedEdge["haxl-amazonka", "async"], DirectedEdge["haxl-amazonka", "base"], DirectedEdge["haxl-amazonka", "conduit"], DirectedEdge["haxl-amazonka", "hashable"], DirectedEdge["haxl-amazonka", "haxl"], DirectedEdge["haxl-amazonka", "transformers"], DirectedEdge["haxl-facebook", "aeson"], DirectedEdge["haxl-facebook", "async"], DirectedEdge["haxl-facebook", "base"], DirectedEdge["haxl-facebook", "conduit"], DirectedEdge["haxl-facebook", "data-default"], DirectedEdge["haxl-facebook", "fb"], DirectedEdge["haxl-facebook", "hashable"], DirectedEdge["haxl-facebook", "haxl"], DirectedEdge["haxl-facebook", "http-client-tls"], DirectedEdge["haxl-facebook", "http-conduit"], DirectedEdge["haxl-facebook", "resourcet"], DirectedEdge["haxl-facebook", "text"], DirectedEdge["haxl-facebook", "time"], DirectedEdge["haxl-facebook", "transformers"], DirectedEdge["haxparse", "base"], DirectedEdge["haxparse", "binary"], DirectedEdge["haxparse", "bytestring"], DirectedEdge["haxparse", "containers"], DirectedEdge["haxparse", "data-default"], DirectedEdge["haxparse", "haxparse"], DirectedEdge["haxparse", "mtl"], DirectedEdge["haxparse", "optparse-applicative"], DirectedEdge["haxparse", "parsec"], DirectedEdge["haxparse", "split"], DirectedEdge["haxparse", "template-haskell"], DirectedEdge["haxparse", "transformers"], DirectedEdge["haxparse", "utf8-string"], DirectedEdge["haxparse", "zlib"], DirectedEdge["haxr", "array"], DirectedEdge["haxr", "base"], DirectedEdge["haxr", "base-compat"], DirectedEdge["haxr", "base64-bytestring"], DirectedEdge["haxr", "blaze-builder"], DirectedEdge["haxr", "bytestring"], DirectedEdge["haxr", "HaXml"], DirectedEdge["haxr", "HsOpenSSL"], DirectedEdge["haxr", "http-streams"], DirectedEdge["haxr", "http-types"], DirectedEdge["haxr", "io-streams"], DirectedEdge["haxr", "mtl"], DirectedEdge["haxr", "mtl-compat"], DirectedEdge["haxr", "network"], DirectedEdge["haxr", "network-uri"], DirectedEdge["haxr", "old-locale"], DirectedEdge["haxr", "old-time"], DirectedEdge["haxr", "template-haskell"], DirectedEdge["haxr", "time"], DirectedEdge["haxr", "utf8-string"], DirectedEdge["haxr-th", "base"], DirectedEdge["haxr-th", "haxr"], DirectedEdge["haxr-th", "template-haskell"], DirectedEdge["haxy", "base"], DirectedEdge["haxy", "bytestring"], DirectedEdge["haxy", "data-default-class"], DirectedEdge["haxy", "hostname"], DirectedEdge["haxy", "HTTP"], DirectedEdge["haxy", "http-server"], DirectedEdge["haxy", "mtl"], DirectedEdge["haxy", "url"], DirectedEdge["hayland", "base"], DirectedEdge["hayland", "data-flags"], DirectedEdge["hayland", "hayland"], DirectedEdge["hayland", "process"], DirectedEdge["hayland", "template-haskell"], DirectedEdge["hayland", "time"], DirectedEdge["hayland", "xml"], DirectedEdge["hayoo-cli", "aeson"], DirectedEdge["hayoo-cli", "base"], DirectedEdge["hayoo-cli", "bytestring"], DirectedEdge["hayoo-cli", "http-conduit"], DirectedEdge["hayoo-cli", "http-types"], DirectedEdge["hayoo-cli", "optparse-applicative"], DirectedEdge["hayoo-cli", "pandoc"], DirectedEdge["hayoo-cli", "url"], DirectedEdge["hback", "base"], DirectedEdge["hback", "cairo"], DirectedEdge["hback", "filepath"], DirectedEdge["hback", "glade"], DirectedEdge["hback", "gtk"], DirectedEdge["hback", "process"], DirectedEdge["hback", "svgcairo"], DirectedEdge["hback", "time"], DirectedEdge["hback", "unix"], DirectedEdge["hbayes", "array"], DirectedEdge["hbayes", "base"], DirectedEdge["hbayes", "binary"], DirectedEdge["hbayes", "boxes"], DirectedEdge["hbayes", "containers"], DirectedEdge["hbayes", "directory"], DirectedEdge["hbayes", "filepath"], DirectedEdge["hbayes", "gamma"], DirectedEdge["hbayes", "HUnit"], DirectedEdge["hbayes", "mtl"], DirectedEdge["hbayes", "mwc-random"], DirectedEdge["hbayes", "parsec"], DirectedEdge["hbayes", "pretty"], DirectedEdge["hbayes", "QuickCheck"], DirectedEdge["hbayes", "random"], DirectedEdge["hbayes", "split"], DirectedEdge["hbayes", "statistics"], DirectedEdge["hbayes", "test-framework"], DirectedEdge["hbayes", "test-framework-hunit"], DirectedEdge["hbayes", "vector"], DirectedEdge["hbb", "base"], DirectedEdge["hbb", "directory"], DirectedEdge["hbb", "ghc"], DirectedEdge["hbb", "ghc-mod"], DirectedEdge["hbb", "ghc-paths"], DirectedEdge["hbb", "libhbb"], DirectedEdge["hbcd", "base"], DirectedEdge["hbcd", "bytestring"], DirectedEdge["hbcd", "Decimal"], DirectedEdge["hbcd", "digits"], DirectedEdge["hbcd", "split"], DirectedEdge["hbeanstalk", "attoparsec"], DirectedEdge["hbeanstalk", "base"], DirectedEdge["hbeanstalk", "blaze-builder"], DirectedEdge["hbeanstalk", "bytestring"], DirectedEdge["hbeanstalk", "containers"], DirectedEdge["hbeanstalk", "network"], DirectedEdge["hbeat", "base"], DirectedEdge["hbeat", "containers"], DirectedEdge["hbeat", "mtl"], DirectedEdge["hbeat", "old-time"], DirectedEdge["hbeat", "OpenGL"], DirectedEdge["hbeat", "SDL"], DirectedEdge["hbeat", "SDL-mixer"], DirectedEdge["hblas", "base"], DirectedEdge["hblas", "primitive"], DirectedEdge["hblas", "storable-complex"], DirectedEdge["hblas", "vector"], DirectedEdge["hblock", "aeson"], DirectedEdge["hblock", "base"], DirectedEdge["hblock", "blaze-markup"], DirectedEdge["hblock", "bytestring"], DirectedEdge["hblock", "cereal"], DirectedEdge["hblock", "containers"], DirectedEdge["hblock", "deepseq"], DirectedEdge["hblock", "hashable"], DirectedEdge["hblock", "path-pieces"], DirectedEdge["hblock", "safecopy"], DirectedEdge["hblock", "text"], DirectedEdge["hblock", "unordered-containers"], DirectedEdge["hblock", "uuid"], DirectedEdge["hblock", "vector"], DirectedEdge["hbro", "base"], DirectedEdge["hbro", "bytestring"], DirectedEdge["hbro", "classy-prelude"], DirectedEdge["hbro", "cond"], DirectedEdge["hbro", "containers"], DirectedEdge["hbro", "data-default-class"], DirectedEdge["hbro", "directory"], DirectedEdge["hbro", "dyre"], DirectedEdge["hbro", "errors"], DirectedEdge["hbro", "exceptions"], DirectedEdge["hbro", "fast-logger"], DirectedEdge["hbro", "filepath"], DirectedEdge["hbro", "glib"], DirectedEdge["hbro", "hbro"], DirectedEdge["hbro", "integer-simple"], DirectedEdge["hbro", "lens"], DirectedEdge["hbro", "lifted-async"], DirectedEdge["hbro", "lifted-base"], DirectedEdge["hbro", "monad-control"], DirectedEdge["hbro", "monad-logger"], DirectedEdge["hbro", "mtl"], DirectedEdge["hbro", "network-uri"], DirectedEdge["hbro", "optparse-applicative"], DirectedEdge["hbro", "pango"], DirectedEdge["hbro", "parsec"], DirectedEdge["hbro", "process"], DirectedEdge["hbro", "random"], DirectedEdge["hbro", "resourcet"], DirectedEdge["hbro", "safe"], DirectedEdge["hbro", "semigroups"], DirectedEdge["hbro", "stm-chans"], DirectedEdge["hbro", "text"], DirectedEdge["hbro", "time"], DirectedEdge["hbro", "transformers"], DirectedEdge["hbro", "transformers-base"], DirectedEdge["hbro", "unix"], DirectedEdge["hbro", "uuid"], DirectedEdge["hbro", "zeromq4-haskell"], DirectedEdge["hbro-contrib", "aeson"], DirectedEdge["hbro-contrib", "aeson-pretty"], DirectedEdge["hbro-contrib", "base"], DirectedEdge["hbro-contrib", "bytestring"], DirectedEdge["hbro-contrib", "classy-prelude"], DirectedEdge["hbro-contrib", "containers"], DirectedEdge["hbro-contrib", "directory"], DirectedEdge["hbro-contrib", "glib"], DirectedEdge["hbro-contrib", "hbro"], DirectedEdge["hbro-contrib", "lens"], DirectedEdge["hbro-contrib", "monad-control"], DirectedEdge["hbro-contrib", "mtl"], DirectedEdge["hbro-contrib", "network-uri"], DirectedEdge["hbro-contrib", "pango"], DirectedEdge["hbro-contrib", "parsec"], DirectedEdge["hbro-contrib", "process"], DirectedEdge["hbro-contrib", "resourcet"], DirectedEdge["hbro-contrib", "safe"], DirectedEdge["hbro-contrib", "text"], DirectedEdge["hbro-contrib", "time"], DirectedEdge["hbro-contrib", "transformers-base"], DirectedEdge["hbro-contrib", "unix"], DirectedEdge["hburg", "array"], DirectedEdge["hburg", "base"], DirectedEdge["hburg", "containers"], DirectedEdge["hburg", "filepath"], DirectedEdge["hburg", "mtl"], DirectedEdge["hcc", "base"], DirectedEdge["hcc", "bytestring"], DirectedEdge["hcc", "language-c"], DirectedEdge["hcg-minus", "base"], DirectedEdge["hcg-minus", "colour"], DirectedEdge["hcg-minus-cairo", "base"], DirectedEdge["hcg-minus-cairo", "cairo"], DirectedEdge["hcg-minus-cairo", "colour"], DirectedEdge["hcg-minus-cairo", "filepath"], DirectedEdge["hcg-minus-cairo", "hcg-minus"], DirectedEdge["hcg-minus-cairo", "utf8-string"], DirectedEdge["hcheat", "base"], DirectedEdge["hcheat", "mps"], DirectedEdge["hchesslib", "array"], DirectedEdge["hchesslib", "attoparsec"], DirectedEdge["hchesslib", "base"], DirectedEdge["hchesslib", "containers"], DirectedEdge["hchesslib", "text"], DirectedEdge["hcltest", "base"], DirectedEdge["hcltest", "bytestring"], DirectedEdge["hcltest", "directory"], DirectedEdge["hcltest", "dlist"], DirectedEdge["hcltest", "either"], DirectedEdge["hcltest", "filepath"], DirectedEdge["hcltest", "free"], DirectedEdge["hcltest", "lens"], DirectedEdge["hcltest", "mmorph"], DirectedEdge["hcltest", "monad-control"], DirectedEdge["hcltest", "mtl"], DirectedEdge["hcltest", "optparse-applicative"], DirectedEdge["hcltest", "process"], DirectedEdge["hcltest", "random-shuffle"], DirectedEdge["hcltest", "split"], DirectedEdge["hcltest", "stm"], DirectedEdge["hcltest", "tagged"], DirectedEdge["hcltest", "tasty"], DirectedEdge["hcltest", "temporary"], DirectedEdge["hcltest", "text"], DirectedEdge["hcltest", "transformers"], DirectedEdge["hcltest", "transformers-base"], DirectedEdge["hcoap", "async"], DirectedEdge["hcoap", "base"], DirectedEdge["hcoap", "binary"], DirectedEdge["hcoap", "bytestring"], DirectedEdge["hcoap", "dns"], DirectedEdge["hcoap", "hcoap"], DirectedEdge["hcoap", "iproute"], DirectedEdge["hcoap", "mtl"], DirectedEdge["hcoap", "network"], DirectedEdge["hcoap", "network-uri"], DirectedEdge["hcoap", "random"], DirectedEdge["hcoap", "stm"], DirectedEdge["hcoap", "time"], DirectedEdge["hcron", "base"], DirectedEdge["hcron", "bytestring"], DirectedEdge["hcron", "containers"], DirectedEdge["hcron", "directory"], DirectedEdge["hcron", "mtl"], DirectedEdge["hcron", "old-locale"], DirectedEdge["hcron", "pretty"], DirectedEdge["hcron", "process"], DirectedEdge["hcron", "random"], DirectedEdge["hcron", "stm"], DirectedEdge["hcron", "time"], DirectedEdge["hcube", "base"], DirectedEdge["hcube", "directory"], DirectedEdge["hcube", "HaskellForMaths"], DirectedEdge["hcube", "QuickCheck"], DirectedEdge["hcube", "text"], DirectedEdge["hcwiid", "base"], DirectedEdge["hcwiid", "unix"], DirectedEdge["hdaemonize", "base"], DirectedEdge["hdaemonize", "extensible-exceptions"], DirectedEdge["hdaemonize", "filepath"], DirectedEdge["hdaemonize", "hsyslog"], DirectedEdge["hdaemonize", "mtl"], DirectedEdge["hdaemonize", "unix"], DirectedEdge["hdaemonize-buildfix", "base"], DirectedEdge["hdaemonize-buildfix", "extensible-exceptions"], DirectedEdge["hdaemonize-buildfix", "filepath"], DirectedEdge["hdaemonize-buildfix", "hsyslog"], DirectedEdge["hdaemonize-buildfix", "mtl"], DirectedEdge["hdaemonize-buildfix", "unix"], DirectedEdge["hdbc-aeson", "aeson"], DirectedEdge["hdbc-aeson", "base"], DirectedEdge["hdbc-aeson", "convertible"], DirectedEdge["hdbc-aeson", "HDBC"], DirectedEdge["hdbc-aeson", "scientific"], DirectedEdge["hdbc-aeson", "text"], DirectedEdge["hdbc-aeson", "unordered-containers"], DirectedEdge["hdbc-aeson", "vector"], DirectedEdge["hdbc-postgresql-hstore", "HDBC-postgresql-hstore"], DirectedEdge["hdbc-postgresql-hstore", "attoparsec"], DirectedEdge["hdbc-postgresql-hstore", "base"], DirectedEdge["hdbc-postgresql-hstore", "containers"], DirectedEdge["hdbc-postgresql-hstore", "HDBC"], DirectedEdge["hdbc-postgresql-hstore", "text"], DirectedEdge["hdbc-tuple", "base"], DirectedEdge["hdbc-tuple", "convertible"], DirectedEdge["hdbc-tuple", "HDBC"], DirectedEdge["hdbc-tuple", "typical"], DirectedEdge["hdbi", "attoparsec"], DirectedEdge["hdbi", "base"], DirectedEdge["hdbi", "blaze-builder"], DirectedEdge["hdbi", "bytestring"], DirectedEdge["hdbi", "containers"], DirectedEdge["hdbi", "Decimal"], DirectedEdge["hdbi", "deepseq"], DirectedEdge["hdbi", "old-locale"], DirectedEdge["hdbi", "stm"], DirectedEdge["hdbi", "template-haskell"], DirectedEdge["hdbi", "text"], DirectedEdge["hdbi", "time"], DirectedEdge["hdbi", "uuid"], DirectedEdge["hdbi-conduit", "base"], DirectedEdge["hdbi-conduit", "conduit"], DirectedEdge["hdbi-conduit", "hdbi"], DirectedEdge["hdbi-conduit", "resourcet"], DirectedEdge["hdbi-conduit", "transformers"], DirectedEdge["hdbi-postgresql", "attoparsec"], DirectedEdge["hdbi-postgresql", "base"], DirectedEdge["hdbi-postgresql", "blaze-builder"], DirectedEdge["hdbi-postgresql", "bytestring"], DirectedEdge["hdbi-postgresql", "hdbi"], DirectedEdge["hdbi-postgresql", "mtl"], DirectedEdge["hdbi-postgresql", "old-locale"], DirectedEdge["hdbi-postgresql", "postgresql-libpq"], DirectedEdge["hdbi-postgresql", "postgresql-simple"], DirectedEdge["hdbi-postgresql", "safe"], DirectedEdge["hdbi-postgresql", "text"], DirectedEdge["hdbi-postgresql", "time"], DirectedEdge["hdbi-postgresql", "uuid"], DirectedEdge["hdbi-sqlite", "base"], DirectedEdge["hdbi-sqlite", "blaze-builder"], DirectedEdge["hdbi-sqlite", "bytestring"], DirectedEdge["hdbi-sqlite", "direct-sqlite"], DirectedEdge["hdbi-sqlite", "hdbi"], DirectedEdge["hdbi-sqlite", "text"], DirectedEdge["hdbi-tests", "base"], DirectedEdge["hdbi-tests", "bytestring"], DirectedEdge["hdbi-tests", "containers"], DirectedEdge["hdbi-tests", "Decimal"], DirectedEdge["hdbi-tests", "hdbi"], DirectedEdge["hdbi-tests", "HUnit"], DirectedEdge["hdbi-tests", "QuickCheck"], DirectedEdge["hdbi-tests", "quickcheck-assertions"], DirectedEdge["hdbi-tests", "quickcheck-instances"], DirectedEdge["hdbi-tests", "stm"], DirectedEdge["hdbi-tests", "test-framework"], DirectedEdge["hdbi-tests", "test-framework-hunit"], DirectedEdge["hdbi-tests", "text"], DirectedEdge["hdbi-tests", "time"], DirectedEdge["hdbi-tests", "uuid"], DirectedEdge["hdevtools", "base"], DirectedEdge["hdevtools", "bin-package-db"], DirectedEdge["hdevtools", "Cabal"], DirectedEdge["hdevtools", "cmdargs"], DirectedEdge["hdevtools", "directory"], DirectedEdge["hdevtools", "filepath"], DirectedEdge["hdevtools", "ghc"], DirectedEdge["hdevtools", "ghc-paths"], DirectedEdge["hdevtools", "network"], DirectedEdge["hdevtools", "process"], DirectedEdge["hdevtools", "syb"], DirectedEdge["hdevtools", "time"], DirectedEdge["hdevtools", "transformers"], DirectedEdge["hdevtools", "unix"], DirectedEdge["hdf", "base"], DirectedEdge["hdf", "directory"], DirectedEdge["hdf", "fgl"], DirectedEdge["hdf", "fgl-visualize"], DirectedEdge["hdf", "filepath"], DirectedEdge["hdf", "hosc"], DirectedEdge["hdf", "murmur-hash"], DirectedEdge["hdf", "process"], DirectedEdge["hdf", "split"], DirectedEdge["hdf", "transformers"], DirectedEdge["hdigest", "base"], DirectedEdge["hdigest", "cgi"], DirectedEdge["hdigest", "Crypto"], DirectedEdge["hdigest", "network"], DirectedEdge["hdigest", "parsec"], DirectedEdge["hdigest", "random"], DirectedEdge["hdigest", "time"], DirectedEdge["hdirect", "array"], DirectedEdge["hdirect", "base"], DirectedEdge["hdirect", "pretty"], DirectedEdge["hdis86", "base"], DirectedEdge["hdis86", "bytestring"], DirectedEdge["hdis86", "containers"], DirectedEdge["hdis86", "QuickCheck"], DirectedEdge["hdiscount", "base"], DirectedEdge["hdiscount", "bytestring"], DirectedEdge["hdm", "base"], DirectedEdge["hdm", "directory"], DirectedEdge["hdm", "process"], DirectedEdge["hdm", "unix"], DirectedEdge["hdm", "vty"], DirectedEdge["hdo", "aeson"], DirectedEdge["hdo", "base"], DirectedEdge["hdo", "bytestring"], DirectedEdge["hdo", "comonad"], DirectedEdge["hdo", "data-default"], DirectedEdge["hdo", "free"], DirectedEdge["hdo", "hdo"], DirectedEdge["hdo", "iproute"], DirectedEdge["hdo", "lens"], DirectedEdge["hdo", "mtl"], DirectedEdge["hdo", "network-uri"], DirectedEdge["hdo", "optparse-applicative"], DirectedEdge["hdo", "pretty"], DirectedEdge["hdo", "process"], DirectedEdge["hdo", "random"], DirectedEdge["hdo", "tagged"], DirectedEdge["hdo", "text"], DirectedEdge["hdo", "time"], DirectedEdge["hdo", "transformers"], DirectedEdge["hdo", "unix"], DirectedEdge["hdo", "unordered-containers"], DirectedEdge["hdo", "vector"], DirectedEdge["hdo", "wreq"], DirectedEdge["hdocs", "aeson"], DirectedEdge["hdocs", "aeson-pretty"], DirectedEdge["hdocs", "base"], DirectedEdge["hdocs", "bytestring"], DirectedEdge["hdocs", "Cabal"], DirectedEdge["hdocs", "containers"], DirectedEdge["hdocs", "filepath"], DirectedEdge["hdocs", "ghc"], DirectedEdge["hdocs", "ghc-paths"], DirectedEdge["hdocs", "haddock-api"], DirectedEdge["hdocs", "haddock-library"], DirectedEdge["hdocs", "hdocs"], DirectedEdge["hdocs", "mtl"], DirectedEdge["hdocs", "network"], DirectedEdge["hdocs", "process"], DirectedEdge["hdocs", "text"], DirectedEdge["hdph", "base"], DirectedEdge["hdph", "bytestring"], DirectedEdge["hdph", "cereal"], DirectedEdge["hdph", "containers"], DirectedEdge["hdph", "deepseq"], DirectedEdge["hdph", "hdph-closure"], DirectedEdge["hdph", "mtl"], DirectedEdge["hdph", "network"], DirectedEdge["hdph", "network-info"], DirectedEdge["hdph", "network-multicast"], DirectedEdge["hdph", "network-transport"], DirectedEdge["hdph", "network-transport-tcp"], DirectedEdge["hdph", "random"], DirectedEdge["hdph", "template-haskell"], DirectedEdge["hdph", "time"], DirectedEdge["hdph-closure", "array"], DirectedEdge["hdph-closure", "base"], DirectedEdge["hdph-closure", "bytestring"], DirectedEdge["hdph-closure", "cereal"], DirectedEdge["hdph-closure", "containers"], DirectedEdge["hdph-closure", "deepseq"], DirectedEdge["hdph-closure", "template-haskell"], DirectedEdge["hdr-histogram", "base"], DirectedEdge["hdr-histogram", "deepseq"], DirectedEdge["hdr-histogram", "primitive"], DirectedEdge["hdr-histogram", "QuickCheck"], DirectedEdge["hdr-histogram", "tagged"], DirectedEdge["hdr-histogram", "vector"], DirectedEdge["headergen", "aeson"], DirectedEdge["headergen", "aeson-pretty"], DirectedEdge["headergen", "base"], DirectedEdge["headergen", "bytestring"], DirectedEdge["headergen", "directory"], DirectedEdge["headergen", "filepath"], DirectedEdge["headergen", "haskeline"], DirectedEdge["headergen", "time"], DirectedEdge["heap", "base"], DirectedEdge["heaps", "base"], DirectedEdge["heapsort", "array"], DirectedEdge["heapsort", "base"], DirectedEdge["heapsort", "QuickCheck"], DirectedEdge["hebrew-time", "base"], DirectedEdge["hebrew-time", "time"], DirectedEdge["hecc", "base"], DirectedEdge["hecc", "cereal"], DirectedEdge["hecc", "crypto-api"], DirectedEdge["hedis", "base"], DirectedEdge["hedis", "bytestring"], DirectedEdge["hedis", "bytestring-lexing"], DirectedEdge["hedis", "deepseq"], DirectedEdge["hedis", "mtl"], DirectedEdge["hedis", "network"], DirectedEdge["hedis", "resource-pool"], DirectedEdge["hedis", "scanner"], DirectedEdge["hedis", "text"], DirectedEdge["hedis", "time"], DirectedEdge["hedis", "vector"], DirectedEdge["hedis-config", "aeson"], DirectedEdge["hedis-config", "base"], DirectedEdge["hedis-config", "bytestring"], DirectedEdge["hedis-config", "hedis"], DirectedEdge["hedis-config", "scientific"], DirectedEdge["hedis-config", "text"], DirectedEdge["hedis-config", "time"], DirectedEdge["hedis-monadic", "base"], DirectedEdge["hedis-monadic", "hedis"], DirectedEdge["hedis-monadic", "monad-control"], DirectedEdge["hedis-monadic", "mtl"], DirectedEdge["hedis-monadic", "transformers"], DirectedEdge["hedis-monadic", "transformers-base"], DirectedEdge["hedis-monadic", "transformers-compat"], DirectedEdge["hedis-pile", "base"], DirectedEdge["hedis-pile", "binary"], DirectedEdge["hedis-pile", "bytestring"], DirectedEdge["hedis-pile", "hedis"], DirectedEdge["hedis-pile", "hedis-tags"], DirectedEdge["hedis-pile", "string-conversions"], DirectedEdge["hedis-pile", "transformers"], DirectedEdge["hedis-simple", "base"], DirectedEdge["hedis-simple", "bytestring"], DirectedEdge["hedis-simple", "either"], DirectedEdge["hedis-simple", "hedis"], DirectedEdge["hedis-simple", "mtl"], DirectedEdge["hedis-tags", "base"], DirectedEdge["hedis-tags", "bytestring"], DirectedEdge["hedis-tags", "hedis"], DirectedEdge["hedn", "attoparsec"], DirectedEdge["hedn", "base"], DirectedEdge["hedn", "base-compat"], DirectedEdge["hedn", "bytestring"], DirectedEdge["hedn", "containers"], DirectedEdge["hedn", "deepseq"], DirectedEdge["hedn", "mtl"], DirectedEdge["hedn", "scientific"], DirectedEdge["hedn", "stringsearch"], DirectedEdge["hedn", "text"], DirectedEdge["hedn", "time"], DirectedEdge["hedn", "time-locale-compat"], DirectedEdge["hedn", "utf8-string"], DirectedEdge["hedn", "vector"], DirectedEdge["hein", "base"], DirectedEdge["hein", "bytestring"], DirectedEdge["hein", "directory"], DirectedEdge["hein", "filepath"], DirectedEdge["hein", "http-conduit"], DirectedEdge["hein", "process"], DirectedEdge["hein", "transformers"], DirectedEdge["heist", "aeson"], DirectedEdge["heist", "attoparsec"], DirectedEdge["heist", "base"], DirectedEdge["heist", "blaze-builder"], DirectedEdge["heist", "blaze-html"], DirectedEdge["heist", "bytestring"], DirectedEdge["heist", "containers"], DirectedEdge["heist", "directory"], DirectedEdge["heist", "directory-tree"], DirectedEdge["heist", "dlist"], DirectedEdge["heist", "either"], DirectedEdge["heist", "filepath"], DirectedEdge["heist", "hashable"], DirectedEdge["heist", "map-syntax"], DirectedEdge["heist", "MonadCatchIO-transformers"], DirectedEdge["heist", "mtl"], DirectedEdge["heist", "process"], DirectedEdge["heist", "random"], DirectedEdge["heist", "text"], DirectedEdge["heist", "time"], DirectedEdge["heist", "transformers"], DirectedEdge["heist", "unordered-containers"], DirectedEdge["heist", "vector"], DirectedEdge["heist", "xmlhtml"], DirectedEdge["heist-aeson", "aeson"], DirectedEdge["heist-aeson", "base"], DirectedEdge["heist-aeson", "blaze-builder"], DirectedEdge["heist-aeson", "bytestring"], DirectedEdge["heist-aeson", "containers"], DirectedEdge["heist-aeson", "heist"], DirectedEdge["heist-aeson", "monads-fd"], DirectedEdge["heist-aeson", "text"], DirectedEdge["heist-aeson", "vector"], DirectedEdge["heist-aeson", "xmlhtml"], DirectedEdge["heist-async", "base"], DirectedEdge["heist-async", "heist"], DirectedEdge["heist-async", "template-haskell"], DirectedEdge["heist-async", "text"], DirectedEdge["heist-async", "xmlhtml"], DirectedEdge["helics", "base"], DirectedEdge["helics", "bytestring"], DirectedEdge["helics", "bytestring-show"], DirectedEdge["helics", "data-default-class"], DirectedEdge["helics", "helics"], DirectedEdge["helics", "time"], DirectedEdge["helics", "unix"], DirectedEdge["helics-wai", "base"], DirectedEdge["helics-wai", "bytestring"], DirectedEdge["helics-wai", "data-default-class"], DirectedEdge["helics-wai", "helics"], DirectedEdge["helics-wai", "helics-wai"], DirectedEdge["helics-wai", "http-types"], DirectedEdge["helics-wai", "vault"], DirectedEdge["helics-wai", "wai"], DirectedEdge["helics-wai", "warp"], DirectedEdge["helisp", "base"], DirectedEdge["helisp", "containers"], DirectedEdge["helisp", "mtl"], DirectedEdge["helisp", "parsec"], DirectedEdge["helisp", "process"], DirectedEdge["helium", "base"], DirectedEdge["helium", "containers"], DirectedEdge["helium", "directory"], DirectedEdge["helium", "filepath"], DirectedEdge["helium", "lvmlib"], DirectedEdge["helium", "mtl"], DirectedEdge["helium", "network"], DirectedEdge["helium", "parsec"], DirectedEdge["helium", "process"], DirectedEdge["helium", "Top"], DirectedEdge["helium", "transformers"], DirectedEdge["helium", "wl-pprint"], DirectedEdge["helix", "aeson"], DirectedEdge["helix", "base"], DirectedEdge["helix", "blaze-builder"], DirectedEdge["helix", "bytestring"], DirectedEdge["helix", "case-insensitive"], DirectedEdge["helix", "containers"], DirectedEdge["helix", "cookie"], DirectedEdge["helix", "data-default-class"], DirectedEdge["helix", "filepath"], DirectedEdge["helix", "http-types"], DirectedEdge["helix", "mime-types"], DirectedEdge["helix", "monad-loops"], DirectedEdge["helix", "mtl"], DirectedEdge["helix", "path-pieces"], DirectedEdge["helix", "random"], DirectedEdge["helix", "template-haskell"], DirectedEdge["helix", "text"], DirectedEdge["helix", "vault"], DirectedEdge["helix", "wai"], DirectedEdge["helix", "wai-app-static"], DirectedEdge["helix", "wai-extra"], DirectedEdge["hell", "base"], DirectedEdge["hell", "bytestring"], DirectedEdge["hell", "conduit"], DirectedEdge["hell", "conduit-extra"], DirectedEdge["hell", "data-default"], DirectedEdge["hell", "directory"], DirectedEdge["hell", "filepath"], DirectedEdge["hell", "ghc"], DirectedEdge["hell", "ghc-paths"], DirectedEdge["hell", "haskeline"], DirectedEdge["hell", "hell"], DirectedEdge["hell", "monad-extras"], DirectedEdge["hell", "mtl"], DirectedEdge["hell", "old-time"], DirectedEdge["hell", "pdfinfo"], DirectedEdge["hell", "process"], DirectedEdge["hell", "process-extras"], DirectedEdge["hell", "resourcet"], DirectedEdge["hell", "shell-conduit"], DirectedEdge["hell", "split"], DirectedEdge["hell", "template-haskell"], DirectedEdge["hell", "text"], DirectedEdge["hell", "time"], DirectedEdge["hell", "transformers"], DirectedEdge["hell", "unix"], DirectedEdge["hell", "utf8-string"], DirectedEdge["hellage", "base"], DirectedEdge["hellage", "bytestring"], DirectedEdge["hellage", "containers"], DirectedEdge["hellage", "directory"], DirectedEdge["hellage", "hellnet"], DirectedEdge["hellage", "hjpath"], DirectedEdge["hellage", "hjson"], DirectedEdge["hellage", "HTTP"], DirectedEdge["hellage", "Lucu"], DirectedEdge["hellage", "mtl"], DirectedEdge["hellage", "network"], DirectedEdge["hellage", "regex-pcre"], DirectedEdge["hellage", "safe"], DirectedEdge["hellage", "stm"], DirectedEdge["hellage", "tar"], DirectedEdge["hellage", "utf8-string"], DirectedEdge["hellage", "zlib"], DirectedEdge["hellnet", "base"], DirectedEdge["hellnet", "bytestring"], DirectedEdge["hellnet", "containers"], DirectedEdge["hellnet", "Crypto"], DirectedEdge["hellnet", "directory"], DirectedEdge["hellnet", "filepath"], DirectedEdge["hellnet", "hjpath"], DirectedEdge["hellnet", "hjson"], DirectedEdge["hellnet", "HTTP"], DirectedEdge["hellnet", "Lucu"], DirectedEdge["hellnet", "mtl"], DirectedEdge["hellnet", "network"], DirectedEdge["hellnet", "old-locale"], DirectedEdge["hellnet", "parsec"], DirectedEdge["hellnet", "pretty"], DirectedEdge["hellnet", "process"], DirectedEdge["hellnet", "random"], DirectedEdge["hellnet", "regex-posix"], DirectedEdge["hellnet", "RSA"], DirectedEdge["hellnet", "safe"], DirectedEdge["hellnet", "time"], DirectedEdge["hellnet", "unix"], DirectedEdge["hellnet", "uri"], DirectedEdge["hellnet", "utf8-string"], DirectedEdge["hello", "base"], DirectedEdge["helm", "base"], DirectedEdge["helm", "cairo"], DirectedEdge["helm", "containers"], DirectedEdge["helm", "cpu"], DirectedEdge["helm", "elerea"], DirectedEdge["helm", "filepath"], DirectedEdge["helm", "ghc-prim"], DirectedEdge["helm", "mtl"], DirectedEdge["helm", "pango"], DirectedEdge["helm", "random"], DirectedEdge["helm", "text"], DirectedEdge["helm", "time"], DirectedEdge["helm", "transformers"], DirectedEdge["help-esb", "aeson"], DirectedEdge["help-esb", "base"], DirectedEdge["help-esb", "bytestring"], DirectedEdge["help-esb", "containers"], DirectedEdge["help-esb", "MissingH"], DirectedEdge["help-esb", "network"], DirectedEdge["help-esb", "network-uri"], DirectedEdge["help-esb", "text"], DirectedEdge["help-esb", "uuid"], DirectedEdge["hemkay", "array"], DirectedEdge["hemkay", "base"], DirectedEdge["hemkay", "binary"], DirectedEdge["hemkay", "bytestring"], DirectedEdge["hemkay", "hemkay-core"], DirectedEdge["hemkay", "portaudio"], DirectedEdge["hemkay-core", "array"], DirectedEdge["hemkay-core", "base"], DirectedEdge["hemkay-core", "binary"], DirectedEdge["hemkay-core", "bytestring"], DirectedEdge["hemokit", "aeson"], DirectedEdge["hemokit", "base"], DirectedEdge["hemokit", "base64-bytestring"], DirectedEdge["hemokit", "bytestring"], DirectedEdge["hemokit", "cairo"], DirectedEdge["hemokit", "cipher-aes"], DirectedEdge["hemokit", "conduit"], DirectedEdge["hemokit", "deepseq"], DirectedEdge["hemokit", "deepseq-generics"], DirectedEdge["hemokit", "gtk"], DirectedEdge["hemokit", "hemokit"], DirectedEdge["hemokit", "hidapi"], DirectedEdge["hemokit", "mtl"], DirectedEdge["hemokit", "network-simple"], DirectedEdge["hemokit", "optparse-applicative"], DirectedEdge["hemokit", "pretty-show"], DirectedEdge["hemokit", "robot"], DirectedEdge["hemokit", "split"], DirectedEdge["hemokit", "svgcairo"], DirectedEdge["hemokit", "text"], DirectedEdge["hemokit", "time"], DirectedEdge["hemokit", "transformers"], DirectedEdge["hemokit", "vector"], DirectedEdge["hemokit", "vector-fftw"], DirectedEdge["hemokit", "websockets"], DirectedEdge["hen", "base"], DirectedEdge["hen", "bitset"], DirectedEdge["hen", "exceptions"], DirectedEdge["hen", "mtl"], DirectedEdge["hen", "transformers"], DirectedEdge["hen", "uuid"], DirectedEdge["henet", "base"], DirectedEdge["henet", "bitset"], DirectedEdge["henet", "bytestring"], DirectedEdge["henet", "network"], DirectedEdge["henet", "typesafe-endian"], DirectedEdge["hepevt", "bytestring"], DirectedEdge["hepevt", "lha"], DirectedEdge["her-lexer", "base"], DirectedEdge["her-lexer", "mtl"], DirectedEdge["her-lexer", "split"], DirectedEdge["her-lexer-parsec", "base"], DirectedEdge["her-lexer-parsec", "her-lexer"], DirectedEdge["her-lexer-parsec", "parsec"], DirectedEdge["her-lexer-parsec", "transformers"], DirectedEdge["herbalizer", "base"], DirectedEdge["herbalizer", "containers"], DirectedEdge["herbalizer", "ghc-prim"], DirectedEdge["herbalizer", "indents"], DirectedEdge["herbalizer", "mtl"], DirectedEdge["herbalizer", "parsec"], DirectedEdge["herbalizer", "regex-posix"], DirectedEdge["here", "base"], DirectedEdge["here", "haskell-src-meta"], DirectedEdge["here", "mtl"], DirectedEdge["here", "parsec"], DirectedEdge["here", "template-haskell"], DirectedEdge["heredoc", "base"], DirectedEdge["heredoc", "template-haskell"], DirectedEdge["heredocs", "base"], DirectedEdge["heredocs", "doctest"], DirectedEdge["heredocs", "parsec"], DirectedEdge["heredocs", "template-haskell"], DirectedEdge["heredocs", "text"], DirectedEdge["herf-time", "base"], DirectedEdge["herf-time", "time"], DirectedEdge["hermes", "aeson"], DirectedEdge["hermes", "aeson-pretty"], DirectedEdge["hermes", "amqp"], DirectedEdge["hermes", "annotated-wl-pprint"], DirectedEdge["hermes", "ansi-terminal"], DirectedEdge["hermes", "api-tools"], DirectedEdge["hermes", "async"], DirectedEdge["hermes", "atlas"], DirectedEdge["hermes", "auto-update"], DirectedEdge["hermes", "base"], DirectedEdge["hermes", "base64-bytestring"], DirectedEdge["hermes", "binary"], DirectedEdge["hermes", "blaze-builder"], DirectedEdge["hermes", "blaze-html"], DirectedEdge["hermes", "bytestring"], DirectedEdge["hermes", "case-insensitive"], DirectedEdge["hermes", "cereal"], DirectedEdge["hermes", "configurator"], DirectedEdge["hermes", "containers"], DirectedEdge["hermes", "criterion"], DirectedEdge["hermes", "cryptohash"], DirectedEdge["hermes", "data-default"], DirectedEdge["hermes", "deepseq"], DirectedEdge["hermes", "ekg"], DirectedEdge["hermes", "ekg-core"], DirectedEdge["hermes", "exceptions"], DirectedEdge["hermes", "generics-sop"], DirectedEdge["hermes", "hackage-uploader"], DirectedEdge["hermes", "hastache"], DirectedEdge["hermes", "hermes"], DirectedEdge["hermes", "hslogger"], DirectedEdge["hermes", "http-client"], DirectedEdge["hermes", "http-conduit"], DirectedEdge["hermes", "http-types"], DirectedEdge["hermes", "io-streams"], DirectedEdge["hermes", "ixset-typed"], DirectedEdge["hermes", "lens"], DirectedEdge["hermes", "monad-loops"], DirectedEdge["hermes", "mtl"], DirectedEdge["hermes", "network-uri"], DirectedEdge["hermes", "old-locale"], DirectedEdge["hermes", "optparse-applicative"], DirectedEdge["hermes", "parsec"], DirectedEdge["hermes", "postgresql-simple"], DirectedEdge["hermes", "postgresql-simple-sop"], DirectedEdge["hermes", "process"], DirectedEdge["hermes", "QuickCheck"], DirectedEdge["hermes", "random"], DirectedEdge["hermes", "raw-strings-qq"], DirectedEdge["hermes", "resource-pool-catchio"], DirectedEdge["hermes", "retry"], DirectedEdge["hermes", "rncryptor"], DirectedEdge["hermes", "safe"], DirectedEdge["hermes", "safecopy"], DirectedEdge["hermes", "shelly"], DirectedEdge["hermes", "snap"], DirectedEdge["hermes", "snap-core"], DirectedEdge["hermes", "snap-cors"], DirectedEdge["hermes", "snap-loader-static"], DirectedEdge["hermes", "snap-server"], DirectedEdge["hermes", "snaplet-postgresql-simple"], DirectedEdge["hermes", "statsd-datadog"], DirectedEdge["hermes", "stm"], DirectedEdge["hermes", "string-conv"], DirectedEdge["hermes", "tasty"], DirectedEdge["hermes", "tasty-hspec"], DirectedEdge["hermes", "tasty-hunit"], DirectedEdge["hermes", "tasty-quickcheck"], DirectedEdge["hermes", "tasty-rerun"], DirectedEdge["hermes", "text"], DirectedEdge["hermes", "text-format"], DirectedEdge["hermes", "threads-supervisor"], DirectedEdge["hermes", "time"], DirectedEdge["hermes", "transformers"], DirectedEdge["hermes", "transformers-base"], DirectedEdge["hermes", "unix"], DirectedEdge["hermes", "unordered-containers"], DirectedEdge["hermit", "ansi-terminal"], DirectedEdge["hermit", "array"], DirectedEdge["hermit", "base"], DirectedEdge["hermit", "containers"], DirectedEdge["hermit", "data-default-class"], DirectedEdge["hermit", "directory"], DirectedEdge["hermit", "fail"], DirectedEdge["hermit", "ghc"], DirectedEdge["hermit", "haskeline"], DirectedEdge["hermit", "hermit"], DirectedEdge["hermit", "kure"], DirectedEdge["hermit", "marked-pretty"], DirectedEdge["hermit", "mtl"], DirectedEdge["hermit", "process"], DirectedEdge["hermit", "semigroups"], DirectedEdge["hermit", "stm"], DirectedEdge["hermit", "temporary"], DirectedEdge["hermit", "terminal-size"], DirectedEdge["hermit", "transformers"], DirectedEdge["hermit-syb", "base"], DirectedEdge["hermit-syb", "containers"], DirectedEdge["hermit-syb", "ghc"], DirectedEdge["hermit-syb", "ghc-prim"], DirectedEdge["hermit-syb", "hermit"], DirectedEdge["hermit-syb", "syb"], DirectedEdge["hermit-syb", "template-haskell"], DirectedEdge["hero-club-five-tenets", "base"], DirectedEdge["hero-club-five-tenets", "hero-club-five-tenets"], DirectedEdge["hero-club-five-tenets", "random"], DirectedEdge["hero-club-five-tenets", "text"], DirectedEdge["heroku", "base"], DirectedEdge["heroku", "network-uri"], DirectedEdge["heroku", "text"], DirectedEdge["heroku-persistent", "base"], DirectedEdge["heroku-persistent", "bytestring"], DirectedEdge["heroku-persistent", "heroku"], DirectedEdge["heroku-persistent", "persistent-postgresql"], DirectedEdge["heroku-persistent", "text"], DirectedEdge["herringbone", "base"], DirectedEdge["herringbone", "bytestring"], DirectedEdge["herringbone", "containers"], DirectedEdge["herringbone", "directory"], DirectedEdge["herringbone", "http-types"], DirectedEdge["herringbone", "mtl"], DirectedEdge["herringbone", "old-locale"], DirectedEdge["herringbone", "process"], DirectedEdge["herringbone", "process-listlike"], DirectedEdge["herringbone", "system-fileio"], DirectedEdge["herringbone", "system-filepath"], DirectedEdge["herringbone", "text"], DirectedEdge["herringbone", "time"], DirectedEdge["herringbone", "transformers"], DirectedEdge["herringbone", "unix-compat"], DirectedEdge["herringbone-embed", "base"], DirectedEdge["herringbone-embed", "bytestring"], DirectedEdge["herringbone-embed", "file-embed"], DirectedEdge["herringbone-embed", "herringbone"], DirectedEdge["herringbone-embed", "system-fileio"], DirectedEdge["herringbone-embed", "system-filepath"], DirectedEdge["herringbone-embed", "template-haskell"], DirectedEdge["herringbone-embed", "text"], DirectedEdge["herringbone-wai", "base"], DirectedEdge["herringbone-wai", "bytestring"], DirectedEdge["herringbone-wai", "herringbone"], DirectedEdge["herringbone-wai", "http-types"], DirectedEdge["herringbone-wai", "system-fileio"], DirectedEdge["herringbone-wai", "system-filepath"], DirectedEdge["herringbone-wai", "text"], DirectedEdge["herringbone-wai", "time"], DirectedEdge["herringbone-wai", "wai"], DirectedEdge["herringbone-wai", "wai-app-static"], DirectedEdge["hesh", "aeson"], DirectedEdge["hesh", "base"], DirectedEdge["hesh", "bytestring"], DirectedEdge["hesh", "Cabal"], DirectedEdge["hesh", "cartel"], DirectedEdge["hesh", "cmdtheline"], DirectedEdge["hesh", "containers"], DirectedEdge["hesh", "cryptohash"], DirectedEdge["hesh", "directory"], DirectedEdge["hesh", "filemanip"], DirectedEdge["hesh", "filepath"], DirectedEdge["hesh", "hackage-db"], DirectedEdge["hesh", "haskell-src-exts"], DirectedEdge["hesh", "hesh"], DirectedEdge["hesh", "parsec"], DirectedEdge["hesh", "process"], DirectedEdge["hesh", "template-haskell"], DirectedEdge["hesh", "text"], DirectedEdge["hesh", "time"], DirectedEdge["hesh", "transformers"], DirectedEdge["hesh", "uniplate"], DirectedEdge["hesql", "base"], DirectedEdge["hesql", "filepath"], DirectedEdge["hesql", "haskell-src"], DirectedEdge["hesql", "HDBC"], DirectedEdge["hesql", "HDBC-postgresql"], DirectedEdge["hesql", "hssqlppp"], DirectedEdge["hesql", "parsec"], DirectedEdge["hetero-dict", "aeson"], DirectedEdge["hetero-dict", "base"], DirectedEdge["hetero-dict", "primitive"], DirectedEdge["hetero-dict", "template-haskell"], DirectedEdge["hetero-dict", "text"], DirectedEdge["hetero-dict", "unordered-containers"], DirectedEdge["hetero-map", "base"], DirectedEdge["hetris", "array"], DirectedEdge["hetris", "base"], DirectedEdge["hetris", "hscurses"], DirectedEdge["hetris", "old-time"], DirectedEdge["hetris", "random"], DirectedEdge["heukarya", "base"], DirectedEdge["heukarya", "containers"], DirectedEdge["heukarya", "deepseq"], DirectedEdge["heukarya", "parallel"], DirectedEdge["heukarya", "random"], DirectedEdge["heukarya", "text"], DirectedEdge["hevolisa", "base"], DirectedEdge["hevolisa", "bytestring"], DirectedEdge["hevolisa", "cairo"], DirectedEdge["hevolisa", "filepath"], DirectedEdge["hevolisa-dph", "base"], DirectedEdge["hevolisa-dph", "bytestring"], DirectedEdge["hevolisa-dph", "cairo"], DirectedEdge["hevolisa-dph", "dph-seq"], DirectedEdge["hevolisa-dph", "filepath"], DirectedEdge["hex", "base"], DirectedEdge["hex", "bytestring"], DirectedEdge["hexdump", "base"], DirectedEdge["hexif", "hsexif"], DirectedEdge["hexif", "base"], DirectedEdge["hexif", "binary"], DirectedEdge["hexif", "bytestring"], DirectedEdge["hexif", "filepath"], DirectedEdge["hexpat", "base"], DirectedEdge["hexpat", "bytestring"], DirectedEdge["hexpat", "containers"], DirectedEdge["hexpat", "deepseq"], DirectedEdge["hexpat", "List"], DirectedEdge["hexpat", "text"], DirectedEdge["hexpat", "transformers"], DirectedEdge["hexpat", "utf8-string"], DirectedEdge["hexpat-iteratee", "base"], DirectedEdge["hexpat-iteratee", "bytestring"], DirectedEdge["hexpat-iteratee", "containers"], DirectedEdge["hexpat-iteratee", "extensible-exceptions"], DirectedEdge["hexpat-iteratee", "hexpat"], DirectedEdge["hexpat-iteratee", "iteratee"], DirectedEdge["hexpat-iteratee", "List"], DirectedEdge["hexpat-iteratee", "parallel"], DirectedEdge["hexpat-iteratee", "transformers"], DirectedEdge["hexpat-lens", "base"], DirectedEdge["hexpat-lens", "bytestring"], DirectedEdge["hexpat-lens", "deepseq"], DirectedEdge["hexpat-lens", "hexpat"], DirectedEdge["hexpat-lens", "hexpat-tagsoup"], DirectedEdge["hexpat-lens", "lens"], DirectedEdge["hexpat-pickle", "base"], DirectedEdge["hexpat-pickle", "bytestring"], DirectedEdge["hexpat-pickle", "containers"], DirectedEdge["hexpat-pickle", "extensible-exceptions"], DirectedEdge["hexpat-pickle", "hexpat"], DirectedEdge["hexpat-pickle", "text"], DirectedEdge["hexpat-pickle", "utf8-string"], DirectedEdge["hexpat-pickle-generic", "base"], DirectedEdge["hexpat-pickle-generic", "bytestring"], DirectedEdge["hexpat-pickle-generic", "hexpat"], DirectedEdge["hexpat-pickle-generic", "text"], DirectedEdge["hexpat-tagsoup", "base"], DirectedEdge["hexpat-tagsoup", "hexpat"], DirectedEdge["hexpat-tagsoup", "tagsoup"], DirectedEdge["hexpr", "base"], DirectedEdge["hexpr", "data-ref"], DirectedEdge["hexpr", "either"], DirectedEdge["hexpr", "mtl"], DirectedEdge["hexpr", "parsec"], DirectedEdge["hexpr", "transformers"], DirectedEdge["hexquote", "base"], DirectedEdge["hexquote", "bytestring"], DirectedEdge["hexquote", "containers"], DirectedEdge["hexquote", "parsec"], DirectedEdge["hexquote", "template-haskell"], DirectedEdge["hexstring", "aeson"], DirectedEdge["hexstring", "base"], DirectedEdge["hexstring", "base16-bytestring"], DirectedEdge["hexstring", "binary"], DirectedEdge["hexstring", "bytestring"], DirectedEdge["hexstring", "text"], DirectedEdge["heyefi", "base"], DirectedEdge["heyefi", "bytestring"], DirectedEdge["heyefi", "case-insensitive"], DirectedEdge["heyefi", "configurator"], DirectedEdge["heyefi", "directory"], DirectedEdge["heyefi", "exceptions"], DirectedEdge["heyefi", "filepath"], DirectedEdge["heyefi", "HandsomeSoup"], DirectedEdge["heyefi", "http-types"], DirectedEdge["heyefi", "hxt"], DirectedEdge["heyefi", "iso8601-time"], DirectedEdge["heyefi", "MissingH"], DirectedEdge["heyefi", "mtl"], DirectedEdge["heyefi", "multipart"], DirectedEdge["heyefi", "optparse-applicative"], DirectedEdge["heyefi", "random"], DirectedEdge["heyefi", "stm"], DirectedEdge["heyefi", "tar"], DirectedEdge["heyefi", "temporary"], DirectedEdge["heyefi", "text"], DirectedEdge["heyefi", "time"], DirectedEdge["heyefi", "transformers"], DirectedEdge["heyefi", "unix"], DirectedEdge["heyefi", "unordered-containers"], DirectedEdge["heyefi", "utf8-string"], DirectedEdge["heyefi", "wai"], DirectedEdge["heyefi", "warp"], DirectedEdge["hfann", "base"], DirectedEdge["hfd", "base"], DirectedEdge["hfd", "bytestring"], DirectedEdge["hfd", "haskeline"], DirectedEdge["hfd", "iteratee"], DirectedEdge["hfd", "MissingH"], DirectedEdge["hfd", "MonadCatchIO-transformers"], DirectedEdge["hfd", "network"], DirectedEdge["hfd", "transformers"], DirectedEdge["hfiar", "base"], DirectedEdge["hfiar", "eprocess"], DirectedEdge["hfiar", "mtl"], DirectedEdge["hfiar", "wx"], DirectedEdge["hfiar", "wxcore"], DirectedEdge["hflags", "base"], DirectedEdge["hflags", "containers"], DirectedEdge["hflags", "template-haskell"], DirectedEdge["hflags", "text"], DirectedEdge["hfmt", "ansi-wl-pprint"], DirectedEdge["hfmt", "base"], DirectedEdge["hfmt", "Cabal"], DirectedEdge["hfmt", "Diff"], DirectedEdge["hfmt", "directory"], DirectedEdge["hfmt", "filepath"], DirectedEdge["hfmt", "haskell-src-exts"], DirectedEdge["hfmt", "hfmt"], DirectedEdge["hfmt", "hindent"], DirectedEdge["hfmt", "hlint"], DirectedEdge["hfmt", "HUnit"], DirectedEdge["hfmt", "optparse-applicative"], DirectedEdge["hfmt", "pipes"], DirectedEdge["hfmt", "pretty"], DirectedEdge["hfmt", "stylish-haskell"], DirectedEdge["hfmt", "text"], DirectedEdge["hfoil", "base"], DirectedEdge["hfoil", "directory"], DirectedEdge["hfoil", "haskeline"], DirectedEdge["hfoil", "hfoil"], DirectedEdge["hfoil", "hmatrix"], DirectedEdge["hfoil", "HTTP"], DirectedEdge["hfoil", "linear"], DirectedEdge["hfoil", "not-gloss"], DirectedEdge["hfoil", "parsec"], DirectedEdge["hfoil", "transformers"], DirectedEdge["hformat", "base"], DirectedEdge["hformat", "base-unicode-symbols"], DirectedEdge["hformat", "text"], DirectedEdge["hfov", "base"], DirectedEdge["hfractal", "array"], DirectedEdge["hfractal", "base"], DirectedEdge["hfractal", "colour"], DirectedEdge["hfractal", "containers"], DirectedEdge["hfractal", "data-accessor"], DirectedEdge["hfractal", "data-accessor-template"], DirectedEdge["hfractal", "gd"], DirectedEdge["hfractal", "GLUT"], DirectedEdge["hfractal", "OpenGL"], DirectedEdge["hfractal", "OpenGLRaw"], DirectedEdge["hfsevents", "base"], DirectedEdge["hfsevents", "bytestring"], DirectedEdge["hfsevents", "cereal"], DirectedEdge["hfsevents", "mtl"], DirectedEdge["hfsevents", "text"], DirectedEdge["hfsevents", "unix"], DirectedEdge["hfusion", "base"], DirectedEdge["hfusion", "containers"], DirectedEdge["hfusion", "haskell-src"], DirectedEdge["hfusion", "mtl"], DirectedEdge["hfusion", "pretty"], DirectedEdge["hfusion", "syb"], DirectedEdge["hg-buildpackage", "base"], DirectedEdge["hg-buildpackage", "directory"], DirectedEdge["hg-buildpackage", "HSH"], DirectedEdge["hg-buildpackage", "hslogger"], DirectedEdge["hg-buildpackage", "MissingH"], DirectedEdge["hg-buildpackage", "network"], DirectedEdge["hg-buildpackage", "parsec"], DirectedEdge["hg-buildpackage", "regex-compat"], DirectedEdge["hg-buildpackage", "regex-posix"], DirectedEdge["hg-buildpackage", "unix"], DirectedEdge["hgal", "array"], DirectedEdge["hgal", "base"], DirectedEdge["hgal", "containers"], DirectedEdge["hgal", "mtl"], DirectedEdge["hgalib", "array"], DirectedEdge["hgalib", "base"], DirectedEdge["hgalib", "mtl"], DirectedEdge["hgdbmi", "base"], DirectedEdge["hgdbmi", "parsec"], DirectedEdge["hgdbmi", "process"], DirectedEdge["hgdbmi", "stm"], DirectedEdge["hgdbmi", "unix"], DirectedEdge["hgearman", "base"], DirectedEdge["hgearman", "binary"], DirectedEdge["hgearman", "bytestring"], DirectedEdge["hgearman", "monad-control"], DirectedEdge["hgearman", "mtl"], DirectedEdge["hgearman", "network"], DirectedEdge["hgearman", "resource-pool"], DirectedEdge["hgearman", "transformers"], DirectedEdge["hgearman", "transformers-base"], DirectedEdge["hgearman", "unordered-containers"], DirectedEdge["hgen", "base"], DirectedEdge["hgen", "directory"], DirectedEdge["hgen", "filepath"], DirectedEdge["hgen", "hylolib"], DirectedEdge["hgen", "mtl"], DirectedEdge["hgen", "random"], DirectedEdge["hgeometric", "base"], DirectedEdge["hgeometric", "containers"], DirectedEdge["hgeometry", "base"], DirectedEdge["hgeometry", "bifunctors"], DirectedEdge["hgeometry", "bytestring"], DirectedEdge["hgeometry", "containers"], DirectedEdge["hgeometry", "data-clist"], DirectedEdge["hgeometry", "fixed-vector"], DirectedEdge["hgeometry", "hexpat"], DirectedEdge["hgeometry", "lens"], DirectedEdge["hgeometry", "linear"], DirectedEdge["hgeometry", "mtl"], DirectedEdge["hgeometry", "parsec"], DirectedEdge["hgeometry", "random"], DirectedEdge["hgeometry", "semigroups"], DirectedEdge["hgeometry", "singletons"], DirectedEdge["hgeometry", "text"], DirectedEdge["hgeometry", "validation"], DirectedEdge["hgeometry", "vector"], DirectedEdge["hgeometry", "vinyl"], DirectedEdge["hgettext", "base"], DirectedEdge["hgettext", "Cabal"], DirectedEdge["hgettext", "containers"], DirectedEdge["hgettext", "directory"], DirectedEdge["hgettext", "filepath"], DirectedEdge["hgettext", "haskell-src-exts"], DirectedEdge["hgettext", "process"], DirectedEdge["hgettext", "setlocale"], DirectedEdge["hgettext", "uniplate"], DirectedEdge["hgithub", "aeson"], DirectedEdge["hgithub", "attoparsec"], DirectedEdge["hgithub", "base"], DirectedEdge["hgithub", "base64-bytestring"], DirectedEdge["hgithub", "bytestring"], DirectedEdge["hgithub", "case-insensitive"], DirectedEdge["hgithub", "cmdargs"], DirectedEdge["hgithub", "directory"], DirectedEdge["hgithub", "hgithub"], DirectedEdge["hgithub", "http-enumerator"], DirectedEdge["hgithub", "text"], DirectedEdge["hgl-example", "array"], DirectedEdge["hgl-example", "base"], DirectedEdge["hgl-example", "HGL"], DirectedEdge["hgl-example", "HTam"], DirectedEdge["hgl-example", "random"], DirectedEdge["hgl-example", "utility-ht"], DirectedEdge["hgom", "base"], DirectedEdge["hgom", "containers"], DirectedEdge["hgom", "directory"], DirectedEdge["hgom", "filepath"], DirectedEdge["hgom", "Glob"], DirectedEdge["hgom", "HUnit"], DirectedEdge["hgom", "mtl"], DirectedEdge["hgom", "parsec"], DirectedEdge["hgom", "process"], DirectedEdge["hgom", "QuickCheck"], DirectedEdge["hgom", "test-framework"], DirectedEdge["hgom", "test-framework-hunit"], DirectedEdge["hgom", "wl-pprint"], DirectedEdge["hgopher", "base"], DirectedEdge["hgopher", "bytestring"], DirectedEdge["hgopher", "network"], DirectedEdge["hgrev", "aeson"], DirectedEdge["hgrev", "base"], DirectedEdge["hgrev", "bytestring"], DirectedEdge["hgrev", "directory"], DirectedEdge["hgrev", "filepath"], DirectedEdge["hgrev", "process"], DirectedEdge["hgrev", "template-haskell"], DirectedEdge["hgrib", "base"], DirectedEdge["hgrib", "hgrib"], DirectedEdge["hgrib", "transformers"], DirectedEdge["hharp", "base"], DirectedEdge["hi", "ansi-wl-pprint"], DirectedEdge["hi", "base"], DirectedEdge["hi", "bytestring"], DirectedEdge["hi", "directory"], DirectedEdge["hi", "filepath"], DirectedEdge["hi", "optparse-applicative"], DirectedEdge["hi", "parsec"], DirectedEdge["hi", "process"], DirectedEdge["hi", "split"], DirectedEdge["hi", "template"], DirectedEdge["hi", "temporary"], DirectedEdge["hi", "text"], DirectedEdge["hi", "time"], DirectedEdge["hi3status", "aeson"], DirectedEdge["hi3status", "base"], DirectedEdge["hi3status", "binary"], DirectedEdge["hi3status", "bytestring"], DirectedEdge["hi3status", "dbus"], DirectedEdge["hi3status", "dyre"], DirectedEdge["hi3status", "hi3status"], DirectedEdge["hi3status", "network"], DirectedEdge["hi3status", "prefix-units"], DirectedEdge["hi3status", "process"], DirectedEdge["hi3status", "regex-pcre-builtin"], DirectedEdge["hi3status", "text"], DirectedEdge["hi3status", "time"], DirectedEdge["hi3status", "transformers"], DirectedEdge["hi3status", "vector"], DirectedEdge["hiccup", "base"], DirectedEdge["hiccup", "bytestring"], DirectedEdge["hiccup", "containers"], DirectedEdge["hiccup", "HUnit"], DirectedEdge["hiccup", "mtl"], DirectedEdge["hiccup", "parsec"], DirectedEdge["hiccup", "random"], DirectedEdge["hiccup", "readline"], DirectedEdge["hiccup", "time"], DirectedEdge["hichi", "array"], DirectedEdge["hichi", "base"], DirectedEdge["hichi", "bytestring"], DirectedEdge["hichi", "mtl"], DirectedEdge["hichi", "network"], DirectedEdge["hid", "base"], DirectedEdge["hid", "bytestring"], DirectedEdge["hid", "transformers"], DirectedEdge["hidapi", "base"], DirectedEdge["hidapi", "bytestring"], DirectedEdge["hidapi", "deepseq"], DirectedEdge["hidapi", "deepseq-generics"], DirectedEdge["hieraclus", "base"], DirectedEdge["hieraclus", "containers"], DirectedEdge["hieraclus", "HUnit"], DirectedEdge["hieraclus", "mtl"], DirectedEdge["hieraclus", "multiset"], DirectedEdge["hierarchical-clustering", "array"], DirectedEdge["hierarchical-clustering", "base"], DirectedEdge["hierarchical-clustering", "containers"], DirectedEdge["hierarchical-clustering-diagrams", "base"], DirectedEdge["hierarchical-clustering-diagrams", "diagrams-lib"], DirectedEdge["hierarchical-clustering-diagrams", "hierarchical-clustering"], DirectedEdge["hierarchical-exceptions", "base"], DirectedEdge["hierarchical-exceptions", "template-haskell"], DirectedEdge["hierarchy", "base"], DirectedEdge["hierarchy", "exceptions"], DirectedEdge["hierarchy", "free"], DirectedEdge["hierarchy", "mmorph"], DirectedEdge["hierarchy", "monad-control"], DirectedEdge["hierarchy", "mtl"], DirectedEdge["hierarchy", "pipes"], DirectedEdge["hierarchy", "semigroups"], DirectedEdge["hierarchy", "transformers"], DirectedEdge["hierarchy", "transformers-base"], DirectedEdge["hierarchy", "transformers-compat"], DirectedEdge["hiernotify", "base"], DirectedEdge["hiernotify", "directory"], DirectedEdge["hiernotify", "filepath"], DirectedEdge["hiernotify", "mtl"], DirectedEdge["hiernotify", "old-time"], DirectedEdge["hiernotify", "stm"], DirectedEdge["hiernotify", "timers-updatable"], DirectedEdge["highWaterMark", "base"], DirectedEdge["highWaterMark", "ghc"], DirectedEdge["higher-leveldb", "base"], DirectedEdge["higher-leveldb", "bytestring"], DirectedEdge["higher-leveldb", "cereal"], DirectedEdge["higher-leveldb", "data-default"], DirectedEdge["higher-leveldb", "leveldb-haskell"], DirectedEdge["higher-leveldb", "lifted-base"], DirectedEdge["higher-leveldb", "monad-control"], DirectedEdge["higher-leveldb", "mtl"], DirectedEdge["higher-leveldb", "resourcet"], DirectedEdge["higher-leveldb", "transformers"], DirectedEdge["higher-leveldb", "transformers-base"], DirectedEdge["higherorder", "base"], DirectedEdge["highjson", "attoparsec"], DirectedEdge["highjson", "base"], DirectedEdge["highjson", "buffer-builder"], DirectedEdge["highjson", "bytestring"], DirectedEdge["highjson", "containers"], DirectedEdge["highjson", "hashable"], DirectedEdge["highjson", "hvect"], DirectedEdge["highjson", "scientific"], DirectedEdge["highjson", "text"], DirectedEdge["highjson", "unordered-containers"], DirectedEdge["highjson", "vector"], DirectedEdge["highlight-versions", "ansi-terminal"], DirectedEdge["highlight-versions", "base"], DirectedEdge["highlight-versions", "Cabal"], DirectedEdge["highlight-versions", "containers"], DirectedEdge["highlight-versions", "hackage-db"], DirectedEdge["highlighter", "base"], DirectedEdge["highlighter", "blaze-html"], DirectedEdge["highlighter", "bytestring"], DirectedEdge["highlighter", "filepath"], DirectedEdge["highlighter", "mtl"], DirectedEdge["highlighter", "pcre-light"], DirectedEdge["highlighter", "text"], DirectedEdge["highlighter2", "base"], DirectedEdge["highlighter2", "blaze-html"], DirectedEdge["highlighter2", "blaze-markup"], DirectedEdge["highlighter2", "bytestring"], DirectedEdge["highlighter2", "containers"], DirectedEdge["highlighter2", "filepath"], DirectedEdge["highlighter2", "mtl"], DirectedEdge["highlighter2", "pcre-light"], DirectedEdge["highlighter2", "text"], DirectedEdge["highlighting-kate", "base"], DirectedEdge["highlighting-kate", "blaze-html"], DirectedEdge["highlighting-kate", "bytestring"], DirectedEdge["highlighting-kate", "containers"], DirectedEdge["highlighting-kate", "filepath"], DirectedEdge["highlighting-kate", "highlighting-kate"], DirectedEdge["highlighting-kate", "mtl"], DirectedEdge["highlighting-kate", "parsec"], DirectedEdge["highlighting-kate", "pcre-light"], DirectedEdge["highlighting-kate", "regex-pcre-builtin"], DirectedEdge["highlighting-kate", "utf8-string"], DirectedEdge["hills", "array"], DirectedEdge["hills", "base"], DirectedEdge["hills", "bytestring"], DirectedEdge["hills", "directory"], DirectedEdge["hills", "filepath"], DirectedEdge["hills", "optparse-applicative"], DirectedEdge["hills", "text"], DirectedEdge["hills", "transformers"], DirectedEdge["himerge", "base"], DirectedEdge["himerge", "directory"], DirectedEdge["himerge", "glib"], DirectedEdge["himerge", "gtk"], DirectedEdge["himerge", "mozembed"], DirectedEdge["himerge", "old-time"], DirectedEdge["himerge", "parallel"], DirectedEdge["himerge", "process"], DirectedEdge["himerge", "unix"], DirectedEdge["himg", "base"], DirectedEdge["himg", "bytestring"], DirectedEdge["himg", "directory"], DirectedEdge["himg", "gtk"], DirectedEdge["himg", "HTTP"], DirectedEdge["himg", "http-conduit"], DirectedEdge["himg", "network"], DirectedEdge["himg", "temporary"], DirectedEdge["himpy", "aeson"], DirectedEdge["himpy", "attoparsec"], DirectedEdge["himpy", "base"], DirectedEdge["himpy", "binary"], DirectedEdge["himpy", "bytestring"], DirectedEdge["himpy", "cereal"], DirectedEdge["himpy", "containers"], DirectedEdge["himpy", "MissingH"], DirectedEdge["himpy", "NetSNMP"], DirectedEdge["himpy", "network"], DirectedEdge["himpy", "old-time"], DirectedEdge["himpy", "protobuf"], DirectedEdge["himpy", "regex-posix"], DirectedEdge["himpy", "stm"], DirectedEdge["himpy", "text"], DirectedEdge["himpy", "type-level"], DirectedEdge["himpy", "unordered-containers"], DirectedEdge["himpy", "vector"], DirectedEdge["hindent", "base"], DirectedEdge["hindent", "containers"], DirectedEdge["hindent", "data-default"], DirectedEdge["hindent", "descriptive"], DirectedEdge["hindent", "directory"], DirectedEdge["hindent", "ghc-prim"], DirectedEdge["hindent", "haskell-src-exts"], DirectedEdge["hindent", "hindent"], DirectedEdge["hindent", "monad-loops"], DirectedEdge["hindent", "mtl"], DirectedEdge["hindent", "text"], DirectedEdge["hindent", "transformers"], DirectedEdge["hindley-milner", "base"], DirectedEdge["hindley-milner", "containers"], DirectedEdge["hindley-milner", "data-fix"], DirectedEdge["hindley-milner", "mtl"], DirectedEdge["hindley-milner", "transformers"], DirectedEdge["hinduce-associations-apriori", "base"], DirectedEdge["hinduce-associations-apriori", "containers"], DirectedEdge["hinduce-associations-apriori", "deepseq"], DirectedEdge["hinduce-associations-apriori", "hinduce-missingh"], DirectedEdge["hinduce-associations-apriori", "parallel"], DirectedEdge["hinduce-associations-apriori", "vector"], DirectedEdge["hinduce-classifier", "base"], DirectedEdge["hinduce-classifier", "hinduce-missingh"], DirectedEdge["hinduce-classifier", "layout"], DirectedEdge["hinduce-classifier-decisiontree", "base"], DirectedEdge["hinduce-classifier-decisiontree", "convertible"], DirectedEdge["hinduce-classifier-decisiontree", "hinduce-classifier"], DirectedEdge["hinduce-classifier-decisiontree", "hinduce-missingh"], DirectedEdge["hinduce-classifier-decisiontree", "layout"], DirectedEdge["hinduce-examples", "base"], DirectedEdge["hinduce-examples", "containers"], DirectedEdge["hinduce-examples", "convertible"], DirectedEdge["hinduce-examples", "csv"], DirectedEdge["hinduce-examples", "hinduce-associations-apriori"], DirectedEdge["hinduce-examples", "hinduce-classifier"], DirectedEdge["hinduce-examples", "hinduce-classifier-decisiontree"], DirectedEdge["hinduce-examples", "hinduce-missingh"], DirectedEdge["hinduce-examples", "layout"], DirectedEdge["hinduce-examples", "vector"], DirectedEdge["hinduce-missingh", "base"], DirectedEdge["hinotify", "base"], DirectedEdge["hinotify", "containers"], DirectedEdge["hinotify", "directory"], DirectedEdge["hinotify", "unix"], DirectedEdge["hinotify-bytestring", "base"], DirectedEdge["hinotify-bytestring", "bytestring"], DirectedEdge["hinotify-bytestring", "containers"], DirectedEdge["hinotify-bytestring", "directory"], DirectedEdge["hinotify-bytestring", "unix"], DirectedEdge["hinquire", "base"], DirectedEdge["hinquire", "bifunctors"], DirectedEdge["hinquire", "QuickCheck"], DirectedEdge["hinquire", "test-framework"], DirectedEdge["hinquire", "test-framework-th"], DirectedEdge["hinstaller", "base"], DirectedEdge["hinstaller", "bytestring"], DirectedEdge["hinstaller", "Cabal"], DirectedEdge["hinstaller", "directory"], DirectedEdge["hinstaller", "filepath"], DirectedEdge["hinstaller", "process"], DirectedEdge["hinstaller", "template-haskell"], DirectedEdge["hint", "base"], DirectedEdge["hint", "directory"], DirectedEdge["hint", "exceptions"], DirectedEdge["hint", "filepath"], DirectedEdge["hint", "ghc"], DirectedEdge["hint", "ghc-paths"], DirectedEdge["hint", "mtl"], DirectedEdge["hint", "random"], DirectedEdge["hint", "unix"], DirectedEdge["hint-server", "base"], DirectedEdge["hint-server", "eprocess"], DirectedEdge["hint-server", "exceptions"], DirectedEdge["hint-server", "hint"], DirectedEdge["hint-server", "monad-loops"], DirectedEdge["hint-server", "mtl"], DirectedEdge["hinvaders", "base"], DirectedEdge["hinvaders", "random"], DirectedEdge["hinze-streams", "base"], DirectedEdge["hinze-streams", "Stream"], DirectedEdge["hip", "base"], DirectedEdge["hip", "bytestring"], DirectedEdge["hip", "Chart"], DirectedEdge["hip", "Chart-cairo"], DirectedEdge["hip", "colour"], DirectedEdge["hip", "deepseq"], DirectedEdge["hip", "filepath"], DirectedEdge["hip", "JuicyPixels"], DirectedEdge["hip", "netpbm"], DirectedEdge["hip", "primitive"], DirectedEdge["hip", "process"], DirectedEdge["hip", "repa"], DirectedEdge["hip", "temporary"], DirectedEdge["hip", "vector"], DirectedEdge["hipbot", "aeson"], DirectedEdge["hipbot", "base"], DirectedEdge["hipbot", "bifunctors"], DirectedEdge["hipbot", "blaze-builder"], DirectedEdge["hipbot", "bytestring"], DirectedEdge["hipbot", "either"], DirectedEdge["hipbot", "exceptions"], DirectedEdge["hipbot", "http-client"], DirectedEdge["hipbot", "http-client-tls"], DirectedEdge["hipbot", "http-types"], DirectedEdge["hipbot", "jwt"], DirectedEdge["hipbot", "lens"], DirectedEdge["hipbot", "mtl"], DirectedEdge["hipbot", "network-uri"], DirectedEdge["hipbot", "postgresql-simple"], DirectedEdge["hipbot", "resource-pool"], DirectedEdge["hipbot", "safe"], DirectedEdge["hipbot", "stm"], DirectedEdge["hipbot", "text"], DirectedEdge["hipbot", "time"], DirectedEdge["hipbot", "transformers"], DirectedEdge["hipbot", "unordered-containers"], DirectedEdge["hipbot", "utf8-string"], DirectedEdge["hipbot", "wai"], DirectedEdge["hipbot", "wai-lens"], DirectedEdge["hipbot", "webcrank"], DirectedEdge["hipbot", "webcrank-wai"], DirectedEdge["hipbot", "wreq"], DirectedEdge["hipchat-hs", "aeson"], DirectedEdge["hipchat-hs", "aeson-casing"], DirectedEdge["hipchat-hs", "async"], DirectedEdge["hipchat-hs", "base"], DirectedEdge["hipchat-hs", "bytestring"], DirectedEdge["hipchat-hs", "either"], DirectedEdge["hipchat-hs", "http-client"], DirectedEdge["hipchat-hs", "lens"], DirectedEdge["hipchat-hs", "network-uri"], DirectedEdge["hipchat-hs", "servant"], DirectedEdge["hipchat-hs", "servant-client"], DirectedEdge["hipchat-hs", "split"], DirectedEdge["hipchat-hs", "string-conversions"], DirectedEdge["hipchat-hs", "text"], DirectedEdge["hipchat-hs", "time"], DirectedEdge["hipe", "base"], DirectedEdge["hipe", "containers"], DirectedEdge["hipe", "hgeometry"], DirectedEdge["hipe", "hxt"], DirectedEdge["hipe", "parsec"], DirectedEdge["hipe", "split"], DirectedEdge["hipe", "text"], DirectedEdge["hipe", "text-format"], DirectedEdge["hips", "base"], DirectedEdge["hips", "bytestring"], DirectedEdge["hips", "directory"], DirectedEdge["hips", "functors"], DirectedEdge["hips", "mtl"], DirectedEdge["hircules", "base"], DirectedEdge["hircules", "containers"], DirectedEdge["hircules", "directory"], DirectedEdge["hircules", "gtk"], DirectedEdge["hircules", "mtl"], DirectedEdge["hircules", "network"], DirectedEdge["hircules", "old-locale"], DirectedEdge["hircules", "old-time"], DirectedEdge["hircules", "time"], DirectedEdge["hircules", "utf8-string"], DirectedEdge["hirt", "attoparsec"], DirectedEdge["hirt", "base"], DirectedEdge["hirt", "cmdargs"], DirectedEdge["hirt", "containers"], DirectedEdge["hirt", "csv"], DirectedEdge["hirt", "hlbfgsb"], DirectedEdge["hirt", "hmatrix"], DirectedEdge["hirt", "mwc-random"], DirectedEdge["hirt", "numeric-extras"], DirectedEdge["hirt", "random"], DirectedEdge["hirt", "statistics"], DirectedEdge["hirt", "text"], DirectedEdge["hirt", "text-format"], DirectedEdge["hirt", "vector"], DirectedEdge["hirt", "vector-space"], DirectedEdge["hissmetrics", "base"], DirectedEdge["hissmetrics", "bytestring"], DirectedEdge["hissmetrics", "conduit"], DirectedEdge["hissmetrics", "http-conduit"], DirectedEdge["hissmetrics", "http-types"], DirectedEdge["hissmetrics", "text"], DirectedEdge["hissmetrics", "time"], DirectedEdge["hist-pl", "aeson"], DirectedEdge["hist-pl", "aeson-pretty"], DirectedEdge["hist-pl", "base"], DirectedEdge["hist-pl", "bytestring"], DirectedEdge["hist-pl", "cmdargs"], DirectedEdge["hist-pl", "containers"], DirectedEdge["hist-pl", "hist-pl-dawg"], DirectedEdge["hist-pl", "hist-pl-fusion"], DirectedEdge["hist-pl", "hist-pl-lexicon"], DirectedEdge["hist-pl", "hist-pl-lmf"], DirectedEdge["hist-pl", "hist-pl-transliter"], DirectedEdge["hist-pl", "morfeusz"], DirectedEdge["hist-pl", "pipes"], DirectedEdge["hist-pl", "polimorf"], DirectedEdge["hist-pl", "text"], DirectedEdge["hist-pl-dawg", "base"], DirectedEdge["hist-pl-dawg", "binary"], DirectedEdge["hist-pl-dawg", "containers"], DirectedEdge["hist-pl-dawg", "dawg"], DirectedEdge["hist-pl-dawg", "text"], DirectedEdge["hist-pl-dawg", "text-binary"], DirectedEdge["hist-pl-fusion", "base"], DirectedEdge["hist-pl-fusion", "binary"], DirectedEdge["hist-pl-fusion", "containers"], DirectedEdge["hist-pl-fusion", "dawg"], DirectedEdge["hist-pl-fusion", "hist-pl-dawg"], DirectedEdge["hist-pl-fusion", "hist-pl-lexicon"], DirectedEdge["hist-pl-fusion", "polimorf"], DirectedEdge["hist-pl-fusion", "text"], DirectedEdge["hist-pl-fusion", "text-binary"], DirectedEdge["hist-pl-lexicon", "base"], DirectedEdge["hist-pl-lexicon", "binary"], DirectedEdge["hist-pl-lexicon", "containers"], DirectedEdge["hist-pl-lexicon", "dawg"], DirectedEdge["hist-pl-lexicon", "directory"], DirectedEdge["hist-pl-lexicon", "filepath"], DirectedEdge["hist-pl-lexicon", "hist-pl-dawg"], DirectedEdge["hist-pl-lexicon", "hist-pl-types"], DirectedEdge["hist-pl-lexicon", "pipes"], DirectedEdge["hist-pl-lexicon", "text"], DirectedEdge["hist-pl-lexicon", "transformers"], DirectedEdge["hist-pl-lmf", "base"], DirectedEdge["hist-pl-lmf", "hist-pl-types"], DirectedEdge["hist-pl-lmf", "polysoup"], DirectedEdge["hist-pl-lmf", "text"], DirectedEdge["hist-pl-transliter", "base"], DirectedEdge["hist-pl-transliter", "parsec"], DirectedEdge["hist-pl-types", "base"], DirectedEdge["hist-pl-types", "binary"], DirectedEdge["hist-pl-types", "text"], DirectedEdge["hist-pl-types", "text-binary"], DirectedEdge["histogram-fill", "base"], DirectedEdge["histogram-fill", "deepseq"], DirectedEdge["histogram-fill", "ghc-prim"], DirectedEdge["histogram-fill", "monad-primitive"], DirectedEdge["histogram-fill", "primitive"], DirectedEdge["histogram-fill", "vector"], DirectedEdge["histogram-fill-binary", "base"], DirectedEdge["histogram-fill-binary", "binary"], DirectedEdge["histogram-fill-binary", "histogram-fill"], DirectedEdge["histogram-fill-binary", "vector"], DirectedEdge["histogram-fill-cereal", "base"], DirectedEdge["histogram-fill-cereal", "cereal"], DirectedEdge["histogram-fill-cereal", "histogram-fill"], DirectedEdge["histogram-fill-cereal", "vector"], DirectedEdge["historian", "base"], DirectedEdge["historian", "containers"], DirectedEdge["historian", "directory"], DirectedEdge["historian", "filepath"], DirectedEdge["historian", "process"], DirectedEdge["historian", "regex-compat"], DirectedEdge["historian", "regex-posix"], DirectedEdge["hit", "attoparsec"], DirectedEdge["hit", "base"], DirectedEdge["hit", "byteable"], DirectedEdge["hit", "bytestring"], DirectedEdge["hit", "containers"], DirectedEdge["hit", "cryptohash"], DirectedEdge["hit", "directory"], DirectedEdge["hit", "filepath"], DirectedEdge["hit", "hashable"], DirectedEdge["hit", "hashtables"], DirectedEdge["hit", "hit"], DirectedEdge["hit", "hourglass"], DirectedEdge["hit", "mtl"], DirectedEdge["hit", "parsec"], DirectedEdge["hit", "patience"], DirectedEdge["hit", "random"], DirectedEdge["hit", "system-fileio"], DirectedEdge["hit", "system-filepath"], DirectedEdge["hit", "unix-compat"], DirectedEdge["hit", "utf8-string"], DirectedEdge["hit", "vector"], DirectedEdge["hit", "zlib"], DirectedEdge["hit", "zlib-bindings"], DirectedEdge["hit-graph", "base"], DirectedEdge["hit-graph", "containers"], DirectedEdge["hit-graph", "fgl"], DirectedEdge["hit-graph", "hashable"], DirectedEdge["hit-graph", "hit"], DirectedEdge["hit-graph", "transformers"], DirectedEdge["hit-graph", "unordered-containers"], DirectedEdge["hjcase", "aeson"], DirectedEdge["hjcase", "base"], DirectedEdge["hjcase", "bytestring"], DirectedEdge["hjcase", "HUnit"], DirectedEdge["hjcase", "test-framework"], DirectedEdge["hjcase", "test-framework-hunit"], DirectedEdge["hjcase", "text"], DirectedEdge["hjcase", "unordered-containers"], DirectedEdge["hjcase", "vector"], DirectedEdge["hjpath", "base"], DirectedEdge["hjpath", "containers"], DirectedEdge["hjpath", "hjson"], DirectedEdge["hjpath", "parsec"], DirectedEdge["hjs", "array"], DirectedEdge["hjs", "base"], DirectedEdge["hjs", "bytestring"], DirectedEdge["hjs", "containers"], DirectedEdge["hjs", "directory"], DirectedEdge["hjs", "mtl"], DirectedEdge["hjs", "parsec"], DirectedEdge["hjs", "regex-compat"], DirectedEdge["hjsmin", "base"], DirectedEdge["hjsmin", "blaze-builder"], DirectedEdge["hjsmin", "bytestring"], DirectedEdge["hjsmin", "containers"], DirectedEdge["hjsmin", "language-javascript"], DirectedEdge["hjsmin", "optparse-applicative"], DirectedEdge["hjsmin", "text"], DirectedEdge["hjson", "base"], DirectedEdge["hjson", "containers"], DirectedEdge["hjson", "parsec"], DirectedEdge["hjson-query", "base"], DirectedEdge["hjson-query", "containers"], DirectedEdge["hjson-query", "hjson"], DirectedEdge["hjsonpointer", "aeson"], DirectedEdge["hjsonpointer", "base"], DirectedEdge["hjsonpointer", "hjsonpointer"], DirectedEdge["hjsonpointer", "QuickCheck"], DirectedEdge["hjsonpointer", "text"], DirectedEdge["hjsonpointer", "unordered-containers"], DirectedEdge["hjsonpointer", "vector"], DirectedEdge["hjsonschema", "aeson"], DirectedEdge["hjsonschema", "base"], DirectedEdge["hjsonschema", "bytestring"], DirectedEdge["hjsonschema", "containers"], DirectedEdge["hjsonschema", "file-embed"], DirectedEdge["hjsonschema", "filepath"], DirectedEdge["hjsonschema", "hjsonpointer"], DirectedEdge["hjsonschema", "http-client"], DirectedEdge["hjsonschema", "http-types"], DirectedEdge["hjsonschema", "pcre-heavy"], DirectedEdge["hjsonschema", "QuickCheck"], DirectedEdge["hjsonschema", "scientific"], DirectedEdge["hjsonschema", "semigroups"], DirectedEdge["hjsonschema", "text"], DirectedEdge["hjsonschema", "unordered-containers"], DirectedEdge["hjsonschema", "vector"], DirectedEdge["hkdf", "base"], DirectedEdge["hkdf", "byteable"], DirectedEdge["hkdf", "bytestring"], DirectedEdge["hkdf", "cryptohash"], DirectedEdge["hlatex", "base"], DirectedEdge["hlatex", "base-unicode-symbols"], DirectedEdge["hlatex", "containers"], DirectedEdge["hlatex", "derive"], DirectedEdge["hlatex", "directory"], DirectedEdge["hlatex", "filepath"], DirectedEdge["hlatex", "frquotes"], DirectedEdge["hlatex", "mtl"], DirectedEdge["hlatex", "process"], DirectedEdge["hlatex", "template-haskell"], DirectedEdge["hlatex", "transformers"], DirectedEdge["hlatex", "uniplate"], DirectedEdge["hlatex", "utf8-string"], DirectedEdge["hlbfgsb", "base"], DirectedEdge["hlbfgsb", "vector"], DirectedEdge["hlcm", "array"], DirectedEdge["hlcm", "base"], DirectedEdge["hlcm", "bytestring"], DirectedEdge["hlcm", "bytestring-csv"], DirectedEdge["hlcm", "containers"], DirectedEdge["hlcm", "parallel"], DirectedEdge["hleap", "aeson"], DirectedEdge["hleap", "base"], DirectedEdge["hleap", "containers"], DirectedEdge["hleap", "data-default"], DirectedEdge["hleap", "mtl"], DirectedEdge["hleap", "text"], DirectedEdge["hleap", "unordered-containers"], DirectedEdge["hleap", "websockets"], DirectedEdge["hledger", "base"], DirectedEdge["hledger", "base-compat"], DirectedEdge["hledger", "cmdargs"], DirectedEdge["hledger", "containers"], DirectedEdge["hledger", "csv"], DirectedEdge["hledger", "directory"], DirectedEdge["hledger", "filepath"], DirectedEdge["hledger", "haskeline"], DirectedEdge["hledger", "hledger"], DirectedEdge["hledger", "hledger-lib"], DirectedEdge["hledger", "HUnit"], DirectedEdge["hledger", "mtl"], DirectedEdge["hledger", "mtl-compat"], DirectedEdge["hledger", "old-locale"], DirectedEdge["hledger", "old-time"], DirectedEdge["hledger", "parsec"], DirectedEdge["hledger", "pretty-show"], DirectedEdge["hledger", "process"], DirectedEdge["hledger", "regex-tdfa"], DirectedEdge["hledger", "safe"], DirectedEdge["hledger", "shakespeare"], DirectedEdge["hledger", "shakespeare-text"], DirectedEdge["hledger", "split"], DirectedEdge["hledger", "tabular"], DirectedEdge["hledger", "terminfo"], DirectedEdge["hledger", "text"], DirectedEdge["hledger", "time"], DirectedEdge["hledger", "unordered-containers"], DirectedEdge["hledger", "utf8-string"], DirectedEdge["hledger", "wizards"], DirectedEdge["hledger-chart", "hledger-web"], DirectedEdge["hledger-chart", "base"], DirectedEdge["hledger-chart", "Chart"], DirectedEdge["hledger-chart", "cmdargs"], DirectedEdge["hledger-chart", "colour"], DirectedEdge["hledger-chart", "containers"], DirectedEdge["hledger-chart", "hledger"], DirectedEdge["hledger-chart", "hledger-lib"], DirectedEdge["hledger-chart", "HUnit"], DirectedEdge["hledger-chart", "safe"], DirectedEdge["hledger-chart", "time"], DirectedEdge["hledger-diff", "base"], DirectedEdge["hledger-diff", "hledger-lib"], DirectedEdge["hledger-diff", "time"], DirectedEdge["hledger-interest", "base"], DirectedEdge["hledger-interest", "Cabal"], DirectedEdge["hledger-interest", "Decimal"], DirectedEdge["hledger-interest", "hledger-lib"], DirectedEdge["hledger-interest", "mtl"], DirectedEdge["hledger-interest", "time"], DirectedEdge["hledger-irr", "base"], DirectedEdge["hledger-irr", "Cabal"], DirectedEdge["hledger-irr", "Decimal"], DirectedEdge["hledger-irr", "hledger-lib"], DirectedEdge["hledger-irr", "statistics"], DirectedEdge["hledger-irr", "time"], DirectedEdge["hledger-lib", "array"], DirectedEdge["hledger-lib", "base"], DirectedEdge["hledger-lib", "base-compat"], DirectedEdge["hledger-lib", "blaze-markup"], DirectedEdge["hledger-lib", "bytestring"], DirectedEdge["hledger-lib", "cmdargs"], DirectedEdge["hledger-lib", "containers"], DirectedEdge["hledger-lib", "csv"], DirectedEdge["hledger-lib", "Decimal"], DirectedEdge["hledger-lib", "deepseq"], DirectedEdge["hledger-lib", "directory"], DirectedEdge["hledger-lib", "filepath"], DirectedEdge["hledger-lib", "HUnit"], DirectedEdge["hledger-lib", "mtl"], DirectedEdge["hledger-lib", "mtl-compat"], DirectedEdge["hledger-lib", "old-locale"], DirectedEdge["hledger-lib", "old-time"], DirectedEdge["hledger-lib", "parsec"], DirectedEdge["hledger-lib", "pretty-show"], DirectedEdge["hledger-lib", "regex-tdfa"], DirectedEdge["hledger-lib", "safe"], DirectedEdge["hledger-lib", "split"], DirectedEdge["hledger-lib", "time"], DirectedEdge["hledger-lib", "transformers"], DirectedEdge["hledger-lib", "uglymemo"], DirectedEdge["hledger-lib", "utf8-string"], DirectedEdge["hledger-ui", "base"], DirectedEdge["hledger-ui", "base-compat"], DirectedEdge["hledger-ui", "brick"], DirectedEdge["hledger-ui", "cmdargs"], DirectedEdge["hledger-ui", "containers"], DirectedEdge["hledger-ui", "data-default"], DirectedEdge["hledger-ui", "filepath"], DirectedEdge["hledger-ui", "hledger"], DirectedEdge["hledger-ui", "hledger-lib"], DirectedEdge["hledger-ui", "HUnit"], DirectedEdge["hledger-ui", "lens"], DirectedEdge["hledger-ui", "old-locale"], DirectedEdge["hledger-ui", "pretty-show"], DirectedEdge["hledger-ui", "safe"], DirectedEdge["hledger-ui", "split"], DirectedEdge["hledger-ui", "time"], DirectedEdge["hledger-ui", "transformers"], DirectedEdge["hledger-ui", "vector"], DirectedEdge["hledger-ui", "vty"], DirectedEdge["hledger-vty", "hledger-web"], DirectedEdge["hledger-vty", "base"], DirectedEdge["hledger-vty", "cmdargs"], DirectedEdge["hledger-vty", "hledger"], DirectedEdge["hledger-vty", "hledger-lib"], DirectedEdge["hledger-vty", "HUnit"], DirectedEdge["hledger-vty", "safe"], DirectedEdge["hledger-vty", "time"], DirectedEdge["hledger-vty", "vty"], DirectedEdge["hledger-web", "base"], DirectedEdge["hledger-web", "base-compat"], DirectedEdge["hledger-web", "blaze-html"], DirectedEdge["hledger-web", "blaze-markup"], DirectedEdge["hledger-web", "bytestring"], DirectedEdge["hledger-web", "clientsession"], DirectedEdge["hledger-web", "cmdargs"], DirectedEdge["hledger-web", "conduit-extra"], DirectedEdge["hledger-web", "data-default"], DirectedEdge["hledger-web", "directory"], DirectedEdge["hledger-web", "filepath"], DirectedEdge["hledger-web", "hjsmin"], DirectedEdge["hledger-web", "hledger"], DirectedEdge["hledger-web", "hledger-lib"], DirectedEdge["hledger-web", "hledger-web"], DirectedEdge["hledger-web", "http-client"], DirectedEdge["hledger-web", "http-conduit"], DirectedEdge["hledger-web", "HUnit"], DirectedEdge["hledger-web", "json"], DirectedEdge["hledger-web", "old-locale"], DirectedEdge["hledger-web", "parsec"], DirectedEdge["hledger-web", "safe"], DirectedEdge["hledger-web", "shakespeare"], DirectedEdge["hledger-web", "template-haskell"], DirectedEdge["hledger-web", "text"], DirectedEdge["hledger-web", "time"], DirectedEdge["hledger-web", "transformers"], DirectedEdge["hledger-web", "wai"], DirectedEdge["hledger-web", "wai-extra"], DirectedEdge["hledger-web", "wai-handler-launch"], DirectedEdge["hledger-web", "warp"], DirectedEdge["hledger-web", "yaml"], DirectedEdge["hledger-web", "yesod"], DirectedEdge["hledger-web", "yesod-core"], DirectedEdge["hledger-web", "yesod-form"], DirectedEdge["hledger-web", "yesod-static"], DirectedEdge["hlibBladeRF", "base"], DirectedEdge["hlibBladeRF", "bindings-DSL"], DirectedEdge["hlibBladeRF", "bytestring"], DirectedEdge["hlibev", "base"], DirectedEdge["hlibev", "network"], DirectedEdge["hlibfam", "base"], DirectedEdge["hlibgit2", "base"], DirectedEdge["hlibgit2", "bindings-DSL"], DirectedEdge["hlibgit2", "zlib"], DirectedEdge["hlibsass", "base"], DirectedEdge["hlint", "ansi-terminal"], DirectedEdge["hlint", "base"], DirectedEdge["hlint", "cmdargs"], DirectedEdge["hlint", "containers"], DirectedEdge["hlint", "cpphs"], DirectedEdge["hlint", "directory"], DirectedEdge["hlint", "extra"], DirectedEdge["hlint", "filepath"], DirectedEdge["hlint", "haskell-src-exts"], DirectedEdge["hlint", "hlint"], DirectedEdge["hlint", "hscolour"], DirectedEdge["hlint", "process"], DirectedEdge["hlint", "refact"], DirectedEdge["hlint", "transformers"], DirectedEdge["hlint", "uniplate"], DirectedEdge["hlogger", "base"], DirectedEdge["hlogger", "old-locale"], DirectedEdge["hlogger", "time"], DirectedEdge["hlongurl", "base"], DirectedEdge["hlongurl", "bytestring"], DirectedEdge["hlongurl", "curl"], DirectedEdge["hlongurl", "json"], DirectedEdge["hlongurl", "regex-base"], DirectedEdge["hlongurl", "regex-posix"], DirectedEdge["hls", "base"], DirectedEdge["hls", "containers"], DirectedEdge["hls", "hcg-minus"], DirectedEdge["hls", "hps"], DirectedEdge["hlwm", "base"], DirectedEdge["hlwm", "hlwm"], DirectedEdge["hlwm", "stm"], DirectedEdge["hlwm", "transformers"], DirectedEdge["hlwm", "unix"], DirectedEdge["hly", "base"], DirectedEdge["hly", "directory"], DirectedEdge["hly", "filepath"], DirectedEdge["hly", "hmt"], DirectedEdge["hly", "process"], DirectedEdge["hmark", "base"], DirectedEdge["hmark", "bytestring"], DirectedEdge["hmark", "random"], DirectedEdge["hmark", "safe"], DirectedEdge["hmark", "tokyocabinet-haskell"], DirectedEdge["hmark", "utf8-string"], DirectedEdge["hmarkup", "base"], DirectedEdge["hmarkup", "containers"], DirectedEdge["hmarkup", "mtl"], DirectedEdge["hmarkup", "network"], DirectedEdge["hmarkup", "parsec"], DirectedEdge["hmarkup", "xhtml"], DirectedEdge["hmatrix", "array"], DirectedEdge["hmatrix", "base"], DirectedEdge["hmatrix", "binary"], DirectedEdge["hmatrix", "bytestring"], DirectedEdge["hmatrix", "deepseq"], DirectedEdge["hmatrix", "random"], DirectedEdge["hmatrix", "split"], DirectedEdge["hmatrix", "storable-complex"], DirectedEdge["hmatrix", "vector"], DirectedEdge["hmatrix-banded", "base"], DirectedEdge["hmatrix-banded", "hmatrix"], DirectedEdge["hmatrix-banded", "transformers"], DirectedEdge["hmatrix-csv", "base"], DirectedEdge["hmatrix-csv", "bytestring"], DirectedEdge["hmatrix-csv", "cassava"], DirectedEdge["hmatrix-csv", "hmatrix"], DirectedEdge["hmatrix-csv", "vector"], DirectedEdge["hmatrix-glpk", "base"], DirectedEdge["hmatrix-glpk", "containers"], DirectedEdge["hmatrix-glpk", "hmatrix"], DirectedEdge["hmatrix-gsl", "array"], DirectedEdge["hmatrix-gsl", "base"], DirectedEdge["hmatrix-gsl", "hmatrix"], DirectedEdge["hmatrix-gsl", "process"], DirectedEdge["hmatrix-gsl", "random"], DirectedEdge["hmatrix-gsl", "vector"], DirectedEdge["hmatrix-gsl-stats", "base"], DirectedEdge["hmatrix-gsl-stats", "binary"], DirectedEdge["hmatrix-gsl-stats", "hmatrix"], DirectedEdge["hmatrix-gsl-stats", "storable-complex"], DirectedEdge["hmatrix-gsl-stats", "vector"], DirectedEdge["hmatrix-mmap", "base"], DirectedEdge["hmatrix-mmap", "hmatrix"], DirectedEdge["hmatrix-mmap", "mmap"], DirectedEdge["hmatrix-nipals", "base"], DirectedEdge["hmatrix-nipals", "hmatrix"], DirectedEdge["hmatrix-nipals", "QuickCheck"], DirectedEdge["hmatrix-nipals", "test-framework"], DirectedEdge["hmatrix-quadprogpp", "base"], DirectedEdge["hmatrix-quadprogpp", "hmatrix"], DirectedEdge["hmatrix-quadprogpp", "vector"], DirectedEdge["hmatrix-repa", "base"], DirectedEdge["hmatrix-repa", "hmatrix"], DirectedEdge["hmatrix-repa", "repa"], DirectedEdge["hmatrix-repa", "vector"], DirectedEdge["hmatrix-special", "base"], DirectedEdge["hmatrix-special", "hmatrix"], DirectedEdge["hmatrix-special", "hmatrix-gsl"], DirectedEdge["hmatrix-static", "array"], DirectedEdge["hmatrix-static", "base"], DirectedEdge["hmatrix-static", "haskell-src-meta"], DirectedEdge["hmatrix-static", "hmatrix"], DirectedEdge["hmatrix-static", "parsec"], DirectedEdge["hmatrix-static", "template-haskell"], DirectedEdge["hmatrix-static", "tfp"], DirectedEdge["hmatrix-svdlibc", "base"], DirectedEdge["hmatrix-svdlibc", "hmatrix"], DirectedEdge["hmatrix-syntax", "base"], DirectedEdge["hmatrix-syntax", "haskell-src-exts"], DirectedEdge["hmatrix-syntax", "haskell-src-meta"], DirectedEdge["hmatrix-syntax", "hmatrix"], DirectedEdge["hmatrix-syntax", "template-haskell"], DirectedEdge["hmatrix-tests", "base"], DirectedEdge["hmatrix-tests", "deepseq"], DirectedEdge["hmatrix-tests", "hmatrix"], DirectedEdge["hmatrix-tests", "hmatrix-gsl"], DirectedEdge["hmatrix-tests", "HUnit"], DirectedEdge["hmatrix-tests", "QuickCheck"], DirectedEdge["hmatrix-tests", "random"], DirectedEdge["hmeap", "array"], DirectedEdge["hmeap", "base"], DirectedEdge["hmeap", "bytestring"], DirectedEdge["hmeap", "bytestring-lexing"], DirectedEdge["hmeap", "delimited-text"], DirectedEdge["hmeap", "parsec"], DirectedEdge["hmeap-utils", "array"], DirectedEdge["hmeap-utils", "base"], DirectedEdge["hmeap-utils", "bytestring"], DirectedEdge["hmeap-utils", "bytestring-lexing"], DirectedEdge["hmeap-utils", "delimited-text"], DirectedEdge["hmeap-utils", "gnuplot"], DirectedEdge["hmeap-utils", "hmatrix"], DirectedEdge["hmeap-utils", "hmeap"], DirectedEdge["hmeap-utils", "hosc"], DirectedEdge["hmeap-utils", "parsec"], DirectedEdge["hmemdb", "base"], DirectedEdge["hmemdb", "binary"], DirectedEdge["hmemdb", "containers"], DirectedEdge["hmemdb", "monad-stm"], DirectedEdge["hmemdb", "stm"], DirectedEdge["hmemdb", "transformers"], DirectedEdge["hmenu", "base"], DirectedEdge["hmenu", "MissingH"], DirectedEdge["hmenu", "process"], DirectedEdge["hmidi", "base"], DirectedEdge["hmidi", "stm"], DirectedEdge["hmk", "base"], DirectedEdge["hmk", "bytestring"], DirectedEdge["hmk", "containers"], DirectedEdge["hmk", "directory"], DirectedEdge["hmk", "filepath"], DirectedEdge["hmk", "mtl"], DirectedEdge["hmk", "parsec"], DirectedEdge["hmk", "pcre-light"], DirectedEdge["hmk", "process"], DirectedEdge["hmk", "unix"], DirectedEdge["hmm", "array"], DirectedEdge["hmm", "base"], DirectedEdge["hmm", "data-memocombinators"], DirectedEdge["hmm", "list-extras"], DirectedEdge["hmm", "logfloat"], DirectedEdge["hmm-hmatrix", "array"], DirectedEdge["hmm-hmatrix", "base"], DirectedEdge["hmm-hmatrix", "containers"], DirectedEdge["hmm-hmatrix", "explicit-exception"], DirectedEdge["hmm-hmatrix", "hmatrix"], DirectedEdge["hmm-hmatrix", "lazy-csv"], DirectedEdge["hmm-hmatrix", "non-empty"], DirectedEdge["hmm-hmatrix", "random"], DirectedEdge["hmm-hmatrix", "semigroups"], DirectedEdge["hmm-hmatrix", "transformers"], DirectedEdge["hmm-hmatrix", "utility-ht"], DirectedEdge["hmp3", "array"], DirectedEdge["hmp3", "base"], DirectedEdge["hmp3", "binary"], DirectedEdge["hmp3", "bytestring"], DirectedEdge["hmp3", "containers"], DirectedEdge["hmp3", "directory"], DirectedEdge["hmp3", "mersenne-random"], DirectedEdge["hmp3", "old-time"], DirectedEdge["hmp3", "pcre-light"], DirectedEdge["hmp3", "process"], DirectedEdge["hmp3", "unix"], DirectedEdge["hmp3", "zlib"], DirectedEdge["hmpfr", "base"], DirectedEdge["hmpfr", "integer-gmp"], DirectedEdge["hmpfr", "integer-simple"], DirectedEdge["hmt", "array"], DirectedEdge["hmt", "base"], DirectedEdge["hmt", "bytestring"], DirectedEdge["hmt", "colour"], DirectedEdge["hmt", "containers"], DirectedEdge["hmt", "data-ordlist"], DirectedEdge["hmt", "directory"], DirectedEdge["hmt", "filepath"], DirectedEdge["hmt", "lazy-csv"], DirectedEdge["hmt", "logict"], DirectedEdge["hmt", "multiset-comb"], DirectedEdge["hmt", "parsec"], DirectedEdge["hmt", "permutation"], DirectedEdge["hmt", "primes"], DirectedEdge["hmt", "safe"], DirectedEdge["hmt", "split"], DirectedEdge["hmt", "utf8-string"], DirectedEdge["hmt-diagrams", "base"], DirectedEdge["hmt-diagrams", "cairo"], DirectedEdge["hmt-diagrams", "colour"], DirectedEdge["hmt-diagrams", "filepath"], DirectedEdge["hmt-diagrams", "hcg-minus"], DirectedEdge["hmt-diagrams", "hcg-minus-cairo"], DirectedEdge["hmt-diagrams", "hmt"], DirectedEdge["hmt-diagrams", "html-minimalist"], DirectedEdge["hmt-diagrams", "process"], DirectedEdge["hmt-diagrams", "xml"], DirectedEdge["hmumps", "base"], DirectedEdge["hmumps", "containers"], DirectedEdge["hmumps", "haskeline"], DirectedEdge["hmumps", "mtl"], DirectedEdge["hmumps", "parsec"], DirectedEdge["hmumps", "QuickCheck"], DirectedEdge["hmumps", "regex-compat"], DirectedEdge["hmumps", "syb"], DirectedEdge["hmumps", "text"], DirectedEdge["hnetcdf", "base"], DirectedEdge["hnetcdf", "containers"], DirectedEdge["hnetcdf", "either"], DirectedEdge["hnetcdf", "errors"], DirectedEdge["hnetcdf", "filepath"], DirectedEdge["hnetcdf", "hmatrix"], DirectedEdge["hnetcdf", "hnetcdf"], DirectedEdge["hnetcdf", "repa"], DirectedEdge["hnetcdf", "transformers"], DirectedEdge["hnetcdf", "vector"], DirectedEdge["hnix", "ansi-wl-pprint"], DirectedEdge["hnix", "base"], DirectedEdge["hnix", "containers"], DirectedEdge["hnix", "data-fix"], DirectedEdge["hnix", "hnix"], DirectedEdge["hnix", "parsec"], DirectedEdge["hnix", "parsers"], DirectedEdge["hnix", "text"], DirectedEdge["hnix", "transformers"], DirectedEdge["hnix", "trifecta"], DirectedEdge["hnix", "unordered-containers"], DirectedEdge["hnn", "base"], DirectedEdge["hnn", "binary"], DirectedEdge["hnn", "bytestring"], DirectedEdge["hnn", "hmatrix"], DirectedEdge["hnn", "mwc-random"], DirectedEdge["hnn", "random"], DirectedEdge["hnn", "vector"], DirectedEdge["hnn", "vector-binary-instances"], DirectedEdge["hnn", "zlib"], DirectedEdge["hnop", "base"], DirectedEdge["ho-rewriting", "base"], DirectedEdge["ho-rewriting", "compdata"], DirectedEdge["ho-rewriting", "containers"], DirectedEdge["ho-rewriting", "mtl"], DirectedEdge["ho-rewriting", "patch-combinators"], DirectedEdge["hoauth", "base"], DirectedEdge["hoauth", "binary"], DirectedEdge["hoauth", "bytestring"], DirectedEdge["hoauth", "crypto-pubkey-types"], DirectedEdge["hoauth", "curl"], DirectedEdge["hoauth", "dataenc"], DirectedEdge["hoauth", "entropy"], DirectedEdge["hoauth", "mtl"], DirectedEdge["hoauth", "old-locale"], DirectedEdge["hoauth", "random"], DirectedEdge["hoauth", "RSA"], DirectedEdge["hoauth", "SHA"], DirectedEdge["hoauth", "time"], DirectedEdge["hoauth", "utf8-string"], DirectedEdge["hoauth2", "aeson"], DirectedEdge["hoauth2", "base"], DirectedEdge["hoauth2", "bytestring"], DirectedEdge["hoauth2", "containers"], DirectedEdge["hoauth2", "http-conduit"], DirectedEdge["hoauth2", "http-types"], DirectedEdge["hoauth2", "text"], DirectedEdge["hoauth2", "wai"], DirectedEdge["hoauth2", "warp"], DirectedEdge["hob", "base"], DirectedEdge["hob", "bytestring"], DirectedEdge["hob", "containers"], DirectedEdge["hob", "directory"], DirectedEdge["hob", "filepath"], DirectedEdge["hob", "glib"], DirectedEdge["hob", "gtk-largeTreeStore"], DirectedEdge["hob", "hob"], DirectedEdge["hob", "mtl"], DirectedEdge["hob", "pango"], DirectedEdge["hob", "system-filepath"], DirectedEdge["hob", "text"], DirectedEdge["hob", "transformers"], DirectedEdge["hob", "vector"], DirectedEdge["hobbes", "base"], DirectedEdge["hobbes", "filemanip"], DirectedEdge["hobbes", "filepath"], DirectedEdge["hobbes", "fsnotify"], DirectedEdge["hobbes", "system-filepath"], DirectedEdge["hobbes", "text"], DirectedEdge["hobbits", "base"], DirectedEdge["hobbits", "deepseq"], DirectedEdge["hobbits", "haskell-src-exts"], DirectedEdge["hobbits", "haskell-src-meta"], DirectedEdge["hobbits", "mtl"], DirectedEdge["hobbits", "syb"], DirectedEdge["hobbits", "tagged"], DirectedEdge["hobbits", "template-haskell"], DirectedEdge["hobbits", "th-expand-syns"], DirectedEdge["hobbits", "transformers"], DirectedEdge["hoe", "base"], DirectedEdge["hoe", "exceptions"], DirectedEdge["hoe", "hint"], DirectedEdge["hoe", "mtl"], DirectedEdge["hoe", "optparse-declarative"], DirectedEdge["hoe", "regex-posix"], DirectedEdge["hoe", "split"], DirectedEdge["hoe", "text"], DirectedEdge["hoe", "time"], DirectedEdge["hofix-mtl", "base"], DirectedEdge["hofix-mtl", "mtl"], DirectedEdge["hofix-mtl", "star-to-star"], DirectedEdge["hofix-mtl", "template-haskell"], DirectedEdge["hog", "base"], DirectedEdge["hog", "cmdargs"], DirectedEdge["hog", "filepath"], DirectedEdge["hog", "irc"], DirectedEdge["hog", "network"], DirectedEdge["hog", "old-locale"], DirectedEdge["hog", "time"], DirectedEdge["hog", "unix"], DirectedEdge["hogg", "array"], DirectedEdge["hogg", "base"], DirectedEdge["hogg", "bytestring"], DirectedEdge["hogg", "containers"], DirectedEdge["hogg", "HUnit"], DirectedEdge["hogg", "mtl"], DirectedEdge["hogg", "old-locale"], DirectedEdge["hogg", "random"], DirectedEdge["hogg", "time"], DirectedEdge["hogre", "base"], DirectedEdge["hogre", "cgen"], DirectedEdge["hogre-examples", "base"], DirectedEdge["hogre-examples", "hogre"], DirectedEdge["hois", "base"], DirectedEdge["hois", "hois"], DirectedEdge["hoist-error", "base"], DirectedEdge["hoist-error", "either"], DirectedEdge["hoist-error", "mtl"], DirectedEdge["hold-em", "base"], DirectedEdge["hold-em", "random"], DirectedEdge["hold-em", "safe"], DirectedEdge["hole", "base"], DirectedEdge["hole", "containers"], DirectedEdge["holey-format", "formatting"], DirectedEdge["holy-project", "aeson"], DirectedEdge["holy-project", "ansi-terminal"], DirectedEdge["holy-project", "base"], DirectedEdge["holy-project", "bytestring"], DirectedEdge["holy-project", "Cabal"], DirectedEdge["holy-project", "directory"], DirectedEdge["holy-project", "filepath"], DirectedEdge["holy-project", "hastache"], DirectedEdge["holy-project", "holy-project"], DirectedEdge["holy-project", "http-conduit"], DirectedEdge["holy-project", "HUnit"], DirectedEdge["holy-project", "lens"], DirectedEdge["holy-project", "lens-aeson"], DirectedEdge["holy-project", "process"], DirectedEdge["holy-project", "QuickCheck"], DirectedEdge["holy-project", "random"], DirectedEdge["holy-project", "smallcheck"], DirectedEdge["holy-project", "split"], DirectedEdge["holy-project", "syb"], DirectedEdge["holy-project", "tasty"], DirectedEdge["holy-project", "tasty-hunit"], DirectedEdge["holy-project", "tasty-quickcheck"], DirectedEdge["holy-project", "tasty-smallcheck"], DirectedEdge["holy-project", "text"], DirectedEdge["holy-project", "time"], DirectedEdge["holy-project", "unix"], DirectedEdge["homeomorphic", "base"], DirectedEdge["homeomorphic", "containers"], DirectedEdge["homeomorphic", "mtl"], DirectedEdge["homeomorphic", "QuickCheck"], DirectedEdge["hommage", "array"], DirectedEdge["hommage", "base"], DirectedEdge["hommage", "directory"], DirectedEdge["hommage", "random"], DirectedEdge["hommage", "time"], DirectedEdge["hommage-ds", "array"], DirectedEdge["hommage-ds", "base"], DirectedEdge["hommage-ds", "DirectSound"], DirectedEdge["hommage-ds", "hommage"], DirectedEdge["homplexity", "base"], DirectedEdge["homplexity", "containers"], DirectedEdge["homplexity", "cpphs"], DirectedEdge["homplexity", "deepseq"], DirectedEdge["homplexity", "directory"], DirectedEdge["homplexity", "filepath"], DirectedEdge["homplexity", "haskell-src-exts"], DirectedEdge["homplexity", "hflags"], DirectedEdge["homplexity", "template-haskell"], DirectedEdge["homplexity", "uniplate"], DirectedEdge["honi", "base"], DirectedEdge["honi", "bytestring"], DirectedEdge["honi", "text"], DirectedEdge["honk", "base"], DirectedEdge["hoobuddy", "aeson"], DirectedEdge["hoobuddy", "base"], DirectedEdge["hoobuddy", "bytestring"], DirectedEdge["hoobuddy", "Cabal"], DirectedEdge["hoobuddy", "directory"], DirectedEdge["hoobuddy", "filepath"], DirectedEdge["hoobuddy", "hoogle"], DirectedEdge["hoobuddy", "monad-loops"], DirectedEdge["hoobuddy", "mtl"], DirectedEdge["hoobuddy", "process"], DirectedEdge["hoobuddy", "yaml"], DirectedEdge["hood", "array"], DirectedEdge["hood", "base"], DirectedEdge["hood", "FPretty"], DirectedEdge["hood", "ghc-prim"], DirectedEdge["hood-off", "base"], DirectedEdge["hood2", "array"], DirectedEdge["hood2", "base"], DirectedEdge["hoodie", "array"], DirectedEdge["hoodie", "astar"], DirectedEdge["hoodie", "base"], DirectedEdge["hoodie", "containers"], DirectedEdge["hoodie", "hfov"], DirectedEdge["hoodie", "monad-loops"], DirectedEdge["hoodie", "mtl"], DirectedEdge["hoodie", "ncurses"], DirectedEdge["hoodie", "random"], DirectedEdge["hoodle", "base"], DirectedEdge["hoodle", "cmdargs"], DirectedEdge["hoodle", "configurator"], DirectedEdge["hoodle", "containers"], DirectedEdge["hoodle", "directory"], DirectedEdge["hoodle", "dyre"], DirectedEdge["hoodle", "filepath"], DirectedEdge["hoodle", "hoodle"], DirectedEdge["hoodle", "hoodle-core"], DirectedEdge["hoodle", "mtl"], DirectedEdge["hoodle-builder", "base"], DirectedEdge["hoodle-builder", "blaze-builder"], DirectedEdge["hoodle-builder", "bytestring"], DirectedEdge["hoodle-builder", "double-conversion"], DirectedEdge["hoodle-builder", "hoodle-types"], DirectedEdge["hoodle-builder", "lens"], DirectedEdge["hoodle-builder", "strict"], DirectedEdge["hoodle-builder", "text"], DirectedEdge["hoodle-core", "aeson"], DirectedEdge["hoodle-core", "aeson-pretty"], DirectedEdge["hoodle-core", "array"], DirectedEdge["hoodle-core", "attoparsec"], DirectedEdge["hoodle-core", "base"], DirectedEdge["hoodle-core", "base64-bytestring"], DirectedEdge["hoodle-core", "binary"], DirectedEdge["hoodle-core", "bytestring"], DirectedEdge["hoodle-core", "cairo"], DirectedEdge["hoodle-core", "case-insensitive"], DirectedEdge["hoodle-core", "cereal"], DirectedEdge["hoodle-core", "configurator"], DirectedEdge["hoodle-core", "containers"], DirectedEdge["hoodle-core", "coroutine-object"], DirectedEdge["hoodle-core", "dbus"], DirectedEdge["hoodle-core", "Diff"], DirectedEdge["hoodle-core", "directory"], DirectedEdge["hoodle-core", "dyre"], DirectedEdge["hoodle-core", "either"], DirectedEdge["hoodle-core", "errors"], DirectedEdge["hoodle-core", "filepath"], DirectedEdge["hoodle-core", "fsnotify"], DirectedEdge["hoodle-core", "gd"], DirectedEdge["hoodle-core", "gtk"], DirectedEdge["hoodle-core", "handa-gdata"], DirectedEdge["hoodle-core", "hoodle-builder"], DirectedEdge["hoodle-core", "hoodle-parser"], DirectedEdge["hoodle-core", "hoodle-publish"], DirectedEdge["hoodle-core", "hoodle-render"], DirectedEdge["hoodle-core", "hoodle-types"], DirectedEdge["hoodle-core", "http-client"], DirectedEdge["hoodle-core", "http-conduit"], DirectedEdge["hoodle-core", "http-types"], DirectedEdge["hoodle-core", "lens"], DirectedEdge["hoodle-core", "monad-loops"], DirectedEdge["hoodle-core", "mtl"], DirectedEdge["hoodle-core", "network"], DirectedEdge["hoodle-core", "network-info"], DirectedEdge["hoodle-core", "network-simple"], DirectedEdge["hoodle-core", "network-uri"], DirectedEdge["hoodle-core", "old-locale"], DirectedEdge["hoodle-core", "pango"], DirectedEdge["hoodle-core", "persistent"], DirectedEdge["hoodle-core", "persistent-sqlite"], DirectedEdge["hoodle-core", "persistent-template"], DirectedEdge["hoodle-core", "poppler"], DirectedEdge["hoodle-core", "process"], DirectedEdge["hoodle-core", "resourcet"], DirectedEdge["hoodle-core", "stm"], DirectedEdge["hoodle-core", "strict"], DirectedEdge["hoodle-core", "svgcairo"], DirectedEdge["hoodle-core", "system-filepath"], DirectedEdge["hoodle-core", "template-haskell"], DirectedEdge["hoodle-core", "text"], DirectedEdge["hoodle-core", "time"], DirectedEdge["hoodle-core", "transformers"], DirectedEdge["hoodle-core", "transformers-free"], DirectedEdge["hoodle-core", "unordered-containers"], DirectedEdge["hoodle-core", "uuid"], DirectedEdge["hoodle-core", "vector"], DirectedEdge["hoodle-core", "websockets"], DirectedEdge["hoodle-core", "xournal-parser"], DirectedEdge["hoodle-extra", "aeson"], DirectedEdge["hoodle-extra", "aeson-pretty"], DirectedEdge["hoodle-extra", "attoparsec"], DirectedEdge["hoodle-extra", "base"], DirectedEdge["hoodle-extra", "base64-bytestring"], DirectedEdge["hoodle-extra", "binary"], DirectedEdge["hoodle-extra", "bytestring"], DirectedEdge["hoodle-extra", "cmdargs"], DirectedEdge["hoodle-extra", "conduit"], DirectedEdge["hoodle-extra", "containers"], DirectedEdge["hoodle-extra", "directory"], DirectedEdge["hoodle-extra", "either"], DirectedEdge["hoodle-extra", "filepath"], DirectedEdge["hoodle-extra", "hoodle-parser"], DirectedEdge["hoodle-extra", "hoodle-types"], DirectedEdge["hoodle-extra", "http-conduit"], DirectedEdge["hoodle-extra", "lens"], DirectedEdge["hoodle-extra", "monad-loops"], DirectedEdge["hoodle-extra", "mtl"], DirectedEdge["hoodle-extra", "network-simple"], DirectedEdge["hoodle-extra", "process"], DirectedEdge["hoodle-extra", "resourcet"], DirectedEdge["hoodle-extra", "text"], DirectedEdge["hoodle-extra", "time"], DirectedEdge["hoodle-extra", "transformers"], DirectedEdge["hoodle-extra", "unordered-containers"], DirectedEdge["hoodle-extra", "xournal-parser"], DirectedEdge["hoodle-parser", "attoparsec"], DirectedEdge["hoodle-parser", "base"], DirectedEdge["hoodle-parser", "bytestring"], DirectedEdge["hoodle-parser", "containers"], DirectedEdge["hoodle-parser", "either"], DirectedEdge["hoodle-parser", "hoodle-types"], DirectedEdge["hoodle-parser", "lens"], DirectedEdge["hoodle-parser", "mtl"], DirectedEdge["hoodle-parser", "strict"], DirectedEdge["hoodle-parser", "text"], DirectedEdge["hoodle-parser", "transformers"], DirectedEdge["hoodle-parser", "xournal-types"], DirectedEdge["hoodle-publish", "attoparsec"], DirectedEdge["hoodle-publish", "base"], DirectedEdge["hoodle-publish", "bytestring"], DirectedEdge["hoodle-publish", "cairo"], DirectedEdge["hoodle-publish", "cmdargs"], DirectedEdge["hoodle-publish", "containers"], DirectedEdge["hoodle-publish", "directory"], DirectedEdge["hoodle-publish", "directory-tree"], DirectedEdge["hoodle-publish", "filepath"], DirectedEdge["hoodle-publish", "gtk"], DirectedEdge["hoodle-publish", "hoodle-parser"], DirectedEdge["hoodle-publish", "hoodle-publish"], DirectedEdge["hoodle-publish", "hoodle-render"], DirectedEdge["hoodle-publish", "hoodle-types"], DirectedEdge["hoodle-publish", "HTTP"], DirectedEdge["hoodle-publish", "io-streams"], DirectedEdge["hoodle-publish", "lens"], DirectedEdge["hoodle-publish", "mtl"], DirectedEdge["hoodle-publish", "network-uri"], DirectedEdge["hoodle-publish", "pdf-toolbox-core"], DirectedEdge["hoodle-publish", "pdf-toolbox-document"], DirectedEdge["hoodle-publish", "process"], DirectedEdge["hoodle-publish", "transformers"], DirectedEdge["hoodle-publish", "unordered-containers"], DirectedEdge["hoodle-publish", "uuid"], DirectedEdge["hoodle-render", "base"], DirectedEdge["hoodle-render", "base64-bytestring"], DirectedEdge["hoodle-render", "bytestring"], DirectedEdge["hoodle-render", "cairo"], DirectedEdge["hoodle-render", "containers"], DirectedEdge["hoodle-render", "directory"], DirectedEdge["hoodle-render", "filepath"], DirectedEdge["hoodle-render", "gd"], DirectedEdge["hoodle-render", "gtk"], DirectedEdge["hoodle-render", "hashable"], DirectedEdge["hoodle-render", "hoodle-types"], DirectedEdge["hoodle-render", "lens"], DirectedEdge["hoodle-render", "monad-loops"], DirectedEdge["hoodle-render", "mtl"], DirectedEdge["hoodle-render", "poppler"], DirectedEdge["hoodle-render", "stm"], DirectedEdge["hoodle-render", "strict"], DirectedEdge["hoodle-render", "svgcairo"], DirectedEdge["hoodle-render", "time"], DirectedEdge["hoodle-render", "transformers"], DirectedEdge["hoodle-render", "unix"], DirectedEdge["hoodle-render", "unordered-containers"], DirectedEdge["hoodle-render", "uuid"], DirectedEdge["hoodle-types", "base"], DirectedEdge["hoodle-types", "bytestring"], DirectedEdge["hoodle-types", "cereal"], DirectedEdge["hoodle-types", "containers"], DirectedEdge["hoodle-types", "lens"], DirectedEdge["hoodle-types", "mtl"], DirectedEdge["hoodle-types", "strict"], DirectedEdge["hoodle-types", "text"], DirectedEdge["hoodle-types", "uuid"], DirectedEdge["hoogle", "aeson"], DirectedEdge["hoogle", "array"], DirectedEdge["hoogle", "base"], DirectedEdge["hoogle", "binary"], DirectedEdge["hoogle", "blaze-builder"], DirectedEdge["hoogle", "bytestring"], DirectedEdge["hoogle", "Cabal"], DirectedEdge["hoogle", "case-insensitive"], DirectedEdge["hoogle", "cmdargs"], DirectedEdge["hoogle", "conduit"], DirectedEdge["hoogle", "containers"], DirectedEdge["hoogle", "deepseq"], DirectedEdge["hoogle", "directory"], DirectedEdge["hoogle", "filepath"], DirectedEdge["hoogle", "haskell-src-exts"], DirectedEdge["hoogle", "http-types"], DirectedEdge["hoogle", "old-locale"], DirectedEdge["hoogle", "parsec"], DirectedEdge["hoogle", "process"], DirectedEdge["hoogle", "QuickCheck"], DirectedEdge["hoogle", "random"], DirectedEdge["hoogle", "resourcet"], DirectedEdge["hoogle", "safe"], DirectedEdge["hoogle", "shake"], DirectedEdge["hoogle", "tagsoup"], DirectedEdge["hoogle", "text"], DirectedEdge["hoogle", "time"], DirectedEdge["hoogle", "transformers"], DirectedEdge["hoogle", "uniplate"], DirectedEdge["hoogle", "unix"], DirectedEdge["hoogle", "vector"], DirectedEdge["hoogle", "vector-algorithms"], DirectedEdge["hoogle", "wai"], DirectedEdge["hoogle", "warp"], DirectedEdge["hoogle-index", "base"], DirectedEdge["hoogle-index", "bytestring"], DirectedEdge["hoogle-index", "Cabal"], DirectedEdge["hoogle-index", "containers"], DirectedEdge["hoogle-index", "directory"], DirectedEdge["hoogle-index", "errors"], DirectedEdge["hoogle-index", "filepath"], DirectedEdge["hoogle-index", "hoogle"], DirectedEdge["hoogle-index", "optparse-applicative"], DirectedEdge["hoogle-index", "process"], DirectedEdge["hoogle-index", "temporary"], DirectedEdge["hoogle-index", "transformers"], DirectedEdge["hooks-dir", "base"], DirectedEdge["hooks-dir", "directory"], DirectedEdge["hooks-dir", "process"], DirectedEdge["hooks-dir", "text"], DirectedEdge["hoopl", "base"], DirectedEdge["hoopl", "containers"], DirectedEdge["hoovie", "base"], DirectedEdge["hoovie", "blaze-builder"], DirectedEdge["hoovie", "bytestring"], DirectedEdge["hoovie", "configurator"], DirectedEdge["hoovie", "directory"], DirectedEdge["hoovie", "enumerator"], DirectedEdge["hoovie", "file-embed"], DirectedEdge["hoovie", "filepath"], DirectedEdge["hoovie", "HDBC"], DirectedEdge["hoovie", "mtl"], DirectedEdge["hoovie", "network"], DirectedEdge["hoovie", "network-info"], DirectedEdge["hoovie", "network-multicast"], DirectedEdge["hoovie", "old-locale"], DirectedEdge["hoovie", "old-time"], DirectedEdge["hoovie", "process"], DirectedEdge["hoovie", "regex-compat"], DirectedEdge["hoovie", "snap-core"], DirectedEdge["hoovie", "snap-server"], DirectedEdge["hoovie", "text"], DirectedEdge["hoovie", "time"], DirectedEdge["hoovie", "transformers"], DirectedEdge["hoovie", "unix"], DirectedEdge["hoovie", "xml"], DirectedEdge["hopencc", "base"], DirectedEdge["hopencc", "bytestring"], DirectedEdge["hopencc", "utf8-string"], DirectedEdge["hopencl", "base"], DirectedEdge["hopencl", "bytestring"], DirectedEdge["hopenpgp-tools", "aeson"], DirectedEdge["hopenpgp-tools", "ansi-wl-pprint"], DirectedEdge["hopenpgp-tools", "array"], DirectedEdge["hopenpgp-tools", "attoparsec"], DirectedEdge["hopenpgp-tools", "base"], DirectedEdge["hopenpgp-tools", "base16-bytestring"], DirectedEdge["hopenpgp-tools", "binary"], DirectedEdge["hopenpgp-tools", "binary-conduit"], DirectedEdge["hopenpgp-tools", "bytestring"], DirectedEdge["hopenpgp-tools", "conduit"], DirectedEdge["hopenpgp-tools", "conduit-extra"], DirectedEdge["hopenpgp-tools", "containers"], DirectedEdge["hopenpgp-tools", "crypto-pubkey"], DirectedEdge["hopenpgp-tools", "cryptohash"], DirectedEdge["hopenpgp-tools", "directory"], DirectedEdge["hopenpgp-tools", "errors"], DirectedEdge["hopenpgp-tools", "fgl"], DirectedEdge["hopenpgp-tools", "graphviz"], DirectedEdge["hopenpgp-tools", "hOpenPGP"], DirectedEdge["hopenpgp-tools", "ixset-typed"], DirectedEdge["hopenpgp-tools", "lens"], DirectedEdge["hopenpgp-tools", "monad-loops"], DirectedEdge["hopenpgp-tools", "openpgp-asciiarmor"], DirectedEdge["hopenpgp-tools", "optparse-applicative"], DirectedEdge["hopenpgp-tools", "resourcet"], DirectedEdge["hopenpgp-tools", "text"], DirectedEdge["hopenpgp-tools", "time"], DirectedEdge["hopenpgp-tools", "time-locale-compat"], DirectedEdge["hopenpgp-tools", "transformers"], DirectedEdge["hopenpgp-tools", "unordered-containers"], DirectedEdge["hopenpgp-tools", "wl-pprint-extras"], DirectedEdge["hopenpgp-tools", "wl-pprint-terminfo"], DirectedEdge["hopenpgp-tools", "yaml"], DirectedEdge["hopenssl", "base"], DirectedEdge["hopenssl", "bytestring"], DirectedEdge["hopenssl", "mtl"], DirectedEdge["hopfield", "array"], DirectedEdge["hopfield", "base"], DirectedEdge["hopfield", "deepseq"], DirectedEdge["hopfield", "directory"], DirectedEdge["hopfield", "erf"], DirectedEdge["hopfield", "exact-combinatorics"], DirectedEdge["hopfield", "hmatrix"], DirectedEdge["hopfield", "hopfield"], DirectedEdge["hopfield", "JuicyPixels"], DirectedEdge["hopfield", "monad-loops"], DirectedEdge["hopfield", "MonadRandom"], DirectedEdge["hopfield", "optparse-applicative"], DirectedEdge["hopfield", "parallel"], DirectedEdge["hopfield", "probability"], DirectedEdge["hopfield", "QuickCheck"], DirectedEdge["hopfield", "random"], DirectedEdge["hopfield", "random-fu"], DirectedEdge["hopfield", "rvar"], DirectedEdge["hopfield", "split"], DirectedEdge["hopfield", "vector"], DirectedEdge["hopfield-networks", "base"], DirectedEdge["hopfield-networks", "hopfield-networks"], DirectedEdge["hopfield-networks", "matrix"], DirectedEdge["hopfield-networks", "MonadRandom"], DirectedEdge["hopfield-networks", "QuickCheck"], DirectedEdge["hopfield-networks", "split"], DirectedEdge["hopfield-networks", "vector"], DirectedEdge["hopfli", "base"], DirectedEdge["hopfli", "bytestring"], DirectedEdge["hopfli", "zlib"], DirectedEdge["hoppy-generator", "base"], DirectedEdge["hoppy-generator", "containers"], DirectedEdge["hoppy-generator", "directory"], DirectedEdge["hoppy-generator", "filepath"], DirectedEdge["hoppy-generator", "haskell-src"], DirectedEdge["hoppy-generator", "mtl"], DirectedEdge["hoppy-runtime", "base"], DirectedEdge["hoppy-std", "base"], DirectedEdge["hoppy-std", "filepath"], DirectedEdge["hoppy-std", "haskell-src"], DirectedEdge["hoppy-std", "hoppy-generator"], DirectedEdge["hops", "aeson"], DirectedEdge["hops", "ansi-terminal"], DirectedEdge["hops", "attoparsec"], DirectedEdge["hops", "base"], DirectedEdge["hops", "bytestring"], DirectedEdge["hops", "conduit"], DirectedEdge["hops", "conduit-extra"], DirectedEdge["hops", "containers"], DirectedEdge["hops", "deepseq"], DirectedEdge["hops", "directory"], DirectedEdge["hops", "filepath"], DirectedEdge["hops", "http-conduit"], DirectedEdge["hops", "http-types"], DirectedEdge["hops", "optparse-applicative"], DirectedEdge["hops", "parallel"], DirectedEdge["hops", "resourcet"], DirectedEdge["hops", "scientific"], DirectedEdge["hops", "text"], DirectedEdge["hops", "transformers"], DirectedEdge["hops", "vector"], DirectedEdge["hoq", "array"], DirectedEdge["hoq", "base"], DirectedEdge["hoq", "bifunctors"], DirectedEdge["hoq", "bytestring"], DirectedEdge["hoq", "filepath"], DirectedEdge["hoq", "mtl"], DirectedEdge["hoq", "pretty"], DirectedEdge["hoq", "readline"], DirectedEdge["hoq", "void"], DirectedEdge["horizon", "AC-Angle"], DirectedEdge["horizon", "base"], DirectedEdge["horizon", "time"], DirectedEdge["hosc", "base"], DirectedEdge["hosc", "binary"], DirectedEdge["hosc", "blaze-builder"], DirectedEdge["hosc", "bytestring"], DirectedEdge["hosc", "network"], DirectedEdge["hosc", "time"], DirectedEdge["hosc", "transformers"], DirectedEdge["hosc-json", "aeson"], DirectedEdge["hosc-json", "attoparsec"], DirectedEdge["hosc-json", "base"], DirectedEdge["hosc-json", "bifunctors"], DirectedEdge["hosc-json", "bytestring"], DirectedEdge["hosc-json", "hosc"], DirectedEdge["hosc-json", "json"], DirectedEdge["hosc-json", "text"], DirectedEdge["hosc-json", "unordered-containers"], DirectedEdge["hosc-json", "utf8-string"], DirectedEdge["hosc-json", "vector"], DirectedEdge["hosc-utils", "base"], DirectedEdge["hosc-utils", "bytestring"], DirectedEdge["hosc-utils", "cgi"], DirectedEdge["hosc-utils", "haskeline"], DirectedEdge["hosc-utils", "hosc"], DirectedEdge["hosc-utils", "hosc-json"], DirectedEdge["hosc-utils", "json"], DirectedEdge["hosc-utils", "text"], DirectedEdge["hosc-utils", "transformers"], DirectedEdge["hosc-utils", "utf8-string"], DirectedEdge["hosc-utils", "websockets"], DirectedEdge["hosc-utils", "www-minus"], DirectedEdge["hostname", "base"], DirectedEdge["hostname-validate", "attoparsec"], DirectedEdge["hostname-validate", "base"], DirectedEdge["hostname-validate", "bytestring"], DirectedEdge["hosts-server", "attoparsec"], DirectedEdge["hosts-server", "base"], DirectedEdge["hosts-server", "bytestring"], DirectedEdge["hosts-server", "data-default"], DirectedEdge["hosts-server", "dns"], DirectedEdge["hosts-server", "iproute"], DirectedEdge["hosts-server", "network"], DirectedEdge["hothasktags", "array"], DirectedEdge["hothasktags", "base"], DirectedEdge["hothasktags", "containers"], DirectedEdge["hothasktags", "cpphs"], DirectedEdge["hothasktags", "filemanip"], DirectedEdge["hothasktags", "filepath"], DirectedEdge["hothasktags", "Glob"], DirectedEdge["hothasktags", "haskell-src-exts"], DirectedEdge["hothasktags", "optparse-applicative"], DirectedEdge["hothasktags", "split"], DirectedEdge["hotswap", "base"], DirectedEdge["hotswap", "plugins"], DirectedEdge["hourglass", "base"], DirectedEdge["hourglass", "deepseq"], DirectedEdge["hourglass-fuzzy-parsing", "base"], DirectedEdge["hourglass-fuzzy-parsing", "hourglass"], DirectedEdge["hourglass-fuzzy-parsing", "parsec"], DirectedEdge["houseman", "base"], DirectedEdge["houseman", "bytestring"], DirectedEdge["houseman", "directory"], DirectedEdge["houseman", "dotenv"], DirectedEdge["houseman", "houseman"], DirectedEdge["houseman", "io-streams"], DirectedEdge["houseman", "mtl"], DirectedEdge["houseman", "optparse-generic"], DirectedEdge["houseman", "parsers"], DirectedEdge["houseman", "process"], DirectedEdge["houseman", "streaming-commons"], DirectedEdge["houseman", "text"], DirectedEdge["houseman", "time"], DirectedEdge["houseman", "trifecta"], DirectedEdge["houseman", "unix"], DirectedEdge["hp2any-core", "attoparsec"], DirectedEdge["hp2any-core", "base"], DirectedEdge["hp2any-core", "bytestring"], DirectedEdge["hp2any-core", "containers"], DirectedEdge["hp2any-core", "directory"], DirectedEdge["hp2any-core", "filepath"], DirectedEdge["hp2any-core", "network"], DirectedEdge["hp2any-core", "old-locale"], DirectedEdge["hp2any-core", "process"], DirectedEdge["hp2any-core", "time"], DirectedEdge["hp2any-graph", "base"], DirectedEdge["hp2any-graph", "bytestring"], DirectedEdge["hp2any-graph", "containers"], DirectedEdge["hp2any-graph", "directory"], DirectedEdge["hp2any-graph", "filepath"], DirectedEdge["hp2any-graph", "GLUT"], DirectedEdge["hp2any-graph", "hp2any-core"], DirectedEdge["hp2any-graph", "network"], DirectedEdge["hp2any-graph", "OpenGL"], DirectedEdge["hp2any-graph", "parseargs"], DirectedEdge["hp2any-graph", "process"], DirectedEdge["hp2any-manager", "array"], DirectedEdge["hp2any-manager", "base"], DirectedEdge["hp2any-manager", "bytestring"], DirectedEdge["hp2any-manager", "cairo"], DirectedEdge["hp2any-manager", "containers"], DirectedEdge["hp2any-manager", "directory"], DirectedEdge["hp2any-manager", "filepath"], DirectedEdge["hp2any-manager", "glade"], DirectedEdge["hp2any-manager", "glib"], DirectedEdge["hp2any-manager", "gtk"], DirectedEdge["hp2any-manager", "gtkglext"], DirectedEdge["hp2any-manager", "hp2any-core"], DirectedEdge["hp2any-manager", "hp2any-graph"], DirectedEdge["hp2any-manager", "OpenGL"], DirectedEdge["hp2any-manager", "time"], DirectedEdge["hp2html", "base"], DirectedEdge["hp2html", "containers"], DirectedEdge["hp2html", "filepath"], DirectedEdge["hp2pretty", "array"], DirectedEdge["hp2pretty", "attoparsec"], DirectedEdge["hp2pretty", "base"], DirectedEdge["hp2pretty", "containers"], DirectedEdge["hp2pretty", "filepath"], DirectedEdge["hp2pretty", "floatshow"], DirectedEdge["hp2pretty", "mtl"], DirectedEdge["hp2pretty", "text"], DirectedEdge["hpack", "aeson"], DirectedEdge["hpack", "base"], DirectedEdge["hpack", "base-compat"], DirectedEdge["hpack", "containers"], DirectedEdge["hpack", "deepseq"], DirectedEdge["hpack", "directory"], DirectedEdge["hpack", "filepath"], DirectedEdge["hpack", "Glob"], DirectedEdge["hpack", "hpack"], DirectedEdge["hpack", "text"], DirectedEdge["hpack", "unordered-containers"], DirectedEdge["hpack", "yaml"], DirectedEdge["hpaco", "aeson"], DirectedEdge["hpaco", "base"], DirectedEdge["hpaco", "cmdargs"], DirectedEdge["hpaco", "filepath"], DirectedEdge["hpaco", "hpaco-lib"], DirectedEdge["hpaco", "strict"], DirectedEdge["hpaco", "utf8-string"], DirectedEdge["hpaco", "yaml"], DirectedEdge["hpaco-lib", "aeson"], DirectedEdge["hpaco-lib", "base"], DirectedEdge["hpaco-lib", "bytestring"], DirectedEdge["hpaco-lib", "containers"], DirectedEdge["hpaco-lib", "data-variant"], DirectedEdge["hpaco-lib", "file-embed"], DirectedEdge["hpaco-lib", "filepath"], DirectedEdge["hpaco-lib", "mtl"], DirectedEdge["hpaco-lib", "parsec"], DirectedEdge["hpaco-lib", "safe"], DirectedEdge["hpaco-lib", "split"], DirectedEdge["hpaco-lib", "strict"], DirectedEdge["hpaco-lib", "transformers"], DirectedEdge["hpage", "base"], DirectedEdge["hpage", "bytestring"], DirectedEdge["hpage", "Cabal"], DirectedEdge["hpage", "cabal-macosx"], DirectedEdge["hpage", "containers"], DirectedEdge["hpage", "directory"], DirectedEdge["hpage", "eprocess"], DirectedEdge["hpage", "filepath"], DirectedEdge["hpage", "FindBin"], DirectedEdge["hpage", "haskell-src-exts"], DirectedEdge["hpage", "hint"], DirectedEdge["hpage", "hint-server"], DirectedEdge["hpage", "monad-loops"], DirectedEdge["hpage", "mtl"], DirectedEdge["hpage", "process"], DirectedEdge["hpage", "time"], DirectedEdge["hpage", "wx"], DirectedEdge["hpage", "wxcore"], DirectedEdge["hpapi", "base"], DirectedEdge["hpaste", "base"], DirectedEdge["hpaste", "blaze-builder"], DirectedEdge["hpaste", "blaze-html"], DirectedEdge["hpaste", "blaze-markup"], DirectedEdge["hpaste", "bytestring"], DirectedEdge["hpaste", "cgi"], DirectedEdge["hpaste", "ConfigFile"], DirectedEdge["hpaste", "containers"], DirectedEdge["hpaste", "css"], DirectedEdge["hpaste", "Diff"], DirectedEdge["hpaste", "directory"], DirectedEdge["hpaste", "download-curl"], DirectedEdge["hpaste", "feed"], DirectedEdge["hpaste", "filepath"], DirectedEdge["hpaste", "haskell-src-exts"], DirectedEdge["hpaste", "HJScript"], DirectedEdge["hpaste", "hlint"], DirectedEdge["hpaste", "hscolour"], DirectedEdge["hpaste", "mime-mail"], DirectedEdge["hpaste", "MissingH"], DirectedEdge["hpaste", "MonadCatchIO-transformers"], DirectedEdge["hpaste", "mtl"], DirectedEdge["hpaste", "named-formlet"], DirectedEdge["hpaste", "network"], DirectedEdge["hpaste", "old-locale"], DirectedEdge["hpaste", "postgresql-simple"], DirectedEdge["hpaste", "process"], DirectedEdge["hpaste", "safe"], DirectedEdge["hpaste", "snap-app"], DirectedEdge["hpaste", "snap-core"], DirectedEdge["hpaste", "snap-server"], DirectedEdge["hpaste", "text"], DirectedEdge["hpaste", "time"], DirectedEdge["hpaste", "transformers"], DirectedEdge["hpaste", "utf8-string"], DirectedEdge["hpasteit", "base"], DirectedEdge["hpasteit", "bytestring"], DirectedEdge["hpasteit", "directory"], DirectedEdge["hpasteit", "filepath"], DirectedEdge["hpasteit", "http-conduit"], DirectedEdge["hpasteit", "http-types"], DirectedEdge["hpasteit", "lifted-base"], DirectedEdge["hpasteit", "network"], DirectedEdge["hpasteit", "optparse-applicative"], DirectedEdge["hpasteit", "process"], DirectedEdge["hpasteit", "safe"], DirectedEdge["hpasteit", "utf8-string"], DirectedEdge["hpath", "base"], DirectedEdge["hpath", "bytestring"], DirectedEdge["hpath", "deepseq"], DirectedEdge["hpath", "exceptions"], DirectedEdge["hpath", "hspec"], DirectedEdge["hpath", "simple-sendfile"], DirectedEdge["hpath", "unix"], DirectedEdge["hpath", "unix-bytestring"], DirectedEdge["hpath", "utf8-string"], DirectedEdge["hpc", "base"], DirectedEdge["hpc", "containers"], DirectedEdge["hpc", "directory"], DirectedEdge["hpc", "filepath"], DirectedEdge["hpc", "time"], DirectedEdge["hpc-coveralls", "aeson"], DirectedEdge["hpc-coveralls", "async"], DirectedEdge["hpc-coveralls", "base"], DirectedEdge["hpc-coveralls", "bytestring"], DirectedEdge["hpc-coveralls", "Cabal"], DirectedEdge["hpc-coveralls", "cmdargs"], DirectedEdge["hpc-coveralls", "containers"], DirectedEdge["hpc-coveralls", "curl"], DirectedEdge["hpc-coveralls", "directory"], DirectedEdge["hpc-coveralls", "directory-tree"], DirectedEdge["hpc-coveralls", "hpc"], DirectedEdge["hpc-coveralls", "process"], DirectedEdge["hpc-coveralls", "regex-posix"], DirectedEdge["hpc-coveralls", "retry"], DirectedEdge["hpc-coveralls", "safe"], DirectedEdge["hpc-coveralls", "split"], DirectedEdge["hpc-coveralls", "transformers"], DirectedEdge["hpc-strobe", "base"], DirectedEdge["hpc-strobe", "filepath"], DirectedEdge["hpc-strobe", "hpc"], DirectedEdge["hpc-tracer", "array"], DirectedEdge["hpc-tracer", "base"], DirectedEdge["hpc-tracer", "containers"], DirectedEdge["hpc-tracer", "hpc"], DirectedEdge["hpc-tracer", "network"], DirectedEdge["hpc-tracer", "parsec"], DirectedEdge["hpc-tracer", "pretty"], DirectedEdge["hpc-tracer", "process"], DirectedEdge["hpc-tracer", "unix"], DirectedEdge["hpdft", "attoparsec"], DirectedEdge["hpdft", "base"], DirectedEdge["hpdft", "binary"], DirectedEdge["hpdft", "bytestring"], DirectedEdge["hpdft", "containers"], DirectedEdge["hpdft", "directory"], DirectedEdge["hpdft", "file-embed"], DirectedEdge["hpdft", "parsec"], DirectedEdge["hpdft", "text"], DirectedEdge["hpdft", "utf8-string"], DirectedEdge["hpdft", "zlib"], DirectedEdge["hpio", "async"], DirectedEdge["hpio", "base"], DirectedEdge["hpio", "base-compat"], DirectedEdge["hpio", "bytestring"], DirectedEdge["hpio", "containers"], DirectedEdge["hpio", "directory"], DirectedEdge["hpio", "exceptions"], DirectedEdge["hpio", "filepath"], DirectedEdge["hpio", "hpio"], DirectedEdge["hpio", "mtl"], DirectedEdge["hpio", "mtl-compat"], DirectedEdge["hpio", "optparse-applicative"], DirectedEdge["hpio", "QuickCheck"], DirectedEdge["hpio", "text"], DirectedEdge["hpio", "transformers"], DirectedEdge["hpio", "transformers-compat"], DirectedEdge["hpio", "unix"], DirectedEdge["hpio", "unix-bytestring"], DirectedEdge["hplayground", "base"], DirectedEdge["hplayground", "containers"], DirectedEdge["hplayground", "data-default"], DirectedEdge["hplayground", "haste-compiler"], DirectedEdge["hplayground", "haste-lib"], DirectedEdge["hplayground", "haste-perch"], DirectedEdge["hplayground", "monads-tf"], DirectedEdge["hplayground", "transformers"], DirectedEdge["hplaylist", "base"], DirectedEdge["hplaylist", "directory"], DirectedEdge["hplaylist", "filepath"], DirectedEdge["hplaylist", "process"], DirectedEdge["hpodder", "base"], DirectedEdge["hpodder", "ConfigFile"], DirectedEdge["hpodder", "directory"], DirectedEdge["hpodder", "filepath"], DirectedEdge["hpodder", "HaXml"], DirectedEdge["hpodder", "HDBC"], DirectedEdge["hpodder", "hslogger"], DirectedEdge["hpodder", "MissingH"], DirectedEdge["hpodder", "mtl"], DirectedEdge["hpodder", "network"], DirectedEdge["hpodder", "old-time"], DirectedEdge["hpodder", "parsec"], DirectedEdge["hpodder", "process"], DirectedEdge["hpodder", "unix"], DirectedEdge["hpp", "base"], DirectedEdge["hpp", "directory"], DirectedEdge["hpp", "filepath"], DirectedEdge["hpp", "hpp"], DirectedEdge["hpp", "time"], DirectedEdge["hpp", "transformers"], DirectedEdge["hpqtypes", "aeson"], DirectedEdge["hpqtypes", "base"], DirectedEdge["hpqtypes", "bytestring"], DirectedEdge["hpqtypes", "containers"], DirectedEdge["hpqtypes", "data-default-class"], DirectedEdge["hpqtypes", "exceptions"], DirectedEdge["hpqtypes", "hpqtypes"], DirectedEdge["hpqtypes", "HUnit"], DirectedEdge["hpqtypes", "lifted-base"], DirectedEdge["hpqtypes", "monad-control"], DirectedEdge["hpqtypes", "mtl"], DirectedEdge["hpqtypes", "QuickCheck"], DirectedEdge["hpqtypes", "random"], DirectedEdge["hpqtypes", "resource-pool"], DirectedEdge["hpqtypes", "scientific"], DirectedEdge["hpqtypes", "test-framework"], DirectedEdge["hpqtypes", "test-framework-hunit"], DirectedEdge["hpqtypes", "text"], DirectedEdge["hpqtypes", "time"], DirectedEdge["hpqtypes", "transformers"], DirectedEdge["hpqtypes", "transformers-base"], DirectedEdge["hpqtypes", "unordered-containers"], DirectedEdge["hpqtypes", "vector"], DirectedEdge["hprotoc", "array"], DirectedEdge["hprotoc", "base"], DirectedEdge["hprotoc", "binary"], DirectedEdge["hprotoc", "bytestring"], DirectedEdge["hprotoc", "containers"], DirectedEdge["hprotoc", "directory"], DirectedEdge["hprotoc", "filepath"], DirectedEdge["hprotoc", "haskell-src-exts"], DirectedEdge["hprotoc", "mtl"], DirectedEdge["hprotoc", "parsec"], DirectedEdge["hprotoc", "protocol-buffers"], DirectedEdge["hprotoc", "protocol-buffers-descriptor"], DirectedEdge["hprotoc", "utf8-string"], DirectedEdge["hprotoc-fork", "array"], DirectedEdge["hprotoc-fork", "base"], DirectedEdge["hprotoc-fork", "binary"], DirectedEdge["hprotoc-fork", "bytestring"], DirectedEdge["hprotoc-fork", "containers"], DirectedEdge["hprotoc-fork", "directory"], DirectedEdge["hprotoc-fork", "filepath"], DirectedEdge["hprotoc-fork", "haskell-src-exts"], DirectedEdge["hprotoc-fork", "mtl"], DirectedEdge["hprotoc-fork", "parsec"], DirectedEdge["hprotoc-fork", "protocol-buffers-descriptor-fork"], DirectedEdge["hprotoc-fork", "protocol-buffers-fork"], DirectedEdge["hprotoc-fork", "utf8-string"], DirectedEdge["hps", "base"], DirectedEdge["hps", "directory"], DirectedEdge["hps", "filepath"], DirectedEdge["hps", "hcg-minus"], DirectedEdge["hps", "random"], DirectedEdge["hps-cairo", "base"], DirectedEdge["hps-cairo", "cairo"], DirectedEdge["hps-cairo", "gtk"], DirectedEdge["hps-cairo", "hps"], DirectedEdge["hps-cairo", "hps-cairo"], DirectedEdge["hps-cairo", "random"], DirectedEdge["hps-kmeans", "base"], DirectedEdge["hps-kmeans", "vector"], DirectedEdge["hpuz", "array"], DirectedEdge["hpuz", "base"], DirectedEdge["hpuz", "bytestring"], DirectedEdge["hpuz", "parsec"], DirectedEdge["hpygments", "aeson"], DirectedEdge["hpygments", "base"], DirectedEdge["hpygments", "bytestring"], DirectedEdge["hpygments", "process"], DirectedEdge["hpygments", "process-extras"], DirectedEdge["hpylos", "array"], DirectedEdge["hpylos", "base"], DirectedEdge["hpylos", "containers"], DirectedEdge["hpylos", "EEConfig"], DirectedEdge["hpylos", "GLUT"], DirectedEdge["hpylos", "OpenGL"], DirectedEdge["hpyrg", "base"], DirectedEdge["hpyrg", "lens"], DirectedEdge["hpyrg", "optparse-applicative"], DirectedEdge["hpyrg", "parsec"], DirectedEdge["hpyrg", "text"], DirectedEdge["hquantlib", "base"], DirectedEdge["hquantlib", "containers"], DirectedEdge["hquantlib", "hmatrix"], DirectedEdge["hquantlib", "hmatrix-gsl"], DirectedEdge["hquantlib", "hmatrix-special"], DirectedEdge["hquantlib", "mersenne-random"], DirectedEdge["hquantlib", "parallel"], DirectedEdge["hquantlib", "statistics"], DirectedEdge["hquantlib", "time"], DirectedEdge["hquantlib", "vector"], DirectedEdge["hquantlib", "vector-algorithms"], DirectedEdge["hquery", "base"], DirectedEdge["hquery", "containers"], DirectedEdge["hquery", "parsec"], DirectedEdge["hquery", "text"], DirectedEdge["hquery", "xmlhtml"], DirectedEdge["hranker", "base"], DirectedEdge["hranker", "HCL"], DirectedEdge["hranker", "NonEmpty"], DirectedEdge["hreader", "base"], DirectedEdge["hreader", "exceptions"], DirectedEdge["hreader", "hset"], DirectedEdge["hreader", "mmorph"], DirectedEdge["hreader", "monad-control"], DirectedEdge["hreader", "mtl"], DirectedEdge["hreader", "tagged"], DirectedEdge["hreader", "transformers-base"], DirectedEdge["hricket", "base"], DirectedEdge["hricket", "containers"], DirectedEdge["hruby", "aeson"], DirectedEdge["hruby", "attoparsec"], DirectedEdge["hruby", "base"], DirectedEdge["hruby", "bytestring"], DirectedEdge["hruby", "scientific"], DirectedEdge["hruby", "stm"], DirectedEdge["hruby", "text"], DirectedEdge["hruby", "unordered-containers"], DirectedEdge["hruby", "vector"], DirectedEdge["hs-GeoIP", "base"], DirectedEdge["hs-GeoIP", "bytestring"], DirectedEdge["hs-GeoIP", "deepseq"], DirectedEdge["hs-bibutils", "base"], DirectedEdge["hs-bibutils", "syb"], DirectedEdge["hs-blake2", "base"], DirectedEdge["hs-blake2", "bytestring"], DirectedEdge["hs-captcha", "base"], DirectedEdge["hs-captcha", "bytestring"], DirectedEdge["hs-captcha", "gd"], DirectedEdge["hs-captcha", "random"], DirectedEdge["hs-carbon", "base"], DirectedEdge["hs-carbon", "deepseq"], DirectedEdge["hs-carbon", "mtl"], DirectedEdge["hs-carbon", "parallel"], DirectedEdge["hs-carbon", "random"], DirectedEdge["hs-carbon-examples", "base"], DirectedEdge["hs-carbon-examples", "deepseq"], DirectedEdge["hs-carbon-examples", "gloss"], DirectedEdge["hs-carbon-examples", "hs-carbon"], DirectedEdge["hs-carbon-examples", "monad-loops"], DirectedEdge["hs-carbon-examples", "mtl"], DirectedEdge["hs-carbon-examples", "tf-random"], DirectedEdge["hs-cdb", "array"], DirectedEdge["hs-cdb", "base"], DirectedEdge["hs-cdb", "bytestring"], DirectedEdge["hs-cdb", "bytestring-mmap"], DirectedEdge["hs-cdb", "directory"], DirectedEdge["hs-cdb", "filepath"], DirectedEdge["hs-cdb", "mtl"], DirectedEdge["hs-dotnet", "base"], DirectedEdge["hs-dotnet", "ghc-prim"], DirectedEdge["hs-duktape", "aeson"], DirectedEdge["hs-duktape", "base"], DirectedEdge["hs-duktape", "bytestring"], DirectedEdge["hs-duktape", "text"], DirectedEdge["hs-duktape", "transformers"], DirectedEdge["hs-duktape", "unordered-containers"], DirectedEdge["hs-duktape", "vector"], DirectedEdge["hs-excelx", "base"], DirectedEdge["hs-excelx", "bytestring"], DirectedEdge["hs-excelx", "containers"], DirectedEdge["hs-excelx", "mtl"], DirectedEdge["hs-excelx", "text"], DirectedEdge["hs-excelx", "time"], DirectedEdge["hs-excelx", "xml-conduit"], DirectedEdge["hs-excelx", "zip-archive"], DirectedEdge["hs-ffmpeg", "base"], DirectedEdge["hs-ffmpeg", "bytestring"], DirectedEdge["hs-fltk", "base"], DirectedEdge["hs-gchart", "base"], DirectedEdge["hs-gchart", "mtl"], DirectedEdge["hs-gen-iface", "base"], DirectedEdge["hs-gen-iface", "Cabal"], DirectedEdge["hs-gen-iface", "containers"], DirectedEdge["hs-gen-iface", "filepath"], DirectedEdge["hs-gen-iface", "haskell-names"], DirectedEdge["hs-gen-iface", "haskell-packages"], DirectedEdge["hs-gen-iface", "haskell-src-exts"], DirectedEdge["hs-gen-iface", "hse-cpp"], DirectedEdge["hs-gen-iface", "mtl"], DirectedEdge["hs-gen-iface", "tagged"], DirectedEdge["hs-gizapp", "base"], DirectedEdge["hs-gizapp", "containers"], DirectedEdge["hs-gizapp", "directory"], DirectedEdge["hs-gizapp", "filepath"], DirectedEdge["hs-gizapp", "parsec"], DirectedEdge["hs-gizapp", "process"], DirectedEdge["hs-inspector", "base"], DirectedEdge["hs-inspector", "haskell-src"], DirectedEdge["hs-java", "array"], DirectedEdge["hs-java", "base"], DirectedEdge["hs-java", "binary"], DirectedEdge["hs-java", "binary-state"], DirectedEdge["hs-java", "bytestring"], DirectedEdge["hs-java", "containers"], DirectedEdge["hs-java", "control-monad-exception"], DirectedEdge["hs-java", "data-default"], DirectedEdge["hs-java", "directory"], DirectedEdge["hs-java", "filepath"], DirectedEdge["hs-java", "Glob"], DirectedEdge["hs-java", "LibZip"], DirectedEdge["hs-java", "MissingH"], DirectedEdge["hs-java", "mtl"], DirectedEdge["hs-java", "parsec"], DirectedEdge["hs-java", "utf8-string"], DirectedEdge["hs-json-rpc", "aeson"], DirectedEdge["hs-json-rpc", "base"], DirectedEdge["hs-json-rpc", "bytestring"], DirectedEdge["hs-json-rpc", "HTTP"], DirectedEdge["hs-json-rpc", "network"], DirectedEdge["hs-json-rpc", "text"], DirectedEdge["hs-logo", "base"], DirectedEdge["hs-logo", "cmdargs"], DirectedEdge["hs-logo", "colour"], DirectedEdge["hs-logo", "containers"], DirectedEdge["hs-logo", "diagrams-core"], DirectedEdge["hs-logo", "diagrams-lib"], DirectedEdge["hs-logo", "diagrams-svg"], DirectedEdge["hs-logo", "mtl"], DirectedEdge["hs-logo", "parsec"], DirectedEdge["hs-logo", "parsec-numbers"], DirectedEdge["hs-logo", "random"], DirectedEdge["hs-mesos", "base"], DirectedEdge["hs-mesos", "bytestring"], DirectedEdge["hs-mesos", "hs-mesos"], DirectedEdge["hs-mesos", "lens"], DirectedEdge["hs-mesos", "managed"], DirectedEdge["hs-mesos", "template-haskell"], DirectedEdge["hs-nombre-generator", "base"], DirectedEdge["hs-nombre-generator", "HandsomeSoup"], DirectedEdge["hs-nombre-generator", "hxt"], DirectedEdge["hs-nombre-generator", "random"], DirectedEdge["hs-pgms", "array"], DirectedEdge["hs-pgms", "base"], DirectedEdge["hs-pgms", "directory"], DirectedEdge["hs-pgms", "glib"], DirectedEdge["hs-pgms", "gtk"], DirectedEdge["hs-pgms", "MonadPrompt"], DirectedEdge["hs-pgms", "mtl"], DirectedEdge["hs-pgms", "random"], DirectedEdge["hs-php-session", "base"], DirectedEdge["hs-php-session", "bytestring"], DirectedEdge["hs-pkg-config", "base"], DirectedEdge["hs-pkg-config", "data-default-class"], DirectedEdge["hs-pkg-config", "text"], DirectedEdge["hs-pkpass", "aeson"], DirectedEdge["hs-pkpass", "attoparsec"], DirectedEdge["hs-pkpass", "base"], DirectedEdge["hs-pkpass", "bytestring"], DirectedEdge["hs-pkpass", "conduit"], DirectedEdge["hs-pkpass", "directory"], DirectedEdge["hs-pkpass", "filesystem-conduit"], DirectedEdge["hs-pkpass", "old-locale"], DirectedEdge["hs-pkpass", "random"], DirectedEdge["hs-pkpass", "shakespeare-text"], DirectedEdge["hs-pkpass", "shelly"], DirectedEdge["hs-pkpass", "system-filepath"], DirectedEdge["hs-pkpass", "text"], DirectedEdge["hs-pkpass", "time"], DirectedEdge["hs-pkpass", "transformers"], DirectedEdge["hs-pkpass", "unordered-containers"], DirectedEdge["hs-pkpass", "uuid"], DirectedEdge["hs-pkpass", "zip-archive"], DirectedEdge["hs-re", "array"], DirectedEdge["hs-re", "base"], DirectedEdge["hs-re", "regex-base"], DirectedEdge["hs-re", "regex-posix"], DirectedEdge["hs-scrape", "base"], DirectedEdge["hs-scrape", "bytestring"], DirectedEdge["hs-scrape", "containers"], DirectedEdge["hs-scrape", "data-default"], DirectedEdge["hs-scrape", "exceptions"], DirectedEdge["hs-scrape", "hspec"], DirectedEdge["hs-scrape", "html-conduit"], DirectedEdge["hs-scrape", "lens"], DirectedEdge["hs-scrape", "retry"], DirectedEdge["hs-scrape", "safe"], DirectedEdge["hs-scrape", "text"], DirectedEdge["hs-scrape", "transformers"], DirectedEdge["hs-scrape", "url"], DirectedEdge["hs-scrape", "wreq"], DirectedEdge["hs-scrape", "xml-conduit"], DirectedEdge["hs-twitter", "base"], DirectedEdge["hs-twitter", "HTTP"], DirectedEdge["hs-twitter", "json"], DirectedEdge["hs-twitter", "mime"], DirectedEdge["hs-twitter", "network"], DirectedEdge["hs-twitter", "old-locale"], DirectedEdge["hs-twitter", "old-time"], DirectedEdge["hs-twitter", "random"], DirectedEdge["hs-twitter", "utf8-string"], DirectedEdge["hs-twitterarchiver", "base"], DirectedEdge["hs-twitterarchiver", "HTTP"], DirectedEdge["hs-twitterarchiver", "json"], DirectedEdge["hs-twitterarchiver", "mtl"], DirectedEdge["hs-twitterarchiver", "network"], DirectedEdge["hs-twitterarchiver", "pretty"], DirectedEdge["hs-vcard", "base"], DirectedEdge["hs-vcard", "old-locale"], DirectedEdge["hs-vcard", "time"], DirectedEdge["hs2048", "base"], DirectedEdge["hs2048", "hscolour"], DirectedEdge["hs2048", "random"], DirectedEdge["hs2bf", "array"], DirectedEdge["hs2bf", "base"], DirectedEdge["hs2bf", "containers"], DirectedEdge["hs2bf", "directory"], DirectedEdge["hs2bf", "filepath"], DirectedEdge["hs2bf", "haskell-src"], DirectedEdge["hs2bf", "mtl"], DirectedEdge["hs2dot", "base"], DirectedEdge["hs2dot", "directory"], DirectedEdge["hs2dot", "haskell-src"], DirectedEdge["hs2dot", "haskell-src-exts"], DirectedEdge["hs2dot", "split"], DirectedEdge["hsConfigure", "base"], DirectedEdge["hsConfigure", "directory"], DirectedEdge["hsConfigure", "filepath"], DirectedEdge["hsConfigure", "process"], DirectedEdge["hsConfigure", "unix"], DirectedEdge["hsSqlite3", "base"], DirectedEdge["hsSqlite3", "bytestring"], DirectedEdge["hsSqlite3", "mtl"], DirectedEdge["hsSqlite3", "utf8-string"], DirectedEdge["hsXenCtrl", "array"], DirectedEdge["hsXenCtrl", "base"], DirectedEdge["hsXenCtrl", "bytestring"], DirectedEdge["hsXenCtrl", "dlist"], DirectedEdge["hsXenCtrl", "mtl"], DirectedEdge["hsass", "base"], DirectedEdge["hsass", "bytestring"], DirectedEdge["hsass", "data-default-class"], DirectedEdge["hsass", "filepath"], DirectedEdge["hsass", "hlibsass"], DirectedEdge["hsass", "monad-loops"], DirectedEdge["hsass", "transformers"], DirectedEdge["hsay", "base"], DirectedEdge["hsay", "Hclip"], DirectedEdge["hsay", "HTTP"], DirectedEdge["hsay", "process"], DirectedEdge["hsay", "unix"], DirectedEdge["hsb2hs", "base"], DirectedEdge["hsb2hs", "bytestring"], DirectedEdge["hsb2hs", "containers"], DirectedEdge["hsb2hs", "directory"], DirectedEdge["hsb2hs", "filepath"], DirectedEdge["hsb2hs", "preprocessor-tools"], DirectedEdge["hsbackup", "base"], DirectedEdge["hsbackup", "bytestring"], DirectedEdge["hsbackup", "cmdargs"], DirectedEdge["hsbackup", "directory"], DirectedEdge["hsbackup", "filepath"], DirectedEdge["hsbackup", "hashed-storage"], DirectedEdge["hsbackup", "old-locale"], DirectedEdge["hsbackup", "strict"], DirectedEdge["hsbackup", "time"], DirectedEdge["hsbencher", "async"], DirectedEdge["hsbencher", "base"], DirectedEdge["hsbencher", "bytestring"], DirectedEdge["hsbencher", "containers"], DirectedEdge["hsbencher", "data-default"], DirectedEdge["hsbencher", "directory"], DirectedEdge["hsbencher", "filepath"], DirectedEdge["hsbencher", "GenericPretty"], DirectedEdge["hsbencher", "io-streams"], DirectedEdge["hsbencher", "mtl"], DirectedEdge["hsbencher", "process"], DirectedEdge["hsbencher", "random"], DirectedEdge["hsbencher", "time"], DirectedEdge["hsbencher", "unix"], DirectedEdge["hsbencher-codespeed", "base"], DirectedEdge["hsbencher-codespeed", "bytestring"], DirectedEdge["hsbencher-codespeed", "containers"], DirectedEdge["hsbencher-codespeed", "data-default"], DirectedEdge["hsbencher-codespeed", "directory"], DirectedEdge["hsbencher-codespeed", "filepath"], DirectedEdge["hsbencher-codespeed", "hsbencher"], DirectedEdge["hsbencher-codespeed", "HTTP"], DirectedEdge["hsbencher-codespeed", "http-conduit"], DirectedEdge["hsbencher-codespeed", "http-types"], DirectedEdge["hsbencher-codespeed", "json"], DirectedEdge["hsbencher-codespeed", "mtl"], DirectedEdge["hsbencher-codespeed", "network"], DirectedEdge["hsbencher-codespeed", "resourcet"], DirectedEdge["hsbencher-codespeed", "time"], DirectedEdge["hsbencher-fusion", "base"], DirectedEdge["hsbencher-fusion", "bytestring"], DirectedEdge["hsbencher-fusion", "containers"], DirectedEdge["hsbencher-fusion", "criterion"], DirectedEdge["hsbencher-fusion", "csv"], DirectedEdge["hsbencher-fusion", "data-default"], DirectedEdge["hsbencher-fusion", "directory"], DirectedEdge["hsbencher-fusion", "filepath"], DirectedEdge["hsbencher-fusion", "handa-gdata"], DirectedEdge["hsbencher-fusion", "hsbencher"], DirectedEdge["hsbencher-fusion", "hsbencher-fusion"], DirectedEdge["hsbencher-fusion", "http-conduit"], DirectedEdge["hsbencher-fusion", "mtl"], DirectedEdge["hsbencher-fusion", "network"], DirectedEdge["hsbencher-fusion", "split"], DirectedEdge["hsbencher-fusion", "statistics"], DirectedEdge["hsbencher-fusion", "text"], DirectedEdge["hsbencher-fusion", "time"], DirectedEdge["hsc2hs", "base"], DirectedEdge["hsc2hs", "containers"], DirectedEdge["hsc2hs", "directory"], DirectedEdge["hsc2hs", "filepath"], DirectedEdge["hsc2hs", "process"], DirectedEdge["hsc3", "base"], DirectedEdge["hsc3", "binary"], DirectedEdge["hsc3", "bytestring"], DirectedEdge["hsc3", "containers"], DirectedEdge["hsc3", "data-default"], DirectedEdge["hsc3", "data-ordlist"], DirectedEdge["hsc3", "directory"], DirectedEdge["hsc3", "filepath"], DirectedEdge["hsc3", "hashable"], DirectedEdge["hsc3", "hosc"], DirectedEdge["hsc3", "network"], DirectedEdge["hsc3", "process"], DirectedEdge["hsc3", "random"], DirectedEdge["hsc3", "safe"], DirectedEdge["hsc3", "split"], DirectedEdge["hsc3", "transformers"], DirectedEdge["hsc3-auditor", "base"], DirectedEdge["hsc3-auditor", "filepath"], DirectedEdge["hsc3-auditor", "hmt"], DirectedEdge["hsc3-auditor", "hosc"], DirectedEdge["hsc3-auditor", "hsc3-sf-hsndfile"], DirectedEdge["hsc3-cairo", "base"], DirectedEdge["hsc3-cairo", "cairo"], DirectedEdge["hsc3-cairo", "gtk"], DirectedEdge["hsc3-cairo", "hosc"], DirectedEdge["hsc3-cairo", "split"], DirectedEdge["hsc3-data", "base"], DirectedEdge["hsc3-data", "bifunctors"], DirectedEdge["hsc3-data", "Glob"], DirectedEdge["hsc3-data", "hcg-minus"], DirectedEdge["hsc3-data", "hmt"], DirectedEdge["hsc3-data", "hsc3-lang"], DirectedEdge["hsc3-data", "hsc3-plot"], DirectedEdge["hsc3-data", "hsc3-sf-hsndfile"], DirectedEdge["hsc3-data", "safe"], DirectedEdge["hsc3-data", "split"], DirectedEdge["hsc3-data", "SVGPath"], DirectedEdge["hsc3-data", "xml"], DirectedEdge["hsc3-db", "base"], DirectedEdge["hsc3-db", "safe"], DirectedEdge["hsc3-dot", "base"], DirectedEdge["hsc3-dot", "directory"], DirectedEdge["hsc3-dot", "filepath"], DirectedEdge["hsc3-dot", "process"], DirectedEdge["hsc3-forth", "base"], DirectedEdge["hsc3-forth", "containers"], DirectedEdge["hsc3-forth", "directory"], DirectedEdge["hsc3-forth", "filepath"], DirectedEdge["hsc3-forth", "hashable"], DirectedEdge["hsc3-forth", "hosc"], DirectedEdge["hsc3-forth", "hsc3-db"], DirectedEdge["hsc3-forth", "hsc3-dot"], DirectedEdge["hsc3-forth", "mtl"], DirectedEdge["hsc3-forth", "unix"], DirectedEdge["hsc3-graphs", "array"], DirectedEdge["hsc3-graphs", "base"], DirectedEdge["hsc3-graphs", "binary"], DirectedEdge["hsc3-graphs", "bytestring"], DirectedEdge["hsc3-graphs", "cairo"], DirectedEdge["hsc3-graphs", "containers"], DirectedEdge["hsc3-graphs", "data-default"], DirectedEdge["hsc3-graphs", "directory"], DirectedEdge["hsc3-graphs", "filepath"], DirectedEdge["hsc3-graphs", "hashable"], DirectedEdge["hsc3-graphs", "hls"], DirectedEdge["hsc3-graphs", "hmt"], DirectedEdge["hsc3-graphs", "hosc"], DirectedEdge["hsc3-graphs", "hps"], DirectedEdge["hsc3-graphs", "hsc3-cairo"], DirectedEdge["hsc3-graphs", "hsc3-graphs"], DirectedEdge["hsc3-graphs", "hsc3-lang"], DirectedEdge["hsc3-graphs", "hsc3-sf"], DirectedEdge["hsc3-graphs", "hsc3-unsafe"], DirectedEdge["hsc3-graphs", "hsc3-utils"], DirectedEdge["hsc3-graphs", "hsharc"], DirectedEdge["hsc3-graphs", "MonadRandom"], DirectedEdge["hsc3-graphs", "primes"], DirectedEdge["hsc3-graphs", "process"], DirectedEdge["hsc3-graphs", "random"], DirectedEdge["hsc3-graphs", "random-shuffle"], DirectedEdge["hsc3-graphs", "sc3-rdu"], DirectedEdge["hsc3-graphs", "she"], DirectedEdge["hsc3-graphs", "split"], DirectedEdge["hsc3-lang", "array"], DirectedEdge["hsc3-lang", "base"], DirectedEdge["hsc3-lang", "bifunctors"], DirectedEdge["hsc3-lang", "bytestring"], DirectedEdge["hsc3-lang", "containers"], DirectedEdge["hsc3-lang", "data-default"], DirectedEdge["hsc3-lang", "data-ordlist"], DirectedEdge["hsc3-lang", "dlist"], DirectedEdge["hsc3-lang", "hashable"], DirectedEdge["hsc3-lang", "hmatrix-special"], DirectedEdge["hsc3-lang", "hosc"], DirectedEdge["hsc3-lang", "MonadRandom"], DirectedEdge["hsc3-lang", "random"], DirectedEdge["hsc3-lang", "random-shuffle"], DirectedEdge["hsc3-lang", "split"], DirectedEdge["hsc3-lang", "transformers"], DirectedEdge["hsc3-lang", "vector"], DirectedEdge["hsc3-lisp", "base"], DirectedEdge["hsc3-lisp", "containers"], DirectedEdge["hsc3-lisp", "directory"], DirectedEdge["hsc3-lisp", "filepath"], DirectedEdge["hsc3-lisp", "hashable"], DirectedEdge["hsc3-lisp", "hosc"], DirectedEdge["hsc3-lisp", "hsc3-dot"], DirectedEdge["hsc3-lisp", "husk-scheme"], DirectedEdge["hsc3-lisp", "mtl"], DirectedEdge["hsc3-lisp", "safe"], DirectedEdge["hsc3-lisp", "unix"], DirectedEdge["hsc3-plot", "base"], DirectedEdge["hsc3-plot", "directory"], DirectedEdge["hsc3-plot", "filepath"], DirectedEdge["hsc3-plot", "hosc"], DirectedEdge["hsc3-plot", "hsc3-lang"], DirectedEdge["hsc3-plot", "process"], DirectedEdge["hsc3-plot", "split"], DirectedEdge["hsc3-plot", "statistics"], DirectedEdge["hsc3-plot", "vector"], DirectedEdge["hsc3-process", "base"], DirectedEdge["hsc3-process", "bytestring"], DirectedEdge["hsc3-process", "containers"], DirectedEdge["hsc3-process", "data-default"], DirectedEdge["hsc3-process", "directory"], DirectedEdge["hsc3-process", "filepath"], DirectedEdge["hsc3-process", "hosc"], DirectedEdge["hsc3-process", "hsc3-process"], DirectedEdge["hsc3-process", "process"], DirectedEdge["hsc3-process", "time"], DirectedEdge["hsc3-process", "time-compat"], DirectedEdge["hsc3-process", "transformers"], DirectedEdge["hsc3-rec", "base"], DirectedEdge["hsc3-rw", "base"], DirectedEdge["hsc3-rw", "directory"], DirectedEdge["hsc3-rw", "haskell-src-exts"], DirectedEdge["hsc3-rw", "parsec"], DirectedEdge["hsc3-rw", "polyparse"], DirectedEdge["hsc3-rw", "split"], DirectedEdge["hsc3-rw", "syb"], DirectedEdge["hsc3-rw", "transformers"], DirectedEdge["hsc3-server", "base"], DirectedEdge["hsc3-server", "bitset"], DirectedEdge["hsc3-server", "bytestring"], DirectedEdge["hsc3-server", "containers"], DirectedEdge["hsc3-server", "data-default"], DirectedEdge["hsc3-server", "failure"], DirectedEdge["hsc3-server", "hashtables"], DirectedEdge["hsc3-server", "hosc"], DirectedEdge["hsc3-server", "hsc3-process"], DirectedEdge["hsc3-server", "hsc3-server"], DirectedEdge["hsc3-server", "lifted-base"], DirectedEdge["hsc3-server", "ListZipper"], DirectedEdge["hsc3-server", "monad-control"], DirectedEdge["hsc3-server", "random"], DirectedEdge["hsc3-server", "resourcet"], DirectedEdge["hsc3-server", "transformers"], DirectedEdge["hsc3-server", "transformers-base"], DirectedEdge["hsc3-server", "unix"], DirectedEdge["hsc3-sf", "base"], DirectedEdge["hsc3-sf", "bytestring"], DirectedEdge["hsc3-sf", "hosc"], DirectedEdge["hsc3-sf-hsndfile", "array"], DirectedEdge["hsc3-sf-hsndfile", "base"], DirectedEdge["hsc3-sf-hsndfile", "hsc3-sf"], DirectedEdge["hsc3-sf-hsndfile", "hsndfile"], DirectedEdge["hsc3-sf-hsndfile", "hsndfile-vector"], DirectedEdge["hsc3-sf-hsndfile", "vector"], DirectedEdge["hsc3-unsafe", "base"], DirectedEdge["hsc3-utils", "base"], DirectedEdge["hsc3-utils", "directory"], DirectedEdge["hsc3-utils", "filepath"], DirectedEdge["hsc3-utils", "hashable"], DirectedEdge["hsc3-utils", "hosc"], DirectedEdge["hsc3-utils", "hsc3-dot"], DirectedEdge["hsc3-utils", "hsc3-rw"], DirectedEdge["hsc3-utils", "hsc3-sf"], DirectedEdge["hsc3-utils", "process"], DirectedEdge["hscamwire", "array"], DirectedEdge["hscamwire", "base"], DirectedEdge["hscamwire", "time"], DirectedEdge["hscamwire", "unix"], DirectedEdge["hscassandra", "base"], DirectedEdge["hscassandra", "bytestring"], DirectedEdge["hscassandra", "cassandra-thrift"], DirectedEdge["hscassandra", "containers"], DirectedEdge["hscassandra", "mtl"], DirectedEdge["hscassandra", "network"], DirectedEdge["hscassandra", "old-time"], DirectedEdge["hscassandra", "Thrift"], DirectedEdge["hscd", "aeson"], DirectedEdge["hscd", "base"], DirectedEdge["hscd", "bytestring"], DirectedEdge["hscd", "ghc-prim"], DirectedEdge["hscd", "HTTP"], DirectedEdge["hsclock", "base"], DirectedEdge["hsclock", "cairo"], DirectedEdge["hsclock", "glib"], DirectedEdge["hsclock", "gtk"], DirectedEdge["hsclock", "old-time"], DirectedEdge["hscolour", "base"], DirectedEdge["hscolour", "containers"], DirectedEdge["hscope", "base"], DirectedEdge["hscope", "bytestring"], DirectedEdge["hscope", "cereal"], DirectedEdge["hscope", "cpphs"], DirectedEdge["hscope", "deepseq"], DirectedEdge["hscope", "directory"], DirectedEdge["hscope", "haskell-src-exts"], DirectedEdge["hscope", "mtl"], DirectedEdge["hscope", "process"], DirectedEdge["hscope", "pure-cdb"], DirectedEdge["hscope", "uniplate"], DirectedEdge["hscope", "vector"], DirectedEdge["hscrtmpl", "base"], DirectedEdge["hscrtmpl", "directory"], DirectedEdge["hscrtmpl", "process"], DirectedEdge["hscrtmpl", "regex-compat"], DirectedEdge["hscrtmpl", "time"], DirectedEdge["hscrtmpl", "time-locale-compat"], DirectedEdge["hscuid", "base"], DirectedEdge["hscuid", "formatting"], DirectedEdge["hscuid", "hostname"], DirectedEdge["hscuid", "random"], DirectedEdge["hscuid", "text"], DirectedEdge["hscuid", "time"], DirectedEdge["hscuid", "transformers"], DirectedEdge["hscuid", "unix"], DirectedEdge["hscurses", "base"], DirectedEdge["hscurses", "exceptions"], DirectedEdge["hscurses", "mtl"], DirectedEdge["hscurses", "old-locale"], DirectedEdge["hscurses", "old-time"], DirectedEdge["hscurses", "unix"], DirectedEdge["hscurses-fish-ex", "base"], DirectedEdge["hscurses-fish-ex", "hscurses"], DirectedEdge["hscurses-fish-ex", "random"], DirectedEdge["hscurses-fish-ex", "safe"], DirectedEdge["hscurses-fish-ex", "unix"], DirectedEdge["hsdev", "aeson"], DirectedEdge["hsdev", "aeson-pretty"], DirectedEdge["hsdev", "array"], DirectedEdge["hsdev", "async"], DirectedEdge["hsdev", "attoparsec"], DirectedEdge["hsdev", "base"], DirectedEdge["hsdev", "bin-package-db"], DirectedEdge["hsdev", "bytestring"], DirectedEdge["hsdev", "Cabal"], DirectedEdge["hsdev", "containers"], DirectedEdge["hsdev", "cpphs"], DirectedEdge["hsdev", "data-default"], DirectedEdge["hsdev", "deepseq"], DirectedEdge["hsdev", "directory"], DirectedEdge["hsdev", "exceptions"], DirectedEdge["hsdev", "filepath"], DirectedEdge["hsdev", "fsnotify"], DirectedEdge["hsdev", "ghc"], DirectedEdge["hsdev", "ghc-boot"], DirectedEdge["hsdev", "ghc-paths"], DirectedEdge["hsdev", "ghc-syb-utils"], DirectedEdge["hsdev", "haddock-api"], DirectedEdge["hsdev", "haskell-src-exts"], DirectedEdge["hsdev", "hdocs"], DirectedEdge["hsdev", "hformat"], DirectedEdge["hsdev", "hlint"], DirectedEdge["hsdev", "hsdev"], DirectedEdge["hsdev", "HTTP"], DirectedEdge["hsdev", "lens"], DirectedEdge["hsdev", "lifted-base"], DirectedEdge["hsdev", "monad-control"], DirectedEdge["hsdev", "monad-loops"], DirectedEdge["hsdev", "mtl"], DirectedEdge["hsdev", "network"], DirectedEdge["hsdev", "optparse-applicative"], DirectedEdge["hsdev", "process"], DirectedEdge["hsdev", "regex-pcre-builtin"], DirectedEdge["hsdev", "scientific"], DirectedEdge["hsdev", "simple-log"], DirectedEdge["hsdev", "syb"], DirectedEdge["hsdev", "template-haskell"], DirectedEdge["hsdev", "text"], DirectedEdge["hsdev", "text-region"], DirectedEdge["hsdev", "time"], DirectedEdge["hsdev", "transformers"], DirectedEdge["hsdev", "transformers-base"], DirectedEdge["hsdev", "uniplate"], DirectedEdge["hsdev", "unix"], DirectedEdge["hsdev", "unordered-containers"], DirectedEdge["hsdev", "vector"], DirectedEdge["hsdif", "base"], DirectedEdge["hsdif", "bytestring"], DirectedEdge["hsdif", "hosc"], DirectedEdge["hsdip", "base"], DirectedEdge["hsdip", "cairo"], DirectedEdge["hsdip", "containers"], DirectedEdge["hsdip", "HUnit"], DirectedEdge["hsdip", "parsec"], DirectedEdge["hsdns", "base"], DirectedEdge["hsdns", "containers"], DirectedEdge["hsdns", "network"], DirectedEdge["hsdns-cache", "base"], DirectedEdge["hsdns-cache", "hsdns"], DirectedEdge["hsdns-cache", "network"], DirectedEdge["hsdns-cache", "SafeSemaphore"], DirectedEdge["hsdns-cache", "text"], DirectedEdge["hsdns-cache", "time"], DirectedEdge["hsdns-cache", "unordered-containers"], DirectedEdge["hse-cpp", "base"], DirectedEdge["hse-cpp", "cpphs"], DirectedEdge["hse-cpp", "haskell-src-exts"], DirectedEdge["hsebaysdk", "aeson"], DirectedEdge["hsebaysdk", "base"], DirectedEdge["hsebaysdk", "bytestring"], DirectedEdge["hsebaysdk", "ghc-prim"], DirectedEdge["hsebaysdk", "http-client"], DirectedEdge["hsebaysdk", "http-types"], DirectedEdge["hsebaysdk", "text"], DirectedEdge["hsebaysdk", "time"], DirectedEdge["hsebaysdk", "transformers"], DirectedEdge["hsebaysdk", "unordered-containers"], DirectedEdge["hsemail", "base"], DirectedEdge["hsemail", "mtl"], DirectedEdge["hsemail", "old-time"], DirectedEdge["hsemail", "parsec"], DirectedEdge["hsemail-ns", "base"], DirectedEdge["hsemail-ns", "mtl"], DirectedEdge["hsemail-ns", "old-time"], DirectedEdge["hsemail-ns", "parsec"], DirectedEdge["hsenv", "base"], DirectedEdge["hsenv", "bytestring"], DirectedEdge["hsenv", "Cabal"], DirectedEdge["hsenv", "directory"], DirectedEdge["hsenv", "file-embed"], DirectedEdge["hsenv", "filepath"], DirectedEdge["hsenv", "http-streams"], DirectedEdge["hsenv", "io-streams"], DirectedEdge["hsenv", "mtl"], DirectedEdge["hsenv", "process"], DirectedEdge["hsenv", "safe"], DirectedEdge["hsenv", "split"], DirectedEdge["hsenv", "unix"], DirectedEdge["hserv", "base"], DirectedEdge["hserv", "cmdargs"], DirectedEdge["hserv", "wai-app-static"], DirectedEdge["hserv", "warp"], DirectedEdge["hset", "base"], DirectedEdge["hset", "deepseq"], DirectedEdge["hset", "tagged"], DirectedEdge["hset", "type-fun"], DirectedEdge["hsexif", "base"], DirectedEdge["hsexif", "binary"], DirectedEdge["hsexif", "bytestring"], DirectedEdge["hsexif", "containers"], DirectedEdge["hsexif", "iconv"], DirectedEdge["hsexif", "text"], DirectedEdge["hsexif", "time"], DirectedEdge["hsfacter", "language-puppet"], DirectedEdge["hsfacter", "base"], DirectedEdge["hsfacter", "containers"], DirectedEdge["hsfacter", "language-puppet"], DirectedEdge["hsfacter", "text"], DirectedEdge["hsfcsh", "base"], DirectedEdge["hsfcsh", "hdaemonize"], DirectedEdge["hsfcsh", "hslogger"], DirectedEdge["hsfcsh", "network"], DirectedEdge["hsfcsh", "process"], DirectedEdge["hsfilt", "base"], DirectedEdge["hsfilt", "ghc"], DirectedEdge["hsgnutls", "base"], DirectedEdge["hsgnutls", "bytestring"], DirectedEdge["hsgnutls", "mtl"], DirectedEdge["hsgnutls", "old-time"], DirectedEdge["hsgnutls-yj", "base"], DirectedEdge["hsgnutls-yj", "bytestring"], DirectedEdge["hsgnutls-yj", "mtl"], DirectedEdge["hsgnutls-yj", "old-time"], DirectedEdge["hsgsom", "base"], DirectedEdge["hsgsom", "containers"], DirectedEdge["hsgsom", "random"], DirectedEdge["hsgsom", "stm"], DirectedEdge["hsgsom", "time"], DirectedEdge["hsgtd", "ansi-terminal"], DirectedEdge["hsgtd", "base"], DirectedEdge["hsgtd", "containers"], DirectedEdge["hsgtd", "directory"], DirectedEdge["hsgtd", "haskeline"], DirectedEdge["hsgtd", "mtl"], DirectedEdge["hsharc", "base"], DirectedEdge["hsharc", "xml"], DirectedEdge["hsignal", "array"], DirectedEdge["hsignal", "base"], DirectedEdge["hsignal", "binary"], DirectedEdge["hsignal", "bytestring"], DirectedEdge["hsignal", "hmatrix"], DirectedEdge["hsignal", "hmatrix-gsl"], DirectedEdge["hsignal", "hmatrix-gsl-stats"], DirectedEdge["hsignal", "hstatistics"], DirectedEdge["hsignal", "mtl"], DirectedEdge["hsignal", "storable-complex"], DirectedEdge["hsignal", "vector"], DirectedEdge["hsilop", "base"], DirectedEdge["hsilop", "directory"], DirectedEdge["hsilop", "filepath"], DirectedEdge["hsilop", "haskeline"], DirectedEdge["hsilop", "xdg-basedir"], DirectedEdge["hsimport", "attoparsec"], DirectedEdge["hsimport", "base"], DirectedEdge["hsimport", "cmdargs"], DirectedEdge["hsimport", "directory"], DirectedEdge["hsimport", "dyre"], DirectedEdge["hsimport", "haskell-src-exts"], DirectedEdge["hsimport", "hsimport"], DirectedEdge["hsimport", "ilist"], DirectedEdge["hsimport", "microlens"], DirectedEdge["hsimport", "mtl"], DirectedEdge["hsimport", "split"], DirectedEdge["hsimport", "text"], DirectedEdge["hsini", "base"], DirectedEdge["hsini", "bytestring"], DirectedEdge["hsini", "containers"], DirectedEdge["hsini", "mtl"], DirectedEdge["hsini", "parsec"], DirectedEdge["hskeleton", "base"], DirectedEdge["hskeleton", "Cabal"], DirectedEdge["hslackbuilder", "base"], DirectedEdge["hslackbuilder", "Cabal"], DirectedEdge["hslackbuilder", "directory"], DirectedEdge["hslackbuilder", "filepath"], DirectedEdge["hslackbuilder", "process"], DirectedEdge["hslackbuilder", "unix"], DirectedEdge["hslibsvm", "base"], DirectedEdge["hslibsvm", "containers"], DirectedEdge["hslinks", "base"], DirectedEdge["hslinks", "Cabal"], DirectedEdge["hslinks", "hint"], DirectedEdge["hslinks", "MemoTrie"], DirectedEdge["hslinks", "process"], DirectedEdge["hslinks", "regex-compat"], DirectedEdge["hslogger", "base"], DirectedEdge["hslogger", "containers"], DirectedEdge["hslogger", "directory"], DirectedEdge["hslogger", "mtl"], DirectedEdge["hslogger", "network"], DirectedEdge["hslogger", "old-locale"], DirectedEdge["hslogger", "process"], DirectedEdge["hslogger", "time"], DirectedEdge["hslogger", "unix"], DirectedEdge["hslogger-reader", "attoparsec"], DirectedEdge["hslogger-reader", "base"], DirectedEdge["hslogger-reader", "hslogger"], DirectedEdge["hslogger-reader", "hslogger-reader"], DirectedEdge["hslogger-reader", "old-locale"], DirectedEdge["hslogger-reader", "optparse-applicative"], DirectedEdge["hslogger-reader", "text"], DirectedEdge["hslogger-reader", "text-icu"], DirectedEdge["hslogger-reader", "time"], DirectedEdge["hslogger-template", "base"], DirectedEdge["hslogger-template", "hslogger"], DirectedEdge["hslogger-template", "mtl"], DirectedEdge["hslogger-template", "template-haskell"], DirectedEdge["hslogger4j", "hslogger"], DirectedEdge["hslogger4j", "hslogger"], DirectedEdge["hslogstash", "aeson"], DirectedEdge["hslogstash", "attoparsec"], DirectedEdge["hslogstash", "base"], DirectedEdge["hslogstash", "blaze-builder"], DirectedEdge["hslogstash", "bytestring"], DirectedEdge["hslogstash", "conduit"], DirectedEdge["hslogstash", "conduit-extra"], DirectedEdge["hslogstash", "containers"], DirectedEdge["hslogstash", "data-default"], DirectedEdge["hslogstash", "hedis"], DirectedEdge["hslogstash", "http-client"], DirectedEdge["hslogstash", "http-conduit"], DirectedEdge["hslogstash", "http-types"], DirectedEdge["hslogstash", "iconv"], DirectedEdge["hslogstash", "lens"], DirectedEdge["hslogstash", "lens-aeson"], DirectedEdge["hslogstash", "network"], DirectedEdge["hslogstash", "parallel-io"], DirectedEdge["hslogstash", "resourcet"], DirectedEdge["hslogstash", "stm"], DirectedEdge["hslogstash", "stm-chans"], DirectedEdge["hslogstash", "stm-conduit"], DirectedEdge["hslogstash", "stm-firehose"], DirectedEdge["hslogstash", "text"], DirectedEdge["hslogstash", "text-format"], DirectedEdge["hslogstash", "time"], DirectedEdge["hslogstash", "transformers"], DirectedEdge["hslogstash", "unordered-containers"], DirectedEdge["hslogstash", "vector"], DirectedEdge["hslogstash", "wai"], DirectedEdge["hslua", "base"], DirectedEdge["hslua", "bytestring"], DirectedEdge["hsmagick", "base"], DirectedEdge["hsmagick", "bytestring"], DirectedEdge["hsmagick", "directory"], DirectedEdge["hsmagick", "filepath"], DirectedEdge["hsmagick", "pretty"], DirectedEdge["hsmagick", "process"], DirectedEdge["hsmisc", "base"], DirectedEdge["hsmisc", "containers"], DirectedEdge["hsmisc", "mtl"], DirectedEdge["hsmisc", "old-locale"], DirectedEdge["hsmisc", "parsec"], DirectedEdge["hsmisc", "time"], DirectedEdge["hsmtpclient", "array"], DirectedEdge["hsmtpclient", "base"], DirectedEdge["hsmtpclient", "directory"], DirectedEdge["hsmtpclient", "network"], DirectedEdge["hsmtpclient", "old-time"], DirectedEdge["hsndfile", "base"], DirectedEdge["hsndfile-storablevector", "base"], DirectedEdge["hsndfile-storablevector", "hsndfile"], DirectedEdge["hsndfile-storablevector", "storablevector"], DirectedEdge["hsndfile-vector", "base"], DirectedEdge["hsndfile-vector", "hsndfile"], DirectedEdge["hsndfile-vector", "vector"], DirectedEdge["hsnock", "base"], DirectedEdge["hsnock", "parsec"], DirectedEdge["hsnock", "readline"], DirectedEdge["hsnoise", "base"], DirectedEdge["hsnoise", "vector"], DirectedEdge["hsns", "base"], DirectedEdge["hsns", "network"], DirectedEdge["hsns", "pcap"], DirectedEdge["hsnsq", "aeson"], DirectedEdge["hsnsq", "async"], DirectedEdge["hsnsq", "attoparsec"], DirectedEdge["hsnsq", "attoparsec-binary"], DirectedEdge["hsnsq", "base"], DirectedEdge["hsnsq", "bytestring"], DirectedEdge["hsnsq", "containers"], DirectedEdge["hsnsq", "hostname"], DirectedEdge["hsnsq", "hslogger"], DirectedEdge["hsnsq", "mtl"], DirectedEdge["hsnsq", "network"], DirectedEdge["hsnsq", "pipes"], DirectedEdge["hsnsq", "pipes-attoparsec"], DirectedEdge["hsnsq", "pipes-network"], DirectedEdge["hsnsq", "stm"], DirectedEdge["hsnsq", "stm-chans"], DirectedEdge["hsnsq", "text"], DirectedEdge["hsntp", "array"], DirectedEdge["hsntp", "base"], DirectedEdge["hsntp", "mtl"], DirectedEdge["hsntp", "network"], DirectedEdge["hsntp", "old-time"], DirectedEdge["hsntp", "random"], DirectedEdge["hsntp", "unix"], DirectedEdge["hsoptions", "base"], DirectedEdge["hsoptions", "containers"], DirectedEdge["hsoptions", "directory"], DirectedEdge["hsoptions", "hsoptions"], DirectedEdge["hsoptions", "parsec"], DirectedEdge["hsoptions", "regex-compat"], DirectedEdge["hsoptions", "regex-posix"], DirectedEdge["hsp", "base"], DirectedEdge["hsp", "mtl"], DirectedEdge["hsp", "text"], DirectedEdge["hsp-cgi", "base"], DirectedEdge["hsp-cgi", "containers"], DirectedEdge["hsp-cgi", "harp"], DirectedEdge["hsp-cgi", "hsp"], DirectedEdge["hsp-cgi", "network"], DirectedEdge["hsparklines", "base"], DirectedEdge["hsparklines", "bytestring"], DirectedEdge["hsparklines", "dataenc"], DirectedEdge["hsparklines", "gd"], DirectedEdge["hsparql", "base"], DirectedEdge["hsparql", "bytestring"], DirectedEdge["hsparql", "HTTP"], DirectedEdge["hsparql", "MissingH"], DirectedEdge["hsparql", "mtl"], DirectedEdge["hsparql", "network"], DirectedEdge["hsparql", "network-uri"], DirectedEdge["hsparql", "rdf4h"], DirectedEdge["hsparql", "text"], DirectedEdge["hsparql", "xml"], DirectedEdge["hspear", "base"], DirectedEdge["hspear", "bytestring"], DirectedEdge["hspear", "bytestring-lexing"], DirectedEdge["hspear", "split"], DirectedEdge["hspear", "utf8-string"], DirectedEdge["hspear", "zlib"], DirectedEdge["hspec", "base"], DirectedEdge["hspec", "hspec-core"], DirectedEdge["hspec", "hspec-discover"], DirectedEdge["hspec", "hspec-expectations"], DirectedEdge["hspec", "HUnit"], DirectedEdge["hspec", "QuickCheck"], DirectedEdge["hspec", "transformers"], DirectedEdge["hspec-attoparsec", "attoparsec"], DirectedEdge["hspec-attoparsec", "base"], DirectedEdge["hspec-attoparsec", "bytestring"], DirectedEdge["hspec-attoparsec", "hspec-expectations"], DirectedEdge["hspec-attoparsec", "text"], DirectedEdge["hspec-checkers", "base"], DirectedEdge["hspec-checkers", "checkers"], DirectedEdge["hspec-checkers", "hspec"], DirectedEdge["hspec-contrib", "base"], DirectedEdge["hspec-contrib", "hspec-core"], DirectedEdge["hspec-contrib", "HUnit"], DirectedEdge["hspec-core", "ansi-terminal"], DirectedEdge["hspec-core", "async"], DirectedEdge["hspec-core", "base"], DirectedEdge["hspec-core", "deepseq"], DirectedEdge["hspec-core", "hspec-expectations"], DirectedEdge["hspec-core", "HUnit"], DirectedEdge["hspec-core", "QuickCheck"], DirectedEdge["hspec-core", "quickcheck-io"], DirectedEdge["hspec-core", "random"], DirectedEdge["hspec-core", "setenv"], DirectedEdge["hspec-core", "tf-random"], DirectedEdge["hspec-core", "time"], DirectedEdge["hspec-core", "transformers"], DirectedEdge["hspec-discover", "base"], DirectedEdge["hspec-discover", "directory"], DirectedEdge["hspec-discover", "filepath"], DirectedEdge["hspec-discover", "hspec-discover"], DirectedEdge["hspec-expectations", "base"], DirectedEdge["hspec-expectations", "HUnit"], DirectedEdge["hspec-expectations-lens", "base"], DirectedEdge["hspec-expectations-lens", "hspec"], DirectedEdge["hspec-expectations-lens", "hspec-expectations"], DirectedEdge["hspec-expectations-lens", "HUnit"], DirectedEdge["hspec-expectations-lens", "lens"], DirectedEdge["hspec-expectations-lifted", "base"], DirectedEdge["hspec-expectations-lifted", "hspec-expectations"], DirectedEdge["hspec-expectations-lifted", "transformers"], DirectedEdge["hspec-expectations-pretty", "base"], DirectedEdge["hspec-expectations-pretty", "deepseq"], DirectedEdge["hspec-expectations-pretty", "hspec-expectations"], DirectedEdge["hspec-expectations-pretty", "wl-pprint-extras"], DirectedEdge["hspec-expectations-pretty", "wl-pprint-terminfo"], DirectedEdge["hspec-expectations-pretty-diff", "ansi-terminal"], DirectedEdge["hspec-expectations-pretty-diff", "base"], DirectedEdge["hspec-expectations-pretty-diff", "Diff"], DirectedEdge["hspec-expectations-pretty-diff", "hscolour"], DirectedEdge["hspec-expectations-pretty-diff", "HUnit"], DirectedEdge["hspec-expectations-pretty-diff", "nicify-lib"], DirectedEdge["hspec-expectations-pretty-diff", "text"], DirectedEdge["hspec-experimental", "base"], DirectedEdge["hspec-experimental", "hspec"], DirectedEdge["hspec-experimental", "HUnit"], DirectedEdge["hspec-experimental", "QuickCheck"], DirectedEdge["hspec-jenkins", "base"], DirectedEdge["hspec-jenkins", "blaze-markup"], DirectedEdge["hspec-jenkins", "hspec"], DirectedEdge["hspec-laws", "base"], DirectedEdge["hspec-laws", "hspec"], DirectedEdge["hspec-laws", "QuickCheck"], DirectedEdge["hspec-megaparsec", "base"], DirectedEdge["hspec-megaparsec", "containers"], DirectedEdge["hspec-megaparsec", "hspec-expectations"], DirectedEdge["hspec-megaparsec", "megaparsec"], DirectedEdge["hspec-megaparsec", "semigroups"], DirectedEdge["hspec-meta", "ansi-terminal"], DirectedEdge["hspec-meta", "async"], DirectedEdge["hspec-meta", "base"], DirectedEdge["hspec-meta", "deepseq"], DirectedEdge["hspec-meta", "directory"], DirectedEdge["hspec-meta", "filepath"], DirectedEdge["hspec-meta", "hspec-expectations"], DirectedEdge["hspec-meta", "HUnit"], DirectedEdge["hspec-meta", "QuickCheck"], DirectedEdge["hspec-meta", "quickcheck-io"], DirectedEdge["hspec-meta", "random"], DirectedEdge["hspec-meta", "setenv"], DirectedEdge["hspec-meta", "time"], DirectedEdge["hspec-meta", "transformers"], DirectedEdge["hspec-monad-control", "base"], DirectedEdge["hspec-monad-control", "hspec-core"], DirectedEdge["hspec-monad-control", "monad-control"], DirectedEdge["hspec-monad-control", "transformers"], DirectedEdge["hspec-monad-control", "transformers-base"], DirectedEdge["hspec-server", "base"], DirectedEdge["hspec-server", "containers"], DirectedEdge["hspec-server", "hspec"], DirectedEdge["hspec-server", "hspec-core"], DirectedEdge["hspec-server", "hspec-expectations"], DirectedEdge["hspec-server", "HUnit"], DirectedEdge["hspec-server", "process"], DirectedEdge["hspec-server", "regex-posix"], DirectedEdge["hspec-server", "temporary"], DirectedEdge["hspec-server", "transformers"], DirectedEdge["hspec-setup", "base"], DirectedEdge["hspec-setup", "directory"], DirectedEdge["hspec-setup", "filepath"], DirectedEdge["hspec-setup", "process"], DirectedEdge["hspec-setup", "projectroot"], DirectedEdge["hspec-shouldbe", "hspec"], DirectedEdge["hspec-shouldbe", "hspec"], DirectedEdge["hspec-shouldbe", "test-shouldbe"], DirectedEdge["hspec-slow", "base"], DirectedEdge["hspec-slow", "hspec"], DirectedEdge["hspec-slow", "mtl"], DirectedEdge["hspec-slow", "stm"], DirectedEdge["hspec-slow", "time"], DirectedEdge["hspec-slow", "transformers"], DirectedEdge["hspec-smallcheck", "base"], DirectedEdge["hspec-smallcheck", "hspec-core"], DirectedEdge["hspec-smallcheck", "smallcheck"], DirectedEdge["hspec-snap", "aeson"], DirectedEdge["hspec-snap", "base"], DirectedEdge["hspec-snap", "bytestring"], DirectedEdge["hspec-snap", "containers"], DirectedEdge["hspec-snap", "digestive-functors"], DirectedEdge["hspec-snap", "HandsomeSoup"], DirectedEdge["hspec-snap", "hspec"], DirectedEdge["hspec-snap", "hspec-core"], DirectedEdge["hspec-snap", "hxt"], DirectedEdge["hspec-snap", "lens"], DirectedEdge["hspec-snap", "mtl"], DirectedEdge["hspec-snap", "snap"], DirectedEdge["hspec-snap", "snap-core"], DirectedEdge["hspec-snap", "text"], DirectedEdge["hspec-snap", "transformers"], DirectedEdge["hspec-structured-formatter", "base"], DirectedEdge["hspec-structured-formatter", "hspec"], DirectedEdge["hspec-test-framework", "base"], DirectedEdge["hspec-test-framework", "hspec"], DirectedEdge["hspec-test-framework", "hspec-contrib"], DirectedEdge["hspec-test-framework", "hspec-core"], DirectedEdge["hspec-test-framework", "HUnit"], DirectedEdge["hspec-test-framework", "QuickCheck"], DirectedEdge["hspec-test-framework-th", "base"], DirectedEdge["hspec-test-framework-th", "hspec-test-framework"], DirectedEdge["hspec-test-framework-th", "language-haskell-extract"], DirectedEdge["hspec-test-framework-th", "template-haskell"], DirectedEdge["hspec-test-sandbox", "base"], DirectedEdge["hspec-test-sandbox", "hspec"], DirectedEdge["hspec-test-sandbox", "hspec-core"], DirectedEdge["hspec-test-sandbox", "test-sandbox"], DirectedEdge["hspec-wai", "base"], DirectedEdge["hspec-wai", "base-compat"], DirectedEdge["hspec-wai", "bytestring"], DirectedEdge["hspec-wai", "case-insensitive"], DirectedEdge["hspec-wai", "hspec-core"], DirectedEdge["hspec-wai", "hspec-expectations"], DirectedEdge["hspec-wai", "http-types"], DirectedEdge["hspec-wai", "QuickCheck"], DirectedEdge["hspec-wai", "text"], DirectedEdge["hspec-wai", "transformers"], DirectedEdge["hspec-wai", "wai"], DirectedEdge["hspec-wai", "wai-extra"], DirectedEdge["hspec-wai", "with-location"], DirectedEdge["hspec-wai-json", "aeson"], DirectedEdge["hspec-wai-json", "aeson-qq"], DirectedEdge["hspec-wai-json", "base"], DirectedEdge["hspec-wai-json", "bytestring"], DirectedEdge["hspec-wai-json", "case-insensitive"], DirectedEdge["hspec-wai-json", "hspec-wai"], DirectedEdge["hspec-wai-json", "template-haskell"], DirectedEdge["hspec-webdriver", "base"], DirectedEdge["hspec-webdriver", "data-default"], DirectedEdge["hspec-webdriver", "hashable"], DirectedEdge["hspec-webdriver", "hspec"], DirectedEdge["hspec-webdriver", "hspec-core"], DirectedEdge["hspec-webdriver", "HUnit"], DirectedEdge["hspec-webdriver", "lifted-base"], DirectedEdge["hspec-webdriver", "stm"], DirectedEdge["hspec-webdriver", "text"], DirectedEdge["hspec-webdriver", "transformers"], DirectedEdge["hspec-webdriver", "unordered-containers"], DirectedEdge["hspec-webdriver", "webdriver"], DirectedEdge["hspec2", "hspec"], DirectedEdge["hspec2", "base"], DirectedEdge["hspec2", "hspec"], DirectedEdge["hspec2", "hspec-discover"], DirectedEdge["hspr-sh", "base"], DirectedEdge["hspr-sh", "old-time"], DirectedEdge["hspread", "base"], DirectedEdge["hspread", "binary"], DirectedEdge["hspread", "bytestring"], DirectedEdge["hspread", "containers"], DirectedEdge["hspread", "extensible-exceptions"], DirectedEdge["hspread", "network"], DirectedEdge["hspresent", "array"], DirectedEdge["hspresent", "base"], DirectedEdge["hspresent", "bytestring"], DirectedEdge["hspresent", "vty"], DirectedEdge["hsprocess", "haskell-awk"], DirectedEdge["hsprocess", "base"], DirectedEdge["hsprocess", "bytestring"], DirectedEdge["hsprocess", "containers"], DirectedEdge["hsprocess", "directory"], DirectedEdge["hsprocess", "easy-file"], DirectedEdge["hsprocess", "filepath"], DirectedEdge["hsprocess", "hint"], DirectedEdge["hsprocess", "MonadCatchIO-mtl"], DirectedEdge["hsprocess", "process"], DirectedEdge["hsprocess", "stringsearch"], DirectedEdge["hsprocess", "time"], DirectedEdge["hsql", "base"], DirectedEdge["hsql", "old-time"], DirectedEdge["hsql-mysql", "base"], DirectedEdge["hsql-mysql", "Cabal"], DirectedEdge["hsql-mysql", "hsql"], DirectedEdge["hsql-odbc", "base"], DirectedEdge["hsql-odbc", "hsql"], DirectedEdge["hsql-odbc", "old-time"], DirectedEdge["hsql-postgresql", "base"], DirectedEdge["hsql-postgresql", "hsql"], DirectedEdge["hsql-postgresql", "old-time"], DirectedEdge["hsql-sqlite3", "base"], DirectedEdge["hsql-sqlite3", "hsql"], DirectedEdge["hsqml", "base"], DirectedEdge["hsqml", "containers"], DirectedEdge["hsqml", "filepath"], DirectedEdge["hsqml", "tagged"], DirectedEdge["hsqml", "text"], DirectedEdge["hsqml", "transformers"], DirectedEdge["hsqml-datamodel", "base"], DirectedEdge["hsqml-datamodel", "hsqml"], DirectedEdge["hsqml-datamodel", "template-haskell"], DirectedEdge["hsqml-datamodel", "text"], DirectedEdge["hsqml-datamodel-vinyl", "base"], DirectedEdge["hsqml-datamodel-vinyl", "exceptions"], DirectedEdge["hsqml-datamodel-vinyl", "hsqml-datamodel"], DirectedEdge["hsqml-datamodel-vinyl", "type-list"], DirectedEdge["hsqml-datamodel-vinyl", "vinyl"], DirectedEdge["hsqml-demo-morris", "base"], DirectedEdge["hsqml-demo-morris", "containers"], DirectedEdge["hsqml-demo-morris", "deepseq"], DirectedEdge["hsqml-demo-morris", "directory"], DirectedEdge["hsqml-demo-morris", "hsqml"], DirectedEdge["hsqml-demo-morris", "OddWord"], DirectedEdge["hsqml-demo-morris", "text"], DirectedEdge["hsqml-demo-notes", "base"], DirectedEdge["hsqml-demo-notes", "containers"], DirectedEdge["hsqml-demo-notes", "hsqml"], DirectedEdge["hsqml-demo-notes", "sqlite-simple"], DirectedEdge["hsqml-demo-notes", "text"], DirectedEdge["hsqml-demo-notes", "transformers"], DirectedEdge["hsqml-demo-samples", "base"], DirectedEdge["hsqml-demo-samples", "hsqml"], DirectedEdge["hsqml-demo-samples", "OpenGL"], DirectedEdge["hsqml-demo-samples", "OpenGLRaw"], DirectedEdge["hsqml-demo-samples", "text"], DirectedEdge["hsqml-morris", "hsqml-demo-morris"], DirectedEdge["hsqml-morris", "base"], DirectedEdge["hsqml-morris", "containers"], DirectedEdge["hsqml-morris", "deepseq"], DirectedEdge["hsqml-morris", "directory"], DirectedEdge["hsqml-morris", "hsqml"], DirectedEdge["hsqml-morris", "OddWord"], DirectedEdge["hsqml-morris", "tagged"], DirectedEdge["hsreadability", "aeson"], DirectedEdge["hsreadability", "authenticate-oauth"], DirectedEdge["hsreadability", "base"], DirectedEdge["hsreadability", "bytestring"], DirectedEdge["hsreadability", "data-default"], DirectedEdge["hsreadability", "http-conduit"], DirectedEdge["hsreadability", "http-types"], DirectedEdge["hsreadability", "text"], DirectedEdge["hsreadability", "xsd"], DirectedEdge["hsseccomp", "base"], DirectedEdge["hsshellscript", "base"], DirectedEdge["hsshellscript", "directory"], DirectedEdge["hsshellscript", "parsec"], DirectedEdge["hsshellscript", "random"], DirectedEdge["hsshellscript", "unix"], DirectedEdge["hssourceinfo", "base"], DirectedEdge["hssourceinfo", "containers"], DirectedEdge["hssourceinfo", "directory"], DirectedEdge["hssourceinfo", "filepath"], DirectedEdge["hssourceinfo", "regexpr"], DirectedEdge["hssqlppp", "base"], DirectedEdge["hssqlppp", "containers"], DirectedEdge["hssqlppp", "mtl"], DirectedEdge["hssqlppp", "parsec"], DirectedEdge["hssqlppp", "pretty"], DirectedEdge["hssqlppp", "pretty-show"], DirectedEdge["hssqlppp", "syb"], DirectedEdge["hssqlppp", "text"], DirectedEdge["hssqlppp", "transformers"], DirectedEdge["hssqlppp", "uniplate"], DirectedEdge["hssqlppp-th", "base"], DirectedEdge["hssqlppp-th", "hssqlppp"], DirectedEdge["hssqlppp-th", "syb"], DirectedEdge["hssqlppp-th", "template-haskell"], DirectedEdge["hssqlppp-th", "text"], DirectedEdge["hstatistics", "array"], DirectedEdge["hstatistics", "base"], DirectedEdge["hstatistics", "hmatrix"], DirectedEdge["hstatistics", "hmatrix-gsl-stats"], DirectedEdge["hstatistics", "random"], DirectedEdge["hstatistics", "vector"], DirectedEdge["hstats", "base"], DirectedEdge["hstatsd", "base"], DirectedEdge["hstatsd", "bytestring"], DirectedEdge["hstatsd", "mtl"], DirectedEdge["hstatsd", "network"], DirectedEdge["hstatsd", "text"], DirectedEdge["hstest", "base"], DirectedEdge["hstest", "directory"], DirectedEdge["hstest", "filepath"], DirectedEdge["hstest", "ghc"], DirectedEdge["hstest", "ghc-paths"], DirectedEdge["hstest", "HUnit"], DirectedEdge["hstest", "mtl"], DirectedEdge["hstest", "QuickCheck"], DirectedEdge["hstest", "random"], DirectedEdge["hstidy", "base"], DirectedEdge["hstidy", "haskell-src-exts"], DirectedEdge["hstorchat", "attoparsec"], DirectedEdge["hstorchat", "base"], DirectedEdge["hstorchat", "containers"], DirectedEdge["hstorchat", "hsqml"], DirectedEdge["hstorchat", "hstorchat"], DirectedEdge["hstorchat", "network"], DirectedEdge["hstorchat", "process"], DirectedEdge["hstorchat", "random"], DirectedEdge["hstorchat", "safecopy"], DirectedEdge["hstorchat", "socks"], DirectedEdge["hstorchat", "tagged"], DirectedEdge["hstorchat", "text"], DirectedEdge["hstradeking", "aeson"], DirectedEdge["hstradeking", "attoparsec"], DirectedEdge["hstradeking", "base"], DirectedEdge["hstradeking", "bytestring"], DirectedEdge["hstradeking", "case-insensitive"], DirectedEdge["hstradeking", "conduit"], DirectedEdge["hstradeking", "configurator"], DirectedEdge["hstradeking", "containers"], DirectedEdge["hstradeking", "hoauth"], DirectedEdge["hstradeking", "hstradeking"], DirectedEdge["hstradeking", "http-conduit"], DirectedEdge["hstradeking", "lifted-base"], DirectedEdge["hstradeking", "numbers"], DirectedEdge["hstradeking", "old-locale"], DirectedEdge["hstradeking", "resourcet"], DirectedEdge["hstradeking", "RSA"], DirectedEdge["hstradeking", "safe"], DirectedEdge["hstradeking", "text"], DirectedEdge["hstradeking", "time"], DirectedEdge["hstradeking", "transformers"], DirectedEdge["hstradeking", "vector"], DirectedEdge["hstyle", "base"], DirectedEdge["hstyle", "cmdargs"], DirectedEdge["hstyle", "directory"], DirectedEdge["hstyle", "filepath"], DirectedEdge["hstyle", "haskell-src-exts"], DirectedEdge["hstyle", "syb"], DirectedEdge["hstyle", "text"], DirectedEdge["hstyle", "vector"], DirectedEdge["hstzaar", "array"], DirectedEdge["hstzaar", "base"], DirectedEdge["hstzaar", "cairo"], DirectedEdge["hstzaar", "containers"], DirectedEdge["hstzaar", "directory"], DirectedEdge["hstzaar", "filepath"], DirectedEdge["hstzaar", "glade"], DirectedEdge["hstzaar", "gtk"], DirectedEdge["hstzaar", "hashable"], DirectedEdge["hstzaar", "mtl"], DirectedEdge["hstzaar", "parallel"], DirectedEdge["hstzaar", "QuickCheck"], DirectedEdge["hstzaar", "random"], DirectedEdge["hstzaar", "unordered-containers"], DirectedEdge["hstzaar", "vector"], DirectedEdge["hstzaar", "xml"], DirectedEdge["hsubconvert", "base"], DirectedEdge["hsubconvert", "bytestring"], DirectedEdge["hsubconvert", "cmdargs"], DirectedEdge["hsubconvert", "general-prelude"], DirectedEdge["hsubconvert", "gitlib"], DirectedEdge["hsubconvert", "hslogger"], DirectedEdge["hsubconvert", "lens"], DirectedEdge["hsubconvert", "mtl"], DirectedEdge["hsubconvert", "parallel-io"], DirectedEdge["hsubconvert", "regex-posix"], DirectedEdge["hsubconvert", "stringable"], DirectedEdge["hsubconvert", "svndump"], DirectedEdge["hsubconvert", "system-fileio"], DirectedEdge["hsubconvert", "system-filepath"], DirectedEdge["hsubconvert", "text"], DirectedEdge["hsubconvert", "text-format"], DirectedEdge["hsubconvert", "time"], DirectedEdge["hsubconvert", "transformers"], DirectedEdge["hsubconvert", "unix"], DirectedEdge["hsverilog", "base"], DirectedEdge["hsverilog", "containers"], DirectedEdge["hsverilog", "shakespeare"], DirectedEdge["hsverilog", "text"], DirectedEdge["hsverilog", "transformers"], DirectedEdge["hswip", "base"], DirectedEdge["hswip", "mtl"], DirectedEdge["hsx", "hsx2hs"], DirectedEdge["hsx", "base"], DirectedEdge["hsx", "haskell-src-exts"], DirectedEdge["hsx", "mtl"], DirectedEdge["hsx", "utf8-string"], DirectedEdge["hsx-jmacro", "base"], DirectedEdge["hsx-jmacro", "hsp"], DirectedEdge["hsx-jmacro", "jmacro"], DirectedEdge["hsx-jmacro", "mtl"], DirectedEdge["hsx-jmacro", "text"], DirectedEdge["hsx-jmacro", "wl-pprint-text"], DirectedEdge["hsx-xhtml", "base"], DirectedEdge["hsx-xhtml", "hsx"], DirectedEdge["hsx-xhtml", "mtl"], DirectedEdge["hsx2hs", "base"], DirectedEdge["hsx2hs", "bytestring"], DirectedEdge["hsx2hs", "haskell-src-exts"], DirectedEdge["hsx2hs", "haskell-src-meta"], DirectedEdge["hsx2hs", "mtl"], DirectedEdge["hsx2hs", "template-haskell"], DirectedEdge["hsx2hs", "utf8-string"], DirectedEdge["hsyscall", "base"], DirectedEdge["hsyslog", "base"], DirectedEdge["hsyslog", "bytestring"], DirectedEdge["hszephyr", "base"], DirectedEdge["hszephyr", "bytestring"], DirectedEdge["hszephyr", "mtl"], DirectedEdge["hszephyr", "time"], DirectedEdge["htaglib", "base"], DirectedEdge["htaglib", "bytestring"], DirectedEdge["htaglib", "text"], DirectedEdge["htags", "base"], DirectedEdge["htags", "directory"], DirectedEdge["htags", "filepath"], DirectedEdge["htags", "haskell-src"], DirectedEdge["htags", "mtl"], DirectedEdge["htar", "base"], DirectedEdge["htar", "bytestring"], DirectedEdge["htar", "bzlib"], DirectedEdge["htar", "directory"], DirectedEdge["htar", "filepath"], DirectedEdge["htar", "old-locale"], DirectedEdge["htar", "tar"], DirectedEdge["htar", "time"], DirectedEdge["htar", "zlib"], DirectedEdge["htiled", "base"], DirectedEdge["htiled", "base64-bytestring"], DirectedEdge["htiled", "bytestring"], DirectedEdge["htiled", "containers"], DirectedEdge["htiled", "filepath"], DirectedEdge["htiled", "hxt"], DirectedEdge["htiled", "split"], DirectedEdge["htiled", "zlib"], DirectedEdge["htime", "base"], DirectedEdge["htime", "process"], DirectedEdge["htime", "time"], DirectedEdge["html", "base"], DirectedEdge["html-conduit", "base"], DirectedEdge["html-conduit", "bytestring"], DirectedEdge["html-conduit", "conduit"], DirectedEdge["html-conduit", "conduit-extra"], DirectedEdge["html-conduit", "containers"], DirectedEdge["html-conduit", "resourcet"], DirectedEdge["html-conduit", "tagstream-conduit"], DirectedEdge["html-conduit", "text"], DirectedEdge["html-conduit", "transformers"], DirectedEdge["html-conduit", "xml-conduit"], DirectedEdge["html-conduit", "xml-types"], DirectedEdge["html-email-validate", "attoparsec"], DirectedEdge["html-email-validate", "base"], DirectedEdge["html-email-validate", "text"], DirectedEdge["html-entities", "attoparsec"], DirectedEdge["html-entities", "base-prelude"], DirectedEdge["html-entities", "text"], DirectedEdge["html-entities", "unordered-containers"], DirectedEdge["html-kure", "base"], DirectedEdge["html-kure", "hxt"], DirectedEdge["html-kure", "kure"], DirectedEdge["html-minimalist", "base"], DirectedEdge["html-minimalist", "xml"], DirectedEdge["html-parse", "attoparsec"], DirectedEdge["html-parse", "base"], DirectedEdge["html-parse", "deepseq"], DirectedEdge["html-parse", "text"], DirectedEdge["html-rules", "base"], DirectedEdge["html-rules", "lens"], DirectedEdge["html-rules", "mtl"], DirectedEdge["html-rules", "tagsoup"], DirectedEdge["html-rules", "transformers"], DirectedEdge["html-tokenizer", "attoparsec"], DirectedEdge["html-tokenizer", "base-prelude"], DirectedEdge["html-tokenizer", "case-insensitive"], DirectedEdge["html-tokenizer", "conversion"], DirectedEdge["html-tokenizer", "conversion-case-insensitive"], DirectedEdge["html-tokenizer", "conversion-text"], DirectedEdge["html-tokenizer", "text"], DirectedEdge["html-truncate", "base"], DirectedEdge["html-truncate", "tagsoup"], DirectedEdge["html2hamlet", "base"], DirectedEdge["html2hamlet", "bytestring"], DirectedEdge["html2hamlet", "containers"], DirectedEdge["html2hamlet", "hamlet"], DirectedEdge["html2hamlet", "html-conduit"], DirectedEdge["html2hamlet", "http-conduit"], DirectedEdge["html2hamlet", "mtl"], DirectedEdge["html2hamlet", "optparse-declarative"], DirectedEdge["html2hamlet", "regex-tdfa"], DirectedEdge["html2hamlet", "text"], DirectedEdge["html2hamlet", "wl-pprint-text"], DirectedEdge["html2hamlet", "xml-conduit"], DirectedEdge["html5-entity", "aeson"], DirectedEdge["html5-entity", "base"], DirectedEdge["html5-entity", "bytestring"], DirectedEdge["html5-entity", "containers"], DirectedEdge["html5-entity", "haskell-src"], DirectedEdge["html5-entity", "text"], DirectedEdge["html5-entity", "unordered-containers"], DirectedEdge["htodo", "base"], DirectedEdge["htodo", "HDBC"], DirectedEdge["htoml", "aeson"], DirectedEdge["htoml", "base"], DirectedEdge["htoml", "bytestring"], DirectedEdge["htoml", "containers"], DirectedEdge["htoml", "file-embed"], DirectedEdge["htoml", "htoml"], DirectedEdge["htoml", "old-locale"], DirectedEdge["htoml", "parsec"], DirectedEdge["htoml", "tasty"], DirectedEdge["htoml", "tasty-hspec"], DirectedEdge["htoml", "tasty-hunit"], DirectedEdge["htoml", "text"], DirectedEdge["htoml", "time"], DirectedEdge["htoml", "unordered-containers"], DirectedEdge["htoml", "vector"], DirectedEdge["htrace", "base"], DirectedEdge["hts", "base"], DirectedEdge["hts", "hmt"], DirectedEdge["hts", "xml"], DirectedEdge["htsn", "base"], DirectedEdge["htsn", "cmdargs"], DirectedEdge["htsn", "configurator"], DirectedEdge["htsn", "directory"], DirectedEdge["htsn", "filepath"], DirectedEdge["htsn", "hdaemonize"], DirectedEdge["htsn", "hslogger"], DirectedEdge["htsn", "htsn-common"], DirectedEdge["htsn", "hxt"], DirectedEdge["htsn", "MissingH"], DirectedEdge["htsn", "network"], DirectedEdge["htsn", "tasty"], DirectedEdge["htsn", "tasty-hunit"], DirectedEdge["htsn", "unix"], DirectedEdge["htsn-common", "ansi-terminal"], DirectedEdge["htsn-common", "base"], DirectedEdge["htsn-common", "hslogger"], DirectedEdge["htsn-common", "transformers"], DirectedEdge["htsn-import", "base"], DirectedEdge["htsn-import", "cmdargs"], DirectedEdge["htsn-import", "configurator"], DirectedEdge["htsn-import", "containers"], DirectedEdge["htsn-import", "directory"], DirectedEdge["htsn-import", "filepath"], DirectedEdge["htsn-import", "fixed-vector-hetero"], DirectedEdge["htsn-import", "groundhog"], DirectedEdge["htsn-import", "groundhog-postgresql"], DirectedEdge["htsn-import", "groundhog-sqlite"], DirectedEdge["htsn-import", "groundhog-th"], DirectedEdge["htsn-import", "hslogger"], DirectedEdge["htsn-import", "htsn-common"], DirectedEdge["htsn-import", "hxt"], DirectedEdge["htsn-import", "MissingH"], DirectedEdge["htsn-import", "old-locale"], DirectedEdge["htsn-import", "split"], DirectedEdge["htsn-import", "tasty"], DirectedEdge["htsn-import", "tasty-hunit"], DirectedEdge["htsn-import", "time"], DirectedEdge["htsn-import", "transformers"], DirectedEdge["htsn-import", "tuple"], DirectedEdge["http-accept", "base"], DirectedEdge["http-accept", "bytestring"], DirectedEdge["http-api-data", "base"], DirectedEdge["http-api-data", "bytestring"], DirectedEdge["http-api-data", "text"], DirectedEdge["http-api-data", "text-show"], DirectedEdge["http-api-data", "time"], DirectedEdge["http-api-data", "time-locale-compat"], DirectedEdge["http-attoparsec", "attoparsec"], DirectedEdge["http-attoparsec", "base"], DirectedEdge["http-attoparsec", "bytestring"], DirectedEdge["http-attoparsec", "http-types"], DirectedEdge["http-client", "array"], DirectedEdge["http-client", "base"], DirectedEdge["http-client", "base64-bytestring"], DirectedEdge["http-client", "blaze-builder"], DirectedEdge["http-client", "bytestring"], DirectedEdge["http-client", "case-insensitive"], DirectedEdge["http-client", "containers"], DirectedEdge["http-client", "cookie"], DirectedEdge["http-client", "data-default-class"], DirectedEdge["http-client", "deepseq"], DirectedEdge["http-client", "exceptions"], DirectedEdge["http-client", "filepath"], DirectedEdge["http-client", "ghc-prim"], DirectedEdge["http-client", "http-types"], DirectedEdge["http-client", "mime-types"], DirectedEdge["http-client", "network"], DirectedEdge["http-client", "network-uri"], DirectedEdge["http-client", "random"], DirectedEdge["http-client", "streaming-commons"], DirectedEdge["http-client", "text"], DirectedEdge["http-client", "time"], DirectedEdge["http-client", "transformers"], DirectedEdge["http-client-auth", "base"], DirectedEdge["http-client-auth", "base64-string"], DirectedEdge["http-client-auth", "blaze-builder"], DirectedEdge["http-client-auth", "bytestring"], DirectedEdge["http-client-auth", "case-insensitive"], DirectedEdge["http-client-auth", "conduit"], DirectedEdge["http-client-auth", "crypto-conduit"], DirectedEdge["http-client-auth", "http-client"], DirectedEdge["http-client-auth", "http-conduit"], DirectedEdge["http-client-auth", "resourcet"], DirectedEdge["http-client-auth", "transformers"], DirectedEdge["http-client-auth", "utf8-string"], DirectedEdge["http-client-conduit", "http-conduit"], DirectedEdge["http-client-conduit", "base"], DirectedEdge["http-client-conduit", "http-client"], DirectedEdge["http-client-lens", "base"], DirectedEdge["http-client-lens", "bytestring"], DirectedEdge["http-client-lens", "http-client"], DirectedEdge["http-client-lens", "http-types"], DirectedEdge["http-client-lens", "lens"], DirectedEdge["http-client-lens", "network"], DirectedEdge["http-client-multipart", "http-client"], DirectedEdge["http-client-multipart", "base"], DirectedEdge["http-client-multipart", "http-client"], DirectedEdge["http-client-openssl", "base"], DirectedEdge["http-client-openssl", "HsOpenSSL"], DirectedEdge["http-client-openssl", "http-client"], DirectedEdge["http-client-openssl", "network"], DirectedEdge["http-client-request-modifiers", "base"], DirectedEdge["http-client-request-modifiers", "bytestring"], DirectedEdge["http-client-request-modifiers", "exceptions"], DirectedEdge["http-client-request-modifiers", "http-client"], DirectedEdge["http-client-request-modifiers", "http-media"], DirectedEdge["http-client-request-modifiers", "http-types"], DirectedEdge["http-client-request-modifiers", "network"], DirectedEdge["http-client-request-modifiers", "network-uri"], DirectedEdge["http-client-session", "base-prelude"], DirectedEdge["http-client-session", "bytestring"], DirectedEdge["http-client-session", "either"], DirectedEdge["http-client-session", "http-client"], DirectedEdge["http-client-session", "mtl-prelude"], DirectedEdge["http-client-streams", "base"], DirectedEdge["http-client-streams", "bytestring"], DirectedEdge["http-client-streams", "HsOpenSSL"], DirectedEdge["http-client-streams", "http-client"], DirectedEdge["http-client-streams", "http-client-openssl"], DirectedEdge["http-client-streams", "http-client-tls"], DirectedEdge["http-client-streams", "io-streams"], DirectedEdge["http-client-streams", "mtl"], DirectedEdge["http-client-streams", "transformers"], DirectedEdge["http-client-tls", "base"], DirectedEdge["http-client-tls", "bytestring"], DirectedEdge["http-client-tls", "connection"], DirectedEdge["http-client-tls", "data-default-class"], DirectedEdge["http-client-tls", "http-client"], DirectedEdge["http-client-tls", "network"], DirectedEdge["http-client-tls", "tls"], DirectedEdge["http-common", "base"], DirectedEdge["http-common", "base64-bytestring"], DirectedEdge["http-common", "blaze-builder"], DirectedEdge["http-common", "bytestring"], DirectedEdge["http-common", "case-insensitive"], DirectedEdge["http-common", "directory"], DirectedEdge["http-common", "mtl"], DirectedEdge["http-common", "network"], DirectedEdge["http-common", "text"], DirectedEdge["http-common", "transformers"], DirectedEdge["http-common", "unordered-containers"], DirectedEdge["http-conduit", "aeson"], DirectedEdge["http-conduit", "base"], DirectedEdge["http-conduit", "bytestring"], DirectedEdge["http-conduit", "conduit"], DirectedEdge["http-conduit", "conduit-extra"], DirectedEdge["http-conduit", "data-default-class"], DirectedEdge["http-conduit", "exceptions"], DirectedEdge["http-conduit", "http-client"], DirectedEdge["http-conduit", "http-client-tls"], DirectedEdge["http-conduit", "http-types"], DirectedEdge["http-conduit", "lifted-base"], DirectedEdge["http-conduit", "monad-control"], DirectedEdge["http-conduit", "mtl"], DirectedEdge["http-conduit", "resourcet"], DirectedEdge["http-conduit", "transformers"], DirectedEdge["http-conduit-browser", "base"], DirectedEdge["http-conduit-browser", "bytestring"], DirectedEdge["http-conduit-browser", "conduit"], DirectedEdge["http-conduit-browser", "containers"], DirectedEdge["http-conduit-browser", "cookie"], DirectedEdge["http-conduit-browser", "data-default"], DirectedEdge["http-conduit-browser", "exceptions"], DirectedEdge["http-conduit-browser", "http-client"], DirectedEdge["http-conduit-browser", "http-conduit"], DirectedEdge["http-conduit-browser", "http-types"], DirectedEdge["http-conduit-browser", "lifted-base"], DirectedEdge["http-conduit-browser", "monad-control"], DirectedEdge["http-conduit-browser", "network-uri"], DirectedEdge["http-conduit-browser", "resourcet"], DirectedEdge["http-conduit-browser", "time"], DirectedEdge["http-conduit-browser", "transformers"], DirectedEdge["http-conduit-browser", "transformers-base"], DirectedEdge["http-conduit-downloader", "base"], DirectedEdge["http-conduit-downloader", "bytestring"], DirectedEdge["http-conduit-downloader", "conduit"], DirectedEdge["http-conduit-downloader", "connection"], DirectedEdge["http-conduit-downloader", "data-default"], DirectedEdge["http-conduit-downloader", "HsOpenSSL"], DirectedEdge["http-conduit-downloader", "http-client"], DirectedEdge["http-conduit-downloader", "http-conduit"], DirectedEdge["http-conduit-downloader", "http-types"], DirectedEdge["http-conduit-downloader", "lifted-base"], DirectedEdge["http-conduit-downloader", "mtl"], DirectedEdge["http-conduit-downloader", "network"], DirectedEdge["http-conduit-downloader", "network-uri"], DirectedEdge["http-conduit-downloader", "old-locale"], DirectedEdge["http-conduit-downloader", "resourcet"], DirectedEdge["http-conduit-downloader", "time"], DirectedEdge["http-conduit-downloader", "zlib"], DirectedEdge["http-date", "array"], DirectedEdge["http-date", "attoparsec"], DirectedEdge["http-date", "base"], DirectedEdge["http-date", "bytestring"], DirectedEdge["http-dispatch", "aeson"], DirectedEdge["http-dispatch", "base"], DirectedEdge["http-dispatch", "bytestring"], DirectedEdge["http-dispatch", "case-insensitive"], DirectedEdge["http-dispatch", "http-client"], DirectedEdge["http-dispatch", "http-client-tls"], DirectedEdge["http-dispatch", "http-types"], DirectedEdge["http-encodings", "base"], DirectedEdge["http-encodings", "bytestring"], DirectedEdge["http-encodings", "HTTP"], DirectedEdge["http-encodings", "iconv"], DirectedEdge["http-encodings", "mime"], DirectedEdge["http-encodings", "mtl"], DirectedEdge["http-encodings", "parsec"], DirectedEdge["http-encodings", "text"], DirectedEdge["http-encodings", "utf8-string"], DirectedEdge["http-encodings", "zlib"], DirectedEdge["http-enumerator", "http-conduit"], DirectedEdge["http-enumerator", "asn1-data"], DirectedEdge["http-enumerator", "attoparsec"], DirectedEdge["http-enumerator", "attoparsec-enumerator"], DirectedEdge["http-enumerator", "base"], DirectedEdge["http-enumerator", "base64-bytestring"], DirectedEdge["http-enumerator", "blaze-builder"], DirectedEdge["http-enumerator", "blaze-builder-enumerator"], DirectedEdge["http-enumerator", "bytestring"], DirectedEdge["http-enumerator", "case-insensitive"], DirectedEdge["http-enumerator", "certificate"], DirectedEdge["http-enumerator", "containers"], DirectedEdge["http-enumerator", "cprng-aes"], DirectedEdge["http-enumerator", "data-default"], DirectedEdge["http-enumerator", "enumerator"], DirectedEdge["http-enumerator", "failure"], DirectedEdge["http-enumerator", "http-types"], DirectedEdge["http-enumerator", "monad-control"], DirectedEdge["http-enumerator", "network"], DirectedEdge["http-enumerator", "network-bytestring"], DirectedEdge["http-enumerator", "tls"], DirectedEdge["http-enumerator", "tls-extra"], DirectedEdge["http-enumerator", "transformers"], DirectedEdge["http-enumerator", "utf8-string"], DirectedEdge["http-enumerator", "zlib-enum"], DirectedEdge["http-kinder", "aeson"], DirectedEdge["http-kinder", "base"], DirectedEdge["http-kinder", "bytestring"], DirectedEdge["http-kinder", "case-insensitive"], DirectedEdge["http-kinder", "containers"], DirectedEdge["http-kinder", "http-media"], DirectedEdge["http-kinder", "http-types"], DirectedEdge["http-kinder", "singletons"], DirectedEdge["http-kinder", "text"], DirectedEdge["http-kinder", "time"], DirectedEdge["http-kit", "base"], DirectedEdge["http-kit", "bytestring"], DirectedEdge["http-kit", "case-insensitive"], DirectedEdge["http-kit", "http-types"], DirectedEdge["http-link-header", "attoparsec"], DirectedEdge["http-link-header", "base"], DirectedEdge["http-link-header", "bytestring"], DirectedEdge["http-link-header", "bytestring-conversion"], DirectedEdge["http-link-header", "errors"], DirectedEdge["http-link-header", "network-uri"], DirectedEdge["http-link-header", "text"], DirectedEdge["http-listen", "base"], DirectedEdge["http-listen", "bytestring"], DirectedEdge["http-listen", "exceptions"], DirectedEdge["http-listen", "HTTP"], DirectedEdge["http-listen", "network"], DirectedEdge["http-listen", "transformers"], DirectedEdge["http-media", "base"], DirectedEdge["http-media", "bytestring"], DirectedEdge["http-media", "case-insensitive"], DirectedEdge["http-media", "containers"], DirectedEdge["http-monad", "base"], DirectedEdge["http-monad", "bytestring"], DirectedEdge["http-monad", "containers"], DirectedEdge["http-monad", "explicit-exception"], DirectedEdge["http-monad", "HTTP"], DirectedEdge["http-monad", "httpd-shed"], DirectedEdge["http-monad", "lazyio"], DirectedEdge["http-monad", "network"], DirectedEdge["http-monad", "parsec"], DirectedEdge["http-monad", "transformers"], DirectedEdge["http-monad", "utility-ht"], DirectedEdge["http-proxy", "async"], DirectedEdge["http-proxy", "base"], DirectedEdge["http-proxy", "blaze-builder"], DirectedEdge["http-proxy", "bytestring"], DirectedEdge["http-proxy", "bytestring-lexing"], DirectedEdge["http-proxy", "case-insensitive"], DirectedEdge["http-proxy", "conduit"], DirectedEdge["http-proxy", "conduit-extra"], DirectedEdge["http-proxy", "http-client"], DirectedEdge["http-proxy", "http-conduit"], DirectedEdge["http-proxy", "http-types"], DirectedEdge["http-proxy", "mtl"], DirectedEdge["http-proxy", "network"], DirectedEdge["http-proxy", "resourcet"], DirectedEdge["http-proxy", "text"], DirectedEdge["http-proxy", "tls"], DirectedEdge["http-proxy", "transformers"], DirectedEdge["http-proxy", "wai"], DirectedEdge["http-proxy", "wai-conduit"], DirectedEdge["http-proxy", "warp"], DirectedEdge["http-proxy", "warp-tls"], DirectedEdge["http-querystring", "base"], DirectedEdge["http-querystring", "bytestring"], DirectedEdge["http-querystring", "containers"], DirectedEdge["http-querystring", "http-types"], DirectedEdge["http-response-decoder", "base"], DirectedEdge["http-response-decoder", "base-prelude"], DirectedEdge["http-response-decoder", "bytestring"], DirectedEdge["http-response-decoder", "bytestring-tree-builder"], DirectedEdge["http-response-decoder", "case-insensitive"], DirectedEdge["http-response-decoder", "http-client"], DirectedEdge["http-response-decoder", "http-types"], DirectedEdge["http-response-decoder", "matcher"], DirectedEdge["http-response-decoder", "profunctors"], DirectedEdge["http-response-decoder", "text"], DirectedEdge["http-response-decoder", "transformers"], DirectedEdge["http-response-decoder", "unordered-containers"], DirectedEdge["http-reverse-proxy", "async"], DirectedEdge["http-reverse-proxy", "base"], DirectedEdge["http-reverse-proxy", "blaze-builder"], DirectedEdge["http-reverse-proxy", "bytestring"], DirectedEdge["http-reverse-proxy", "case-insensitive"], DirectedEdge["http-reverse-proxy", "conduit"], DirectedEdge["http-reverse-proxy", "conduit-extra"], DirectedEdge["http-reverse-proxy", "containers"], DirectedEdge["http-reverse-proxy", "data-default-class"], DirectedEdge["http-reverse-proxy", "http-client"], DirectedEdge["http-reverse-proxy", "http-types"], DirectedEdge["http-reverse-proxy", "lifted-base"], DirectedEdge["http-reverse-proxy", "monad-control"], DirectedEdge["http-reverse-proxy", "network"], DirectedEdge["http-reverse-proxy", "resourcet"], DirectedEdge["http-reverse-proxy", "streaming-commons"], DirectedEdge["http-reverse-proxy", "text"], DirectedEdge["http-reverse-proxy", "transformers"], DirectedEdge["http-reverse-proxy", "wai"], DirectedEdge["http-reverse-proxy", "wai-logger"], DirectedEdge["http-server", "base"], DirectedEdge["http-server", "HTTP"], DirectedEdge["http-server", "mime"], DirectedEdge["http-server", "network"], DirectedEdge["http-server", "network-uri"], DirectedEdge["http-server", "text"], DirectedEdge["http-server", "unix"], DirectedEdge["http-server", "url"], DirectedEdge["http-server", "utf8-string"], DirectedEdge["http-shed", "httpd-shed"], DirectedEdge["http-shed", "base"], DirectedEdge["http-shed", "network"], DirectedEdge["http-streams", "aeson"], DirectedEdge["http-streams", "attoparsec"], DirectedEdge["http-streams", "base"], DirectedEdge["http-streams", "base64-bytestring"], DirectedEdge["http-streams", "blaze-builder"], DirectedEdge["http-streams", "bytestring"], DirectedEdge["http-streams", "case-insensitive"], DirectedEdge["http-streams", "directory"], DirectedEdge["http-streams", "HsOpenSSL"], DirectedEdge["http-streams", "http-common"], DirectedEdge["http-streams", "io-streams"], DirectedEdge["http-streams", "mtl"], DirectedEdge["http-streams", "network"], DirectedEdge["http-streams", "network-uri"], DirectedEdge["http-streams", "openssl-streams"], DirectedEdge["http-streams", "text"], DirectedEdge["http-streams", "transformers"], DirectedEdge["http-streams", "unordered-containers"], DirectedEdge["http-test", "aeson"], DirectedEdge["http-test", "base"], DirectedEdge["http-test", "bytestring"], DirectedEdge["http-test", "http-client"], DirectedEdge["http-test", "http-test"], DirectedEdge["http-test", "lens"], DirectedEdge["http-test", "lens-aeson"], DirectedEdge["http-test", "mtl"], DirectedEdge["http-test", "tasty"], DirectedEdge["http-test", "tasty-hunit"], DirectedEdge["http-test", "text"], DirectedEdge["http-test", "time"], DirectedEdge["http-test", "wreq"], DirectedEdge["http-types", "array"], DirectedEdge["http-types", "base"], DirectedEdge["http-types", "blaze-builder"], DirectedEdge["http-types", "bytestring"], DirectedEdge["http-types", "case-insensitive"], DirectedEdge["http-types", "text"], DirectedEdge["http-wget", "http-conduit"], DirectedEdge["http-wget", "base"], DirectedEdge["http-wget", "failure"], DirectedEdge["http-wget", "process"], DirectedEdge["http-wget", "transformers"], DirectedEdge["http2", "aeson"], DirectedEdge["http2", "aeson-pretty"], DirectedEdge["http2", "array"], DirectedEdge["http2", "base"], DirectedEdge["http2", "bytestring"], DirectedEdge["http2", "bytestring-builder"], DirectedEdge["http2", "case-insensitive"], DirectedEdge["http2", "containers"], DirectedEdge["http2", "directory"], DirectedEdge["http2", "filepath"], DirectedEdge["http2", "hex"], DirectedEdge["http2", "psqueues"], DirectedEdge["http2", "stm"], DirectedEdge["http2", "text"], DirectedEdge["http2", "unordered-containers"], DirectedEdge["http2", "vector"], DirectedEdge["httpd-shed", "base"], DirectedEdge["httpd-shed", "network"], DirectedEdge["httpd-shed", "network-uri"], DirectedEdge["https-everywhere-rules", "attoparsec"], DirectedEdge["https-everywhere-rules", "base"], DirectedEdge["https-everywhere-rules", "errors"], DirectedEdge["https-everywhere-rules", "functor-infix"], DirectedEdge["https-everywhere-rules", "http-client"], DirectedEdge["https-everywhere-rules", "https-everywhere-rules-raw"], DirectedEdge["https-everywhere-rules", "lens"], DirectedEdge["https-everywhere-rules", "network"], DirectedEdge["https-everywhere-rules", "pipes"], DirectedEdge["https-everywhere-rules", "string-conversions"], DirectedEdge["https-everywhere-rules", "taggy-lens"], DirectedEdge["https-everywhere-rules", "text"], DirectedEdge["https-everywhere-rules", "text-icu"], DirectedEdge["https-everywhere-rules-raw", "base"], DirectedEdge["https-everywhere-rules-raw", "directory"], DirectedEdge["https-everywhere-rules-raw", "filepath"], DirectedEdge["https-everywhere-rules-raw", "functor-infix"], DirectedEdge["https-everywhere-rules-raw", "text"], DirectedEdge["httpspec", "base"], DirectedEdge["httpspec", "bidispec"], DirectedEdge["httpspec", "bytestring"], DirectedEdge["httpspec", "cgi"], DirectedEdge["httpspec", "containers"], DirectedEdge["httpspec", "encoding"], DirectedEdge["httpspec", "filepath"], DirectedEdge["httpspec", "HTTP"], DirectedEdge["httpspec", "hxt"], DirectedEdge["httpspec", "hxthelper"], DirectedEdge["httpspec", "MissingH"], DirectedEdge["httpspec", "mtl"], DirectedEdge["httpspec", "network"], DirectedEdge["httpspec", "pretty"], DirectedEdge["httpspec", "safe"], DirectedEdge["htune", "alsa-pcm"], DirectedEdge["htune", "base"], DirectedEdge["htune", "carray"], DirectedEdge["htune", "fft"], DirectedEdge["htune", "gloss"], DirectedEdge["htzaar", "base"], DirectedEdge["htzaar", "OpenGL"], DirectedEdge["htzaar", "random"], DirectedEdge["htzaar", "SDL"], DirectedEdge["hub", "array"], DirectedEdge["hub", "base"], DirectedEdge["hub", "bytestring"], DirectedEdge["hub", "containers"], DirectedEdge["hub", "directory"], DirectedEdge["hub", "fgl"], DirectedEdge["hub", "filepath"], DirectedEdge["hub", "hexpat"], DirectedEdge["hub", "process"], DirectedEdge["hub", "regex-compat"], DirectedEdge["hub", "unix"], DirectedEdge["hub", "utf8-string"], DirectedEdge["hubigraph", "base"], DirectedEdge["hubigraph", "containers"], DirectedEdge["hubigraph", "haxr"], DirectedEdge["hubigraph", "mtl"], DirectedEdge["hubris", "array"], DirectedEdge["hubris", "base"], DirectedEdge["hubris", "bytestring"], DirectedEdge["hubris", "Cabal"], DirectedEdge["hubris", "containers"], DirectedEdge["hubris", "ghc"], DirectedEdge["hubris", "ghc-paths"], DirectedEdge["hubris", "hint"], DirectedEdge["hubris", "mtl"], DirectedEdge["hubris", "old-time"], DirectedEdge["hubris", "process"], DirectedEdge["huckleberry", "base"], DirectedEdge["huckleberry", "bytestring"], DirectedEdge["huckleberry", "mtl"], DirectedEdge["huckleberry", "serialport"], DirectedEdge["huffman", "base"], DirectedEdge["huffman", "containers"], DirectedEdge["huffman", "fingertree"], DirectedEdge["hugs2yc", "base"], DirectedEdge["hugs2yc", "containers"], DirectedEdge["hugs2yc", "directory"], DirectedEdge["hugs2yc", "filepath"], DirectedEdge["hugs2yc", "mtl"], DirectedEdge["hugs2yc", "parsec"], DirectedEdge["hugs2yc", "uniplate"], DirectedEdge["hugs2yc", "ycextra"], DirectedEdge["hugs2yc", "yhccore"], DirectedEdge["hulk", "aeson"], DirectedEdge["hulk", "base"], DirectedEdge["hulk", "bytestring"], DirectedEdge["hulk", "case-insensitive"], DirectedEdge["hulk", "cmdargs"], DirectedEdge["hulk", "ConfigFile"], DirectedEdge["hulk", "containers"], DirectedEdge["hulk", "Crypto"], DirectedEdge["hulk", "directory"], DirectedEdge["hulk", "fastirc"], DirectedEdge["hulk", "filepath"], DirectedEdge["hulk", "ghc-prim"], DirectedEdge["hulk", "monad-extras"], DirectedEdge["hulk", "mtl"], DirectedEdge["hulk", "network"], DirectedEdge["hulk", "split"], DirectedEdge["hulk", "strict"], DirectedEdge["hulk", "text"], DirectedEdge["hulk", "time"], DirectedEdge["hulk", "unix"], DirectedEdge["hulk", "utf8-string"], DirectedEdge["human-readable-duration", "base"], DirectedEdge["hums", "base"], DirectedEdge["hums", "blaze-builder"], DirectedEdge["hums", "bytestring"], DirectedEdge["hums", "case-insensitive"], DirectedEdge["hums", "ConfigFile"], DirectedEdge["hums", "containers"], DirectedEdge["hums", "directory"], DirectedEdge["hums", "filepath"], DirectedEdge["hums", "HaXml"], DirectedEdge["hums", "http-types"], DirectedEdge["hums", "hxt"], DirectedEdge["hums", "MissingH"], DirectedEdge["hums", "mtl"], DirectedEdge["hums", "network"], DirectedEdge["hums", "system-fileio"], DirectedEdge["hums", "system-filepath"], DirectedEdge["hums", "system-uuid"], DirectedEdge["hums", "text"], DirectedEdge["hums", "transformers"], DirectedEdge["hums", "unix"], DirectedEdge["hums", "unordered-containers"], DirectedEdge["hums", "wai"], DirectedEdge["hums", "warp"], DirectedEdge["hunch", "base"], DirectedEdge["hunch", "containers"], DirectedEdge["hunch", "directory"], DirectedEdge["hunch", "filepath"], DirectedEdge["hunch", "optparse-applicative"], DirectedEdge["hunch", "parsec"], DirectedEdge["hunch", "split"], DirectedEdge["hunit-dejafu", "base"], DirectedEdge["hunit-dejafu", "dejafu"], DirectedEdge["hunit-dejafu", "exceptions"], DirectedEdge["hunit-dejafu", "HUnit"], DirectedEdge["hunit-gui", "base"], DirectedEdge["hunit-gui", "cairo"], DirectedEdge["hunit-gui", "gtk"], DirectedEdge["hunit-gui", "HUnit"], DirectedEdge["hunit-parsec", "base"], DirectedEdge["hunit-parsec", "HUnit"], DirectedEdge["hunit-parsec", "parsec"], DirectedEdge["hunit-rematch", "base"], DirectedEdge["hunit-rematch", "HUnit"], DirectedEdge["hunit-rematch", "rematch"], DirectedEdge["hunp", "base"], DirectedEdge["hunp", "bytestring"], DirectedEdge["hunp", "directory"], DirectedEdge["hunp", "filepath"], DirectedEdge["hunp", "monads-fd"], DirectedEdge["hunp", "parsec"], DirectedEdge["hunp", "pcre-light"], DirectedEdge["hunp", "process"], DirectedEdge["hunp", "split"], DirectedEdge["hunt-searchengine", "aeson"], DirectedEdge["hunt-searchengine", "aeson-pretty"], DirectedEdge["hunt-searchengine", "base"], DirectedEdge["hunt-searchengine", "binary"], DirectedEdge["hunt-searchengine", "bytestring"], DirectedEdge["hunt-searchengine", "containers"], DirectedEdge["hunt-searchengine", "data-default"], DirectedEdge["hunt-searchengine", "data-r-tree"], DirectedEdge["hunt-searchengine", "data-stringmap"], DirectedEdge["hunt-searchengine", "deepseq"], DirectedEdge["hunt-searchengine", "dlist"], DirectedEdge["hunt-searchengine", "filepath"], DirectedEdge["hunt-searchengine", "hslogger"], DirectedEdge["hunt-searchengine", "hxt-regex-xmlschema"], DirectedEdge["hunt-searchengine", "monad-parallel"], DirectedEdge["hunt-searchengine", "mtl"], DirectedEdge["hunt-searchengine", "murmur-hash"], DirectedEdge["hunt-searchengine", "parsec"], DirectedEdge["hunt-searchengine", "text"], DirectedEdge["hunt-searchengine", "time"], DirectedEdge["hunt-searchengine", "transformers"], DirectedEdge["hunt-searchengine", "unordered-containers"], DirectedEdge["hunt-searchengine", "vector"], DirectedEdge["hunt-server", "aeson"], DirectedEdge["hunt-server", "aeson-pretty"], DirectedEdge["hunt-server", "base"], DirectedEdge["hunt-server", "binary"], DirectedEdge["hunt-server", "blaze-html"], DirectedEdge["hunt-server", "blaze-markup"], DirectedEdge["hunt-server", "bytestring"], DirectedEdge["hunt-server", "cmdargs"], DirectedEdge["hunt-server", "containers"], DirectedEdge["hunt-server", "data-default"], DirectedEdge["hunt-server", "deepseq"], DirectedEdge["hunt-server", "ekg-core"], DirectedEdge["hunt-server", "hamlet"], DirectedEdge["hunt-server", "hslogger"], DirectedEdge["hunt-server", "http-types"], DirectedEdge["hunt-server", "hunt-searchengine"], DirectedEdge["hunt-server", "mtl"], DirectedEdge["hunt-server", "scotty"], DirectedEdge["hunt-server", "shakespeare-js"], DirectedEdge["hunt-server", "text"], DirectedEdge["hunt-server", "wai"], DirectedEdge["hunt-server", "wai-extra"], DirectedEdge["hunt-server", "wai-middleware-static"], DirectedEdge["hunt-server", "warp"], DirectedEdge["hunt-server-cli", "aeson"], DirectedEdge["hunt-server-cli", "aeson-pretty"], DirectedEdge["hunt-server-cli", "base"], DirectedEdge["hunt-server-cli", "binary"], DirectedEdge["hunt-server-cli", "bytestring"], DirectedEdge["hunt-server-cli", "conduit"], DirectedEdge["hunt-server-cli", "conduit-extra"], DirectedEdge["hunt-server-cli", "containers"], DirectedEdge["hunt-server-cli", "csv-conduit"], DirectedEdge["hunt-server-cli", "data-default"], DirectedEdge["hunt-server-cli", "docopt"], DirectedEdge["hunt-server-cli", "hslogger"], DirectedEdge["hunt-server-cli", "http-types"], DirectedEdge["hunt-server-cli", "hunt-client"], DirectedEdge["hunt-server-cli", "hunt-searchengine"], DirectedEdge["hunt-server-cli", "mtl"], DirectedEdge["hunt-server-cli", "resourcet"], DirectedEdge["hunt-server-cli", "string-conversions"], DirectedEdge["hunt-server-cli", "text"], DirectedEdge["hunt-server-cli", "time"], DirectedEdge["hunt-server-cli", "transformers"], DirectedEdge["hunt-server-cli", "unordered-containers"], DirectedEdge["hurdle", "array"], DirectedEdge["hurdle", "base"], DirectedEdge["hurdle", "bytestring"], DirectedEdge["hurdle", "containers"], DirectedEdge["hurdle", "kangaroo"], DirectedEdge["husk-scheme", "array"], DirectedEdge["husk-scheme", "base"], DirectedEdge["husk-scheme", "bytestring"], DirectedEdge["husk-scheme", "containers"], DirectedEdge["husk-scheme", "directory"], DirectedEdge["husk-scheme", "filepath"], DirectedEdge["husk-scheme", "ghc"], DirectedEdge["husk-scheme", "ghc-paths"], DirectedEdge["husk-scheme", "haskeline"], DirectedEdge["husk-scheme", "husk-scheme"], DirectedEdge["husk-scheme", "knob"], DirectedEdge["husk-scheme", "mtl"], DirectedEdge["husk-scheme", "parsec"], DirectedEdge["husk-scheme", "process"], DirectedEdge["husk-scheme", "time"], DirectedEdge["husk-scheme", "transformers"], DirectedEdge["husk-scheme", "utf8-string"], DirectedEdge["husk-scheme-libs", "array"], DirectedEdge["husk-scheme-libs", "base"], DirectedEdge["husk-scheme-libs", "containers"], DirectedEdge["husk-scheme-libs", "husk-scheme"], DirectedEdge["husk-scheme-libs", "json"], DirectedEdge["husk-scheme-libs", "mtl"], DirectedEdge["husk-scheme-libs", "transformers"], DirectedEdge["husky", "base"], DirectedEdge["husky", "containers"], DirectedEdge["husky", "mtl"], DirectedEdge["husky", "old-locale"], DirectedEdge["husky", "parsec"], DirectedEdge["husky", "readline"], DirectedEdge["husky", "time"], DirectedEdge["hutton", "aeson"], DirectedEdge["hutton", "base"], DirectedEdge["hutton", "bytestring"], DirectedEdge["hutton", "connection"], DirectedEdge["hutton", "flow"], DirectedEdge["hutton", "http-client"], DirectedEdge["hutton", "http-conduit"], DirectedEdge["hutton", "http-types"], DirectedEdge["hutton", "network"], DirectedEdge["hutton", "rainbow"], DirectedEdge["hutton", "regex-compat"], DirectedEdge["hutton", "text"], DirectedEdge["hutton", "time"], DirectedEdge["hutton", "transformers"], DirectedEdge["hutton", "websockets"], DirectedEdge["hutton", "wuss"], DirectedEdge["huttons-razor", "base"], DirectedEdge["huttons-razor", "parsec"], DirectedEdge["huttons-razor", "parsec-numbers"], DirectedEdge["huzzy", "base"], DirectedEdge["huzzy", "easyplot"], DirectedEdge["hvect", "base"], DirectedEdge["hw-bits", "base"], DirectedEdge["hw-bits", "bytestring"], DirectedEdge["hw-bits", "criterion"], DirectedEdge["hw-bits", "hw-bits"], DirectedEdge["hw-bits", "hw-prim"], DirectedEdge["hw-bits", "mmap"], DirectedEdge["hw-bits", "parsec"], DirectedEdge["hw-bits", "resourcet"], DirectedEdge["hw-bits", "vector"], DirectedEdge["hw-conduit", "array"], DirectedEdge["hw-conduit", "base"], DirectedEdge["hw-conduit", "bytestring"], DirectedEdge["hw-conduit", "conduit"], DirectedEdge["hw-conduit", "criterion"], DirectedEdge["hw-conduit", "hw-bits"], DirectedEdge["hw-conduit", "hw-conduit"], DirectedEdge["hw-conduit", "resourcet"], DirectedEdge["hw-diagnostics", "base"], DirectedEdge["hw-diagnostics", "hw-diagnostics"], DirectedEdge["hw-json", "array"], DirectedEdge["hw-json", "attoparsec"], DirectedEdge["hw-json", "base"], DirectedEdge["hw-json", "bytestring"], DirectedEdge["hw-json", "conduit"], DirectedEdge["hw-json", "containers"], DirectedEdge["hw-json", "criterion"], DirectedEdge["hw-json", "errors"], DirectedEdge["hw-json", "hw-bits"], DirectedEdge["hw-json", "hw-conduit"], DirectedEdge["hw-json", "hw-diagnostics"], DirectedEdge["hw-json", "hw-json"], DirectedEdge["hw-json", "hw-parser"], DirectedEdge["hw-json", "hw-prim"], DirectedEdge["hw-json", "hw-rankselect"], DirectedEdge["hw-json", "mmap"], DirectedEdge["hw-json", "mono-traversable"], DirectedEdge["hw-json", "resourcet"], DirectedEdge["hw-json", "text"], DirectedEdge["hw-json", "vector"], DirectedEdge["hw-parser", "attoparsec"], DirectedEdge["hw-parser", "base"], DirectedEdge["hw-parser", "bytestring"], DirectedEdge["hw-parser", "hw-prim"], DirectedEdge["hw-parser", "mono-traversable"], DirectedEdge["hw-parser", "text"], DirectedEdge["hw-prim", "base"], DirectedEdge["hw-prim", "bytestring"], DirectedEdge["hw-prim", "hw-prim"], DirectedEdge["hw-prim", "random"], DirectedEdge["hw-prim", "vector"], DirectedEdge["hw-rankselect", "base"], DirectedEdge["hw-rankselect", "hw-bits"], DirectedEdge["hw-rankselect", "hw-prim"], DirectedEdge["hw-rankselect", "hw-rankselect"], DirectedEdge["hw-rankselect", "vector"], DirectedEdge["hw-succinct", "attoparsec"], DirectedEdge["hw-succinct", "base"], DirectedEdge["hw-succinct", "bytestring"], DirectedEdge["hw-succinct", "conduit"], DirectedEdge["hw-succinct", "containers"], DirectedEdge["hw-succinct", "hw-bits"], DirectedEdge["hw-succinct", "hw-conduit"], DirectedEdge["hw-succinct", "hw-parser"], DirectedEdge["hw-succinct", "hw-prim"], DirectedEdge["hw-succinct", "hw-rankselect"], DirectedEdge["hw-succinct", "mono-traversable"], DirectedEdge["hw-succinct", "text"], DirectedEdge["hw-succinct", "vector"], DirectedEdge["hwall-auth-iitk", "base"], DirectedEdge["hwall-auth-iitk", "bytestring"], DirectedEdge["hwall-auth-iitk", "haskeline"], DirectedEdge["hwall-auth-iitk", "http-conduit"], DirectedEdge["hwall-auth-iitk", "http-types"], DirectedEdge["hwall-auth-iitk", "mtl"], DirectedEdge["hwall-auth-iitk", "regex-compat"], DirectedEdge["hwall-auth-iitk", "unix"], DirectedEdge["hweblib", "attoparsec"], DirectedEdge["hweblib", "base"], DirectedEdge["hweblib", "bytestring"], DirectedEdge["hweblib", "containers"], DirectedEdge["hweblib", "mtl"], DirectedEdge["hweblib", "text"], DirectedEdge["hweblib", "transformers"], DirectedEdge["hworker", "aeson"], DirectedEdge["hworker", "attoparsec"], DirectedEdge["hworker", "base"], DirectedEdge["hworker", "bytestring"], DirectedEdge["hworker", "hedis"], DirectedEdge["hworker", "text"], DirectedEdge["hworker", "time"], DirectedEdge["hworker", "uuid"], DirectedEdge["hworker-ses", "aeson"], DirectedEdge["hworker-ses", "amazonka"], DirectedEdge["hworker-ses", "amazonka-core"], DirectedEdge["hworker-ses", "amazonka-ses"], DirectedEdge["hworker-ses", "base"], DirectedEdge["hworker-ses", "hworker"], DirectedEdge["hworker-ses", "lens"], DirectedEdge["hworker-ses", "text"], DirectedEdge["hworker-ses", "time"], DirectedEdge["hworker-ses", "unordered-containers"], DirectedEdge["hws", "array"], DirectedEdge["hws", "base"], DirectedEdge["hws", "containers"], DirectedEdge["hws", "directory"], DirectedEdge["hws", "html"], DirectedEdge["hws", "mtl"], DirectedEdge["hws", "network"], DirectedEdge["hws", "old-time"], DirectedEdge["hws", "regex-compat"], DirectedEdge["hws", "text"], DirectedEdge["hws", "unix"], DirectedEdge["hwsl2", "base"], DirectedEdge["hwsl2", "bytestring"], DirectedEdge["hwsl2-bytevector", "base"], DirectedEdge["hwsl2-bytevector", "bytestring"], DirectedEdge["hwsl2-bytevector", "fingertree"], DirectedEdge["hwsl2-reducers", "base"], DirectedEdge["hwsl2-reducers", "bytestring"], DirectedEdge["hwsl2-reducers", "reducers"], DirectedEdge["hwsl2-reducers", "semigroups"], DirectedEdge["hx", "base"], DirectedEdge["hxmppc", "base"], DirectedEdge["hxmppc", "fclabels"], DirectedEdge["hxmppc", "network"], DirectedEdge["hxmppc", "network-protocol-xmpp"], DirectedEdge["hxmppc", "text"], DirectedEdge["hxmppc", "transformers"], DirectedEdge["hxmppc", "xml-types"], DirectedEdge["hxournal", "base"], DirectedEdge["hxournal", "bytestring"], DirectedEdge["hxournal", "cairo"], DirectedEdge["hxournal", "cmdargs"], DirectedEdge["hxournal", "configurator"], DirectedEdge["hxournal", "containers"], DirectedEdge["hxournal", "Diff"], DirectedEdge["hxournal", "directory"], DirectedEdge["hxournal", "double-conversion"], DirectedEdge["hxournal", "dyre"], DirectedEdge["hxournal", "fclabels"], DirectedEdge["hxournal", "filepath"], DirectedEdge["hxournal", "gtk"], DirectedEdge["hxournal", "hxournal"], DirectedEdge["hxournal", "monad-coroutine"], DirectedEdge["hxournal", "mtl"], DirectedEdge["hxournal", "poppler"], DirectedEdge["hxournal", "strict"], DirectedEdge["hxournal", "template-haskell"], DirectedEdge["hxournal", "time"], DirectedEdge["hxournal", "transformers"], DirectedEdge["hxournal", "TypeCompose"], DirectedEdge["hxournal", "xournal-builder"], DirectedEdge["hxournal", "xournal-parser"], DirectedEdge["hxournal", "xournal-render"], DirectedEdge["hxournal", "xournal-types"], DirectedEdge["hxt", "base"], DirectedEdge["hxt", "binary"], DirectedEdge["hxt", "bytestring"], DirectedEdge["hxt", "containers"], DirectedEdge["hxt", "deepseq"], DirectedEdge["hxt", "directory"], DirectedEdge["hxt", "filepath"], DirectedEdge["hxt", "HUnit"], DirectedEdge["hxt", "hxt-charproperties"], DirectedEdge["hxt", "hxt-regex-xmlschema"], DirectedEdge["hxt", "hxt-unicode"], DirectedEdge["hxt", "mtl"], DirectedEdge["hxt", "network"], DirectedEdge["hxt", "network-uri"], DirectedEdge["hxt", "parsec"], DirectedEdge["hxt-binary", "base"], DirectedEdge["hxt-binary", "binary"], DirectedEdge["hxt-binary", "bytestring"], DirectedEdge["hxt-binary", "bzlib"], DirectedEdge["hxt-binary", "deepseq"], DirectedEdge["hxt-binary", "hxt"], DirectedEdge["hxt-cache", "base"], DirectedEdge["hxt-cache", "binary"], DirectedEdge["hxt-cache", "bytestring"], DirectedEdge["hxt-cache", "containers"], DirectedEdge["hxt-cache", "deepseq"], DirectedEdge["hxt-cache", "directory"], DirectedEdge["hxt-cache", "filepath"], DirectedEdge["hxt-cache", "hxt"], DirectedEdge["hxt-cache", "old-locale"], DirectedEdge["hxt-cache", "SHA"], DirectedEdge["hxt-cache", "time"], DirectedEdge["hxt-cache", "unix"], DirectedEdge["hxt-charproperties", "base"], DirectedEdge["hxt-css", "base"], DirectedEdge["hxt-css", "hxt"], DirectedEdge["hxt-css", "hxt-css"], DirectedEdge["hxt-css", "parsec"], DirectedEdge["hxt-css", "split"], DirectedEdge["hxt-curl", "base"], DirectedEdge["hxt-curl", "bytestring"], DirectedEdge["hxt-curl", "curl"], DirectedEdge["hxt-curl", "hxt"], DirectedEdge["hxt-curl", "parsec"], DirectedEdge["hxt-expat", "base"], DirectedEdge["hxt-expat", "bytestring"], DirectedEdge["hxt-expat", "hexpat"], DirectedEdge["hxt-expat", "hxt"], DirectedEdge["hxt-extras", "base"], DirectedEdge["hxt-extras", "hxt"], DirectedEdge["hxt-filter", "base"], DirectedEdge["hxt-filter", "containers"], DirectedEdge["hxt-filter", "directory"], DirectedEdge["hxt-filter", "filepath"], DirectedEdge["hxt-filter", "HTTP"], DirectedEdge["hxt-filter", "HUnit"], DirectedEdge["hxt-filter", "hxt"], DirectedEdge["hxt-filter", "network"], DirectedEdge["hxt-filter", "parsec"], DirectedEdge["hxt-filter", "process"], DirectedEdge["hxt-http", "base"], DirectedEdge["hxt-http", "bytestring"], DirectedEdge["hxt-http", "HTTP"], DirectedEdge["hxt-http", "hxt"], DirectedEdge["hxt-http", "network"], DirectedEdge["hxt-http", "network-uri"], DirectedEdge["hxt-http", "parsec"], DirectedEdge["hxt-pickle-utils", "base"], DirectedEdge["hxt-pickle-utils", "hxt"], DirectedEdge["hxt-pickle-utils", "mtl"], DirectedEdge["hxt-regex-xmlschema", "base"], DirectedEdge["hxt-regex-xmlschema", "bytestring"], DirectedEdge["hxt-regex-xmlschema", "hxt-charproperties"], DirectedEdge["hxt-regex-xmlschema", "parsec"], DirectedEdge["hxt-regex-xmlschema", "text"], DirectedEdge["hxt-relaxng", "base"], DirectedEdge["hxt-relaxng", "containers"], DirectedEdge["hxt-relaxng", "hxt"], DirectedEdge["hxt-relaxng", "hxt-charproperties"], DirectedEdge["hxt-relaxng", "hxt-regex-xmlschema"], DirectedEdge["hxt-relaxng", "network"], DirectedEdge["hxt-relaxng", "network-uri"], DirectedEdge["hxt-relaxng", "parsec"], DirectedEdge["hxt-tagsoup", "base"], DirectedEdge["hxt-tagsoup", "hxt"], DirectedEdge["hxt-tagsoup", "hxt-charproperties"], DirectedEdge["hxt-tagsoup", "hxt-unicode"], DirectedEdge["hxt-tagsoup", "tagsoup"], DirectedEdge["hxt-unicode", "base"], DirectedEdge["hxt-unicode", "hxt-charproperties"], DirectedEdge["hxt-xpath", "base"], DirectedEdge["hxt-xpath", "containers"], DirectedEdge["hxt-xpath", "directory"], DirectedEdge["hxt-xpath", "filepath"], DirectedEdge["hxt-xpath", "hxt"], DirectedEdge["hxt-xpath", "parsec"], DirectedEdge["hxt-xslt", "base"], DirectedEdge["hxt-xslt", "containers"], DirectedEdge["hxt-xslt", "directory"], DirectedEdge["hxt-xslt", "filepath"], DirectedEdge["hxt-xslt", "hxt"], DirectedEdge["hxt-xslt", "hxt-xpath"], DirectedEdge["hxt-xslt", "parsec"], DirectedEdge["hxthelper", "base"], DirectedEdge["hxthelper", "bytestring"], DirectedEdge["hxthelper", "encoding"], DirectedEdge["hxthelper", "hxt"], DirectedEdge["hxthelper", "mtl"], DirectedEdge["hxweb", "base"], DirectedEdge["hxweb", "cgi"], DirectedEdge["hxweb", "fastcgi"], DirectedEdge["hxweb", "libxml"], DirectedEdge["hxweb", "mtl"], DirectedEdge["hxweb", "xslt"], DirectedEdge["hyahtzee", "base"], DirectedEdge["hyahtzee", "containers"], DirectedEdge["hyahtzee", "HUnit"], DirectedEdge["hyahtzee", "random"], DirectedEdge["hyakko", "aeson"], DirectedEdge["hyakko", "base"], DirectedEdge["hyakko", "blaze-html"], DirectedEdge["hyakko", "bytestring"], DirectedEdge["hyakko", "cmdargs"], DirectedEdge["hyakko", "directory"], DirectedEdge["hyakko", "filepath"], DirectedEdge["hyakko", "highlighting-kate"], DirectedEdge["hyakko", "mtl"], DirectedEdge["hyakko", "pandoc"], DirectedEdge["hyakko", "regex-pcre-builtin"], DirectedEdge["hyakko", "text"], DirectedEdge["hyakko", "unordered-containers"], DirectedEdge["hybrid", "base"], DirectedEdge["hybrid", "containers"], DirectedEdge["hybrid", "mtl"], DirectedEdge["hybrid", "parsec"], DirectedEdge["hybrid-vectors", "base"], DirectedEdge["hybrid-vectors", "deepseq"], DirectedEdge["hybrid-vectors", "primitive"], DirectedEdge["hybrid-vectors", "vector"], DirectedEdge["hydra-hs", "base"], DirectedEdge["hydra-hs", "hmatrix"], DirectedEdge["hydra-print", "async"], DirectedEdge["hydra-print", "base"], DirectedEdge["hydra-print", "bytestring"], DirectedEdge["hydra-print", "containers"], DirectedEdge["hydra-print", "directory"], DirectedEdge["hydra-print", "filepath"], DirectedEdge["hydra-print", "io-streams"], DirectedEdge["hydra-print", "mtl"], DirectedEdge["hydra-print", "ncurses"], DirectedEdge["hydra-print", "process"], DirectedEdge["hydra-print", "random"], DirectedEdge["hydra-print", "semigroups"], DirectedEdge["hydra-print", "text"], DirectedEdge["hydra-print", "time"], DirectedEdge["hydra-print", "transformers"], DirectedEdge["hydra-print", "unix"], DirectedEdge["hydrogen", "base"], DirectedEdge["hydrogen", "bytestring"], DirectedEdge["hydrogen", "containers"], DirectedEdge["hydrogen", "mtl"], DirectedEdge["hydrogen", "pretty"], DirectedEdge["hydrogen", "text"], DirectedEdge["hydrogen-cli", "base"], DirectedEdge["hydrogen-cli", "hydrogen-cli-args"], DirectedEdge["hydrogen-cli", "hydrogen-data"], DirectedEdge["hydrogen-cli", "hydrogen-multimap"], DirectedEdge["hydrogen-cli", "hydrogen-parsing"], DirectedEdge["hydrogen-cli", "hydrogen-prelude"], DirectedEdge["hydrogen-cli", "hydrogen-syntax"], DirectedEdge["hydrogen-cli-args", "base"], DirectedEdge["hydrogen-cli-args", "containers"], DirectedEdge["hydrogen-cli-args", "hydrogen-multimap"], DirectedEdge["hydrogen-cli-args", "hydrogen-prelude"], DirectedEdge["hydrogen-data", "base"], DirectedEdge["hydrogen-data", "hydrogen-parsing"], DirectedEdge["hydrogen-data", "hydrogen-prelude"], DirectedEdge["hydrogen-multimap", "base"], DirectedEdge["hydrogen-multimap", "containers"], DirectedEdge["hydrogen-multimap", "ghc-prim"], DirectedEdge["hydrogen-parsing", "base"], DirectedEdge["hydrogen-parsing", "containers"], DirectedEdge["hydrogen-parsing", "hydrogen-prelude"], DirectedEdge["hydrogen-parsing", "parsec"], DirectedEdge["hydrogen-prelude", "array"], DirectedEdge["hydrogen-prelude", "base"], DirectedEdge["hydrogen-prelude", "binary"], DirectedEdge["hydrogen-prelude", "bytestring"], DirectedEdge["hydrogen-prelude", "cereal"], DirectedEdge["hydrogen-prelude", "containers"], DirectedEdge["hydrogen-prelude", "directory"], DirectedEdge["hydrogen-prelude", "filepath"], DirectedEdge["hydrogen-prelude", "ghc-prim"], DirectedEdge["hydrogen-prelude", "hashable"], DirectedEdge["hydrogen-prelude", "hydrogen-multimap"], DirectedEdge["hydrogen-prelude", "hydrogen-version"], DirectedEdge["hydrogen-prelude", "network"], DirectedEdge["hydrogen-prelude", "process"], DirectedEdge["hydrogen-prelude", "random"], DirectedEdge["hydrogen-prelude", "regex-base"], DirectedEdge["hydrogen-prelude", "regex-tdfa"], DirectedEdge["hydrogen-prelude", "strict"], DirectedEdge["hydrogen-prelude", "text"], DirectedEdge["hydrogen-prelude", "time"], DirectedEdge["hydrogen-prelude", "transformers"], DirectedEdge["hydrogen-prelude", "uuid"], DirectedEdge["hydrogen-prelude-parsec", "base"], DirectedEdge["hydrogen-prelude-parsec", "hydrogen-prelude"], DirectedEdge["hydrogen-prelude-parsec", "parsec"], DirectedEdge["hydrogen-syntax", "base"], DirectedEdge["hydrogen-syntax", "containers"], DirectedEdge["hydrogen-syntax", "hydrogen-parsing"], DirectedEdge["hydrogen-syntax", "hydrogen-prelude"], DirectedEdge["hydrogen-syntax", "nicify"], DirectedEdge["hydrogen-syntax", "parsec"], DirectedEdge["hydrogen-syntax", "uuid"], DirectedEdge["hydrogen-util", "hydrogen-parsing"], DirectedEdge["hydrogen-util", "hydrogen-prelude"], DirectedEdge["hydrogen-util", "base"], DirectedEdge["hydrogen-util", "containers"], DirectedEdge["hydrogen-util", "hydrogen-prelude"], DirectedEdge["hydrogen-util", "parsec"], DirectedEdge["hydrogen-util", "time"], DirectedEdge["hydrogen-version", "base"], DirectedEdge["hydrogen-version", "ghc-prim"], DirectedEdge["hyena", "base"], DirectedEdge["hyena", "bytestring"], DirectedEdge["hyena", "containers"], DirectedEdge["hyena", "directory"], DirectedEdge["hyena", "extensible-exceptions"], DirectedEdge["hyena", "filepath"], DirectedEdge["hyena", "mtl"], DirectedEdge["hyena", "network"], DirectedEdge["hyena", "network-bytestring"], DirectedEdge["hyena", "unix"], DirectedEdge["hylogen", "aeson"], DirectedEdge["hylogen", "base"], DirectedEdge["hylogen", "bytestring"], DirectedEdge["hylogen", "data-reify"], DirectedEdge["hylogen", "filepath"], DirectedEdge["hylogen", "fsnotify"], DirectedEdge["hylogen", "http-types"], DirectedEdge["hylogen", "process"], DirectedEdge["hylogen", "text"], DirectedEdge["hylogen", "vector-space"], DirectedEdge["hylogen", "wai"], DirectedEdge["hylogen", "warp"], DirectedEdge["hylogen", "websockets"], DirectedEdge["hylolib", "array"], DirectedEdge["hylolib", "base"], DirectedEdge["hylolib", "containers"], DirectedEdge["hylolib", "mtl"], DirectedEdge["hylolib", "pretty"], DirectedEdge["hylolib", "QuickCheck"], DirectedEdge["hylolib", "random"], DirectedEdge["hylolib", "uniplate"], DirectedEdge["hylotab", "base"], DirectedEdge["hylotab", "hylolib"], DirectedEdge["hylotab", "mtl"], DirectedEdge["hyloutils", "base"], DirectedEdge["hyloutils", "containers"], DirectedEdge["hyloutils", "hylolib"], DirectedEdge["hyloutils", "mtl"], DirectedEdge["hyloutils", "uniplate"], DirectedEdge["hyperdrive", "base"], DirectedEdge["hyperdrive", "bytestring"], DirectedEdge["hyperdrive", "bytestring-lexing"], DirectedEdge["hyperdrive", "extensible-exceptions"], DirectedEdge["hyperdrive", "mtl"], DirectedEdge["hyperdrive", "network"], DirectedEdge["hyperdrive", "pipes"], DirectedEdge["hyperdrive", "pretty"], DirectedEdge["hyperfunctions", "adjunctions"], DirectedEdge["hyperfunctions", "base"], DirectedEdge["hyperfunctions", "distributive"], DirectedEdge["hyperfunctions", "profunctors"], DirectedEdge["hyperfunctions", "transformers"], DirectedEdge["hyperloglog", "approximate"], DirectedEdge["hyperloglog", "base"], DirectedEdge["hyperloglog", "binary"], DirectedEdge["hyperloglog", "bits"], DirectedEdge["hyperloglog", "bytes"], DirectedEdge["hyperloglog", "cereal"], DirectedEdge["hyperloglog", "cereal-vector"], DirectedEdge["hyperloglog", "comonad"], DirectedEdge["hyperloglog", "deepseq"], DirectedEdge["hyperloglog", "distributive"], DirectedEdge["hyperloglog", "generic-deriving"], DirectedEdge["hyperloglog", "hashable"], DirectedEdge["hyperloglog", "hashable-extras"], DirectedEdge["hyperloglog", "lens"], DirectedEdge["hyperloglog", "reflection"], DirectedEdge["hyperloglog", "safecopy"], DirectedEdge["hyperloglog", "semigroupoids"], DirectedEdge["hyperloglog", "semigroups"], DirectedEdge["hyperloglog", "siphash"], DirectedEdge["hyperloglog", "tagged"], DirectedEdge["hyperloglog", "vector"], DirectedEdge["hyperpublic", "aeson"], DirectedEdge["hyperpublic", "attoparsec"], DirectedEdge["hyperpublic", "base"], DirectedEdge["hyperpublic", "bytestring"], DirectedEdge["hyperpublic", "http-enumerator"], DirectedEdge["hyperpublic", "http-types"], DirectedEdge["hyphenate", "base"], DirectedEdge["hyphenate", "containers"], DirectedEdge["hyphenation", "base"], DirectedEdge["hyphenation", "bytestring"], DirectedEdge["hyphenation", "containers"], DirectedEdge["hyphenation", "file-embed"], DirectedEdge["hyphenation", "unordered-containers"], DirectedEdge["hyphenation", "zlib"], DirectedEdge["hypher", "aeson"], DirectedEdge["hypher", "base"], DirectedEdge["hypher", "bytestring"], DirectedEdge["hypher", "containers"], DirectedEdge["hypher", "data-default"], DirectedEdge["hypher", "hashable"], DirectedEdge["hypher", "HTTP"], DirectedEdge["hypher", "http-conduit"], DirectedEdge["hypher", "http-types"], DirectedEdge["hypher", "lifted-base"], DirectedEdge["hypher", "monad-control"], DirectedEdge["hypher", "mtl"], DirectedEdge["hypher", "resourcet"], DirectedEdge["hypher", "scientific"], DirectedEdge["hypher", "text"], DirectedEdge["hypher", "transformers"], DirectedEdge["hypher", "transformers-base"], DirectedEdge["hypher", "unordered-containers"], DirectedEdge["hypher", "vector"], DirectedEdge["hzaif", "aeson"], DirectedEdge["hzaif", "base"], DirectedEdge["hzaif", "bytestring"], DirectedEdge["hzaif", "http-conduit"], DirectedEdge["hzaif", "hzaif"], DirectedEdge["hzaif", "text"], DirectedEdge["hzk", "base"], DirectedEdge["hzk", "bytestring"], DirectedEdge["hzk", "resource-pool"], DirectedEdge["hzk", "time"], DirectedEdge["hzulip", "aeson"], DirectedEdge["hzulip", "base"], DirectedEdge["hzulip", "bytestring"], DirectedEdge["hzulip", "conduit"], DirectedEdge["hzulip", "exceptions"], DirectedEdge["hzulip", "http-client"], DirectedEdge["hzulip", "http-client-tls"], DirectedEdge["hzulip", "http-types"], DirectedEdge["hzulip", "lens"], DirectedEdge["hzulip", "lens-aeson"], DirectedEdge["hzulip", "mtl"], DirectedEdge["hzulip", "stm"], DirectedEdge["hzulip", "stm-conduit"], DirectedEdge["hzulip", "text"], DirectedEdge["hzulip", "transformers"], DirectedEdge["i18n", "array"], DirectedEdge["i18n", "base"], DirectedEdge["i18n", "containers"], DirectedEdge["i18n", "directory"], DirectedEdge["i18n", "filepath"], DirectedEdge["i18n", "mtl"], DirectedEdge["i18n", "old-locale"], DirectedEdge["i18n", "old-time"], DirectedEdge["i18n", "parsec"], DirectedEdge["i18n", "utf8-string"], DirectedEdge["iCalendar", "base"], DirectedEdge["iCalendar", "base64-bytestring"], DirectedEdge["iCalendar", "bytestring"], DirectedEdge["iCalendar", "case-insensitive"], DirectedEdge["iCalendar", "containers"], DirectedEdge["iCalendar", "data-default"], DirectedEdge["iCalendar", "mime"], DirectedEdge["iCalendar", "mtl"], DirectedEdge["iCalendar", "network"], DirectedEdge["iCalendar", "network-uri"], DirectedEdge["iCalendar", "old-locale"], DirectedEdge["iCalendar", "parsec"], DirectedEdge["iCalendar", "text"], DirectedEdge["iCalendar", "time"], DirectedEdge["iException", "base"], DirectedEdge["iException", "interleavableIO"], DirectedEdge["iException", "mtl"], DirectedEdge["iap-verifier", "aeson"], DirectedEdge["iap-verifier", "base"], DirectedEdge["iap-verifier", "base64-bytestring"], DirectedEdge["iap-verifier", "bytestring"], DirectedEdge["iap-verifier", "conduit"], DirectedEdge["iap-verifier", "http-conduit"], DirectedEdge["iap-verifier", "monads-tf"], DirectedEdge["iap-verifier", "text"], DirectedEdge["iap-verifier", "transformers"], DirectedEdge["ib-api", "attoparsec"], DirectedEdge["ib-api", "base"], DirectedEdge["ib-api", "bytestring"], DirectedEdge["ib-api", "ib-api"], DirectedEdge["ib-api", "network"], DirectedEdge["ib-api", "unix"], DirectedEdge["iban", "base"], DirectedEdge["iban", "containers"], DirectedEdge["iban", "iso3166-country-codes"], DirectedEdge["iban", "text"], DirectedEdge["iban", "unordered-containers"], DirectedEdge["ibus-hs", "base"], DirectedEdge["ibus-hs", "dbus"], DirectedEdge["ibus-hs", "directory"], DirectedEdge["ibus-hs", "unix"], DirectedEdge["ibus-hs", "xdg-basedir"], DirectedEdge["ical", "iCalendar"], DirectedEdge["ical", "aeson"], DirectedEdge["ical", "attoparsec"], DirectedEdge["ical", "base"], DirectedEdge["ical", "containers"], DirectedEdge["ical", "either"], DirectedEdge["ical", "ical"], DirectedEdge["ical", "mtl"], DirectedEdge["ical", "text"], DirectedEdge["ical", "time"], DirectedEdge["ical", "transformers"], DirectedEdge["iconv", "base"], DirectedEdge["iconv", "bytestring"], DirectedEdge["ide-backend", "aeson"], DirectedEdge["ide-backend", "async"], DirectedEdge["ide-backend", "attoparsec"], DirectedEdge["ide-backend", "base"], DirectedEdge["ide-backend", "binary"], DirectedEdge["ide-backend", "bytestring"], DirectedEdge["ide-backend", "bytestring-trie"], DirectedEdge["ide-backend", "Cabal-ide-backend"], DirectedEdge["ide-backend", "containers"], DirectedEdge["ide-backend", "crypto-api"], DirectedEdge["ide-backend", "data-accessor"], DirectedEdge["ide-backend", "data-accessor-mtl"], DirectedEdge["ide-backend", "directory"], DirectedEdge["ide-backend", "executable-path"], DirectedEdge["ide-backend", "filemanip"], DirectedEdge["ide-backend", "filepath"], DirectedEdge["ide-backend", "fingertree"], DirectedEdge["ide-backend", "ghc-prim"], DirectedEdge["ide-backend", "ide-backend"], DirectedEdge["ide-backend", "ide-backend-common"], DirectedEdge["ide-backend", "mtl"], DirectedEdge["ide-backend", "network"], DirectedEdge["ide-backend", "pretty-show"], DirectedEdge["ide-backend", "process"], DirectedEdge["ide-backend", "random"], DirectedEdge["ide-backend", "tagged"], DirectedEdge["ide-backend", "template-haskell"], DirectedEdge["ide-backend", "temporary"], DirectedEdge["ide-backend", "text"], DirectedEdge["ide-backend", "time"], DirectedEdge["ide-backend", "transformers"], DirectedEdge["ide-backend", "unix"], DirectedEdge["ide-backend", "unix-compat"], DirectedEdge["ide-backend", "unordered-containers"], DirectedEdge["ide-backend", "utf8-string"], DirectedEdge["ide-backend-common", "aeson"], DirectedEdge["ide-backend-common", "async"], DirectedEdge["ide-backend-common", "attoparsec"], DirectedEdge["ide-backend-common", "base"], DirectedEdge["ide-backend-common", "base64-bytestring"], DirectedEdge["ide-backend-common", "binary"], DirectedEdge["ide-backend-common", "bytestring"], DirectedEdge["ide-backend-common", "bytestring-trie"], DirectedEdge["ide-backend-common", "containers"], DirectedEdge["ide-backend-common", "crypto-api"], DirectedEdge["ide-backend-common", "data-accessor"], DirectedEdge["ide-backend-common", "directory"], DirectedEdge["ide-backend-common", "filepath"], DirectedEdge["ide-backend-common", "fingertree"], DirectedEdge["ide-backend-common", "ghc-prim"], DirectedEdge["ide-backend-common", "monad-logger"], DirectedEdge["ide-backend-common", "mtl"], DirectedEdge["ide-backend-common", "network"], DirectedEdge["ide-backend-common", "pretty-show"], DirectedEdge["ide-backend-common", "process"], DirectedEdge["ide-backend-common", "tagged"], DirectedEdge["ide-backend-common", "template-haskell"], DirectedEdge["ide-backend-common", "temporary"], DirectedEdge["ide-backend-common", "text"], DirectedEdge["ide-backend-common", "time"], DirectedEdge["ide-backend-common", "transformers"], DirectedEdge["ide-backend-common", "unix"], DirectedEdge["ide-backend-common", "unix-compat"], DirectedEdge["ide-backend-rts", "ide-backend-server"], DirectedEdge["ide-backend-rts", "base"], DirectedEdge["ide-backend-server", "array"], DirectedEdge["ide-backend-server", "async"], DirectedEdge["ide-backend-server", "base"], DirectedEdge["ide-backend-server", "bytestring"], DirectedEdge["ide-backend-server", "Cabal"], DirectedEdge["ide-backend-server", "containers"], DirectedEdge["ide-backend-server", "data-accessor"], DirectedEdge["ide-backend-server", "data-accessor-mtl"], DirectedEdge["ide-backend-server", "directory"], DirectedEdge["ide-backend-server", "file-embed"], DirectedEdge["ide-backend-server", "filemanip"], DirectedEdge["ide-backend-server", "filepath"], DirectedEdge["ide-backend-server", "ghc"], DirectedEdge["ide-backend-server", "haddock"], DirectedEdge["ide-backend-server", "haddock-api"], DirectedEdge["ide-backend-server", "ide-backend-common"], DirectedEdge["ide-backend-server", "mtl"], DirectedEdge["ide-backend-server", "network"], DirectedEdge["ide-backend-server", "old-time"], DirectedEdge["ide-backend-server", "process"], DirectedEdge["ide-backend-server", "tar"], DirectedEdge["ide-backend-server", "temporary"], DirectedEdge["ide-backend-server", "text"], DirectedEdge["ide-backend-server", "time"], DirectedEdge["ide-backend-server", "transformers"], DirectedEdge["ide-backend-server", "unix"], DirectedEdge["ide-backend-server", "unix-compat"], DirectedEdge["ide-backend-server", "unordered-containers"], DirectedEdge["ide-backend-server", "zlib"], DirectedEdge["ideas", "base"], DirectedEdge["ideas", "cgi"], DirectedEdge["ideas", "containers"], DirectedEdge["ideas", "Diff"], DirectedEdge["ideas", "directory"], DirectedEdge["ideas", "filepath"], DirectedEdge["ideas", "HDBC"], DirectedEdge["ideas", "parsec"], DirectedEdge["ideas", "QuickCheck"], DirectedEdge["ideas", "random"], DirectedEdge["ideas", "time"], DirectedEdge["ideas", "uniplate"], DirectedEdge["ideas", "wl-pprint"], DirectedEdge["ideas-math", "base"], DirectedEdge["ideas-math", "containers"], DirectedEdge["ideas-math", "ideas"], DirectedEdge["ideas-math", "parsec"], DirectedEdge["ideas-math", "QuickCheck"], DirectedEdge["ideas-math", "random"], DirectedEdge["idempotent", "base"], DirectedEdge["idempotent", "containers"], DirectedEdge["identicon", "base"], DirectedEdge["identicon", "bytestring"], DirectedEdge["identicon", "JuicyPixels"], DirectedEdge["identifiers", "base"], DirectedEdge["identifiers", "binary"], DirectedEdge["identifiers", "cereal"], DirectedEdge["identifiers", "containers"], DirectedEdge["identifiers", "deepseq"], DirectedEdge["identifiers", "hashable"], DirectedEdge["identifiers", "ListLike"], DirectedEdge["identifiers", "text"], DirectedEdge["identifiers", "unordered-containers"], DirectedEdge["idiii", "base"], DirectedEdge["idiii", "bytestring"], DirectedEdge["idiii", "containers"], DirectedEdge["idiii", "data-accessor"], DirectedEdge["idiii", "idiii"], DirectedEdge["idiii", "MissingH"], DirectedEdge["idiii", "polyparse"], DirectedEdge["idiii", "text"], DirectedEdge["idiii", "utf8-string"], DirectedEdge["idna", "base"], DirectedEdge["idna", "punycode"], DirectedEdge["idna", "stringprep"], DirectedEdge["idna", "text"], DirectedEdge["idna2008", "base"], DirectedEdge["idna2008", "punycode"], DirectedEdge["idna2008", "split"], DirectedEdge["idris", "aeson"], DirectedEdge["idris", "annotated-wl-pprint"], DirectedEdge["idris", "ansi-terminal"], DirectedEdge["idris", "ansi-wl-pprint"], DirectedEdge["idris", "async"], DirectedEdge["idris", "base"], DirectedEdge["idris", "base64-bytestring"], DirectedEdge["idris", "binary"], DirectedEdge["idris", "blaze-html"], DirectedEdge["idris", "blaze-markup"], DirectedEdge["idris", "bytestring"], DirectedEdge["idris", "cheapskate"], DirectedEdge["idris", "containers"], DirectedEdge["idris", "deepseq"], DirectedEdge["idris", "directory"], DirectedEdge["idris", "filepath"], DirectedEdge["idris", "fingertree"], DirectedEdge["idris", "fsnotify"], DirectedEdge["idris", "haskeline"], DirectedEdge["idris", "idris"], DirectedEdge["idris", "mtl"], DirectedEdge["idris", "network"], DirectedEdge["idris", "optparse-applicative"], DirectedEdge["idris", "parsers"], DirectedEdge["idris", "pretty"], DirectedEdge["idris", "process"], DirectedEdge["idris", "safe"], DirectedEdge["idris", "split"], DirectedEdge["idris", "terminal-size"], DirectedEdge["idris", "text"], DirectedEdge["idris", "time"], DirectedEdge["idris", "transformers"], DirectedEdge["idris", "transformers-compat"], DirectedEdge["idris", "trifecta"], DirectedEdge["idris", "uniplate"], DirectedEdge["idris", "unix"], DirectedEdge["idris", "unordered-containers"], DirectedEdge["idris", "utf8-string"], DirectedEdge["idris", "vector"], DirectedEdge["idris", "vector-binary-instances"], DirectedEdge["idris", "zip-archive"], DirectedEdge["idris", "zlib"], DirectedEdge["ieee", "base"], DirectedEdge["ieee-utils", "base"], DirectedEdge["ieee-utils-tempfix", "base"], DirectedEdge["ieee754", "base"], DirectedEdge["ieee754-parser", "base"], DirectedEdge["ieee754-parser", "binary"], DirectedEdge["ieee754-parser", "bytestring"], DirectedEdge["ifcxt", "base"], DirectedEdge["ifcxt", "template-haskell"], DirectedEdge["iff", "base"], DirectedEdge["iff", "binary"], DirectedEdge["iff", "bytestring"], DirectedEdge["ifscs", "base"], DirectedEdge["ifscs", "containers"], DirectedEdge["ifscs", "failure"], DirectedEdge["ig", "aeson"], DirectedEdge["ig", "attoparsec-conduit"], DirectedEdge["ig", "base"], DirectedEdge["ig", "base16-bytestring"], DirectedEdge["ig", "bytestring"], DirectedEdge["ig", "conduit"], DirectedEdge["ig", "conduit-extra"], DirectedEdge["ig", "crypto-api"], DirectedEdge["ig", "cryptohash"], DirectedEdge["ig", "cryptohash-cryptoapi"], DirectedEdge["ig", "data-default"], DirectedEdge["ig", "http-conduit"], DirectedEdge["ig", "http-types"], DirectedEdge["ig", "lifted-base"], DirectedEdge["ig", "monad-control"], DirectedEdge["ig", "resourcet"], DirectedEdge["ig", "text"], DirectedEdge["ig", "time"], DirectedEdge["ig", "transformers"], DirectedEdge["ig", "transformers-base"], DirectedEdge["ig", "unordered-containers"], DirectedEdge["ige-mac-integration", "gtk3-mac-integration"], DirectedEdge["ige-mac-integration", "array"], DirectedEdge["ige-mac-integration", "base"], DirectedEdge["ige-mac-integration", "containers"], DirectedEdge["ige-mac-integration", "glib"], DirectedEdge["ige-mac-integration", "gtk"], DirectedEdge["ige-mac-integration", "mtl"], DirectedEdge["ignore", "base"], DirectedEdge["ignore", "directory"], DirectedEdge["ignore", "Glob"], DirectedEdge["ignore", "ignore"], DirectedEdge["ignore", "mtl"], DirectedEdge["ignore", "path"], DirectedEdge["ignore", "pcre-heavy"], DirectedEdge["ignore", "text"], DirectedEdge["igraph", "base"], DirectedEdge["igraph", "containers"], DirectedEdge["igraph", "hashable"], DirectedEdge["igraph", "unordered-containers"], DirectedEdge["igrf", "ad"], DirectedEdge["igrf", "base"], DirectedEdge["igrf", "polynomial"], DirectedEdge["ihaskell", "aeson"], DirectedEdge["ihaskell", "base"], DirectedEdge["ihaskell", "base64-bytestring"], DirectedEdge["ihaskell", "bin-package-db"], DirectedEdge["ihaskell", "bytestring"], DirectedEdge["ihaskell", "cereal"], DirectedEdge["ihaskell", "cmdargs"], DirectedEdge["ihaskell", "containers"], DirectedEdge["ihaskell", "directory"], DirectedEdge["ihaskell", "filepath"], DirectedEdge["ihaskell", "ghc"], DirectedEdge["ihaskell", "ghc-parser"], DirectedEdge["ihaskell", "ghc-paths"], DirectedEdge["ihaskell", "haskeline"], DirectedEdge["ihaskell", "haskell-src-exts"], DirectedEdge["ihaskell", "hlint"], DirectedEdge["ihaskell", "http-client"], DirectedEdge["ihaskell", "http-client-tls"], DirectedEdge["ihaskell", "ihaskell"], DirectedEdge["ihaskell", "ipython-kernel"], DirectedEdge["ihaskell", "mtl"], DirectedEdge["ihaskell", "parsec"], DirectedEdge["ihaskell", "process"], DirectedEdge["ihaskell", "random"], DirectedEdge["ihaskell", "shelly"], DirectedEdge["ihaskell", "split"], DirectedEdge["ihaskell", "stm"], DirectedEdge["ihaskell", "strict"], DirectedEdge["ihaskell", "text"], DirectedEdge["ihaskell", "transformers"], DirectedEdge["ihaskell", "unix"], DirectedEdge["ihaskell", "unordered-containers"], DirectedEdge["ihaskell", "utf8-string"], DirectedEdge["ihaskell", "uuid"], DirectedEdge["ihaskell", "vector"], DirectedEdge["ihaskell-aeson", "aeson"], DirectedEdge["ihaskell-aeson", "aeson-pretty"], DirectedEdge["ihaskell-aeson", "base"], DirectedEdge["ihaskell-aeson", "bytestring"], DirectedEdge["ihaskell-aeson", "here"], DirectedEdge["ihaskell-aeson", "ihaskell"], DirectedEdge["ihaskell-aeson", "text"], DirectedEdge["ihaskell-basic", "base"], DirectedEdge["ihaskell-basic", "ihaskell"], DirectedEdge["ihaskell-blaze", "base"], DirectedEdge["ihaskell-blaze", "blaze-html"], DirectedEdge["ihaskell-blaze", "blaze-markup"], DirectedEdge["ihaskell-blaze", "ihaskell"], DirectedEdge["ihaskell-charts", "base"], DirectedEdge["ihaskell-charts", "bytestring"], DirectedEdge["ihaskell-charts", "Chart"], DirectedEdge["ihaskell-charts", "Chart-cairo"], DirectedEdge["ihaskell-charts", "data-default-class"], DirectedEdge["ihaskell-charts", "directory"], DirectedEdge["ihaskell-charts", "ihaskell"], DirectedEdge["ihaskell-diagrams", "active"], DirectedEdge["ihaskell-diagrams", "base"], DirectedEdge["ihaskell-diagrams", "bytestring"], DirectedEdge["ihaskell-diagrams", "diagrams"], DirectedEdge["ihaskell-diagrams", "diagrams-cairo"], DirectedEdge["ihaskell-diagrams", "diagrams-lib"], DirectedEdge["ihaskell-diagrams", "directory"], DirectedEdge["ihaskell-diagrams", "ihaskell"], DirectedEdge["ihaskell-diagrams", "text"], DirectedEdge["ihaskell-display", "base"], DirectedEdge["ihaskell-display", "classy-prelude"], DirectedEdge["ihaskell-display", "ihaskell"], DirectedEdge["ihaskell-hatex", "base"], DirectedEdge["ihaskell-hatex", "HaTeX"], DirectedEdge["ihaskell-hatex", "ihaskell"], DirectedEdge["ihaskell-hatex", "text"], DirectedEdge["ihaskell-inline-r", "base"], DirectedEdge["ihaskell-inline-r", "base64-bytestring"], DirectedEdge["ihaskell-inline-r", "blaze-html"], DirectedEdge["ihaskell-inline-r", "bytestring"], DirectedEdge["ihaskell-inline-r", "filepath"], DirectedEdge["ihaskell-inline-r", "ihaskell"], DirectedEdge["ihaskell-inline-r", "ihaskell-blaze"], DirectedEdge["ihaskell-inline-r", "inline-r"], DirectedEdge["ihaskell-inline-r", "template-haskell"], DirectedEdge["ihaskell-inline-r", "temporary"], DirectedEdge["ihaskell-juicypixels", "base"], DirectedEdge["ihaskell-juicypixels", "bytestring"], DirectedEdge["ihaskell-juicypixels", "directory"], DirectedEdge["ihaskell-juicypixels", "ihaskell"], DirectedEdge["ihaskell-juicypixels", "JuicyPixels"], DirectedEdge["ihaskell-magic", "base"], DirectedEdge["ihaskell-magic", "base64-bytestring"], DirectedEdge["ihaskell-magic", "bytestring"], DirectedEdge["ihaskell-magic", "ihaskell"], DirectedEdge["ihaskell-magic", "ipython-kernel"], DirectedEdge["ihaskell-magic", "magic"], DirectedEdge["ihaskell-magic", "text"], DirectedEdge["ihaskell-magic", "utf8-string"], DirectedEdge["ihaskell-parsec", "aeson"], DirectedEdge["ihaskell-parsec", "base"], DirectedEdge["ihaskell-parsec", "here"], DirectedEdge["ihaskell-parsec", "ihaskell"], DirectedEdge["ihaskell-parsec", "parsec"], DirectedEdge["ihaskell-parsec", "random"], DirectedEdge["ihaskell-parsec", "text"], DirectedEdge["ihaskell-parsec", "unordered-containers"], DirectedEdge["ihaskell-plot", "base"], DirectedEdge["ihaskell-plot", "bytestring"], DirectedEdge["ihaskell-plot", "ihaskell"], DirectedEdge["ihaskell-plot", "plot"], DirectedEdge["ihaskell-rlangqq", "base"], DirectedEdge["ihaskell-rlangqq", "base64-bytestring"], DirectedEdge["ihaskell-rlangqq", "blaze-html"], DirectedEdge["ihaskell-rlangqq", "bytestring"], DirectedEdge["ihaskell-rlangqq", "directory"], DirectedEdge["ihaskell-rlangqq", "filepath"], DirectedEdge["ihaskell-rlangqq", "ihaskell"], DirectedEdge["ihaskell-rlangqq", "ihaskell-blaze"], DirectedEdge["ihaskell-rlangqq", "Rlang-QQ"], DirectedEdge["ihaskell-rlangqq", "split"], DirectedEdge["ihaskell-rlangqq", "stm"], DirectedEdge["ihaskell-rlangqq", "template-haskell"], DirectedEdge["ihaskell-rlangqq", "xformat"], DirectedEdge["ihaskell-widgets", "aeson"], DirectedEdge["ihaskell-widgets", "base"], DirectedEdge["ihaskell-widgets", "containers"], DirectedEdge["ihaskell-widgets", "ihaskell"], DirectedEdge["ihaskell-widgets", "ipython-kernel"], DirectedEdge["ihaskell-widgets", "nats"], DirectedEdge["ihaskell-widgets", "scientific"], DirectedEdge["ihaskell-widgets", "singletons"], DirectedEdge["ihaskell-widgets", "text"], DirectedEdge["ihaskell-widgets", "unix"], DirectedEdge["ihaskell-widgets", "unordered-containers"], DirectedEdge["ihaskell-widgets", "vector"], DirectedEdge["ihaskell-widgets", "vinyl"], DirectedEdge["ihttp", "attoparsec"], DirectedEdge["ihttp", "base"], DirectedEdge["ihttp", "bytestring"], DirectedEdge["ihttp", "containers"], DirectedEdge["ihttp", "contstuff"], DirectedEdge["ihttp", "enumerator"], DirectedEdge["ihttp", "netlines"], DirectedEdge["ihttp", "network"], DirectedEdge["ilist", "base"], DirectedEdge["illuminate", "array"], DirectedEdge["illuminate", "base"], DirectedEdge["illuminate", "containers"], DirectedEdge["illuminate", "filemanip"], DirectedEdge["illuminate", "filepath"], DirectedEdge["illuminate", "hscolour"], DirectedEdge["illuminate", "html"], DirectedEdge["illuminate", "utf8-string"], DirectedEdge["illuminate", "xhtml"], DirectedEdge["image-type", "base"], DirectedEdge["image-type", "bytestring"], DirectedEdge["imagefilters", "base"], DirectedEdge["imagefilters", "gd"], DirectedEdge["imagemagick", "base"], DirectedEdge["imagemagick", "bytestring"], DirectedEdge["imagemagick", "filepath"], DirectedEdge["imagemagick", "imagemagick"], DirectedEdge["imagemagick", "lifted-base"], DirectedEdge["imagemagick", "MonadCatchIO-transformers"], DirectedEdge["imagemagick", "resourcet"], DirectedEdge["imagemagick", "text"], DirectedEdge["imagemagick", "transformers"], DirectedEdge["imagemagick", "vector"], DirectedEdge["imagepaste", "base"], DirectedEdge["imagepaste", "containers"], DirectedEdge["imagepaste", "HTTP"], DirectedEdge["imagepaste", "json"], DirectedEdge["imagepaste", "mtl"], DirectedEdge["imagepaste", "network"], DirectedEdge["imagepaste", "regex-posix"], DirectedEdge["imagepaste", "tagsoup"], DirectedEdge["imagepaste", "template-haskell"], DirectedEdge["imagepaste", "transformers"], DirectedEdge["imagepaste", "vcs-revision"], DirectedEdge["imagesize-conduit", "base"], DirectedEdge["imagesize-conduit", "bytestring"], DirectedEdge["imagesize-conduit", "conduit"], DirectedEdge["imagesize-conduit", "conduit-extra"], DirectedEdge["imagesize-conduit", "exceptions"], DirectedEdge["imap", "attoparsec"], DirectedEdge["imap", "base"], DirectedEdge["imap", "bytestring"], DirectedEdge["imap", "connection"], DirectedEdge["imap", "data-default"], DirectedEdge["imap", "derive"], DirectedEdge["imap", "either"], DirectedEdge["imap", "exceptions"], DirectedEdge["imap", "hslogger"], DirectedEdge["imap", "list-t"], DirectedEdge["imap", "monadIO"], DirectedEdge["imap", "random"], DirectedEdge["imap", "rolling-queue"], DirectedEdge["imap", "stm"], DirectedEdge["imap", "stm-delay"], DirectedEdge["imap", "text"], DirectedEdge["imap", "transformers"], DirectedEdge["imapget", "base"], DirectedEdge["imapget", "bytestring"], DirectedEdge["imapget", "directory"], DirectedEdge["imapget", "HaskellNet"], DirectedEdge["imapget", "HsOpenSSL"], DirectedEdge["imapget", "network"], DirectedEdge["imapget", "text"], DirectedEdge["imbib", "base"], DirectedEdge["imbib", "bibtex"], DirectedEdge["imbib", "bytestring"], DirectedEdge["imbib", "ConfigFile"], DirectedEdge["imbib", "containers"], DirectedEdge["imbib", "curl"], DirectedEdge["imbib", "directory"], DirectedEdge["imbib", "download-curl"], DirectedEdge["imbib", "filepath"], DirectedEdge["imbib", "glib"], DirectedEdge["imbib", "gnomevfs"], DirectedEdge["imbib", "gtk"], DirectedEdge["imbib", "mtl"], DirectedEdge["imbib", "parsec"], DirectedEdge["imbib", "process"], DirectedEdge["imbib", "split"], DirectedEdge["imbib", "utf8-string"], DirectedEdge["imgurder", "base"], DirectedEdge["imgurder", "curl"], DirectedEdge["imgurder", "directory"], DirectedEdge["imgurder", "hxt"], DirectedEdge["imgurder", "hxt-xpath"], DirectedEdge["imgurder", "url"], DirectedEdge["imm", "aeson"], DirectedEdge["imm", "ansi-wl-pprint"], DirectedEdge["imm", "atom-conduit"], DirectedEdge["imm", "base"], DirectedEdge["imm", "bytestring"], DirectedEdge["imm", "case-insensitive"], DirectedEdge["imm", "chunked-data"], DirectedEdge["imm", "comonad"], DirectedEdge["imm", "compdata"], DirectedEdge["imm", "conduit"], DirectedEdge["imm", "conduit-combinators"], DirectedEdge["imm", "conduit-parse"], DirectedEdge["imm", "connection"], DirectedEdge["imm", "containers"], DirectedEdge["imm", "directory"], DirectedEdge["imm", "dyre"], DirectedEdge["imm", "exceptions"], DirectedEdge["imm", "fast-logger"], DirectedEdge["imm", "filepath"], DirectedEdge["imm", "free"], DirectedEdge["imm", "hashable"], DirectedEdge["imm", "HaskellNet"], DirectedEdge["imm", "HaskellNet-SSL"], DirectedEdge["imm", "http-client"], DirectedEdge["imm", "http-client-tls"], DirectedEdge["imm", "http-types"], DirectedEdge["imm", "imm"], DirectedEdge["imm", "mime-mail"], DirectedEdge["imm", "mono-traversable"], DirectedEdge["imm", "monoid-subclasses"], DirectedEdge["imm", "network"], DirectedEdge["imm", "opml-conduit"], DirectedEdge["imm", "optparse-applicative"], DirectedEdge["imm", "rainbow"], DirectedEdge["imm", "rainbox"], DirectedEdge["imm", "rss-conduit"], DirectedEdge["imm", "text"], DirectedEdge["imm", "time"], DirectedEdge["imm", "timerep"], DirectedEdge["imm", "tls"], DirectedEdge["imm", "transformers"], DirectedEdge["imm", "uri-bytestring"], DirectedEdge["imm", "xml"], DirectedEdge["imm", "xml-conduit"], DirectedEdge["immortal", "base"], DirectedEdge["immortal", "lifted-base"], DirectedEdge["immortal", "monad-control"], DirectedEdge["immortal", "stm"], DirectedEdge["immortal", "transformers-base"], DirectedEdge["imparse", "ascetic"], DirectedEdge["imparse", "base"], DirectedEdge["imparse", "compilation"], DirectedEdge["imparse", "containers"], DirectedEdge["imparse", "directory"], DirectedEdge["imparse", "indents"], DirectedEdge["imparse", "MissingH"], DirectedEdge["imparse", "parsec"], DirectedEdge["imparse", "richreports"], DirectedEdge["imparse", "split"], DirectedEdge["imparse", "staticanalysis"], DirectedEdge["imparse", "text"], DirectedEdge["imparse", "uxadt"], DirectedEdge["imperative-edsl", "array"], DirectedEdge["imperative-edsl", "base"], DirectedEdge["imperative-edsl", "BoundedChan"], DirectedEdge["imperative-edsl", "containers"], DirectedEdge["imperative-edsl", "deepseq"], DirectedEdge["imperative-edsl", "directory"], DirectedEdge["imperative-edsl", "exception-transformers"], DirectedEdge["imperative-edsl", "ghc-prim"], DirectedEdge["imperative-edsl", "language-c-quote"], DirectedEdge["imperative-edsl", "mainland-pretty"], DirectedEdge["imperative-edsl", "microlens"], DirectedEdge["imperative-edsl", "microlens-mtl"], DirectedEdge["imperative-edsl", "microlens-th"], DirectedEdge["imperative-edsl", "mtl"], DirectedEdge["imperative-edsl", "open-typerep"], DirectedEdge["imperative-edsl", "operational-alacarte"], DirectedEdge["imperative-edsl", "process"], DirectedEdge["imperative-edsl", "srcloc"], DirectedEdge["imperative-edsl", "syntactic"], DirectedEdge["imperative-edsl", "time"], DirectedEdge["imperative-edsl-vhdl", "hardware-edsl"], DirectedEdge["imperative-edsl-vhdl", "base"], DirectedEdge["imperative-edsl-vhdl", "bytestring"], DirectedEdge["imperative-edsl-vhdl", "constraints"], DirectedEdge["imperative-edsl-vhdl", "containers"], DirectedEdge["imperative-edsl-vhdl", "language-vhdl"], DirectedEdge["imperative-edsl-vhdl", "mtl"], DirectedEdge["imperative-edsl-vhdl", "operational-alacarte"], DirectedEdge["imperative-edsl-vhdl", "pretty"], DirectedEdge["imperative-edsl-vhdl", "syntactic"], DirectedEdge["implicit", "base"], DirectedEdge["implicit", "blaze-builder"], DirectedEdge["implicit", "blaze-markup"], DirectedEdge["implicit", "blaze-svg"], DirectedEdge["implicit", "bytestring"], DirectedEdge["implicit", "containers"], DirectedEdge["implicit", "deepseq"], DirectedEdge["implicit", "directory"], DirectedEdge["implicit", "filepath"], DirectedEdge["implicit", "JuicyPixels"], DirectedEdge["implicit", "mtl"], DirectedEdge["implicit", "NumInstances"], DirectedEdge["implicit", "optparse-applicative"], DirectedEdge["implicit", "parallel"], DirectedEdge["implicit", "parsec"], DirectedEdge["implicit", "storable-endian"], DirectedEdge["implicit", "text"], DirectedEdge["implicit", "unordered-containers"], DirectedEdge["implicit", "vector-space"], DirectedEdge["implicit-logging", "base"], DirectedEdge["implicit-logging", "mtl"], DirectedEdge["implicit-logging", "time"], DirectedEdge["implicit-logging", "transformers"], DirectedEdge["implicit-params", "base"], DirectedEdge["implicit-params", "data-default-class"], DirectedEdge["imports", "base"], DirectedEdge["imports", "directory"], DirectedEdge["imports", "filepath"], DirectedEdge["imports", "mtl"], DirectedEdge["impossible", "base"], DirectedEdge["impossible", "lens"], DirectedEdge["improve", "base"], DirectedEdge["improve", "mtl"], DirectedEdge["improve", "yices"], DirectedEdge["inc-ref", "base"], DirectedEdge["inc-ref", "stm"], DirectedEdge["inch", "base"], DirectedEdge["inch", "containers"], DirectedEdge["inch", "filepath"], DirectedEdge["inch", "IndentParser"], DirectedEdge["inch", "mtl"], DirectedEdge["inch", "parsec"], DirectedEdge["inch", "presburger"], DirectedEdge["inch", "pretty"], DirectedEdge["include-file", "base"], DirectedEdge["include-file", "bytestring"], DirectedEdge["include-file", "random"], DirectedEdge["include-file", "template-haskell"], DirectedEdge["incremental-computing", "base"], DirectedEdge["incremental-computing", "containers"], DirectedEdge["incremental-computing", "dlist"], DirectedEdge["incremental-computing", "fingertree"], DirectedEdge["incremental-computing", "order-maintenance"], DirectedEdge["incremental-computing", "transformers"], DirectedEdge["incremental-maps", "base"], DirectedEdge["incremental-maps", "containers"], DirectedEdge["incremental-maps", "dlist"], DirectedEdge["incremental-maps", "fingertree"], DirectedEdge["incremental-maps", "order-maintenance"], DirectedEdge["incremental-maps", "transformers"], DirectedEdge["incremental-parser", "base"], DirectedEdge["incremental-parser", "monoid-subclasses"], DirectedEdge["incremental-sat-solver", "base"], DirectedEdge["incremental-sat-solver", "containers"], DirectedEdge["incremental-sat-solver", "mtl"], DirectedEdge["increments", "base"], DirectedEdge["increments", "beamable"], DirectedEdge["increments", "bytestring"], DirectedEdge["increments", "containers"], DirectedEdge["increments", "ghc-prim"], DirectedEdge["indentation", "base"], DirectedEdge["indentation", "indentation-core"], DirectedEdge["indentation", "indentation-parsec"], DirectedEdge["indentation", "indentation-trifecta"], DirectedEdge["indentation", "mtl"], DirectedEdge["indentation", "parsec"], DirectedEdge["indentation", "parsers"], DirectedEdge["indentation", "trifecta"], DirectedEdge["indentation-core", "base"], DirectedEdge["indentation-core", "mtl"], DirectedEdge["indentation-parsec", "base"], DirectedEdge["indentation-parsec", "indentation-core"], DirectedEdge["indentation-parsec", "mtl"], DirectedEdge["indentation-parsec", "parsec"], DirectedEdge["indentation-trifecta", "base"], DirectedEdge["indentation-trifecta", "indentation-core"], DirectedEdge["indentation-trifecta", "mtl"], DirectedEdge["indentation-trifecta", "parsers"], DirectedEdge["indentation-trifecta", "trifecta"], DirectedEdge["indentparser", "base"], DirectedEdge["indentparser", "mtl"], DirectedEdge["indentparser", "parsec"], DirectedEdge["indents", "base"], DirectedEdge["indents", "concatenative"], DirectedEdge["indents", "mtl"], DirectedEdge["indents", "parsec"], DirectedEdge["index-core", "base"], DirectedEdge["indexed", "base"], DirectedEdge["indexed-do-notation", "base"], DirectedEdge["indexed-do-notation", "haskell-src-meta"], DirectedEdge["indexed-do-notation", "indexed"], DirectedEdge["indexed-do-notation", "template-haskell"], DirectedEdge["indexed-extras", "base"], DirectedEdge["indexed-extras", "bifunctors"], DirectedEdge["indexed-extras", "indexed"], DirectedEdge["indexed-extras", "mtl"], DirectedEdge["indexed-extras", "pointed"], DirectedEdge["indexed-free", "base"], DirectedEdge["indexed-free", "indexed"], DirectedEdge["indian-language-font-converter", "base"], DirectedEdge["indian-language-font-converter", "gtk"], DirectedEdge["indian-language-font-converter", "HDBC"], DirectedEdge["indices", "base"], DirectedEdge["indices", "tagged"], DirectedEdge["indices", "template-haskell"], DirectedEdge["indieweb-algorithms", "aeson"], DirectedEdge["indieweb-algorithms", "base"], DirectedEdge["indieweb-algorithms", "bytestring"], DirectedEdge["indieweb-algorithms", "containers"], DirectedEdge["indieweb-algorithms", "data-default"], DirectedEdge["indieweb-algorithms", "either"], DirectedEdge["indieweb-algorithms", "http-link-header"], DirectedEdge["indieweb-algorithms", "lens"], DirectedEdge["indieweb-algorithms", "lens-aeson"], DirectedEdge["indieweb-algorithms", "microformats2-parser"], DirectedEdge["indieweb-algorithms", "network-uri"], DirectedEdge["indieweb-algorithms", "safe"], DirectedEdge["indieweb-algorithms", "text"], DirectedEdge["indieweb-algorithms", "time"], DirectedEdge["indieweb-algorithms", "transformers"], DirectedEdge["indieweb-algorithms", "unordered-containers"], DirectedEdge["indieweb-algorithms", "vector"], DirectedEdge["inf-interval", "array"], DirectedEdge["inf-interval", "base"], DirectedEdge["inf-interval", "deepseq"], DirectedEdge["inf-interval", "vector"], DirectedEdge["infer-upstream", "ansi-wl-pprint"], DirectedEdge["infer-upstream", "base"], DirectedEdge["infer-upstream", "github"], DirectedEdge["infer-upstream", "optparse-applicative"], DirectedEdge["infer-upstream", "parsec"], DirectedEdge["infer-upstream", "process"], DirectedEdge["infer-upstream", "text"], DirectedEdge["infernu", "base"], DirectedEdge["infernu", "containers"], DirectedEdge["infernu", "digits"], DirectedEdge["infernu", "either"], DirectedEdge["infernu", "fgl"], DirectedEdge["infernu", "infernu"], DirectedEdge["infernu", "language-ecmascript"], DirectedEdge["infernu", "mtl"], DirectedEdge["infernu", "optparse-applicative"], DirectedEdge["infernu", "parsec"], DirectedEdge["infernu", "transformers"], DirectedEdge["infinite-search", "base"], DirectedEdge["infinity", "base"], DirectedEdge["infinity", "binary"], DirectedEdge["infinity", "Cabal"], DirectedEdge["infinity", "filepath"], DirectedEdge["infinity", "ghc"], DirectedEdge["infinity", "irc"], DirectedEdge["infinity", "plugins"], DirectedEdge["infix", "base"], DirectedEdge["infix", "containers"], DirectedEdge["infix", "haskell-src"], DirectedEdge["inflections", "base"], DirectedEdge["inflections", "containers"], DirectedEdge["inflections", "parsec"], DirectedEdge["inflist", "base"], DirectedEdge["inflist", "QuickCheck"], DirectedEdge["influxdb", "aeson"], DirectedEdge["influxdb", "attoparsec"], DirectedEdge["influxdb", "base"], DirectedEdge["influxdb", "bytestring"], DirectedEdge["influxdb", "containers"], DirectedEdge["influxdb", "data-default-class"], DirectedEdge["influxdb", "dlist"], DirectedEdge["influxdb", "exceptions"], DirectedEdge["influxdb", "ghc-prim"], DirectedEdge["influxdb", "http-client"], DirectedEdge["influxdb", "influxdb"], DirectedEdge["influxdb", "mtl"], DirectedEdge["influxdb", "mwc-random"], DirectedEdge["influxdb", "network"], DirectedEdge["influxdb", "network-uri"], DirectedEdge["influxdb", "retry"], DirectedEdge["influxdb", "scientific"], DirectedEdge["influxdb", "tagged"], DirectedEdge["influxdb", "template-haskell"], DirectedEdge["influxdb", "text"], DirectedEdge["influxdb", "time"], DirectedEdge["influxdb", "vector"], DirectedEdge["informative", "base"], DirectedEdge["informative", "containers"], DirectedEdge["informative", "csv"], DirectedEdge["informative", "highlighting-kate"], DirectedEdge["informative", "http-conduit"], DirectedEdge["informative", "monad-logger"], DirectedEdge["informative", "pandoc"], DirectedEdge["informative", "persistent"], DirectedEdge["informative", "persistent-postgresql"], DirectedEdge["informative", "shakespeare"], DirectedEdge["informative", "text"], DirectedEdge["informative", "time"], DirectedEdge["informative", "time-locale-compat"], DirectedEdge["informative", "yesod"], DirectedEdge["informative", "yesod-auth"], DirectedEdge["informative", "yesod-core"], DirectedEdge["informative", "yesod-form"], DirectedEdge["ini", "attoparsec"], DirectedEdge["ini", "base"], DirectedEdge["ini", "text"], DirectedEdge["ini", "unordered-containers"], DirectedEdge["inilist", "base"], DirectedEdge["inilist", "bifunctors"], DirectedEdge["inilist", "containers"], DirectedEdge["inilist", "safe"], DirectedEdge["inilist", "trifecta"], DirectedEdge["inject", "attoparsec"], DirectedEdge["inject", "base"], DirectedEdge["inject", "inject"], DirectedEdge["inject", "process"], DirectedEdge["inject", "text"], DirectedEdge["inject-function", "base"], DirectedEdge["inline-c", "ansi-wl-pprint"], DirectedEdge["inline-c", "base"], DirectedEdge["inline-c", "binary"], DirectedEdge["inline-c", "bytestring"], DirectedEdge["inline-c", "Chart"], DirectedEdge["inline-c", "Chart-cairo"], DirectedEdge["inline-c", "containers"], DirectedEdge["inline-c", "cryptohash"], DirectedEdge["inline-c", "directory"], DirectedEdge["inline-c", "filepath"], DirectedEdge["inline-c", "hashable"], DirectedEdge["inline-c", "inline-c"], DirectedEdge["inline-c", "mtl"], DirectedEdge["inline-c", "parsec"], DirectedEdge["inline-c", "parsers"], DirectedEdge["inline-c", "QuickCheck"], DirectedEdge["inline-c", "template-haskell"], DirectedEdge["inline-c", "transformers"], DirectedEdge["inline-c", "unordered-containers"], DirectedEdge["inline-c", "vector"], DirectedEdge["inline-c-cpp", "base"], DirectedEdge["inline-c-cpp", "inline-c"], DirectedEdge["inline-c-cpp", "template-haskell"], DirectedEdge["inline-c-win32", "base"], DirectedEdge["inline-c-win32", "containers"], DirectedEdge["inline-c-win32", "inline-c"], DirectedEdge["inline-c-win32", "template-haskell"], DirectedEdge["inline-java", "base"], DirectedEdge["inline-java", "binary"], DirectedEdge["inline-java", "bytestring"], DirectedEdge["inline-java", "containers"], DirectedEdge["inline-java", "distributed-closure"], DirectedEdge["inline-java", "inline-c"], DirectedEdge["inline-java", "singletons"], DirectedEdge["inline-java", "text"], DirectedEdge["inline-java", "thread-local-storage"], DirectedEdge["inline-java", "vector"], DirectedEdge["inline-r", "aeson"], DirectedEdge["inline-r", "base"], DirectedEdge["inline-r", "bytestring"], DirectedEdge["inline-r", "containers"], DirectedEdge["inline-r", "data-default-class"], DirectedEdge["inline-r", "deepseq"], DirectedEdge["inline-r", "exceptions"], DirectedEdge["inline-r", "mtl"], DirectedEdge["inline-r", "pretty"], DirectedEdge["inline-r", "primitive"], DirectedEdge["inline-r", "process"], DirectedEdge["inline-r", "reflection"], DirectedEdge["inline-r", "setenv"], DirectedEdge["inline-r", "singletons"], DirectedEdge["inline-r", "template-haskell"], DirectedEdge["inline-r", "text"], DirectedEdge["inline-r", "th-lift"], DirectedEdge["inline-r", "th-orphans"], DirectedEdge["inline-r", "transformers"], DirectedEdge["inline-r", "unix"], DirectedEdge["inline-r", "vector"], DirectedEdge["inquire", "aether"], DirectedEdge["inquire", "base"], DirectedEdge["inquire", "text"], DirectedEdge["insert-ordered-containers", "aeson"], DirectedEdge["insert-ordered-containers", "base"], DirectedEdge["insert-ordered-containers", "base-compat"], DirectedEdge["insert-ordered-containers", "hashable"], DirectedEdge["insert-ordered-containers", "lens"], DirectedEdge["insert-ordered-containers", "semigroupoids"], DirectedEdge["insert-ordered-containers", "semigroups"], DirectedEdge["insert-ordered-containers", "text"], DirectedEdge["insert-ordered-containers", "transformers"], DirectedEdge["insert-ordered-containers", "unordered-containers"], DirectedEdge["inserts", "attoparsec"], DirectedEdge["inserts", "base"], DirectedEdge["inserts", "bytestring"], DirectedEdge["inserts", "dlist"], DirectedEdge["inspection-proxy", "async"], DirectedEdge["inspection-proxy", "base"], DirectedEdge["inspection-proxy", "bytestring"], DirectedEdge["inspection-proxy", "cmdargs"], DirectedEdge["inspection-proxy", "pipes"], DirectedEdge["inspection-proxy", "pipes-network"], DirectedEdge["instance-control", "base"], DirectedEdge["instance-control", "mtl"], DirectedEdge["instance-control", "transformers"], DirectedEdge["instant-aeson", "aeson"], DirectedEdge["instant-aeson", "base"], DirectedEdge["instant-aeson", "instant-generics"], DirectedEdge["instant-bytes", "base"], DirectedEdge["instant-bytes", "bytes"], DirectedEdge["instant-bytes", "instant-generics"], DirectedEdge["instant-deepseq", "base"], DirectedEdge["instant-deepseq", "deepseq"], DirectedEdge["instant-deepseq", "instant-generics"], DirectedEdge["instant-generics", "base"], DirectedEdge["instant-generics", "containers"], DirectedEdge["instant-generics", "syb"], DirectedEdge["instant-generics", "template-haskell"], DirectedEdge["instant-hashable", "base"], DirectedEdge["instant-hashable", "hashable"], DirectedEdge["instant-hashable", "instant-generics"], DirectedEdge["instant-zipper", "base"], DirectedEdge["instant-zipper", "instant-generics"], DirectedEdge["instant-zipper", "mtl"], DirectedEdge["instinct", "base"], DirectedEdge["instinct", "containers"], DirectedEdge["instinct", "mersenne-random"], DirectedEdge["instinct", "vector"], DirectedEdge["instrument-chord", "array"], DirectedEdge["instrument-chord", "base"], DirectedEdge["instrument-chord", "containers"], DirectedEdge["instrument-chord", "music-diatonic"], DirectedEdge["int-cast", "base"], DirectedEdge["int-cast", "nats"], DirectedEdge["integer-gmp", "ghc-prim"], DirectedEdge["integer-simple", "ghc-prim"], DirectedEdge["integration", "base"], DirectedEdge["integration", "parallel"], DirectedEdge["intel-aes", "base"], DirectedEdge["intel-aes", "bytestring"], DirectedEdge["intel-aes", "cereal"], DirectedEdge["intel-aes", "crypto-api"], DirectedEdge["intel-aes", "DRBG"], DirectedEdge["intel-aes", "largeword"], DirectedEdge["intel-aes", "process"], DirectedEdge["intel-aes", "random"], DirectedEdge["intel-aes", "rdtsc"], DirectedEdge["intel-aes", "split"], DirectedEdge["intel-aes", "tagged"], DirectedEdge["intel-aes", "time"], DirectedEdge["intel-aes", "unix"], DirectedEdge["interchangeable", "base"], DirectedEdge["interchangeable", "containers"], DirectedEdge["interleavableGen", "base"], DirectedEdge["interleavableGen", "directory"], DirectedEdge["interleavableGen", "haskell-src"], DirectedEdge["interleavableGen", "hint"], DirectedEdge["interleavableGen", "mtl"], DirectedEdge["interleavableIO", "base"], DirectedEdge["interleavableIO", "mtl"], DirectedEdge["interleave", "base"], DirectedEdge["interlude", "base"], DirectedEdge["interlude-l", "aeson"], DirectedEdge["interlude-l", "base"], DirectedEdge["interlude-l", "exceptions"], DirectedEdge["interlude-l", "lens"], DirectedEdge["interlude-l", "mtl"], DirectedEdge["interlude-l", "protolude"], DirectedEdge["interlude-l", "string-conv"], DirectedEdge["interlude-l", "witherable"], DirectedEdge["intern", "array"], DirectedEdge["intern", "base"], DirectedEdge["intern", "bytestring"], DirectedEdge["intern", "hashable"], DirectedEdge["intern", "text"], DirectedEdge["intern", "unordered-containers"], DirectedEdge["internetmarke", "base"], DirectedEdge["internetmarke", "explicit-exception"], DirectedEdge["internetmarke", "HPDF"], DirectedEdge["internetmarke", "parsec"], DirectedEdge["internetmarke", "process"], DirectedEdge["internetmarke", "transformers"], DirectedEdge["internetmarke", "utility-ht"], DirectedEdge["intero", "array"], DirectedEdge["intero", "base"], DirectedEdge["intero", "bytestring"], DirectedEdge["intero", "containers"], DirectedEdge["intero", "directory"], DirectedEdge["intero", "filepath"], DirectedEdge["intero", "ghc"], DirectedEdge["intero", "ghc-boot-th"], DirectedEdge["intero", "ghc-paths"], DirectedEdge["intero", "ghci"], DirectedEdge["intero", "haskeline"], DirectedEdge["intero", "process"], DirectedEdge["intero", "syb"], DirectedEdge["intero", "time"], DirectedEdge["intero", "transformers"], DirectedEdge["intero", "unix"], DirectedEdge["interpol", "base"], DirectedEdge["interpol", "haskell-src-exts"], DirectedEdge["interpol", "regex-posix"], DirectedEdge["interpol", "syb"], DirectedEdge["interpolate", "base"], DirectedEdge["interpolate", "haskell-src-meta"], DirectedEdge["interpolate", "template-haskell"], DirectedEdge["interpolatedstring-perl6", "base"], DirectedEdge["interpolatedstring-perl6", "bytestring"], DirectedEdge["interpolatedstring-perl6", "haskell-src-meta"], DirectedEdge["interpolatedstring-perl6", "template-haskell"], DirectedEdge["interpolatedstring-perl6", "text"], DirectedEdge["interpolatedstring-qq", "base"], DirectedEdge["interpolatedstring-qq", "haskell-src-meta-mwotton"], DirectedEdge["interpolatedstring-qq", "template-haskell"], DirectedEdge["interpolatedstring-qq-mwotton", "interpolatedstring-qq"], DirectedEdge["interpolatedstring-qq-mwotton", "base"], DirectedEdge["interpolatedstring-qq-mwotton", "haskell-src-meta-mwotton"], DirectedEdge["interpolatedstring-qq-mwotton", "template-haskell"], DirectedEdge["interpolation", "base"], DirectedEdge["interpolation", "gnuplot"], DirectedEdge["interpolation", "hmatrix"], DirectedEdge["interpolation", "hmatrix-banded"], DirectedEdge["interpolation", "interpolation"], DirectedEdge["interpolation", "random"], DirectedEdge["interpolation", "utility-ht"], DirectedEdge["interruptible", "base"], DirectedEdge["interruptible", "either"], DirectedEdge["interruptible", "lifted-base"], DirectedEdge["interruptible", "monad-control"], DirectedEdge["interruptible", "transformers"], DirectedEdge["interspersed", "base"], DirectedEdge["interspersed", "base-prelude"], DirectedEdge["interspersed", "transformers"], DirectedEdge["intervals", "array"], DirectedEdge["intervals", "base"], DirectedEdge["intervals", "distributive"], DirectedEdge["intervals", "ghc-prim"], DirectedEdge["intricacy", "array"], DirectedEdge["intricacy", "base"], DirectedEdge["intricacy", "binary"], DirectedEdge["intricacy", "bytestring"], DirectedEdge["intricacy", "containers"], DirectedEdge["intricacy", "cryptohash"], DirectedEdge["intricacy", "directory"], DirectedEdge["intricacy", "filepath"], DirectedEdge["intricacy", "hscurses"], DirectedEdge["intricacy", "mtl"], DirectedEdge["intricacy", "network-fancy"], DirectedEdge["intricacy", "random"], DirectedEdge["intricacy", "safe"], DirectedEdge["intricacy", "SDL"], DirectedEdge["intricacy", "SDL-gfx"], DirectedEdge["intricacy", "SDL-mixer"], DirectedEdge["intricacy", "SDL-ttf"], DirectedEdge["intricacy", "stm"], DirectedEdge["intricacy", "time"], DirectedEdge["intricacy", "transformers"], DirectedEdge["intricacy", "Unsatisfiable"], DirectedEdge["intricacy", "vector"], DirectedEdge["intset", "base"], DirectedEdge["intset", "bits-extras"], DirectedEdge["intset", "bytestring"], DirectedEdge["intset", "deepseq"], DirectedEdge["invariant", "array"], DirectedEdge["invariant", "base"], DirectedEdge["invariant", "bifunctors"], DirectedEdge["invariant", "containers"], DirectedEdge["invariant", "contravariant"], DirectedEdge["invariant", "ghc-prim"], DirectedEdge["invariant", "profunctors"], DirectedEdge["invariant", "semigroups"], DirectedEdge["invariant", "StateVar"], DirectedEdge["invariant", "stm"], DirectedEdge["invariant", "tagged"], DirectedEdge["invariant", "template-haskell"], DirectedEdge["invariant", "transformers"], DirectedEdge["invariant", "transformers-compat"], DirectedEdge["invariant", "unordered-containers"], DirectedEdge["invertible", "arrows"], DirectedEdge["invertible", "base"], DirectedEdge["invertible", "haskell-src-meta"], DirectedEdge["invertible", "HList"], DirectedEdge["invertible", "invariant"], DirectedEdge["invertible", "lens"], DirectedEdge["invertible", "partial-isomorphisms"], DirectedEdge["invertible", "Piso"], DirectedEdge["invertible", "semigroupoids"], DirectedEdge["invertible", "template-haskell"], DirectedEdge["invertible", "transformers"], DirectedEdge["invertible", "TypeCompose"], DirectedEdge["invertible-syntax", "base"], DirectedEdge["invertible-syntax", "partial-isomorphisms"], DirectedEdge["io-capture", "base"], DirectedEdge["io-capture", "bytestring"], DirectedEdge["io-capture", "streaming-bytestring"], DirectedEdge["io-capture", "unix"], DirectedEdge["io-choice", "base"], DirectedEdge["io-choice", "lifted-base"], DirectedEdge["io-choice", "monad-control"], DirectedEdge["io-choice", "template-haskell"], DirectedEdge["io-choice", "transformers"], DirectedEdge["io-choice", "transformers-base"], DirectedEdge["io-machine", "base"], DirectedEdge["io-machine", "time"], DirectedEdge["io-manager", "base"], DirectedEdge["io-manager", "containers"], DirectedEdge["io-manager", "io-manager"], DirectedEdge["io-memoize", "async"], DirectedEdge["io-memoize", "base"], DirectedEdge["io-reactive", "base"], DirectedEdge["io-region", "base"], DirectedEdge["io-region", "stm"], DirectedEdge["io-storage", "base"], DirectedEdge["io-storage", "containers"], DirectedEdge["io-streams", "attoparsec"], DirectedEdge["io-streams", "base"], DirectedEdge["io-streams", "bytestring"], DirectedEdge["io-streams", "bytestring-builder"], DirectedEdge["io-streams", "network"], DirectedEdge["io-streams", "primitive"], DirectedEdge["io-streams", "process"], DirectedEdge["io-streams", "text"], DirectedEdge["io-streams", "time"], DirectedEdge["io-streams", "transformers"], DirectedEdge["io-streams", "vector"], DirectedEdge["io-streams", "zlib-bindings"], DirectedEdge["io-streams-http", "base"], DirectedEdge["io-streams-http", "bytestring"], DirectedEdge["io-streams-http", "http-client"], DirectedEdge["io-streams-http", "http-client-tls"], DirectedEdge["io-streams-http", "io-streams"], DirectedEdge["io-streams-http", "mtl"], DirectedEdge["io-streams-http", "transformers"], DirectedEdge["io-throttle", "base"], DirectedEdge["io-throttle", "SafeSemaphore"], DirectedEdge["io-throttle", "threads"], DirectedEdge["ioctl", "base"], DirectedEdge["ioctl", "network"], DirectedEdge["ioctl", "unix"], DirectedEdge["ioref-stable", "base"], DirectedEdge["iothread", "base"], DirectedEdge["iotransaction", "base"], DirectedEdge["ip", "aeson"], DirectedEdge["ip", "attoparsec"], DirectedEdge["ip", "base"], DirectedEdge["ip", "bytestring"], DirectedEdge["ip", "hashable"], DirectedEdge["ip", "text"], DirectedEdge["ip-quoter", "base"], DirectedEdge["ip-quoter", "cpu"], DirectedEdge["ip-quoter", "network"], DirectedEdge["ip-quoter", "template-haskell"], DirectedEdge["ip6addr", "base"], DirectedEdge["ip6addr", "cmdargs"], DirectedEdge["ip6addr", "IPv6Addr"], DirectedEdge["ip6addr", "text"], DirectedEdge["ipatch", "base"], DirectedEdge["ipatch", "bytestring"], DirectedEdge["ipatch", "darcs"], DirectedEdge["ipatch", "darcs-beta"], DirectedEdge["ipatch", "directory"], DirectedEdge["ipatch", "filepath"], DirectedEdge["ipatch", "hashed-storage"], DirectedEdge["ipatch", "process"], DirectedEdge["ipatch", "unix"], DirectedEdge["ipc", "base"], DirectedEdge["ipc", "binary"], DirectedEdge["ipc", "bytestring"], DirectedEdge["ipc", "dlist"], DirectedEdge["ipc", "mtl"], DirectedEdge["ipc", "network"], DirectedEdge["ipc", "network-bytestring"], DirectedEdge["ipc", "stm"], DirectedEdge["ipcvar", "base"], DirectedEdge["ipcvar", "binary"], DirectedEdge["ipcvar", "bytestring"], DirectedEdge["ipcvar", "directory"], DirectedEdge["ipcvar", "unix"], DirectedEdge["ipopt-hs", "ad"], DirectedEdge["ipopt-hs", "ansi-wl-pprint"], DirectedEdge["ipopt-hs", "base"], DirectedEdge["ipopt-hs", "containers"], DirectedEdge["ipopt-hs", "criterion"], DirectedEdge["ipopt-hs", "ipopt-hs"], DirectedEdge["ipopt-hs", "lens"], DirectedEdge["ipopt-hs", "linear"], DirectedEdge["ipopt-hs", "mtl"], DirectedEdge["ipopt-hs", "random-shuffle"], DirectedEdge["ipopt-hs", "Rlang-QQ"], DirectedEdge["ipopt-hs", "splines"], DirectedEdge["ipopt-hs", "template-haskell"], DirectedEdge["ipopt-hs", "uu-parsinglib"], DirectedEdge["ipopt-hs", "vector"], DirectedEdge["ipopt-hs", "vector-space"], DirectedEdge["ipprint", "base"], DirectedEdge["ipprint", "haskell-src"], DirectedEdge["ipprint", "sr-extra"], DirectedEdge["iproute", "appar"], DirectedEdge["iproute", "base"], DirectedEdge["iproute", "byteorder"], DirectedEdge["iproute", "containers"], DirectedEdge["iproute", "network"], DirectedEdge["iptables-helpers", "base"], DirectedEdge["iptables-helpers", "containers"], DirectedEdge["iptables-helpers", "mtl"], DirectedEdge["iptables-helpers", "parsec"], DirectedEdge["iptables-helpers", "QuickCheck"], DirectedEdge["iptables-helpers", "safe"], DirectedEdge["iptables-helpers", "syb"], DirectedEdge["iptables-helpers", "utf8-string"], DirectedEdge["iptadmin", "augeas"], DirectedEdge["iptadmin", "base"], DirectedEdge["iptadmin", "blaze-html"], DirectedEdge["iptadmin", "blaze-markup"], DirectedEdge["iptadmin", "bytestring"], DirectedEdge["iptadmin", "ConfigFile"], DirectedEdge["iptadmin", "containers"], DirectedEdge["iptadmin", "file-embed"], DirectedEdge["iptadmin", "filepath"], DirectedEdge["iptadmin", "happstack-server"], DirectedEdge["iptadmin", "happstack-server-tls"], DirectedEdge["iptadmin", "hdaemonize"], DirectedEdge["iptadmin", "hsyslog"], DirectedEdge["iptadmin", "iptables-helpers"], DirectedEdge["iptadmin", "mtl"], DirectedEdge["iptadmin", "network"], DirectedEdge["iptadmin", "old-time"], DirectedEdge["iptadmin", "pam"], DirectedEdge["iptadmin", "parsec"], DirectedEdge["iptadmin", "process"], DirectedEdge["iptadmin", "random"], DirectedEdge["iptadmin", "safe"], DirectedEdge["iptadmin", "template-haskell"], DirectedEdge["iptadmin", "time"], DirectedEdge["iptadmin", "unix"], DirectedEdge["iptadmin", "utf8-string"], DirectedEdge["ipython-kernel", "aeson"], DirectedEdge["ipython-kernel", "base"], DirectedEdge["ipython-kernel", "bytestring"], DirectedEdge["ipython-kernel", "cereal"], DirectedEdge["ipython-kernel", "containers"], DirectedEdge["ipython-kernel", "directory"], DirectedEdge["ipython-kernel", "filepath"], DirectedEdge["ipython-kernel", "ipython-kernel"], DirectedEdge["ipython-kernel", "mtl"], DirectedEdge["ipython-kernel", "parsec"], DirectedEdge["ipython-kernel", "process"], DirectedEdge["ipython-kernel", "SHA"], DirectedEdge["ipython-kernel", "temporary"], DirectedEdge["ipython-kernel", "text"], DirectedEdge["ipython-kernel", "transformers"], DirectedEdge["ipython-kernel", "unordered-containers"], DirectedEdge["ipython-kernel", "uuid"], DirectedEdge["ipython-kernel", "zeromq4-haskell"], DirectedEdge["irc", "attoparsec"], DirectedEdge["irc", "base"], DirectedEdge["irc", "bytestring"], DirectedEdge["irc-bytestring", "attoparsec"], DirectedEdge["irc-bytestring", "base"], DirectedEdge["irc-bytestring", "bytestring"], DirectedEdge["irc-client", "base"], DirectedEdge["irc-client", "bytestring"], DirectedEdge["irc-client", "conduit"], DirectedEdge["irc-client", "data-default-class"], DirectedEdge["irc-client", "irc-conduit"], DirectedEdge["irc-client", "irc-ctcp"], DirectedEdge["irc-client", "old-locale"], DirectedEdge["irc-client", "stm"], DirectedEdge["irc-client", "stm-conduit"], DirectedEdge["irc-client", "text"], DirectedEdge["irc-client", "time"], DirectedEdge["irc-client", "transformers"], DirectedEdge["irc-colors", "base"], DirectedEdge["irc-colors", "text"], DirectedEdge["irc-conduit", "async"], DirectedEdge["irc-conduit", "base"], DirectedEdge["irc-conduit", "bytestring"], DirectedEdge["irc-conduit", "conduit"], DirectedEdge["irc-conduit", "conduit-extra"], DirectedEdge["irc-conduit", "connection"], DirectedEdge["irc-conduit", "irc"], DirectedEdge["irc-conduit", "irc-ctcp"], DirectedEdge["irc-conduit", "network-conduit-tls"], DirectedEdge["irc-conduit", "text"], DirectedEdge["irc-conduit", "time"], DirectedEdge["irc-conduit", "tls"], DirectedEdge["irc-conduit", "transformers"], DirectedEdge["irc-conduit", "x509-validation"], DirectedEdge["irc-core", "array"], DirectedEdge["irc-core", "attoparsec"], DirectedEdge["irc-core", "base"], DirectedEdge["irc-core", "base64-bytestring"], DirectedEdge["irc-core", "bytestring"], DirectedEdge["irc-core", "config-value"], DirectedEdge["irc-core", "connection"], DirectedEdge["irc-core", "containers"], DirectedEdge["irc-core", "data-default-class"], DirectedEdge["irc-core", "deepseq"], DirectedEdge["irc-core", "directory"], DirectedEdge["irc-core", "filepath"], DirectedEdge["irc-core", "free"], DirectedEdge["irc-core", "haskell-lexer"], DirectedEdge["irc-core", "irc-core"], DirectedEdge["irc-core", "lens"], DirectedEdge["irc-core", "network"], DirectedEdge["irc-core", "old-locale"], DirectedEdge["irc-core", "regex-tdfa"], DirectedEdge["irc-core", "split"], DirectedEdge["irc-core", "stm"], DirectedEdge["irc-core", "text"], DirectedEdge["irc-core", "time"], DirectedEdge["irc-core", "tls"], DirectedEdge["irc-core", "transformers"], DirectedEdge["irc-core", "vty"], DirectedEdge["irc-core", "x509-store"], DirectedEdge["irc-core", "x509-system"], DirectedEdge["irc-core", "x509-validation"], DirectedEdge["irc-ctcp", "base"], DirectedEdge["irc-ctcp", "bytestring"], DirectedEdge["irc-ctcp", "text"], DirectedEdge["irc-dcc", "attoparsec"], DirectedEdge["irc-dcc", "base"], DirectedEdge["irc-dcc", "binary"], DirectedEdge["irc-dcc", "bytestring"], DirectedEdge["irc-dcc", "errors"], DirectedEdge["irc-dcc", "io-streams"], DirectedEdge["irc-dcc", "iproute"], DirectedEdge["irc-dcc", "irc-ctcp"], DirectedEdge["irc-dcc", "network"], DirectedEdge["irc-dcc", "path"], DirectedEdge["irc-dcc", "transformers"], DirectedEdge["irc-dcc", "utf8-string"], DirectedEdge["irc-fun-bot", "aeson"], DirectedEdge["irc-fun-bot", "auto-update"], DirectedEdge["irc-fun-bot", "base"], DirectedEdge["irc-fun-bot", "case-insensitive"], DirectedEdge["irc-fun-bot", "clock"], DirectedEdge["irc-fun-bot", "containers"], DirectedEdge["irc-fun-bot", "data-default-class"], DirectedEdge["irc-fun-bot", "fast-logger"], DirectedEdge["irc-fun-bot", "formatting"], DirectedEdge["irc-fun-bot", "irc-fun-client"], DirectedEdge["irc-fun-bot", "irc-fun-types"], DirectedEdge["irc-fun-bot", "json-state"], DirectedEdge["irc-fun-bot", "text"], DirectedEdge["irc-fun-bot", "time"], DirectedEdge["irc-fun-bot", "time-interval"], DirectedEdge["irc-fun-bot", "time-units"], DirectedEdge["irc-fun-bot", "transformers"], DirectedEdge["irc-fun-bot", "unordered-containers"], DirectedEdge["irc-fun-client", "auto-update"], DirectedEdge["irc-fun-client", "base"], DirectedEdge["irc-fun-client", "bytestring"], DirectedEdge["irc-fun-client", "connection"], DirectedEdge["irc-fun-client", "data-default-class"], DirectedEdge["irc-fun-client", "fast-logger"], DirectedEdge["irc-fun-client", "hashable"], DirectedEdge["irc-fun-client", "irc-fun-messages"], DirectedEdge["irc-fun-client", "irc-fun-types"], DirectedEdge["irc-fun-client", "text"], DirectedEdge["irc-fun-client", "time"], DirectedEdge["irc-fun-client", "time-units"], DirectedEdge["irc-fun-client", "unordered-containers"], DirectedEdge["irc-fun-color", "base"], DirectedEdge["irc-fun-color", "dlist"], DirectedEdge["irc-fun-color", "formatting"], DirectedEdge["irc-fun-color", "irc-fun-types"], DirectedEdge["irc-fun-color", "text"], DirectedEdge["irc-fun-color", "text-show"], DirectedEdge["irc-fun-messages", "base"], DirectedEdge["irc-fun-messages", "irc-fun-types"], DirectedEdge["irc-fun-messages", "regex-applicative"], DirectedEdge["irc-fun-messages", "text"], DirectedEdge["irc-fun-types", "base"], DirectedEdge["irc-fun-types", "text"], DirectedEdge["ircbot", "base"], DirectedEdge["ircbot", "bytestring"], DirectedEdge["ircbot", "containers"], DirectedEdge["ircbot", "directory"], DirectedEdge["ircbot", "filepath"], DirectedEdge["ircbot", "irc"], DirectedEdge["ircbot", "mtl"], DirectedEdge["ircbot", "network"], DirectedEdge["ircbot", "parsec"], DirectedEdge["ircbot", "random"], DirectedEdge["ircbot", "SafeSemaphore"], DirectedEdge["ircbot", "stm"], DirectedEdge["ircbot", "time"], DirectedEdge["ircbot", "unix"], DirectedEdge["ireal", "base"], DirectedEdge["ireal", "QuickCheck"], DirectedEdge["iridium", "ansi-terminal"], DirectedEdge["iridium", "base"], DirectedEdge["iridium", "bytestring"], DirectedEdge["iridium", "Cabal"], DirectedEdge["iridium", "containers"], DirectedEdge["iridium", "extra"], DirectedEdge["iridium", "foldl"], DirectedEdge["iridium", "http-conduit"], DirectedEdge["iridium", "iridium"], DirectedEdge["iridium", "lifted-base"], DirectedEdge["iridium", "monad-control"], DirectedEdge["iridium", "multistate"], DirectedEdge["iridium", "process"], DirectedEdge["iridium", "split"], DirectedEdge["iridium", "system-filepath"], DirectedEdge["iridium", "tagged"], DirectedEdge["iridium", "text"], DirectedEdge["iridium", "transformers"], DirectedEdge["iridium", "transformers-base"], DirectedEdge["iridium", "turtle"], DirectedEdge["iridium", "unordered-containers"], DirectedEdge["iridium", "vector"], DirectedEdge["iridium", "xmlhtml"], DirectedEdge["iridium", "yaml"], DirectedEdge["iron-mq", "aeson"], DirectedEdge["iron-mq", "base"], DirectedEdge["iron-mq", "http-client"], DirectedEdge["iron-mq", "lens"], DirectedEdge["iron-mq", "text"], DirectedEdge["iron-mq", "wreq"], DirectedEdge["ironforge", "antisplice"], DirectedEdge["ironforge", "base"], DirectedEdge["ironforge", "chatty"], DirectedEdge["ironforge", "chatty-utils"], DirectedEdge["ironforge", "mtl"], DirectedEdge["ironforge", "transformers"], DirectedEdge["is", "base"], DirectedEdge["is", "template-haskell"], DirectedEdge["isdicom", "base"], DirectedEdge["isdicom", "directory"], DirectedEdge["isdicom", "filepath"], DirectedEdge["isevaluated", "base"], DirectedEdge["isevaluated", "vacuum"], DirectedEdge["isiz", "base"], DirectedEdge["islink", "base"], DirectedEdge["islink", "unordered-containers"], DirectedEdge["ismtp", "base"], DirectedEdge["ismtp", "bytestring"], DirectedEdge["ismtp", "containers"], DirectedEdge["ismtp", "contstuff"], DirectedEdge["ismtp", "dnscache"], DirectedEdge["ismtp", "enumerator"], DirectedEdge["ismtp", "lifted-base"], DirectedEdge["ismtp", "monad-control"], DirectedEdge["ismtp", "netlines"], DirectedEdge["ismtp", "network"], DirectedEdge["ismtp", "vector"], DirectedEdge["iso3166-country-codes", "base"], DirectedEdge["iso639", "base"], DirectedEdge["iso8583-bitmaps", "base"], DirectedEdge["iso8583-bitmaps", "binary"], DirectedEdge["iso8583-bitmaps", "bytestring"], DirectedEdge["iso8583-bitmaps", "containers"], DirectedEdge["iso8583-bitmaps", "parsec"], DirectedEdge["iso8583-bitmaps", "syb"], DirectedEdge["iso8583-bitmaps", "template-haskell"], DirectedEdge["iso8583-bitmaps", "th-lift"], DirectedEdge["iso8601-time", "base"], DirectedEdge["iso8601-time", "old-locale"], DirectedEdge["iso8601-time", "time"], DirectedEdge["isohunt", "aeson"], DirectedEdge["isohunt", "base"], DirectedEdge["isohunt", "bytestring"], DirectedEdge["isohunt", "data-default"], DirectedEdge["isohunt", "ghc-prim"], DirectedEdge["isohunt", "http-conduit"], DirectedEdge["isohunt", "text"], DirectedEdge["isohunt", "unordered-containers"], DirectedEdge["isohunt", "uri"], DirectedEdge["isohunt", "vector"], DirectedEdge["ispositive", "base"], DirectedEdge["itanium-abi", "base"], DirectedEdge["itanium-abi", "boomerang"], DirectedEdge["itanium-abi", "text"], DirectedEdge["itanium-abi", "transformers"], DirectedEdge["itanium-abi", "unordered-containers"], DirectedEdge["iter-stats", "base"], DirectedEdge["iter-stats", "heap"], DirectedEdge["iter-stats", "iteratee"], DirectedEdge["iter-stats", "ListLike"], DirectedEdge["iter-stats", "mtl"], DirectedEdge["iterIO", "array"], DirectedEdge["iterIO", "attoparsec"], DirectedEdge["iterIO", "base"], DirectedEdge["iterIO", "bytestring"], DirectedEdge["iterIO", "containers"], DirectedEdge["iterIO", "filepath"], DirectedEdge["iterIO", "HsOpenSSL"], DirectedEdge["iterIO", "ListLike"], DirectedEdge["iterIO", "mtl"], DirectedEdge["iterIO", "network"], DirectedEdge["iterIO", "old-locale"], DirectedEdge["iterIO", "process"], DirectedEdge["iterIO", "stringsearch"], DirectedEdge["iterIO", "time"], DirectedEdge["iterIO", "unix"], DirectedEdge["iterable", "base"], DirectedEdge["iterable", "mtl"], DirectedEdge["iterable", "tagged"], DirectedEdge["iterable", "template-haskell"], DirectedEdge["iterable", "vector"], DirectedEdge["iteratee", "base"], DirectedEdge["iteratee", "bytestring"], DirectedEdge["iteratee", "containers"], DirectedEdge["iteratee", "exceptions"], DirectedEdge["iteratee", "ListLike"], DirectedEdge["iteratee", "monad-control"], DirectedEdge["iteratee", "parallel"], DirectedEdge["iteratee", "transformers"], DirectedEdge["iteratee", "transformers-base"], DirectedEdge["iteratee", "unix"], DirectedEdge["iteratee-compress", "base"], DirectedEdge["iteratee-compress", "bytestring"], DirectedEdge["iteratee-compress", "iteratee"], DirectedEdge["iteratee-compress", "mtl"], DirectedEdge["iteratee-mtl", "iteratee"], DirectedEdge["iteratee-mtl", "base"], DirectedEdge["iteratee-mtl", "bytestring"], DirectedEdge["iteratee-mtl", "containers"], DirectedEdge["iteratee-mtl", "ListLike"], DirectedEdge["iteratee-mtl", "MonadCatchIO-mtl"], DirectedEdge["iteratee-mtl", "mtl"], DirectedEdge["iteratee-mtl", "QuickCheck"], DirectedEdge["iteratee-mtl", "test-framework"], DirectedEdge["iteratee-mtl", "unix"], DirectedEdge["iteratee-parsec", "base"], DirectedEdge["iteratee-parsec", "iteratee"], DirectedEdge["iteratee-parsec", "ListLike"], DirectedEdge["iteratee-parsec", "parsec"], DirectedEdge["iteratee-parsec", "reference"], DirectedEdge["iteratee-parsec", "transformers"], DirectedEdge["iteratee-stm", "base"], DirectedEdge["iteratee-stm", "iteratee"], DirectedEdge["iteratee-stm", "stm"], DirectedEdge["iteratee-stm", "stm-chans"], DirectedEdge["iteratee-stm", "transformers"], DirectedEdge["iterio-server", "base"], DirectedEdge["iterio-server", "bytestring"], DirectedEdge["iterio-server", "filepath"], DirectedEdge["iterio-server", "iterIO"], DirectedEdge["iterio-server", "ListLike"], DirectedEdge["iterio-server", "monadIO"], DirectedEdge["iterio-server", "mtl"], DirectedEdge["iterio-server", "network"], DirectedEdge["iterio-server", "split"], DirectedEdge["iterio-server", "transformers"], DirectedEdge["iterio-server", "unix"], DirectedEdge["ivar-simple", "base"], DirectedEdge["ivor", "idris"], DirectedEdge["ivor", "base"], DirectedEdge["ivor", "binary"], DirectedEdge["ivor", "containers"], DirectedEdge["ivor", "directory"], DirectedEdge["ivor", "mtl"], DirectedEdge["ivor", "parsec"], DirectedEdge["ivory", "array"], DirectedEdge["ivory", "base"], DirectedEdge["ivory", "base-compat"], DirectedEdge["ivory", "containers"], DirectedEdge["ivory", "dlist"], DirectedEdge["ivory", "filepath"], DirectedEdge["ivory", "monadLib"], DirectedEdge["ivory", "pretty"], DirectedEdge["ivory", "template-haskell"], DirectedEdge["ivory", "text"], DirectedEdge["ivory", "th-lift"], DirectedEdge["ivory-artifact", "base"], DirectedEdge["ivory-artifact", "directory"], DirectedEdge["ivory-artifact", "filepath"], DirectedEdge["ivory-artifact", "HStringTemplate"], DirectedEdge["ivory-artifact", "text"], DirectedEdge["ivory-artifact", "utf8-string"], DirectedEdge["ivory-backend-c", "base"], DirectedEdge["ivory-backend-c", "base-compat"], DirectedEdge["ivory-backend-c", "bytestring"], DirectedEdge["ivory-backend-c", "containers"], DirectedEdge["ivory-backend-c", "directory"], DirectedEdge["ivory-backend-c", "filepath"], DirectedEdge["ivory-backend-c", "ivory"], DirectedEdge["ivory-backend-c", "ivory-artifact"], DirectedEdge["ivory-backend-c", "ivory-opts"], DirectedEdge["ivory-backend-c", "language-c-quote"], DirectedEdge["ivory-backend-c", "mainland-pretty"], DirectedEdge["ivory-backend-c", "monadLib"], DirectedEdge["ivory-backend-c", "process"], DirectedEdge["ivory-backend-c", "srcloc"], DirectedEdge["ivory-backend-c", "template-haskell"], DirectedEdge["ivory-bitdata", "ivory"], DirectedEdge["ivory-bitdata", "base"], DirectedEdge["ivory-bitdata", "ivory"], DirectedEdge["ivory-bitdata", "ivory-backend-c"], DirectedEdge["ivory-bitdata", "ivory-bitdata"], DirectedEdge["ivory-bitdata", "monadLib"], DirectedEdge["ivory-bitdata", "parsec"], DirectedEdge["ivory-bitdata", "template-haskell"], DirectedEdge["ivory-eval", "base"], DirectedEdge["ivory-eval", "base-compat"], DirectedEdge["ivory-eval", "containers"], DirectedEdge["ivory-eval", "ivory"], DirectedEdge["ivory-eval", "monadLib"], DirectedEdge["ivory-examples", "base"], DirectedEdge["ivory-examples", "base-compat"], DirectedEdge["ivory-examples", "ivory"], DirectedEdge["ivory-examples", "ivory-backend-c"], DirectedEdge["ivory-examples", "ivory-opts"], DirectedEdge["ivory-examples", "ivory-stdlib"], DirectedEdge["ivory-examples", "monadLib"], DirectedEdge["ivory-examples", "pretty"], DirectedEdge["ivory-examples", "QuickCheck"], DirectedEdge["ivory-examples", "template-haskell"], DirectedEdge["ivory-hw", "base"], DirectedEdge["ivory-hw", "filepath"], DirectedEdge["ivory-hw", "ivory"], DirectedEdge["ivory-hw", "ivory-artifact"], DirectedEdge["ivory-hw", "ivory-backend-c"], DirectedEdge["ivory-opts", "base"], DirectedEdge["ivory-opts", "base-compat"], DirectedEdge["ivory-opts", "containers"], DirectedEdge["ivory-opts", "data-reify"], DirectedEdge["ivory-opts", "dlist"], DirectedEdge["ivory-opts", "fgl"], DirectedEdge["ivory-opts", "filepath"], DirectedEdge["ivory-opts", "ivory"], DirectedEdge["ivory-opts", "monadLib"], DirectedEdge["ivory-opts", "pretty"], DirectedEdge["ivory-quickcheck", "base"], DirectedEdge["ivory-quickcheck", "base-compat"], DirectedEdge["ivory-quickcheck", "ivory"], DirectedEdge["ivory-quickcheck", "ivory-backend-c"], DirectedEdge["ivory-quickcheck", "ivory-eval"], DirectedEdge["ivory-quickcheck", "monadLib"], DirectedEdge["ivory-quickcheck", "QuickCheck"], DirectedEdge["ivory-quickcheck", "random"], DirectedEdge["ivory-serialize", "base"], DirectedEdge["ivory-serialize", "base-compat"], DirectedEdge["ivory-serialize", "filepath"], DirectedEdge["ivory-serialize", "ivory"], DirectedEdge["ivory-serialize", "ivory-artifact"], DirectedEdge["ivory-serialize", "monadLib"], DirectedEdge["ivory-stdlib", "base"], DirectedEdge["ivory-stdlib", "filepath"], DirectedEdge["ivory-stdlib", "ivory"], DirectedEdge["ivory-stdlib", "ivory-artifact"], DirectedEdge["ivy-web", "base"], DirectedEdge["ivy-web", "invertible-syntax"], DirectedEdge["ivy-web", "partial-isomorphisms"], DirectedEdge["ivy-web", "snap"], DirectedEdge["ivy-web", "snap-core"], DirectedEdge["ix-shapable", "array"], DirectedEdge["ix-shapable", "base"], DirectedEdge["ixdopp", "base"], DirectedEdge["ixdopp", "preprocessor-tools"], DirectedEdge["ixdopp", "syb"], DirectedEdge["ixmonad", "effect-monad"], DirectedEdge["ixmonad", "type-level-sets"], DirectedEdge["ixmonad", "base"], DirectedEdge["ixmonad", "ghc-prim"], DirectedEdge["ixset", "base"], DirectedEdge["ixset", "containers"], DirectedEdge["ixset", "safecopy"], DirectedEdge["ixset", "syb"], DirectedEdge["ixset", "syb-with-class"], DirectedEdge["ixset", "template-haskell"], DirectedEdge["ixset-typed", "base"], DirectedEdge["ixset-typed", "containers"], DirectedEdge["ixset-typed", "deepseq"], DirectedEdge["ixset-typed", "safecopy"], DirectedEdge["ixset-typed", "syb"], DirectedEdge["ixset-typed", "template-haskell"], DirectedEdge["iyql", "base"], DirectedEdge["iyql", "binary"], DirectedEdge["iyql", "bytestring"], DirectedEdge["iyql", "containers"], DirectedEdge["iyql", "directory"], DirectedEdge["iyql", "filepath"], DirectedEdge["iyql", "haskeline"], DirectedEdge["iyql", "hoauth"], DirectedEdge["iyql", "mtl"], DirectedEdge["iyql", "old-locale"], DirectedEdge["iyql", "parsec"], DirectedEdge["iyql", "time"], DirectedEdge["iyql", "utf8-string"], DirectedEdge["iyql", "xml"], DirectedEdge["j2hs", "base"], DirectedEdge["j2hs", "bimap"], DirectedEdge["j2hs", "containers"], DirectedEdge["j2hs", "directory"], DirectedEdge["j2hs", "filepath"], DirectedEdge["j2hs", "hx"], DirectedEdge["j2hs", "java-bridge"], DirectedEdge["j2hs", "java-bridge-extras"], DirectedEdge["j2hs", "java-reflect"], DirectedEdge["j2hs", "mtl"], DirectedEdge["j2hs", "named-records"], DirectedEdge["j2hs", "split"], DirectedEdge["j2hs", "strict"], DirectedEdge["j2hs", "strings"], DirectedEdge["j2hs", "syb"], DirectedEdge["j2hs", "transformers"], DirectedEdge["ja-base-extra", "base"], DirectedEdge["jack", "array"], DirectedEdge["jack", "base"], DirectedEdge["jack", "bytestring"], DirectedEdge["jack", "containers"], DirectedEdge["jack", "enumset"], DirectedEdge["jack", "event-list"], DirectedEdge["jack", "explicit-exception"], DirectedEdge["jack", "jack"], DirectedEdge["jack", "midi"], DirectedEdge["jack", "non-negative"], DirectedEdge["jack", "storablevector"], DirectedEdge["jack", "transformers"], DirectedEdge["jack", "unix"], DirectedEdge["jack-bindings", "base"], DirectedEdge["jack-bindings", "mtl"], DirectedEdge["jackminimix", "base"], DirectedEdge["jackminimix", "hosc"], DirectedEdge["jacobi-roots", "base"], DirectedEdge["jacobi-roots", "binary"], DirectedEdge["jacobi-roots", "bytestring"], DirectedEdge["jacobi-roots", "vector"], DirectedEdge["jail", "base"], DirectedEdge["jail", "containers"], DirectedEdge["jail", "directory"], DirectedEdge["jail", "monads-fd"], DirectedEdge["jail", "transformers"], DirectedEdge["jailbreak-cabal", "base"], DirectedEdge["jailbreak-cabal", "Cabal"], DirectedEdge["jalaali", "base"], DirectedEdge["jalla", "base"], DirectedEdge["jalla", "base-orphans"], DirectedEdge["jalla", "convertible"], DirectedEdge["jalla", "mtl"], DirectedEdge["jalla", "QuickCheck"], DirectedEdge["jalla", "random"], DirectedEdge["jammittools", "base"], DirectedEdge["jammittools", "boxes"], DirectedEdge["jammittools", "bytestring"], DirectedEdge["jammittools", "conduit"], DirectedEdge["jammittools", "conduit-audio"], DirectedEdge["jammittools", "containers"], DirectedEdge["jammittools", "directory"], DirectedEdge["jammittools", "filepath"], DirectedEdge["jammittools", "HPDF"], DirectedEdge["jammittools", "jammittools"], DirectedEdge["jammittools", "JuicyPixels"], DirectedEdge["jammittools", "process"], DirectedEdge["jammittools", "resourcet"], DirectedEdge["jammittools", "temporary"], DirectedEdge["jammittools", "text"], DirectedEdge["jammittools", "transformers"], DirectedEdge["jammittools", "vector"], DirectedEdge["jammittools", "xml"], DirectedEdge["jarfind", "array"], DirectedEdge["jarfind", "base"], DirectedEdge["jarfind", "binary"], DirectedEdge["jarfind", "bytestring"], DirectedEdge["jarfind", "regex-tdfa"], DirectedEdge["jarfind", "zip-archive"], DirectedEdge["java-bridge", "base"], DirectedEdge["java-bridge", "bimap"], DirectedEdge["java-bridge", "containers"], DirectedEdge["java-bridge", "cpphs"], DirectedEdge["java-bridge", "directory"], DirectedEdge["java-bridge", "filepath"], DirectedEdge["java-bridge", "hinduce-missingh"], DirectedEdge["java-bridge", "hint"], DirectedEdge["java-bridge", "java-bridge"], DirectedEdge["java-bridge", "mtl"], DirectedEdge["java-bridge", "multimap"], DirectedEdge["java-bridge", "named-records"], DirectedEdge["java-bridge", "names"], DirectedEdge["java-bridge", "split"], DirectedEdge["java-bridge", "strings"], DirectedEdge["java-bridge", "syb"], DirectedEdge["java-bridge", "transformers"], DirectedEdge["java-bridge", "unix"], DirectedEdge["java-bridge-extras", "base"], DirectedEdge["java-bridge-extras", "java-bridge"], DirectedEdge["java-bridge-extras", "transformers"], DirectedEdge["java-character", "base"], DirectedEdge["java-character", "diet"], DirectedEdge["java-poker", "base"], DirectedEdge["java-poker", "java-poker"], DirectedEdge["java-poker", "random-shuffle"], DirectedEdge["java-reflect", "base"], DirectedEdge["java-reflect", "containers"], DirectedEdge["java-reflect", "hx"], DirectedEdge["java-reflect", "java-bridge"], DirectedEdge["javaclass", "base"], DirectedEdge["javaclass", "bytestring"], DirectedEdge["javaclass", "greplicate"], DirectedEdge["javaclass", "lens"], DirectedEdge["javaclass", "semigroupoids"], DirectedEdge["javaclass", "semigroups"], DirectedEdge["javaclass", "tagged"], DirectedEdge["javaclass", "tickle"], DirectedEdge["javasf", "base"], DirectedEdge["javasf", "binary"], DirectedEdge["javasf", "bytestring"], DirectedEdge["javasf", "language-java-classfile"], DirectedEdge["javav", "base"], DirectedEdge["jcdecaux-vls", "aeson"], DirectedEdge["jcdecaux-vls", "base"], DirectedEdge["jcdecaux-vls", "bytestring"], DirectedEdge["jcdecaux-vls", "http-conduit"], DirectedEdge["jcdecaux-vls", "text"], DirectedEdge["jcdecaux-vls", "transformers"], DirectedEdge["jdi", "base"], DirectedEdge["jdi", "binary"], DirectedEdge["jdi", "bytestring"], DirectedEdge["jdi", "containers"], DirectedEdge["jdi", "jdi"], DirectedEdge["jdi", "mtl"], DirectedEdge["jdi", "network"], DirectedEdge["jdi", "transformers"], DirectedEdge["jespresso", "arrows"], DirectedEdge["jespresso", "base"], DirectedEdge["jespresso", "bytestring"], DirectedEdge["jespresso", "cmdargs"], DirectedEdge["jespresso", "data-default-class"], DirectedEdge["jespresso", "data-default-instances-base"], DirectedEdge["jespresso", "HTTP"], DirectedEdge["jespresso", "http-encodings"], DirectedEdge["jespresso", "hxt"], DirectedEdge["jespresso", "hxt-tagsoup"], DirectedEdge["jespresso", "jespresso"], DirectedEdge["jespresso", "language-ecmascript"], DirectedEdge["jespresso", "network"], DirectedEdge["jespresso", "network-uri"], DirectedEdge["jespresso", "random"], DirectedEdge["jmacro", "aeson"], DirectedEdge["jmacro", "base"], DirectedEdge["jmacro", "bytestring"], DirectedEdge["jmacro", "containers"], DirectedEdge["jmacro", "criterion"], DirectedEdge["jmacro", "haskell-src-exts"], DirectedEdge["jmacro", "haskell-src-meta"], DirectedEdge["jmacro", "mtl"], DirectedEdge["jmacro", "parseargs"], DirectedEdge["jmacro", "parsec"], DirectedEdge["jmacro", "regex-posix"], DirectedEdge["jmacro", "safe"], DirectedEdge["jmacro", "syb"], DirectedEdge["jmacro", "template-haskell"], DirectedEdge["jmacro", "text"], DirectedEdge["jmacro", "unordered-containers"], DirectedEdge["jmacro", "vector"], DirectedEdge["jmacro", "wl-pprint-text"], DirectedEdge["jmacro-rpc", "aeson"], DirectedEdge["jmacro-rpc", "attoparsec"], DirectedEdge["jmacro-rpc", "base"], DirectedEdge["jmacro-rpc", "blaze-html"], DirectedEdge["jmacro-rpc", "bytestring"], DirectedEdge["jmacro-rpc", "containers"], DirectedEdge["jmacro-rpc", "contravariant"], DirectedEdge["jmacro-rpc", "jmacro"], DirectedEdge["jmacro-rpc", "mtl"], DirectedEdge["jmacro-rpc", "scientific"], DirectedEdge["jmacro-rpc", "split"], DirectedEdge["jmacro-rpc", "text"], DirectedEdge["jmacro-rpc", "unordered-containers"], DirectedEdge["jmacro-rpc", "vector"], DirectedEdge["jmacro-rpc-happstack", "aeson"], DirectedEdge["jmacro-rpc-happstack", "base"], DirectedEdge["jmacro-rpc-happstack", "blaze-html"], DirectedEdge["jmacro-rpc-happstack", "bytestring"], DirectedEdge["jmacro-rpc-happstack", "containers"], DirectedEdge["jmacro-rpc-happstack", "happstack-server"], DirectedEdge["jmacro-rpc-happstack", "jmacro"], DirectedEdge["jmacro-rpc-happstack", "jmacro-rpc"], DirectedEdge["jmacro-rpc-happstack", "mtl"], DirectedEdge["jmacro-rpc-snap", "aeson"], DirectedEdge["jmacro-rpc-snap", "base"], DirectedEdge["jmacro-rpc-snap", "bytestring"], DirectedEdge["jmacro-rpc-snap", "containers"], DirectedEdge["jmacro-rpc-snap", "jmacro"], DirectedEdge["jmacro-rpc-snap", "jmacro-rpc"], DirectedEdge["jmacro-rpc-snap", "mtl"], DirectedEdge["jmacro-rpc-snap", "snap-core"], DirectedEdge["jobqueue", "aeson"], DirectedEdge["jobqueue", "attoparsec"], DirectedEdge["jobqueue", "base"], DirectedEdge["jobqueue", "bytestring"], DirectedEdge["jobqueue", "containers"], DirectedEdge["jobqueue", "data-default"], DirectedEdge["jobqueue", "fast-logger"], DirectedEdge["jobqueue", "HDBC"], DirectedEdge["jobqueue", "hslogger"], DirectedEdge["jobqueue", "hzk"], DirectedEdge["jobqueue", "lifted-base"], DirectedEdge["jobqueue", "monad-control"], DirectedEdge["jobqueue", "monad-logger"], DirectedEdge["jobqueue", "mtl"], DirectedEdge["jobqueue", "network"], DirectedEdge["jobqueue", "regex-posix"], DirectedEdge["jobqueue", "split"], DirectedEdge["jobqueue", "stm"], DirectedEdge["jobqueue", "template-haskell"], DirectedEdge["jobqueue", "text"], DirectedEdge["jobqueue", "text-format"], DirectedEdge["jobqueue", "time"], DirectedEdge["jobqueue", "transformers-base"], DirectedEdge["join", "base"], DirectedEdge["join", "multisetrewrite"], DirectedEdge["join", "stm"], DirectedEdge["joinlist", "base"], DirectedEdge["jonathanscard", "base"], DirectedEdge["jonathanscard", "bytestring"], DirectedEdge["jonathanscard", "containers"], DirectedEdge["jonathanscard", "HTTP"], DirectedEdge["jonathanscard", "json"], DirectedEdge["jonathanscard", "mtl"], DirectedEdge["jonathanscard", "network"], DirectedEdge["jonathanscard", "old-locale"], DirectedEdge["jonathanscard", "time"], DirectedEdge["jort", "array"], DirectedEdge["jort", "base"], DirectedEdge["jort", "gtk"], DirectedEdge["jose", "aeson"], DirectedEdge["jose", "attoparsec"], DirectedEdge["jose", "base"], DirectedEdge["jose", "base64-bytestring"], DirectedEdge["jose", "bifunctors"], DirectedEdge["jose", "byteable"], DirectedEdge["jose", "bytestring"], DirectedEdge["jose", "cryptonite"], DirectedEdge["jose", "data-default-class"], DirectedEdge["jose", "lens"], DirectedEdge["jose", "memory"], DirectedEdge["jose", "mtl"], DirectedEdge["jose", "network-uri"], DirectedEdge["jose", "QuickCheck"], DirectedEdge["jose", "quickcheck-instances"], DirectedEdge["jose", "safe"], DirectedEdge["jose", "semigroups"], DirectedEdge["jose", "template-haskell"], DirectedEdge["jose", "text"], DirectedEdge["jose", "time"], DirectedEdge["jose", "unordered-containers"], DirectedEdge["jose", "vector"], DirectedEdge["jose-jwt", "aeson"], DirectedEdge["jose-jwt", "base"], DirectedEdge["jose-jwt", "bytestring"], DirectedEdge["jose-jwt", "cereal"], DirectedEdge["jose-jwt", "containers"], DirectedEdge["jose-jwt", "cryptonite"], DirectedEdge["jose-jwt", "either"], DirectedEdge["jose-jwt", "memory"], DirectedEdge["jose-jwt", "mtl"], DirectedEdge["jose-jwt", "text"], DirectedEdge["jose-jwt", "time"], DirectedEdge["jose-jwt", "unordered-containers"], DirectedEdge["jose-jwt", "vector"], DirectedEdge["jpeg", "base"], DirectedEdge["jpeg", "mtl"], DirectedEdge["js-flot", "base"], DirectedEdge["js-good-parts", "base"], DirectedEdge["js-good-parts", "wl-pprint"], DirectedEdge["js-jquery", "base"], DirectedEdge["jsaddle", "base"], DirectedEdge["jsaddle", "ghcjs-base"], DirectedEdge["jsaddle", "ghcjs-prim"], DirectedEdge["jsaddle", "gi-glib"], DirectedEdge["jsaddle", "gi-gtk"], DirectedEdge["jsaddle", "gi-javascriptcore"], DirectedEdge["jsaddle", "gi-webkit"], DirectedEdge["jsaddle", "haskell-gi-base"], DirectedEdge["jsaddle", "lens"], DirectedEdge["jsaddle", "template-haskell"], DirectedEdge["jsaddle", "text"], DirectedEdge["jsaddle", "transformers"], DirectedEdge["jsaddle", "webkitgtk3-javascriptcore"], DirectedEdge["jsaddle-dom", "base"], DirectedEdge["jsaddle-dom", "base-compat"], DirectedEdge["jsaddle-dom", "ghc-prim"], DirectedEdge["jsaddle-dom", "ghcjs-base"], DirectedEdge["jsaddle-dom", "ghcjs-prim"], DirectedEdge["jsaddle-dom", "gi-glib"], DirectedEdge["jsaddle-dom", "gi-gtk"], DirectedEdge["jsaddle-dom", "gi-webkit"], DirectedEdge["jsaddle-dom", "haskell-gi-base"], DirectedEdge["jsaddle-dom", "jsaddle"], DirectedEdge["jsaddle-dom", "lens"], DirectedEdge["jsaddle-dom", "text"], DirectedEdge["jsaddle-dom", "transformers"], DirectedEdge["jsaddle-hello", "base"], DirectedEdge["jsaddle-hello", "ghcjs-dom"], DirectedEdge["jsaddle-hello", "jsaddle"], DirectedEdge["jsaddle-hello", "lens"], DirectedEdge["jsc", "jsaddle"], DirectedEdge["jsc", "base"], DirectedEdge["jsc", "jmacro"], DirectedEdge["jsc", "lens"], DirectedEdge["jsc", "template-haskell"], DirectedEdge["jsc", "text"], DirectedEdge["jsc", "transformers"], DirectedEdge["jsc", "webkit"], DirectedEdge["jsc", "webkit-javascriptcore"], DirectedEdge["jsc", "webkitgtk3-javascriptcore"], DirectedEdge["jsmw", "base"], DirectedEdge["jsmw", "DOM"], DirectedEdge["jsmw", "mtl"], DirectedEdge["jsmw", "WebBits"], DirectedEdge["json", "array"], DirectedEdge["json", "base"], DirectedEdge["json", "bytestring"], DirectedEdge["json", "containers"], DirectedEdge["json", "mtl"], DirectedEdge["json", "parsec"], DirectedEdge["json", "pretty"], DirectedEdge["json", "syb"], DirectedEdge["json", "text"], DirectedEdge["json-assertions", "aeson"], DirectedEdge["json-assertions", "base"], DirectedEdge["json-assertions", "indexed"], DirectedEdge["json-assertions", "indexed-free"], DirectedEdge["json-assertions", "lens"], DirectedEdge["json-assertions", "lens-aeson"], DirectedEdge["json-assertions", "text"], DirectedEdge["json-ast", "base"], DirectedEdge["json-ast", "scientific"], DirectedEdge["json-ast", "text"], DirectedEdge["json-ast", "unordered-containers"], DirectedEdge["json-ast", "vector"], DirectedEdge["json-ast-json-encoder", "base-prelude"], DirectedEdge["json-ast-json-encoder", "contravariant"], DirectedEdge["json-ast-json-encoder", "contravariant-extras"], DirectedEdge["json-ast-json-encoder", "json-ast"], DirectedEdge["json-ast-json-encoder", "json-encoder"], DirectedEdge["json-ast-json-encoder", "scientific"], DirectedEdge["json-ast-json-encoder", "text"], DirectedEdge["json-ast-json-encoder", "unordered-containers"], DirectedEdge["json-ast-json-encoder", "vector"], DirectedEdge["json-ast-quickcheck", "base"], DirectedEdge["json-ast-quickcheck", "json-ast"], DirectedEdge["json-ast-quickcheck", "QuickCheck"], DirectedEdge["json-ast-quickcheck", "quickcheck-instances"], DirectedEdge["json-autotype", "aeson"], DirectedEdge["json-autotype", "base"], DirectedEdge["json-autotype", "bytestring"], DirectedEdge["json-autotype", "containers"], DirectedEdge["json-autotype", "filepath"], DirectedEdge["json-autotype", "GenericPretty"], DirectedEdge["json-autotype", "hashable"], DirectedEdge["json-autotype", "hflags"], DirectedEdge["json-autotype", "lens"], DirectedEdge["json-autotype", "mmap"], DirectedEdge["json-autotype", "mtl"], DirectedEdge["json-autotype", "pretty"], DirectedEdge["json-autotype", "process"], DirectedEdge["json-autotype", "scientific"], DirectedEdge["json-autotype", "text"], DirectedEdge["json-autotype", "uniplate"], DirectedEdge["json-autotype", "unordered-containers"], DirectedEdge["json-autotype", "vector"], DirectedEdge["json-b", "base"], DirectedEdge["json-b", "bytestring"], DirectedEdge["json-b", "bytestring-nums"], DirectedEdge["json-b", "bytestring-trie"], DirectedEdge["json-b", "bytestringparser-temporary"], DirectedEdge["json-b", "containers"], DirectedEdge["json-b", "utf8-string"], DirectedEdge["json-builder", "base"], DirectedEdge["json-builder", "blaze-builder"], DirectedEdge["json-builder", "blaze-textual"], DirectedEdge["json-builder", "bytestring"], DirectedEdge["json-builder", "containers"], DirectedEdge["json-builder", "text"], DirectedEdge["json-builder", "unordered-containers"], DirectedEdge["json-builder", "utf8-string"], DirectedEdge["json-builder", "vector"], DirectedEdge["json-encoder", "base"], DirectedEdge["json-encoder", "base-prelude"], DirectedEdge["json-encoder", "bytestring"], DirectedEdge["json-encoder", "bytestring-tree-builder"], DirectedEdge["json-encoder", "contravariant"], DirectedEdge["json-encoder", "contravariant-extras"], DirectedEdge["json-encoder", "scientific"], DirectedEdge["json-encoder", "semigroups"], DirectedEdge["json-encoder", "text"], DirectedEdge["json-enumerator", "aeson"], DirectedEdge["json-enumerator", "base"], DirectedEdge["json-enumerator", "blaze-builder"], DirectedEdge["json-enumerator", "blaze-builder-enumerator"], DirectedEdge["json-enumerator", "bytestring"], DirectedEdge["json-enumerator", "containers"], DirectedEdge["json-enumerator", "enumerator"], DirectedEdge["json-enumerator", "json-types"], DirectedEdge["json-enumerator", "text"], DirectedEdge["json-enumerator", "transformers"], DirectedEdge["json-extra", "aeson"], DirectedEdge["json-extra", "base"], DirectedEdge["json-extra", "bytestring"], DirectedEdge["json-extra", "data-default"], DirectedEdge["json-extra", "template-haskell"], DirectedEdge["json-extra", "unordered-containers"], DirectedEdge["json-extra", "yaml"], DirectedEdge["json-fu", "aeson"], DirectedEdge["json-fu", "attoparsec"], DirectedEdge["json-fu", "base"], DirectedEdge["json-fu", "bytestring"], DirectedEdge["json-fu", "containers"], DirectedEdge["json-fu", "hashable"], DirectedEdge["json-fu", "mtl"], DirectedEdge["json-fu", "syb"], DirectedEdge["json-fu", "text"], DirectedEdge["json-fu", "time"], DirectedEdge["json-fu", "unordered-containers"], DirectedEdge["json-fu", "vector"], DirectedEdge["json-incremental-decoder", "attoparsec"], DirectedEdge["json-incremental-decoder", "base"], DirectedEdge["json-incremental-decoder", "base-prelude"], DirectedEdge["json-incremental-decoder", "bytestring"], DirectedEdge["json-incremental-decoder", "ghc-prim"], DirectedEdge["json-incremental-decoder", "hashable"], DirectedEdge["json-incremental-decoder", "interspersed"], DirectedEdge["json-incremental-decoder", "matcher"], DirectedEdge["json-incremental-decoder", "monad-par"], DirectedEdge["json-incremental-decoder", "scientific"], DirectedEdge["json-incremental-decoder", "success"], DirectedEdge["json-incremental-decoder", "supplemented"], DirectedEdge["json-incremental-decoder", "text"], DirectedEdge["json-incremental-decoder", "transformers"], DirectedEdge["json-incremental-decoder", "unordered-containers"], DirectedEdge["json-incremental-decoder", "unsequential"], DirectedEdge["json-incremental-decoder", "vector"], DirectedEdge["json-litobj", "base"], DirectedEdge["json-litobj", "json"], DirectedEdge["json-pointer", "attoparsec"], DirectedEdge["json-pointer", "base-prelude"], DirectedEdge["json-pointer", "text"], DirectedEdge["json-pointer-aeson", "aeson"], DirectedEdge["json-pointer-aeson", "base-prelude"], DirectedEdge["json-pointer-aeson", "json-pointer"], DirectedEdge["json-pointer-aeson", "unordered-containers"], DirectedEdge["json-pointer-aeson", "vector"], DirectedEdge["json-pointer-hasql", "base-prelude"], DirectedEdge["json-pointer-hasql", "hasql"], DirectedEdge["json-pointer-hasql", "json-pointer"], DirectedEdge["json-pointer-hasql", "text"], DirectedEdge["json-python", "aeson"], DirectedEdge["json-python", "base"], DirectedEdge["json-python", "bytestring"], DirectedEdge["json-python", "containers"], DirectedEdge["json-python", "template-haskell"], DirectedEdge["json-qq", "base"], DirectedEdge["json-qq", "haskell-src-meta"], DirectedEdge["json-qq", "parsec"], DirectedEdge["json-qq", "template-haskell"], DirectedEdge["json-rpc", "aeson"], DirectedEdge["json-rpc", "attoparsec"], DirectedEdge["json-rpc", "base"], DirectedEdge["json-rpc", "bytestring"], DirectedEdge["json-rpc", "conduit"], DirectedEdge["json-rpc", "conduit-extra"], DirectedEdge["json-rpc", "deepseq"], DirectedEdge["json-rpc", "hashable"], DirectedEdge["json-rpc", "lifted-async"], DirectedEdge["json-rpc", "monad-control"], DirectedEdge["json-rpc", "monad-logger"], DirectedEdge["json-rpc", "mtl"], DirectedEdge["json-rpc", "QuickCheck"], DirectedEdge["json-rpc", "stm"], DirectedEdge["json-rpc", "stm-conduit"], DirectedEdge["json-rpc", "text"], DirectedEdge["json-rpc", "transformers"], DirectedEdge["json-rpc", "unordered-containers"], DirectedEdge["json-rpc", "vector"], DirectedEdge["json-rpc-client", "aeson"], DirectedEdge["json-rpc-client", "base"], DirectedEdge["json-rpc-client", "bytestring"], DirectedEdge["json-rpc-client", "json-rpc-server"], DirectedEdge["json-rpc-client", "mtl"], DirectedEdge["json-rpc-client", "text"], DirectedEdge["json-rpc-client", "unordered-containers"], DirectedEdge["json-rpc-client", "vector"], DirectedEdge["json-rpc-client", "vector-algorithms"], DirectedEdge["json-rpc-server", "aeson"], DirectedEdge["json-rpc-server", "base"], DirectedEdge["json-rpc-server", "bytestring"], DirectedEdge["json-rpc-server", "deepseq"], DirectedEdge["json-rpc-server", "mtl"], DirectedEdge["json-rpc-server", "text"], DirectedEdge["json-rpc-server", "unordered-containers"], DirectedEdge["json-rpc-server", "vector"], DirectedEdge["json-schema", "aeson"], DirectedEdge["json-schema", "base"], DirectedEdge["json-schema", "containers"], DirectedEdge["json-schema", "generic-aeson"], DirectedEdge["json-schema", "generic-deriving"], DirectedEdge["json-schema", "ghc-prim"], DirectedEdge["json-schema", "mtl"], DirectedEdge["json-schema", "scientific"], DirectedEdge["json-schema", "tagged"], DirectedEdge["json-schema", "text"], DirectedEdge["json-schema", "time"], DirectedEdge["json-schema", "unordered-containers"], DirectedEdge["json-schema", "vector"], DirectedEdge["json-sop", "aeson"], DirectedEdge["json-sop", "base"], DirectedEdge["json-sop", "generics-sop"], DirectedEdge["json-sop", "lens-sop"], DirectedEdge["json-sop", "tagged"], DirectedEdge["json-sop", "text"], DirectedEdge["json-sop", "time"], DirectedEdge["json-sop", "transformers"], DirectedEdge["json-sop", "unordered-containers"], DirectedEdge["json-sop", "vector"], DirectedEdge["json-state", "aeson"], DirectedEdge["json-state", "aeson-pretty"], DirectedEdge["json-state", "base"], DirectedEdge["json-state", "bytestring"], DirectedEdge["json-state", "libgit"], DirectedEdge["json-state", "time-units"], DirectedEdge["json-stream", "aeson"], DirectedEdge["json-stream", "base"], DirectedEdge["json-stream", "bytestring"], DirectedEdge["json-stream", "scientific"], DirectedEdge["json-stream", "text"], DirectedEdge["json-stream", "unordered-containers"], DirectedEdge["json-stream", "vector"], DirectedEdge["json-togo", "aeson"], DirectedEdge["json-togo", "attoparsec"], DirectedEdge["json-togo", "attoparsec-trans"], DirectedEdge["json-togo", "base"], DirectedEdge["json-togo", "bytestring"], DirectedEdge["json-togo", "scientific"], DirectedEdge["json-togo", "text"], DirectedEdge["json-togo", "transformers"], DirectedEdge["json-togo", "unordered-containers"], DirectedEdge["json-togo", "vector"], DirectedEdge["json-tools", "aeson"], DirectedEdge["json-tools", "attoparsec"], DirectedEdge["json-tools", "base"], DirectedEdge["json-tools", "bytestring"], DirectedEdge["json-tools", "containers"], DirectedEdge["json-tools", "process"], DirectedEdge["json-tools", "tar"], DirectedEdge["json-tools", "text"], DirectedEdge["json-tools", "unordered-containers"], DirectedEdge["json-tools", "vector"], DirectedEdge["json-types", "base"], DirectedEdge["json-types", "containers"], DirectedEdge["json-types", "text"], DirectedEdge["json2", "base"], DirectedEdge["json2", "blaze-builder"], DirectedEdge["json2", "bytestring"], DirectedEdge["json2", "containers"], DirectedEdge["json2", "json2-types"], DirectedEdge["json2", "mtl"], DirectedEdge["json2", "old-locale"], DirectedEdge["json2", "parsec"], DirectedEdge["json2", "pretty"], DirectedEdge["json2", "time"], DirectedEdge["json2", "utf8-string"], DirectedEdge["json2-hdbc", "base"], DirectedEdge["json2-hdbc", "containers"], DirectedEdge["json2-hdbc", "HDBC"], DirectedEdge["json2-hdbc", "json2-types"], DirectedEdge["json2-hdbc", "time"], DirectedEdge["json2-hdbc", "utf8-string"], DirectedEdge["json2-types", "base"], DirectedEdge["json2-types", "containers"], DirectedEdge["json2yaml", "yaml"], DirectedEdge["json2yaml", "aeson"], DirectedEdge["json2yaml", "base"], DirectedEdge["json2yaml", "bytestring"], DirectedEdge["json2yaml", "yaml"], DirectedEdge["jsonresume", "aeson"], DirectedEdge["jsonresume", "base"], DirectedEdge["jsonresume", "bytestring"], DirectedEdge["jsonresume", "old-locale"], DirectedEdge["jsonresume", "text"], DirectedEdge["jsonresume", "time"], DirectedEdge["jsonresume", "unordered-containers"], DirectedEdge["jsonrpc-conduit", "aeson"], DirectedEdge["jsonrpc-conduit", "attoparsec"], DirectedEdge["jsonrpc-conduit", "base"], DirectedEdge["jsonrpc-conduit", "bytestring"], DirectedEdge["jsonrpc-conduit", "conduit"], DirectedEdge["jsonrpc-conduit", "conduit-extra"], DirectedEdge["jsonrpc-conduit", "mtl"], DirectedEdge["jsonrpc-conduit", "text"], DirectedEdge["jsonrpc-conduit", "transformers"], DirectedEdge["jsonrpc-conduit", "unordered-containers"], DirectedEdge["jsonschema-gen", "aeson"], DirectedEdge["jsonschema-gen", "base"], DirectedEdge["jsonschema-gen", "bytestring"], DirectedEdge["jsonschema-gen", "containers"], DirectedEdge["jsonschema-gen", "scientific"], DirectedEdge["jsonschema-gen", "tagged"], DirectedEdge["jsonschema-gen", "text"], DirectedEdge["jsonschema-gen", "time"], DirectedEdge["jsonschema-gen", "unordered-containers"], DirectedEdge["jsonschema-gen", "vector"], DirectedEdge["jsonsql", "aeson"], DirectedEdge["jsonsql", "attoparsec"], DirectedEdge["jsonsql", "base"], DirectedEdge["jsonsql", "bytestring"], DirectedEdge["jsonsql", "containers"], DirectedEdge["jsonsql", "HUnit"], DirectedEdge["jsonsql", "optparse-applicative"], DirectedEdge["jsonsql", "scientific"], DirectedEdge["jsonsql", "string-qq"], DirectedEdge["jsonsql", "text"], DirectedEdge["jsonsql", "unordered-containers"], DirectedEdge["jsonsql", "vector"], DirectedEdge["jsontsv", "aeson"], DirectedEdge["jsontsv", "attoparsec"], DirectedEdge["jsontsv", "base"], DirectedEdge["jsontsv", "bytestring"], DirectedEdge["jsontsv", "containers"], DirectedEdge["jsontsv", "csv"], DirectedEdge["jsontsv", "optparse-applicative"], DirectedEdge["jsontsv", "scientific"], DirectedEdge["jsontsv", "string-qq"], DirectedEdge["jsontsv", "text"], DirectedEdge["jsontsv", "unordered-containers"], DirectedEdge["jsontsv", "vector"], DirectedEdge["jspath", "base"], DirectedEdge["jspath", "bytestring"], DirectedEdge["jspath", "bytestring-trie"], DirectedEdge["jspath", "JSONb"], DirectedEdge["jspath", "utf8-string"], DirectedEdge["juandelacosa", "base"], DirectedEdge["juandelacosa", "base64-bytestring"], DirectedEdge["juandelacosa", "bytestring"], DirectedEdge["juandelacosa", "case-insensitive"], DirectedEdge["juandelacosa", "docopt"], DirectedEdge["juandelacosa", "entropy"], DirectedEdge["juandelacosa", "http-types"], DirectedEdge["juandelacosa", "mysql"], DirectedEdge["juandelacosa", "mysql-simple"], DirectedEdge["juandelacosa", "network"], DirectedEdge["juandelacosa", "raw-strings-qq"], DirectedEdge["juandelacosa", "resource-pool"], DirectedEdge["juandelacosa", "unix"], DirectedEdge["juandelacosa", "wai"], DirectedEdge["juandelacosa", "warp"], DirectedEdge["judy", "base"], DirectedEdge["judy", "bytestring"], DirectedEdge["judy", "ghc-prim"], DirectedEdge["jukebox", "array"], DirectedEdge["jukebox", "base"], DirectedEdge["jukebox", "containers"], DirectedEdge["jukebox", "directory"], DirectedEdge["jukebox", "dlist"], DirectedEdge["jukebox", "filepath"], DirectedEdge["jukebox", "jukebox"], DirectedEdge["jukebox", "minisat"], DirectedEdge["jukebox", "pretty"], DirectedEdge["jukebox", "process"], DirectedEdge["jukebox", "symbol"], DirectedEdge["jukebox", "transformers"], DirectedEdge["jukebox", "uglymemo"], DirectedEdge["jump", "base"], DirectedEdge["jumpthefive", "base"], DirectedEdge["jumpthefive", "parallel"], DirectedEdge["jvm-parser", "array"], DirectedEdge["jvm-parser", "base"], DirectedEdge["jvm-parser", "binary"], DirectedEdge["jvm-parser", "bytestring"], DirectedEdge["jvm-parser", "containers"], DirectedEdge["jvm-parser", "fgl"], DirectedEdge["jvm-parser", "fingertree"], DirectedEdge["jvm-parser", "pretty"], DirectedEdge["jvm-parser", "zlib"], DirectedEdge["jwt", "aeson"], DirectedEdge["jwt", "base"], DirectedEdge["jwt", "bytestring"], DirectedEdge["jwt", "containers"], DirectedEdge["jwt", "cryptonite"], DirectedEdge["jwt", "data-default"], DirectedEdge["jwt", "http-types"], DirectedEdge["jwt", "memory"], DirectedEdge["jwt", "network-uri"], DirectedEdge["jwt", "scientific"], DirectedEdge["jwt", "semigroups"], DirectedEdge["jwt", "text"], DirectedEdge["jwt", "time"], DirectedEdge["jwt", "unordered-containers"], DirectedEdge["jwt", "vector"], DirectedEdge["kademlia", "base"], DirectedEdge["kademlia", "bytestring"], DirectedEdge["kademlia", "containers"], DirectedEdge["kademlia", "mtl"], DirectedEdge["kademlia", "network"], DirectedEdge["kademlia", "stm"], DirectedEdge["kademlia", "transformers"], DirectedEdge["kademlia", "transformers-compat"], DirectedEdge["kafka-client", "base"], DirectedEdge["kafka-client", "bytestring"], DirectedEdge["kafka-client", "cereal"], DirectedEdge["kafka-client", "digest"], DirectedEdge["kafka-client", "dlist"], DirectedEdge["kafka-client", "network"], DirectedEdge["kafka-client", "snappy"], DirectedEdge["kafka-client", "time"], DirectedEdge["kafka-client", "zlib"], DirectedEdge["kan-extensions", "adjunctions"], DirectedEdge["kan-extensions", "array"], DirectedEdge["kan-extensions", "base"], DirectedEdge["kan-extensions", "comonad"], DirectedEdge["kan-extensions", "containers"], DirectedEdge["kan-extensions", "contravariant"], DirectedEdge["kan-extensions", "distributive"], DirectedEdge["kan-extensions", "free"], DirectedEdge["kan-extensions", "mtl"], DirectedEdge["kan-extensions", "semigroupoids"], DirectedEdge["kan-extensions", "tagged"], DirectedEdge["kan-extensions", "transformers"], DirectedEdge["kangaroo", "array"], DirectedEdge["kangaroo", "base"], DirectedEdge["kanji", "base"], DirectedEdge["kanji", "bytestring"], DirectedEdge["kanji", "containers"], DirectedEdge["kanji", "microlens"], DirectedEdge["kanji", "text"], DirectedEdge["kansas-comet", "aeson"], DirectedEdge["kansas-comet", "base"], DirectedEdge["kansas-comet", "containers"], DirectedEdge["kansas-comet", "data-default-class"], DirectedEdge["kansas-comet", "scotty"], DirectedEdge["kansas-comet", "stm"], DirectedEdge["kansas-comet", "text"], DirectedEdge["kansas-comet", "time"], DirectedEdge["kansas-comet", "transformers"], DirectedEdge["kansas-comet", "unordered-containers"], DirectedEdge["kansas-lava", "base"], DirectedEdge["kansas-lava", "bytestring"], DirectedEdge["kansas-lava", "cmdargs"], DirectedEdge["kansas-lava", "containers"], DirectedEdge["kansas-lava", "data-default"], DirectedEdge["kansas-lava", "data-reify"], DirectedEdge["kansas-lava", "directory"], DirectedEdge["kansas-lava", "dotgen"], DirectedEdge["kansas-lava", "filepath"], DirectedEdge["kansas-lava", "netlist"], DirectedEdge["kansas-lava", "netlist-to-vhdl"], DirectedEdge["kansas-lava", "process"], DirectedEdge["kansas-lava", "random"], DirectedEdge["kansas-lava", "sized-types"], DirectedEdge["kansas-lava", "strict"], DirectedEdge["kansas-lava", "template-haskell"], DirectedEdge["kansas-lava-cores", "ansi-terminal"], DirectedEdge["kansas-lava-cores", "base"], DirectedEdge["kansas-lava-cores", "bytestring"], DirectedEdge["kansas-lava-cores", "cmdargs"], DirectedEdge["kansas-lava-cores", "data-default"], DirectedEdge["kansas-lava-cores", "directory"], DirectedEdge["kansas-lava-cores", "filepath"], DirectedEdge["kansas-lava-cores", "kansas-lava"], DirectedEdge["kansas-lava-cores", "network"], DirectedEdge["kansas-lava-cores", "random"], DirectedEdge["kansas-lava-cores", "sized-types"], DirectedEdge["kansas-lava-papilio", "ansi-terminal"], DirectedEdge["kansas-lava-papilio", "base"], DirectedEdge["kansas-lava-papilio", "bytestring"], DirectedEdge["kansas-lava-papilio", "data-default"], DirectedEdge["kansas-lava-papilio", "directory"], DirectedEdge["kansas-lava-papilio", "filepath"], DirectedEdge["kansas-lava-papilio", "kansas-lava"], DirectedEdge["kansas-lava-papilio", "kansas-lava-cores"], DirectedEdge["kansas-lava-papilio", "netlist"], DirectedEdge["kansas-lava-papilio", "network"], DirectedEdge["kansas-lava-papilio", "sized-types"], DirectedEdge["kansas-lava-shake", "base"], DirectedEdge["kansas-lava-shake", "hastache"], DirectedEdge["kansas-lava-shake", "kansas-lava"], DirectedEdge["kansas-lava-shake", "shake"], DirectedEdge["kansas-lava-shake", "text"], DirectedEdge["karakuri", "base"], DirectedEdge["karakuri", "comonad"], DirectedEdge["karakuri", "containers"], DirectedEdge["karakuri", "minioperational"], DirectedEdge["karakuri", "mtl"], DirectedEdge["karakuri", "transformers"], DirectedEdge["karver", "aeson"], DirectedEdge["karver", "attoparsec"], DirectedEdge["karver", "base"], DirectedEdge["karver", "bytestring"], DirectedEdge["karver", "text"], DirectedEdge["karver", "unordered-containers"], DirectedEdge["karver", "vector"], DirectedEdge["katip", "aeson"], DirectedEdge["katip", "auto-update"], DirectedEdge["katip", "base"], DirectedEdge["katip", "bytestring"], DirectedEdge["katip", "containers"], DirectedEdge["katip", "either"], DirectedEdge["katip", "exceptions"], DirectedEdge["katip", "hostname"], DirectedEdge["katip", "microlens"], DirectedEdge["katip", "microlens-th"], DirectedEdge["katip", "monad-control"], DirectedEdge["katip", "mtl"], DirectedEdge["katip", "old-locale"], DirectedEdge["katip", "resourcet"], DirectedEdge["katip", "string-conv"], DirectedEdge["katip", "template-haskell"], DirectedEdge["katip", "text"], DirectedEdge["katip", "time"], DirectedEdge["katip", "time-locale-compat"], DirectedEdge["katip", "transformers"], DirectedEdge["katip", "transformers-base"], DirectedEdge["katip", "transformers-compat"], DirectedEdge["katip", "unix"], DirectedEdge["katip", "unordered-containers"], DirectedEdge["katip-elasticsearch", "aeson"], DirectedEdge["katip-elasticsearch", "async"], DirectedEdge["katip-elasticsearch", "base"], DirectedEdge["katip-elasticsearch", "bloodhound"], DirectedEdge["katip-elasticsearch", "enclosed-exceptions"], DirectedEdge["katip-elasticsearch", "exceptions"], DirectedEdge["katip-elasticsearch", "http-client"], DirectedEdge["katip-elasticsearch", "http-types"], DirectedEdge["katip-elasticsearch", "katip"], DirectedEdge["katip-elasticsearch", "random"], DirectedEdge["katip-elasticsearch", "retry"], DirectedEdge["katip-elasticsearch", "scientific"], DirectedEdge["katip-elasticsearch", "stm"], DirectedEdge["katip-elasticsearch", "stm-chans"], DirectedEdge["katip-elasticsearch", "text"], DirectedEdge["katip-elasticsearch", "time"], DirectedEdge["katip-elasticsearch", "transformers"], DirectedEdge["katip-elasticsearch", "unordered-containers"], DirectedEdge["katip-elasticsearch", "uuid"], DirectedEdge["katt", "aeson"], DirectedEdge["katt", "base"], DirectedEdge["katt", "bytestring"], DirectedEdge["katt", "ConfigFile"], DirectedEdge["katt", "containers"], DirectedEdge["katt", "directory"], DirectedEdge["katt", "errors"], DirectedEdge["katt", "filepath"], DirectedEdge["katt", "katt"], DirectedEdge["katt", "lens"], DirectedEdge["katt", "mtl"], DirectedEdge["katt", "parsec"], DirectedEdge["katt", "text"], DirectedEdge["katt", "url"], DirectedEdge["katt", "wreq"], DirectedEdge["katt", "zip-archive"], DirectedEdge["kazura-queue", "async"], DirectedEdge["kazura-queue", "atomic-primops"], DirectedEdge["kazura-queue", "base"], DirectedEdge["kazura-queue", "containers"], DirectedEdge["kazura-queue", "primitive"], DirectedEdge["kbq-gu", "base"], DirectedEdge["kd-tree", "base"], DirectedEdge["kd-tree", "lens"], DirectedEdge["kd-tree", "linear"], DirectedEdge["kd-tree", "vector"], DirectedEdge["kd-tree", "vector-algorithms"], DirectedEdge["kdesrc-build-extra", "ansi-terminal"], DirectedEdge["kdesrc-build-extra", "base"], DirectedEdge["kdesrc-build-extra", "bytestring"], DirectedEdge["kdesrc-build-extra", "cmdargs"], DirectedEdge["kdesrc-build-extra", "directory"], DirectedEdge["kdesrc-build-extra", "MissingH"], DirectedEdge["kdesrc-build-extra", "parsec"], DirectedEdge["kdesrc-build-extra", "process"], DirectedEdge["kdt", "base"], DirectedEdge["kdt", "deepseq"], DirectedEdge["kdt", "deepseq-generics"], DirectedEdge["kdt", "heap"], DirectedEdge["keera-callbacks", "base"], DirectedEdge["keera-callbacks", "mtl"], DirectedEdge["keera-hails-i18n", "base"], DirectedEdge["keera-hails-i18n", "directory"], DirectedEdge["keera-hails-i18n", "filepath"], DirectedEdge["keera-hails-i18n", "glib"], DirectedEdge["keera-hails-i18n", "hgettext"], DirectedEdge["keera-hails-i18n", "MissingK"], DirectedEdge["keera-hails-i18n", "setlocale"], DirectedEdge["keera-hails-i18n", "utf8-string"], DirectedEdge["keera-hails-mvc-controller", "base"], DirectedEdge["keera-hails-mvc-environment-gtk", "base"], DirectedEdge["keera-hails-mvc-environment-gtk", "keera-hails-mvc-model-protectedmodel"], DirectedEdge["keera-hails-mvc-environment-gtk", "keera-hails-mvc-view"], DirectedEdge["keera-hails-mvc-environment-gtk", "keera-hails-mvc-view-gtk"], DirectedEdge["keera-hails-mvc-model-lightmodel", "base"], DirectedEdge["keera-hails-mvc-model-lightmodel", "containers"], DirectedEdge["keera-hails-mvc-model-lightmodel", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-mvc-model-lightmodel", "MissingK"], DirectedEdge["keera-hails-mvc-model-lightmodel", "stm"], DirectedEdge["keera-hails-mvc-model-lightmodel", "template-haskell"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "base"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "containers"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "MissingK"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "stm"], DirectedEdge["keera-hails-mvc-model-protectedmodel", "template-haskell"], DirectedEdge["keera-hails-mvc-solutions-config", "base"], DirectedEdge["keera-hails-mvc-solutions-config", "directory"], DirectedEdge["keera-hails-mvc-solutions-config", "filepath"], DirectedEdge["keera-hails-mvc-solutions-config", "MissingK"], DirectedEdge["keera-hails-mvc-solutions-gtk", "base"], DirectedEdge["keera-hails-mvc-solutions-gtk", "gtk"], DirectedEdge["keera-hails-mvc-solutions-gtk", "hslogger"], DirectedEdge["keera-hails-mvc-solutions-gtk", "HTTP"], DirectedEdge["keera-hails-mvc-solutions-gtk", "keera-hails-mvc-environment-gtk"], DirectedEdge["keera-hails-mvc-solutions-gtk", "keera-hails-mvc-model-protectedmodel"], DirectedEdge["keera-hails-mvc-solutions-gtk", "keera-hails-mvc-view"], DirectedEdge["keera-hails-mvc-solutions-gtk", "keera-hails-mvc-view-gtk"], DirectedEdge["keera-hails-mvc-solutions-gtk", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-mvc-solutions-gtk", "MissingK"], DirectedEdge["keera-hails-mvc-solutions-gtk", "mtl"], DirectedEdge["keera-hails-mvc-solutions-gtk", "network"], DirectedEdge["keera-hails-mvc-solutions-gtk", "network-uri"], DirectedEdge["keera-hails-mvc-solutions-gtk", "template-haskell"], DirectedEdge["keera-hails-mvc-view", "base"], DirectedEdge["keera-hails-mvc-view-gtk", "base"], DirectedEdge["keera-hails-mvc-view-gtk", "gtk"], DirectedEdge["keera-hails-mvc-view-gtk", "gtk-helpers"], DirectedEdge["keera-hails-mvc-view-gtk", "keera-hails-mvc-view"], DirectedEdge["keera-hails-reactive-fs", "base"], DirectedEdge["keera-hails-reactive-fs", "directory"], DirectedEdge["keera-hails-reactive-fs", "fsnotify"], DirectedEdge["keera-hails-reactive-fs", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-fs", "system-filepath"], DirectedEdge["keera-hails-reactive-gtk", "base"], DirectedEdge["keera-hails-reactive-gtk", "bytestring"], DirectedEdge["keera-hails-reactive-gtk", "cairo"], DirectedEdge["keera-hails-reactive-gtk", "glib"], DirectedEdge["keera-hails-reactive-gtk", "gtk"], DirectedEdge["keera-hails-reactive-gtk", "gtk-helpers"], DirectedEdge["keera-hails-reactive-gtk", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-gtk", "mtl"], DirectedEdge["keera-hails-reactive-gtk", "transformers"], DirectedEdge["keera-hails-reactive-network", "base"], DirectedEdge["keera-hails-reactive-network", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-network", "network"], DirectedEdge["keera-hails-reactive-polling", "base"], DirectedEdge["keera-hails-reactive-polling", "keera-callbacks"], DirectedEdge["keera-hails-reactive-polling", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-wx", "base"], DirectedEdge["keera-hails-reactive-wx", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-wx", "wx"], DirectedEdge["keera-hails-reactive-wx", "wxcore"], DirectedEdge["keera-hails-reactive-yampa", "base"], DirectedEdge["keera-hails-reactive-yampa", "keera-callbacks"], DirectedEdge["keera-hails-reactive-yampa", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactive-yampa", "time"], DirectedEdge["keera-hails-reactive-yampa", "Yampa"], DirectedEdge["keera-hails-reactivelenses", "base"], DirectedEdge["keera-hails-reactivelenses", "keera-hails-reactivevalues"], DirectedEdge["keera-hails-reactivelenses", "lens"], DirectedEdge["keera-hails-reactivevalues", "base"], DirectedEdge["keera-hails-reactivevalues", "contravariant"], DirectedEdge["keera-posture", "allocated-processor"], DirectedEdge["keera-posture", "base"], DirectedEdge["keera-posture", "bytestring"], DirectedEdge["keera-posture", "cmdargs"], DirectedEdge["keera-posture", "containers"], DirectedEdge["keera-posture", "cv-combinators"], DirectedEdge["keera-posture", "directory"], DirectedEdge["keera-posture", "filepath"], DirectedEdge["keera-posture", "gio"], DirectedEdge["keera-posture", "glib"], DirectedEdge["keera-posture", "gtk"], DirectedEdge["keera-posture", "gtk-helpers"], DirectedEdge["keera-posture", "hgettext"], DirectedEdge["keera-posture", "HOpenCV"], DirectedEdge["keera-posture", "HTTP"], DirectedEdge["keera-posture", "IfElse"], DirectedEdge["keera-posture", "keera-hails-i18n"], DirectedEdge["keera-posture", "keera-hails-mvc-controller"], DirectedEdge["keera-posture", "keera-hails-mvc-environment-gtk"], DirectedEdge["keera-posture", "keera-hails-mvc-model-protectedmodel"], DirectedEdge["keera-posture", "keera-hails-mvc-solutions-config"], DirectedEdge["keera-posture", "keera-hails-mvc-solutions-gtk"], DirectedEdge["keera-posture", "keera-hails-mvc-view-gtk"], DirectedEdge["keera-posture", "keera-hails-reactive-gtk"], DirectedEdge["keera-posture", "keera-hails-reactivevalues"], DirectedEdge["keera-posture", "MissingK"], DirectedEdge["keera-posture", "mtl"], DirectedEdge["keera-posture", "network"], DirectedEdge["keera-posture", "process"], DirectedEdge["keera-posture", "SDL"], DirectedEdge["keera-posture", "SDL-mixer"], DirectedEdge["keera-posture", "setlocale"], DirectedEdge["keera-posture", "time"], DirectedEdge["keera-posture", "utf8-string"], DirectedEdge["keiretsu", "aeson"], DirectedEdge["keiretsu", "ansi-terminal"], DirectedEdge["keiretsu", "async"], DirectedEdge["keiretsu", "base"], DirectedEdge["keiretsu", "bytestring"], DirectedEdge["keiretsu", "conduit"], DirectedEdge["keiretsu", "conduit-extra"], DirectedEdge["keiretsu", "directory"], DirectedEdge["keiretsu", "filepath"], DirectedEdge["keiretsu", "hslogger"], DirectedEdge["keiretsu", "network"], DirectedEdge["keiretsu", "optparse-applicative"], DirectedEdge["keiretsu", "process"], DirectedEdge["keiretsu", "text"], DirectedEdge["keiretsu", "unix"], DirectedEdge["keiretsu", "unordered-containers"], DirectedEdge["keiretsu", "yaml"], DirectedEdge["keter", "aeson"], DirectedEdge["keter", "array"], DirectedEdge["keter", "async"], DirectedEdge["keter", "attoparsec"], DirectedEdge["keter", "base"], DirectedEdge["keter", "blaze-builder"], DirectedEdge["keter", "bytestring"], DirectedEdge["keter", "case-insensitive"], DirectedEdge["keter", "conduit"], DirectedEdge["keter", "conduit-extra"], DirectedEdge["keter", "containers"], DirectedEdge["keter", "data-default"], DirectedEdge["keter", "directory"], DirectedEdge["keter", "filepath"], DirectedEdge["keter", "fsnotify"], DirectedEdge["keter", "ghc-prim"], DirectedEdge["keter", "http-client"], DirectedEdge["keter", "http-conduit"], DirectedEdge["keter", "http-reverse-proxy"], DirectedEdge["keter", "http-types"], DirectedEdge["keter", "keter"], DirectedEdge["keter", "lifted-base"], DirectedEdge["keter", "mtl"], DirectedEdge["keter", "network"], DirectedEdge["keter", "process"], DirectedEdge["keter", "random"], DirectedEdge["keter", "regex-tdfa"], DirectedEdge["keter", "stm"], DirectedEdge["keter", "system-filepath"], DirectedEdge["keter", "tar"], DirectedEdge["keter", "template-haskell"], DirectedEdge["keter", "text"], DirectedEdge["keter", "time"], DirectedEdge["keter", "transformers"], DirectedEdge["keter", "unix"], DirectedEdge["keter", "unix-compat"], DirectedEdge["keter", "unordered-containers"], DirectedEdge["keter", "vector"], DirectedEdge["keter", "wai"], DirectedEdge["keter", "wai-app-static"], DirectedEdge["keter", "wai-extra"], DirectedEdge["keter", "warp"], DirectedEdge["keter", "warp-tls"], DirectedEdge["keter", "yaml"], DirectedEdge["keter", "zlib"], DirectedEdge["kevin", "attoparsec"], DirectedEdge["kevin", "base"], DirectedEdge["kevin", "bytestring"], DirectedEdge["kevin", "containers"], DirectedEdge["kevin", "cprng-aes"], DirectedEdge["kevin", "damnpacket"], DirectedEdge["kevin", "data-default"], DirectedEdge["kevin", "exceptions"], DirectedEdge["kevin", "HTTP"], DirectedEdge["kevin", "lens"], DirectedEdge["kevin", "MonadCatchIO-transformers"], DirectedEdge["kevin", "mtl"], DirectedEdge["kevin", "network"], DirectedEdge["kevin", "regex-pcre-builtin"], DirectedEdge["kevin", "stm"], DirectedEdge["kevin", "text"], DirectedEdge["kevin", "time"], DirectedEdge["kevin", "tls"], DirectedEdge["kevin", "tls-extra"], DirectedEdge["keycode", "base"], DirectedEdge["keycode", "containers"], DirectedEdge["keycode", "ghc-prim"], DirectedEdge["keycode", "template-haskell"], DirectedEdge["keyed", "base"], DirectedEdge["keyed", "containers"], DirectedEdge["keyed", "vector"], DirectedEdge["keyring", "base"], DirectedEdge["keyring", "bytestring"], DirectedEdge["keyring", "keyring"], DirectedEdge["keyring", "udbus"], DirectedEdge["keyring", "utf8-string"], DirectedEdge["keys", "array"], DirectedEdge["keys", "base"], DirectedEdge["keys", "comonad"], DirectedEdge["keys", "containers"], DirectedEdge["keys", "free"], DirectedEdge["keys", "hashable"], DirectedEdge["keys", "semigroupoids"], DirectedEdge["keys", "semigroups"], DirectedEdge["keys", "transformers"], DirectedEdge["keys", "transformers-compat"], DirectedEdge["keys", "unordered-containers"], DirectedEdge["keystore", "aeson"], DirectedEdge["keystore", "aeson-pretty"], DirectedEdge["keystore", "ansi-wl-pprint"], DirectedEdge["keystore", "api-tools"], DirectedEdge["keystore", "asn1-encoding"], DirectedEdge["keystore", "asn1-types"], DirectedEdge["keystore", "base"], DirectedEdge["keystore", "base64-bytestring"], DirectedEdge["keystore", "byteable"], DirectedEdge["keystore", "bytestring"], DirectedEdge["keystore", "cipher-aes"], DirectedEdge["keystore", "containers"], DirectedEdge["keystore", "crypto-pubkey"], DirectedEdge["keystore", "crypto-random"], DirectedEdge["keystore", "directory"], DirectedEdge["keystore", "filepath"], DirectedEdge["keystore", "keystore"], DirectedEdge["keystore", "lens"], DirectedEdge["keystore", "mtl"], DirectedEdge["keystore", "old-locale"], DirectedEdge["keystore", "optparse-applicative"], DirectedEdge["keystore", "pbkdf"], DirectedEdge["keystore", "process"], DirectedEdge["keystore", "raw-strings-qq"], DirectedEdge["keystore", "regex-compat-tdfa"], DirectedEdge["keystore", "safe"], DirectedEdge["keystore", "setenv"], DirectedEdge["keystore", "text"], DirectedEdge["keystore", "time"], DirectedEdge["keystore", "unordered-containers"], DirectedEdge["keystore", "vector"], DirectedEdge["keyvaluehash", "array"], DirectedEdge["keyvaluehash", "base"], DirectedEdge["keyvaluehash", "binary"], DirectedEdge["keyvaluehash", "bytestring"], DirectedEdge["keyvaluehash", "derive"], DirectedEdge["keyvaluehash", "directory"], DirectedEdge["keyvaluehash", "filepath"], DirectedEdge["keyvaluehash", "hashable"], DirectedEdge["keyvaluehash", "mmap"], DirectedEdge["keyvaluehash", "storable-record"], DirectedEdge["keyword-args", "base"], DirectedEdge["keyword-args", "bytestring"], DirectedEdge["keyword-args", "cassava"], DirectedEdge["keyword-args", "containers"], DirectedEdge["keyword-args", "parsec"], DirectedEdge["kicad-data", "base"], DirectedEdge["kicad-data", "lens-family"], DirectedEdge["kicad-data", "parsec"], DirectedEdge["kicad-data", "parsec-numbers"], DirectedEdge["kicad-data", "pretty-compact"], DirectedEdge["kickass-torrents-dump-parser", "base"], DirectedEdge["kickass-torrents-dump-parser", "bytestring"], DirectedEdge["kickass-torrents-dump-parser", "cassava"], DirectedEdge["kickass-torrents-dump-parser", "text"], DirectedEdge["kickass-torrents-dump-parser", "vector"], DirectedEdge["kickchan", "base"], DirectedEdge["kickchan", "containers"], DirectedEdge["kickchan", "primitive"], DirectedEdge["kickchan", "vector"], DirectedEdge["kif-parser", "base"], DirectedEdge["kif-parser", "bytestring"], DirectedEdge["kif-parser", "cmdargs"], DirectedEdge["kif-parser", "hostname"], DirectedEdge["kif-parser", "old-time"], DirectedEdge["kif-parser", "parsec"], DirectedEdge["kif-parser", "twine"], DirectedEdge["kinds", "base"], DirectedEdge["kit", "ansi-terminal"], DirectedEdge["kit", "attoparsec"], DirectedEdge["kit", "base"], DirectedEdge["kit", "cabal-file-th"], DirectedEdge["kit", "cmdargs"], DirectedEdge["kit", "containers"], DirectedEdge["kit", "directory"], DirectedEdge["kit", "errors"], DirectedEdge["kit", "filepath"], DirectedEdge["kit", "Glob"], DirectedEdge["kit", "mtl"], DirectedEdge["kit", "process"], DirectedEdge["kit", "text"], DirectedEdge["kit", "unix"], DirectedEdge["kit", "unordered-containers"], DirectedEdge["kit", "yaml"], DirectedEdge["kmeans", "base"], DirectedEdge["kmeans-par", "base"], DirectedEdge["kmeans-par", "metric"], DirectedEdge["kmeans-par", "parallel"], DirectedEdge["kmeans-par", "semigroups"], DirectedEdge["kmeans-par", "vector"], DirectedEdge["kmeans-vector", "base"], DirectedEdge["kmeans-vector", "kmeans-vector"], DirectedEdge["kmeans-vector", "mtl"], DirectedEdge["kmeans-vector", "probable"], DirectedEdge["kmeans-vector", "vector"], DirectedEdge["knob", "base"], DirectedEdge["knob", "bytestring"], DirectedEdge["knob", "transformers"], DirectedEdge["knots", "array"], DirectedEdge["knots", "base"], DirectedEdge["knots", "containers"], DirectedEdge["knots", "data-default"], DirectedEdge["knots", "deepseq"], DirectedEdge["knots", "knots"], DirectedEdge["knots", "mtl"], DirectedEdge["knots", "parallel"], DirectedEdge["knots", "vector"], DirectedEdge["knots", "yap"], DirectedEdge["koellner-phonetic", "base"], DirectedEdge["koellner-phonetic", "HUnit"], DirectedEdge["kontrakcja-templates", "base"], DirectedEdge["kontrakcja-templates", "bytestring"], DirectedEdge["kontrakcja-templates", "containers"], DirectedEdge["kontrakcja-templates", "directory"], DirectedEdge["kontrakcja-templates", "HStringTemplate"], DirectedEdge["kontrakcja-templates", "html"], DirectedEdge["kontrakcja-templates", "MissingH"], DirectedEdge["kontrakcja-templates", "mtl"], DirectedEdge["kontrakcja-templates", "old-time"], DirectedEdge["kontrakcja-templates", "parsec"], DirectedEdge["kontrakcja-templates", "transformers"], DirectedEdge["kontrakcja-templates", "utf8-string"], DirectedEdge["koofr-client", "aeson"], DirectedEdge["koofr-client", "base"], DirectedEdge["koofr-client", "bytestring"], DirectedEdge["koofr-client", "filepath"], DirectedEdge["koofr-client", "http-client"], DirectedEdge["koofr-client", "http-client-tls"], DirectedEdge["koofr-client", "http-types"], DirectedEdge["koofr-client", "mtl"], DirectedEdge["korfu", "base"], DirectedEdge["korfu", "bio"], DirectedEdge["korfu", "bytestring"], DirectedEdge["korfu", "simpleargs"], DirectedEdge["kqueue", "base"], DirectedEdge["kqueue", "directory"], DirectedEdge["kqueue", "filepath"], DirectedEdge["kqueue", "mtl"], DirectedEdge["kqueue", "time"], DirectedEdge["kqueue", "unix"], DirectedEdge["kraken", "aeson"], DirectedEdge["kraken", "base"], DirectedEdge["kraken", "bytestring"], DirectedEdge["kraken", "http-client"], DirectedEdge["kraken", "http-client-tls"], DirectedEdge["kraken", "mtl"], DirectedEdge["krpc", "base"], DirectedEdge["krpc", "bencoding"], DirectedEdge["krpc", "bytestring"], DirectedEdge["krpc", "containers"], DirectedEdge["krpc", "data-default-class"], DirectedEdge["krpc", "ghc-prim"], DirectedEdge["krpc", "lifted-base"], DirectedEdge["krpc", "monad-control"], DirectedEdge["krpc", "monad-logger"], DirectedEdge["krpc", "mtl"], DirectedEdge["krpc", "network"], DirectedEdge["krpc", "text"], DirectedEdge["krpc", "transformers"], DirectedEdge["ks-test", "base"], DirectedEdge["ks-test", "gamma"], DirectedEdge["ks-test", "random-fu"], DirectedEdge["ks-test", "roots"], DirectedEdge["ks-test", "vector"], DirectedEdge["ktx", "base"], DirectedEdge["ktx", "bytestring"], DirectedEdge["ktx", "OpenGL"], DirectedEdge["kure", "base"], DirectedEdge["kure", "dlist"], DirectedEdge["kure", "transformers"], DirectedEdge["kure-your-boilerplate", "base"], DirectedEdge["kure-your-boilerplate", "kure"], DirectedEdge["kure-your-boilerplate", "template-haskell"], DirectedEdge["kyotocabinet", "base"], DirectedEdge["kyotocabinet", "bytestring"], DirectedEdge["kyotocabinet", "cereal"], DirectedEdge["l-bfgs-b", "base"], DirectedEdge["l-bfgs-b", "vector"], DirectedEdge["labeled-graph", "base"], DirectedEdge["labeled-graph", "labeled-tree"], DirectedEdge["labeled-tree", "base"], DirectedEdge["laborantin-hs", "aeson"], DirectedEdge["laborantin-hs", "async"], DirectedEdge["laborantin-hs", "base"], DirectedEdge["laborantin-hs", "bytestring"], DirectedEdge["laborantin-hs", "cmdlib"], DirectedEdge["laborantin-hs", "containers"], DirectedEdge["laborantin-hs", "directory"], DirectedEdge["laborantin-hs", "hslogger"], DirectedEdge["laborantin-hs", "laborantin-hs"], DirectedEdge["laborantin-hs", "mtl"], DirectedEdge["laborantin-hs", "old-locale"], DirectedEdge["laborantin-hs", "parsec"], DirectedEdge["laborantin-hs", "random"], DirectedEdge["laborantin-hs", "split"], DirectedEdge["laborantin-hs", "text"], DirectedEdge["laborantin-hs", "time"], DirectedEdge["laborantin-hs", "transformers"], DirectedEdge["laborantin-hs", "uuid"], DirectedEdge["labyrinth", "base"], DirectedEdge["labyrinth", "containers"], DirectedEdge["labyrinth", "derive"], DirectedEdge["labyrinth", "lens"], DirectedEdge["labyrinth", "monad-loops"], DirectedEdge["labyrinth", "MonadRandom"], DirectedEdge["labyrinth", "mtl"], DirectedEdge["labyrinth", "parsec"], DirectedEdge["labyrinth", "random"], DirectedEdge["labyrinth", "safecopy"], DirectedEdge["labyrinth", "template-haskell"], DirectedEdge["labyrinth", "transformers"], DirectedEdge["labyrinth-server", "acid-state"], DirectedEdge["labyrinth-server", "aeson"], DirectedEdge["labyrinth-server", "base"], DirectedEdge["labyrinth-server", "bytestring"], DirectedEdge["labyrinth-server", "containers"], DirectedEdge["labyrinth-server", "derive"], DirectedEdge["labyrinth-server", "filepath"], DirectedEdge["labyrinth-server", "hamlet"], DirectedEdge["labyrinth-server", "labyrinth"], DirectedEdge["labyrinth-server", "lens"], DirectedEdge["labyrinth-server", "mtl"], DirectedEdge["labyrinth-server", "parsec"], DirectedEdge["labyrinth-server", "random"], DirectedEdge["labyrinth-server", "safecopy"], DirectedEdge["labyrinth-server", "shakespeare-css"], DirectedEdge["labyrinth-server", "shakespeare-js"], DirectedEdge["labyrinth-server", "template-haskell"], DirectedEdge["labyrinth-server", "text"], DirectedEdge["labyrinth-server", "transformers"], DirectedEdge["labyrinth-server", "unordered-containers"], DirectedEdge["labyrinth-server", "utf8-string"], DirectedEdge["labyrinth-server", "vector"], DirectedEdge["labyrinth-server", "wai-websockets"], DirectedEdge["labyrinth-server", "warp"], DirectedEdge["labyrinth-server", "websockets"], DirectedEdge["labyrinth-server", "yesod"], DirectedEdge["labyrinth-server", "yesod-static"], DirectedEdge["lackey", "base"], DirectedEdge["lackey", "servant"], DirectedEdge["lackey", "servant-foreign"], DirectedEdge["lackey", "text"], DirectedEdge["lagrangian", "ad"], DirectedEdge["lagrangian", "base"], DirectedEdge["lagrangian", "hmatrix"], DirectedEdge["lagrangian", "nonlinear-optimization"], DirectedEdge["lagrangian", "vector"], DirectedEdge["laika", "attoparsec"], DirectedEdge["laika", "base-prelude"], DirectedEdge["laika", "either"], DirectedEdge["laika", "laika"], DirectedEdge["laika", "record"], DirectedEdge["laika", "system-fileio"], DirectedEdge["laika", "system-filepath"], DirectedEdge["laika", "template-haskell"], DirectedEdge["laika", "text"], DirectedEdge["laika", "transformers"], DirectedEdge["lambda-ast", "base"], DirectedEdge["lambda-bridge", "base"], DirectedEdge["lambda-canvas", "base"], DirectedEdge["lambda-canvas", "GLUT"], DirectedEdge["lambda-canvas", "mtl"], DirectedEdge["lambda-canvas", "OpenGL"], DirectedEdge["lambda-canvas", "time"], DirectedEdge["lambda-devs", "base"], DirectedEdge["lambda-devs", "binary"], DirectedEdge["lambda-devs", "containers"], DirectedEdge["lambda-devs", "dimensional"], DirectedEdge["lambda-devs", "distributed-process"], DirectedEdge["lambda-devs", "lambda-devs"], DirectedEdge["lambda-devs", "numtype"], DirectedEdge["lambda-options", "base"], DirectedEdge["lambda-options", "containers"], DirectedEdge["lambda-options", "mtl"], DirectedEdge["lambda-options", "read-bounded"], DirectedEdge["lambda-placeholders", "base"], DirectedEdge["lambda-toolbox", "base"], DirectedEdge["lambda2js", "base"], DirectedEdge["lambda2js", "parsec"], DirectedEdge["lambdaBase", "base"], DirectedEdge["lambdaBase", "parsec"], DirectedEdge["lambdaFeed", "base"], DirectedEdge["lambdaFeed", "html"], DirectedEdge["lambdaLit", "base"], DirectedEdge["lambdaLit", "bytestring"], DirectedEdge["lambdaLit", "haskeline"], DirectedEdge["lambdaLit", "lambdaBase"], DirectedEdge["lambdaLit", "mtl"], DirectedEdge["lambdaLit", "network"], DirectedEdge["lambdabot", "base"], DirectedEdge["lambdabot", "lambdabot-core"], DirectedEdge["lambdabot", "lambdabot-haskell-plugins"], DirectedEdge["lambdabot", "lambdabot-irc-plugins"], DirectedEdge["lambdabot", "lambdabot-misc-plugins"], DirectedEdge["lambdabot", "lambdabot-novelty-plugins"], DirectedEdge["lambdabot", "lambdabot-reference-plugins"], DirectedEdge["lambdabot", "lambdabot-social-plugins"], DirectedEdge["lambdabot", "mtl"], DirectedEdge["lambdabot-core", "base"], DirectedEdge["lambdabot-core", "binary"], DirectedEdge["lambdabot-core", "bytestring"], DirectedEdge["lambdabot-core", "containers"], DirectedEdge["lambdabot-core", "dependent-map"], DirectedEdge["lambdabot-core", "dependent-sum"], DirectedEdge["lambdabot-core", "dependent-sum-template"], DirectedEdge["lambdabot-core", "directory"], DirectedEdge["lambdabot-core", "edit-distance"], DirectedEdge["lambdabot-core", "filepath"], DirectedEdge["lambdabot-core", "haskeline"], DirectedEdge["lambdabot-core", "hslogger"], DirectedEdge["lambdabot-core", "HTTP"], DirectedEdge["lambdabot-core", "lifted-base"], DirectedEdge["lambdabot-core", "monad-control"], DirectedEdge["lambdabot-core", "mtl"], DirectedEdge["lambdabot-core", "network"], DirectedEdge["lambdabot-core", "parsec"], DirectedEdge["lambdabot-core", "prim-uniq"], DirectedEdge["lambdabot-core", "random"], DirectedEdge["lambdabot-core", "random-fu"], DirectedEdge["lambdabot-core", "random-source"], DirectedEdge["lambdabot-core", "regex-tdfa"], DirectedEdge["lambdabot-core", "SafeSemaphore"], DirectedEdge["lambdabot-core", "split"], DirectedEdge["lambdabot-core", "syb"], DirectedEdge["lambdabot-core", "template-haskell"], DirectedEdge["lambdabot-core", "time"], DirectedEdge["lambdabot-core", "transformers"], DirectedEdge["lambdabot-core", "transformers-base"], DirectedEdge["lambdabot-core", "unix"], DirectedEdge["lambdabot-core", "utf8-string"], DirectedEdge["lambdabot-core", "zlib"], DirectedEdge["lambdabot-haskell-plugins", "array"], DirectedEdge["lambdabot-haskell-plugins", "arrows"], DirectedEdge["lambdabot-haskell-plugins", "base"], DirectedEdge["lambdabot-haskell-plugins", "bytestring"], DirectedEdge["lambdabot-haskell-plugins", "containers"], DirectedEdge["lambdabot-haskell-plugins", "data-memocombinators"], DirectedEdge["lambdabot-haskell-plugins", "directory"], DirectedEdge["lambdabot-haskell-plugins", "filepath"], DirectedEdge["lambdabot-haskell-plugins", "haskell-src-exts"], DirectedEdge["lambdabot-haskell-plugins", "hoogle"], DirectedEdge["lambdabot-haskell-plugins", "HTTP"], DirectedEdge["lambdabot-haskell-plugins", "IOSpec"], DirectedEdge["lambdabot-haskell-plugins", "lambdabot-core"], DirectedEdge["lambdabot-haskell-plugins", "lambdabot-reference-plugins"], DirectedEdge["lambdabot-haskell-plugins", "lambdabot-trusted"], DirectedEdge["lambdabot-haskell-plugins", "lifted-base"], DirectedEdge["lambdabot-haskell-plugins", "logict"], DirectedEdge["lambdabot-haskell-plugins", "MonadRandom"], DirectedEdge["lambdabot-haskell-plugins", "mtl"], DirectedEdge["lambdabot-haskell-plugins", "mueval"], DirectedEdge["lambdabot-haskell-plugins", "network"], DirectedEdge["lambdabot-haskell-plugins", "numbers"], DirectedEdge["lambdabot-haskell-plugins", "oeis"], DirectedEdge["lambdabot-haskell-plugins", "parsec"], DirectedEdge["lambdabot-haskell-plugins", "pretty"], DirectedEdge["lambdabot-haskell-plugins", "process"], DirectedEdge["lambdabot-haskell-plugins", "QuickCheck"], DirectedEdge["lambdabot-haskell-plugins", "regex-tdfa"], DirectedEdge["lambdabot-haskell-plugins", "show"], DirectedEdge["lambdabot-haskell-plugins", "split"], DirectedEdge["lambdabot-haskell-plugins", "syb"], DirectedEdge["lambdabot-haskell-plugins", "transformers"], DirectedEdge["lambdabot-haskell-plugins", "utf8-string"], DirectedEdge["lambdabot-haskell-plugins", "vector-space"], DirectedEdge["lambdabot-irc-plugins", "base"], DirectedEdge["lambdabot-irc-plugins", "bytestring"], DirectedEdge["lambdabot-irc-plugins", "containers"], DirectedEdge["lambdabot-irc-plugins", "directory"], DirectedEdge["lambdabot-irc-plugins", "filepath"], DirectedEdge["lambdabot-irc-plugins", "lambdabot-core"], DirectedEdge["lambdabot-irc-plugins", "lifted-base"], DirectedEdge["lambdabot-irc-plugins", "mtl"], DirectedEdge["lambdabot-irc-plugins", "network"], DirectedEdge["lambdabot-irc-plugins", "SafeSemaphore"], DirectedEdge["lambdabot-irc-plugins", "split"], DirectedEdge["lambdabot-irc-plugins", "time"], DirectedEdge["lambdabot-misc-plugins", "base"], DirectedEdge["lambdabot-misc-plugins", "bytestring"], DirectedEdge["lambdabot-misc-plugins", "containers"], DirectedEdge["lambdabot-misc-plugins", "filepath"], DirectedEdge["lambdabot-misc-plugins", "hstatsd"], DirectedEdge["lambdabot-misc-plugins", "lambdabot-core"], DirectedEdge["lambdabot-misc-plugins", "lifted-base"], DirectedEdge["lambdabot-misc-plugins", "mtl"], DirectedEdge["lambdabot-misc-plugins", "network"], DirectedEdge["lambdabot-misc-plugins", "network-uri"], DirectedEdge["lambdabot-misc-plugins", "parsec"], DirectedEdge["lambdabot-misc-plugins", "process"], DirectedEdge["lambdabot-misc-plugins", "random"], DirectedEdge["lambdabot-misc-plugins", "random-fu"], DirectedEdge["lambdabot-misc-plugins", "random-source"], DirectedEdge["lambdabot-misc-plugins", "regex-tdfa"], DirectedEdge["lambdabot-misc-plugins", "SafeSemaphore"], DirectedEdge["lambdabot-misc-plugins", "split"], DirectedEdge["lambdabot-misc-plugins", "tagsoup"], DirectedEdge["lambdabot-misc-plugins", "template-haskell"], DirectedEdge["lambdabot-misc-plugins", "time"], DirectedEdge["lambdabot-misc-plugins", "transformers"], DirectedEdge["lambdabot-misc-plugins", "transformers-base"], DirectedEdge["lambdabot-misc-plugins", "unix"], DirectedEdge["lambdabot-misc-plugins", "utf8-string"], DirectedEdge["lambdabot-misc-plugins", "zlib"], DirectedEdge["lambdabot-novelty-plugins", "base"], DirectedEdge["lambdabot-novelty-plugins", "binary"], DirectedEdge["lambdabot-novelty-plugins", "brainfuck"], DirectedEdge["lambdabot-novelty-plugins", "bytestring"], DirectedEdge["lambdabot-novelty-plugins", "containers"], DirectedEdge["lambdabot-novelty-plugins", "dice"], DirectedEdge["lambdabot-novelty-plugins", "directory"], DirectedEdge["lambdabot-novelty-plugins", "lambdabot-core"], DirectedEdge["lambdabot-novelty-plugins", "misfortune"], DirectedEdge["lambdabot-novelty-plugins", "process"], DirectedEdge["lambdabot-novelty-plugins", "random-fu"], DirectedEdge["lambdabot-novelty-plugins", "regex-tdfa"], DirectedEdge["lambdabot-novelty-plugins", "unlambda"], DirectedEdge["lambdabot-reference-plugins", "base"], DirectedEdge["lambdabot-reference-plugins", "bytestring"], DirectedEdge["lambdabot-reference-plugins", "containers"], DirectedEdge["lambdabot-reference-plugins", "HTTP"], DirectedEdge["lambdabot-reference-plugins", "lambdabot-core"], DirectedEdge["lambdabot-reference-plugins", "mtl"], DirectedEdge["lambdabot-reference-plugins", "network"], DirectedEdge["lambdabot-reference-plugins", "network-uri"], DirectedEdge["lambdabot-reference-plugins", "oeis"], DirectedEdge["lambdabot-reference-plugins", "process"], DirectedEdge["lambdabot-reference-plugins", "regex-tdfa"], DirectedEdge["lambdabot-reference-plugins", "split"], DirectedEdge["lambdabot-reference-plugins", "tagsoup"], DirectedEdge["lambdabot-reference-plugins", "utf8-string"], DirectedEdge["lambdabot-social-plugins", "base"], DirectedEdge["lambdabot-social-plugins", "binary"], DirectedEdge["lambdabot-social-plugins", "bytestring"], DirectedEdge["lambdabot-social-plugins", "containers"], DirectedEdge["lambdabot-social-plugins", "lambdabot-core"], DirectedEdge["lambdabot-social-plugins", "mtl"], DirectedEdge["lambdabot-social-plugins", "split"], DirectedEdge["lambdabot-social-plugins", "time"], DirectedEdge["lambdabot-trusted", "base"], DirectedEdge["lambdabot-trusted", "oeis"], DirectedEdge["lambdabot-trusted", "QuickCheck"], DirectedEdge["lambdabot-trusted", "QuickCheck-safe"], DirectedEdge["lambdabot-utils", "lambdabot"], DirectedEdge["lambdabot-utils", "base"], DirectedEdge["lambdabot-utils", "binary"], DirectedEdge["lambdabot-utils", "bytestring"], DirectedEdge["lambdabot-utils", "containers"], DirectedEdge["lambdabot-utils", "haskell-src"], DirectedEdge["lambdabot-utils", "mtl"], DirectedEdge["lambdabot-utils", "network"], DirectedEdge["lambdabot-utils", "old-time"], DirectedEdge["lambdabot-utils", "process"], DirectedEdge["lambdabot-utils", "random"], DirectedEdge["lambdabot-utils", "regex-compat"], DirectedEdge["lambdabot-utils", "regex-posix"], DirectedEdge["lambdabot-utils", "syb"], DirectedEdge["lambdabot-utils", "tagsoup"], DirectedEdge["lambdabot-utils", "unix"], DirectedEdge["lambdabot-utils", "utf8-string"], DirectedEdge["lambdabot-utils", "zlib"], DirectedEdge["lambdacat", "base"], DirectedEdge["lambdacat", "cmdargs"], DirectedEdge["lambdacat", "containers"], DirectedEdge["lambdacat", "dyre"], DirectedEdge["lambdacat", "glade"], DirectedEdge["lambdacat", "gtk"], DirectedEdge["lambdacat", "mtl"], DirectedEdge["lambdacat", "network"], DirectedEdge["lambdacat", "webkit"], DirectedEdge["lambdacms-core", "base"], DirectedEdge["lambdacms-core", "blaze-html"], DirectedEdge["lambdacms-core", "bytestring"], DirectedEdge["lambdacms-core", "containers"], DirectedEdge["lambdacms-core", "data-default"], DirectedEdge["lambdacms-core", "esqueleto"], DirectedEdge["lambdacms-core", "file-embed"], DirectedEdge["lambdacms-core", "friendly-time"], DirectedEdge["lambdacms-core", "gravatar"], DirectedEdge["lambdacms-core", "lists"], DirectedEdge["lambdacms-core", "mime-mail"], DirectedEdge["lambdacms-core", "old-locale"], DirectedEdge["lambdacms-core", "persistent"], DirectedEdge["lambdacms-core", "shakespeare"], DirectedEdge["lambdacms-core", "template-haskell"], DirectedEdge["lambdacms-core", "text"], DirectedEdge["lambdacms-core", "time"], DirectedEdge["lambdacms-core", "uuid"], DirectedEdge["lambdacms-core", "wai"], DirectedEdge["lambdacms-core", "yesod"], DirectedEdge["lambdacms-core", "yesod-auth"], DirectedEdge["lambdacms-core", "yesod-core"], DirectedEdge["lambdacms-core", "yesod-form"], DirectedEdge["lambdacms-media", "base"], DirectedEdge["lambdacms-media", "directory"], DirectedEdge["lambdacms-media", "filepath"], DirectedEdge["lambdacms-media", "lambdacms-core"], DirectedEdge["lambdacms-media", "persistent"], DirectedEdge["lambdacms-media", "shakespeare"], DirectedEdge["lambdacms-media", "text"], DirectedEdge["lambdacms-media", "time"], DirectedEdge["lambdacms-media", "yesod"], DirectedEdge["lambdacms-media", "yesod-form"], DirectedEdge["lambdacube", "base"], DirectedEdge["lambdacube", "editline"], DirectedEdge["lambdacube", "mtl"], DirectedEdge["lambdacube", "pretty"], DirectedEdge["lambdacube-bullet", "base"], DirectedEdge["lambdacube-bullet", "bullet"], DirectedEdge["lambdacube-bullet", "lambdacube-engine"], DirectedEdge["lambdacube-bullet", "mtl"], DirectedEdge["lambdacube-bullet", "vector"], DirectedEdge["lambdacube-compiler", "aeson"], DirectedEdge["lambdacube-compiler", "async"], DirectedEdge["lambdacube-compiler", "base"], DirectedEdge["lambdacube-compiler", "base64-bytestring"], DirectedEdge["lambdacube-compiler", "bytestring"], DirectedEdge["lambdacube-compiler", "containers"], DirectedEdge["lambdacube-compiler", "deepseq"], DirectedEdge["lambdacube-compiler", "directory"], DirectedEdge["lambdacube-compiler", "exceptions"], DirectedEdge["lambdacube-compiler", "filepath"], DirectedEdge["lambdacube-compiler", "JuicyPixels"], DirectedEdge["lambdacube-compiler", "lambdacube-compiler"], DirectedEdge["lambdacube-compiler", "lambdacube-ir"], DirectedEdge["lambdacube-compiler", "megaparsec"], DirectedEdge["lambdacube-compiler", "monad-control"], DirectedEdge["lambdacube-compiler", "mtl"], DirectedEdge["lambdacube-compiler", "optparse-applicative"], DirectedEdge["lambdacube-compiler", "patience"], DirectedEdge["lambdacube-compiler", "pretty-show"], DirectedEdge["lambdacube-compiler", "process"], DirectedEdge["lambdacube-compiler", "QuickCheck"], DirectedEdge["lambdacube-compiler", "tasty"], DirectedEdge["lambdacube-compiler", "tasty-quickcheck"], DirectedEdge["lambdacube-compiler", "text"], DirectedEdge["lambdacube-compiler", "time"], DirectedEdge["lambdacube-compiler", "vect"], DirectedEdge["lambdacube-compiler", "vector"], DirectedEdge["lambdacube-compiler", "websockets"], DirectedEdge["lambdacube-compiler", "wl-pprint"], DirectedEdge["lambdacube-core", "lambdacube-compiler"], DirectedEdge["lambdacube-core", "lambdacube-ir"], DirectedEdge["lambdacube-core", "base"], DirectedEdge["lambdacube-core", "bytestring"], DirectedEdge["lambdacube-core", "bytestring-trie"], DirectedEdge["lambdacube-core", "containers"], DirectedEdge["lambdacube-core", "mtl"], DirectedEdge["lambdacube-core", "vector"], DirectedEdge["lambdacube-edsl", "base"], DirectedEdge["lambdacube-edsl", "bytestring"], DirectedEdge["lambdacube-edsl", "bytestring-trie"], DirectedEdge["lambdacube-edsl", "containers"], DirectedEdge["lambdacube-edsl", "ghc-prim"], DirectedEdge["lambdacube-edsl", "lambdacube-core"], DirectedEdge["lambdacube-edsl", "mtl"], DirectedEdge["lambdacube-edsl", "vector"], DirectedEdge["lambdacube-engine", "lambdacube-core"], DirectedEdge["lambdacube-engine", "array"], DirectedEdge["lambdacube-engine", "base"], DirectedEdge["lambdacube-engine", "binary"], DirectedEdge["lambdacube-engine", "bitmap"], DirectedEdge["lambdacube-engine", "bytestring"], DirectedEdge["lambdacube-engine", "bytestring-trie"], DirectedEdge["lambdacube-engine", "containers"], DirectedEdge["lambdacube-engine", "directory"], DirectedEdge["lambdacube-engine", "filepath"], DirectedEdge["lambdacube-engine", "mtl"], DirectedEdge["lambdacube-engine", "OpenGLRaw"], DirectedEdge["lambdacube-engine", "stb-image"], DirectedEdge["lambdacube-engine", "uulib"], DirectedEdge["lambdacube-engine", "vect"], DirectedEdge["lambdacube-engine", "vector"], DirectedEdge["lambdacube-engine", "vector-algorithms"], DirectedEdge["lambdacube-engine", "xml"], DirectedEdge["lambdacube-engine", "zip-archive"], DirectedEdge["lambdacube-examples", "lambdacube-samples"], DirectedEdge["lambdacube-examples", "base"], DirectedEdge["lambdacube-examples", "elerea"], DirectedEdge["lambdacube-examples", "GLFW-b"], DirectedEdge["lambdacube-examples", "lambdacube-engine"], DirectedEdge["lambdacube-examples", "mtl"], DirectedEdge["lambdacube-gl", "aeson"], DirectedEdge["lambdacube-gl", "base"], DirectedEdge["lambdacube-gl", "base64-bytestring"], DirectedEdge["lambdacube-gl", "bytestring"], DirectedEdge["lambdacube-gl", "containers"], DirectedEdge["lambdacube-gl", "exceptions"], DirectedEdge["lambdacube-gl", "GLFW-b"], DirectedEdge["lambdacube-gl", "JuicyPixels"], DirectedEdge["lambdacube-gl", "lambdacube-gl"], DirectedEdge["lambdacube-gl", "lambdacube-ir"], DirectedEdge["lambdacube-gl", "mtl"], DirectedEdge["lambdacube-gl", "network"], DirectedEdge["lambdacube-gl", "OpenGLRaw"], DirectedEdge["lambdacube-gl", "text"], DirectedEdge["lambdacube-gl", "time"], DirectedEdge["lambdacube-gl", "vector"], DirectedEdge["lambdacube-gl", "vector-algorithms"], DirectedEdge["lambdacube-gl", "websockets"], DirectedEdge["lambdacube-ir", "aeson"], DirectedEdge["lambdacube-ir", "base"], DirectedEdge["lambdacube-ir", "containers"], DirectedEdge["lambdacube-ir", "mtl"], DirectedEdge["lambdacube-ir", "text"], DirectedEdge["lambdacube-ir", "vector"], DirectedEdge["lambdacube-samples", "base"], DirectedEdge["lambdacube-samples", "bullet"], DirectedEdge["lambdacube-samples", "bytestring"], DirectedEdge["lambdacube-samples", "bytestring-trie"], DirectedEdge["lambdacube-samples", "elerea"], DirectedEdge["lambdacube-samples", "GLFW-b"], DirectedEdge["lambdacube-samples", "lambdacube-core"], DirectedEdge["lambdacube-samples", "lambdacube-edsl"], DirectedEdge["lambdacube-samples", "lambdacube-gl"], DirectedEdge["lambdacube-samples", "mtl"], DirectedEdge["lambdacube-samples", "OpenGLRaw"], DirectedEdge["lambdacube-samples", "stb-image"], DirectedEdge["lambdacube-samples", "time"], DirectedEdge["lambdacube-samples", "vect"], DirectedEdge["lambdacube-samples", "vector"], DirectedEdge["lambdatex", "async"], DirectedEdge["lambdatex", "base"], DirectedEdge["lambdatex", "containers"], DirectedEdge["lambdatex", "directory"], DirectedEdge["lambdatex", "HaTeX"], DirectedEdge["lambdatex", "mtl"], DirectedEdge["lambdatex", "text"], DirectedEdge["lambdatex", "transformers"], DirectedEdge["lambdatwit", "acid-state"], DirectedEdge["lambdatwit", "authenticate-oauth"], DirectedEdge["lambdatwit", "base"], DirectedEdge["lambdatwit", "bytestring"], DirectedEdge["lambdatwit", "case-insensitive"], DirectedEdge["lambdatwit", "conduit"], DirectedEdge["lambdatwit", "containers"], DirectedEdge["lambdatwit", "data-default"], DirectedEdge["lambdatwit", "exceptions"], DirectedEdge["lambdatwit", "hint"], DirectedEdge["lambdatwit", "http-conduit"], DirectedEdge["lambdatwit", "http-types"], DirectedEdge["lambdatwit", "lens"], DirectedEdge["lambdatwit", "MissingH"], DirectedEdge["lambdatwit", "monad-control"], DirectedEdge["lambdatwit", "monad-logger"], DirectedEdge["lambdatwit", "mtl"], DirectedEdge["lambdatwit", "mueval"], DirectedEdge["lambdatwit", "network-uri"], DirectedEdge["lambdatwit", "resourcet"], DirectedEdge["lambdatwit", "safecopy"], DirectedEdge["lambdatwit", "text"], DirectedEdge["lambdatwit", "transformers"], DirectedEdge["lambdatwit", "transformers-base"], DirectedEdge["lambdatwit", "twitter-conduit"], DirectedEdge["lambdatwit", "twitter-types"], DirectedEdge["lambdatwit", "utf8-string"], DirectedEdge["lambdaya-bus", "base"], DirectedEdge["lambdaya-bus", "clash-prelude"], DirectedEdge["lambdaya-bus", "Lambdaya"], DirectedEdge["lambdaya-bus", "template-haskell"], DirectedEdge["lambdiff", "attoparsec"], DirectedEdge["lambdiff", "attoparsec-enumerator"], DirectedEdge["lambdiff", "base"], DirectedEdge["lambdiff", "bytestring"], DirectedEdge["lambdiff", "enumerator"], DirectedEdge["lambdiff", "gtk"], DirectedEdge["lambdiff", "mtl"], DirectedEdge["lame-tester", "base"], DirectedEdge["lame-tester", "bifunctors"], DirectedEdge["lame-tester", "containers"], DirectedEdge["lame-tester", "semigroups"], DirectedEdge["lame-tester", "validation"], DirectedEdge["language-asn1", "base"], DirectedEdge["language-asn1", "HUnit"], DirectedEdge["language-asn1", "parsec"], DirectedEdge["language-asn1", "syb"], DirectedEdge["language-asn1", "test-framework"], DirectedEdge["language-asn1", "test-framework-hunit"], DirectedEdge["language-bash", "base"], DirectedEdge["language-bash", "parsec"], DirectedEdge["language-bash", "pretty"], DirectedEdge["language-bash", "transformers"], DirectedEdge["language-boogie", "ansi-terminal"], DirectedEdge["language-boogie", "base"], DirectedEdge["language-boogie", "cmdargs"], DirectedEdge["language-boogie", "containers"], DirectedEdge["language-boogie", "filepath"], DirectedEdge["language-boogie", "HUnit"], DirectedEdge["language-boogie", "language-boogie"], DirectedEdge["language-boogie", "lens"], DirectedEdge["language-boogie", "mtl"], DirectedEdge["language-boogie", "parsec"], DirectedEdge["language-boogie", "pretty"], DirectedEdge["language-boogie", "random"], DirectedEdge["language-boogie", "stream-monad"], DirectedEdge["language-boogie", "time"], DirectedEdge["language-boogie", "transformers"], DirectedEdge["language-c", "array"], DirectedEdge["language-c", "base"], DirectedEdge["language-c", "bytestring"], DirectedEdge["language-c", "containers"], DirectedEdge["language-c", "directory"], DirectedEdge["language-c", "filepath"], DirectedEdge["language-c", "pretty"], DirectedEdge["language-c", "process"], DirectedEdge["language-c", "syb"], DirectedEdge["language-c-comments", "array"], DirectedEdge["language-c-comments", "base"], DirectedEdge["language-c-comments", "language-c"], DirectedEdge["language-c-inline", "array"], DirectedEdge["language-c-inline", "base"], DirectedEdge["language-c-inline", "containers"], DirectedEdge["language-c-inline", "filepath"], DirectedEdge["language-c-inline", "language-c-quote"], DirectedEdge["language-c-inline", "mainland-pretty"], DirectedEdge["language-c-inline", "template-haskell"], DirectedEdge["language-c-quote", "array"], DirectedEdge["language-c-quote", "base"], DirectedEdge["language-c-quote", "bytestring"], DirectedEdge["language-c-quote", "containers"], DirectedEdge["language-c-quote", "exception-mtl"], DirectedEdge["language-c-quote", "exception-transformers"], DirectedEdge["language-c-quote", "filepath"], DirectedEdge["language-c-quote", "haskell-exp-parser"], DirectedEdge["language-c-quote", "haskell-src-meta"], DirectedEdge["language-c-quote", "mainland-pretty"], DirectedEdge["language-c-quote", "mtl"], DirectedEdge["language-c-quote", "srcloc"], DirectedEdge["language-c-quote", "syb"], DirectedEdge["language-c-quote", "symbol"], DirectedEdge["language-c-quote", "template-haskell"], DirectedEdge["language-cil", "base"], DirectedEdge["language-cil", "bool-extras"], DirectedEdge["language-css", "base"], DirectedEdge["language-css", "pretty"], DirectedEdge["language-dart", "base"], DirectedEdge["language-dart", "pretty"], DirectedEdge["language-dot", "base"], DirectedEdge["language-dot", "mtl"], DirectedEdge["language-dot", "parsec"], DirectedEdge["language-dot", "pretty"], DirectedEdge["language-ecmascript", "base"], DirectedEdge["language-ecmascript", "containers"], DirectedEdge["language-ecmascript", "data-default-class"], DirectedEdge["language-ecmascript", "Diff"], DirectedEdge["language-ecmascript", "mtl"], DirectedEdge["language-ecmascript", "parsec"], DirectedEdge["language-ecmascript", "QuickCheck"], DirectedEdge["language-ecmascript", "template-haskell"], DirectedEdge["language-ecmascript", "testing-feat"], DirectedEdge["language-ecmascript", "uniplate"], DirectedEdge["language-ecmascript", "wl-pprint"], DirectedEdge["language-ecmascript-analysis", "base"], DirectedEdge["language-ecmascript-analysis", "containers"], DirectedEdge["language-ecmascript-analysis", "language-ecmascript"], DirectedEdge["language-ecmascript-analysis", "parsec"], DirectedEdge["language-ecmascript-analysis", "uniplate"], DirectedEdge["language-eiffel", "array"], DirectedEdge["language-eiffel", "base"], DirectedEdge["language-eiffel", "binary"], DirectedEdge["language-eiffel", "bytestring"], DirectedEdge["language-eiffel", "containers"], DirectedEdge["language-eiffel", "deepseq"], DirectedEdge["language-eiffel", "derive"], DirectedEdge["language-eiffel", "ghc-prim"], DirectedEdge["language-eiffel", "hashable"], DirectedEdge["language-eiffel", "lens"], DirectedEdge["language-eiffel", "mtl"], DirectedEdge["language-eiffel", "parsec"], DirectedEdge["language-eiffel", "pretty"], DirectedEdge["language-eiffel", "text"], DirectedEdge["language-eiffel", "unordered-containers"], DirectedEdge["language-fortran", "array"], DirectedEdge["language-fortran", "base"], DirectedEdge["language-fortran", "haskell-src"], DirectedEdge["language-fortran", "parsec"], DirectedEdge["language-fortran", "syb"], DirectedEdge["language-gcl", "base"], DirectedEdge["language-gcl", "bifunctors"], DirectedEdge["language-gcl", "parsers"], DirectedEdge["language-glsl", "base"], DirectedEdge["language-glsl", "language-glsl"], DirectedEdge["language-glsl", "parsec"], DirectedEdge["language-glsl", "prettyclass"], DirectedEdge["language-go", "array"], DirectedEdge["language-go", "base"], DirectedEdge["language-go", "parsec"], DirectedEdge["language-go", "utf8-string"], DirectedEdge["language-guess", "base"], DirectedEdge["language-guess", "bytestring"], DirectedEdge["language-guess", "cereal"], DirectedEdge["language-guess", "containers"], DirectedEdge["language-guess", "utility-ht"], DirectedEdge["language-haskell-extract", "base"], DirectedEdge["language-haskell-extract", "regex-posix"], DirectedEdge["language-haskell-extract", "template-haskell"], DirectedEdge["language-java", "array"], DirectedEdge["language-java", "base"], DirectedEdge["language-java", "cpphs"], DirectedEdge["language-java", "parsec"], DirectedEdge["language-java", "pretty"], DirectedEdge["language-java", "syb"], DirectedEdge["language-java-classfile", "array"], DirectedEdge["language-java-classfile", "base"], DirectedEdge["language-java-classfile", "binary"], DirectedEdge["language-java-classfile", "bytestring"], DirectedEdge["language-java-classfile", "containers"], DirectedEdge["language-java-classfile", "data-flags"], DirectedEdge["language-java-classfile", "deepseq"], DirectedEdge["language-java-classfile", "language-java"], DirectedEdge["language-java-classfile", "LibZip"], DirectedEdge["language-java-classfile", "mtl"], DirectedEdge["language-java-classfile", "parsec"], DirectedEdge["language-java-classfile", "utf8-string"], DirectedEdge["language-javascript", "array"], DirectedEdge["language-javascript", "base"], DirectedEdge["language-javascript", "blaze-builder"], DirectedEdge["language-javascript", "bytestring"], DirectedEdge["language-javascript", "containers"], DirectedEdge["language-javascript", "mtl"], DirectedEdge["language-javascript", "text"], DirectedEdge["language-javascript", "utf8-string"], DirectedEdge["language-kort", "base"], DirectedEdge["language-kort", "base64-bytestring"], DirectedEdge["language-kort", "bytestring"], DirectedEdge["language-kort", "random"], DirectedEdge["language-kort", "razom-text-util"], DirectedEdge["language-kort", "regex-applicative"], DirectedEdge["language-kort", "smaoin"], DirectedEdge["language-kort", "text"], DirectedEdge["language-kort", "text-position"], DirectedEdge["language-kort", "utf8-string"], DirectedEdge["language-kort", "vocabulary-kadma"], DirectedEdge["language-lua", "array"], DirectedEdge["language-lua", "base"], DirectedEdge["language-lua", "bytestring"], DirectedEdge["language-lua", "deepseq"], DirectedEdge["language-lua", "text"], DirectedEdge["language-lua-qq", "base"], DirectedEdge["language-lua-qq", "haskell-src-meta"], DirectedEdge["language-lua-qq", "language-lua"], DirectedEdge["language-lua-qq", "mtl"], DirectedEdge["language-lua-qq", "syb"], DirectedEdge["language-lua-qq", "template-haskell"], DirectedEdge["language-lua-qq", "text"], DirectedEdge["language-lua2", "base"], DirectedEdge["language-lua2", "containers"], DirectedEdge["language-lua2", "Earley"], DirectedEdge["language-lua2", "lexer-applicative"], DirectedEdge["language-lua2", "microlens"], DirectedEdge["language-lua2", "optparse-applicative"], DirectedEdge["language-lua2", "regex-applicative"], DirectedEdge["language-lua2", "semigroups"], DirectedEdge["language-lua2", "srcloc"], DirectedEdge["language-lua2", "transformers"], DirectedEdge["language-lua2", "unordered-containers"], DirectedEdge["language-lua2", "wl-pprint"], DirectedEdge["language-mixal", "base"], DirectedEdge["language-mixal", "language-mixal"], DirectedEdge["language-mixal", "mtl"], DirectedEdge["language-mixal", "parsec"], DirectedEdge["language-mixal", "pretty"], DirectedEdge["language-nix", "base"], DirectedEdge["language-nix", "base-compat"], DirectedEdge["language-nix", "Cabal"], DirectedEdge["language-nix", "deepseq"], DirectedEdge["language-nix", "lens"], DirectedEdge["language-nix", "pretty"], DirectedEdge["language-nix", "QuickCheck"], DirectedEdge["language-objc", "array"], DirectedEdge["language-objc", "base"], DirectedEdge["language-objc", "bytestring"], DirectedEdge["language-objc", "containers"], DirectedEdge["language-objc", "directory"], DirectedEdge["language-objc", "filepath"], DirectedEdge["language-objc", "newtype"], DirectedEdge["language-objc", "pretty"], DirectedEdge["language-objc", "process"], DirectedEdge["language-objc", "syb"], DirectedEdge["language-openscad", "attoparsec"], DirectedEdge["language-openscad", "base"], DirectedEdge["language-openscad", "bytestring"], DirectedEdge["language-openscad", "language-openscad"], DirectedEdge["language-pig", "base"], DirectedEdge["language-pig", "Cabal"], DirectedEdge["language-pig", "containers"], DirectedEdge["language-pig", "parsec"], DirectedEdge["language-pig", "pretty-tree"], DirectedEdge["language-puppet", "aeson"], DirectedEdge["language-puppet", "ansi-wl-pprint"], DirectedEdge["language-puppet", "attoparsec"], DirectedEdge["language-puppet", "base"], DirectedEdge["language-puppet", "base16-bytestring"], DirectedEdge["language-puppet", "bytestring"], DirectedEdge["language-puppet", "case-insensitive"], DirectedEdge["language-puppet", "containers"], DirectedEdge["language-puppet", "cryptonite"], DirectedEdge["language-puppet", "directory"], DirectedEdge["language-puppet", "either"], DirectedEdge["language-puppet", "exceptions"], DirectedEdge["language-puppet", "filecache"], DirectedEdge["language-puppet", "formatting"], DirectedEdge["language-puppet", "Glob"], DirectedEdge["language-puppet", "hashable"], DirectedEdge["language-puppet", "hruby"], DirectedEdge["language-puppet", "hslogger"], DirectedEdge["language-puppet", "hslua"], DirectedEdge["language-puppet", "hspec"], DirectedEdge["language-puppet", "http-api-data"], DirectedEdge["language-puppet", "http-client"], DirectedEdge["language-puppet", "language-puppet"], DirectedEdge["language-puppet", "lens"], DirectedEdge["language-puppet", "lens-aeson"], DirectedEdge["language-puppet", "megaparsec"], DirectedEdge["language-puppet", "memory"], DirectedEdge["language-puppet", "mtl"], DirectedEdge["language-puppet", "operational"], DirectedEdge["language-puppet", "optparse-applicative"], DirectedEdge["language-puppet", "parallel-io"], DirectedEdge["language-puppet", "parsec"], DirectedEdge["language-puppet", "pcre-utils"], DirectedEdge["language-puppet", "process"], DirectedEdge["language-puppet", "random"], DirectedEdge["language-puppet", "regex-pcre-builtin"], DirectedEdge["language-puppet", "scientific"], DirectedEdge["language-puppet", "semigroups"], DirectedEdge["language-puppet", "servant"], DirectedEdge["language-puppet", "servant-client"], DirectedEdge["language-puppet", "split"], DirectedEdge["language-puppet", "stm"], DirectedEdge["language-puppet", "strict-base-types"], DirectedEdge["language-puppet", "text"], DirectedEdge["language-puppet", "time"], DirectedEdge["language-puppet", "transformers"], DirectedEdge["language-puppet", "unix"], DirectedEdge["language-puppet", "unordered-containers"], DirectedEdge["language-puppet", "vector"], DirectedEdge["language-puppet", "yaml"], DirectedEdge["language-python", "array"], DirectedEdge["language-python", "base"], DirectedEdge["language-python", "containers"], DirectedEdge["language-python", "monads-tf"], DirectedEdge["language-python", "pretty"], DirectedEdge["language-python", "transformers"], DirectedEdge["language-python", "utf8-string"], DirectedEdge["language-python-colour", "base"], DirectedEdge["language-python-colour", "language-python"], DirectedEdge["language-python-colour", "xhtml"], DirectedEdge["language-python-test", "base"], DirectedEdge["language-python-test", "language-python"], DirectedEdge["language-qux", "base"], DirectedEdge["language-qux", "containers"], DirectedEdge["language-qux", "either"], DirectedEdge["language-qux", "indents"], DirectedEdge["language-qux", "llvm-general-pure"], DirectedEdge["language-qux", "mtl"], DirectedEdge["language-qux", "parsec"], DirectedEdge["language-qux", "pretty"], DirectedEdge["language-qux", "transformers"], DirectedEdge["language-sh", "base"], DirectedEdge["language-sh", "directory"], DirectedEdge["language-sh", "filepath"], DirectedEdge["language-sh", "mtl"], DirectedEdge["language-sh", "parsec"], DirectedEdge["language-sh", "pcre-light"], DirectedEdge["language-slice", "base"], DirectedEdge["language-slice", "bytestring"], DirectedEdge["language-slice", "parsec"], DirectedEdge["language-slice", "transformers"], DirectedEdge["language-spelling", "array"], DirectedEdge["language-spelling", "base"], DirectedEdge["language-spelling", "bk-tree"], DirectedEdge["language-spelling", "bytestring"], DirectedEdge["language-spelling", "containers"], DirectedEdge["language-spelling", "ListLike"], DirectedEdge["language-spelling", "listlike-instances"], DirectedEdge["language-spelling", "text"], DirectedEdge["language-spelling", "tst"], DirectedEdge["language-spelling", "vector"], DirectedEdge["language-sqlite", "array"], DirectedEdge["language-sqlite", "base"], DirectedEdge["language-sqlite", "bytestring"], DirectedEdge["language-sqlite", "containers"], DirectedEdge["language-sqlite", "mtl"], DirectedEdge["language-sqlite", "template-haskell"], DirectedEdge["language-sqlite", "utf8-string"], DirectedEdge["language-thrift", "ansi-wl-pprint"], DirectedEdge["language-thrift", "base"], DirectedEdge["language-thrift", "megaparsec"], DirectedEdge["language-thrift", "scientific"], DirectedEdge["language-thrift", "text"], DirectedEdge["language-thrift", "transformers"], DirectedEdge["language-typescript", "base"], DirectedEdge["language-typescript", "containers"], DirectedEdge["language-typescript", "parsec"], DirectedEdge["language-typescript", "pretty"], DirectedEdge["language-vhdl", "base"], DirectedEdge["language-vhdl", "pretty"], DirectedEdge["language-webidl", "base"], DirectedEdge["language-webidl", "parsec"], DirectedEdge["language-webidl", "wl-pprint"], DirectedEdge["largeword", "base"], DirectedEdge["largeword", "binary"], DirectedEdge["lat", "ansi-wl-pprint"], DirectedEdge["lat", "base"], DirectedEdge["lat", "cmdargs"], DirectedEdge["lat", "directory"], DirectedEdge["lat", "filepath"], DirectedEdge["lat", "haxr"], DirectedEdge["lat", "HDBC"], DirectedEdge["lat", "hsini"], DirectedEdge["lat", "HTTP"], DirectedEdge["lat", "mtl"], DirectedEdge["lat", "old-locale"], DirectedEdge["lat", "regex-compat"], DirectedEdge["lat", "tagsoup"], DirectedEdge["lat", "time"], DirectedEdge["latest-npm-version", "aeson"], DirectedEdge["latest-npm-version", "base"], DirectedEdge["latest-npm-version", "cmdargs"], DirectedEdge["latest-npm-version", "http-client"], DirectedEdge["latest-npm-version", "http-types"], DirectedEdge["latest-npm-version", "lens"], DirectedEdge["latest-npm-version", "network"], DirectedEdge["latest-npm-version", "pipes"], DirectedEdge["latest-npm-version", "pipes-attoparsec"], DirectedEdge["latest-npm-version", "pipes-bytestring"], DirectedEdge["latest-npm-version", "pipes-http"], DirectedEdge["latest-npm-version", "text"], DirectedEdge["latest-npm-version", "text-format"], DirectedEdge["latest-npm-version", "transformers"], DirectedEdge["latex", "base"], DirectedEdge["latex", "containers"], DirectedEdge["latex", "utility-ht"], DirectedEdge["latex-formulae-hakyll", "base"], DirectedEdge["latex-formulae-hakyll", "hakyll"], DirectedEdge["latex-formulae-hakyll", "latex-formulae-image"], DirectedEdge["latex-formulae-hakyll", "latex-formulae-pandoc"], DirectedEdge["latex-formulae-hakyll", "lrucache"], DirectedEdge["latex-formulae-hakyll", "pandoc-types"], DirectedEdge["latex-formulae-image", "base"], DirectedEdge["latex-formulae-image", "directory"], DirectedEdge["latex-formulae-image", "errors"], DirectedEdge["latex-formulae-image", "filepath"], DirectedEdge["latex-formulae-image", "JuicyPixels"], DirectedEdge["latex-formulae-image", "process"], DirectedEdge["latex-formulae-image", "temporary"], DirectedEdge["latex-formulae-image", "transformers"], DirectedEdge["latex-formulae-image", "transformers-compat"], DirectedEdge["latex-formulae-pandoc", "base"], DirectedEdge["latex-formulae-pandoc", "base64-bytestring"], DirectedEdge["latex-formulae-pandoc", "bytestring"], DirectedEdge["latex-formulae-pandoc", "directory"], DirectedEdge["latex-formulae-pandoc", "filepath"], DirectedEdge["latex-formulae-pandoc", "JuicyPixels"], DirectedEdge["latex-formulae-pandoc", "latex-formulae-image"], DirectedEdge["latex-formulae-pandoc", "latex-formulae-pandoc"], DirectedEdge["latex-formulae-pandoc", "pandoc-types"], DirectedEdge["lattices", "base"], DirectedEdge["lattices", "containers"], DirectedEdge["lattices", "deepseq"], DirectedEdge["lattices", "ghc-prim"], DirectedEdge["lattices", "hashable"], DirectedEdge["lattices", "semigroups"], DirectedEdge["lattices", "tagged"], DirectedEdge["lattices", "universe-base"], DirectedEdge["lattices", "universe-reverse-instances"], DirectedEdge["lattices", "unordered-containers"], DirectedEdge["lattices", "void"], DirectedEdge["launchpad-control", "array"], DirectedEdge["launchpad-control", "base"], DirectedEdge["launchpad-control", "containers"], DirectedEdge["launchpad-control", "hmidi"], DirectedEdge["launchpad-control", "launchpad-control"], DirectedEdge["launchpad-control", "mtl"], DirectedEdge["launchpad-control", "transformers"], DirectedEdge["lax", "base"], DirectedEdge["layers", "base"], DirectedEdge["layers", "transformers"], DirectedEdge["layers-game", "base"], DirectedEdge["layers-game", "cmdargs"], DirectedEdge["layers-game", "composition"], DirectedEdge["layers-game", "data-lens"], DirectedEdge["layers-game", "Gamgine"], DirectedEdge["layers-game", "GLFW-b"], DirectedEdge["layers-game", "ListZipper"], DirectedEdge["layers-game", "mtl"], DirectedEdge["layers-game", "OpenGLRaw"], DirectedEdge["layers-game", "pretty-show"], DirectedEdge["layout", "base"], DirectedEdge["layout", "convertible"], DirectedEdge["layout", "hinduce-missingh"], DirectedEdge["layout-bootstrap", "base"], DirectedEdge["layout-bootstrap", "blaze-html"], DirectedEdge["layout-bootstrap", "containers"], DirectedEdge["layout-bootstrap", "text"], DirectedEdge["lazy-csv", "base"], DirectedEdge["lazy-csv", "bytestring"], DirectedEdge["lazy-io", "base"], DirectedEdge["lazyarray", "array"], DirectedEdge["lazyarray", "base"], DirectedEdge["lazyio", "base"], DirectedEdge["lazyio", "special-functors"], DirectedEdge["lazyio", "transformers"], DirectedEdge["lazyio", "unsafe"], DirectedEdge["lazysmallcheck", "base"], DirectedEdge["lazysplines", "base"], DirectedEdge["lbfgs", "array"], DirectedEdge["lbfgs", "base"], DirectedEdge["lca", "base"], DirectedEdge["lcs", "array"], DirectedEdge["lcs", "base"], DirectedEdge["lda", "base"], DirectedEdge["lda", "containers"], DirectedEdge["lda", "ghc-prim"], DirectedEdge["lda", "mtl"], DirectedEdge["lda", "random-fu"], DirectedEdge["lda", "random-source"], DirectedEdge["lda", "rvar"], DirectedEdge["lda", "vector"], DirectedEdge["ldap-client", "asn1-encoding"], DirectedEdge["ldap-client", "asn1-types"], DirectedEdge["ldap-client", "async"], DirectedEdge["ldap-client", "base"], DirectedEdge["ldap-client", "bytestring"], DirectedEdge["ldap-client", "connection"], DirectedEdge["ldap-client", "containers"], DirectedEdge["ldap-client", "network"], DirectedEdge["ldap-client", "semigroups"], DirectedEdge["ldap-client", "stm"], DirectedEdge["ldap-client", "text"], DirectedEdge["ldif", "base"], DirectedEdge["ldif", "bytestring"], DirectedEdge["ldif", "cmdargs"], DirectedEdge["ldif", "containers"], DirectedEdge["ldif", "directory"], DirectedEdge["ldif", "filepath"], DirectedEdge["ldif", "ldif"], DirectedEdge["ldif", "parsec"], DirectedEdge["ldif", "rosezipper"], DirectedEdge["leaf", "base"], DirectedEdge["leaf", "blaze-html"], DirectedEdge["leaf", "directory"], DirectedEdge["leaf", "filepath"], DirectedEdge["leaf", "pandoc"], DirectedEdge["leaf", "split"], DirectedEdge["leaky", "base"], DirectedEdge["leaky", "cpphs"], DirectedEdge["leaky", "deepseq-bounded"], DirectedEdge["leaky", "deepseq-generics"], DirectedEdge["leaky", "generics-sop"], DirectedEdge["leaky", "random"], DirectedEdge["leaky", "seqaid"], DirectedEdge["leaky", "template-haskell"], DirectedEdge["leancheck", "base"], DirectedEdge["leancheck", "template-haskell"], DirectedEdge["leankit-api", "aeson"], DirectedEdge["leankit-api", "base"], DirectedEdge["leankit-api", "bytestring"], DirectedEdge["leankit-api", "colour"], DirectedEdge["leankit-api", "curl"], DirectedEdge["leankit-api", "split"], DirectedEdge["leapseconds-announced", "base"], DirectedEdge["leapseconds-announced", "time"], DirectedEdge["learn", "base"], DirectedEdge["learn", "containers"], DirectedEdge["learn-physics", "base"], DirectedEdge["learn-physics", "gloss"], DirectedEdge["learn-physics", "gnuplot"], DirectedEdge["learn-physics", "hmatrix"], DirectedEdge["learn-physics", "learn-physics"], DirectedEdge["learn-physics", "linear"], DirectedEdge["learn-physics", "not-gloss"], DirectedEdge["learn-physics", "polynomial"], DirectedEdge["learn-physics", "spatial-math"], DirectedEdge["learn-physics", "vector-space"], DirectedEdge["learn-physics-examples", "base"], DirectedEdge["learn-physics-examples", "gloss"], DirectedEdge["learn-physics-examples", "gnuplot"], DirectedEdge["learn-physics-examples", "learn-physics"], DirectedEdge["learn-physics-examples", "not-gloss"], DirectedEdge["learn-physics-examples", "spatial-math"], DirectedEdge["learning-hmm", "base"], DirectedEdge["learning-hmm", "containers"], DirectedEdge["learning-hmm", "deepseq"], DirectedEdge["learning-hmm", "hmatrix"], DirectedEdge["learning-hmm", "random-fu"], DirectedEdge["learning-hmm", "random-source"], DirectedEdge["learning-hmm", "vector"], DirectedEdge["leetify", "base"], DirectedEdge["leetify", "containers"], DirectedEdge["leksah", "array"], DirectedEdge["leksah", "base"], DirectedEdge["leksah", "base-compat"], DirectedEdge["leksah", "binary"], DirectedEdge["leksah", "binary-shared"], DirectedEdge["leksah", "blaze-html"], DirectedEdge["leksah", "bytestring"], DirectedEdge["leksah", "Cabal"], DirectedEdge["leksah", "conduit"], DirectedEdge["leksah", "containers"], DirectedEdge["leksah", "cpphs"], DirectedEdge["leksah", "deepseq"], DirectedEdge["leksah", "directory"], DirectedEdge["leksah", "dyre"], DirectedEdge["leksah", "executable-path"], DirectedEdge["leksah", "filepath"], DirectedEdge["leksah", "ghc"], DirectedEdge["leksah", "ghcjs-codemirror"], DirectedEdge["leksah", "ghcjs-dom"], DirectedEdge["leksah", "gio"], DirectedEdge["leksah", "glib"], DirectedEdge["leksah", "gtk3-mac-integration"], DirectedEdge["leksah", "haskell-src-exts"], DirectedEdge["leksah", "hgettext"], DirectedEdge["leksah", "hlint"], DirectedEdge["leksah", "hslogger"], DirectedEdge["leksah", "jsaddle"], DirectedEdge["leksah", "leksah"], DirectedEdge["leksah", "leksah-server"], DirectedEdge["leksah", "lens"], DirectedEdge["leksah", "ltk"], DirectedEdge["leksah", "mtl"], DirectedEdge["leksah", "network"], DirectedEdge["leksah", "network-uri"], DirectedEdge["leksah", "old-time"], DirectedEdge["leksah", "parsec"], DirectedEdge["leksah", "pretty"], DirectedEdge["leksah", "pretty-show"], DirectedEdge["leksah", "QuickCheck"], DirectedEdge["leksah", "regex-base"], DirectedEdge["leksah", "regex-tdfa"], DirectedEdge["leksah", "regex-tdfa-text"], DirectedEdge["leksah", "setlocale"], DirectedEdge["leksah", "shakespeare"], DirectedEdge["leksah", "stm"], DirectedEdge["leksah", "strict"], DirectedEdge["leksah", "text"], DirectedEdge["leksah", "time"], DirectedEdge["leksah", "transformers"], DirectedEdge["leksah", "unix"], DirectedEdge["leksah", "utf8-string"], DirectedEdge["leksah", "vado"], DirectedEdge["leksah", "vcsgui"], DirectedEdge["leksah", "vcswrapper"], DirectedEdge["leksah", "webkitgtk3-javascriptcore"], DirectedEdge["leksah", "yi"], DirectedEdge["leksah", "yi-language"], DirectedEdge["leksah", "yi-rope"], DirectedEdge["leksah-server", "attoparsec"], DirectedEdge["leksah-server", "base"], DirectedEdge["leksah-server", "bin-package-db"], DirectedEdge["leksah-server", "binary"], DirectedEdge["leksah-server", "binary-shared"], DirectedEdge["leksah-server", "bytestring"], DirectedEdge["leksah-server", "Cabal"], DirectedEdge["leksah-server", "conduit"], DirectedEdge["leksah-server", "conduit-extra"], DirectedEdge["leksah-server", "containers"], DirectedEdge["leksah-server", "deepseq"], DirectedEdge["leksah-server", "directory"], DirectedEdge["leksah-server", "executable-path"], DirectedEdge["leksah-server", "filepath"], DirectedEdge["leksah-server", "ghc"], DirectedEdge["leksah-server", "haddock"], DirectedEdge["leksah-server", "haddock-api"], DirectedEdge["leksah-server", "haddock-library"], DirectedEdge["leksah-server", "hslogger"], DirectedEdge["leksah-server", "HTTP"], DirectedEdge["leksah-server", "leksah-server"], DirectedEdge["leksah-server", "ltk"], DirectedEdge["leksah-server", "network"], DirectedEdge["leksah-server", "network-uri"], DirectedEdge["leksah-server", "parsec"], DirectedEdge["leksah-server", "pretty"], DirectedEdge["leksah-server", "process"], DirectedEdge["leksah-server", "resourcet"], DirectedEdge["leksah-server", "strict"], DirectedEdge["leksah-server", "text"], DirectedEdge["leksah-server", "time"], DirectedEdge["leksah-server", "transformers"], DirectedEdge["leksah-server", "unix"], DirectedEdge["lendingclub", "aeson"], DirectedEdge["lendingclub", "base"], DirectedEdge["lendingclub", "blaze-builder"], DirectedEdge["lendingclub", "bytestring"], DirectedEdge["lendingclub", "HsOpenSSL"], DirectedEdge["lendingclub", "http-streams"], DirectedEdge["lendingclub", "io-streams"], DirectedEdge["lendingclub", "mtl"], DirectedEdge["lendingclub", "scientific"], DirectedEdge["lendingclub", "text"], DirectedEdge["lendingclub", "vector"], DirectedEdge["lens", "array"], DirectedEdge["lens", "base"], DirectedEdge["lens", "base-orphans"], DirectedEdge["lens", "bifunctors"], DirectedEdge["lens", "bytestring"], DirectedEdge["lens", "comonad"], DirectedEdge["lens", "containers"], DirectedEdge["lens", "contravariant"], DirectedEdge["lens", "distributive"], DirectedEdge["lens", "exceptions"], DirectedEdge["lens", "filepath"], DirectedEdge["lens", "free"], DirectedEdge["lens", "ghc-prim"], DirectedEdge["lens", "hashable"], DirectedEdge["lens", "kan-extensions"], DirectedEdge["lens", "mtl"], DirectedEdge["lens", "parallel"], DirectedEdge["lens", "profunctors"], DirectedEdge["lens", "reflection"], DirectedEdge["lens", "semigroupoids"], DirectedEdge["lens", "semigroups"], DirectedEdge["lens", "tagged"], DirectedEdge["lens", "template-haskell"], DirectedEdge["lens", "text"], DirectedEdge["lens", "transformers"], DirectedEdge["lens", "transformers-compat"], DirectedEdge["lens", "unordered-containers"], DirectedEdge["lens", "vector"], DirectedEdge["lens", "void"], DirectedEdge["lens-action", "base"], DirectedEdge["lens-action", "comonad"], DirectedEdge["lens-action", "contravariant"], DirectedEdge["lens-action", "lens"], DirectedEdge["lens-action", "mtl"], DirectedEdge["lens-action", "profunctors"], DirectedEdge["lens-action", "semigroupoids"], DirectedEdge["lens-action", "semigroups"], DirectedEdge["lens-action", "transformers"], DirectedEdge["lens-aeson", "aeson"], DirectedEdge["lens-aeson", "attoparsec"], DirectedEdge["lens-aeson", "base"], DirectedEdge["lens-aeson", "bytestring"], DirectedEdge["lens-aeson", "lens"], DirectedEdge["lens-aeson", "scientific"], DirectedEdge["lens-aeson", "text"], DirectedEdge["lens-aeson", "unordered-containers"], DirectedEdge["lens-aeson", "vector"], DirectedEdge["lens-datetime", "base"], DirectedEdge["lens-datetime", "lens"], DirectedEdge["lens-datetime", "time"], DirectedEdge["lens-family", "base"], DirectedEdge["lens-family", "containers"], DirectedEdge["lens-family", "lens-family-core"], DirectedEdge["lens-family", "mtl"], DirectedEdge["lens-family", "transformers"], DirectedEdge["lens-family-core", "base"], DirectedEdge["lens-family-core", "containers"], DirectedEdge["lens-family-core", "transformers"], DirectedEdge["lens-family-th", "base"], DirectedEdge["lens-family-th", "template-haskell"], DirectedEdge["lens-prelude", "array"], DirectedEdge["lens-prelude", "base"], DirectedEdge["lens-prelude", "bytestring"], DirectedEdge["lens-prelude", "containers"], DirectedEdge["lens-prelude", "contravariant"], DirectedEdge["lens-prelude", "either"], DirectedEdge["lens-prelude", "hashable"], DirectedEdge["lens-prelude", "lens"], DirectedEdge["lens-prelude", "mtl"], DirectedEdge["lens-prelude", "text"], DirectedEdge["lens-prelude", "time"], DirectedEdge["lens-prelude", "transformers"], DirectedEdge["lens-prelude", "unordered-containers"], DirectedEdge["lens-prelude", "vector"], DirectedEdge["lens-properties", "base"], DirectedEdge["lens-properties", "lens"], DirectedEdge["lens-properties", "QuickCheck"], DirectedEdge["lens-properties", "transformers"], DirectedEdge["lens-regex", "array"], DirectedEdge["lens-regex", "base"], DirectedEdge["lens-regex", "lens"], DirectedEdge["lens-regex", "lens-regex"], DirectedEdge["lens-regex", "regex-base"], DirectedEdge["lens-regex", "regex-posix"], DirectedEdge["lens-regex", "template-haskell"], DirectedEdge["lens-simple", "base"], DirectedEdge["lens-simple", "lens-family"], DirectedEdge["lens-simple", "lens-family-core"], DirectedEdge["lens-simple", "lens-family-th"], DirectedEdge["lens-simple", "mtl"], DirectedEdge["lens-simple", "transformers"], DirectedEdge["lens-sop", "base"], DirectedEdge["lens-sop", "fclabels"], DirectedEdge["lens-sop", "generics-sop"], DirectedEdge["lens-sop", "transformers"], DirectedEdge["lens-text-encoding", "base"], DirectedEdge["lens-text-encoding", "bytestring"], DirectedEdge["lens-text-encoding", "lens"], DirectedEdge["lens-text-encoding", "text"], DirectedEdge["lens-time", "base"], DirectedEdge["lens-time", "lens"], DirectedEdge["lens-time", "time"], DirectedEdge["lens-tutorial", "base"], DirectedEdge["lens-tutorial", "lens"], DirectedEdge["lens-utils", "base"], DirectedEdge["lens-utils", "lens"], DirectedEdge["lenses", "base"], DirectedEdge["lenses", "mtl"], DirectedEdge["lenses", "template-haskell"], DirectedEdge["lensref", "base"], DirectedEdge["lensref", "containers"], DirectedEdge["lensref", "lens"], DirectedEdge["lensref", "monad-control"], DirectedEdge["lensref", "mtl"], DirectedEdge["lensref", "operational"], DirectedEdge["lensref", "transformers"], DirectedEdge["lentil", "ansi-wl-pprint"], DirectedEdge["lentil", "base"], DirectedEdge["lentil", "csv"], DirectedEdge["lentil", "directory"], DirectedEdge["lentil", "filemanip"], DirectedEdge["lentil", "filepath"], DirectedEdge["lentil", "natural-sort"], DirectedEdge["lentil", "optparse-applicative"], DirectedEdge["lentil", "parsec"], DirectedEdge["lentil", "regex-tdfa"], DirectedEdge["lenz", "base"], DirectedEdge["lenz", "base-unicode-symbols"], DirectedEdge["lenz", "transformers"], DirectedEdge["lenz-template", "base"], DirectedEdge["lenz-template", "base-unicode-symbols"], DirectedEdge["lenz-template", "containers"], DirectedEdge["lenz-template", "lenz"], DirectedEdge["lenz-template", "template-haskell"], DirectedEdge["level-monad", "base"], DirectedEdge["level-monad", "fmlist"], DirectedEdge["leveldb-haskell", "async"], DirectedEdge["leveldb-haskell", "base"], DirectedEdge["leveldb-haskell", "bytestring"], DirectedEdge["leveldb-haskell", "data-default"], DirectedEdge["leveldb-haskell", "exceptions"], DirectedEdge["leveldb-haskell", "filepath"], DirectedEdge["leveldb-haskell", "leveldb-haskell"], DirectedEdge["leveldb-haskell", "resourcet"], DirectedEdge["leveldb-haskell", "transformers"], DirectedEdge["leveldb-haskell-fork", "async"], DirectedEdge["leveldb-haskell-fork", "base"], DirectedEdge["leveldb-haskell-fork", "bytestring"], DirectedEdge["leveldb-haskell-fork", "data-default"], DirectedEdge["leveldb-haskell-fork", "filepath"], DirectedEdge["leveldb-haskell-fork", "leveldb-haskell-fork"], DirectedEdge["leveldb-haskell-fork", "resourcet"], DirectedEdge["leveldb-haskell-fork", "transformers"], DirectedEdge["levmar", "base"], DirectedEdge["levmar", "bindings-levmar"], DirectedEdge["levmar", "hmatrix"], DirectedEdge["levmar", "vector"], DirectedEdge["levmar-chart", "base"], DirectedEdge["levmar-chart", "Chart"], DirectedEdge["levmar-chart", "colour"], DirectedEdge["levmar-chart", "data-accessor"], DirectedEdge["levmar-chart", "levmar"], DirectedEdge["levmar-chart", "random"], DirectedEdge["lexer-applicative", "base"], DirectedEdge["lexer-applicative", "regex-applicative"], DirectedEdge["lexer-applicative", "srcloc"], DirectedEdge["lfst", "base"], DirectedEdge["lfst", "containers"], DirectedEdge["lfst", "doctest"], DirectedEdge["lfst", "lattices"], DirectedEdge["lgtk", "array"], DirectedEdge["lgtk", "base"], DirectedEdge["lgtk", "cairo"], DirectedEdge["lgtk", "colour"], DirectedEdge["lgtk", "containers"], DirectedEdge["lgtk", "diagrams-cairo"], DirectedEdge["lgtk", "diagrams-lib"], DirectedEdge["lgtk", "directory"], DirectedEdge["lgtk", "filepath"], DirectedEdge["lgtk", "fsnotify"], DirectedEdge["lgtk", "GLFW-b"], DirectedEdge["lgtk", "groups"], DirectedEdge["lgtk", "gtk"], DirectedEdge["lgtk", "lens"], DirectedEdge["lgtk", "lensref"], DirectedEdge["lgtk", "lgtk"], DirectedEdge["lgtk", "monad-control"], DirectedEdge["lgtk", "mtl"], DirectedEdge["lgtk", "OpenGLRaw"], DirectedEdge["lgtk", "operational"], DirectedEdge["lgtk", "random"], DirectedEdge["lgtk", "random-shuffle"], DirectedEdge["lgtk", "semigroups"], DirectedEdge["lgtk", "system-filepath"], DirectedEdge["lgtk", "transformers"], DirectedEdge["lgtk", "vector"], DirectedEdge["lhae", "array"], DirectedEdge["lhae", "base"], DirectedEdge["lhae", "containers"], DirectedEdge["lhae", "directory"], DirectedEdge["lhae", "filepath"], DirectedEdge["lhae", "hgettext"], DirectedEdge["lhae", "mtl"], DirectedEdge["lhae", "parsec"], DirectedEdge["lhae", "process"], DirectedEdge["lhae", "setlocale"], DirectedEdge["lhae", "utf8-string"], DirectedEdge["lhae", "wx"], DirectedEdge["lhae", "wxcore"], DirectedEdge["lhc", "ansi-wl-pprint"], DirectedEdge["lhc", "base"], DirectedEdge["lhc", "binary"], DirectedEdge["lhc", "bytestring"], DirectedEdge["lhc", "bytestring-trie"], DirectedEdge["lhc", "Cabal"], DirectedEdge["lhc", "containers"], DirectedEdge["lhc", "core"], DirectedEdge["lhc", "derive"], DirectedEdge["lhc", "digest"], DirectedEdge["lhc", "directory"], DirectedEdge["lhc", "extensible-exceptions"], DirectedEdge["lhc", "filepath"], DirectedEdge["lhc", "HUnit"], DirectedEdge["lhc", "mtl"], DirectedEdge["lhc", "parallel"], DirectedEdge["lhc", "pretty"], DirectedEdge["lhc", "process"], DirectedEdge["lhc", "QuickCheck"], DirectedEdge["lhc", "test-framework"], DirectedEdge["lhc", "test-framework-hunit"], DirectedEdge["lhc", "test-framework-quickcheck"], DirectedEdge["lhc", "time"], DirectedEdge["lhc", "unix"], DirectedEdge["lhc", "xhtml"], DirectedEdge["lhe", "bytestring"], DirectedEdge["lhe", "HaXml"], DirectedEdge["lhe", "lha"], DirectedEdge["lhs2TeX-hl", "base"], DirectedEdge["lhs2TeX-hl", "cmdargs"], DirectedEdge["lhs2TeX-hl", "filepath"], DirectedEdge["lhs2TeX-hl", "haskell-src-exts"], DirectedEdge["lhs2TeX-hl", "syb"], DirectedEdge["lhs2TeX-hl", "uu-parsinglib"], DirectedEdge["lhs2html", "base"], DirectedEdge["lhs2html", "directory"], DirectedEdge["lhs2html", "filepath"], DirectedEdge["lhs2html", "Glob"], DirectedEdge["lhs2tex", "base"], DirectedEdge["lhs2tex", "directory"], DirectedEdge["lhs2tex", "filepath"], DirectedEdge["lhs2tex", "mtl"], DirectedEdge["lhs2tex", "process"], DirectedEdge["lhs2tex", "regex-compat"], DirectedEdge["lhslatex", "base"], DirectedEdge["lhslatex", "directory"], DirectedEdge["lhslatex", "filepath"], DirectedEdge["lhslatex", "process"], DirectedEdge["lhslatex", "regex-posix"], DirectedEdge["libGenI", "GenI"], DirectedEdge["libGenI", "base"], DirectedEdge["libGenI", "binary"], DirectedEdge["libGenI", "containers"], DirectedEdge["libGenI", "HUnit"], DirectedEdge["libGenI", "mtl"], DirectedEdge["libGenI", "parsec"], DirectedEdge["libGenI", "process"], DirectedEdge["libGenI", "QuickCheck"], DirectedEdge["libarchive-conduit", "base"], DirectedEdge["libarchive-conduit", "bytestring"], DirectedEdge["libarchive-conduit", "conduit"], DirectedEdge["libarchive-conduit", "resourcet"], DirectedEdge["libarchive-conduit", "transformers"], DirectedEdge["libconfig", "base"], DirectedEdge["libconfig", "binary"], DirectedEdge["libconfig", "cereal"], DirectedEdge["libconfig", "cereal-text"], DirectedEdge["libconfig", "deepseq"], DirectedEdge["libconfig", "hashable"], DirectedEdge["libconfig", "profunctors"], DirectedEdge["libconfig", "text"], DirectedEdge["libconfig", "text-binary"], DirectedEdge["libconfig", "transformers"], DirectedEdge["libconfig", "transformers-compat"], DirectedEdge["libcspm", "array"], DirectedEdge["libcspm", "base"], DirectedEdge["libcspm", "bytestring"], DirectedEdge["libcspm", "containers"], DirectedEdge["libcspm", "deepseq"], DirectedEdge["libcspm", "directory"], DirectedEdge["libcspm", "filepath"], DirectedEdge["libcspm", "graph-wrapper"], DirectedEdge["libcspm", "hashable"], DirectedEdge["libcspm", "hashtables"], DirectedEdge["libcspm", "mtl"], DirectedEdge["libcspm", "pretty"], DirectedEdge["libcspm", "text"], DirectedEdge["libcspm", "value-supply"], DirectedEdge["libexpect", "base"], DirectedEdge["libexpect", "unix"], DirectedEdge["libffi", "base"], DirectedEdge["libffi", "bytestring"], DirectedEdge["libgit", "base"], DirectedEdge["libgit", "mtl"], DirectedEdge["libgit", "process"], DirectedEdge["libgraph", "array"], DirectedEdge["libgraph", "base"], DirectedEdge["libgraph", "containers"], DirectedEdge["libgraph", "monads-tf"], DirectedEdge["libgraph", "process"], DirectedEdge["libgraph", "union-find"], DirectedEdge["libhbb", "aeson"], DirectedEdge["libhbb", "base"], DirectedEdge["libhbb", "bytestring"], DirectedEdge["libhbb", "directory"], DirectedEdge["libhbb", "filepath"], DirectedEdge["libhbb", "ghc"], DirectedEdge["libhbb", "ghc-paths"], DirectedEdge["libhbb", "libhbb"], DirectedEdge["libhbb", "mtl"], DirectedEdge["libhbb", "process"], DirectedEdge["libhbb", "syb"], DirectedEdge["libhbb", "text"], DirectedEdge["libhbb", "time"], DirectedEdge["libhbb", "unordered-containers"], DirectedEdge["libinfluxdb", "base"], DirectedEdge["libinfluxdb", "bytestring"], DirectedEdge["libinfluxdb", "clock"], DirectedEdge["libinfluxdb", "containers"], DirectedEdge["libinfluxdb", "http-client"], DirectedEdge["libinfluxdb", "http-client-tls"], DirectedEdge["libinfluxdb", "http-types"], DirectedEdge["libinfluxdb", "resource-pool"], DirectedEdge["libinfluxdb", "stm"], DirectedEdge["libinfluxdb", "text"], DirectedEdge["libjenkins", "async"], DirectedEdge["libjenkins", "attoparsec"], DirectedEdge["libjenkins", "base"], DirectedEdge["libjenkins", "bytestring"], DirectedEdge["libjenkins", "conduit"], DirectedEdge["libjenkins", "containers"], DirectedEdge["libjenkins", "free"], DirectedEdge["libjenkins", "http-client"], DirectedEdge["libjenkins", "http-conduit"], DirectedEdge["libjenkins", "http-types"], DirectedEdge["libjenkins", "monad-control"], DirectedEdge["libjenkins", "mtl"], DirectedEdge["libjenkins", "network"], DirectedEdge["libjenkins", "network-uri"], DirectedEdge["libjenkins", "profunctors"], DirectedEdge["libjenkins", "resourcet"], DirectedEdge["libjenkins", "text"], DirectedEdge["liblastfm", "aeson"], DirectedEdge["liblastfm", "base"], DirectedEdge["liblastfm", "bytestring"], DirectedEdge["liblastfm", "cereal"], DirectedEdge["liblastfm", "containers"], DirectedEdge["liblastfm", "cryptonite"], DirectedEdge["liblastfm", "http-client"], DirectedEdge["liblastfm", "http-client-tls"], DirectedEdge["liblastfm", "network-uri"], DirectedEdge["liblastfm", "profunctors"], DirectedEdge["liblastfm", "semigroups"], DirectedEdge["liblastfm", "text"], DirectedEdge["liblastfm", "transformers"], DirectedEdge["liblastfm", "xml-conduit"], DirectedEdge["liblinear-enumerator", "base"], DirectedEdge["liblinear-enumerator", "bindings-DSL"], DirectedEdge["liblinear-enumerator", "enumerator"], DirectedEdge["liblinear-enumerator", "mtl"], DirectedEdge["liblinear-enumerator", "vector"], DirectedEdge["libltdl", "base"], DirectedEdge["libltdl", "libltdl"], DirectedEdge["libmpd", "attoparsec"], DirectedEdge["libmpd", "base"], DirectedEdge["libmpd", "bytestring"], DirectedEdge["libmpd", "containers"], DirectedEdge["libmpd", "data-default-class"], DirectedEdge["libmpd", "filepath"], DirectedEdge["libmpd", "mtl"], DirectedEdge["libmpd", "network"], DirectedEdge["libmpd", "old-locale"], DirectedEdge["libmpd", "text"], DirectedEdge["libmpd", "time"], DirectedEdge["libmpd", "utf8-string"], DirectedEdge["libnotify", "base"], DirectedEdge["libnotify", "bytestring"], DirectedEdge["libnotify", "glib"], DirectedEdge["libnotify", "gtk"], DirectedEdge["libnvvm", "base"], DirectedEdge["libnvvm", "bytestring"], DirectedEdge["libnvvm", "cuda"], DirectedEdge["liboleg", "base"], DirectedEdge["liboleg", "CC-delcont"], DirectedEdge["liboleg", "containers"], DirectedEdge["liboleg", "mtl"], DirectedEdge["liboleg", "template-haskell"], DirectedEdge["liboleg", "unix"], DirectedEdge["libpafe", "base"], DirectedEdge["libpafe", "transformers"], DirectedEdge["libpq", "base"], DirectedEdge["libpq", "bytestring"], DirectedEdge["libpq", "unix"], DirectedEdge["librandomorg", "base"], DirectedEdge["librandomorg", "bytestring"], DirectedEdge["librandomorg", "curl"], DirectedEdge["librato", "aeson"], DirectedEdge["librato", "attoparsec"], DirectedEdge["librato", "base"], DirectedEdge["librato", "bytestring"], DirectedEdge["librato", "either"], DirectedEdge["librato", "http-client"], DirectedEdge["librato", "http-conduit"], DirectedEdge["librato", "http-types"], DirectedEdge["librato", "mtl"], DirectedEdge["librato", "resourcet"], DirectedEdge["librato", "text"], DirectedEdge["librato", "unordered-containers"], DirectedEdge["librato", "uri-templater"], DirectedEdge["librato", "vector"], DirectedEdge["libravatar", "base"], DirectedEdge["libravatar", "bytestring"], DirectedEdge["libravatar", "cryptonite"], DirectedEdge["libravatar", "data-default-class"], DirectedEdge["libravatar", "dns"], DirectedEdge["libravatar", "memory"], DirectedEdge["libravatar", "random"], DirectedEdge["libravatar", "text"], DirectedEdge["libravatar", "uri-bytestring"], DirectedEdge["libravatar", "url"], DirectedEdge["libroman", "base"], DirectedEdge["libroman", "split"], DirectedEdge["libssh2", "base"], DirectedEdge["libssh2", "bytestring"], DirectedEdge["libssh2", "filepath"], DirectedEdge["libssh2", "network"], DirectedEdge["libssh2", "syb"], DirectedEdge["libssh2", "time"], DirectedEdge["libssh2", "utf8-string"], DirectedEdge["libssh2-conduit", "base"], DirectedEdge["libssh2-conduit", "conduit"], DirectedEdge["libssh2-conduit", "monad-control"], DirectedEdge["libssh2-conduit", "stm"], DirectedEdge["libssh2-conduit", "transformers"], DirectedEdge["libstackexchange", "aeson"], DirectedEdge["libstackexchange", "attoparsec"], DirectedEdge["libstackexchange", "base"], DirectedEdge["libstackexchange", "bytestring"], DirectedEdge["libstackexchange", "containers"], DirectedEdge["libstackexchange", "data-default"], DirectedEdge["libstackexchange", "http-conduit"], DirectedEdge["libstackexchange", "profunctors"], DirectedEdge["libstackexchange", "text"], DirectedEdge["libsystemd-daemon", "base"], DirectedEdge["libsystemd-daemon", "bytestring"], DirectedEdge["libsystemd-daemon", "network"], DirectedEdge["libsystemd-daemon", "utf8-string"], DirectedEdge["libsystemd-journal", "base"], DirectedEdge["libsystemd-journal", "bytestring"], DirectedEdge["libsystemd-journal", "hashable"], DirectedEdge["libsystemd-journal", "hsyslog"], DirectedEdge["libsystemd-journal", "pipes"], DirectedEdge["libsystemd-journal", "pipes-safe"], DirectedEdge["libsystemd-journal", "text"], DirectedEdge["libsystemd-journal", "transformers"], DirectedEdge["libsystemd-journal", "uniplate"], DirectedEdge["libsystemd-journal", "unix-bytestring"], DirectedEdge["libsystemd-journal", "unordered-containers"], DirectedEdge["libsystemd-journal", "uuid"], DirectedEdge["libsystemd-journal", "vector"], DirectedEdge["libtagc", "base"], DirectedEdge["libtagc", "bytestring"], DirectedEdge["libtagc", "glib"], DirectedEdge["libvirt-hs", "base"], DirectedEdge["libvirt-hs", "syb"], DirectedEdge["libvirt-hs", "unix"], DirectedEdge["libvorbis", "base"], DirectedEdge["libvorbis", "bytestring"], DirectedEdge["libvorbis", "cpu"], DirectedEdge["libxls", "base"], DirectedEdge["libxls", "bindings-DSL"], DirectedEdge["libxml", "base"], DirectedEdge["libxml", "bytestring"], DirectedEdge["libxml", "mtl"], DirectedEdge["libxml-enumerator", "base"], DirectedEdge["libxml-enumerator", "bytestring"], DirectedEdge["libxml-enumerator", "enumerator"], DirectedEdge["libxml-enumerator", "libxml-sax"], DirectedEdge["libxml-enumerator", "text"], DirectedEdge["libxml-enumerator", "transformers"], DirectedEdge["libxml-enumerator", "xml-types"], DirectedEdge["libxml-sax", "base"], DirectedEdge["libxml-sax", "bytestring"], DirectedEdge["libxml-sax", "text"], DirectedEdge["libxml-sax", "xml-types"], DirectedEdge["libxslt", "base"], DirectedEdge["libxslt", "bytestring"], DirectedEdge["libxslt", "libxml"], DirectedEdge["life", "array"], DirectedEdge["life", "base"], DirectedEdge["life", "GLUT"], DirectedEdge["life", "OpenGL"], DirectedEdge["life", "random"], DirectedEdge["lift-generics", "base"], DirectedEdge["lift-generics", "generic-deriving"], DirectedEdge["lift-generics", "ghc-prim"], DirectedEdge["lift-generics", "template-haskell"], DirectedEdge["lifted-async", "async"], DirectedEdge["lifted-async", "base"], DirectedEdge["lifted-async", "constraints"], DirectedEdge["lifted-async", "lifted-base"], DirectedEdge["lifted-async", "monad-control"], DirectedEdge["lifted-async", "transformers-base"], DirectedEdge["lifted-base", "base"], DirectedEdge["lifted-base", "monad-control"], DirectedEdge["lifted-base", "transformers-base"], DirectedEdge["lifted-threads", "base"], DirectedEdge["lifted-threads", "monad-control"], DirectedEdge["lifted-threads", "threads"], DirectedEdge["lifted-threads", "transformers-base"], DirectedEdge["lifter", "array"], DirectedEdge["lifter", "base"], DirectedEdge["lifter", "bitmap"], DirectedEdge["lifter", "bytestring"], DirectedEdge["lifter", "directory"], DirectedEdge["lifter", "filepath"], DirectedEdge["lifter", "gloss"], DirectedEdge["lifter", "mtl"], DirectedEdge["lifter", "stb-image"], DirectedEdge["ligature", "base"], DirectedEdge["ligature", "text"], DirectedEdge["ligd", "base"], DirectedEdge["lighttpd-conf", "array"], DirectedEdge["lighttpd-conf", "base"], DirectedEdge["lighttpd-conf", "bytestring"], DirectedEdge["lighttpd-conf", "packedstring"], DirectedEdge["lighttpd-conf", "pretty"], DirectedEdge["lighttpd-conf", "template-haskell"], DirectedEdge["lighttpd-conf-qq", "array"], DirectedEdge["lighttpd-conf-qq", "base"], DirectedEdge["lighttpd-conf-qq", "bytestring"], DirectedEdge["lighttpd-conf-qq", "haskell-src-exts"], DirectedEdge["lighttpd-conf-qq", "lighttpd-conf"], DirectedEdge["lighttpd-conf-qq", "template-haskell"], DirectedEdge["lilypond", "base"], DirectedEdge["lilypond", "data-default"], DirectedEdge["lilypond", "music-dynamics-literal"], DirectedEdge["lilypond", "music-pitch-literal"], DirectedEdge["lilypond", "prettify"], DirectedEdge["lilypond", "process"], DirectedEdge["lilypond", "semigroups"], DirectedEdge["lilypond", "vector-space"], DirectedEdge["limp", "base"], DirectedEdge["limp", "containers"], DirectedEdge["limp-cbc", "base"], DirectedEdge["limp-cbc", "containers"], DirectedEdge["limp-cbc", "limp"], DirectedEdge["limp-cbc", "vector"], DirectedEdge["lin-alg", "base"], DirectedEdge["lin-alg", "NumInstances"], DirectedEdge["lin-alg", "vector"], DirectedEdge["linda", "base"], DirectedEdge["linda", "hmatrix"], DirectedEdge["linda", "HUnit"], DirectedEdge["lindenmayer", "base"], DirectedEdge["line-break", "base"], DirectedEdge["line2pdf", "base"], DirectedEdge["line2pdf", "bytestring"], DirectedEdge["line2pdf", "containers"], DirectedEdge["linear", "adjunctions"], DirectedEdge["linear", "base"], DirectedEdge["linear", "base-orphans"], DirectedEdge["linear", "binary"], DirectedEdge["linear", "bytes"], DirectedEdge["linear", "cereal"], DirectedEdge["linear", "containers"], DirectedEdge["linear", "deepseq"], DirectedEdge["linear", "distributive"], DirectedEdge["linear", "ghc-prim"], DirectedEdge["linear", "hashable"], DirectedEdge["linear", "lens"], DirectedEdge["linear", "reflection"], DirectedEdge["linear", "semigroupoids"], DirectedEdge["linear", "semigroups"], DirectedEdge["linear", "tagged"], DirectedEdge["linear", "template-haskell"], DirectedEdge["linear", "transformers"], DirectedEdge["linear", "transformers-compat"], DirectedEdge["linear", "unordered-containers"], DirectedEdge["linear", "vector"], DirectedEdge["linear", "void"], DirectedEdge["linear-accelerate", "accelerate"], DirectedEdge["linear-accelerate", "base"], DirectedEdge["linear-accelerate", "lens"], DirectedEdge["linear-accelerate", "linear"], DirectedEdge["linear-algebra-cblas", "base"], DirectedEdge["linear-algebra-cblas", "QuickCheck"], DirectedEdge["linear-algebra-cblas", "storable-complex"], DirectedEdge["linear-algebra-cblas", "test-framework"], DirectedEdge["linear-algebra-cblas", "vector"], DirectedEdge["linear-circuit", "base"], DirectedEdge["linear-circuit", "comfort-graph"], DirectedEdge["linear-circuit", "containers"], DirectedEdge["linear-circuit", "hmatrix"], DirectedEdge["linear-circuit", "utility-ht"], DirectedEdge["linear-grammar", "base"], DirectedEdge["linear-grammar", "containers"], DirectedEdge["linear-grammar", "QuickCheck"], DirectedEdge["linear-maps", "base"], DirectedEdge["linear-maps", "containers"], DirectedEdge["linear-maps", "HUnit"], DirectedEdge["linear-opengl", "base"], DirectedEdge["linear-opengl", "distributive"], DirectedEdge["linear-opengl", "lens"], DirectedEdge["linear-opengl", "linear"], DirectedEdge["linear-opengl", "OpenGL"], DirectedEdge["linear-opengl", "OpenGLRaw"], DirectedEdge["linear-opengl", "tagged"], DirectedEdge["linear-vect", "base"], DirectedEdge["linear-vect", "random"], DirectedEdge["linearEqSolver", "base"], DirectedEdge["linearEqSolver", "sbv"], DirectedEdge["linearscan", "base"], DirectedEdge["linearscan", "containers"], DirectedEdge["linearscan", "ghc-prim"], DirectedEdge["linearscan", "mtl"], DirectedEdge["linearscan", "transformers"], DirectedEdge["linearscan-hoopl", "base"], DirectedEdge["linearscan-hoopl", "containers"], DirectedEdge["linearscan-hoopl", "free"], DirectedEdge["linearscan-hoopl", "hoopl"], DirectedEdge["linearscan-hoopl", "linearscan"], DirectedEdge["linearscan-hoopl", "QuickCheck"], DirectedEdge["linearscan-hoopl", "transformers"], DirectedEdge["linebreak", "base"], DirectedEdge["linebreak", "hyphenation"], DirectedEdge["linguistic-ordinals", "base"], DirectedEdge["linguistic-ordinals", "text"], DirectedEdge["link-relations", "base"], DirectedEdge["link-relations", "bytestring"], DirectedEdge["link-relations", "hashable"], DirectedEdge["link-relations", "unordered-containers"], DirectedEdge["link-relations", "uri-bytestring"], DirectedEdge["linkchk", "base"], DirectedEdge["linkchk", "gtk"], DirectedEdge["linkchk", "popenhs"], DirectedEdge["linkchk", "regex-compat"], DirectedEdge["linkchk", "unix"], DirectedEdge["linkcore", "base"], DirectedEdge["linkcore", "containers"], DirectedEdge["linkcore", "extcore"], DirectedEdge["linkcore", "filepath"], DirectedEdge["linkcore", "process"], DirectedEdge["linkedhashmap", "base"], DirectedEdge["linkedhashmap", "containers"], DirectedEdge["linkedhashmap", "deepseq"], DirectedEdge["linkedhashmap", "hashable"], DirectedEdge["linkedhashmap", "unordered-containers"], DirectedEdge["linklater", "aeson"], DirectedEdge["linklater", "base"], DirectedEdge["linklater", "base-prelude"], DirectedEdge["linklater", "bytestring"], DirectedEdge["linklater", "containers"], DirectedEdge["linklater", "http-types"], DirectedEdge["linklater", "text"], DirectedEdge["linklater", "wai"], DirectedEdge["linklater", "wreq"], DirectedEdge["linode", "aeson"], DirectedEdge["linode", "async"], DirectedEdge["linode", "base"], DirectedEdge["linode", "binary"], DirectedEdge["linode", "bytestring"], DirectedEdge["linode", "containers"], DirectedEdge["linode", "errors"], DirectedEdge["linode", "lens"], DirectedEdge["linode", "process"], DirectedEdge["linode", "retry"], DirectedEdge["linode", "safe"], DirectedEdge["linode", "text"], DirectedEdge["linode", "transformers"], DirectedEdge["linode", "wreq"], DirectedEdge["linux-blkid", "base"], DirectedEdge["linux-blkid", "monad-control"], DirectedEdge["linux-blkid", "transformers"], DirectedEdge["linux-blkid", "transformers-base"], DirectedEdge["linux-cgroup", "base"], DirectedEdge["linux-cgroup", "filepath"], DirectedEdge["linux-evdev", "base"], DirectedEdge["linux-evdev", "bytestring"], DirectedEdge["linux-evdev", "time"], DirectedEdge["linux-evdev", "unix"], DirectedEdge["linux-file-extents", "base"], DirectedEdge["linux-file-extents", "linux-file-extents"], DirectedEdge["linux-file-extents", "unix"], DirectedEdge["linux-inotify", "base"], DirectedEdge["linux-inotify", "bytestring"], DirectedEdge["linux-inotify", "hashable"], DirectedEdge["linux-inotify", "unix"], DirectedEdge["linux-kmod", "base"], DirectedEdge["linux-kmod", "directory"], DirectedEdge["linux-mount", "base"], DirectedEdge["linux-mount", "bytestring"], DirectedEdge["linux-namespaces", "base"], DirectedEdge["linux-namespaces", "unix"], DirectedEdge["linux-perf", "base"], DirectedEdge["linux-perf", "binary"], DirectedEdge["linux-perf", "bytestring"], DirectedEdge["linux-perf", "containers"], DirectedEdge["linux-perf", "directory"], DirectedEdge["linux-perf", "filepath"], DirectedEdge["linux-perf", "ghc-events"], DirectedEdge["linux-perf", "linux-perf"], DirectedEdge["linux-perf", "mtl"], DirectedEdge["linux-perf", "pretty"], DirectedEdge["linux-perf", "process"], DirectedEdge["linux-perf", "unix"], DirectedEdge["linux-ptrace", "base"], DirectedEdge["linux-ptrace", "bytestring"], DirectedEdge["linux-ptrace", "mmap"], DirectedEdge["linux-ptrace", "posix-waitpid"], DirectedEdge["linux-ptrace", "process"], DirectedEdge["linux-ptrace", "template-haskell"], DirectedEdge["linux-ptrace", "unix"], DirectedEdge["linux-xattr", "base"], DirectedEdge["linux-xattr", "bytestring"], DirectedEdge["linx-gateway", "base"], DirectedEdge["linx-gateway", "binary"], DirectedEdge["linx-gateway", "bytestring"], DirectedEdge["linx-gateway", "network"], DirectedEdge["linx-gateway", "time"], DirectedEdge["lio", "base"], DirectedEdge["lio", "bytestring"], DirectedEdge["lio", "containers"], DirectedEdge["lio", "hashable"], DirectedEdge["lio-eci11", "lio"], DirectedEdge["lio-eci11", "array"], DirectedEdge["lio-eci11", "base"], DirectedEdge["lio-eci11", "bytestring"], DirectedEdge["lio-eci11", "containers"], DirectedEdge["lio-eci11", "directory"], DirectedEdge["lio-eci11", "filepath"], DirectedEdge["lio-eci11", "mtl"], DirectedEdge["lio-eci11", "old-time"], DirectedEdge["lio-eci11", "SHA"], DirectedEdge["lio-eci11", "time"], DirectedEdge["lio-eci11", "unix"], DirectedEdge["lio-fs", "base"], DirectedEdge["lio-fs", "bytestring"], DirectedEdge["lio-fs", "containers"], DirectedEdge["lio-fs", "directory"], DirectedEdge["lio-fs", "filepath"], DirectedEdge["lio-fs", "lio"], DirectedEdge["lio-fs", "SHA"], DirectedEdge["lio-fs", "unix"], DirectedEdge["lio-fs", "xattr"], DirectedEdge["lio-simple", "aeson"], DirectedEdge["lio-simple", "attoparsec"], DirectedEdge["lio-simple", "base"], DirectedEdge["lio-simple", "base64-bytestring"], DirectedEdge["lio-simple", "bytestring"], DirectedEdge["lio-simple", "cmdargs"], DirectedEdge["lio-simple", "conduit"], DirectedEdge["lio-simple", "directory"], DirectedEdge["lio-simple", "filepath"], DirectedEdge["lio-simple", "http-types"], DirectedEdge["lio-simple", "lio"], DirectedEdge["lio-simple", "simple"], DirectedEdge["lio-simple", "simple-templates"], DirectedEdge["lio-simple", "text"], DirectedEdge["lio-simple", "wai"], DirectedEdge["lio-simple", "wai-extra"], DirectedEdge["lio-simple", "warp"], DirectedEdge["lipsum-gen", "base"], DirectedEdge["lipsum-gen", "QuickCheck"], DirectedEdge["liquid-fixpoint", "ansi-terminal"], DirectedEdge["liquid-fixpoint", "array"], DirectedEdge["liquid-fixpoint", "ascii-progress"], DirectedEdge["liquid-fixpoint", "async"], DirectedEdge["liquid-fixpoint", "attoparsec"], DirectedEdge["liquid-fixpoint", "base"], DirectedEdge["liquid-fixpoint", "bifunctors"], DirectedEdge["liquid-fixpoint", "binary"], DirectedEdge["liquid-fixpoint", "boxes"], DirectedEdge["liquid-fixpoint", "bytestring"], DirectedEdge["liquid-fixpoint", "cereal"], DirectedEdge["liquid-fixpoint", "cmdargs"], DirectedEdge["liquid-fixpoint", "containers"], DirectedEdge["liquid-fixpoint", "deepseq"], DirectedEdge["liquid-fixpoint", "directory"], DirectedEdge["liquid-fixpoint", "dotgen"], DirectedEdge["liquid-fixpoint", "fgl"], DirectedEdge["liquid-fixpoint", "fgl-visualize"], DirectedEdge["liquid-fixpoint", "filemanip"], DirectedEdge["liquid-fixpoint", "filepath"], DirectedEdge["liquid-fixpoint", "ghc-prim"], DirectedEdge["liquid-fixpoint", "hashable"], DirectedEdge["liquid-fixpoint", "intern"], DirectedEdge["liquid-fixpoint", "liquid-fixpoint"], DirectedEdge["liquid-fixpoint", "located-base"], DirectedEdge["liquid-fixpoint", "mtl"], DirectedEdge["liquid-fixpoint", "parallel"], DirectedEdge["liquid-fixpoint", "parsec"], DirectedEdge["liquid-fixpoint", "pretty"], DirectedEdge["liquid-fixpoint", "process"], DirectedEdge["liquid-fixpoint", "syb"], DirectedEdge["liquid-fixpoint", "text"], DirectedEdge["liquid-fixpoint", "text-format"], DirectedEdge["liquid-fixpoint", "transformers"], DirectedEdge["liquid-fixpoint", "unordered-containers"], DirectedEdge["liquidhaskell", "aeson"], DirectedEdge["liquidhaskell", "array"], DirectedEdge["liquidhaskell", "base"], DirectedEdge["liquidhaskell", "bifunctors"], DirectedEdge["liquidhaskell", "bytestring"], DirectedEdge["liquidhaskell", "Cabal"], DirectedEdge["liquidhaskell", "cereal"], DirectedEdge["liquidhaskell", "cmdargs"], DirectedEdge["liquidhaskell", "containers"], DirectedEdge["liquidhaskell", "cpphs"], DirectedEdge["liquidhaskell", "daemons"], DirectedEdge["liquidhaskell", "data-default"], DirectedEdge["liquidhaskell", "deepseq"], DirectedEdge["liquidhaskell", "Diff"], DirectedEdge["liquidhaskell", "directory"], DirectedEdge["liquidhaskell", "filepath"], DirectedEdge["liquidhaskell", "fingertree"], DirectedEdge["liquidhaskell", "ghc"], DirectedEdge["liquidhaskell", "ghc-paths"], DirectedEdge["liquidhaskell", "hashable"], DirectedEdge["liquidhaskell", "hpc"], DirectedEdge["liquidhaskell", "hscolour"], DirectedEdge["liquidhaskell", "liquid-fixpoint"], DirectedEdge["liquidhaskell", "liquidhaskell"], DirectedEdge["liquidhaskell", "located-base"], DirectedEdge["liquidhaskell", "mtl"], DirectedEdge["liquidhaskell", "network"], DirectedEdge["liquidhaskell", "parsec"], DirectedEdge["liquidhaskell", "pretty"], DirectedEdge["liquidhaskell", "process"], DirectedEdge["liquidhaskell", "syb"], DirectedEdge["liquidhaskell", "template-haskell"], DirectedEdge["liquidhaskell", "temporary"], DirectedEdge["liquidhaskell", "text"], DirectedEdge["liquidhaskell", "time"], DirectedEdge["liquidhaskell", "unix"], DirectedEdge["liquidhaskell", "unordered-containers"], DirectedEdge["liquidhaskell", "vector"], DirectedEdge["liquidhaskell-cabal", "base"], DirectedEdge["liquidhaskell-cabal", "Cabal"], DirectedEdge["liquidhaskell-cabal", "filepath"], DirectedEdge["liquidhaskell-cabal-demo", "base"], DirectedEdge["liquidhaskell-cabal-demo", "liquidhaskell-cabal"], DirectedEdge["lispparser", "base"], DirectedEdge["lispparser", "parsec"], DirectedEdge["list-extras", "base"], DirectedEdge["list-fusion-probe", "base"], DirectedEdge["list-grouping", "split"], DirectedEdge["list-grouping", "base"], DirectedEdge["list-mux", "base"], DirectedEdge["list-prompt", "ansi-terminal"], DirectedEdge["list-prompt", "base"], DirectedEdge["list-prompt", "data-default"], DirectedEdge["list-prompt", "list-prompt"], DirectedEdge["list-prompt", "stm"], DirectedEdge["list-prompt", "terminal-size"], DirectedEdge["list-prompt", "vty"], DirectedEdge["list-remote-forwards", "base"], DirectedEdge["list-remote-forwards", "bytestring"], DirectedEdge["list-remote-forwards", "cmdargs"], DirectedEdge["list-remote-forwards", "configurator"], DirectedEdge["list-remote-forwards", "containers"], DirectedEdge["list-remote-forwards", "directory"], DirectedEdge["list-remote-forwards", "dns"], DirectedEdge["list-remote-forwards", "filepath"], DirectedEdge["list-remote-forwards", "HDBC"], DirectedEdge["list-remote-forwards", "HDBC-postgresql"], DirectedEdge["list-remote-forwards", "MissingH"], DirectedEdge["list-remote-forwards", "tasty"], DirectedEdge["list-remote-forwards", "tasty-hunit"], DirectedEdge["list-remote-forwards", "tasty-quickcheck"], DirectedEdge["list-t", "base"], DirectedEdge["list-t", "base-prelude"], DirectedEdge["list-t", "mmorph"], DirectedEdge["list-t", "monad-control"], DirectedEdge["list-t", "mtl"], DirectedEdge["list-t", "transformers"], DirectedEdge["list-t", "transformers-base"], DirectedEdge["list-t-attoparsec", "attoparsec"], DirectedEdge["list-t-attoparsec", "base-prelude"], DirectedEdge["list-t-attoparsec", "either"], DirectedEdge["list-t-attoparsec", "list-t"], DirectedEdge["list-t-attoparsec", "text"], DirectedEdge["list-t-attoparsec", "transformers"], DirectedEdge["list-t-html-parser", "base-prelude"], DirectedEdge["list-t-html-parser", "case-insensitive"], DirectedEdge["list-t-html-parser", "conversion"], DirectedEdge["list-t-html-parser", "conversion-case-insensitive"], DirectedEdge["list-t-html-parser", "conversion-text"], DirectedEdge["list-t-html-parser", "either"], DirectedEdge["list-t-html-parser", "html-entities"], DirectedEdge["list-t-html-parser", "html-tokenizer"], DirectedEdge["list-t-html-parser", "list-t"], DirectedEdge["list-t-html-parser", "mtl-prelude"], DirectedEdge["list-t-html-parser", "text"], DirectedEdge["list-t-html-parser", "xml-types"], DirectedEdge["list-t-http-client", "base-prelude"], DirectedEdge["list-t-http-client", "bytestring"], DirectedEdge["list-t-http-client", "http-client"], DirectedEdge["list-t-http-client", "list-t"], DirectedEdge["list-t-http-client", "mtl-prelude"], DirectedEdge["list-t-libcurl", "base"], DirectedEdge["list-t-libcurl", "base-prelude"], DirectedEdge["list-t-libcurl", "bytestring"], DirectedEdge["list-t-libcurl", "curlhs"], DirectedEdge["list-t-libcurl", "either"], DirectedEdge["list-t-libcurl", "list-t"], DirectedEdge["list-t-libcurl", "mtl-prelude"], DirectedEdge["list-t-libcurl", "resource-pool"], DirectedEdge["list-t-libcurl", "stm"], DirectedEdge["list-t-text", "base-prelude"], DirectedEdge["list-t-text", "bytestring"], DirectedEdge["list-t-text", "list-t"], DirectedEdge["list-t-text", "mtl-prelude"], DirectedEdge["list-t-text", "text"], DirectedEdge["list-tries", "base"], DirectedEdge["list-tries", "binary"], DirectedEdge["list-tries", "ChasingBottoms"], DirectedEdge["list-tries", "containers"], DirectedEdge["list-tries", "dlist"], DirectedEdge["list-tries", "HUnit"], DirectedEdge["list-tries", "QuickCheck"], DirectedEdge["list-tries", "template-haskell"], DirectedEdge["list-tries", "test-framework"], DirectedEdge["list-tries", "test-framework-hunit"], DirectedEdge["list-zip-def", "base"], DirectedEdge["listlike-instances", "ListLike"], DirectedEdge["listlike-instances", "base"], DirectedEdge["listlike-instances", "bytestring"], DirectedEdge["listlike-instances", "ListLike"], DirectedEdge["listlike-instances", "text"], DirectedEdge["listlike-instances", "vector"], DirectedEdge["lists", "base"], DirectedEdge["lists", "list-extras"], DirectedEdge["lists", "split"], DirectedEdge["listsafe", "base"], DirectedEdge["listsafe", "exceptions"], DirectedEdge["lit", "base"], DirectedEdge["lit", "blaze-html"], DirectedEdge["lit", "blaze-markup"], DirectedEdge["lit", "cheapskate"], DirectedEdge["lit", "directory"], DirectedEdge["lit", "filepath"], DirectedEdge["lit", "highlighting-kate"], DirectedEdge["lit", "parsec"], DirectedEdge["lit", "text"], DirectedEdge["lit", "time"], DirectedEdge["lit", "unordered-containers"], DirectedEdge["literals", "base"], DirectedEdge["live-sequencer", "alsa-core"], DirectedEdge["live-sequencer", "alsa-seq"], DirectedEdge["live-sequencer", "base"], DirectedEdge["live-sequencer", "bytestring"], DirectedEdge["live-sequencer", "cgi"], DirectedEdge["live-sequencer", "concurrent-split"], DirectedEdge["live-sequencer", "containers"], DirectedEdge["live-sequencer", "data-accessor"], DirectedEdge["live-sequencer", "data-accessor-transformers"], DirectedEdge["live-sequencer", "directory"], DirectedEdge["live-sequencer", "event-list"], DirectedEdge["live-sequencer", "explicit-exception"], DirectedEdge["live-sequencer", "filepath"], DirectedEdge["live-sequencer", "html"], DirectedEdge["live-sequencer", "httpd-shed"], DirectedEdge["live-sequencer", "midi"], DirectedEdge["live-sequencer", "midi-alsa"], DirectedEdge["live-sequencer", "network"], DirectedEdge["live-sequencer", "non-empty"], DirectedEdge["live-sequencer", "non-negative"], DirectedEdge["live-sequencer", "parsec"], DirectedEdge["live-sequencer", "pretty"], DirectedEdge["live-sequencer", "process"], DirectedEdge["live-sequencer", "stm"], DirectedEdge["live-sequencer", "stm-split"], DirectedEdge["live-sequencer", "strict"], DirectedEdge["live-sequencer", "transformers"], DirectedEdge["live-sequencer", "unix"], DirectedEdge["live-sequencer", "utility-ht"], DirectedEdge["live-sequencer", "wx"], DirectedEdge["live-sequencer", "wxcore"], DirectedEdge["ll-picosat", "base"], DirectedEdge["llrbtree", "base"], DirectedEdge["llsd", "base"], DirectedEdge["llsd", "binary"], DirectedEdge["llsd", "bytestring"], DirectedEdge["llsd", "cereal"], DirectedEdge["llsd", "containers"], DirectedEdge["llsd", "dataenc"], DirectedEdge["llsd", "ghc-prim"], DirectedEdge["llsd", "hexpat"], DirectedEdge["llsd", "HUnit"], DirectedEdge["llsd", "mtl"], DirectedEdge["llsd", "network"], DirectedEdge["llsd", "old-locale"], DirectedEdge["llsd", "parsec"], DirectedEdge["llsd", "pretty"], DirectedEdge["llsd", "QuickCheck"], DirectedEdge["llsd", "random"], DirectedEdge["llsd", "template-haskell"], DirectedEdge["llsd", "text"], DirectedEdge["llsd", "time"], DirectedEdge["llsd", "utf8-string"], DirectedEdge["llsd", "uuid"], DirectedEdge["llvm", "llvm-general"], DirectedEdge["llvm", "base"], DirectedEdge["llvm", "bytestring"], DirectedEdge["llvm", "containers"], DirectedEdge["llvm", "directory"], DirectedEdge["llvm", "llvm-base"], DirectedEdge["llvm", "mtl"], DirectedEdge["llvm", "process"], DirectedEdge["llvm", "type-level"], DirectedEdge["llvm-analysis", "array"], DirectedEdge["llvm-analysis", "base"], DirectedEdge["llvm-analysis", "boomerang"], DirectedEdge["llvm-analysis", "bytestring"], DirectedEdge["llvm-analysis", "containers"], DirectedEdge["llvm-analysis", "deepseq"], DirectedEdge["llvm-analysis", "directory"], DirectedEdge["llvm-analysis", "failure"], DirectedEdge["llvm-analysis", "fgl"], DirectedEdge["llvm-analysis", "filemanip"], DirectedEdge["llvm-analysis", "filepath"], DirectedEdge["llvm-analysis", "GenericPretty"], DirectedEdge["llvm-analysis", "graphviz"], DirectedEdge["llvm-analysis", "hashable"], DirectedEdge["llvm-analysis", "hoopl"], DirectedEdge["llvm-analysis", "HUnit"], DirectedEdge["llvm-analysis", "ifscs"], DirectedEdge["llvm-analysis", "itanium-abi"], DirectedEdge["llvm-analysis", "lens"], DirectedEdge["llvm-analysis", "llvm-base-types"], DirectedEdge["llvm-analysis", "monad-par"], DirectedEdge["llvm-analysis", "process"], DirectedEdge["llvm-analysis", "temporary"], DirectedEdge["llvm-analysis", "test-framework"], DirectedEdge["llvm-analysis", "test-framework-hunit"], DirectedEdge["llvm-analysis", "text"], DirectedEdge["llvm-analysis", "transformers"], DirectedEdge["llvm-analysis", "uniplate"], DirectedEdge["llvm-analysis", "unordered-containers"], DirectedEdge["llvm-analysis", "vector"], DirectedEdge["llvm-base", "llvm-general"], DirectedEdge["llvm-base", "base"], DirectedEdge["llvm-base", "mtl"], DirectedEdge["llvm-base-types", "base"], DirectedEdge["llvm-base-types", "containers"], DirectedEdge["llvm-base-types", "deepseq"], DirectedEdge["llvm-base-types", "dwarf"], DirectedEdge["llvm-base-types", "failure"], DirectedEdge["llvm-base-types", "GenericPretty"], DirectedEdge["llvm-base-types", "graphviz"], DirectedEdge["llvm-base-types", "hashable"], DirectedEdge["llvm-base-types", "pretty"], DirectedEdge["llvm-base-types", "regex-tdfa"], DirectedEdge["llvm-base-types", "text"], DirectedEdge["llvm-base-types", "transformers"], DirectedEdge["llvm-base-types", "unordered-containers"], DirectedEdge["llvm-base-types", "vector"], DirectedEdge["llvm-base-util", "base"], DirectedEdge["llvm-base-util", "llvm-base"], DirectedEdge["llvm-data-interop", "array"], DirectedEdge["llvm-data-interop", "base"], DirectedEdge["llvm-data-interop", "bytestring"], DirectedEdge["llvm-data-interop", "containers"], DirectedEdge["llvm-data-interop", "data-default"], DirectedEdge["llvm-data-interop", "deepseq"], DirectedEdge["llvm-data-interop", "dwarf"], DirectedEdge["llvm-data-interop", "hashable"], DirectedEdge["llvm-data-interop", "hashtables"], DirectedEdge["llvm-data-interop", "llvm-base-types"], DirectedEdge["llvm-data-interop", "loch-th"], DirectedEdge["llvm-data-interop", "mtl"], DirectedEdge["llvm-data-interop", "text"], DirectedEdge["llvm-data-interop", "transformers"], DirectedEdge["llvm-data-interop", "unification-fd"], DirectedEdge["llvm-data-interop", "unordered-containers"], DirectedEdge["llvm-data-interop", "vector"], DirectedEdge["llvm-extra", "base"], DirectedEdge["llvm-extra", "containers"], DirectedEdge["llvm-extra", "cpuid"], DirectedEdge["llvm-extra", "llvm-extra"], DirectedEdge["llvm-extra", "llvm-tf"], DirectedEdge["llvm-extra", "non-empty"], DirectedEdge["llvm-extra", "parsec"], DirectedEdge["llvm-extra", "tfp"], DirectedEdge["llvm-extra", "transformers"], DirectedEdge["llvm-extra", "unsafe"], DirectedEdge["llvm-extra", "utility-ht"], DirectedEdge["llvm-ffi", "base"], DirectedEdge["llvm-ffi", "bytestring"], DirectedEdge["llvm-ffi", "containers"], DirectedEdge["llvm-ffi", "regex-posix"], DirectedEdge["llvm-ffi", "utility-ht"], DirectedEdge["llvm-general", "array"], DirectedEdge["llvm-general", "base"], DirectedEdge["llvm-general", "bytestring"], DirectedEdge["llvm-general", "containers"], DirectedEdge["llvm-general", "llvm-general-pure"], DirectedEdge["llvm-general", "mtl"], DirectedEdge["llvm-general", "parsec"], DirectedEdge["llvm-general", "setenv"], DirectedEdge["llvm-general", "template-haskell"], DirectedEdge["llvm-general", "transformers"], DirectedEdge["llvm-general", "transformers-compat"], DirectedEdge["llvm-general", "utf8-string"], DirectedEdge["llvm-general-pure", "base"], DirectedEdge["llvm-general-pure", "containers"], DirectedEdge["llvm-general-pure", "mtl"], DirectedEdge["llvm-general-pure", "parsec"], DirectedEdge["llvm-general-pure", "setenv"], DirectedEdge["llvm-general-pure", "template-haskell"], DirectedEdge["llvm-general-pure", "transformers"], DirectedEdge["llvm-general-quote", "array"], DirectedEdge["llvm-general-quote", "base"], DirectedEdge["llvm-general-quote", "bytestring"], DirectedEdge["llvm-general-quote", "containers"], DirectedEdge["llvm-general-quote", "haskell-src-meta"], DirectedEdge["llvm-general-quote", "llvm-general-pure"], DirectedEdge["llvm-general-quote", "mainland-pretty"], DirectedEdge["llvm-general-quote", "mtl"], DirectedEdge["llvm-general-quote", "split"], DirectedEdge["llvm-general-quote", "srcloc"], DirectedEdge["llvm-general-quote", "syb"], DirectedEdge["llvm-general-quote", "symbol"], DirectedEdge["llvm-general-quote", "template-haskell"], DirectedEdge["llvm-general-quote", "th-lift"], DirectedEdge["llvm-ht", "base"], DirectedEdge["llvm-ht", "bytestring"], DirectedEdge["llvm-ht", "directory"], DirectedEdge["llvm-ht", "mtl"], DirectedEdge["llvm-ht", "process"], DirectedEdge["llvm-ht", "type-level"], DirectedEdge["llvm-pkg-config", "base"], DirectedEdge["llvm-pkg-config", "Cabal"], DirectedEdge["llvm-pkg-config", "explicit-exception"], DirectedEdge["llvm-pkg-config", "process"], DirectedEdge["llvm-pkg-config", "transformers"], DirectedEdge["llvm-pkg-config", "utility-ht"], DirectedEdge["llvm-pretty", "base"], DirectedEdge["llvm-pretty", "containers"], DirectedEdge["llvm-pretty", "monadLib"], DirectedEdge["llvm-pretty", "pretty"], DirectedEdge["llvm-pretty-bc-parser", "array"], DirectedEdge["llvm-pretty-bc-parser", "base"], DirectedEdge["llvm-pretty-bc-parser", "bytestring"], DirectedEdge["llvm-pretty-bc-parser", "cereal"], DirectedEdge["llvm-pretty-bc-parser", "containers"], DirectedEdge["llvm-pretty-bc-parser", "fgl"], DirectedEdge["llvm-pretty-bc-parser", "fgl-visualize"], DirectedEdge["llvm-pretty-bc-parser", "llvm-pretty"], DirectedEdge["llvm-pretty-bc-parser", "llvm-pretty-bc-parser"], DirectedEdge["llvm-pretty-bc-parser", "monadLib"], DirectedEdge["llvm-pretty-bc-parser", "pretty"], DirectedEdge["llvm-tf", "base"], DirectedEdge["llvm-tf", "containers"], DirectedEdge["llvm-tf", "llvm-ffi"], DirectedEdge["llvm-tf", "llvm-tf"], DirectedEdge["llvm-tf", "non-empty"], DirectedEdge["llvm-tf", "process"], DirectedEdge["llvm-tf", "storable-record"], DirectedEdge["llvm-tf", "tfp"], DirectedEdge["llvm-tf", "transformers"], DirectedEdge["llvm-tf", "utility-ht"], DirectedEdge["llvm-tools", "attoparsec"], DirectedEdge["llvm-tools", "attoparsec-conduit"], DirectedEdge["llvm-tools", "base"], DirectedEdge["llvm-tools", "blaze-html"], DirectedEdge["llvm-tools", "blaze-markup"], DirectedEdge["llvm-tools", "bytestring"], DirectedEdge["llvm-tools", "conduit"], DirectedEdge["llvm-tools", "containers"], DirectedEdge["llvm-tools", "directory"], DirectedEdge["llvm-tools", "filemanip"], DirectedEdge["llvm-tools", "filepath"], DirectedEdge["llvm-tools", "graphviz"], DirectedEdge["llvm-tools", "llvm-analysis"], DirectedEdge["llvm-tools", "llvm-data-interop"], DirectedEdge["llvm-tools", "llvm-tools"], DirectedEdge["llvm-tools", "optparse-applicative"], DirectedEdge["llvm-tools", "parallel-io"], DirectedEdge["llvm-tools", "process-conduit"], DirectedEdge["llvm-tools", "unordered-containers"], DirectedEdge["llvm-tools", "xml"], DirectedEdge["lmdb", "array"], DirectedEdge["lmdb", "base"], DirectedEdge["lmonad", "base"], DirectedEdge["lmonad", "containers"], DirectedEdge["lmonad", "exceptions"], DirectedEdge["lmonad", "monad-control"], DirectedEdge["lmonad", "transformers"], DirectedEdge["lmonad", "transformers-base"], DirectedEdge["lmonad-yesod", "attoparsec"], DirectedEdge["lmonad-yesod", "base"], DirectedEdge["lmonad-yesod", "blaze-html"], DirectedEdge["lmonad-yesod", "blaze-markup"], DirectedEdge["lmonad-yesod", "containers"], DirectedEdge["lmonad-yesod", "esqueleto"], DirectedEdge["lmonad-yesod", "haskell-src-meta"], DirectedEdge["lmonad-yesod", "lifted-base"], DirectedEdge["lmonad-yesod", "lmonad"], DirectedEdge["lmonad-yesod", "mtl"], DirectedEdge["lmonad-yesod", "persistent"], DirectedEdge["lmonad-yesod", "shakespeare"], DirectedEdge["lmonad-yesod", "tagged"], DirectedEdge["lmonad-yesod", "template-haskell"], DirectedEdge["lmonad-yesod", "text"], DirectedEdge["lmonad-yesod", "transformers"], DirectedEdge["lmonad-yesod", "yesod-core"], DirectedEdge["lmonad-yesod", "yesod-persistent"], DirectedEdge["load-env", "base"], DirectedEdge["load-env", "directory"], DirectedEdge["load-env", "parsec"], DirectedEdge["loadavg", "base"], DirectedEdge["local-address", "base"], DirectedEdge["local-address", "network"], DirectedEdge["local-search", "base"], DirectedEdge["local-search", "combinatorial-problems"], DirectedEdge["local-search", "containers"], DirectedEdge["local-search", "erf"], DirectedEdge["local-search", "random"], DirectedEdge["located", "base"], DirectedEdge["located", "text"], DirectedEdge["located-base", "base"], DirectedEdge["locators", "base"], DirectedEdge["locators", "bytestring"], DirectedEdge["locators", "cereal"], DirectedEdge["locators", "containers"], DirectedEdge["locators", "cryptohash"], DirectedEdge["loch", "base"], DirectedEdge["loch-th", "base"], DirectedEdge["loch-th", "pretty"], DirectedEdge["loch-th", "template-haskell"], DirectedEdge["lock-file", "base"], DirectedEdge["lock-file", "data-default-class"], DirectedEdge["lock-file", "directory"], DirectedEdge["lock-file", "exceptions"], DirectedEdge["lock-file", "tagged-exception-core"], DirectedEdge["lock-file", "transformers"], DirectedEdge["locked-poll", "base"], DirectedEdge["locked-poll", "clock"], DirectedEdge["locked-poll", "containers"], DirectedEdge["locked-poll", "locked-poll"], DirectedEdge["lockfree-queue", "abstract-deque"], DirectedEdge["lockfree-queue", "atomic-primops"], DirectedEdge["lockfree-queue", "base"], DirectedEdge["lockfree-queue", "bytestring"], DirectedEdge["lockfree-queue", "ghc-prim"], DirectedEdge["log", "aeson"], DirectedEdge["log", "aeson-pretty"], DirectedEdge["log", "base"], DirectedEdge["log", "base64-bytestring"], DirectedEdge["log", "bytestring"], DirectedEdge["log", "deepseq"], DirectedEdge["log", "exceptions"], DirectedEdge["log", "hpqtypes"], DirectedEdge["log", "lifted-base"], DirectedEdge["log", "monad-control"], DirectedEdge["log", "monad-time"], DirectedEdge["log", "mtl"], DirectedEdge["log", "old-locale"], DirectedEdge["log", "split"], DirectedEdge["log", "stm"], DirectedEdge["log", "text"], DirectedEdge["log", "time"], DirectedEdge["log", "transformers-base"], DirectedEdge["log", "unordered-containers"], DirectedEdge["log", "vector"], DirectedEdge["log-domain", "base"], DirectedEdge["log-domain", "binary"], DirectedEdge["log-domain", "bytes"], DirectedEdge["log-domain", "cereal"], DirectedEdge["log-domain", "comonad"], DirectedEdge["log-domain", "deepseq"], DirectedEdge["log-domain", "distributive"], DirectedEdge["log-domain", "generic-deriving"], DirectedEdge["log-domain", "hashable"], DirectedEdge["log-domain", "hashable-extras"], DirectedEdge["log-domain", "safecopy"], DirectedEdge["log-domain", "semigroupoids"], DirectedEdge["log-domain", "semigroups"], DirectedEdge["log-domain", "vector"], DirectedEdge["log-effect", "base"], DirectedEdge["log-effect", "bytestring"], DirectedEdge["log-effect", "extensible-effects"], DirectedEdge["log-effect", "fast-logger"], DirectedEdge["log-effect", "time"], DirectedEdge["log2json", "base"], DirectedEdge["log2json", "containers"], DirectedEdge["log2json", "json"], DirectedEdge["log2json", "parsec"], DirectedEdge["logfloat", "array"], DirectedEdge["logfloat", "base"], DirectedEdge["logger", "ansi-wl-pprint"], DirectedEdge["logger", "base"], DirectedEdge["logger", "containers"], DirectedEdge["logger", "lens"], DirectedEdge["logger", "mtl"], DirectedEdge["logger", "template-haskell"], DirectedEdge["logger", "time"], DirectedEdge["logger", "time-locale-compat"], DirectedEdge["logger", "transformers"], DirectedEdge["logger", "transformers-compat"], DirectedEdge["logger", "unagi-chan"], DirectedEdge["logging", "base"], DirectedEdge["logging", "binary"], DirectedEdge["logging", "bytestring"], DirectedEdge["logging", "fast-logger"], DirectedEdge["logging", "lifted-base"], DirectedEdge["logging", "monad-control"], DirectedEdge["logging", "old-locale"], DirectedEdge["logging", "regex-compat"], DirectedEdge["logging", "text"], DirectedEdge["logging", "time"], DirectedEdge["logging", "time-locale-compat"], DirectedEdge["logging", "transformers"], DirectedEdge["logging-effect", "async"], DirectedEdge["logging-effect", "base"], DirectedEdge["logging-effect", "exceptions"], DirectedEdge["logging-effect", "free"], DirectedEdge["logging-effect", "monad-control"], DirectedEdge["logging-effect", "mtl"], DirectedEdge["logging-effect", "stm"], DirectedEdge["logging-effect", "stm-delay"], DirectedEdge["logging-effect", "text"], DirectedEdge["logging-effect", "time"], DirectedEdge["logging-effect", "transformers"], DirectedEdge["logging-effect", "transformers-base"], DirectedEdge["logging-effect", "wl-pprint-text"], DirectedEdge["logging-facade", "base"], DirectedEdge["logging-facade", "template-haskell"], DirectedEdge["logging-facade", "transformers"], DirectedEdge["logging-facade-journald", "base"], DirectedEdge["logging-facade-journald", "libsystemd-journal"], DirectedEdge["logging-facade-journald", "logging-facade"], DirectedEdge["logging-facade-journald", "text"], DirectedEdge["logging-facade-journald", "unordered-containers"], DirectedEdge["logic-TPTP", "ansi-wl-pprint"], DirectedEdge["logic-TPTP", "array"], DirectedEdge["logic-TPTP", "base"], DirectedEdge["logic-TPTP", "containers"], DirectedEdge["logic-TPTP", "mtl"], DirectedEdge["logic-TPTP", "pointed"], DirectedEdge["logic-TPTP", "QuickCheck"], DirectedEdge["logic-TPTP", "syb"], DirectedEdge["logic-TPTP", "transformers"], DirectedEdge["logic-TPTP", "transformers-compat"], DirectedEdge["logic-classes", "applicative-extras"], DirectedEdge["logic-classes", "atp-haskell"], DirectedEdge["logic-classes", "base"], DirectedEdge["logic-classes", "containers"], DirectedEdge["logic-classes", "HUnit"], DirectedEdge["logic-classes", "mtl"], DirectedEdge["logic-classes", "parsec"], DirectedEdge["logic-classes", "pretty"], DirectedEdge["logic-classes", "PropLogic"], DirectedEdge["logic-classes", "safe"], DirectedEdge["logic-classes", "safecopy"], DirectedEdge["logic-classes", "set-extra"], DirectedEdge["logic-classes", "syb"], DirectedEdge["logic-classes", "template-haskell"], DirectedEdge["logicst", "base"], DirectedEdge["logicst", "logict"], DirectedEdge["logicst", "transformers"], DirectedEdge["logict", "base"], DirectedEdge["logict", "mtl"], DirectedEdge["logict-state", "base"], DirectedEdge["logict-state", "logict"], DirectedEdge["logict-state", "mtl"], DirectedEdge["logict-state", "transformers"], DirectedEdge["logplex-parse", "base"], DirectedEdge["logplex-parse", "iso8601-time"], DirectedEdge["logplex-parse", "parsec"], DirectedEdge["logplex-parse", "text"], DirectedEdge["logplex-parse", "time"], DirectedEdge["logsink", "base"], DirectedEdge["logsink", "hsyslog"], DirectedEdge["logsink", "logging-facade"], DirectedEdge["logsink", "time"], DirectedEdge["lojban", "base"], DirectedEdge["lojban", "containers"], DirectedEdge["lojban", "curl"], DirectedEdge["lojban", "directory"], DirectedEdge["lojban", "HTTP"], DirectedEdge["lojban", "markov-chain"], DirectedEdge["lojban", "mtl"], DirectedEdge["lojban", "parsec"], DirectedEdge["lojban", "process"], DirectedEdge["lojban", "random"], DirectedEdge["lojban", "regex-compat"], DirectedEdge["lojban", "strict"], DirectedEdge["lojban", "tagsoup"], DirectedEdge["lojban", "xml"], DirectedEdge["lojbanParser", "base"], DirectedEdge["lojbanParser", "lojbanParser"], DirectedEdge["lojbanXiragan", "base"], DirectedEdge["lojbanXiragan", "lojbanXiragan"], DirectedEdge["lojysamban", "base"], DirectedEdge["lojysamban", "lojbanParser"], DirectedEdge["lojysamban", "yjtools"], DirectedEdge["lol", "arithmoi"], DirectedEdge["lol", "base"], DirectedEdge["lol", "binary"], DirectedEdge["lol", "bytestring"], DirectedEdge["lol", "constraints"], DirectedEdge["lol", "containers"], DirectedEdge["lol", "crypto-api"], DirectedEdge["lol", "data-default"], DirectedEdge["lol", "deepseq"], DirectedEdge["lol", "MonadRandom"], DirectedEdge["lol", "mtl"], DirectedEdge["lol", "numeric-prelude"], DirectedEdge["lol", "QuickCheck"], DirectedEdge["lol", "random"], DirectedEdge["lol", "reflection"], DirectedEdge["lol", "repa"], DirectedEdge["lol", "singletons"], DirectedEdge["lol", "storable-record"], DirectedEdge["lol", "tagged-transformer"], DirectedEdge["lol", "template-haskell"], DirectedEdge["lol", "th-desugar"], DirectedEdge["lol", "transformers"], DirectedEdge["lol", "vector"], DirectedEdge["lol", "vector-th-unbox"], DirectedEdge["lol-apps", "base"], DirectedEdge["lol-apps", "deepseq"], DirectedEdge["lol-apps", "lol"], DirectedEdge["lol-apps", "MonadRandom"], DirectedEdge["lol-apps", "numeric-prelude"], DirectedEdge["loli", "miku"], DirectedEdge["loli", "base"], DirectedEdge["loli", "bytestring"], DirectedEdge["loli", "containers"], DirectedEdge["loli", "data-default"], DirectedEdge["loli", "hack"], DirectedEdge["loli", "hack-contrib"], DirectedEdge["loli", "mps"], DirectedEdge["loli", "mtl"], DirectedEdge["loli", "template"], DirectedEdge["loli", "utf8-string"], DirectedEdge["lookup-tables", "base"], DirectedEdge["lookup-tables", "primitive"], DirectedEdge["lookup-tables", "template-haskell"], DirectedEdge["loop", "base"], DirectedEdge["loop-effin", "base"], DirectedEdge["loop-effin", "effin"], DirectedEdge["loop-while", "base"], DirectedEdge["loop-while", "mtl"], DirectedEdge["loops", "base"], DirectedEdge["loops", "primitive"], DirectedEdge["loops", "transformers"], DirectedEdge["loops", "vector"], DirectedEdge["loopy", "base"], DirectedEdge["loopy", "cmdargs"], DirectedEdge["loopy", "containers"], DirectedEdge["loopy", "directory"], DirectedEdge["loopy", "filepath"], DirectedEdge["loopy", "GoogleChart"], DirectedEdge["loopy", "hmatrix"], DirectedEdge["loopy", "process"], DirectedEdge["loopy", "random"], DirectedEdge["lord", "aeson"], DirectedEdge["lord", "ansi-terminal"], DirectedEdge["lord", "attoparsec-conduit"], DirectedEdge["lord", "base"], DirectedEdge["lord", "bytestring"], DirectedEdge["lord", "case-insensitive"], DirectedEdge["lord", "conduit"], DirectedEdge["lord", "conduit-extra"], DirectedEdge["lord", "daemons"], DirectedEdge["lord", "data-default"], DirectedEdge["lord", "directory"], DirectedEdge["lord", "fast-logger"], DirectedEdge["lord", "html-conduit"], DirectedEdge["lord", "HTTP"], DirectedEdge["lord", "http-conduit"], DirectedEdge["lord", "http-types"], DirectedEdge["lord", "libmpd"], DirectedEdge["lord", "optparse-applicative"], DirectedEdge["lord", "process"], DirectedEdge["lord", "resourcet"], DirectedEdge["lord", "text"], DirectedEdge["lord", "transformers"], DirectedEdge["lord", "unix"], DirectedEdge["lord", "unordered-containers"], DirectedEdge["lord", "utf8-string"], DirectedEdge["lord", "wai-logger"], DirectedEdge["lord", "xml-conduit"], DirectedEdge["lord", "yaml"], DirectedEdge["lorem", "base"], DirectedEdge["lorem", "lorem"], DirectedEdge["loris", "base"], DirectedEdge["loris", "vector"], DirectedEdge["loshadka", "aeson"], DirectedEdge["loshadka", "base"], DirectedEdge["loshadka", "binary"], DirectedEdge["loshadka", "bytestring"], DirectedEdge["loshadka", "cryptohash"], DirectedEdge["loshadka", "directory"], DirectedEdge["loshadka", "hex"], DirectedEdge["loshadka", "network"], DirectedEdge["loshadka", "process"], DirectedEdge["loshadka", "split"], DirectedEdge["lostcities", "array"], DirectedEdge["lostcities", "base"], DirectedEdge["lostcities", "containers"], DirectedEdge["lostcities", "mtl"], DirectedEdge["lostcities", "wx"], DirectedEdge["lostcities", "wxcore"], DirectedEdge["lowgl", "base"], DirectedEdge["lowgl", "data-default"], DirectedEdge["lowgl", "gl"], DirectedEdge["lowgl", "linear"], DirectedEdge["lowgl", "vector"], DirectedEdge["lp-diagrams", "base"], DirectedEdge["lp-diagrams", "containers"], DirectedEdge["lp-diagrams", "gasp"], DirectedEdge["lp-diagrams", "graphviz"], DirectedEdge["lp-diagrams", "labeled-tree"], DirectedEdge["lp-diagrams", "lens"], DirectedEdge["lp-diagrams", "mtl"], DirectedEdge["lp-diagrams", "parsek"], DirectedEdge["lp-diagrams", "polynomials-bernstein"], DirectedEdge["lp-diagrams", "process"], DirectedEdge["lp-diagrams", "reflection"], DirectedEdge["lp-diagrams", "text"], DirectedEdge["lp-diagrams", "typography-geometry"], DirectedEdge["lp-diagrams", "vector"], DirectedEdge["lp-diagrams-svg", "base"], DirectedEdge["lp-diagrams-svg", "containers"], DirectedEdge["lp-diagrams-svg", "FontyFruity"], DirectedEdge["lp-diagrams-svg", "gasp"], DirectedEdge["lp-diagrams-svg", "JuicyPixels"], DirectedEdge["lp-diagrams-svg", "lens"], DirectedEdge["lp-diagrams-svg", "linear"], DirectedEdge["lp-diagrams-svg", "lp-diagrams"], DirectedEdge["lp-diagrams-svg", "lp-diagrams-svg"], DirectedEdge["lp-diagrams-svg", "lucid-svg"], DirectedEdge["lp-diagrams-svg", "mtl"], DirectedEdge["lp-diagrams-svg", "optparse-applicative"], DirectedEdge["lp-diagrams-svg", "svg-tree"], DirectedEdge["lp-diagrams-svg", "text"], DirectedEdge["lp-diagrams-svg", "vector"], DirectedEdge["lrucache", "base"], DirectedEdge["lrucache", "containers"], DirectedEdge["lrucache", "contravariant"], DirectedEdge["ls-usb", "ansi-wl-pprint"], DirectedEdge["ls-usb", "base"], DirectedEdge["ls-usb", "base-unicode-symbols"], DirectedEdge["ls-usb", "cmdtheline"], DirectedEdge["ls-usb", "text"], DirectedEdge["ls-usb", "usb"], DirectedEdge["ls-usb", "usb-id-database"], DirectedEdge["ls-usb", "vector"], DirectedEdge["lscabal", "base"], DirectedEdge["lscabal", "bytestring"], DirectedEdge["lscabal", "Cabal"], DirectedEdge["lscabal", "containers"], DirectedEdge["lscabal", "directory"], DirectedEdge["lscabal", "filepath"], DirectedEdge["lscabal", "pretty"], DirectedEdge["lscabal", "process"], DirectedEdge["lss", "attoparsec"], DirectedEdge["lss", "base"], DirectedEdge["lss", "containers"], DirectedEdge["lss", "directory"], DirectedEdge["lss", "filepath"], DirectedEdge["lss", "language-css"], DirectedEdge["lss", "language-css-attoparsec"], DirectedEdge["lss", "text"], DirectedEdge["lss", "xmlhtml"], DirectedEdge["lsystem", "base"], DirectedEdge["lsystem", "uu-parsinglib"], DirectedEdge["lsystem", "wx"], DirectedEdge["lsystem", "wxcore"], DirectedEdge["ltext", "aeson"], DirectedEdge["ltext", "base"], DirectedEdge["ltext", "containers"], DirectedEdge["ltext", "data-default"], DirectedEdge["ltext", "deepseq"], DirectedEdge["ltext", "directory"], DirectedEdge["ltext", "mtl"], DirectedEdge["ltext", "mtl-compat"], DirectedEdge["ltext", "optparse-applicative"], DirectedEdge["ltext", "parsec"], DirectedEdge["ltext", "pretty"], DirectedEdge["ltext", "template-haskell"], DirectedEdge["ltext", "text"], DirectedEdge["ltext", "transformers"], DirectedEdge["ltext", "yaml"], DirectedEdge["ltk", "base"], DirectedEdge["ltk", "Cabal"], DirectedEdge["ltk", "containers"], DirectedEdge["ltk", "filepath"], DirectedEdge["ltk", "ghc"], DirectedEdge["ltk", "glib"], DirectedEdge["ltk", "mtl"], DirectedEdge["ltk", "parsec"], DirectedEdge["ltk", "pretty"], DirectedEdge["ltk", "text"], DirectedEdge["ltk", "transformers"], DirectedEdge["ltl", "base"], DirectedEdge["ltl", "vcd"], DirectedEdge["lua-bc", "base"], DirectedEdge["lua-bc", "binary"], DirectedEdge["lua-bc", "bytestring"], DirectedEdge["lua-bc", "containers"], DirectedEdge["lua-bc", "pretty"], DirectedEdge["lua-bc", "text"], DirectedEdge["lua-bc", "vector"], DirectedEdge["lua-bytecode", "array"], DirectedEdge["lua-bytecode", "base"], DirectedEdge["lua-bytecode", "bytestring"], DirectedEdge["lua-bytecode", "cereal"], DirectedEdge["lua-bytecode", "containers"], DirectedEdge["lua-bytecode", "hashable"], DirectedEdge["lua-bytecode", "numeric-extras"], DirectedEdge["lua-bytecode", "vector"], DirectedEdge["luachunk", "attoparsec"], DirectedEdge["luachunk", "base"], DirectedEdge["luachunk", "binary"], DirectedEdge["luachunk", "bytestring"], DirectedEdge["luachunk", "custom-prelude"], DirectedEdge["luachunk", "ghc-prim"], DirectedEdge["luachunk", "pretty"], DirectedEdge["luachunk", "text"], DirectedEdge["luautils", "base"], DirectedEdge["luautils", "binary"], DirectedEdge["luautils", "bytestring"], DirectedEdge["luautils", "containers"], DirectedEdge["luautils", "hslua"], DirectedEdge["luautils", "monad-loops"], DirectedEdge["luautils", "text"], DirectedEdge["lub", "base"], DirectedEdge["lub", "unamb"], DirectedEdge["lucid", "base"], DirectedEdge["lucid", "blaze-builder"], DirectedEdge["lucid", "bytestring"], DirectedEdge["lucid", "containers"], DirectedEdge["lucid", "hashable"], DirectedEdge["lucid", "mmorph"], DirectedEdge["lucid", "mtl"], DirectedEdge["lucid", "text"], DirectedEdge["lucid", "transformers"], DirectedEdge["lucid", "unordered-containers"], DirectedEdge["lucid-foundation", "base"], DirectedEdge["lucid-foundation", "lucid"], DirectedEdge["lucid-foundation", "text"], DirectedEdge["lucid-svg", "base"], DirectedEdge["lucid-svg", "blaze-builder"], DirectedEdge["lucid-svg", "lucid"], DirectedEdge["lucid-svg", "text"], DirectedEdge["lucid-svg", "transformers"], DirectedEdge["lucienne", "base"], DirectedEdge["lucienne", "base64-bytestring"], DirectedEdge["lucienne", "blaze-html"], DirectedEdge["lucienne", "bson"], DirectedEdge["lucienne", "bytestring"], DirectedEdge["lucienne", "compact-string-fix"], DirectedEdge["lucienne", "feed"], DirectedEdge["lucienne", "happstack"], DirectedEdge["lucienne", "happstack-server"], DirectedEdge["lucienne", "HTTP"], DirectedEdge["lucienne", "mongoDB"], DirectedEdge["lucienne", "mtl"], DirectedEdge["lucienne", "network"], DirectedEdge["lucienne", "SHA"], DirectedEdge["lucienne", "text"], DirectedEdge["lucienne", "time"], DirectedEdge["luhn", "base"], DirectedEdge["luhn", "digits"], DirectedEdge["luhn", "QuickCheck"], DirectedEdge["lui", "base"], DirectedEdge["lui", "containers"], DirectedEdge["lui", "haskgame"], DirectedEdge["lui", "MaybeT"], DirectedEdge["lui", "mtl"], DirectedEdge["lui", "SDL"], DirectedEdge["luis-client", "aeson"], DirectedEdge["luis-client", "base"], DirectedEdge["luis-client", "http-client"], DirectedEdge["luis-client", "lens"], DirectedEdge["luis-client", "text"], DirectedEdge["luis-client", "vector"], DirectedEdge["luis-client", "wreq"], DirectedEdge["luka", "air"], DirectedEdge["luka", "base"], DirectedEdge["luka", "bytestring"], DirectedEdge["luka", "libffi"], DirectedEdge["luminance", "base"], DirectedEdge["luminance", "containers"], DirectedEdge["luminance", "contravariant"], DirectedEdge["luminance", "dlist"], DirectedEdge["luminance", "gl"], DirectedEdge["luminance", "linear"], DirectedEdge["luminance", "mtl"], DirectedEdge["luminance", "resourcet"], DirectedEdge["luminance", "semigroups"], DirectedEdge["luminance", "transformers"], DirectedEdge["luminance", "vector"], DirectedEdge["luminance", "void"], DirectedEdge["luminance-samples", "base"], DirectedEdge["luminance-samples", "contravariant"], DirectedEdge["luminance-samples", "GLFW-b"], DirectedEdge["luminance-samples", "JuicyPixels"], DirectedEdge["luminance-samples", "linear"], DirectedEdge["luminance-samples", "luminance"], DirectedEdge["luminance-samples", "mtl"], DirectedEdge["luminance-samples", "resourcet"], DirectedEdge["luminance-samples", "transformers"], DirectedEdge["lushtags", "base"], DirectedEdge["lushtags", "haskell-src-exts"], DirectedEdge["lushtags", "text"], DirectedEdge["lushtags", "vector"], DirectedEdge["luthor", "base"], DirectedEdge["luthor", "mtl"], DirectedEdge["luthor", "parsec"], DirectedEdge["luthor", "transformers"], DirectedEdge["lvish", "async"], DirectedEdge["lvish", "atomic-primops"], DirectedEdge["lvish", "base"], DirectedEdge["lvish", "bits-atomic"], DirectedEdge["lvish", "containers"], DirectedEdge["lvish", "deepseq"], DirectedEdge["lvish", "ghc-prim"], DirectedEdge["lvish", "lattices"], DirectedEdge["lvish", "missing-foreign"], DirectedEdge["lvish", "random"], DirectedEdge["lvish", "transformers"], DirectedEdge["lvish", "vector"], DirectedEdge["lvmlib", "array"], DirectedEdge["lvmlib", "base"], DirectedEdge["lvmlib", "containers"], DirectedEdge["lvmlib", "directory"], DirectedEdge["lvmlib", "filepath"], DirectedEdge["lvmlib", "parsec"], DirectedEdge["lvmlib", "wl-pprint"], DirectedEdge["lxc", "base"], DirectedEdge["lxc", "bindings-lxc"], DirectedEdge["lxc", "mtl"], DirectedEdge["lxc", "transformers"], DirectedEdge["lye", "base"], DirectedEdge["lye", "containers"], DirectedEdge["lye", "free"], DirectedEdge["lye", "HCodecs"], DirectedEdge["lye", "lens"], DirectedEdge["lye", "parsers"], DirectedEdge["lye", "transformers"], DirectedEdge["lye", "trifecta"], DirectedEdge["lz4", "base"], DirectedEdge["lz4", "bytestring"], DirectedEdge["lz4", "cereal"], DirectedEdge["lzma", "lzma-streams"], DirectedEdge["lzma", "io-streams"], DirectedEdge["lzma", "base"], DirectedEdge["lzma", "bytestring"], DirectedEdge["lzma", "lzma-clib"], DirectedEdge["lzma-clib", "lzma"], DirectedEdge["lzma-clib", "only-buildable-on-windows"], DirectedEdge["lzma-conduit", "base"], DirectedEdge["lzma-conduit", "bindings-DSL"], DirectedEdge["lzma-conduit", "bytestring"], DirectedEdge["lzma-conduit", "conduit"], DirectedEdge["lzma-conduit", "resourcet"], DirectedEdge["lzma-conduit", "transformers"], DirectedEdge["lzma-enumerator", "base"], DirectedEdge["lzma-enumerator", "bindings-DSL"], DirectedEdge["lzma-enumerator", "bytestring"], DirectedEdge["lzma-enumerator", "enumerator"], DirectedEdge["lzma-enumerator", "mtl"], DirectedEdge["lzma-streams", "base"], DirectedEdge["lzma-streams", "bytestring"], DirectedEdge["lzma-streams", "io-streams"], DirectedEdge["lzma-streams", "lzma"], DirectedEdge["maam", "base"], DirectedEdge["maam", "containers"], DirectedEdge["maam", "maam"], DirectedEdge["maam", "template-haskell"], DirectedEdge["maam", "text"], DirectedEdge["maam", "vector"], DirectedEdge["mac", "base"], DirectedEdge["mac", "network"], DirectedEdge["mac", "transformers"], DirectedEdge["macbeth-lib", "attoparsec"], DirectedEdge["macbeth-lib", "base"], DirectedEdge["macbeth-lib", "bytestring"], DirectedEdge["macbeth-lib", "conduit"], DirectedEdge["macbeth-lib", "conduit-extra"], DirectedEdge["macbeth-lib", "containers"], DirectedEdge["macbeth-lib", "directory"], DirectedEdge["macbeth-lib", "either-unwrap"], DirectedEdge["macbeth-lib", "filepath"], DirectedEdge["macbeth-lib", "FindBin"], DirectedEdge["macbeth-lib", "macbeth-lib"], DirectedEdge["macbeth-lib", "MissingH"], DirectedEdge["macbeth-lib", "mtl"], DirectedEdge["macbeth-lib", "network"], DirectedEdge["macbeth-lib", "old-locale"], DirectedEdge["macbeth-lib", "resourcet"], DirectedEdge["macbeth-lib", "safe"], DirectedEdge["macbeth-lib", "sodium"], DirectedEdge["macbeth-lib", "split"], DirectedEdge["macbeth-lib", "stm"], DirectedEdge["macbeth-lib", "text"], DirectedEdge["macbeth-lib", "time"], DirectedEdge["macbeth-lib", "transformers"], DirectedEdge["macbeth-lib", "wx"], DirectedEdge["macbeth-lib", "wxcore"], DirectedEdge["macbeth-lib", "yaml"], DirectedEdge["maccatcher", "base"], DirectedEdge["maccatcher", "binary"], DirectedEdge["maccatcher", "parsec"], DirectedEdge["maccatcher", "process"], DirectedEdge["machinecell", "arrows"], DirectedEdge["machinecell", "base"], DirectedEdge["machinecell", "free"], DirectedEdge["machinecell", "mtl"], DirectedEdge["machinecell", "profunctors"], DirectedEdge["machinecell", "semigroups"], DirectedEdge["machines", "adjunctions"], DirectedEdge["machines", "base"], DirectedEdge["machines", "comonad"], DirectedEdge["machines", "containers"], DirectedEdge["machines", "distributive"], DirectedEdge["machines", "free"], DirectedEdge["machines", "mtl"], DirectedEdge["machines", "pointed"], DirectedEdge["machines", "profunctors"], DirectedEdge["machines", "semigroupoids"], DirectedEdge["machines", "semigroups"], DirectedEdge["machines", "transformers"], DirectedEdge["machines", "transformers-compat"], DirectedEdge["machines", "void"], DirectedEdge["machines-binary", "base"], DirectedEdge["machines-binary", "binary"], DirectedEdge["machines-binary", "bytestring"], DirectedEdge["machines-binary", "machines"], DirectedEdge["machines-directory", "base"], DirectedEdge["machines-directory", "directory"], DirectedEdge["machines-directory", "filepath"], DirectedEdge["machines-directory", "machines"], DirectedEdge["machines-directory", "machines-io"], DirectedEdge["machines-directory", "transformers"], DirectedEdge["machines-io", "base"], DirectedEdge["machines-io", "bytestring"], DirectedEdge["machines-io", "chunked-data"], DirectedEdge["machines-io", "machines"], DirectedEdge["machines-io", "transformers"], DirectedEdge["machines-process", "base"], DirectedEdge["machines-process", "chunked-data"], DirectedEdge["machines-process", "machines"], DirectedEdge["machines-process", "machines-io"], DirectedEdge["machines-process", "process"], DirectedEdge["machines-zlib", "base"], DirectedEdge["machines-zlib", "basic-prelude"], DirectedEdge["machines-zlib", "machines"], DirectedEdge["machines-zlib", "streaming-commons"], DirectedEdge["macho", "base"], DirectedEdge["macho", "binary"], DirectedEdge["macho", "bytestring"], DirectedEdge["maclight", "base"], DirectedEdge["maclight", "filemanip"], DirectedEdge["maclight", "filepath"], DirectedEdge["maclight", "maclight"], DirectedEdge["maclight", "optparse-applicative"], DirectedEdge["maclight", "parsec"], DirectedEdge["maclight", "strict"], DirectedEdge["macosx-make-standalone", "base"], DirectedEdge["macosx-make-standalone", "containers"], DirectedEdge["macosx-make-standalone", "data-lens"], DirectedEdge["macosx-make-standalone", "data-lens-template"], DirectedEdge["macosx-make-standalone", "deepseq"], DirectedEdge["macosx-make-standalone", "directory"], DirectedEdge["macosx-make-standalone", "filepath"], DirectedEdge["macosx-make-standalone", "graph-visit"], DirectedEdge["macosx-make-standalone", "mtl"], DirectedEdge["macosx-make-standalone", "process"], DirectedEdge["macosx-make-standalone", "transformers"], DirectedEdge["macosx-make-standalone", "unix"], DirectedEdge["mage", "array"], DirectedEdge["mage", "base"], DirectedEdge["mage", "containers"], DirectedEdge["mage", "mtl"], DirectedEdge["mage", "random"], DirectedEdge["magic", "base"], DirectedEdge["magico", "base"], DirectedEdge["magico", "hmatrix"], DirectedEdge["magico", "transformers"], DirectedEdge["magico", "utility-ht"], DirectedEdge["magma", "base"], DirectedEdge["magma", "deepseq"], DirectedEdge["magma", "profunctors"], DirectedEdge["magma", "semigroups"], DirectedEdge["mahoro", "base"], DirectedEdge["mahoro", "ConfigFile"], DirectedEdge["mahoro", "containers"], DirectedEdge["mahoro", "curl"], DirectedEdge["mahoro", "directory"], DirectedEdge["mahoro", "happstack-state"], DirectedEdge["mahoro", "MissingH"], DirectedEdge["mahoro", "mtl"], DirectedEdge["mahoro", "network"], DirectedEdge["mahoro", "old-time"], DirectedEdge["mahoro", "regex-posix"], DirectedEdge["mahoro", "tagsoup"], DirectedEdge["mahoro", "utf8-string"], DirectedEdge["mahoro", "XMPP"], DirectedEdge["maid", "air"], DirectedEdge["maid", "air-th"], DirectedEdge["maid", "base"], DirectedEdge["maid", "bytestring"], DirectedEdge["maid", "containers"], DirectedEdge["maid", "data-default"], DirectedEdge["maid", "directory"], DirectedEdge["maid", "filepath"], DirectedEdge["maid", "hack2-contrib"], DirectedEdge["maid", "hack2-handler-snap-server"], DirectedEdge["maid", "moe"], DirectedEdge["maid", "process"], DirectedEdge["maid", "text"], DirectedEdge["mailbox-count", "base"], DirectedEdge["mailbox-count", "cmdargs"], DirectedEdge["mailbox-count", "configurator"], DirectedEdge["mailbox-count", "containers"], DirectedEdge["mailbox-count", "directory"], DirectedEdge["mailbox-count", "filepath"], DirectedEdge["mailbox-count", "HDBC"], DirectedEdge["mailbox-count", "HDBC-postgresql"], DirectedEdge["mailbox-count", "MissingH"], DirectedEdge["mailbox-count", "tasty"], DirectedEdge["mailbox-count", "tasty-hunit"], DirectedEdge["mailchimp-subscribe", "aeson"], DirectedEdge["mailchimp-subscribe", "base"], DirectedEdge["mailchimp-subscribe", "http-client"], DirectedEdge["mailchimp-subscribe", "http-client-tls"], DirectedEdge["mailchimp-subscribe", "http-types"], DirectedEdge["mailchimp-subscribe", "reflection"], DirectedEdge["mailchimp-subscribe", "scotty"], DirectedEdge["mailchimp-subscribe", "text"], DirectedEdge["mailchimp-subscribe", "transformers"], DirectedEdge["mailchimp-subscribe", "wai-extra"], DirectedEdge["mailgun", "base"], DirectedEdge["mailgun", "bytestring"], DirectedEdge["mailgun", "conduit"], DirectedEdge["mailgun", "exceptions"], DirectedEdge["mailgun", "failure"], DirectedEdge["mailgun", "http-client"], DirectedEdge["mailgun", "http-client-multipart"], DirectedEdge["mailgun", "http-conduit"], DirectedEdge["mailgun", "mailgun"], DirectedEdge["mailgun", "monad-control"], DirectedEdge["mailgun", "network"], DirectedEdge["mailgun", "text"], DirectedEdge["mailgun", "transformers"], DirectedEdge["mainland-pretty", "base"], DirectedEdge["mainland-pretty", "containers"], DirectedEdge["mainland-pretty", "srcloc"], DirectedEdge["mainland-pretty", "text"], DirectedEdge["majordomo", "base"], DirectedEdge["majordomo", "bytestring"], DirectedEdge["majordomo", "cmdargs"], DirectedEdge["majordomo", "majordomo"], DirectedEdge["majordomo", "monad-loops"], DirectedEdge["majordomo", "old-locale"], DirectedEdge["majordomo", "threads"], DirectedEdge["majordomo", "time"], DirectedEdge["majordomo", "unix"], DirectedEdge["majordomo", "zeromq-haskell"], DirectedEdge["make-hard-links", "base"], DirectedEdge["make-hard-links", "bytestring"], DirectedEdge["make-hard-links", "containers"], DirectedEdge["make-hard-links", "directory"], DirectedEdge["make-hard-links", "filepath"], DirectedEdge["make-hard-links", "unix"], DirectedEdge["make-package", "async"], DirectedEdge["make-package", "base"], DirectedEdge["make-package", "bytestring"], DirectedEdge["make-package", "configurator"], DirectedEdge["make-package", "containers"], DirectedEdge["make-package", "directory"], DirectedEdge["make-package", "filepath"], DirectedEdge["make-package", "github"], DirectedEdge["make-package", "haskeline"], DirectedEdge["make-package", "lens"], DirectedEdge["make-package", "lens-datetime"], DirectedEdge["make-package", "mtl"], DirectedEdge["make-package", "process"], DirectedEdge["make-package", "text"], DirectedEdge["make-package", "time"], DirectedEdge["makedo", "base"], DirectedEdge["makedo", "directory"], DirectedEdge["makedo", "filepath"], DirectedEdge["makedo", "HSH"], DirectedEdge["makedo", "process"], DirectedEdge["managed", "base"], DirectedEdge["managed", "transformers"], DirectedEdge["manatee", "base"], DirectedEdge["manatee", "binary"], DirectedEdge["manatee", "cairo"], DirectedEdge["manatee", "containers"], DirectedEdge["manatee", "dbus-client"], DirectedEdge["manatee", "dbus-core"], DirectedEdge["manatee", "derive"], DirectedEdge["manatee", "directory"], DirectedEdge["manatee", "filepath"], DirectedEdge["manatee", "gtk"], DirectedEdge["manatee", "gtk-serialized-event"], DirectedEdge["manatee", "manatee-core"], DirectedEdge["manatee", "mtl"], DirectedEdge["manatee", "stm"], DirectedEdge["manatee", "template-haskell"], DirectedEdge["manatee", "text"], DirectedEdge["manatee", "unix"], DirectedEdge["manatee", "utf8-string"], DirectedEdge["manatee-all", "base"], DirectedEdge["manatee-all", "manatee"], DirectedEdge["manatee-all", "manatee-browser"], DirectedEdge["manatee-all", "manatee-core"], DirectedEdge["manatee-all", "manatee-curl"], DirectedEdge["manatee-all", "manatee-editor"], DirectedEdge["manatee-all", "manatee-filemanager"], DirectedEdge["manatee-all", "manatee-imageviewer"], DirectedEdge["manatee-all", "manatee-ircclient"], DirectedEdge["manatee-all", "manatee-mplayer"], DirectedEdge["manatee-all", "manatee-pdfviewer"], DirectedEdge["manatee-all", "manatee-processmanager"], DirectedEdge["manatee-all", "manatee-reader"], DirectedEdge["manatee-all", "manatee-terminal"], DirectedEdge["manatee-all", "manatee-welcome"], DirectedEdge["manatee-anything", "base"], DirectedEdge["manatee-anything", "bytestring"], DirectedEdge["manatee-anything", "containers"], DirectedEdge["manatee-anything", "dataenc"], DirectedEdge["manatee-anything", "dbus-client"], DirectedEdge["manatee-anything", "dbus-core"], DirectedEdge["manatee-anything", "filepath"], DirectedEdge["manatee-anything", "gio"], DirectedEdge["manatee-anything", "GoogleSuggest"], DirectedEdge["manatee-anything", "gtk"], DirectedEdge["manatee-anything", "manatee-core"], DirectedEdge["manatee-anything", "mtl"], DirectedEdge["manatee-anything", "network"], DirectedEdge["manatee-anything", "proc"], DirectedEdge["manatee-anything", "regex-tdfa"], DirectedEdge["manatee-anything", "split"], DirectedEdge["manatee-anything", "stm"], DirectedEdge["manatee-anything", "text"], DirectedEdge["manatee-anything", "unix"], DirectedEdge["manatee-anything", "utf8-string"], DirectedEdge["manatee-browser", "base"], DirectedEdge["manatee-browser", "binary"], DirectedEdge["manatee-browser", "containers"], DirectedEdge["manatee-browser", "dbus-client"], DirectedEdge["manatee-browser", "derive"], DirectedEdge["manatee-browser", "filepath"], DirectedEdge["manatee-browser", "gtk"], DirectedEdge["manatee-browser", "manatee-core"], DirectedEdge["manatee-browser", "mtl"], DirectedEdge["manatee-browser", "stm"], DirectedEdge["manatee-browser", "text"], DirectedEdge["manatee-browser", "utf8-string"], DirectedEdge["manatee-browser", "webkit"], DirectedEdge["manatee-core", "array"], DirectedEdge["manatee-core", "base"], DirectedEdge["manatee-core", "binary"], DirectedEdge["manatee-core", "bytestring"], DirectedEdge["manatee-core", "Cabal"], DirectedEdge["manatee-core", "cairo"], DirectedEdge["manatee-core", "containers"], DirectedEdge["manatee-core", "dataenc"], DirectedEdge["manatee-core", "dbus-client"], DirectedEdge["manatee-core", "dbus-core"], DirectedEdge["manatee-core", "derive"], DirectedEdge["manatee-core", "directory"], DirectedEdge["manatee-core", "filepath"], DirectedEdge["manatee-core", "gconf"], DirectedEdge["manatee-core", "ghc"], DirectedEdge["manatee-core", "ghc-paths"], DirectedEdge["manatee-core", "gio"], DirectedEdge["manatee-core", "glib"], DirectedEdge["manatee-core", "gtk"], DirectedEdge["manatee-core", "gtk-serialized-event"], DirectedEdge["manatee-core", "haskell-src-exts"], DirectedEdge["manatee-core", "mtl"], DirectedEdge["manatee-core", "network"], DirectedEdge["manatee-core", "old-locale"], DirectedEdge["manatee-core", "old-time"], DirectedEdge["manatee-core", "process"], DirectedEdge["manatee-core", "regex-tdfa"], DirectedEdge["manatee-core", "split"], DirectedEdge["manatee-core", "stm"], DirectedEdge["manatee-core", "template-haskell"], DirectedEdge["manatee-core", "text"], DirectedEdge["manatee-core", "time"], DirectedEdge["manatee-core", "unix"], DirectedEdge["manatee-core", "utf8-string"], DirectedEdge["manatee-curl", "base"], DirectedEdge["manatee-curl", "binary"], DirectedEdge["manatee-curl", "bytestring"], DirectedEdge["manatee-curl", "containers"], DirectedEdge["manatee-curl", "curl"], DirectedEdge["manatee-curl", "dbus-client"], DirectedEdge["manatee-curl", "dbus-core"], DirectedEdge["manatee-curl", "derive"], DirectedEdge["manatee-curl", "directory"], DirectedEdge["manatee-curl", "filepath"], DirectedEdge["manatee-curl", "gio"], DirectedEdge["manatee-curl", "glib"], DirectedEdge["manatee-curl", "gtk"], DirectedEdge["manatee-curl", "manatee-core"], DirectedEdge["manatee-curl", "mtl"], DirectedEdge["manatee-curl", "network"], DirectedEdge["manatee-curl", "old-locale"], DirectedEdge["manatee-curl", "old-time"], DirectedEdge["manatee-curl", "regex-tdfa"], DirectedEdge["manatee-curl", "stm"], DirectedEdge["manatee-curl", "template-haskell"], DirectedEdge["manatee-curl", "text"], DirectedEdge["manatee-curl", "utf8-string"], DirectedEdge["manatee-editor", "base"], DirectedEdge["manatee-editor", "binary"], DirectedEdge["manatee-editor", "bytestring"], DirectedEdge["manatee-editor", "containers"], DirectedEdge["manatee-editor", "dbus-client"], DirectedEdge["manatee-editor", "dbus-core"], DirectedEdge["manatee-editor", "derive"], DirectedEdge["manatee-editor", "filepath"], DirectedEdge["manatee-editor", "gtk"], DirectedEdge["manatee-editor", "manatee-core"], DirectedEdge["manatee-editor", "regex-tdfa"], DirectedEdge["manatee-editor", "stm"], DirectedEdge["manatee-editor", "text"], DirectedEdge["manatee-filemanager", "base"], DirectedEdge["manatee-filemanager", "binary"], DirectedEdge["manatee-filemanager", "containers"], DirectedEdge["manatee-filemanager", "dbus-client"], DirectedEdge["manatee-filemanager", "derive"], DirectedEdge["manatee-filemanager", "filepath"], DirectedEdge["manatee-filemanager", "gio"], DirectedEdge["manatee-filemanager", "glib"], DirectedEdge["manatee-filemanager", "gtk"], DirectedEdge["manatee-filemanager", "manatee-core"], DirectedEdge["manatee-filemanager", "mtl"], DirectedEdge["manatee-filemanager", "old-locale"], DirectedEdge["manatee-filemanager", "old-time"], DirectedEdge["manatee-filemanager", "stm"], DirectedEdge["manatee-filemanager", "text"], DirectedEdge["manatee-filemanager", "utf8-string"], DirectedEdge["manatee-imageviewer", "base"], DirectedEdge["manatee-imageviewer", "binary"], DirectedEdge["manatee-imageviewer", "containers"], DirectedEdge["manatee-imageviewer", "dbus-client"], DirectedEdge["manatee-imageviewer", "derive"], DirectedEdge["manatee-imageviewer", "filepath"], DirectedEdge["manatee-imageviewer", "gio"], DirectedEdge["manatee-imageviewer", "glib"], DirectedEdge["manatee-imageviewer", "gtk"], DirectedEdge["manatee-imageviewer", "gtkimageview"], DirectedEdge["manatee-imageviewer", "manatee-core"], DirectedEdge["manatee-imageviewer", "regex-tdfa"], DirectedEdge["manatee-imageviewer", "stm"], DirectedEdge["manatee-imageviewer", "text"], DirectedEdge["manatee-imageviewer", "utf8-string"], DirectedEdge["manatee-ircclient", "array"], DirectedEdge["manatee-ircclient", "base"], DirectedEdge["manatee-ircclient", "binary"], DirectedEdge["manatee-ircclient", "bytestring"], DirectedEdge["manatee-ircclient", "Cabal"], DirectedEdge["manatee-ircclient", "containers"], DirectedEdge["manatee-ircclient", "curl"], DirectedEdge["manatee-ircclient", "dbus-client"], DirectedEdge["manatee-ircclient", "dbus-core"], DirectedEdge["manatee-ircclient", "derive"], DirectedEdge["manatee-ircclient", "fastirc"], DirectedEdge["manatee-ircclient", "filepath"], DirectedEdge["manatee-ircclient", "ghc"], DirectedEdge["manatee-ircclient", "GoogleTranslate"], DirectedEdge["manatee-ircclient", "groom"], DirectedEdge["manatee-ircclient", "gtk"], DirectedEdge["manatee-ircclient", "manatee-core"], DirectedEdge["manatee-ircclient", "MorseCode"], DirectedEdge["manatee-ircclient", "mtl"], DirectedEdge["manatee-ircclient", "network"], DirectedEdge["manatee-ircclient", "regex-posix"], DirectedEdge["manatee-ircclient", "split"], DirectedEdge["manatee-ircclient", "stm"], DirectedEdge["manatee-ircclient", "template-haskell"], DirectedEdge["manatee-ircclient", "text"], DirectedEdge["manatee-ircclient", "unix"], DirectedEdge["manatee-ircclient", "utf8-string"], DirectedEdge["manatee-mplayer", "base"], DirectedEdge["manatee-mplayer", "binary"], DirectedEdge["manatee-mplayer", "bytestring"], DirectedEdge["manatee-mplayer", "containers"], DirectedEdge["manatee-mplayer", "dbus-client"], DirectedEdge["manatee-mplayer", "dbus-core"], DirectedEdge["manatee-mplayer", "derive"], DirectedEdge["manatee-mplayer", "filepath"], DirectedEdge["manatee-mplayer", "gio"], DirectedEdge["manatee-mplayer", "gtk"], DirectedEdge["manatee-mplayer", "libtagc"], DirectedEdge["manatee-mplayer", "manatee-core"], DirectedEdge["manatee-mplayer", "process"], DirectedEdge["manatee-mplayer", "random"], DirectedEdge["manatee-mplayer", "regex-tdfa"], DirectedEdge["manatee-mplayer", "stm"], DirectedEdge["manatee-mplayer", "text"], DirectedEdge["manatee-mplayer", "time"], DirectedEdge["manatee-mplayer", "unix"], DirectedEdge["manatee-mplayer", "utf8-string"], DirectedEdge["manatee-pdfviewer", "base"], DirectedEdge["manatee-pdfviewer", "binary"], DirectedEdge["manatee-pdfviewer", "cairo"], DirectedEdge["manatee-pdfviewer", "containers"], DirectedEdge["manatee-pdfviewer", "dbus-client"], DirectedEdge["manatee-pdfviewer", "derive"], DirectedEdge["manatee-pdfviewer", "filepath"], DirectedEdge["manatee-pdfviewer", "gtk"], DirectedEdge["manatee-pdfviewer", "manatee-core"], DirectedEdge["manatee-pdfviewer", "mtl"], DirectedEdge["manatee-pdfviewer", "poppler"], DirectedEdge["manatee-pdfviewer", "stm"], DirectedEdge["manatee-pdfviewer", "text"], DirectedEdge["manatee-pdfviewer", "utf8-string"], DirectedEdge["manatee-processmanager", "base"], DirectedEdge["manatee-processmanager", "binary"], DirectedEdge["manatee-processmanager", "containers"], DirectedEdge["manatee-processmanager", "dbus-client"], DirectedEdge["manatee-processmanager", "derive"], DirectedEdge["manatee-processmanager", "filepath"], DirectedEdge["manatee-processmanager", "gtk"], DirectedEdge["manatee-processmanager", "manatee-core"], DirectedEdge["manatee-processmanager", "proc"], DirectedEdge["manatee-processmanager", "stm"], DirectedEdge["manatee-processmanager", "text"], DirectedEdge["manatee-reader", "base"], DirectedEdge["manatee-reader", "binary"], DirectedEdge["manatee-reader", "containers"], DirectedEdge["manatee-reader", "curl"], DirectedEdge["manatee-reader", "dbus-client"], DirectedEdge["manatee-reader", "derive"], DirectedEdge["manatee-reader", "download-curl"], DirectedEdge["manatee-reader", "feed"], DirectedEdge["manatee-reader", "filepath"], DirectedEdge["manatee-reader", "gtk"], DirectedEdge["manatee-reader", "manatee-core"], DirectedEdge["manatee-reader", "stm"], DirectedEdge["manatee-reader", "text"], DirectedEdge["manatee-reader", "utf8-string"], DirectedEdge["manatee-reader", "webkit"], DirectedEdge["manatee-template", "base"], DirectedEdge["manatee-template", "binary"], DirectedEdge["manatee-template", "bytestring"], DirectedEdge["manatee-template", "containers"], DirectedEdge["manatee-template", "dbus-client"], DirectedEdge["manatee-template", "dbus-core"], DirectedEdge["manatee-template", "derive"], DirectedEdge["manatee-template", "filepath"], DirectedEdge["manatee-template", "gtk"], DirectedEdge["manatee-template", "manatee-core"], DirectedEdge["manatee-template", "regex-tdfa"], DirectedEdge["manatee-template", "stm"], DirectedEdge["manatee-template", "text"], DirectedEdge["manatee-terminal", "base"], DirectedEdge["manatee-terminal", "binary"], DirectedEdge["manatee-terminal", "containers"], DirectedEdge["manatee-terminal", "dbus-client"], DirectedEdge["manatee-terminal", "derive"], DirectedEdge["manatee-terminal", "filepath"], DirectedEdge["manatee-terminal", "gtk"], DirectedEdge["manatee-terminal", "manatee-core"], DirectedEdge["manatee-terminal", "stm"], DirectedEdge["manatee-terminal", "text"], DirectedEdge["manatee-terminal", "unix"], DirectedEdge["manatee-terminal", "vte"], DirectedEdge["manatee-welcome", "base"], DirectedEdge["manatee-welcome", "binary"], DirectedEdge["manatee-welcome", "bytestring"], DirectedEdge["manatee-welcome", "containers"], DirectedEdge["manatee-welcome", "dbus-client"], DirectedEdge["manatee-welcome", "dbus-core"], DirectedEdge["manatee-welcome", "derive"], DirectedEdge["manatee-welcome", "filepath"], DirectedEdge["manatee-welcome", "gtk"], DirectedEdge["manatee-welcome", "manatee-core"], DirectedEdge["manatee-welcome", "regex-tdfa"], DirectedEdge["manatee-welcome", "stm"], DirectedEdge["manatee-welcome", "text"], DirectedEdge["mancala", "base"], DirectedEdge["mandrill", "aeson"], DirectedEdge["mandrill", "base"], DirectedEdge["mandrill", "base64-bytestring"], DirectedEdge["mandrill", "blaze-html"], DirectedEdge["mandrill", "bytestring"], DirectedEdge["mandrill", "containers"], DirectedEdge["mandrill", "email-validate"], DirectedEdge["mandrill", "http-client"], DirectedEdge["mandrill", "http-client-tls"], DirectedEdge["mandrill", "http-types"], DirectedEdge["mandrill", "lens"], DirectedEdge["mandrill", "mtl"], DirectedEdge["mandrill", "old-locale"], DirectedEdge["mandrill", "QuickCheck"], DirectedEdge["mandrill", "text"], DirectedEdge["mandrill", "time"], DirectedEdge["mandrill", "unordered-containers"], DirectedEdge["mandulia", "array"], DirectedEdge["mandulia", "base"], DirectedEdge["mandulia", "bytestring"], DirectedEdge["mandulia", "containers"], DirectedEdge["mandulia", "directory"], DirectedEdge["mandulia", "filepath"], DirectedEdge["mandulia", "GLUT"], DirectedEdge["mandulia", "hslua"], DirectedEdge["mandulia", "time"], DirectedEdge["mangopay", "aeson"], DirectedEdge["mangopay", "async"], DirectedEdge["mangopay", "attoparsec"], DirectedEdge["mangopay", "base"], DirectedEdge["mangopay", "base16-bytestring"], DirectedEdge["mangopay", "base64-bytestring"], DirectedEdge["mangopay", "blaze-builder"], DirectedEdge["mangopay", "bytestring"], DirectedEdge["mangopay", "case-insensitive"], DirectedEdge["mangopay", "conduit"], DirectedEdge["mangopay", "conduit-extra"], DirectedEdge["mangopay", "connection"], DirectedEdge["mangopay", "country-codes"], DirectedEdge["mangopay", "data-default"], DirectedEdge["mangopay", "http-conduit"], DirectedEdge["mangopay", "http-types"], DirectedEdge["mangopay", "HUnit"], DirectedEdge["mangopay", "lifted-base"], DirectedEdge["mangopay", "mangopay"], DirectedEdge["mangopay", "monad-control"], DirectedEdge["mangopay", "monad-logger"], DirectedEdge["mangopay", "resourcet"], DirectedEdge["mangopay", "template-haskell"], DirectedEdge["mangopay", "text"], DirectedEdge["mangopay", "time"], DirectedEdge["mangopay", "tls"], DirectedEdge["mangopay", "transformers"], DirectedEdge["mangopay", "transformers-base"], DirectedEdge["mangopay", "unordered-containers"], DirectedEdge["mangopay", "utf8-string"], DirectedEdge["mangopay", "vector"], DirectedEdge["mangopay", "wai"], DirectedEdge["mangopay", "warp"], DirectedEdge["mangopay", "x509-system"], DirectedEdge["manifold-random", "base"], DirectedEdge["manifold-random", "manifolds"], DirectedEdge["manifold-random", "random-fu"], DirectedEdge["manifold-random", "vector-space"], DirectedEdge["manifolds", "base"], DirectedEdge["manifolds", "comonad"], DirectedEdge["manifolds", "constrained-categories"], DirectedEdge["manifolds", "containers"], DirectedEdge["manifolds", "deepseq"], DirectedEdge["manifolds", "hmatrix"], DirectedEdge["manifolds", "MemoTrie"], DirectedEdge["manifolds", "semigroups"], DirectedEdge["manifolds", "tagged"], DirectedEdge["manifolds", "transformers"], DirectedEdge["manifolds", "trivial-constraint"], DirectedEdge["manifolds", "vector"], DirectedEdge["manifolds", "vector-space"], DirectedEdge["manifolds", "void"], DirectedEdge["map-exts", "base"], DirectedEdge["map-exts", "bytestring"], DirectedEdge["map-exts", "cassava"], DirectedEdge["map-exts", "containers"], DirectedEdge["map-syntax", "base"], DirectedEdge["map-syntax", "containers"], DirectedEdge["map-syntax", "mtl"], DirectedEdge["mappy", "ansi-terminal"], DirectedEdge["mappy", "base"], DirectedEdge["mappy", "containers"], DirectedEdge["mappy", "directory"], DirectedEdge["mappy", "haskeline"], DirectedEdge["mappy", "mappy"], DirectedEdge["mappy", "parsec"], DirectedEdge["marionetta", "base"], DirectedEdge["marionetta", "containers"], DirectedEdge["marionetta", "gloss"], DirectedEdge["marionetta", "mtl"], DirectedEdge["marionetta", "splines"], DirectedEdge["marionetta", "vector"], DirectedEdge["marionetta", "vector-space"], DirectedEdge["markdown", "attoparsec"], DirectedEdge["markdown", "base"], DirectedEdge["markdown", "blaze-html"], DirectedEdge["markdown", "blaze-markup"], DirectedEdge["markdown", "conduit"], DirectedEdge["markdown", "conduit-extra"], DirectedEdge["markdown", "containers"], DirectedEdge["markdown", "data-default"], DirectedEdge["markdown", "text"], DirectedEdge["markdown", "transformers"], DirectedEdge["markdown", "xml-conduit"], DirectedEdge["markdown", "xml-types"], DirectedEdge["markdown", "xss-sanitize"], DirectedEdge["markdown-kate", "markdown"], DirectedEdge["markdown-kate", "attoparsec"], DirectedEdge["markdown-kate", "attoparsec-conduit"], DirectedEdge["markdown-kate", "base"], DirectedEdge["markdown-kate", "blaze-html"], DirectedEdge["markdown-kate", "conduit"], DirectedEdge["markdown-kate", "containers"], DirectedEdge["markdown-kate", "data-default"], DirectedEdge["markdown-kate", "highlighting-kate"], DirectedEdge["markdown-kate", "text"], DirectedEdge["markdown-kate", "transformers"], DirectedEdge["markdown-kate", "xss-sanitize"], DirectedEdge["markdown-pap", "base"], DirectedEdge["markdown-pap", "monads-tf"], DirectedEdge["markdown-pap", "papillon"], DirectedEdge["markdown-unlit", "base"], DirectedEdge["markdown-unlit", "base-compat"], DirectedEdge["markdown-unlit", "markdown-unlit"], DirectedEdge["markdown2svg", "base"], DirectedEdge["markdown2svg", "binary-file"], DirectedEdge["markdown2svg", "Cabal"], DirectedEdge["markdown2svg", "directory"], DirectedEdge["markdown2svg", "filepath"], DirectedEdge["markdown2svg", "markdown-pap"], DirectedEdge["markdown2svg", "monads-tf"], DirectedEdge["markdown2svg", "papillon"], DirectedEdge["markdown2svg", "png-file"], DirectedEdge["markdown2svg", "yjsvg"], DirectedEdge["marked-pretty", "base"], DirectedEdge["marked-pretty", "deepseq"], DirectedEdge["marked-pretty", "ghc-prim"], DirectedEdge["markov", "base"], DirectedEdge["markov-chain", "base"], DirectedEdge["markov-chain", "containers"], DirectedEdge["markov-chain", "random"], DirectedEdge["markov-chain", "transformers"], DirectedEdge["markov-processes", "base"], DirectedEdge["markov-processes", "bifunctors"], DirectedEdge["markov-processes", "memoize"], DirectedEdge["markov-processes", "MonadRandom"], DirectedEdge["markov-processes", "random"], DirectedEdge["markup", "base"], DirectedEdge["markup", "blaze-html"], DirectedEdge["markup", "blaze-markup"], DirectedEdge["markup", "clay"], DirectedEdge["markup", "comonad"], DirectedEdge["markup", "lucid"], DirectedEdge["markup", "mmorph"], DirectedEdge["markup", "monad-control"], DirectedEdge["markup", "monad-logger"], DirectedEdge["markup", "mtl"], DirectedEdge["markup", "path-extra"], DirectedEdge["markup", "resourcet"], DirectedEdge["markup", "text"], DirectedEdge["markup", "transformers-base"], DirectedEdge["markup", "urlpath"], DirectedEdge["markup-preview", "base"], DirectedEdge["markup-preview", "cmdargs"], DirectedEdge["markup-preview", "directory"], DirectedEdge["markup-preview", "glib"], DirectedEdge["markup-preview", "gtk"], DirectedEdge["markup-preview", "gtk2hs-buildtools"], DirectedEdge["markup-preview", "MissingH"], DirectedEdge["markup-preview", "mtl"], DirectedEdge["markup-preview", "pandoc"], DirectedEdge["markup-preview", "temporary"], DirectedEdge["markup-preview", "text"], DirectedEdge["markup-preview", "transformers"], DirectedEdge["markup-preview", "webkit"], DirectedEdge["marmalade-upload", "aeson"], DirectedEdge["marmalade-upload", "base"], DirectedEdge["marmalade-upload", "bytestring"], DirectedEdge["marmalade-upload", "Cabal"], DirectedEdge["marmalade-upload", "data-default"], DirectedEdge["marmalade-upload", "directory"], DirectedEdge["marmalade-upload", "exceptions"], DirectedEdge["marmalade-upload", "filepath"], DirectedEdge["marmalade-upload", "http-client"], DirectedEdge["marmalade-upload", "http-client-tls"], DirectedEdge["marmalade-upload", "http-types"], DirectedEdge["marmalade-upload", "keyring"], DirectedEdge["marmalade-upload", "marmalade-upload"], DirectedEdge["marmalade-upload", "mtl"], DirectedEdge["marmalade-upload", "network"], DirectedEdge["marmalade-upload", "optparse-applicative"], DirectedEdge["marmalade-upload", "process"], DirectedEdge["marmalade-upload", "shake"], DirectedEdge["marmalade-upload", "split"], DirectedEdge["marmalade-upload", "text"], DirectedEdge["marmalade-upload", "transformers"], DirectedEdge["marmalade-upload", "zip-archive"], DirectedEdge["marquise", "async"], DirectedEdge["marquise", "attoparsec"], DirectedEdge["marquise", "base"], DirectedEdge["marquise", "binary"], DirectedEdge["marquise", "bytestring"], DirectedEdge["marquise", "containers"], DirectedEdge["marquise", "cryptohash"], DirectedEdge["marquise", "directory"], DirectedEdge["marquise", "either"], DirectedEdge["marquise", "errors"], DirectedEdge["marquise", "fast-logger"], DirectedEdge["marquise", "filepath"], DirectedEdge["marquise", "hashable"], DirectedEdge["marquise", "hslogger"], DirectedEdge["marquise", "lifted-async"], DirectedEdge["marquise", "marquise"], DirectedEdge["marquise", "mmorph"], DirectedEdge["marquise", "monad-control"], DirectedEdge["marquise", "monad-logger"], DirectedEdge["marquise", "mtl"], DirectedEdge["marquise", "old-locale"], DirectedEdge["marquise", "optparse-applicative"], DirectedEdge["marquise", "packer"], DirectedEdge["marquise", "pipes"], DirectedEdge["marquise", "pipes-attoparsec"], DirectedEdge["marquise", "pipes-bytestring"], DirectedEdge["marquise", "pipes-group"], DirectedEdge["marquise", "semigroups"], DirectedEdge["marquise", "siphash"], DirectedEdge["marquise", "text"], DirectedEdge["marquise", "time"], DirectedEdge["marquise", "transformers"], DirectedEdge["marquise", "transformers-base"], DirectedEdge["marquise", "unix"], DirectedEdge["marquise", "unordered-containers"], DirectedEdge["marquise", "vaultaire-common"], DirectedEdge["marquise", "zeromq4-haskell"], DirectedEdge["marxup", "base"], DirectedEdge["marxup", "configurator"], DirectedEdge["marxup", "containers"], DirectedEdge["marxup", "cubicbezier"], DirectedEdge["marxup", "directory"], DirectedEdge["marxup", "dlist"], DirectedEdge["marxup", "filepath"], DirectedEdge["marxup", "glpk-hs"], DirectedEdge["marxup", "graphviz"], DirectedEdge["marxup", "labeled-tree"], DirectedEdge["marxup", "lens"], DirectedEdge["marxup", "mtl"], DirectedEdge["marxup", "parsek"], DirectedEdge["marxup", "polynomials-bernstein"], DirectedEdge["marxup", "pretty"], DirectedEdge["marxup", "process"], DirectedEdge["marxup", "text"], DirectedEdge["marxup", "typography-geometry"], DirectedEdge["marxup", "vector"], DirectedEdge["masakazu-bot", "authenticate-oauth"], DirectedEdge["masakazu-bot", "base"], DirectedEdge["masakazu-bot", "bytestring"], DirectedEdge["masakazu-bot", "conduit"], DirectedEdge["masakazu-bot", "datetime"], DirectedEdge["masakazu-bot", "lens"], DirectedEdge["masakazu-bot", "monad-logger"], DirectedEdge["masakazu-bot", "parsers"], DirectedEdge["masakazu-bot", "persistent"], DirectedEdge["masakazu-bot", "persistent-sqlite"], DirectedEdge["masakazu-bot", "persistent-template"], DirectedEdge["masakazu-bot", "regex-posix"], DirectedEdge["masakazu-bot", "text"], DirectedEdge["masakazu-bot", "transformers"], DirectedEdge["masakazu-bot", "twitter-conduit"], DirectedEdge["masakazu-bot", "twitter-types"], DirectedEdge["mastermind", "base"], DirectedEdge["mastermind", "random"], DirectedEdge["matcher", "base"], DirectedEdge["matcher", "base-prelude"], DirectedEdge["matcher", "profunctors"], DirectedEdge["matcher", "success"], DirectedEdge["matcher", "text"], DirectedEdge["matcher", "transformers"], DirectedEdge["matchers", "base"], DirectedEdge["matchers", "bytestring"], DirectedEdge["matchers", "prednote"], DirectedEdge["matchers", "text"], DirectedEdge["math-functions", "base"], DirectedEdge["math-functions", "deepseq"], DirectedEdge["math-functions", "erf"], DirectedEdge["math-functions", "primitive"], DirectedEdge["math-functions", "vector"], DirectedEdge["math-functions", "vector-th-unbox"], DirectedEdge["mathblog", "base"], DirectedEdge["mathblog", "bytestring"], DirectedEdge["mathblog", "ConfigFile"], DirectedEdge["mathblog", "containers"], DirectedEdge["mathblog", "data-default"], DirectedEdge["mathblog", "deepseq"], DirectedEdge["mathblog", "directory"], DirectedEdge["mathblog", "either"], DirectedEdge["mathblog", "filepath"], DirectedEdge["mathblog", "fsnotify"], DirectedEdge["mathblog", "HStringTemplate"], DirectedEdge["mathblog", "HTTP"], DirectedEdge["mathblog", "http-server"], DirectedEdge["mathblog", "HUnit"], DirectedEdge["mathblog", "JuicyPixels"], DirectedEdge["mathblog", "mtl"], DirectedEdge["mathblog", "network"], DirectedEdge["mathblog", "old-locale"], DirectedEdge["mathblog", "pandoc"], DirectedEdge["mathblog", "pandoc-types"], DirectedEdge["mathblog", "process"], DirectedEdge["mathblog", "SHA"], DirectedEdge["mathblog", "system-filepath"], DirectedEdge["mathblog", "temporary"], DirectedEdge["mathblog", "test-framework"], DirectedEdge["mathblog", "test-framework-hunit"], DirectedEdge["mathblog", "time"], DirectedEdge["mathblog", "unix"], DirectedEdge["mathblog", "url"], DirectedEdge["mathgenealogy", "base"], DirectedEdge["mathgenealogy", "binary"], DirectedEdge["mathgenealogy", "bytestring"], DirectedEdge["mathgenealogy", "cmdargs"], DirectedEdge["mathgenealogy", "containers"], DirectedEdge["mathgenealogy", "directory"], DirectedEdge["mathgenealogy", "fgl"], DirectedEdge["mathgenealogy", "filepath"], DirectedEdge["mathgenealogy", "graphviz"], DirectedEdge["mathgenealogy", "HTTP"], DirectedEdge["mathgenealogy", "process"], DirectedEdge["mathgenealogy", "safe"], DirectedEdge["mathgenealogy", "tagsoup"], DirectedEdge["mathgenealogy", "text"], DirectedEdge["mathista", "base"], DirectedEdge["mathista", "filepath"], DirectedEdge["mathista", "MissingH"], DirectedEdge["mathista", "parsec"], DirectedEdge["mathista", "regex-compat"], DirectedEdge["mathista", "split"], DirectedEdge["mathlink", "array"], DirectedEdge["mathlink", "base"], DirectedEdge["mathlink", "containers"], DirectedEdge["mathlink", "ix-shapable"], DirectedEdge["mathlink", "mtl"], DirectedEdge["matlab", "array"], DirectedEdge["matlab", "base"], DirectedEdge["matlab", "Cabal"], DirectedEdge["matlab", "filepath"], DirectedEdge["matlab", "unix"], DirectedEdge["matrices", "base"], DirectedEdge["matrices", "primitive"], DirectedEdge["matrices", "vector"], DirectedEdge["matrix", "base"], DirectedEdge["matrix", "deepseq"], DirectedEdge["matrix", "loop"], DirectedEdge["matrix", "primitive"], DirectedEdge["matrix", "vector"], DirectedEdge["matrix-market", "base"], DirectedEdge["matrix-market", "bytestring"], DirectedEdge["matrix-market-pure", "array"], DirectedEdge["matrix-market-pure", "base"], DirectedEdge["matrix-market-pure", "containers"], DirectedEdge["matsuri", "base"], DirectedEdge["matsuri", "ConfigFile"], DirectedEdge["matsuri", "containers"], DirectedEdge["matsuri", "directory"], DirectedEdge["matsuri", "MissingH"], DirectedEdge["matsuri", "mtl"], DirectedEdge["matsuri", "network"], DirectedEdge["matsuri", "old-locale"], DirectedEdge["matsuri", "split"], DirectedEdge["matsuri", "time"], DirectedEdge["matsuri", "vty"], DirectedEdge["matsuri", "vty-ui"], DirectedEdge["matsuri", "XMPP"], DirectedEdge["maude", "base"], DirectedEdge["maude", "directory"], DirectedEdge["maude", "filepath"], DirectedEdge["maude", "process"], DirectedEdge["maude", "process-extras"], DirectedEdge["maude", "temporary"], DirectedEdge["maude", "text"], DirectedEdge["maude", "xml"], DirectedEdge["maxent", "ad"], DirectedEdge["maxent", "base"], DirectedEdge["maxent", "lagrangian"], DirectedEdge["maxent", "nonlinear-optimization"], DirectedEdge["maxent", "vector"], DirectedEdge["maximal-cliques", "base"], DirectedEdge["maximal-cliques", "containers"], DirectedEdge["maximal-cliques", "vector"], DirectedEdge["maxsharing", "base"], DirectedEdge["maxsharing", "base-unicode-symbols"], DirectedEdge["maxsharing", "boxes"], DirectedEdge["maxsharing", "containers"], DirectedEdge["maxsharing", "containers-unicode-symbols"], DirectedEdge["maxsharing", "HaLeX"], DirectedEdge["maxsharing", "IndentParser"], DirectedEdge["maxsharing", "mtl"], DirectedEdge["maxsharing", "parsec"], DirectedEdge["maxsharing", "process"], DirectedEdge["maxsharing", "uuagc"], DirectedEdge["maxsharing", "uuagc-cabal"], DirectedEdge["maybe-justify", "base"], DirectedEdge["maybench", "base"], DirectedEdge["maybench", "benchpress"], DirectedEdge["maybench", "Cabal"], DirectedEdge["maybench", "directory"], DirectedEdge["maybench", "filepath"], DirectedEdge["maybench", "mtl"], DirectedEdge["maybench", "old-time"], DirectedEdge["maybench", "process"], DirectedEdge["maybench", "time"], DirectedEdge["mbox", "base"], DirectedEdge["mbox", "safe"], DirectedEdge["mbox", "text"], DirectedEdge["mbox", "time"], DirectedEdge["mbox", "time-locale-compat"], DirectedEdge["mbox-tools", "base"], DirectedEdge["mbox-tools", "bytestring"], DirectedEdge["mbox-tools", "codec-mbox"], DirectedEdge["mbox-tools", "containers"], DirectedEdge["mbox-tools", "fclabels"], DirectedEdge["mbox-tools", "hsemail"], DirectedEdge["mbox-tools", "hutt"], DirectedEdge["mbox-tools", "mtl"], DirectedEdge["mbox-tools", "parsec"], DirectedEdge["mbox-tools", "process"], DirectedEdge["mbox-tools", "random"], DirectedEdge["mcmaster-gloss-examples", "base"], DirectedEdge["mcmaster-gloss-examples", "gloss"], DirectedEdge["mcmc-samplers", "base"], DirectedEdge["mcmc-samplers", "containers"], DirectedEdge["mcmc-samplers", "hakaru"], DirectedEdge["mcmc-samplers", "hmatrix"], DirectedEdge["mcmc-samplers", "mwc-random"], DirectedEdge["mcmc-samplers", "primitive"], DirectedEdge["mcmc-samplers", "statistics"], DirectedEdge["mcmc-synthesis", "base"], DirectedEdge["mcmc-synthesis", "MonadRandom"], DirectedEdge["mcmc-types", "base"], DirectedEdge["mcmc-types", "containers"], DirectedEdge["mcmc-types", "mwc-probability"], DirectedEdge["mcmc-types", "transformers"], DirectedEdge["mcpi", "base"], DirectedEdge["mcpi", "mcpi"], DirectedEdge["mcpi", "network"], DirectedEdge["mcpi", "pipes"], DirectedEdge["mcpi", "split"], DirectedEdge["mcpi", "transformers"], DirectedEdge["mdapi", "aeson"], DirectedEdge["mdapi", "base"], DirectedEdge["mdapi", "bytestring"], DirectedEdge["mdapi", "data-default"], DirectedEdge["mdapi", "lens"], DirectedEdge["mdapi", "lens-aeson"], DirectedEdge["mdapi", "text"], DirectedEdge["mdapi", "transformers"], DirectedEdge["mdapi", "wreq"], DirectedEdge["mdcat", "ansi-terminal"], DirectedEdge["mdcat", "base"], DirectedEdge["mdcat", "directory"], DirectedEdge["mdcat", "pandoc"], DirectedEdge["mdcat", "terminfo"], DirectedEdge["mdo", "base"], DirectedEdge["mdo", "process"], DirectedEdge["mdp", "base"], DirectedEdge["mdp", "containers"], DirectedEdge["mdp", "vector"], DirectedEdge["mecab", "base"], DirectedEdge["mecab", "bytestring"], DirectedEdge["mecab", "text"], DirectedEdge["mecha", "base"], DirectedEdge["mediawiki", "base"], DirectedEdge["mediawiki", "HTTP"], DirectedEdge["mediawiki", "mediawiki"], DirectedEdge["mediawiki", "mime"], DirectedEdge["mediawiki", "network"], DirectedEdge["mediawiki", "pretty"], DirectedEdge["mediawiki", "utf8-string"], DirectedEdge["mediawiki", "xml"], DirectedEdge["mediawiki2latex", "array"], DirectedEdge["mediawiki2latex", "base"], DirectedEdge["mediawiki2latex", "blaze-html"], DirectedEdge["mediawiki2latex", "bytestring"], DirectedEdge["mediawiki2latex", "containers"], DirectedEdge["mediawiki2latex", "directory"], DirectedEdge["mediawiki2latex", "directory-tree"], DirectedEdge["mediawiki2latex", "file-embed"], DirectedEdge["mediawiki2latex", "filepath"], DirectedEdge["mediawiki2latex", "happstack-server"], DirectedEdge["mediawiki2latex", "highlighting-kate"], DirectedEdge["mediawiki2latex", "HTTP"], DirectedEdge["mediawiki2latex", "http-conduit"], DirectedEdge["mediawiki2latex", "hxt"], DirectedEdge["mediawiki2latex", "hxt-http"], DirectedEdge["mediawiki2latex", "mtl"], DirectedEdge["mediawiki2latex", "network"], DirectedEdge["mediawiki2latex", "parsec"], DirectedEdge["mediawiki2latex", "process"], DirectedEdge["mediawiki2latex", "split"], DirectedEdge["mediawiki2latex", "temporary"], DirectedEdge["mediawiki2latex", "text"], DirectedEdge["mediawiki2latex", "transformers"], DirectedEdge["mediawiki2latex", "url"], DirectedEdge["mediawiki2latex", "utf8-string"], DirectedEdge["mediawiki2latex", "utility-ht"], DirectedEdge["medium-sdk-haskell", "aeson"], DirectedEdge["medium-sdk-haskell", "base"], DirectedEdge["medium-sdk-haskell", "bytestring"], DirectedEdge["medium-sdk-haskell", "data-default-class"], DirectedEdge["medium-sdk-haskell", "either"], DirectedEdge["medium-sdk-haskell", "http-client"], DirectedEdge["medium-sdk-haskell", "servant-client"], DirectedEdge["medium-sdk-haskell", "servant-server"], DirectedEdge["medium-sdk-haskell", "text"], DirectedEdge["medium-sdk-haskell", "time"], DirectedEdge["meep", "base"], DirectedEdge["meep", "bifunctors"], DirectedEdge["meep", "lens"], DirectedEdge["meep", "semigroupoids"], DirectedEdge["meep", "semigroups"], DirectedEdge["mega-sdist", "cabal-src"], DirectedEdge["mega-sdist", "base"], DirectedEdge["mega-sdist", "bytestring"], DirectedEdge["mega-sdist", "conduit"], DirectedEdge["mega-sdist", "containers"], DirectedEdge["mega-sdist", "directory"], DirectedEdge["mega-sdist", "http-conduit"], DirectedEdge["mega-sdist", "http-types"], DirectedEdge["mega-sdist", "network"], DirectedEdge["mega-sdist", "shelly"], DirectedEdge["mega-sdist", "system-fileio"], DirectedEdge["mega-sdist", "system-filepath"], DirectedEdge["mega-sdist", "tar"], DirectedEdge["mega-sdist", "text"], DirectedEdge["mega-sdist", "transformers"], DirectedEdge["mega-sdist", "zlib-conduit"], DirectedEdge["megaparsec", "base"], DirectedEdge["megaparsec", "bytestring"], DirectedEdge["megaparsec", "containers"], DirectedEdge["megaparsec", "exceptions"], DirectedEdge["megaparsec", "fail"], DirectedEdge["megaparsec", "mtl"], DirectedEdge["megaparsec", "scientific"], DirectedEdge["megaparsec", "semigroups"], DirectedEdge["megaparsec", "tagged"], DirectedEdge["megaparsec", "text"], DirectedEdge["megaparsec", "transformers"], DirectedEdge["meldable-heap", "base"], DirectedEdge["melody", "base"], DirectedEdge["melody", "containers"], DirectedEdge["melody", "either"], DirectedEdge["melody", "lens"], DirectedEdge["melody", "melody"], DirectedEdge["melody", "mtl"], DirectedEdge["melody", "parsec"], DirectedEdge["melody", "ParsecTools"], DirectedEdge["memcache", "base"], DirectedEdge["memcache", "binary"], DirectedEdge["memcache", "blaze-builder"], DirectedEdge["memcache", "bytestring"], DirectedEdge["memcache", "data-default-class"], DirectedEdge["memcache", "hashable"], DirectedEdge["memcache", "network"], DirectedEdge["memcache", "resource-pool"], DirectedEdge["memcache", "time"], DirectedEdge["memcache", "vector"], DirectedEdge["memcache-conduit", "attoparsec"], DirectedEdge["memcache-conduit", "attoparsec-binary"], DirectedEdge["memcache-conduit", "base"], DirectedEdge["memcache-conduit", "bytestring"], DirectedEdge["memcache-conduit", "conduit"], DirectedEdge["memcache-conduit", "conduit-extra"], DirectedEdge["memcache-conduit", "containers"], DirectedEdge["memcache-conduit", "hashtables"], DirectedEdge["memcache-conduit", "memcache-conduit"], DirectedEdge["memcache-conduit", "memcache-haskell"], DirectedEdge["memcache-conduit", "monad-control"], DirectedEdge["memcache-conduit", "mtl"], DirectedEdge["memcache-conduit", "network"], DirectedEdge["memcache-conduit", "resourcet"], DirectedEdge["memcache-conduit", "split"], DirectedEdge["memcache-conduit", "stm"], DirectedEdge["memcache-conduit", "transformers"], DirectedEdge["memcache-haskell", "attoparsec"], DirectedEdge["memcache-haskell", "base"], DirectedEdge["memcache-haskell", "bytestring"], DirectedEdge["memcache-haskell", "conduit-extra"], DirectedEdge["memcache-haskell", "containers"], DirectedEdge["memcache-haskell", "hashable"], DirectedEdge["memcache-haskell", "hashtables"], DirectedEdge["memcache-haskell", "memcache-haskell"], DirectedEdge["memcache-haskell", "mtl"], DirectedEdge["memcache-haskell", "network"], DirectedEdge["memcache-haskell", "resourcet"], DirectedEdge["memcache-haskell", "split"], DirectedEdge["memcache-haskell", "stm"], DirectedEdge["memcache-haskell", "transformers"], DirectedEdge["memcached", "base"], DirectedEdge["memcached", "bytestring"], DirectedEdge["memcached", "network"], DirectedEdge["memcached", "utf8-light"], DirectedEdge["memcached-binary", "base"], DirectedEdge["memcached-binary", "bytestring"], DirectedEdge["memcached-binary", "data-default-class"], DirectedEdge["memcached-binary", "network"], DirectedEdge["memcached-binary", "resource-pool"], DirectedEdge["memcached-binary", "storable-endian"], DirectedEdge["memcached-binary", "time"], DirectedEdge["memcached-binary", "unordered-containers"], DirectedEdge["memexml", "base"], DirectedEdge["memexml", "hxt"], DirectedEdge["memo-ptr", "base"], DirectedEdge["memo-ptr", "containers"], DirectedEdge["memo-sqlite", "base"], DirectedEdge["memo-sqlite", "direct-sqlite"], DirectedEdge["memoization-utils", "base"], DirectedEdge["memoization-utils", "containers"], DirectedEdge["memoization-utils", "lrucache"], DirectedEdge["memoization-utils", "time"], DirectedEdge["memoization-utils", "time-units"], DirectedEdge["memoize", "base"], DirectedEdge["memoize", "template-haskell"], DirectedEdge["memory", "base"], DirectedEdge["memory", "bytestring"], DirectedEdge["memory", "deepseq"], DirectedEdge["memory", "ghc-prim"], DirectedEdge["memscript", "base"], DirectedEdge["memscript", "haskeline"], DirectedEdge["memscript", "transformers"], DirectedEdge["mersenne-random", "base"], DirectedEdge["mersenne-random", "old-time"], DirectedEdge["mersenne-random-pure64", "base"], DirectedEdge["mersenne-random-pure64", "old-time"], DirectedEdge["mersenne-random-pure64", "random"], DirectedEdge["messagepack", "base"], DirectedEdge["messagepack", "bytestring"], DirectedEdge["messagepack", "cereal"], DirectedEdge["messagepack", "containers"], DirectedEdge["messagepack-rpc", "base"], DirectedEdge["messagepack-rpc", "bytestring"], DirectedEdge["messagepack-rpc", "cereal"], DirectedEdge["messagepack-rpc", "containers"], DirectedEdge["messagepack-rpc", "messagepack"], DirectedEdge["messagepack-rpc", "network-simple"], DirectedEdge["messente", "base"], DirectedEdge["messente", "bytestring"], DirectedEdge["messente", "HTTP"], DirectedEdge["messente", "http-conduit"], DirectedEdge["messente", "network"], DirectedEdge["meta-misc", "base"], DirectedEdge["meta-misc", "loch-th"], DirectedEdge["meta-misc", "template-haskell"], DirectedEdge["meta-par", "abstract-deque"], DirectedEdge["meta-par", "abstract-par"], DirectedEdge["meta-par", "base"], DirectedEdge["meta-par", "bytestring"], DirectedEdge["meta-par", "containers"], DirectedEdge["meta-par", "deepseq"], DirectedEdge["meta-par", "mtl"], DirectedEdge["meta-par", "mwc-random"], DirectedEdge["meta-par", "transformers"], DirectedEdge["meta-par", "vector"], DirectedEdge["meta-par-accelerate", "abstract-deque"], DirectedEdge["meta-par-accelerate", "abstract-par"], DirectedEdge["meta-par-accelerate", "abstract-par-accelerate"], DirectedEdge["meta-par-accelerate", "accelerate"], DirectedEdge["meta-par-accelerate", "accelerate-cuda"], DirectedEdge["meta-par-accelerate", "array"], DirectedEdge["meta-par-accelerate", "base"], DirectedEdge["meta-par-accelerate", "meta-par"], DirectedEdge["meta-par-accelerate", "QuickCheck"], DirectedEdge["meta-par-accelerate", "transformers"], DirectedEdge["meta-par-accelerate", "vector"], DirectedEdge["metadata", "base"], DirectedEdge["metadata", "text"], DirectedEdge["metadata", "time"], DirectedEdge["metamorphic", "base"], DirectedEdge["metaplug", "hint"], DirectedEdge["metaplug", "base"], DirectedEdge["metaplug", "Cabal"], DirectedEdge["metaplug", "filepath"], DirectedEdge["metaplug", "ghc"], DirectedEdge["metric", "base"], DirectedEdge["metric", "data-default"], DirectedEdge["metric", "edit-distance"], DirectedEdge["metric", "hmatrix"], DirectedEdge["metric", "vector"], DirectedEdge["metrics", "ansi-terminal"], DirectedEdge["metrics", "base"], DirectedEdge["metrics", "bytestring"], DirectedEdge["metrics", "containers"], DirectedEdge["metrics", "lens"], DirectedEdge["metrics", "mtl"], DirectedEdge["metrics", "mwc-random"], DirectedEdge["metrics", "primitive"], DirectedEdge["metrics", "text"], DirectedEdge["metrics", "time"], DirectedEdge["metrics", "unix"], DirectedEdge["metrics", "unordered-containers"], DirectedEdge["metrics", "vector"], DirectedEdge["metrics", "vector-algorithms"], DirectedEdge["metricsd-client", "base"], DirectedEdge["metricsd-client", "network"], DirectedEdge["metronome", "base"], DirectedEdge["metronome", "data-lens"], DirectedEdge["metronome", "data-lens-template"], DirectedEdge["metronome", "hosc"], DirectedEdge["metronome", "stm"], DirectedEdge["mezzolens", "base"], DirectedEdge["mezzolens", "containers"], DirectedEdge["mezzolens", "mtl"], DirectedEdge["mezzolens", "transformers"], DirectedEdge["mfsolve", "base"], DirectedEdge["mfsolve", "hashable"], DirectedEdge["mfsolve", "mtl"], DirectedEdge["mfsolve", "mtl-compat"], DirectedEdge["mfsolve", "unordered-containers"], DirectedEdge["mgeneric", "base"], DirectedEdge["mgeneric", "containers"], DirectedEdge["mgeneric", "lens"], DirectedEdge["mgeneric", "mtl"], DirectedEdge["mgeneric", "template-haskell"], DirectedEdge["mi", "base"], DirectedEdge["mi", "haskell-src-meta"], DirectedEdge["mi", "parsec"], DirectedEdge["mi", "split"], DirectedEdge["mi", "template-haskell"], DirectedEdge["microbench", "base"], DirectedEdge["microbench", "time"], DirectedEdge["microformats2-parser", "aeson"], DirectedEdge["microformats2-parser", "aeson-pretty"], DirectedEdge["microformats2-parser", "aeson-qq"], DirectedEdge["microformats2-parser", "attoparsec"], DirectedEdge["microformats2-parser", "base"], DirectedEdge["microformats2-parser", "base-compat"], DirectedEdge["microformats2-parser", "blaze-html"], DirectedEdge["microformats2-parser", "blaze-markup"], DirectedEdge["microformats2-parser", "bytestring"], DirectedEdge["microformats2-parser", "containers"], DirectedEdge["microformats2-parser", "data-default"], DirectedEdge["microformats2-parser", "either"], DirectedEdge["microformats2-parser", "errors"], DirectedEdge["microformats2-parser", "html-conduit"], DirectedEdge["microformats2-parser", "lens-aeson"], DirectedEdge["microformats2-parser", "microformats2-parser"], DirectedEdge["microformats2-parser", "network"], DirectedEdge["microformats2-parser", "network-uri"], DirectedEdge["microformats2-parser", "options"], DirectedEdge["microformats2-parser", "pcre-heavy"], DirectedEdge["microformats2-parser", "safe"], DirectedEdge["microformats2-parser", "scotty"], DirectedEdge["microformats2-parser", "streaming-commons"], DirectedEdge["microformats2-parser", "tagsoup"], DirectedEdge["microformats2-parser", "text"], DirectedEdge["microformats2-parser", "time"], DirectedEdge["microformats2-parser", "transformers"], DirectedEdge["microformats2-parser", "unordered-containers"], DirectedEdge["microformats2-parser", "vector"], DirectedEdge["microformats2-parser", "wai-extra"], DirectedEdge["microformats2-parser", "warp"], DirectedEdge["microformats2-parser", "xml-lens"], DirectedEdge["microformats2-parser", "xss-sanitize"], DirectedEdge["microformats2-types", "microformats2-parser"], DirectedEdge["microformats2-types", "aeson"], DirectedEdge["microformats2-types", "aeson"], DirectedEdge["microformats2-types", "base"], DirectedEdge["microformats2-types", "data-default-class"], DirectedEdge["microformats2-types", "pandoc-types"], DirectedEdge["microformats2-types", "setters"], DirectedEdge["microformats2-types", "text"], DirectedEdge["microformats2-types", "time"], DirectedEdge["microlens", "base"], DirectedEdge["microlens", "transformers"], DirectedEdge["microlens-aeson", "aeson"], DirectedEdge["microlens-aeson", "attoparsec"], DirectedEdge["microlens-aeson", "base"], DirectedEdge["microlens-aeson", "bytestring"], DirectedEdge["microlens-aeson", "microlens"], DirectedEdge["microlens-aeson", "scientific"], DirectedEdge["microlens-aeson", "text"], DirectedEdge["microlens-aeson", "unordered-containers"], DirectedEdge["microlens-aeson", "vector"], DirectedEdge["microlens-contra", "base"], DirectedEdge["microlens-contra", "contravariant"], DirectedEdge["microlens-contra", "microlens"], DirectedEdge["microlens-each", "microlens"], DirectedEdge["microlens-each", "base"], DirectedEdge["microlens-each", "microlens"], DirectedEdge["microlens-ghc", "array"], DirectedEdge["microlens-ghc", "base"], DirectedEdge["microlens-ghc", "bytestring"], DirectedEdge["microlens-ghc", "containers"], DirectedEdge["microlens-ghc", "microlens"], DirectedEdge["microlens-ghc", "transformers"], DirectedEdge["microlens-mtl", "base"], DirectedEdge["microlens-mtl", "microlens"], DirectedEdge["microlens-mtl", "mtl"], DirectedEdge["microlens-mtl", "transformers"], DirectedEdge["microlens-mtl", "transformers-compat"], DirectedEdge["microlens-platform", "base"], DirectedEdge["microlens-platform", "hashable"], DirectedEdge["microlens-platform", "microlens"], DirectedEdge["microlens-platform", "microlens-ghc"], DirectedEdge["microlens-platform", "microlens-mtl"], DirectedEdge["microlens-platform", "microlens-th"], DirectedEdge["microlens-platform", "text"], DirectedEdge["microlens-platform", "unordered-containers"], DirectedEdge["microlens-platform", "vector"], DirectedEdge["microlens-th", "base"], DirectedEdge["microlens-th", "containers"], DirectedEdge["microlens-th", "microlens"], DirectedEdge["microlens-th", "template-haskell"], DirectedEdge["microtimer", "base"], DirectedEdge["microtimer", "time"], DirectedEdge["mida", "aeson"], DirectedEdge["mida", "base"], DirectedEdge["mida", "containers"], DirectedEdge["mida", "data-default"], DirectedEdge["mida", "exceptions"], DirectedEdge["mida", "filepath"], DirectedEdge["mida", "formatting"], DirectedEdge["mida", "haskeline"], DirectedEdge["mida", "HCodecs"], DirectedEdge["mida", "megaparsec"], DirectedEdge["mida", "mida"], DirectedEdge["mida", "mtl"], DirectedEdge["mida", "optparse-applicative"], DirectedEdge["mida", "path"], DirectedEdge["mida", "path-io"], DirectedEdge["mida", "process"], DirectedEdge["mida", "random"], DirectedEdge["mida", "text"], DirectedEdge["mida", "tf-random"], DirectedEdge["mida", "transformers"], DirectedEdge["mida", "yaml"], DirectedEdge["midair", "base"], DirectedEdge["midair", "containers"], DirectedEdge["midair", "safe"], DirectedEdge["midair", "stm"], DirectedEdge["midi", "base"], DirectedEdge["midi", "binary"], DirectedEdge["midi", "bytestring"], DirectedEdge["midi", "event-list"], DirectedEdge["midi", "explicit-exception"], DirectedEdge["midi", "monoid-transformer"], DirectedEdge["midi", "non-negative"], DirectedEdge["midi", "QuickCheck"], DirectedEdge["midi", "random"], DirectedEdge["midi", "transformers"], DirectedEdge["midi", "utility-ht"], DirectedEdge["midi-alsa", "alsa-seq"], DirectedEdge["midi-alsa", "base"], DirectedEdge["midi-alsa", "data-accessor"], DirectedEdge["midi-alsa", "midi"], DirectedEdge["midi-alsa", "utility-ht"], DirectedEdge["midi-music-box", "base"], DirectedEdge["midi-music-box", "containers"], DirectedEdge["midi-music-box", "diagrams-lib"], DirectedEdge["midi-music-box", "diagrams-postscript"], DirectedEdge["midi-music-box", "event-list"], DirectedEdge["midi-music-box", "midi"], DirectedEdge["midi-music-box", "non-empty"], DirectedEdge["midi-music-box", "optparse-applicative"], DirectedEdge["midi-music-box", "utility-ht"], DirectedEdge["midi-util", "base"], DirectedEdge["midi-util", "containers"], DirectedEdge["midi-util", "event-list"], DirectedEdge["midi-util", "midi"], DirectedEdge["midi-util", "non-negative"], DirectedEdge["midimory", "alsa-core"], DirectedEdge["midimory", "alsa-seq"], DirectedEdge["midimory", "base"], DirectedEdge["midimory", "containers"], DirectedEdge["midimory", "random"], DirectedEdge["midimory", "transformers"], DirectedEdge["midimory", "wx"], DirectedEdge["midimory", "wxcore"], DirectedEdge["midisurface", "alsa-core"], DirectedEdge["midisurface", "alsa-seq"], DirectedEdge["midisurface", "base"], DirectedEdge["midisurface", "containers"], DirectedEdge["midisurface", "gtk"], DirectedEdge["midisurface", "mtl"], DirectedEdge["midisurface", "stm"], DirectedEdge["mighttpd", "base"], DirectedEdge["mighttpd", "bytestring"], DirectedEdge["mighttpd", "c10k"], DirectedEdge["mighttpd", "directory"], DirectedEdge["mighttpd", "filepath"], DirectedEdge["mighttpd", "hdaemonize"], DirectedEdge["mighttpd", "hslogger"], DirectedEdge["mighttpd", "network"], DirectedEdge["mighttpd", "parsec"], DirectedEdge["mighttpd", "time"], DirectedEdge["mighttpd", "unix"], DirectedEdge["mighttpd", "webserver"], DirectedEdge["mighttpd2", "array"], DirectedEdge["mighttpd2", "async"], DirectedEdge["mighttpd2", "auto-update"], DirectedEdge["mighttpd2", "base"], DirectedEdge["mighttpd2", "blaze-builder"], DirectedEdge["mighttpd2", "byteorder"], DirectedEdge["mighttpd2", "bytestring"], DirectedEdge["mighttpd2", "case-insensitive"], DirectedEdge["mighttpd2", "conduit"], DirectedEdge["mighttpd2", "conduit-extra"], DirectedEdge["mighttpd2", "directory"], DirectedEdge["mighttpd2", "filepath"], DirectedEdge["mighttpd2", "http-client"], DirectedEdge["mighttpd2", "http-date"], DirectedEdge["mighttpd2", "http-types"], DirectedEdge["mighttpd2", "io-choice"], DirectedEdge["mighttpd2", "network"], DirectedEdge["mighttpd2", "old-locale"], DirectedEdge["mighttpd2", "parsec"], DirectedEdge["mighttpd2", "resourcet"], DirectedEdge["mighttpd2", "streaming-commons"], DirectedEdge["mighttpd2", "time"], DirectedEdge["mighttpd2", "tls"], DirectedEdge["mighttpd2", "transformers"], DirectedEdge["mighttpd2", "unix"], DirectedEdge["mighttpd2", "unix-time"], DirectedEdge["mighttpd2", "unordered-containers"], DirectedEdge["mighttpd2", "wai"], DirectedEdge["mighttpd2", "wai-app-file-cgi"], DirectedEdge["mighttpd2", "wai-logger"], DirectedEdge["mighttpd2", "warp"], DirectedEdge["mighttpd2", "warp-tls"], DirectedEdge["mighty-metropolis", "base"], DirectedEdge["mighty-metropolis", "mcmc-types"], DirectedEdge["mighty-metropolis", "mwc-probability"], DirectedEdge["mighty-metropolis", "pipes"], DirectedEdge["mighty-metropolis", "primitive"], DirectedEdge["mighty-metropolis", "transformers"], DirectedEdge["mikmod", "base"], DirectedEdge["mikmod", "bytestring"], DirectedEdge["miku", "base"], DirectedEdge["miku", "blaze-builder"], DirectedEdge["miku", "bytestring"], DirectedEdge["miku", "case-insensitive"], DirectedEdge["miku", "containers"], DirectedEdge["miku", "filepath"], DirectedEdge["miku", "http-types"], DirectedEdge["miku", "mtl"], DirectedEdge["miku", "wai"], DirectedEdge["miku", "wai-extra"], DirectedEdge["milena", "base"], DirectedEdge["milena", "bytestring"], DirectedEdge["milena", "cereal"], DirectedEdge["milena", "containers"], DirectedEdge["milena", "digest"], DirectedEdge["milena", "lens"], DirectedEdge["milena", "lifted-base"], DirectedEdge["milena", "mtl"], DirectedEdge["milena", "murmur-hash"], DirectedEdge["milena", "network"], DirectedEdge["milena", "random"], DirectedEdge["milena", "resource-pool"], DirectedEdge["milena", "semigroups"], DirectedEdge["milena", "transformers"], DirectedEdge["mime", "base"], DirectedEdge["mime", "text"], DirectedEdge["mime-directory", "base"], DirectedEdge["mime-directory", "base64-string"], DirectedEdge["mime-directory", "bytestring"], DirectedEdge["mime-directory", "containers"], DirectedEdge["mime-directory", "old-locale"], DirectedEdge["mime-directory", "regex-pcre"], DirectedEdge["mime-directory", "time"], DirectedEdge["mime-mail", "base"], DirectedEdge["mime-mail", "base64-bytestring"], DirectedEdge["mime-mail", "blaze-builder"], DirectedEdge["mime-mail", "bytestring"], DirectedEdge["mime-mail", "filepath"], DirectedEdge["mime-mail", "process"], DirectedEdge["mime-mail", "random"], DirectedEdge["mime-mail", "text"], DirectedEdge["mime-mail-ses", "base"], DirectedEdge["mime-mail-ses", "base64-bytestring"], DirectedEdge["mime-mail-ses", "byteable"], DirectedEdge["mime-mail-ses", "bytestring"], DirectedEdge["mime-mail-ses", "conduit"], DirectedEdge["mime-mail-ses", "cryptohash"], DirectedEdge["mime-mail-ses", "http-client"], DirectedEdge["mime-mail-ses", "http-conduit"], DirectedEdge["mime-mail-ses", "http-types"], DirectedEdge["mime-mail-ses", "mime-mail"], DirectedEdge["mime-mail-ses", "old-locale"], DirectedEdge["mime-mail-ses", "text"], DirectedEdge["mime-mail-ses", "time"], DirectedEdge["mime-mail-ses", "transformers"], DirectedEdge["mime-mail-ses", "xml-conduit"], DirectedEdge["mime-mail-ses", "xml-types"], DirectedEdge["mime-string", "base"], DirectedEdge["mime-string", "base64-string"], DirectedEdge["mime-string", "bytestring"], DirectedEdge["mime-string", "iconv"], DirectedEdge["mime-string", "mtl"], DirectedEdge["mime-string", "network"], DirectedEdge["mime-string", "old-time"], DirectedEdge["mime-types", "base"], DirectedEdge["mime-types", "bytestring"], DirectedEdge["mime-types", "containers"], DirectedEdge["mime-types", "text"], DirectedEdge["mines", "base"], DirectedEdge["mines", "directory"], DirectedEdge["mines", "mtl"], DirectedEdge["mines", "random"], DirectedEdge["minesweeper", "base"], DirectedEdge["minesweeper", "binary"], DirectedEdge["minesweeper", "binary-generic"], DirectedEdge["minesweeper", "bytestring"], DirectedEdge["minesweeper", "cairo"], DirectedEdge["minesweeper", "containers"], DirectedEdge["minesweeper", "directory"], DirectedEdge["minesweeper", "filepath"], DirectedEdge["minesweeper", "glade"], DirectedEdge["minesweeper", "gtk"], DirectedEdge["minesweeper", "lazysmallcheck"], DirectedEdge["minesweeper", "numeric-prelude"], DirectedEdge["minesweeper", "random"], DirectedEdge["minesweeper", "time"], DirectedEdge["miniball", "base"], DirectedEdge["miniball", "vector"], DirectedEdge["miniforth", "base"], DirectedEdge["miniforth", "containers"], DirectedEdge["miniforth", "lens"], DirectedEdge["miniforth", "miniforth"], DirectedEdge["miniforth", "MonadRandom"], DirectedEdge["miniforth", "mtl"], DirectedEdge["miniforth", "mtl-compat"], DirectedEdge["miniforth", "parsec"], DirectedEdge["miniforth", "parsec3-numbers"], DirectedEdge["miniforth", "readline"], DirectedEdge["minilens", "array"], DirectedEdge["minilens", "base"], DirectedEdge["minilens", "bytestring"], DirectedEdge["minilens", "containers"], DirectedEdge["minilens", "mtl"], DirectedEdge["minilens", "semigroups"], DirectedEdge["minilens", "text"], DirectedEdge["minilens", "transformers"], DirectedEdge["minimal-configuration", "base"], DirectedEdge["minimal-configuration", "containers"], DirectedEdge["minimal-configuration", "directory"], DirectedEdge["minimal-configuration", "filepath"], DirectedEdge["minimal-configuration", "tconfig"], DirectedEdge["minimorph", "base"], DirectedEdge["minimorph", "text"], DirectedEdge["minimung", "base"], DirectedEdge["minimung", "GLUT"], DirectedEdge["minimung", "unix"], DirectedEdge["minions", "ansi-terminal"], DirectedEdge["minions", "base"], DirectedEdge["minions", "MissingH"], DirectedEdge["minions", "process"], DirectedEdge["minions", "time"], DirectedEdge["minioperational", "monad-skeleton"], DirectedEdge["minioperational", "base"], DirectedEdge["minioperational", "containers"], DirectedEdge["minioperational", "elevator"], DirectedEdge["minioperational", "extensible"], DirectedEdge["minioperational", "mtl"], DirectedEdge["minioperational", "template-haskell"], DirectedEdge["minioperational", "transformers"], DirectedEdge["miniplex", "base"], DirectedEdge["miniplex", "colock"], DirectedEdge["miniplex", "directory"], DirectedEdge["miniplex", "mtl"], DirectedEdge["miniplex", "network"], DirectedEdge["miniplex", "stm"], DirectedEdge["miniplex", "unix"], DirectedEdge["minirotate", "base"], DirectedEdge["minirotate", "data-accessor"], DirectedEdge["minirotate", "data-accessor-template"], DirectedEdge["minirotate", "directory"], DirectedEdge["minirotate", "filepath"], DirectedEdge["minirotate", "mtl"], DirectedEdge["minirotate", "old-locale"], DirectedEdge["minirotate", "old-time"], DirectedEdge["minirotate", "process"], DirectedEdge["minirotate", "safe"], DirectedEdge["minirotate", "split"], DirectedEdge["minirotate", "template-haskell"], DirectedEdge["minisat", "async"], DirectedEdge["minisat", "base"], DirectedEdge["ministg", "base"], DirectedEdge["ministg", "containers"], DirectedEdge["ministg", "directory"], DirectedEdge["ministg", "filepath"], DirectedEdge["ministg", "monads-tf"], DirectedEdge["ministg", "parsec"], DirectedEdge["ministg", "pretty"], DirectedEdge["ministg", "transformers"], DirectedEdge["ministg", "xhtml"], DirectedEdge["miniutter", "base"], DirectedEdge["miniutter", "binary"], DirectedEdge["miniutter", "containers"], DirectedEdge["miniutter", "ghc-prim"], DirectedEdge["miniutter", "minimorph"], DirectedEdge["miniutter", "text"], DirectedEdge["minst-idx", "mnist-idx"], DirectedEdge["minst-idx", "base"], DirectedEdge["minst-idx", "binary"], DirectedEdge["minst-idx", "bytestring"], DirectedEdge["minst-idx", "vector"], DirectedEdge["mirror-tweet", "authenticate-oauth"], DirectedEdge["mirror-tweet", "base"], DirectedEdge["mirror-tweet", "bytestring"], DirectedEdge["mirror-tweet", "conduit"], DirectedEdge["mirror-tweet", "lens"], DirectedEdge["mirror-tweet", "monad-logger"], DirectedEdge["mirror-tweet", "text"], DirectedEdge["mirror-tweet", "transformers"], DirectedEdge["mirror-tweet", "twitter-conduit"], DirectedEdge["misfortune", "base"], DirectedEdge["misfortune", "bytestring"], DirectedEdge["misfortune", "cereal"], DirectedEdge["misfortune", "directory"], DirectedEdge["misfortune", "filepath"], DirectedEdge["misfortune", "knob"], DirectedEdge["misfortune", "monad-loops"], DirectedEdge["misfortune", "random-fu"], DirectedEdge["misfortune", "regex-base"], DirectedEdge["misfortune", "regex-pcre"], DirectedEdge["misfortune", "semigroups"], DirectedEdge["misfortune", "text"], DirectedEdge["misfortune", "utf8-string"], DirectedEdge["misfortune", "vector"], DirectedEdge["missing-foreign", "base"], DirectedEdge["missing-py2", "anydbm"], DirectedEdge["missing-py2", "base"], DirectedEdge["missing-py2", "MissingH"], DirectedEdge["mix-arrows", "base"], DirectedEdge["mixed-strategies", "array"], DirectedEdge["mixed-strategies", "base"], DirectedEdge["mixed-strategies", "containers"], DirectedEdge["mixed-strategies", "mixed-strategies"], DirectedEdge["mixed-strategies", "simple-tabular"], DirectedEdge["mkbndl", "base"], DirectedEdge["mkbndl", "directory"], DirectedEdge["mkbndl", "filepath"], DirectedEdge["mkcabal", "base"], DirectedEdge["mkcabal", "directory"], DirectedEdge["mkcabal", "extensible-exceptions"], DirectedEdge["mkcabal", "mtl"], DirectedEdge["mkcabal", "old-locale"], DirectedEdge["mkcabal", "old-time"], DirectedEdge["mkcabal", "pcre-light"], DirectedEdge["mkcabal", "pretty"], DirectedEdge["mkcabal", "readline"], DirectedEdge["ml-w", "base"], DirectedEdge["ml-w", "mtl"], DirectedEdge["ml-w", "parsec"], DirectedEdge["ml-w", "pretty"], DirectedEdge["mlist", "base"], DirectedEdge["mmap", "base"], DirectedEdge["mmap", "bytestring"], DirectedEdge["mmap", "directory"], DirectedEdge["mmap", "HUnit"], DirectedEdge["mmorph", "base"], DirectedEdge["mmorph", "mtl"], DirectedEdge["mmorph", "transformers"], DirectedEdge["mmorph", "transformers-compat"], DirectedEdge["mmtl", "base"], DirectedEdge["mmtl-base", "base"], DirectedEdge["mmtl-base", "mmtl"], DirectedEdge["mnist-idx", "base"], DirectedEdge["mnist-idx", "binary"], DirectedEdge["mnist-idx", "bytestring"], DirectedEdge["mnist-idx", "vector"], DirectedEdge["moan", "base"], DirectedEdge["moan", "binary"], DirectedEdge["moan", "bytestring"], DirectedEdge["moan", "containers"], DirectedEdge["moan", "dawg"], DirectedEdge["moan", "regex-tdfa"], DirectedEdge["moan", "regex-tdfa-text"], DirectedEdge["moan", "tagset-positional"], DirectedEdge["moan", "text"], DirectedEdge["moan", "zlib"], DirectedEdge["mockery", "base"], DirectedEdge["mockery", "base-compat"], DirectedEdge["mockery", "bytestring"], DirectedEdge["mockery", "directory"], DirectedEdge["mockery", "filepath"], DirectedEdge["mockery", "logging-facade"], DirectedEdge["mockery", "temporary"], DirectedEdge["modbus-tcp", "base"], DirectedEdge["modbus-tcp", "base-unicode-symbols"], DirectedEdge["modbus-tcp", "bytestring"], DirectedEdge["modbus-tcp", "cereal"], DirectedEdge["modbus-tcp", "network"], DirectedEdge["modelicaparser", "base"], DirectedEdge["modelicaparser", "containers"], DirectedEdge["modelicaparser", "parsec"], DirectedEdge["modify-fasta", "base"], DirectedEdge["modify-fasta", "containers"], DirectedEdge["modify-fasta", "fasta"], DirectedEdge["modify-fasta", "modify-fasta"], DirectedEdge["modify-fasta", "mtl"], DirectedEdge["modify-fasta", "optparse-applicative"], DirectedEdge["modify-fasta", "pipes"], DirectedEdge["modify-fasta", "pipes-text"], DirectedEdge["modify-fasta", "regex-tdfa"], DirectedEdge["modify-fasta", "regex-tdfa-text"], DirectedEdge["modify-fasta", "split"], DirectedEdge["modify-fasta", "text"], DirectedEdge["modify-fasta", "text-show"], DirectedEdge["modsplit", "base"], DirectedEdge["modsplit", "directory"], DirectedEdge["modsplit", "filepath"], DirectedEdge["modsplit", "mtl"], DirectedEdge["modsplit", "utf8-string"], DirectedEdge["modular-arithmetic", "base"], DirectedEdge["modular-prelude", "base"], DirectedEdge["modular-prelude", "basic-prelude"], DirectedEdge["modular-prelude", "bytestring"], DirectedEdge["modular-prelude", "containers"], DirectedEdge["modular-prelude", "data-default"], DirectedEdge["modular-prelude", "hashable"], DirectedEdge["modular-prelude", "system-filepath"], DirectedEdge["modular-prelude", "text"], DirectedEdge["modular-prelude", "transformers"], DirectedEdge["modular-prelude", "unordered-containers"], DirectedEdge["modular-prelude", "vector"], DirectedEdge["modular-prelude-classy", "base"], DirectedEdge["modular-prelude-classy", "classy-prelude"], DirectedEdge["modular-prelude-classy", "modular-prelude"], DirectedEdge["module-management", "applicative-extras"], DirectedEdge["module-management", "base"], DirectedEdge["module-management", "bytestring"], DirectedEdge["module-management", "Cabal"], DirectedEdge["module-management", "cmdargs"], DirectedEdge["module-management", "containers"], DirectedEdge["module-management", "data-default"], DirectedEdge["module-management", "directory"], DirectedEdge["module-management", "filepath"], DirectedEdge["module-management", "haskeline"], DirectedEdge["module-management", "haskell-src-exts"], DirectedEdge["module-management", "HUnit"], DirectedEdge["module-management", "lens"], DirectedEdge["module-management", "lifted-base"], DirectedEdge["module-management", "module-management"], DirectedEdge["module-management", "monad-control"], DirectedEdge["module-management", "mtl"], DirectedEdge["module-management", "pretty"], DirectedEdge["module-management", "process"], DirectedEdge["module-management", "regex-compat"], DirectedEdge["module-management", "set-extra"], DirectedEdge["module-management", "syb"], DirectedEdge["module-management", "system-fileio"], DirectedEdge["module-management", "template-haskell"], DirectedEdge["module-management", "temporary"], DirectedEdge["module-management", "transformers-base"], DirectedEdge["modulespection", "base"], DirectedEdge["modulespection", "exceptions"], DirectedEdge["modulespection", "filepath"], DirectedEdge["modulespection", "ghc"], DirectedEdge["modulespection", "ghc-paths"], DirectedEdge["modulespection", "template-haskell"], DirectedEdge["modulespection", "temporary"], DirectedEdge["modulespection", "transformers"], DirectedEdge["modulo", "atto-lisp"], DirectedEdge["modulo", "base"], DirectedEdge["modulo", "data-default"], DirectedEdge["modulo", "directory"], DirectedEdge["modulo", "haskell-src"], DirectedEdge["modulo", "language-c"], DirectedEdge["modulo", "mtl"], DirectedEdge["modulo", "nats"], DirectedEdge["modulo", "pandoc-types"], DirectedEdge["modulo", "parsec"], DirectedEdge["modulo", "prettify"], DirectedEdge["modulo", "process"], DirectedEdge["modulo", "semigroups"], DirectedEdge["modulo", "text"], DirectedEdge["moe", "air"], DirectedEdge["moe", "base"], DirectedEdge["moe", "bytestring"], DirectedEdge["moe", "data-default"], DirectedEdge["moe", "dlist"], DirectedEdge["moe", "mtl"], DirectedEdge["moe", "text"], DirectedEdge["moesocks", "aeson"], DirectedEdge["moesocks", "async"], DirectedEdge["moesocks", "attoparsec"], DirectedEdge["moesocks", "base"], DirectedEdge["moesocks", "binary"], DirectedEdge["moesocks", "bytestring"], DirectedEdge["moesocks", "containers"], DirectedEdge["moesocks", "cryptohash"], DirectedEdge["moesocks", "hslogger"], DirectedEdge["moesocks", "HsOpenSSL"], DirectedEdge["moesocks", "iproute"], DirectedEdge["moesocks", "lens"], DirectedEdge["moesocks", "lens-aeson"], DirectedEdge["moesocks", "mtl"], DirectedEdge["moesocks", "network"], DirectedEdge["moesocks", "optparse-applicative"], DirectedEdge["moesocks", "random"], DirectedEdge["moesocks", "stm"], DirectedEdge["moesocks", "strict"], DirectedEdge["moesocks", "text"], DirectedEdge["moesocks", "time"], DirectedEdge["moesocks", "transformers"], DirectedEdge["moesocks", "unordered-containers"], DirectedEdge["mohws", "base"], DirectedEdge["mohws", "bytestring"], DirectedEdge["mohws", "containers"], DirectedEdge["mohws", "data-accessor"], DirectedEdge["mohws", "directory"], DirectedEdge["mohws", "explicit-exception"], DirectedEdge["mohws", "filepath"], DirectedEdge["mohws", "ghc"], DirectedEdge["mohws", "html"], DirectedEdge["mohws", "HTTP"], DirectedEdge["mohws", "network"], DirectedEdge["mohws", "network-uri"], DirectedEdge["mohws", "old-locale"], DirectedEdge["mohws", "old-time"], DirectedEdge["mohws", "parsec"], DirectedEdge["mohws", "process"], DirectedEdge["mohws", "transformers"], DirectedEdge["mohws", "unix"], DirectedEdge["mohws", "utility-ht"], DirectedEdge["mole", "attoparsec"], DirectedEdge["mole", "base"], DirectedEdge["mole", "base64-bytestring"], DirectedEdge["mole", "bytestring"], DirectedEdge["mole", "containers"], DirectedEdge["mole", "cryptohash"], DirectedEdge["mole", "css-syntax"], DirectedEdge["mole", "directory"], DirectedEdge["mole", "filemanip"], DirectedEdge["mole", "filepath"], DirectedEdge["mole", "fsnotify"], DirectedEdge["mole", "kraken"], DirectedEdge["mole", "mtl"], DirectedEdge["mole", "network-uri"], DirectedEdge["mole", "optparse-applicative"], DirectedEdge["mole", "process"], DirectedEdge["mole", "snap"], DirectedEdge["mole", "snap-server"], DirectedEdge["mole", "stm"], DirectedEdge["mole", "tagsoup"], DirectedEdge["mole", "text"], DirectedEdge["mole", "time"], DirectedEdge["mole", "transformers"], DirectedEdge["mole", "unix"], DirectedEdge["monad-abort-fd", "base"], DirectedEdge["monad-abort-fd", "data-default"], DirectedEdge["monad-abort-fd", "monad-control"], DirectedEdge["monad-abort-fd", "mtl"], DirectedEdge["monad-abort-fd", "transformers"], DirectedEdge["monad-abort-fd", "transformers-abort"], DirectedEdge["monad-abort-fd", "transformers-base"], DirectedEdge["monad-atom", "base"], DirectedEdge["monad-atom", "containers"], DirectedEdge["monad-atom", "ghc-prim"], DirectedEdge["monad-atom", "mtl"], DirectedEdge["monad-atom-simple", "base"], DirectedEdge["monad-atom-simple", "containers"], DirectedEdge["monad-atom-simple", "ghc-prim"], DirectedEdge["monad-atom-simple", "mtl"], DirectedEdge["monad-bool", "base"], DirectedEdge["monad-classes", "base"], DirectedEdge["monad-classes", "ghc-prim"], DirectedEdge["monad-classes", "mmorph"], DirectedEdge["monad-classes", "monad-control"], DirectedEdge["monad-classes", "peano"], DirectedEdge["monad-classes", "reflection"], DirectedEdge["monad-classes", "transformers"], DirectedEdge["monad-classes", "transformers-base"], DirectedEdge["monad-classes", "transformers-compat"], DirectedEdge["monad-codec", "base"], DirectedEdge["monad-codec", "binary"], DirectedEdge["monad-codec", "containers"], DirectedEdge["monad-codec", "data-lens"], DirectedEdge["monad-codec", "mtl"], DirectedEdge["monad-connect", "base"], DirectedEdge["monad-connect", "bytestring"], DirectedEdge["monad-connect", "connection"], DirectedEdge["monad-connect", "exceptions"], DirectedEdge["monad-connect", "transformers"], DirectedEdge["monad-control", "base"], DirectedEdge["monad-control", "stm"], DirectedEdge["monad-control", "transformers"], DirectedEdge["monad-control", "transformers-base"], DirectedEdge["monad-control", "transformers-compat"], DirectedEdge["monad-coroutine", "base"], DirectedEdge["monad-coroutine", "monad-parallel"], DirectedEdge["monad-coroutine", "transformers"], DirectedEdge["monad-coroutine", "transformers-compat"], DirectedEdge["monad-dijkstra", "base"], DirectedEdge["monad-dijkstra", "free"], DirectedEdge["monad-dijkstra", "mtl"], DirectedEdge["monad-dijkstra", "psqueues"], DirectedEdge["monad-dijkstra", "transformers"], DirectedEdge["monad-exception", "layers"], DirectedEdge["monad-exception", "base"], DirectedEdge["monad-exception", "monad-control"], DirectedEdge["monad-exception", "mtl-evil-instances"], DirectedEdge["monad-exception", "transformers"], DirectedEdge["monad-exception", "transformers-base"], DirectedEdge["monad-extras", "base"], DirectedEdge["monad-extras", "mmorph"], DirectedEdge["monad-extras", "monad-control"], DirectedEdge["monad-extras", "stm"], DirectedEdge["monad-extras", "transformers"], DirectedEdge["monad-extras", "transformers-base"], DirectedEdge["monad-fork", "layers"], DirectedEdge["monad-fork", "base"], DirectedEdge["monad-fork", "monad-control"], DirectedEdge["monad-gen", "base"], DirectedEdge["monad-gen", "mtl"], DirectedEdge["monad-gen", "transformers"], DirectedEdge["monad-hash", "base"], DirectedEdge["monad-hash", "cryptonite"], DirectedEdge["monad-hash", "exceptions"], DirectedEdge["monad-hash", "memory"], DirectedEdge["monad-hash", "transformers"], DirectedEdge["monad-http", "base"], DirectedEdge["monad-http", "base-compat"], DirectedEdge["monad-http", "bytestring"], DirectedEdge["monad-http", "exceptions"], DirectedEdge["monad-http", "http-client"], DirectedEdge["monad-http", "http-client-tls"], DirectedEdge["monad-http", "http-types"], DirectedEdge["monad-http", "monad-logger"], DirectedEdge["monad-http", "monadcryptorandom"], DirectedEdge["monad-http", "MonadRandom"], DirectedEdge["monad-http", "mtl"], DirectedEdge["monad-http", "text"], DirectedEdge["monad-http", "transformers"], DirectedEdge["monad-http", "transformers-compat"], DirectedEdge["monad-interleave", "base"], DirectedEdge["monad-journal", "base"], DirectedEdge["monad-journal", "either"], DirectedEdge["monad-journal", "monad-control"], DirectedEdge["monad-journal", "mtl"], DirectedEdge["monad-journal", "transformers"], DirectedEdge["monad-journal", "transformers-base"], DirectedEdge["monad-levels", "base"], DirectedEdge["monad-levels", "constraints"], DirectedEdge["monad-levels", "transformers"], DirectedEdge["monad-levels", "transformers-compat"], DirectedEdge["monad-log", "aeson"], DirectedEdge["monad-log", "base"], DirectedEdge["monad-log", "bytestring"], DirectedEdge["monad-log", "exceptions"], DirectedEdge["monad-log", "fast-logger"], DirectedEdge["monad-log", "lifted-base"], DirectedEdge["monad-log", "monad-control"], DirectedEdge["monad-log", "template-haskell"], DirectedEdge["monad-log", "text"], DirectedEdge["monad-log", "text-show"], DirectedEdge["monad-log", "transformers"], DirectedEdge["monad-logger", "base"], DirectedEdge["monad-logger", "blaze-builder"], DirectedEdge["monad-logger", "bytestring"], DirectedEdge["monad-logger", "conduit"], DirectedEdge["monad-logger", "conduit-extra"], DirectedEdge["monad-logger", "exceptions"], DirectedEdge["monad-logger", "fast-logger"], DirectedEdge["monad-logger", "lifted-base"], DirectedEdge["monad-logger", "monad-control"], DirectedEdge["monad-logger", "monad-loops"], DirectedEdge["monad-logger", "mtl"], DirectedEdge["monad-logger", "resourcet"], DirectedEdge["monad-logger", "stm"], DirectedEdge["monad-logger", "stm-chans"], DirectedEdge["monad-logger", "template-haskell"], DirectedEdge["monad-logger", "text"], DirectedEdge["monad-logger", "transformers"], DirectedEdge["monad-logger", "transformers-base"], DirectedEdge["monad-logger", "transformers-compat"], DirectedEdge["monad-logger-json", "aeson"], DirectedEdge["monad-logger-json", "base"], DirectedEdge["monad-logger-json", "monad-logger"], DirectedEdge["monad-logger-json", "template-haskell"], DirectedEdge["monad-logger-json", "text"], DirectedEdge["monad-logger-syslog", "base"], DirectedEdge["monad-logger-syslog", "bytestring"], DirectedEdge["monad-logger-syslog", "fast-logger"], DirectedEdge["monad-logger-syslog", "hsyslog"], DirectedEdge["monad-logger-syslog", "monad-logger"], DirectedEdge["monad-logger-syslog", "text"], DirectedEdge["monad-logger-syslog", "transformers"], DirectedEdge["monad-loops", "base"], DirectedEdge["monad-loops-stm", "base"], DirectedEdge["monad-loops-stm", "stm"], DirectedEdge["monad-lrs", "base"], DirectedEdge["monad-lrs", "containers"], DirectedEdge["monad-memo", "array"], DirectedEdge["monad-memo", "base"], DirectedEdge["monad-memo", "containers"], DirectedEdge["monad-memo", "mtl"], DirectedEdge["monad-memo", "primitive"], DirectedEdge["monad-memo", "transformers"], DirectedEdge["monad-memo", "vector"], DirectedEdge["monad-mersenne-random", "base"], DirectedEdge["monad-open", "base"], DirectedEdge["monad-open", "exceptions"], DirectedEdge["monad-open", "mtl"], DirectedEdge["monad-open", "transformers"], DirectedEdge["monad-ox", "base"], DirectedEdge["monad-ox", "containers"], DirectedEdge["monad-ox", "mtl"], DirectedEdge["monad-ox", "text"], DirectedEdge["monad-ox", "vector"], DirectedEdge["monad-par", "abstract-deque"], DirectedEdge["monad-par", "abstract-par"], DirectedEdge["monad-par", "array"], DirectedEdge["monad-par", "base"], DirectedEdge["monad-par", "chaselev-deque"], DirectedEdge["monad-par", "containers"], DirectedEdge["monad-par", "deepseq"], DirectedEdge["monad-par", "monad-par-extras"], DirectedEdge["monad-par", "mtl"], DirectedEdge["monad-par", "mwc-random"], DirectedEdge["monad-par", "par-classes"], DirectedEdge["monad-par", "parallel"], DirectedEdge["monad-par-extras", "abstract-par"], DirectedEdge["monad-par-extras", "base"], DirectedEdge["monad-par-extras", "cereal"], DirectedEdge["monad-par-extras", "deepseq"], DirectedEdge["monad-par-extras", "mtl"], DirectedEdge["monad-par-extras", "random"], DirectedEdge["monad-par-extras", "transformers"], DirectedEdge["monad-parallel", "base"], DirectedEdge["monad-parallel", "parallel"], DirectedEdge["monad-parallel", "transformers"], DirectedEdge["monad-parallel", "transformers-compat"], DirectedEdge["monad-parallel-progressbar", "base"], DirectedEdge["monad-parallel-progressbar", "monad-parallel"], DirectedEdge["monad-parallel-progressbar", "monadIO"], DirectedEdge["monad-parallel-progressbar", "terminal-progress-bar"], DirectedEdge["monad-param", "indexed"], DirectedEdge["monad-param", "base"], DirectedEdge["monad-param", "mtl"], DirectedEdge["monad-param", "stm"], DirectedEdge["monad-peel", "base"], DirectedEdge["monad-peel", "extensible-exceptions"], DirectedEdge["monad-peel", "transformers"], DirectedEdge["monad-primitive", "base"], DirectedEdge["monad-primitive", "primitive"], DirectedEdge["monad-primitive", "transformers"], DirectedEdge["monad-products", "base"], DirectedEdge["monad-products", "semigroupoids"], DirectedEdge["monad-ran", "base"], DirectedEdge["monad-ran", "ghc-prim"], DirectedEdge["monad-ran", "mtl"], DirectedEdge["monad-resumption", "base"], DirectedEdge["monad-resumption", "mmorph"], DirectedEdge["monad-resumption", "mtl"], DirectedEdge["monad-resumption", "transformers"], DirectedEdge["monad-skeleton", "base"], DirectedEdge["monad-skeleton", "containers"], DirectedEdge["monad-skeleton", "ghc-prim"], DirectedEdge["monad-st", "base"], DirectedEdge["monad-st", "transformers"], DirectedEdge["monad-state", "AbortT-transformers"], DirectedEdge["monad-state", "base"], DirectedEdge["monad-state", "fclabels"], DirectedEdge["monad-state", "monads-tf"], DirectedEdge["monad-state", "transformers"], DirectedEdge["monad-statevar", "base"], DirectedEdge["monad-statevar", "transformers"], DirectedEdge["monad-ste", "base"], DirectedEdge["monad-ste", "exceptions"], DirectedEdge["monad-ste", "ghc-prim"], DirectedEdge["monad-ste", "primitive"], DirectedEdge["monad-stlike-io", "base"], DirectedEdge["monad-stlike-io", "bytestring"], DirectedEdge["monad-stlike-io", "containers"], DirectedEdge["monad-stlike-io", "deepseq"], DirectedEdge["monad-stlike-io", "monads-tf"], DirectedEdge["monad-stlike-stm", "base"], DirectedEdge["monad-stlike-stm", "monad-stlike-io"], DirectedEdge["monad-stlike-stm", "stm"], DirectedEdge["monad-stm", "base"], DirectedEdge["monad-stm", "stm"], DirectedEdge["monad-stm", "transformers"], DirectedEdge["monad-supply", "base"], DirectedEdge["monad-supply", "mtl"], DirectedEdge["monad-task", "base"], DirectedEdge["monad-task", "mtl"], DirectedEdge["monad-task", "transformers"], DirectedEdge["monad-time", "base"], DirectedEdge["monad-time", "mtl"], DirectedEdge["monad-time", "time"], DirectedEdge["monad-tx", "base"], DirectedEdge["monad-unify", "base"], DirectedEdge["monad-unify", "mtl"], DirectedEdge["monad-unify", "unordered-containers"], DirectedEdge["monad-unlift", "base"], DirectedEdge["monad-unlift", "constraints"], DirectedEdge["monad-unlift", "monad-control"], DirectedEdge["monad-unlift", "transformers"], DirectedEdge["monad-unlift", "transformers-base"], DirectedEdge["monad-unlift-ref", "base"], DirectedEdge["monad-unlift-ref", "constraints"], DirectedEdge["monad-unlift-ref", "exceptions"], DirectedEdge["monad-unlift-ref", "monad-control"], DirectedEdge["monad-unlift-ref", "monad-unlift"], DirectedEdge["monad-unlift-ref", "mtl"], DirectedEdge["monad-unlift-ref", "mutable-containers"], DirectedEdge["monad-unlift-ref", "resourcet"], DirectedEdge["monad-unlift-ref", "stm"], DirectedEdge["monad-unlift-ref", "transformers"], DirectedEdge["monad-unlift-ref", "transformers-base"], DirectedEdge["monad-wrap", "base"], DirectedEdge["monad-wrap", "transformers"], DirectedEdge["monadIO", "base"], DirectedEdge["monadIO", "mtl"], DirectedEdge["monadIO", "stm"], DirectedEdge["monadLib", "base"], DirectedEdge["monadLib-compose", "base"], DirectedEdge["monadLib-compose", "monadLib"], DirectedEdge["monadacme", "base"], DirectedEdge["monadbi", "base"], DirectedEdge["monadbi", "mtl"], DirectedEdge["monadcryptorandom", "base"], DirectedEdge["monadcryptorandom", "bytestring"], DirectedEdge["monadcryptorandom", "crypto-api"], DirectedEdge["monadcryptorandom", "mtl"], DirectedEdge["monadcryptorandom", "tagged"], DirectedEdge["monadcryptorandom", "transformers"], DirectedEdge["monadfibre", "base"], DirectedEdge["monadfibre", "monadbi"], DirectedEdge["monadic-arrays", "array"], DirectedEdge["monadic-arrays", "base"], DirectedEdge["monadic-arrays", "stm"], DirectedEdge["monadic-arrays", "transformers"], DirectedEdge["monadic-arrays", "transformers-compat"], DirectedEdge["monadiccp", "base"], DirectedEdge["monadiccp", "containers"], DirectedEdge["monadiccp", "mtl"], DirectedEdge["monadiccp", "parsec"], DirectedEdge["monadiccp", "pretty"], DirectedEdge["monadiccp", "random"], DirectedEdge["monadiccp-gecode", "base"], DirectedEdge["monadiccp-gecode", "containers"], DirectedEdge["monadiccp-gecode", "monadiccp"], DirectedEdge["monadiccp-gecode", "mtl"], DirectedEdge["monadio-unwrappable", "base"], DirectedEdge["monadio-unwrappable", "monads-tf"], DirectedEdge["monadio-unwrappable", "transformers"], DirectedEdge["monadlist", "base"], DirectedEdge["monadloc", "base"], DirectedEdge["monadloc", "template-haskell"], DirectedEdge["monadloc", "transformers"], DirectedEdge["monadloc-pp", "base"], DirectedEdge["monadloc-pp", "filepath"], DirectedEdge["monadloc-pp", "haskell-src-exts"], DirectedEdge["monadloc-pp", "monadloc"], DirectedEdge["monadloc-pp", "pretty"], DirectedEdge["monadloc-pp", "syb"], DirectedEdge["monadplus", "base"], DirectedEdge["monads-fd", "mtl"], DirectedEdge["monads-fd", "base"], DirectedEdge["monads-fd", "mtl"], DirectedEdge["monads-fd", "transformers"], DirectedEdge["monads-tf", "base"], DirectedEdge["monads-tf", "transformers"], DirectedEdge["monadtransform", "base"], DirectedEdge["monadtransform", "transformers"], DirectedEdge["monarch", "base"], DirectedEdge["monarch", "binary"], DirectedEdge["monarch", "bytestring"], DirectedEdge["monarch", "containers"], DirectedEdge["monarch", "lifted-base"], DirectedEdge["monarch", "monad-control"], DirectedEdge["monarch", "mtl"], DirectedEdge["monarch", "network"], DirectedEdge["monarch", "pool-conduit"], DirectedEdge["monarch", "stm"], DirectedEdge["monarch", "transformers"], DirectedEdge["monarch", "transformers-base"], DirectedEdge["mondo", "aeson"], DirectedEdge["mondo", "authenticate-oauth"], DirectedEdge["mondo", "base"], DirectedEdge["mondo", "bytestring"], DirectedEdge["mondo", "containers"], DirectedEdge["mondo", "http-client"], DirectedEdge["mondo", "http-client-tls"], DirectedEdge["mondo", "mtl"], DirectedEdge["mondo", "servant"], DirectedEdge["mondo", "servant-client"], DirectedEdge["mondo", "text"], DirectedEdge["mondo", "time"], DirectedEdge["mondo", "timerep"], DirectedEdge["mondo", "transformers"], DirectedEdge["mondo", "unordered-containers"], DirectedEdge["mongoDB", "array"], DirectedEdge["mongoDB", "base"], DirectedEdge["mongoDB", "base16-bytestring"], DirectedEdge["mongoDB", "base64-bytestring"], DirectedEdge["mongoDB", "binary"], DirectedEdge["mongoDB", "bson"], DirectedEdge["mongoDB", "bytestring"], DirectedEdge["mongoDB", "containers"], DirectedEdge["mongoDB", "cryptohash"], DirectedEdge["mongoDB", "hashtables"], DirectedEdge["mongoDB", "lifted-base"], DirectedEdge["mongoDB", "monad-control"], DirectedEdge["mongoDB", "mtl"], DirectedEdge["mongoDB", "network"], DirectedEdge["mongoDB", "nonce"], DirectedEdge["mongoDB", "parsec"], DirectedEdge["mongoDB", "random"], DirectedEdge["mongoDB", "random-shuffle"], DirectedEdge["mongoDB", "text"], DirectedEdge["mongoDB", "transformers-base"], DirectedEdge["mongodb-queue", "base"], DirectedEdge["mongodb-queue", "data-default"], DirectedEdge["mongodb-queue", "lifted-base"], DirectedEdge["mongodb-queue", "monad-control"], DirectedEdge["mongodb-queue", "mongoDB"], DirectedEdge["mongodb-queue", "network"], DirectedEdge["mongodb-queue", "text"], DirectedEdge["mongodb-queue", "transformers"], DirectedEdge["mongrel2-handler", "attoparsec"], DirectedEdge["mongrel2-handler", "base"], DirectedEdge["mongrel2-handler", "blaze-builder"], DirectedEdge["mongrel2-handler", "blaze-textual"], DirectedEdge["mongrel2-handler", "bytestring"], DirectedEdge["mongrel2-handler", "case-insensitive"], DirectedEdge["mongrel2-handler", "containers"], DirectedEdge["mongrel2-handler", "http-types"], DirectedEdge["mongrel2-handler", "text"], DirectedEdge["mongrel2-handler", "zeromq-haskell"], DirectedEdge["monitor", "base"], DirectedEdge["monitor", "filepath"], DirectedEdge["monitor", "hinotify"], DirectedEdge["monitor", "process"], DirectedEdge["mono-foldable", "mono-traversable"], DirectedEdge["mono-foldable", "base"], DirectedEdge["mono-foldable", "bytestring"], DirectedEdge["mono-foldable", "text"], DirectedEdge["mono-foldable", "vector"], DirectedEdge["mono-traversable", "base"], DirectedEdge["mono-traversable", "bytestring"], DirectedEdge["mono-traversable", "comonad"], DirectedEdge["mono-traversable", "containers"], DirectedEdge["mono-traversable", "dlist"], DirectedEdge["mono-traversable", "dlist-instances"], DirectedEdge["mono-traversable", "hashable"], DirectedEdge["mono-traversable", "semigroupoids"], DirectedEdge["mono-traversable", "semigroups"], DirectedEdge["mono-traversable", "split"], DirectedEdge["mono-traversable", "text"], DirectedEdge["mono-traversable", "transformers"], DirectedEdge["mono-traversable", "unordered-containers"], DirectedEdge["mono-traversable", "vector"], DirectedEdge["mono-traversable", "vector-algorithms"], DirectedEdge["mono-traversable", "vector-instances"], DirectedEdge["monoid-absorbing", "base"], DirectedEdge["monoid-absorbing", "mtl"], DirectedEdge["monoid-extras", "base"], DirectedEdge["monoid-extras", "groups"], DirectedEdge["monoid-extras", "semigroupoids"], DirectedEdge["monoid-extras", "semigroups"], DirectedEdge["monoid-owns", "air"], DirectedEdge["monoid-owns", "base"], DirectedEdge["monoid-owns", "bytestring"], DirectedEdge["monoid-owns", "containers"], DirectedEdge["monoid-record", "base"], DirectedEdge["monoid-statistics", "base"], DirectedEdge["monoid-subclasses", "base"], DirectedEdge["monoid-subclasses", "bytestring"], DirectedEdge["monoid-subclasses", "containers"], DirectedEdge["monoid-subclasses", "primes"], DirectedEdge["monoid-subclasses", "text"], DirectedEdge["monoid-subclasses", "vector"], DirectedEdge["monoid-transformer", "base"], DirectedEdge["monoidal-containers", "base"], DirectedEdge["monoidal-containers", "containers"], DirectedEdge["monoidal-containers", "deepseq"], DirectedEdge["monoidal-containers", "hashable"], DirectedEdge["monoidal-containers", "lens"], DirectedEdge["monoidal-containers", "newtype"], DirectedEdge["monoidal-containers", "unordered-containers"], DirectedEdge["monoidplus", "base"], DirectedEdge["monoidplus", "contravariant"], DirectedEdge["monoidplus", "semigroups"], DirectedEdge["monoidplus", "transformers"], DirectedEdge["monoids", "reducers"], DirectedEdge["monoids", "array"], DirectedEdge["monoids", "base"], DirectedEdge["monoids", "bytestring"], DirectedEdge["monoids", "containers"], DirectedEdge["monoids", "fingertree"], DirectedEdge["monoids", "parallel"], DirectedEdge["monoids", "text"], DirectedEdge["monomorphic", "base"], DirectedEdge["montage", "aeson"], DirectedEdge["montage", "base"], DirectedEdge["montage", "bytestring"], DirectedEdge["montage", "containers"], DirectedEdge["montage", "ListLike"], DirectedEdge["montage", "old-locale"], DirectedEdge["montage", "pool-conduit"], DirectedEdge["montage", "protocol-buffers"], DirectedEdge["montage", "protocol-buffers-descriptor"], DirectedEdge["montage", "riak-bump"], DirectedEdge["montage", "safe"], DirectedEdge["montage", "stats-web"], DirectedEdge["montage", "stm"], DirectedEdge["montage", "system-uuid"], DirectedEdge["montage", "text"], DirectedEdge["montage", "time"], DirectedEdge["montage", "unordered-containers"], DirectedEdge["montage", "zeromq-haskell"], DirectedEdge["montage-client", "aeson"], DirectedEdge["montage-client", "base"], DirectedEdge["montage-client", "bytestring"], DirectedEdge["montage-client", "containers"], DirectedEdge["montage-client", "ListLike"], DirectedEdge["montage-client", "mtl"], DirectedEdge["montage-client", "old-locale"], DirectedEdge["montage-client", "pool-conduit"], DirectedEdge["montage-client", "protocol-buffers"], DirectedEdge["montage-client", "protocol-buffers-descriptor"], DirectedEdge["montage-client", "riak-bump"], DirectedEdge["montage-client", "safe"], DirectedEdge["montage-client", "stats-web"], DirectedEdge["montage-client", "stm"], DirectedEdge["montage-client", "system-uuid"], DirectedEdge["montage-client", "text"], DirectedEdge["montage-client", "text-format"], DirectedEdge["montage-client", "time"], DirectedEdge["montage-client", "unordered-containers"], DirectedEdge["montage-client", "zeromq-haskell"], DirectedEdge["monte-carlo", "base"], DirectedEdge["monte-carlo", "gsl-random"], DirectedEdge["monte-carlo", "primitive"], DirectedEdge["monte-carlo", "transformers"], DirectedEdge["monte-carlo", "vector"], DirectedEdge["moo", "array"], DirectedEdge["moo", "base"], DirectedEdge["moo", "gray-code"], DirectedEdge["moo", "monad-mersenne-random"], DirectedEdge["moo", "mtl"], DirectedEdge["moo", "random"], DirectedEdge["moo", "random-shuffle"], DirectedEdge["moo", "time"], DirectedEdge["moonshine", "aeson"], DirectedEdge["moonshine", "base"], DirectedEdge["moonshine", "bytestring"], DirectedEdge["moonshine", "canteven-config"], DirectedEdge["moonshine", "ekg"], DirectedEdge["moonshine", "ekg-core"], DirectedEdge["moonshine", "hslogger"], DirectedEdge["moonshine", "snap"], DirectedEdge["moonshine", "text"], DirectedEdge["moonshine", "time"], DirectedEdge["moonshine", "transformers"], DirectedEdge["moonshine", "yaml"], DirectedEdge["morfette", "array"], DirectedEdge["morfette", "base"], DirectedEdge["morfette", "binary"], DirectedEdge["morfette", "bytestring"], DirectedEdge["morfette", "containers"], DirectedEdge["morfette", "directory"], DirectedEdge["morfette", "filepath"], DirectedEdge["morfette", "mtl"], DirectedEdge["morfette", "pretty"], DirectedEdge["morfette", "QuickCheck"], DirectedEdge["morfette", "text"], DirectedEdge["morfette", "utf8-string"], DirectedEdge["morfette", "vector"], DirectedEdge["morfeusz", "base"], DirectedEdge["morfeusz", "bytestring"], DirectedEdge["morfeusz", "containers"], DirectedEdge["morfeusz", "directory"], DirectedEdge["morfeusz", "mtl"], DirectedEdge["morfeusz", "text"], DirectedEdge["morte", "array"], DirectedEdge["morte", "base"], DirectedEdge["morte", "binary"], DirectedEdge["morte", "containers"], DirectedEdge["morte", "deepseq"], DirectedEdge["morte", "Earley"], DirectedEdge["morte", "http-client"], DirectedEdge["morte", "http-client-tls"], DirectedEdge["morte", "microlens"], DirectedEdge["morte", "microlens-mtl"], DirectedEdge["morte", "morte"], DirectedEdge["morte", "optparse-applicative"], DirectedEdge["morte", "pipes"], DirectedEdge["morte", "system-fileio"], DirectedEdge["morte", "system-filepath"], DirectedEdge["morte", "text"], DirectedEdge["morte", "text-format"], DirectedEdge["morte", "transformers"], DirectedEdge["mosaico-lib", "base"], DirectedEdge["mosaico-lib", "base-unicode-symbols"], DirectedEdge["mosaico-lib", "colour"], DirectedEdge["mosaico-lib", "diagrams-cairo"], DirectedEdge["mosaico-lib", "diagrams-core"], DirectedEdge["mosaico-lib", "diagrams-gtk"], DirectedEdge["mosaico-lib", "diagrams-lib"], DirectedEdge["mosaico-lib", "glib"], DirectedEdge["mosaico-lib", "gtk"], DirectedEdge["mosaico-lib", "JuicyPixels"], DirectedEdge["mosaico-lib", "mtl"], DirectedEdge["mosaico-lib", "split"], DirectedEdge["mosaico-lib", "stm"], DirectedEdge["mosaico-lib", "stm-chans"], DirectedEdge["mosaico-lib", "transformers"], DirectedEdge["mount", "linux-mount"], DirectedEdge["mount", "base"], DirectedEdge["mount", "bytestring"], DirectedEdge["mountpoints", "base"], DirectedEdge["mp", "base"], DirectedEdge["mp", "binary"], DirectedEdge["mp", "bytestring"], DirectedEdge["mp", "ConfigFile"], DirectedEdge["mp", "daemons"], DirectedEdge["mp", "directory"], DirectedEdge["mp", "filepath"], DirectedEdge["mp", "glib"], DirectedEdge["mp", "gstreamer"], DirectedEdge["mp", "hgettext"], DirectedEdge["mp", "MissingH"], DirectedEdge["mp", "mtl"], DirectedEdge["mp", "network"], DirectedEdge["mp", "random"], DirectedEdge["mp", "setlocale"], DirectedEdge["mp", "text"], DirectedEdge["mp", "unix"], DirectedEdge["mp", "unordered-containers"], DirectedEdge["mp", "utf8-string"], DirectedEdge["mp", "vty"], DirectedEdge["mp", "vty-ui"], DirectedEdge["mp3decoder", "base"], DirectedEdge["mp3decoder", "binary-strict"], DirectedEdge["mp3decoder", "bytestring"], DirectedEdge["mp3decoder", "mtl"], DirectedEdge["mpdmate", "base"], DirectedEdge["mpdmate", "directory"], DirectedEdge["mpdmate", "network"], DirectedEdge["mpdmate", "powermate"], DirectedEdge["mpdmate", "unix"], DirectedEdge["mpppc", "ansi-terminal"], DirectedEdge["mpppc", "base"], DirectedEdge["mpppc", "bytestring"], DirectedEdge["mpppc", "split"], DirectedEdge["mpppc", "text"], DirectedEdge["mpretty", "ansi-terminal"], DirectedEdge["mpretty", "base"], DirectedEdge["mpretty", "containers"], DirectedEdge["mpretty", "data-lens-fd"], DirectedEdge["mpretty", "data-lens-template"], DirectedEdge["mpretty", "mtl"], DirectedEdge["mpretty", "orders"], DirectedEdge["mpretty", "text"], DirectedEdge["mpretty", "transformers"], DirectedEdge["mpris", "base"], DirectedEdge["mpris", "containers"], DirectedEdge["mpris", "dbus"], DirectedEdge["mpris", "mtl"], DirectedEdge["mprover", "base"], DirectedEdge["mprover", "containers"], DirectedEdge["mprover", "mtl"], DirectedEdge["mprover", "parsec"], DirectedEdge["mprover", "pretty"], DirectedEdge["mprover", "transformers"], DirectedEdge["mprover", "unbound"], DirectedEdge["mps", "air"], DirectedEdge["mps", "array"], DirectedEdge["mps", "base"], DirectedEdge["mps", "bytestring"], DirectedEdge["mps", "containers"], DirectedEdge["mps", "directory"], DirectedEdge["mps", "filepath"], DirectedEdge["mps", "monoid-owns"], DirectedEdge["mps", "old-locale"], DirectedEdge["mps", "old-time"], DirectedEdge["mps", "parallel"], DirectedEdge["mps", "parsec"], DirectedEdge["mps", "regexpr"], DirectedEdge["mps", "template-haskell"], DirectedEdge["mps", "time"], DirectedEdge["mps", "utf8-string"], DirectedEdge["mpvguihs", "base"], DirectedEdge["mpvguihs", "directory"], DirectedEdge["mpvguihs", "filepath"], DirectedEdge["mpvguihs", "gtk"], DirectedEdge["mpvguihs", "mtl"], DirectedEdge["mpvguihs", "process"], DirectedEdge["mpvguihs", "template-haskell"], DirectedEdge["mpvguihs", "unix"], DirectedEdge["mqtt-hs", "attoparsec"], DirectedEdge["mqtt-hs", "base"], DirectedEdge["mqtt-hs", "bytestring"], DirectedEdge["mqtt-hs", "monad-loops"], DirectedEdge["mqtt-hs", "mtl"], DirectedEdge["mqtt-hs", "network"], DirectedEdge["mqtt-hs", "singletons"], DirectedEdge["mqtt-hs", "text"], DirectedEdge["mrm", "base"], DirectedEdge["ms", "base"], DirectedEdge["ms", "contravariant"], DirectedEdge["ms", "edit-distance"], DirectedEdge["ms", "lens"], DirectedEdge["ms", "profunctors"], DirectedEdge["ms", "semigroupoids"], DirectedEdge["ms", "semigroups"], DirectedEdge["ms", "vector"], DirectedEdge["msgpack", "base"], DirectedEdge["msgpack", "binary"], DirectedEdge["msgpack", "blaze-builder"], DirectedEdge["msgpack", "bytestring"], DirectedEdge["msgpack", "containers"], DirectedEdge["msgpack", "deepseq"], DirectedEdge["msgpack", "hashable"], DirectedEdge["msgpack", "mtl"], DirectedEdge["msgpack", "text"], DirectedEdge["msgpack", "unordered-containers"], DirectedEdge["msgpack", "vector"], DirectedEdge["msgpack-aeson", "aeson"], DirectedEdge["msgpack-aeson", "base"], DirectedEdge["msgpack-aeson", "bytestring"], DirectedEdge["msgpack-aeson", "deepseq"], DirectedEdge["msgpack-aeson", "msgpack"], DirectedEdge["msgpack-aeson", "scientific"], DirectedEdge["msgpack-aeson", "text"], DirectedEdge["msgpack-aeson", "unordered-containers"], DirectedEdge["msgpack-aeson", "vector"], DirectedEdge["msgpack-idl", "base"], DirectedEdge["msgpack-idl", "blaze-builder"], DirectedEdge["msgpack-idl", "bytestring"], DirectedEdge["msgpack-idl", "cmdargs"], DirectedEdge["msgpack-idl", "containers"], DirectedEdge["msgpack-idl", "directory"], DirectedEdge["msgpack-idl", "filepath"], DirectedEdge["msgpack-idl", "msgpack"], DirectedEdge["msgpack-idl", "msgpack-idl"], DirectedEdge["msgpack-idl", "peggy"], DirectedEdge["msgpack-idl", "shakespeare-text"], DirectedEdge["msgpack-idl", "template-haskell"], DirectedEdge["msgpack-idl", "text"], DirectedEdge["msgpack-rpc", "base"], DirectedEdge["msgpack-rpc", "binary"], DirectedEdge["msgpack-rpc", "binary-conduit"], DirectedEdge["msgpack-rpc", "bytestring"], DirectedEdge["msgpack-rpc", "conduit"], DirectedEdge["msgpack-rpc", "conduit-extra"], DirectedEdge["msgpack-rpc", "exceptions"], DirectedEdge["msgpack-rpc", "monad-control"], DirectedEdge["msgpack-rpc", "msgpack"], DirectedEdge["msgpack-rpc", "mtl"], DirectedEdge["msgpack-rpc", "network"], DirectedEdge["msgpack-rpc", "random"], DirectedEdge["msgpack-rpc", "text"], DirectedEdge["msh", "base"], DirectedEdge["msh", "containers"], DirectedEdge["msh", "haskell-src-exts"], DirectedEdge["msh", "haskell-src-meta"], DirectedEdge["msh", "lens"], DirectedEdge["msh", "mtl"], DirectedEdge["msh", "parsec"], DirectedEdge["msh", "template-haskell"], DirectedEdge["msh", "text"], DirectedEdge["msi-kb-backlit", "base"], DirectedEdge["msi-kb-backlit", "bytestring"], DirectedEdge["msi-kb-backlit", "hid"], DirectedEdge["msi-kb-backlit", "split"], DirectedEdge["mstate", "base"], DirectedEdge["mstate", "monad-peel"], DirectedEdge["mstate", "mtl"], DirectedEdge["mstate", "stm"], DirectedEdge["msu", "base"], DirectedEdge["msu", "directory"], DirectedEdge["msu", "filepath"], DirectedEdge["msu", "mtl"], DirectedEdge["msu", "parsec"], DirectedEdge["msu", "process"], DirectedEdge["msu", "xdg-basedir"], DirectedEdge["mtgoxapi", "aeson"], DirectedEdge["mtgoxapi", "attoparsec"], DirectedEdge["mtgoxapi", "base"], DirectedEdge["mtgoxapi", "base16-bytestring"], DirectedEdge["mtgoxapi", "base64-bytestring"], DirectedEdge["mtgoxapi", "bytestring"], DirectedEdge["mtgoxapi", "curl"], DirectedEdge["mtgoxapi", "either"], DirectedEdge["mtgoxapi", "errors"], DirectedEdge["mtgoxapi", "hashable"], DirectedEdge["mtgoxapi", "HTTP"], DirectedEdge["mtgoxapi", "ixset"], DirectedEdge["mtgoxapi", "network"], DirectedEdge["mtgoxapi", "SHA"], DirectedEdge["mtgoxapi", "text"], DirectedEdge["mtgoxapi", "time"], DirectedEdge["mtgoxapi", "transformers"], DirectedEdge["mtgoxapi", "unordered-containers"], DirectedEdge["mtgoxapi", "vector"], DirectedEdge["mtgoxapi", "watchdog"], DirectedEdge["mtl", "base"], DirectedEdge["mtl", "transformers"], DirectedEdge["mtl-c", "base"], DirectedEdge["mtl-c", "mtl"], DirectedEdge["mtl-compat", "base"], DirectedEdge["mtl-compat", "mtl"], DirectedEdge["mtl-evil-instances", "layers"], DirectedEdge["mtl-evil-instances", "base"], DirectedEdge["mtl-evil-instances", "monad-control"], DirectedEdge["mtl-evil-instances", "mtl"], DirectedEdge["mtl-evil-instances", "transformers"], DirectedEdge["mtl-evil-instances", "transformers-base"], DirectedEdge["mtl-prelude", "base"], DirectedEdge["mtl-prelude", "mtl"], DirectedEdge["mtl-prelude", "transformers"], DirectedEdge["mtl-tf", "base"], DirectedEdge["mtl-unleashed", "base"], DirectedEdge["mtl-unleashed", "contravariant"], DirectedEdge["mtl-unleashed", "lens"], DirectedEdge["mtl-unleashed", "mtl"], DirectedEdge["mtl-unleashed", "profunctors"], DirectedEdge["mtl-unleashed", "tagged"], DirectedEdge["mtl-unleashed", "transformers"], DirectedEdge["mtl-unleashed", "transformers-compat"], DirectedEdge["mtlparse", "base"], DirectedEdge["mtlparse", "mtl"], DirectedEdge["mtlx", "base"], DirectedEdge["mtlx", "mtl"], DirectedEdge["mtlx", "QuickCheck"], DirectedEdge["mtp", "base"], DirectedEdge["mtp", "filepath"], DirectedEdge["mtp", "unix"], DirectedEdge["mtree", "base"], DirectedEdge["mtree", "bifunctors"], DirectedEdge["mucipher", "base"], DirectedEdge["mudbath", "aeson"], DirectedEdge["mudbath", "base"], DirectedEdge["mudbath", "bytestring"], DirectedEdge["mudbath", "cryptohash"], DirectedEdge["mudbath", "directory"], DirectedEdge["mudbath", "github-types"], DirectedEdge["mudbath", "http-conduit"], DirectedEdge["mudbath", "http-types"], DirectedEdge["mudbath", "process"], DirectedEdge["mudbath", "random"], DirectedEdge["mudbath", "snap-core"], DirectedEdge["mudbath", "snap-server"], DirectedEdge["mudbath", "stm"], DirectedEdge["mudbath", "text"], DirectedEdge["mudbath", "transformers"], DirectedEdge["muesli", "base"], DirectedEdge["muesli", "bytestring"], DirectedEdge["muesli", "cereal"], DirectedEdge["muesli", "containers"], DirectedEdge["muesli", "directory"], DirectedEdge["muesli", "filepath"], DirectedEdge["muesli", "hashable"], DirectedEdge["muesli", "mtl"], DirectedEdge["muesli", "psqueues"], DirectedEdge["muesli", "time"], DirectedEdge["mueval", "base"], DirectedEdge["mueval", "Cabal"], DirectedEdge["mueval", "containers"], DirectedEdge["mueval", "directory"], DirectedEdge["mueval", "extensible-exceptions"], DirectedEdge["mueval", "filepath"], DirectedEdge["mueval", "hint"], DirectedEdge["mueval", "mtl"], DirectedEdge["mueval", "process"], DirectedEdge["mueval", "QuickCheck"], DirectedEdge["mueval", "show"], DirectedEdge["mueval", "simple-reflect"], DirectedEdge["mueval", "unix"], DirectedEdge["mulang", "aeson"], DirectedEdge["mulang", "base"], DirectedEdge["mulang", "bytestring"], DirectedEdge["mulang", "haskell-src"], DirectedEdge["multext-east-msd", "base"], DirectedEdge["multi-cabal", "AAI"], DirectedEdge["multi-cabal", "aeson"], DirectedEdge["multi-cabal", "base"], DirectedEdge["multi-cabal", "bytestring"], DirectedEdge["multi-cabal", "directory"], DirectedEdge["multi-cabal", "filepath"], DirectedEdge["multi-cabal", "mtl"], DirectedEdge["multi-cabal", "multi-cabal"], DirectedEdge["multi-cabal", "process"], DirectedEdge["multi-cabal", "strict"], DirectedEdge["multiaddr", "attoparsec"], DirectedEdge["multiaddr", "base"], DirectedEdge["multiaddr", "base58-bytestring"], DirectedEdge["multiaddr", "bytestring"], DirectedEdge["multiaddr", "cereal"], DirectedEdge["multiaddr", "errors"], DirectedEdge["multiaddr", "hashable"], DirectedEdge["multiaddr", "text"], DirectedEdge["multiarg", "base"], DirectedEdge["multifocal", "array"], DirectedEdge["multifocal", "base"], DirectedEdge["multifocal", "containers"], DirectedEdge["multifocal", "haskell-src-exts"], DirectedEdge["multifocal", "HaXml"], DirectedEdge["multifocal", "hxt"], DirectedEdge["multifocal", "hxt-xpath"], DirectedEdge["multifocal", "mtl"], DirectedEdge["multifocal", "parsec"], DirectedEdge["multifocal", "pointless-haskell"], DirectedEdge["multifocal", "pointless-lenses"], DirectedEdge["multifocal", "pointless-rewrite"], DirectedEdge["multifocal", "pretty"], DirectedEdge["multifocal", "process"], DirectedEdge["multifocal", "syb"], DirectedEdge["multihash", "attoparsec"], DirectedEdge["multihash", "base"], DirectedEdge["multihash", "base58-bytestring"], DirectedEdge["multihash", "base64-bytestring"], DirectedEdge["multihash", "byteable"], DirectedEdge["multihash", "bytestring"], DirectedEdge["multihash", "cryptohash"], DirectedEdge["multihash", "hex"], DirectedEdge["multihash", "io-streams"], DirectedEdge["multihash", "multihash"], DirectedEdge["multihash", "optparse-applicative"], DirectedEdge["multimap", "base"], DirectedEdge["multimap", "containers"], DirectedEdge["multipart", "base"], DirectedEdge["multipart", "bytestring"], DirectedEdge["multipart", "parsec"], DirectedEdge["multipart-names", "base"], DirectedEdge["multipart-names", "case-insensitive"], DirectedEdge["multipart-names", "lens"], DirectedEdge["multipart-names", "parsec"], DirectedEdge["multipass", "base"], DirectedEdge["multipass", "binary"], DirectedEdge["multipass", "containers"], DirectedEdge["multipass", "ghc-prim"], DirectedEdge["multipass", "hashable"], DirectedEdge["multipass", "keys"], DirectedEdge["multipass", "math-functions"], DirectedEdge["multipass", "newtype"], DirectedEdge["multipass", "unordered-containers"], DirectedEdge["multiplate", "base"], DirectedEdge["multiplate", "transformers"], DirectedEdge["multiplate-simplified", "base"], DirectedEdge["multiplate-simplified", "multiplate"], DirectedEdge["multiplate-simplified", "transformers"], DirectedEdge["multiplicity", "base"], DirectedEdge["multiplicity", "containers"], DirectedEdge["multiplicity", "fez-conf"], DirectedEdge["multiplicity", "mtl"], DirectedEdge["multiplicity", "process"], DirectedEdge["multirec", "base"], DirectedEdge["multirec", "template-haskell"], DirectedEdge["multirec-alt-deriver", "base"], DirectedEdge["multirec-alt-deriver", "containers"], DirectedEdge["multirec-alt-deriver", "mtl"], DirectedEdge["multirec-alt-deriver", "multirec"], DirectedEdge["multirec-alt-deriver", "syb"], DirectedEdge["multirec-alt-deriver", "template-haskell"], DirectedEdge["multirec-alt-deriver", "th-expand-syns"], DirectedEdge["multirec-binary", "base"], DirectedEdge["multirec-binary", "binary"], DirectedEdge["multirec-binary", "multirec"], DirectedEdge["multiset", "base"], DirectedEdge["multiset", "containers"], DirectedEdge["multiset-comb", "base"], DirectedEdge["multiset-comb", "containers"], DirectedEdge["multiset-comb", "transformers"], DirectedEdge["multisetrewrite", "base"], DirectedEdge["multisetrewrite", "stm"], DirectedEdge["multistate", "base"], DirectedEdge["multistate", "monad-control"], DirectedEdge["multistate", "mtl"], DirectedEdge["multistate", "multistate"], DirectedEdge["multistate", "tagged"], DirectedEdge["multistate", "transformers"], DirectedEdge["multistate", "transformers-base"], DirectedEdge["muon", "base"], DirectedEdge["muon", "blaze-html"], DirectedEdge["muon", "ConfigFile"], DirectedEdge["muon", "directory"], DirectedEdge["muon", "Glob"], DirectedEdge["muon", "happstack-server"], DirectedEdge["muon", "HStringTemplate"], DirectedEdge["muon", "markdown"], DirectedEdge["muon", "MissingH"], DirectedEdge["muon", "process"], DirectedEdge["muon", "text"], DirectedEdge["murder", "AspectAG"], DirectedEdge["murder", "base"], DirectedEdge["murder", "containers"], DirectedEdge["murder", "HList"], DirectedEdge["murder", "ListLike"], DirectedEdge["murder", "template-haskell"], DirectedEdge["murder", "TTTAS"], DirectedEdge["murder", "uu-parsinglib"], DirectedEdge["murder", "uulib"], DirectedEdge["murmur", "authenticate-oauth"], DirectedEdge["murmur", "base"], DirectedEdge["murmur", "bytestring"], DirectedEdge["murmur", "conduit"], DirectedEdge["murmur", "conduit-extra"], DirectedEdge["murmur", "data-default"], DirectedEdge["murmur", "directory"], DirectedEdge["murmur", "http-conduit"], DirectedEdge["murmur", "lens"], DirectedEdge["murmur", "murmur"], DirectedEdge["murmur", "optparse-declarative"], DirectedEdge["murmur", "resourcet"], DirectedEdge["murmur", "text"], DirectedEdge["murmur", "transformers"], DirectedEdge["murmur", "twitter-conduit"], DirectedEdge["murmur", "twitter-types-lens"], DirectedEdge["murmur-hash", "base"], DirectedEdge["murmur-hash", "bytestring"], DirectedEdge["murmur3", "base"], DirectedEdge["murmur3", "bytestring"], DirectedEdge["murmur3", "cereal"], DirectedEdge["music-articulation", "average"], DirectedEdge["music-articulation", "base"], DirectedEdge["music-articulation", "semigroups"], DirectedEdge["music-diatonic", "base"], DirectedEdge["music-dynamics", "average"], DirectedEdge["music-dynamics", "base"], DirectedEdge["music-dynamics", "music-dynamics-literal"], DirectedEdge["music-dynamics", "semigroups"], DirectedEdge["music-dynamics-literal", "base"], DirectedEdge["music-dynamics-literal", "semigroups"], DirectedEdge["music-graphics", "aeson"], DirectedEdge["music-graphics", "base"], DirectedEdge["music-graphics", "blaze-svg"], DirectedEdge["music-graphics", "bytestring"], DirectedEdge["music-graphics", "lens"], DirectedEdge["music-graphics", "music-pitch"], DirectedEdge["music-graphics", "music-preludes"], DirectedEdge["music-graphics", "music-score"], DirectedEdge["music-graphics", "process"], DirectedEdge["music-parts", "adjunctions"], DirectedEdge["music-parts", "aeson"], DirectedEdge["music-parts", "base"], DirectedEdge["music-parts", "bytestring"], DirectedEdge["music-parts", "cassava"], DirectedEdge["music-parts", "containers"], DirectedEdge["music-parts", "data-default"], DirectedEdge["music-parts", "lens"], DirectedEdge["music-parts", "monadplus"], DirectedEdge["music-parts", "music-dynamics"], DirectedEdge["music-parts", "music-pitch"], DirectedEdge["music-parts", "roman-numerals"], DirectedEdge["music-parts", "semigroups"], DirectedEdge["music-parts", "vector-space"], DirectedEdge["music-parts", "vector-space-points"], DirectedEdge["music-pitch", "aeson"], DirectedEdge["music-pitch", "base"], DirectedEdge["music-pitch", "containers"], DirectedEdge["music-pitch", "data-interval"], DirectedEdge["music-pitch", "lens"], DirectedEdge["music-pitch", "music-pitch-literal"], DirectedEdge["music-pitch", "nats"], DirectedEdge["music-pitch", "positive"], DirectedEdge["music-pitch", "semigroups"], DirectedEdge["music-pitch", "type-unary"], DirectedEdge["music-pitch", "vector-space"], DirectedEdge["music-pitch", "vector-space-points"], DirectedEdge["music-pitch-literal", "base"], DirectedEdge["music-pitch-literal", "semigroups"], DirectedEdge["music-preludes", "async"], DirectedEdge["music-preludes", "average"], DirectedEdge["music-preludes", "base"], DirectedEdge["music-preludes", "containers"], DirectedEdge["music-preludes", "filepath"], DirectedEdge["music-preludes", "lens"], DirectedEdge["music-preludes", "lilypond"], DirectedEdge["music-preludes", "monadplus"], DirectedEdge["music-preludes", "music-articulation"], DirectedEdge["music-preludes", "music-dynamics"], DirectedEdge["music-preludes", "music-dynamics-literal"], DirectedEdge["music-preludes", "music-parts"], DirectedEdge["music-preludes", "music-pitch"], DirectedEdge["music-preludes", "music-pitch-literal"], DirectedEdge["music-preludes", "music-preludes"], DirectedEdge["music-preludes", "music-score"], DirectedEdge["music-preludes", "optparse-applicative"], DirectedEdge["music-preludes", "process"], DirectedEdge["music-preludes", "semigroups"], DirectedEdge["music-preludes", "split"], DirectedEdge["music-preludes", "temporary"], DirectedEdge["music-preludes", "unix"], DirectedEdge["music-preludes", "vector-space"], DirectedEdge["music-preludes", "vector-space-points"], DirectedEdge["music-score", "adjunctions"], DirectedEdge["music-score", "aeson"], DirectedEdge["music-score", "average"], DirectedEdge["music-score", "base"], DirectedEdge["music-score", "base-orphans"], DirectedEdge["music-score", "bifunctors"], DirectedEdge["music-score", "colour"], DirectedEdge["music-score", "comonad"], DirectedEdge["music-score", "containers"], DirectedEdge["music-score", "contravariant"], DirectedEdge["music-score", "distributive"], DirectedEdge["music-score", "HCodecs"], DirectedEdge["music-score", "lens"], DirectedEdge["music-score", "lilypond"], DirectedEdge["music-score", "monadplus"], DirectedEdge["music-score", "mtl"], DirectedEdge["music-score", "music-dynamics-literal"], DirectedEdge["music-score", "music-pitch-literal"], DirectedEdge["music-score", "nats"], DirectedEdge["music-score", "NumInstances"], DirectedEdge["music-score", "parsec"], DirectedEdge["music-score", "prettify"], DirectedEdge["music-score", "process"], DirectedEdge["music-score", "semigroups"], DirectedEdge["music-score", "transformers"], DirectedEdge["music-score", "transformers-compat"], DirectedEdge["music-score", "vector-space"], DirectedEdge["music-score", "vector-space-points"], DirectedEdge["music-sibelius", "aeson"], DirectedEdge["music-sibelius", "base"], DirectedEdge["music-sibelius", "bytestring"], DirectedEdge["music-sibelius", "lens"], DirectedEdge["music-sibelius", "monadplus"], DirectedEdge["music-sibelius", "music-articulation"], DirectedEdge["music-sibelius", "music-dynamics"], DirectedEdge["music-sibelius", "music-parts"], DirectedEdge["music-sibelius", "music-pitch"], DirectedEdge["music-sibelius", "music-pitch-literal"], DirectedEdge["music-sibelius", "music-preludes"], DirectedEdge["music-sibelius", "music-score"], DirectedEdge["music-sibelius", "semigroups"], DirectedEdge["music-sibelius", "unordered-containers"], DirectedEdge["music-suite", "abcnotation"], DirectedEdge["music-suite", "lilypond"], DirectedEdge["music-suite", "music-articulation"], DirectedEdge["music-suite", "music-dynamics"], DirectedEdge["music-suite", "music-dynamics-literal"], DirectedEdge["music-suite", "music-parts"], DirectedEdge["music-suite", "music-pitch"], DirectedEdge["music-suite", "music-pitch-literal"], DirectedEdge["music-suite", "music-preludes"], DirectedEdge["music-suite", "music-score"], DirectedEdge["music-util", "base"], DirectedEdge["music-util", "Cabal"], DirectedEdge["music-util", "containers"], DirectedEdge["music-util", "directory"], DirectedEdge["music-util", "fgl"], DirectedEdge["music-util", "process"], DirectedEdge["music-util", "shelly"], DirectedEdge["music-util", "split"], DirectedEdge["music-util", "text"], DirectedEdge["music-util", "unix"], DirectedEdge["musicbrainz-email", "aeson"], DirectedEdge["musicbrainz-email", "amqp"], DirectedEdge["musicbrainz-email", "base"], DirectedEdge["musicbrainz-email", "blaze-builder"], DirectedEdge["musicbrainz-email", "errors"], DirectedEdge["musicbrainz-email", "ghc-prim"], DirectedEdge["musicbrainz-email", "heist"], DirectedEdge["musicbrainz-email", "HTTP"], DirectedEdge["musicbrainz-email", "mime-mail"], DirectedEdge["musicbrainz-email", "mtl"], DirectedEdge["musicbrainz-email", "musicbrainz-email"], DirectedEdge["musicbrainz-email", "network"], DirectedEdge["musicbrainz-email", "network-metrics"], DirectedEdge["musicbrainz-email", "optparse-applicative"], DirectedEdge["musicbrainz-email", "postgresql-simple"], DirectedEdge["musicbrainz-email", "text"], DirectedEdge["musicbrainz-email", "time"], DirectedEdge["musicbrainz-email", "transformers"], DirectedEdge["musicbrainz-email", "xmlhtml"], DirectedEdge["musicxml", "base"], DirectedEdge["musicxml", "containers"], DirectedEdge["musicxml", "directory"], DirectedEdge["musicxml", "HaXml"], DirectedEdge["musicxml", "old-time"], DirectedEdge["musicxml", "pretty"], DirectedEdge["musicxml2", "base"], DirectedEdge["musicxml2", "data-default"], DirectedEdge["musicxml2", "music-dynamics-literal"], DirectedEdge["musicxml2", "music-pitch-literal"], DirectedEdge["musicxml2", "nats"], DirectedEdge["musicxml2", "reverse-apply"], DirectedEdge["musicxml2", "semigroups"], DirectedEdge["musicxml2", "type-unary"], DirectedEdge["musicxml2", "xml"], DirectedEdge["mustache", "aeson"], DirectedEdge["mustache", "base"], DirectedEdge["mustache", "base-unicode-symbols"], DirectedEdge["mustache", "bytestring"], DirectedEdge["mustache", "cmdargs"], DirectedEdge["mustache", "containers"], DirectedEdge["mustache", "directory"], DirectedEdge["mustache", "either"], DirectedEdge["mustache", "filepath"], DirectedEdge["mustache", "mtl"], DirectedEdge["mustache", "mustache"], DirectedEdge["mustache", "parsec"], DirectedEdge["mustache", "scientific"], DirectedEdge["mustache", "text"], DirectedEdge["mustache", "unordered-containers"], DirectedEdge["mustache", "vector"], DirectedEdge["mustache", "yaml"], DirectedEdge["mustache-haskell", "aeson"], DirectedEdge["mustache-haskell", "base"], DirectedEdge["mustache-haskell", "bytestring"], DirectedEdge["mustache-haskell", "directory"], DirectedEdge["mustache-haskell", "mustache-haskell"], DirectedEdge["mustache-haskell", "optparse-applicative"], DirectedEdge["mustache-haskell", "parsec"], DirectedEdge["mustache-haskell", "pretty-show"], DirectedEdge["mustache-haskell", "scientific"], DirectedEdge["mustache-haskell", "text"], DirectedEdge["mustache-haskell", "transformers"], DirectedEdge["mustache-haskell", "unordered-containers"], DirectedEdge["mustache-haskell", "vector"], DirectedEdge["mustache2hs", "base"], DirectedEdge["mustache2hs", "blaze-builder"], DirectedEdge["mustache2hs", "bytestring"], DirectedEdge["mustache2hs", "filepath"], DirectedEdge["mustache2hs", "haskell-src"], DirectedEdge["mustache2hs", "parsec"], DirectedEdge["mustache2hs", "text"], DirectedEdge["mustache2hs", "transformers"], DirectedEdge["mustache2hs", "utf8-string"], DirectedEdge["mutable-containers", "base"], DirectedEdge["mutable-containers", "containers"], DirectedEdge["mutable-containers", "ghc-prim"], DirectedEdge["mutable-containers", "mono-traversable"], DirectedEdge["mutable-containers", "primitive"], DirectedEdge["mutable-containers", "vector"], DirectedEdge["mutable-iter", "base"], DirectedEdge["mutable-iter", "iteratee"], DirectedEdge["mutable-iter", "MonadCatchIO-transformers"], DirectedEdge["mutable-iter", "transformers"], DirectedEdge["mutable-iter", "vector"], DirectedEdge["mute-unmute", "base"], DirectedEdge["mute-unmute", "directory"], DirectedEdge["mute-unmute", "filepath"], DirectedEdge["mute-unmute", "hslogger"], DirectedEdge["mute-unmute", "hslogger-template"], DirectedEdge["mute-unmute", "mtl"], DirectedEdge["mute-unmute", "network-dbus"], DirectedEdge["mute-unmute", "process"], DirectedEdge["mvc", "async"], DirectedEdge["mvc", "base"], DirectedEdge["mvc", "contravariant"], DirectedEdge["mvc", "foldl"], DirectedEdge["mvc", "managed"], DirectedEdge["mvc", "mmorph"], DirectedEdge["mvc", "pipes"], DirectedEdge["mvc", "pipes-concurrency"], DirectedEdge["mvc", "transformers"], DirectedEdge["mvc-updates", "async"], DirectedEdge["mvc-updates", "base"], DirectedEdge["mvc-updates", "foldl"], DirectedEdge["mvc-updates", "mvc"], DirectedEdge["mvclient", "base"], DirectedEdge["mvclient", "base-unicode-symbols"], DirectedEdge["mvclient", "binary"], DirectedEdge["mvclient", "bytestring"], DirectedEdge["mvclient", "containers"], DirectedEdge["mvclient", "control-event"], DirectedEdge["mvclient", "Crypto"], DirectedEdge["mvclient", "hexpat"], DirectedEdge["mvclient", "http-enumerator"], DirectedEdge["mvclient", "maccatcher"], DirectedEdge["mvclient", "mtl"], DirectedEdge["mvclient", "network"], DirectedEdge["mvclient", "parsec"], DirectedEdge["mvclient", "time"], DirectedEdge["mvclient", "uuid"], DirectedEdge["mwc-probability", "base"], DirectedEdge["mwc-probability", "mwc-random"], DirectedEdge["mwc-probability", "primitive"], DirectedEdge["mwc-probability", "transformers"], DirectedEdge["mwc-random", "base"], DirectedEdge["mwc-random", "primitive"], DirectedEdge["mwc-random", "time"], DirectedEdge["mwc-random", "vector"], DirectedEdge["mwc-random-monad", "base"], DirectedEdge["mwc-random-monad", "monad-primitive"], DirectedEdge["mwc-random-monad", "mwc-random"], DirectedEdge["mwc-random-monad", "primitive"], DirectedEdge["mwc-random-monad", "transformers"], DirectedEdge["mwc-random-monad", "vector"], DirectedEdge["myTestlll", "array"], DirectedEdge["myTestlll", "arrows"], DirectedEdge["myTestlll", "base"], DirectedEdge["myTestlll", "bytestring"], DirectedEdge["myTestlll", "CCA"], DirectedEdge["myTestlll", "containers"], DirectedEdge["myTestlll", "deepseq"], DirectedEdge["myTestlll", "ghc-prim"], DirectedEdge["myTestlll", "HCodecs"], DirectedEdge["myTestlll", "heap"], DirectedEdge["myTestlll", "markov-chain"], DirectedEdge["myTestlll", "monadIO"], DirectedEdge["myTestlll", "mtl"], DirectedEdge["myTestlll", "PortMidi"], DirectedEdge["myTestlll", "pure-fft"], DirectedEdge["myTestlll", "random"], DirectedEdge["myTestlll", "stm"], DirectedEdge["myTestlll", "syb"], DirectedEdge["myTestlll", "template-haskell"], DirectedEdge["myTestlll", "UISF"], DirectedEdge["mybitcoin-sci", "base"], DirectedEdge["mybitcoin-sci", "cgi"], DirectedEdge["mybitcoin-sci", "curl"], DirectedEdge["mybitcoin-sci", "directory"], DirectedEdge["mybitcoin-sci", "mtl"], DirectedEdge["mybitcoin-sci", "process"], DirectedEdge["mybitcoin-sci", "split"], DirectedEdge["myo", "aeson"], DirectedEdge["myo", "base"], DirectedEdge["myo", "containers"], DirectedEdge["myo", "inline-c"], DirectedEdge["myo", "lens-family"], DirectedEdge["myo", "lens-family-th"], DirectedEdge["myo", "myo"], DirectedEdge["myo", "scientific"], DirectedEdge["myo", "string-conv"], DirectedEdge["myo", "template-haskell"], DirectedEdge["myo", "text"], DirectedEdge["myo", "unordered-containers"], DirectedEdge["myo", "vector"], DirectedEdge["myo", "websockets"], DirectedEdge["mysnapsession", "base"], DirectedEdge["mysnapsession", "bytestring"], DirectedEdge["mysnapsession", "cereal"], DirectedEdge["mysnapsession", "clientsession"], DirectedEdge["mysnapsession", "containers"], DirectedEdge["mysnapsession", "mtl"], DirectedEdge["mysnapsession", "random"], DirectedEdge["mysnapsession", "regex-posix"], DirectedEdge["mysnapsession", "snap"], DirectedEdge["mysnapsession", "snap-core"], DirectedEdge["mysnapsession", "time"], DirectedEdge["mysnapsession-example", "base"], DirectedEdge["mysnapsession-example", "bytestring"], DirectedEdge["mysnapsession-example", "clientsession"], DirectedEdge["mysnapsession-example", "heist"], DirectedEdge["mysnapsession-example", "mtl"], DirectedEdge["mysnapsession-example", "mysnapsession"], DirectedEdge["mysnapsession-example", "snap"], DirectedEdge["mysnapsession-example", "snap-core"], DirectedEdge["mysnapsession-example", "snap-server"], DirectedEdge["mysnapsession-example", "text"], DirectedEdge["mysnapsession-example", "time"], DirectedEdge["mysql", "base"], DirectedEdge["mysql", "bytestring"], DirectedEdge["mysql", "containers"], DirectedEdge["mysql-effect", "base"], DirectedEdge["mysql-effect", "bytestring"], DirectedEdge["mysql-effect", "extensible-effects"], DirectedEdge["mysql-effect", "mysql"], DirectedEdge["mysql-effect", "mysql-simple"], DirectedEdge["mysql-simple", "attoparsec"], DirectedEdge["mysql-simple", "base"], DirectedEdge["mysql-simple", "base16-bytestring"], DirectedEdge["mysql-simple", "blaze-builder"], DirectedEdge["mysql-simple", "blaze-textual"], DirectedEdge["mysql-simple", "bytestring"], DirectedEdge["mysql-simple", "mysql"], DirectedEdge["mysql-simple", "old-locale"], DirectedEdge["mysql-simple", "pcre-light"], DirectedEdge["mysql-simple", "text"], DirectedEdge["mysql-simple", "time"], DirectedEdge["mysql-simple-quasi", "base"], DirectedEdge["mysql-simple-quasi", "haskell-src-meta"], DirectedEdge["mysql-simple-quasi", "mysql-simple"], DirectedEdge["mysql-simple-quasi", "template-haskell"], DirectedEdge["mysql-simple-typed", "base"], DirectedEdge["mysql-simple-typed", "mysql"], DirectedEdge["mysql-simple-typed", "mysql-simple"], DirectedEdge["mysql-simple-typed", "template-haskell"], DirectedEdge["mysql-simple-typed", "typedquery"], DirectedEdge["mysql-simple-typed", "utf8-string"], DirectedEdge["mzv", "base"], DirectedEdge["mzv", "transformers"], DirectedEdge["n-m", "base"], DirectedEdge["n-m", "HSH"], DirectedEdge["n-m", "mtl"], DirectedEdge["n-m", "process"], DirectedEdge["nagios-check", "base"], DirectedEdge["nagios-check", "bifunctors"], DirectedEdge["nagios-check", "exceptions"], DirectedEdge["nagios-check", "mtl"], DirectedEdge["nagios-check", "text"], DirectedEdge["nagios-perfdata", "attoparsec"], DirectedEdge["nagios-perfdata", "base"], DirectedEdge["nagios-perfdata", "bifunctors"], DirectedEdge["nagios-perfdata", "bytestring"], DirectedEdge["nagios-perfdata", "containers"], DirectedEdge["nagios-perfdata", "mtl"], DirectedEdge["nagios-plugin-ekg", "aeson"], DirectedEdge["nagios-plugin-ekg", "base"], DirectedEdge["nagios-plugin-ekg", "bytestring"], DirectedEdge["nagios-plugin-ekg", "containers"], DirectedEdge["nagios-plugin-ekg", "lens"], DirectedEdge["nagios-plugin-ekg", "nagios-check"], DirectedEdge["nagios-plugin-ekg", "nagios-plugin-ekg"], DirectedEdge["nagios-plugin-ekg", "optparse-applicative"], DirectedEdge["nagios-plugin-ekg", "text"], DirectedEdge["nagios-plugin-ekg", "transformers"], DirectedEdge["nagios-plugin-ekg", "unordered-containers"], DirectedEdge["nagios-plugin-ekg", "wreq"], DirectedEdge["named-formlet", "base"], DirectedEdge["named-formlet", "blaze-html"], DirectedEdge["named-formlet", "bytestring"], DirectedEdge["named-formlet", "containers"], DirectedEdge["named-formlet", "mtl"], DirectedEdge["named-formlet", "text"], DirectedEdge["named-formlet", "transformers"], DirectedEdge["named-lock", "base"], DirectedEdge["named-lock", "containers"], DirectedEdge["named-records", "base"], DirectedEdge["named-records", "binary"], DirectedEdge["named-records", "names"], DirectedEdge["named-records", "template-haskell"], DirectedEdge["namelist", "base"], DirectedEdge["namelist", "case-insensitive"], DirectedEdge["namelist", "data-default-class"], DirectedEdge["namelist", "parsec"], DirectedEdge["names", "base"], DirectedEdge["names", "template-haskell"], DirectedEdge["names-th", "base"], DirectedEdge["names-th", "containers"], DirectedEdge["names-th", "template-haskell"], DirectedEdge["nano-cryptr", "base"], DirectedEdge["nano-cryptr", "bytestring"], DirectedEdge["nano-erl", "base"], DirectedEdge["nano-erl", "stm"], DirectedEdge["nano-hmac", "base"], DirectedEdge["nano-hmac", "bytestring"], DirectedEdge["nano-md5", "base"], DirectedEdge["nano-md5", "bytestring"], DirectedEdge["nanoAgda", "base"], DirectedEdge["nanoAgda", "BNFC-meta"], DirectedEdge["nanoAgda", "cmdargs"], DirectedEdge["nanoAgda", "containers"], DirectedEdge["nanoAgda", "mtl"], DirectedEdge["nanoAgda", "parsec"], DirectedEdge["nanoAgda", "pretty"], DirectedEdge["nanoAgda", "transformers"], DirectedEdge["nanocurses", "base"], DirectedEdge["nanocurses", "bytestring"], DirectedEdge["nanocurses", "unix"], DirectedEdge["nanomsg", "base"], DirectedEdge["nanomsg", "bytestring"], DirectedEdge["nanomsg-haskell", "base"], DirectedEdge["nanomsg-haskell", "binary"], DirectedEdge["nanomsg-haskell", "bytestring"], DirectedEdge["nanoparsec", "base"], DirectedEdge["nanoparsec", "bytestring"], DirectedEdge["nanoparsec", "ListLike"], DirectedEdge["nanospec", "base"], DirectedEdge["nanovg", "base"], DirectedEdge["nanovg", "bytestring"], DirectedEdge["nanovg", "containers"], DirectedEdge["nanovg", "gl"], DirectedEdge["nanovg", "GLFW-b"], DirectedEdge["nanovg", "linear"], DirectedEdge["nanovg", "monad-loops"], DirectedEdge["nanovg", "nanovg"], DirectedEdge["nanovg", "text"], DirectedEdge["nanovg", "transformers"], DirectedEdge["nanovg", "vector"], DirectedEdge["nanq", "aeson"], DirectedEdge["nanq", "aeson-pretty"], DirectedEdge["nanq", "base"], DirectedEdge["nanq", "bytestring"], DirectedEdge["nanq", "containers"], DirectedEdge["nanq", "extensible-effects"], DirectedEdge["nanq", "kanji"], DirectedEdge["nanq", "microlens"], DirectedEdge["nanq", "microlens-aeson"], DirectedEdge["nanq", "optparse-applicative"], DirectedEdge["nanq", "text"], DirectedEdge["narc", "base"], DirectedEdge["narc", "HDBC"], DirectedEdge["narc", "HUnit"], DirectedEdge["narc", "mtl"], DirectedEdge["narc", "QuickCheck"], DirectedEdge["narc", "random"], DirectedEdge["nat", "base"], DirectedEdge["nationstates", "base"], DirectedEdge["nationstates", "bytestring"], DirectedEdge["nationstates", "clock"], DirectedEdge["nationstates", "containers"], DirectedEdge["nationstates", "http-client"], DirectedEdge["nationstates", "http-client-tls"], DirectedEdge["nationstates", "http-types"], DirectedEdge["nationstates", "multiset"], DirectedEdge["nationstates", "tls"], DirectedEdge["nationstates", "transformers"], DirectedEdge["nationstates", "xml"], DirectedEdge["native", "base"], DirectedEdge["native", "bytestring"], DirectedEdge["native", "directory"], DirectedEdge["native", "filepath"], DirectedEdge["native", "native"], DirectedEdge["native", "optparse-applicative"], DirectedEdge["native", "process"], DirectedEdge["native", "shelly"], DirectedEdge["native", "text"], DirectedEdge["nats", "base"], DirectedEdge["nats", "binary"], DirectedEdge["nats", "hashable"], DirectedEdge["nats", "template-haskell"], DirectedEdge["nats-queue", "aeson"], DirectedEdge["nats-queue", "async"], DirectedEdge["nats-queue", "base"], DirectedEdge["nats-queue", "bytestring"], DirectedEdge["nats-queue", "containers"], DirectedEdge["nats-queue", "dequeue"], DirectedEdge["nats-queue", "network"], DirectedEdge["nats-queue", "network-uri"], DirectedEdge["nats-queue", "random"], DirectedEdge["nats-queue", "text"], DirectedEdge["natural-number", "base"], DirectedEdge["natural-number", "type-equality"], DirectedEdge["natural-number", "type-level-natural-number"], DirectedEdge["natural-number", "type-level-natural-number-induction"], DirectedEdge["natural-numbers", "base"], DirectedEdge["natural-sort", "base"], DirectedEdge["natural-sort", "bytestring"], DirectedEdge["natural-sort", "parsec"], DirectedEdge["natural-sort", "text"], DirectedEdge["natural-transformation", "base"], DirectedEdge["naturalcomp", "base"], DirectedEdge["naturalcomp", "text"], DirectedEdge["naturalcomp", "utf8-string"], DirectedEdge["naturals", "base"], DirectedEdge["naver-translate", "aeson"], DirectedEdge["naver-translate", "base"], DirectedEdge["naver-translate", "lens"], DirectedEdge["naver-translate", "lens-aeson"], DirectedEdge["naver-translate", "network-uri"], DirectedEdge["naver-translate", "random"], DirectedEdge["naver-translate", "text"], DirectedEdge["naver-translate", "wreq"], DirectedEdge["nbt", "array"], DirectedEdge["nbt", "base"], DirectedEdge["nbt", "bytestring"], DirectedEdge["nbt", "cereal"], DirectedEdge["nbt", "text"], DirectedEdge["nc-indicators", "array"], DirectedEdge["nc-indicators", "attoparsec"], DirectedEdge["nc-indicators", "base"], DirectedEdge["nc-indicators", "bytestring"], DirectedEdge["nc-indicators", "containers"], DirectedEdge["nc-indicators", "gtk"], DirectedEdge["nc-indicators", "hflags"], DirectedEdge["nc-indicators", "lens"], DirectedEdge["nc-indicators", "pipes"], DirectedEdge["nc-indicators", "stm"], DirectedEdge["nc-indicators", "unix"], DirectedEdge["ncurses", "base"], DirectedEdge["ncurses", "containers"], DirectedEdge["ncurses", "text"], DirectedEdge["ncurses", "transformers"], DirectedEdge["ndjson-conduit", "aeson"], DirectedEdge["ndjson-conduit", "attoparsec"], DirectedEdge["ndjson-conduit", "base"], DirectedEdge["ndjson-conduit", "bytestring"], DirectedEdge["ndjson-conduit", "conduit"], DirectedEdge["neat", "base"], DirectedEdge["neat", "filepath"], DirectedEdge["neat", "neat"], DirectedEdge["neat", "parsec"], DirectedEdge["neat-interpolation", "base"], DirectedEdge["neat-interpolation", "base-prelude"], DirectedEdge["neat-interpolation", "parsec"], DirectedEdge["neat-interpolation", "template-haskell"], DirectedEdge["neat-interpolation", "text"], DirectedEdge["needle", "base"], DirectedEdge["needle", "containers"], DirectedEdge["needle", "haskell-src-meta"], DirectedEdge["needle", "mtl"], DirectedEdge["needle", "parsec"], DirectedEdge["needle", "parsec-extra"], DirectedEdge["needle", "template-haskell"], DirectedEdge["needle", "text"], DirectedEdge["needle", "vector"], DirectedEdge["neet", "base"], DirectedEdge["neet", "cereal"], DirectedEdge["neet", "containers"], DirectedEdge["neet", "graphviz"], DirectedEdge["neet", "MonadRandom"], DirectedEdge["neet", "multimap"], DirectedEdge["neet", "parallel"], DirectedEdge["neet", "random"], DirectedEdge["neet", "transformers"], DirectedEdge["nehe-tuts", "array"], DirectedEdge["nehe-tuts", "base"], DirectedEdge["nehe-tuts", "bytestring"], DirectedEdge["nehe-tuts", "cereal"], DirectedEdge["nehe-tuts", "directory"], DirectedEdge["nehe-tuts", "GLFW-b"], DirectedEdge["nehe-tuts", "GLURaw"], DirectedEdge["nehe-tuts", "OpenGLRaw"], DirectedEdge["nehe-tuts", "random"], DirectedEdge["neil", "base"], DirectedEdge["neil", "cmdargs"], DirectedEdge["neil", "containers"], DirectedEdge["neil", "directory"], DirectedEdge["neil", "extra"], DirectedEdge["neil", "filepath"], DirectedEdge["neil", "GoogleChart"], DirectedEdge["neil", "json"], DirectedEdge["neil", "old-time"], DirectedEdge["neil", "process"], DirectedEdge["neil", "time"], DirectedEdge["neither", "either"], DirectedEdge["neither", "monad-control"], DirectedEdge["neither", "base"], DirectedEdge["neither", "failure"], DirectedEdge["neither", "transformers"], DirectedEdge["nemesis", "base"], DirectedEdge["nemesis", "containers"], DirectedEdge["nemesis", "directory"], DirectedEdge["nemesis", "dlist"], DirectedEdge["nemesis", "Glob"], DirectedEdge["nemesis", "lens"], DirectedEdge["nemesis", "mtl"], DirectedEdge["nemesis", "process"], DirectedEdge["nemesis", "time"], DirectedEdge["nemesis-titan", "air"], DirectedEdge["nemesis-titan", "air-th"], DirectedEdge["nemesis-titan", "base"], DirectedEdge["nemesis-titan", "bytestring"], DirectedEdge["nemesis-titan", "directory"], DirectedEdge["nemesis-titan", "filepath"], DirectedEdge["nemesis-titan", "hspec"], DirectedEdge["nemesis-titan", "HStringTemplate"], DirectedEdge["nemesis-titan", "nemesis"], DirectedEdge["nemesis-titan", "random"], DirectedEdge["nemesis-titan", "uuid"], DirectedEdge["nerf", "base"], DirectedEdge["nerf", "binary"], DirectedEdge["nerf", "bytestring"], DirectedEdge["nerf", "cmdargs"], DirectedEdge["nerf", "containers"], DirectedEdge["nerf", "data-named"], DirectedEdge["nerf", "dawg"], DirectedEdge["nerf", "directory"], DirectedEdge["nerf", "filepath"], DirectedEdge["nerf", "IntervalMap"], DirectedEdge["nerf", "monad-ox"], DirectedEdge["nerf", "mtl"], DirectedEdge["nerf", "network"], DirectedEdge["nerf", "polimorf"], DirectedEdge["nerf", "polysoup"], DirectedEdge["nerf", "sgd"], DirectedEdge["nerf", "tagsoup"], DirectedEdge["nerf", "temporary"], DirectedEdge["nerf", "text"], DirectedEdge["nerf", "text-binary"], DirectedEdge["nerf", "tokenize"], DirectedEdge["nerf", "vector"], DirectedEdge["nero", "base"], DirectedEdge["nero", "bifunctors"], DirectedEdge["nero", "bytestring"], DirectedEdge["nero", "containers"], DirectedEdge["nero", "lens"], DirectedEdge["nero", "text"], DirectedEdge["nero-wai", "base"], DirectedEdge["nero-wai", "bytestring"], DirectedEdge["nero-wai", "http-types"], DirectedEdge["nero-wai", "lens"], DirectedEdge["nero-wai", "nero"], DirectedEdge["nero-wai", "text"], DirectedEdge["nero-wai", "wai"], DirectedEdge["nero-wai", "wai-extra"], DirectedEdge["nero-warp", "base"], DirectedEdge["nero-warp", "nero"], DirectedEdge["nero-warp", "nero-wai"], DirectedEdge["nero-warp", "warp"], DirectedEdge["nested-routes", "attoparsec"], DirectedEdge["nested-routes", "base"], DirectedEdge["nested-routes", "bytestring"], DirectedEdge["nested-routes", "composition-extra"], DirectedEdge["nested-routes", "errors"], DirectedEdge["nested-routes", "exceptions"], DirectedEdge["nested-routes", "hashable"], DirectedEdge["nested-routes", "hashtables"], DirectedEdge["nested-routes", "HSet"], DirectedEdge["nested-routes", "http-types"], DirectedEdge["nested-routes", "mtl"], DirectedEdge["nested-routes", "nested-routes"], DirectedEdge["nested-routes", "poly-arity"], DirectedEdge["nested-routes", "pred-set"], DirectedEdge["nested-routes", "pred-trie"], DirectedEdge["nested-routes", "regex-compat"], DirectedEdge["nested-routes", "semigroups"], DirectedEdge["nested-routes", "text"], DirectedEdge["nested-routes", "transformers"], DirectedEdge["nested-routes", "tries"], DirectedEdge["nested-routes", "unordered-containers"], DirectedEdge["nested-routes", "wai-middleware-content-type"], DirectedEdge["nested-routes", "wai-middleware-verbs"], DirectedEdge["nested-routes", "wai-transformers"], DirectedEdge["nested-routes", "warp"], DirectedEdge["nested-sets", "base"], DirectedEdge["nested-sets", "containers"], DirectedEdge["nestedmap", "base"], DirectedEdge["nestedmap", "base-unicode-symbols"], DirectedEdge["nestedmap", "containers"], DirectedEdge["net-concurrent", "base"], DirectedEdge["net-concurrent", "bytestring"], DirectedEdge["net-concurrent", "containers"], DirectedEdge["net-concurrent", "ghc-binary"], DirectedEdge["net-concurrent", "hslogger"], DirectedEdge["net-concurrent", "monad-loops"], DirectedEdge["net-concurrent", "network"], DirectedEdge["netclock", "base"], DirectedEdge["netclock", "bytestring"], DirectedEdge["netclock", "hosc"], DirectedEdge["netclock", "network"], DirectedEdge["netcore", "ansi-wl-pprint"], DirectedEdge["netcore", "base"], DirectedEdge["netcore", "bimap"], DirectedEdge["netcore", "binary"], DirectedEdge["netcore", "binary-strict"], DirectedEdge["netcore", "bytestring"], DirectedEdge["netcore", "containers"], DirectedEdge["netcore", "fgl"], DirectedEdge["netcore", "HList"], DirectedEdge["netcore", "hslogger"], DirectedEdge["netcore", "mtl"], DirectedEdge["netcore", "multiset"], DirectedEdge["netcore", "network"], DirectedEdge["netcore", "parsec"], DirectedEdge["netcore", "process"], DirectedEdge["netcore", "random"], DirectedEdge["netcore", "syb"], DirectedEdge["netlines", "base"], DirectedEdge["netlines", "bytestring"], DirectedEdge["netlines", "contstuff"], DirectedEdge["netlines", "enumerator"], DirectedEdge["netlines", "HTF"], DirectedEdge["netlines", "random"], DirectedEdge["netlines", "text"], DirectedEdge["netlines", "time"], DirectedEdge["netlink", "base"], DirectedEdge["netlink", "bytestring"], DirectedEdge["netlink", "cereal"], DirectedEdge["netlink", "containers"], DirectedEdge["netlink", "monad-loops"], DirectedEdge["netlink", "unix"], DirectedEdge["netlist", "base"], DirectedEdge["netlist", "binary"], DirectedEdge["netlist", "containers"], DirectedEdge["netlist", "syb"], DirectedEdge["netlist-to-vhdl", "base"], DirectedEdge["netlist-to-vhdl", "netlist"], DirectedEdge["netlist-to-vhdl", "pretty"], DirectedEdge["netpbm", "attoparsec"], DirectedEdge["netpbm", "attoparsec-binary"], DirectedEdge["netpbm", "base"], DirectedEdge["netpbm", "bytestring"], DirectedEdge["netpbm", "storable-record"], DirectedEdge["netpbm", "unordered-containers"], DirectedEdge["netpbm", "vector"], DirectedEdge["netpbm", "vector-th-unbox"], DirectedEdge["netrc", "base"], DirectedEdge["netrc", "bytestring"], DirectedEdge["netrc", "bytestring-builder"], DirectedEdge["netrc", "deepseq"], DirectedEdge["netrc", "ghc-prim"], DirectedEdge["netrc", "parsec"], DirectedEdge["netspec", "aeson"], DirectedEdge["netspec", "base"], DirectedEdge["netspec", "binary"], DirectedEdge["netspec", "bytestring"], DirectedEdge["netspec", "mtl"], DirectedEdge["netspec", "network"], DirectedEdge["netspec", "template-haskell"], DirectedEdge["netspec", "text"], DirectedEdge["netspec", "transformers"], DirectedEdge["netstring-enumerator", "base"], DirectedEdge["netstring-enumerator", "bytestring"], DirectedEdge["netstring-enumerator", "enumerator"], DirectedEdge["netstring-enumerator", "transformers"], DirectedEdge["nettle", "base"], DirectedEdge["nettle", "byteable"], DirectedEdge["nettle", "bytestring"], DirectedEdge["nettle", "crypto-cipher-types"], DirectedEdge["nettle", "securemem"], DirectedEdge["nettle", "tagged"], DirectedEdge["nettle-frp", "base"], DirectedEdge["nettle-frp", "bimap"], DirectedEdge["nettle-frp", "binary"], DirectedEdge["nettle-frp", "bytestring"], DirectedEdge["nettle-frp", "containers"], DirectedEdge["nettle-frp", "mtl"], DirectedEdge["nettle-frp", "nettle-openflow"], DirectedEdge["nettle-frp", "network"], DirectedEdge["nettle-frp", "network-data"], DirectedEdge["nettle-frp", "random"], DirectedEdge["nettle-frp", "time"], DirectedEdge["nettle-netkit", "base"], DirectedEdge["nettle-netkit", "containers"], DirectedEdge["nettle-netkit", "directory"], DirectedEdge["nettle-netkit", "filepath"], DirectedEdge["nettle-netkit", "mtl"], DirectedEdge["nettle-netkit", "nettle-openflow"], DirectedEdge["nettle-netkit", "unix"], DirectedEdge["nettle-openflow", "openflow"], DirectedEdge["nettle-openflow", "array"], DirectedEdge["nettle-openflow", "base"], DirectedEdge["nettle-openflow", "bimap"], DirectedEdge["nettle-openflow", "binary"], DirectedEdge["nettle-openflow", "binary-strict"], DirectedEdge["nettle-openflow", "bytestring"], DirectedEdge["nettle-openflow", "containers"], DirectedEdge["nettle-openflow", "HList"], DirectedEdge["nettle-openflow", "mtl"], DirectedEdge["nettle-openflow", "network"], DirectedEdge["nettle-openflow", "parsec"], DirectedEdge["nettle-openflow", "syb"], DirectedEdge["netwire", "base"], DirectedEdge["netwire", "containers"], DirectedEdge["netwire", "deepseq"], DirectedEdge["netwire", "netwire"], DirectedEdge["netwire", "parallel"], DirectedEdge["netwire", "profunctors"], DirectedEdge["netwire", "random"], DirectedEdge["netwire", "semigroups"], DirectedEdge["netwire", "time"], DirectedEdge["netwire", "transformers"], DirectedEdge["netwire-input", "base"], DirectedEdge["netwire-input", "netwire"], DirectedEdge["netwire-input-glfw", "array"], DirectedEdge["netwire-input-glfw", "base"], DirectedEdge["netwire-input-glfw", "bytestring"], DirectedEdge["netwire-input-glfw", "containers"], DirectedEdge["netwire-input-glfw", "directory"], DirectedEdge["netwire-input-glfw", "filepath"], DirectedEdge["netwire-input-glfw", "GLFW-b"], DirectedEdge["netwire-input-glfw", "mtl"], DirectedEdge["netwire-input-glfw", "netwire"], DirectedEdge["netwire-input-glfw", "netwire-input"], DirectedEdge["netwire-input-glfw", "netwire-input-glfw"], DirectedEdge["netwire-input-glfw", "OpenGL"], DirectedEdge["netwire-input-glfw", "stm"], DirectedEdge["netwire-input-glfw", "transformers"], DirectedEdge["network", "base"], DirectedEdge["network", "bytestring"], DirectedEdge["network", "unix"], DirectedEdge["network-address", "base"], DirectedEdge["network-address", "Cabal"], DirectedEdge["network-address", "criterion"], DirectedEdge["network-anonymous-i2p", "attoparsec"], DirectedEdge["network-anonymous-i2p", "base"], DirectedEdge["network-anonymous-i2p", "bytestring"], DirectedEdge["network-anonymous-i2p", "exceptions"], DirectedEdge["network-anonymous-i2p", "mtl"], DirectedEdge["network-anonymous-i2p", "network"], DirectedEdge["network-anonymous-i2p", "network-attoparsec"], DirectedEdge["network-anonymous-i2p", "network-simple"], DirectedEdge["network-anonymous-i2p", "text"], DirectedEdge["network-anonymous-i2p", "transformers"], DirectedEdge["network-anonymous-i2p", "uuid"], DirectedEdge["network-anonymous-tor", "attoparsec"], DirectedEdge["network-anonymous-tor", "base"], DirectedEdge["network-anonymous-tor", "base32string"], DirectedEdge["network-anonymous-tor", "bytestring"], DirectedEdge["network-anonymous-tor", "exceptions"], DirectedEdge["network-anonymous-tor", "hexstring"], DirectedEdge["network-anonymous-tor", "network"], DirectedEdge["network-anonymous-tor", "network-anonymous-tor"], DirectedEdge["network-anonymous-tor", "network-attoparsec"], DirectedEdge["network-anonymous-tor", "network-simple"], DirectedEdge["network-anonymous-tor", "socks"], DirectedEdge["network-anonymous-tor", "splice"], DirectedEdge["network-anonymous-tor", "text"], DirectedEdge["network-anonymous-tor", "transformers"], DirectedEdge["network-api-support", "aeson"], DirectedEdge["network-api-support", "attoparsec"], DirectedEdge["network-api-support", "base"], DirectedEdge["network-api-support", "bytestring"], DirectedEdge["network-api-support", "case-insensitive"], DirectedEdge["network-api-support", "http-client"], DirectedEdge["network-api-support", "http-client-tls"], DirectedEdge["network-api-support", "http-types"], DirectedEdge["network-api-support", "text"], DirectedEdge["network-api-support", "time"], DirectedEdge["network-api-support", "tls"], DirectedEdge["network-attoparsec", "attoparsec"], DirectedEdge["network-attoparsec", "base"], DirectedEdge["network-attoparsec", "bytestring"], DirectedEdge["network-attoparsec", "enclosed-exceptions"], DirectedEdge["network-attoparsec", "exceptions"], DirectedEdge["network-attoparsec", "lifted-base"], DirectedEdge["network-attoparsec", "monad-control"], DirectedEdge["network-attoparsec", "mtl"], DirectedEdge["network-attoparsec", "network"], DirectedEdge["network-attoparsec", "transformers"], DirectedEdge["network-bitcoin", "aeson"], DirectedEdge["network-bitcoin", "attoparsec"], DirectedEdge["network-bitcoin", "base"], DirectedEdge["network-bitcoin", "bytestring"], DirectedEdge["network-bitcoin", "cookie"], DirectedEdge["network-bitcoin", "HTTP"], DirectedEdge["network-bitcoin", "http-client"], DirectedEdge["network-bitcoin", "http-types"], DirectedEdge["network-bitcoin", "network"], DirectedEdge["network-bitcoin", "network-bitcoin"], DirectedEdge["network-bitcoin", "QuickCheck"], DirectedEdge["network-bitcoin", "text"], DirectedEdge["network-bitcoin", "time"], DirectedEdge["network-bitcoin", "unordered-containers"], DirectedEdge["network-bitcoin", "vector"], DirectedEdge["network-builder", "aeson"], DirectedEdge["network-builder", "base"], DirectedEdge["network-builder", "bytestring"], DirectedEdge["network-builder", "network-builder"], DirectedEdge["network-builder", "optparse-applicative"], DirectedEdge["network-builder", "shelly"], DirectedEdge["network-builder", "text"], DirectedEdge["network-builder", "yaml"], DirectedEdge["network-bytestring", "network"], DirectedEdge["network-bytestring", "base"], DirectedEdge["network-bytestring", "bytestring"], DirectedEdge["network-bytestring", "network"], DirectedEdge["network-bytestring", "unix"], DirectedEdge["network-carbon", "base"], DirectedEdge["network-carbon", "bytestring"], DirectedEdge["network-carbon", "network"], DirectedEdge["network-carbon", "text"], DirectedEdge["network-carbon", "time"], DirectedEdge["network-carbon", "vector"], DirectedEdge["network-conduit", "conduit-extra"], DirectedEdge["network-conduit", "base"], DirectedEdge["network-conduit", "conduit"], DirectedEdge["network-conduit-tls", "base"], DirectedEdge["network-conduit-tls", "bytestring"], DirectedEdge["network-conduit-tls", "conduit"], DirectedEdge["network-conduit-tls", "conduit-extra"], DirectedEdge["network-conduit-tls", "connection"], DirectedEdge["network-conduit-tls", "cprng-aes"], DirectedEdge["network-conduit-tls", "data-default"], DirectedEdge["network-conduit-tls", "monad-control"], DirectedEdge["network-conduit-tls", "network"], DirectedEdge["network-conduit-tls", "streaming-commons"], DirectedEdge["network-conduit-tls", "tls"], DirectedEdge["network-conduit-tls", "transformers"], DirectedEdge["network-conduit-tls", "transformers-base"], DirectedEdge["network-connection", "base"], DirectedEdge["network-connection", "bytestring"], DirectedEdge["network-connection", "containers"], DirectedEdge["network-connection", "network"], DirectedEdge["network-connection", "network-bytestring"], DirectedEdge["network-connection", "stm"], DirectedEdge["network-data", "base"], DirectedEdge["network-data", "bytestring"], DirectedEdge["network-data", "cereal"], DirectedEdge["network-data", "pretty"], DirectedEdge["network-dbus", "base"], DirectedEdge["network-dbus", "binary"], DirectedEdge["network-dbus", "bytestring"], DirectedEdge["network-dbus", "containers"], DirectedEdge["network-dbus", "mtl"], DirectedEdge["network-dbus", "network"], DirectedEdge["network-dbus", "parsec"], DirectedEdge["network-dbus", "unix"], DirectedEdge["network-dbus", "utf8-string"], DirectedEdge["network-dns", "base"], DirectedEdge["network-dns", "binary"], DirectedEdge["network-dns", "bytestring"], DirectedEdge["network-dns", "cereal"], DirectedEdge["network-dns", "containers"], DirectedEdge["network-dns", "data-textual"], DirectedEdge["network-dns", "hashable"], DirectedEdge["network-dns", "network-ip"], DirectedEdge["network-dns", "parsers"], DirectedEdge["network-dns", "tagged"], DirectedEdge["network-dns", "text-printer"], DirectedEdge["network-enumerator", "base"], DirectedEdge["network-enumerator", "bytestring"], DirectedEdge["network-enumerator", "enumerator"], DirectedEdge["network-enumerator", "network"], DirectedEdge["network-enumerator", "network-bytestring"], DirectedEdge["network-enumerator", "transformers"], DirectedEdge["network-fancy", "base"], DirectedEdge["network-fancy", "bytestring"], DirectedEdge["network-hans", "base"], DirectedEdge["network-hans", "bytestring"], DirectedEdge["network-hans", "hans"], DirectedEdge["network-hans", "parsec"], DirectedEdge["network-house", "array"], DirectedEdge["network-house", "base"], DirectedEdge["network-house", "containers"], DirectedEdge["network-house", "mtl"], DirectedEdge["network-info", "base"], DirectedEdge["network-interfacerequest", "base"], DirectedEdge["network-interfacerequest", "bytestring"], DirectedEdge["network-interfacerequest", "ioctl"], DirectedEdge["network-interfacerequest", "network"], DirectedEdge["network-ip", "base"], DirectedEdge["network-ip", "binary"], DirectedEdge["network-ip", "cereal"], DirectedEdge["network-ip", "data-default-class"], DirectedEdge["network-ip", "data-dword"], DirectedEdge["network-ip", "data-endian"], DirectedEdge["network-ip", "data-textual"], DirectedEdge["network-ip", "hashable"], DirectedEdge["network-ip", "parsers"], DirectedEdge["network-ip", "text-printer"], DirectedEdge["network-ip", "type-hint"], DirectedEdge["network-metrics", "base"], DirectedEdge["network-metrics", "binary"], DirectedEdge["network-metrics", "bytestring"], DirectedEdge["network-metrics", "data-default"], DirectedEdge["network-metrics", "network"], DirectedEdge["network-metrics", "random"], DirectedEdge["network-metrics", "time"], DirectedEdge["network-minihttp", "base"], DirectedEdge["network-minihttp", "binary"], DirectedEdge["network-minihttp", "binary-strict"], DirectedEdge["network-minihttp", "bytestring"], DirectedEdge["network-minihttp", "containers"], DirectedEdge["network-minihttp", "filepath"], DirectedEdge["network-minihttp", "HsOpenSSL"], DirectedEdge["network-minihttp", "mtl"], DirectedEdge["network-minihttp", "network"], DirectedEdge["network-minihttp", "network-bytestring"], DirectedEdge["network-minihttp", "network-connection"], DirectedEdge["network-minihttp", "network-dns"], DirectedEdge["network-minihttp", "old-locale"], DirectedEdge["network-minihttp", "stm"], DirectedEdge["network-minihttp", "tagsoup"], DirectedEdge["network-minihttp", "time"], DirectedEdge["network-minihttp", "unix"], DirectedEdge["network-msg", "base"], DirectedEdge["network-msg", "binary"], DirectedEdge["network-msg", "bytestring"], DirectedEdge["network-msg", "network"], DirectedEdge["network-msg", "unix"], DirectedEdge["network-multicast", "base"], DirectedEdge["network-multicast", "network"], DirectedEdge["network-netpacket", "base"], DirectedEdge["network-netpacket", "bytestring"], DirectedEdge["network-netpacket", "foreign-storable-asymmetric"], DirectedEdge["network-netpacket", "ioctl"], DirectedEdge["network-netpacket", "network"], DirectedEdge["network-netpacket", "network-interfacerequest"], DirectedEdge["network-pgi", "attoparsec"], DirectedEdge["network-pgi", "attoparsec-enumerator"], DirectedEdge["network-pgi", "base"], DirectedEdge["network-pgi", "bytestring"], DirectedEdge["network-pgi", "enumerator"], DirectedEdge["network-pgi", "tnet"], DirectedEdge["network-protocol-xmpp", "base"], DirectedEdge["network-protocol-xmpp", "bytestring"], DirectedEdge["network-protocol-xmpp", "gnuidn"], DirectedEdge["network-protocol-xmpp", "gnutls"], DirectedEdge["network-protocol-xmpp", "gsasl"], DirectedEdge["network-protocol-xmpp", "libxml-sax"], DirectedEdge["network-protocol-xmpp", "monads-tf"], DirectedEdge["network-protocol-xmpp", "network"], DirectedEdge["network-protocol-xmpp", "text"], DirectedEdge["network-protocol-xmpp", "transformers"], DirectedEdge["network-protocol-xmpp", "xml-types"], DirectedEdge["network-rpca", "array"], DirectedEdge["network-rpca", "base"], DirectedEdge["network-rpca", "binary"], DirectedEdge["network-rpca", "binary-strict"], DirectedEdge["network-rpca", "bytestring"], DirectedEdge["network-rpca", "codec-libevent"], DirectedEdge["network-rpca", "containers"], DirectedEdge["network-rpca", "control-timeout"], DirectedEdge["network-rpca", "network"], DirectedEdge["network-rpca", "network-bytestring"], DirectedEdge["network-rpca", "stm"], DirectedEdge["network-server", "base"], DirectedEdge["network-server", "network"], DirectedEdge["network-server", "unix"], DirectedEdge["network-service", "base"], DirectedEdge["network-service", "base64-bytestring"], DirectedEdge["network-service", "bytestring"], DirectedEdge["network-service", "hscolour"], DirectedEdge["network-service", "network"], DirectedEdge["network-service", "network-simple"], DirectedEdge["network-simple", "base"], DirectedEdge["network-simple", "bytestring"], DirectedEdge["network-simple", "exceptions"], DirectedEdge["network-simple", "network"], DirectedEdge["network-simple", "transformers"], DirectedEdge["network-simple-sockaddr", "base"], DirectedEdge["network-simple-sockaddr", "bytestring"], DirectedEdge["network-simple-sockaddr", "directory"], DirectedEdge["network-simple-sockaddr", "exceptions"], DirectedEdge["network-simple-sockaddr", "network"], DirectedEdge["network-simple-sockaddr", "transformers"], DirectedEdge["network-simple-tls", "base"], DirectedEdge["network-simple-tls", "bytestring"], DirectedEdge["network-simple-tls", "certificate"], DirectedEdge["network-simple-tls", "cprng-aes"], DirectedEdge["network-simple-tls", "exceptions"], DirectedEdge["network-simple-tls", "network"], DirectedEdge["network-simple-tls", "network-simple"], DirectedEdge["network-simple-tls", "tls"], DirectedEdge["network-simple-tls", "tls-extra"], DirectedEdge["network-simple-tls", "transformers"], DirectedEdge["network-socket-options", "base"], DirectedEdge["network-socket-options", "network"], DirectedEdge["network-stream", "base"], DirectedEdge["network-stream", "binary"], DirectedEdge["network-stream", "bytestring"], DirectedEdge["network-stream", "cereal"], DirectedEdge["network-stream", "enumerator"], DirectedEdge["network-stream", "network"], DirectedEdge["network-stream", "stm"], DirectedEdge["network-stream", "text"], DirectedEdge["network-stream", "transformers"], DirectedEdge["network-topic-models", "base"], DirectedEdge["network-topic-models", "bayes-stack"], DirectedEdge["network-topic-models", "bimap"], DirectedEdge["network-topic-models", "bytestring"], DirectedEdge["network-topic-models", "cereal"], DirectedEdge["network-topic-models", "containers"], DirectedEdge["network-topic-models", "deepseq"], DirectedEdge["network-topic-models", "directory"], DirectedEdge["network-topic-models", "filepath"], DirectedEdge["network-topic-models", "logfloat"], DirectedEdge["network-topic-models", "mwc-random"], DirectedEdge["network-topic-models", "optparse-applicative"], DirectedEdge["network-topic-models", "random-fu"], DirectedEdge["network-topic-models", "statistics"], DirectedEdge["network-topic-models", "stm"], DirectedEdge["network-topic-models", "text"], DirectedEdge["network-topic-models", "transformers"], DirectedEdge["network-topic-models", "vector"], DirectedEdge["network-transport", "base"], DirectedEdge["network-transport", "binary"], DirectedEdge["network-transport", "bytestring"], DirectedEdge["network-transport", "deepseq"], DirectedEdge["network-transport", "ghc-prim"], DirectedEdge["network-transport", "hashable"], DirectedEdge["network-transport", "transformers"], DirectedEdge["network-transport-amqp", "amqp"], DirectedEdge["network-transport-amqp", "async"], DirectedEdge["network-transport-amqp", "base"], DirectedEdge["network-transport-amqp", "bytestring"], DirectedEdge["network-transport-amqp", "cereal"], DirectedEdge["network-transport-amqp", "containers"], DirectedEdge["network-transport-amqp", "exceptions"], DirectedEdge["network-transport-amqp", "ghc-prim"], DirectedEdge["network-transport-amqp", "lens-family"], DirectedEdge["network-transport-amqp", "lens-family-th"], DirectedEdge["network-transport-amqp", "network-transport"], DirectedEdge["network-transport-amqp", "stm"], DirectedEdge["network-transport-amqp", "stm-chans"], DirectedEdge["network-transport-amqp", "string-conv"], DirectedEdge["network-transport-amqp", "text"], DirectedEdge["network-transport-amqp", "uuid"], DirectedEdge["network-transport-composed", "base"], DirectedEdge["network-transport-composed", "bytestring"], DirectedEdge["network-transport-composed", "network-transport"], DirectedEdge["network-transport-inmemory", "base"], DirectedEdge["network-transport-inmemory", "bytestring"], DirectedEdge["network-transport-inmemory", "containers"], DirectedEdge["network-transport-inmemory", "data-accessor"], DirectedEdge["network-transport-inmemory", "network-transport"], DirectedEdge["network-transport-inmemory", "stm"], DirectedEdge["network-transport-tcp", "base"], DirectedEdge["network-transport-tcp", "bytestring"], DirectedEdge["network-transport-tcp", "containers"], DirectedEdge["network-transport-tcp", "data-accessor"], DirectedEdge["network-transport-tcp", "network"], DirectedEdge["network-transport-tcp", "network-transport"], DirectedEdge["network-transport-tests", "ansi-terminal"], DirectedEdge["network-transport-tests", "base"], DirectedEdge["network-transport-tests", "bytestring"], DirectedEdge["network-transport-tests", "containers"], DirectedEdge["network-transport-tests", "mtl"], DirectedEdge["network-transport-tests", "network-transport"], DirectedEdge["network-transport-tests", "random"], DirectedEdge["network-transport-zeromq", "async"], DirectedEdge["network-transport-zeromq", "base"], DirectedEdge["network-transport-zeromq", "binary"], DirectedEdge["network-transport-zeromq", "bytestring"], DirectedEdge["network-transport-zeromq", "containers"], DirectedEdge["network-transport-zeromq", "criterion"], DirectedEdge["network-transport-zeromq", "data-accessor"], DirectedEdge["network-transport-zeromq", "distributed-process"], DirectedEdge["network-transport-zeromq", "exceptions"], DirectedEdge["network-transport-zeromq", "network-transport"], DirectedEdge["network-transport-zeromq", "network-transport-zeromq"], DirectedEdge["network-transport-zeromq", "random"], DirectedEdge["network-transport-zeromq", "semigroups"], DirectedEdge["network-transport-zeromq", "stm"], DirectedEdge["network-transport-zeromq", "stm-chans"], DirectedEdge["network-transport-zeromq", "transformers"], DirectedEdge["network-transport-zeromq", "zeromq4-haskell"], DirectedEdge["network-uri", "base"], DirectedEdge["network-uri", "deepseq"], DirectedEdge["network-uri", "parsec"], DirectedEdge["network-uri-static", "base"], DirectedEdge["network-uri-static", "network-uri"], DirectedEdge["network-uri-static", "template-haskell"], DirectedEdge["network-wai-router", "base"], DirectedEdge["network-wai-router", "wai"], DirectedEdge["network-websocket", "base"], DirectedEdge["network-websocket", "network"], DirectedEdge["network-websocket", "webserver"], DirectedEdge["networked-game", "base"], DirectedEdge["networked-game", "binary"], DirectedEdge["networked-game", "bytestring"], DirectedEdge["networked-game", "containers"], DirectedEdge["networked-game", "network"], DirectedEdge["networked-game", "time"], DirectedEdge["networked-game", "transformers"], DirectedEdge["newports", "base"], DirectedEdge["newports", "directory"], DirectedEdge["newports", "old-time"], DirectedEdge["newsynth", "base"], DirectedEdge["newsynth", "containers"], DirectedEdge["newsynth", "fixedprec"], DirectedEdge["newsynth", "newsynth"], DirectedEdge["newsynth", "random"], DirectedEdge["newsynth", "superdoc"], DirectedEdge["newsynth", "time"], DirectedEdge["newt", "array"], DirectedEdge["newt", "base"], DirectedEdge["newt", "bytestring"], DirectedEdge["newt", "cmdargs"], DirectedEdge["newt", "containers"], DirectedEdge["newt", "directory"], DirectedEdge["newt", "filemanip"], DirectedEdge["newt", "filepath"], DirectedEdge["newt", "HUnit"], DirectedEdge["newt", "mtl"], DirectedEdge["newt", "newt"], DirectedEdge["newt", "process"], DirectedEdge["newt", "QuickCheck"], DirectedEdge["newt", "safe"], DirectedEdge["newt", "test-framework"], DirectedEdge["newt", "test-framework-hunit"], DirectedEdge["newt", "text"], DirectedEdge["newt", "Unixutils"], DirectedEdge["newt", "uuid"], DirectedEdge["newtype", "base"], DirectedEdge["newtype-deriving", "base"], DirectedEdge["newtype-deriving", "base-prelude"], DirectedEdge["newtype-deriving", "monad-control"], DirectedEdge["newtype-deriving", "template-haskell"], DirectedEdge["newtype-deriving", "transformers"], DirectedEdge["newtype-deriving", "transformers-base"], DirectedEdge["newtype-generics", "base"], DirectedEdge["newtype-th", "base"], DirectedEdge["newtype-th", "haskell-src-meta"], DirectedEdge["newtype-th", "newtype"], DirectedEdge["newtype-th", "syb"], DirectedEdge["newtype-th", "template-haskell"], DirectedEdge["newtyper", "base"], DirectedEdge["newtyper", "Kleislify"], DirectedEdge["newtyper", "newtype"], DirectedEdge["nextstep-plist", "base"], DirectedEdge["nextstep-plist", "parsec"], DirectedEdge["nextstep-plist", "pretty"], DirectedEdge["nextstep-plist", "QuickCheck"], DirectedEdge["nf", "base"], DirectedEdge["nf", "deepseq"], DirectedEdge["ngrams-loader", "attoparsec"], DirectedEdge["ngrams-loader", "base"], DirectedEdge["ngrams-loader", "machines"], DirectedEdge["ngrams-loader", "mtl"], DirectedEdge["ngrams-loader", "ngrams-loader"], DirectedEdge["ngrams-loader", "parseargs"], DirectedEdge["ngrams-loader", "resourcet"], DirectedEdge["ngrams-loader", "sqlite-simple"], DirectedEdge["ngrams-loader", "text"], DirectedEdge["ngx-export", "base"], DirectedEdge["ngx-export", "bytestring"], DirectedEdge["ngx-export", "template-haskell"], DirectedEdge["niagra", "base"], DirectedEdge["niagra", "ghc-prim"], DirectedEdge["niagra", "mtl"], DirectedEdge["niagra", "primitive"], DirectedEdge["niagra", "text"], DirectedEdge["niagra", "transformers"], DirectedEdge["nibblestring", "ansi-wl-pprint"], DirectedEdge["nibblestring", "base"], DirectedEdge["nibblestring", "base16-bytestring"], DirectedEdge["nibblestring", "bytestring"], DirectedEdge["nicify", "base"], DirectedEdge["nicify", "nicify-lib"], DirectedEdge["nicify-lib", "base"], DirectedEdge["nicify-lib", "parsec"], DirectedEdge["nicify-lib", "transformers"], DirectedEdge["nicovideo-translator", "base"], DirectedEdge["nicovideo-translator", "bytestring"], DirectedEdge["nicovideo-translator", "case-insensitive"], DirectedEdge["nicovideo-translator", "cmdargs"], DirectedEdge["nicovideo-translator", "containers"], DirectedEdge["nicovideo-translator", "dns"], DirectedEdge["nicovideo-translator", "http-client"], DirectedEdge["nicovideo-translator", "http-types"], DirectedEdge["nicovideo-translator", "lens"], DirectedEdge["nicovideo-translator", "naver-translate"], DirectedEdge["nicovideo-translator", "nicovideo-translator"], DirectedEdge["nicovideo-translator", "setlocale"], DirectedEdge["nicovideo-translator", "text"], DirectedEdge["nicovideo-translator", "text-format"], DirectedEdge["nicovideo-translator", "wai"], DirectedEdge["nicovideo-translator", "warp"], DirectedEdge["nicovideo-translator", "wreq"], DirectedEdge["nicovideo-translator", "xml-conduit"], DirectedEdge["nikepub", "base"], DirectedEdge["nikepub", "containers"], DirectedEdge["nikepub", "filepath"], DirectedEdge["nikepub", "GoogleChart"], DirectedEdge["nikepub", "haxr"], DirectedEdge["nikepub", "hs-twitter"], DirectedEdge["nikepub", "HStringTemplate"], DirectedEdge["nikepub", "HTTP"], DirectedEdge["nikepub", "hxt"], DirectedEdge["nikepub", "json"], DirectedEdge["nikepub", "network"], DirectedEdge["nikepub", "old-locale"], DirectedEdge["nikepub", "old-time"], DirectedEdge["nikepub", "regex-compat"], DirectedEdge["nikepub", "regex-posix"], DirectedEdge["nikepub", "syb"], DirectedEdge["nikepub", "time"], DirectedEdge["nimber", "arithmoi"], DirectedEdge["nimber", "base"], DirectedEdge["nist-beacon", "base"], DirectedEdge["nist-beacon", "bytestring"], DirectedEdge["nist-beacon", "http-conduit"], DirectedEdge["nist-beacon", "xml"], DirectedEdge["nitro", "base"], DirectedEdge["nitro", "bytestring"], DirectedEdge["nix-eval", "base"], DirectedEdge["nix-eval", "process"], DirectedEdge["nix-paths", "base"], DirectedEdge["nix-paths", "process"], DirectedEdge["nixfromnpm", "aeson"], DirectedEdge["nixfromnpm", "base"], DirectedEdge["nixfromnpm", "bytestring"], DirectedEdge["nixfromnpm", "classy-prelude"], DirectedEdge["nixfromnpm", "containers"], DirectedEdge["nixfromnpm", "data-default"], DirectedEdge["nixfromnpm", "directory"], DirectedEdge["nixfromnpm", "error-list"], DirectedEdge["nixfromnpm", "filepath"], DirectedEdge["nixfromnpm", "hnix"], DirectedEdge["nixfromnpm", "MissingH"], DirectedEdge["nixfromnpm", "mtl"], DirectedEdge["nixfromnpm", "network-uri"], DirectedEdge["nixfromnpm", "nixfromnpm"], DirectedEdge["nixfromnpm", "optparse-applicative"], DirectedEdge["nixfromnpm", "parsec"], DirectedEdge["nixfromnpm", "shelly"], DirectedEdge["nixfromnpm", "system-filepath"], DirectedEdge["nixfromnpm", "text"], DirectedEdge["nixfromnpm", "text-render"], DirectedEdge["nixfromnpm", "unordered-containers"], DirectedEdge["nixos-types", "language-nix"], DirectedEdge["nkjp", "base"], DirectedEdge["nkjp", "bytestring"], DirectedEdge["nkjp", "containers"], DirectedEdge["nkjp", "data-named"], DirectedEdge["nkjp", "filepath"], DirectedEdge["nkjp", "polysoup"], DirectedEdge["nkjp", "tar"], DirectedEdge["nkjp", "text"], DirectedEdge["nkjp", "zlib"], DirectedEdge["nlp-scores", "base"], DirectedEdge["nlp-scores", "containers"], DirectedEdge["nlp-scores", "strict"], DirectedEdge["nlp-scores-scripts", "base"], DirectedEdge["nlp-scores-scripts", "containers"], DirectedEdge["nlp-scores-scripts", "nlp-scores"], DirectedEdge["nlp-scores-scripts", "split"], DirectedEdge["nlp-scores-scripts", "text"], DirectedEdge["nm", "base"], DirectedEdge["nm", "nm"], DirectedEdge["nm", "vector"], DirectedEdge["nme", "base"], DirectedEdge["nme", "bytestring"], DirectedEdge["nme", "utf8-string"], DirectedEdge["nntp", "base"], DirectedEdge["nntp", "bytestring"], DirectedEdge["nntp", "monad-loops"], DirectedEdge["nntp", "mtl"], DirectedEdge["nntp", "network"], DirectedEdge["nntp", "old-locale"], DirectedEdge["nntp", "parsec"], DirectedEdge["nntp", "time"], DirectedEdge["no-buffering-workaround", "base"], DirectedEdge["no-role-annots", "base"], DirectedEdge["no-role-annots", "template-haskell"], DirectedEdge["nofib-analyse", "array"], DirectedEdge["nofib-analyse", "base"], DirectedEdge["nofib-analyse", "containers"], DirectedEdge["nofib-analyse", "regex-compat"], DirectedEdge["nofib-analyze", "nofib-analyse"], DirectedEdge["nofib-analyze", "array"], DirectedEdge["nofib-analyze", "base"], DirectedEdge["nofib-analyze", "containers"], DirectedEdge["nofib-analyze", "regex-compat"], DirectedEdge["noise", "base"], DirectedEdge["noise", "blaze-markup"], DirectedEdge["noise", "blaze-svg"], DirectedEdge["noise", "bytestring"], DirectedEdge["noise", "containers"], DirectedEdge["noise", "cryptohash"], DirectedEdge["noise", "network"], DirectedEdge["noise", "noise"], DirectedEdge["noise", "parsec"], DirectedEdge["non-empty", "base"], DirectedEdge["non-empty", "containers"], DirectedEdge["non-empty", "QuickCheck"], DirectedEdge["non-empty", "utility-ht"], DirectedEdge["non-negative", "base"], DirectedEdge["non-negative", "QuickCheck"], DirectedEdge["non-negative", "utility-ht"], DirectedEdge["nonce", "base"], DirectedEdge["nonce", "base64-bytestring"], DirectedEdge["nonce", "bytestring"], DirectedEdge["nonce", "cprng-aes"], DirectedEdge["nonce", "crypto-random"], DirectedEdge["nonce", "text"], DirectedEdge["nonce", "transformers"], DirectedEdge["nondeterminism", "base"], DirectedEdge["nondeterminism", "containers"], DirectedEdge["nondeterminism", "mtl"], DirectedEdge["nonempty-alternative", "base"], DirectedEdge["nonempty-alternative", "comonad"], DirectedEdge["nonempty-alternative", "semigroups"], DirectedEdge["nonfree", "base"], DirectedEdge["nonlinear-optimization", "base"], DirectedEdge["nonlinear-optimization", "primitive"], DirectedEdge["nonlinear-optimization", "vector"], DirectedEdge["nonlinear-optimization-ad", "ad"], DirectedEdge["nonlinear-optimization-ad", "base"], DirectedEdge["nonlinear-optimization-ad", "csv"], DirectedEdge["nonlinear-optimization-ad", "nonlinear-optimization"], DirectedEdge["nonlinear-optimization-ad", "nonlinear-optimization-ad"], DirectedEdge["nonlinear-optimization-ad", "primitive"], DirectedEdge["nonlinear-optimization-ad", "reflection"], DirectedEdge["nonlinear-optimization-ad", "vector"], DirectedEdge["noodle", "base"], DirectedEdge["noodle", "directory"], DirectedEdge["noodle", "filepath"], DirectedEdge["noodle", "noodle"], DirectedEdge["normaldistribution", "base"], DirectedEdge["normaldistribution", "random"], DirectedEdge["not-gloss", "base"], DirectedEdge["not-gloss", "binary"], DirectedEdge["not-gloss", "bmp"], DirectedEdge["not-gloss", "bytestring"], DirectedEdge["not-gloss", "cereal"], DirectedEdge["not-gloss", "GLUT"], DirectedEdge["not-gloss", "OpenGL"], DirectedEdge["not-gloss", "OpenGLRaw"], DirectedEdge["not-gloss", "spatial-math"], DirectedEdge["not-gloss", "time"], DirectedEdge["not-gloss", "vector"], DirectedEdge["not-gloss", "vector-binary-instances"], DirectedEdge["not-gloss-examples", "base"], DirectedEdge["not-gloss-examples", "containers"], DirectedEdge["not-gloss-examples", "GLUT"], DirectedEdge["not-gloss-examples", "linear"], DirectedEdge["not-gloss-examples", "not-gloss"], DirectedEdge["not-gloss-examples", "spatial-math"], DirectedEdge["not-in-base", "base"], DirectedEdge["notcpp", "base"], DirectedEdge["notcpp", "template-haskell"], DirectedEdge["notmuch-haskell", "base"], DirectedEdge["notmuch-haskell", "containers"], DirectedEdge["notmuch-haskell", "filepath"], DirectedEdge["notmuch-haskell", "old-locale"], DirectedEdge["notmuch-haskell", "parseargs"], DirectedEdge["notmuch-haskell", "time"], DirectedEdge["notmuch-web", "aeson"], DirectedEdge["notmuch-web", "attoparsec"], DirectedEdge["notmuch-web", "attoparsec-conduit"], DirectedEdge["notmuch-web", "base"], DirectedEdge["notmuch-web", "blaze-builder"], DirectedEdge["notmuch-web", "blaze-html"], DirectedEdge["notmuch-web", "blaze-markup"], DirectedEdge["notmuch-web", "bytestring"], DirectedEdge["notmuch-web", "case-insensitive"], DirectedEdge["notmuch-web", "conduit"], DirectedEdge["notmuch-web", "containers"], DirectedEdge["notmuch-web", "data-default"], DirectedEdge["notmuch-web", "directory"], DirectedEdge["notmuch-web", "email-validate"], DirectedEdge["notmuch-web", "filepath"], DirectedEdge["notmuch-web", "hamlet"], DirectedEdge["notmuch-web", "hashable"], DirectedEdge["notmuch-web", "hjsmin"], DirectedEdge["notmuch-web", "http-conduit"], DirectedEdge["notmuch-web", "http-types"], DirectedEdge["notmuch-web", "lifted-base"], DirectedEdge["notmuch-web", "markdown"], DirectedEdge["notmuch-web", "mime-mail"], DirectedEdge["notmuch-web", "network"], DirectedEdge["notmuch-web", "notmuch-web"], DirectedEdge["notmuch-web", "old-locale"], DirectedEdge["notmuch-web", "process"], DirectedEdge["notmuch-web", "process-conduit"], DirectedEdge["notmuch-web", "pwstore-fast"], DirectedEdge["notmuch-web", "random"], DirectedEdge["notmuch-web", "tagsoup"], DirectedEdge["notmuch-web", "template-haskell"], DirectedEdge["notmuch-web", "text"], DirectedEdge["notmuch-web", "text-icu"], DirectedEdge["notmuch-web", "time"], DirectedEdge["notmuch-web", "transformers"], DirectedEdge["notmuch-web", "unordered-containers"], DirectedEdge["notmuch-web", "vector"], DirectedEdge["notmuch-web", "wai"], DirectedEdge["notmuch-web", "wai-extra"], DirectedEdge["notmuch-web", "warp"], DirectedEdge["notmuch-web", "xss-sanitize"], DirectedEdge["notmuch-web", "yaml"], DirectedEdge["notmuch-web", "yesod"], DirectedEdge["notmuch-web", "yesod-auth"], DirectedEdge["notmuch-web", "yesod-static"], DirectedEdge["notzero", "base"], DirectedEdge["notzero", "bifunctors"], DirectedEdge["notzero", "lens"], DirectedEdge["notzero", "mtl"], DirectedEdge["notzero", "semigroupoids"], DirectedEdge["notzero", "semigroups"], DirectedEdge["notzero", "transformers"], DirectedEdge["np-extras", "base"], DirectedEdge["np-extras", "containers"], DirectedEdge["np-extras", "numeric-prelude"], DirectedEdge["np-extras", "primes"], DirectedEdge["np-linear", "base"], DirectedEdge["np-linear", "binary"], DirectedEdge["np-linear", "containers"], DirectedEdge["np-linear", "numeric-prelude"], DirectedEdge["np-linear", "reflection"], DirectedEdge["np-linear", "tagged"], DirectedEdge["nptools", "ansi-terminal"], DirectedEdge["nptools", "array"], DirectedEdge["nptools", "base"], DirectedEdge["nptools", "bytestring"], DirectedEdge["nptools", "colour"], DirectedEdge["nptools", "containers"], DirectedEdge["nptools", "HSH"], DirectedEdge["nptools", "old-locale"], DirectedEdge["nptools", "process"], DirectedEdge["nptools", "split"], DirectedEdge["nptools", "time"], DirectedEdge["nptools", "unix"], DirectedEdge["nsis", "base"], DirectedEdge["nsis", "transformers"], DirectedEdge["nsis", "uniplate"], DirectedEdge["nth-prime", "base"], DirectedEdge["nth-prime", "opentheory-prime"], DirectedEdge["nth-prime", "opentheory-primitive"], DirectedEdge["nthable", "base"], DirectedEdge["nthable", "type-level"], DirectedEdge["ntp-control", "base"], DirectedEdge["ntp-control", "bytestring"], DirectedEdge["ntp-control", "bytestring-lexing"], DirectedEdge["ntp-control", "cereal"], DirectedEdge["ntp-control", "network"], DirectedEdge["ntp-control", "old-locale"], DirectedEdge["ntp-control", "time"], DirectedEdge["null-canvas", "aeson"], DirectedEdge["null-canvas", "base"], DirectedEdge["null-canvas", "containers"], DirectedEdge["null-canvas", "filepath"], DirectedEdge["null-canvas", "scotty"], DirectedEdge["null-canvas", "split"], DirectedEdge["null-canvas", "stm"], DirectedEdge["null-canvas", "text"], DirectedEdge["null-canvas", "transformers"], DirectedEdge["null-canvas", "wai-extra"], DirectedEdge["null-canvas", "warp"], DirectedEdge["nullary", "base"], DirectedEdge["nullpipe", "base"], DirectedEdge["nullpipe", "bytestring"], DirectedEdge["nullpipe", "pipes"], DirectedEdge["number", "base"], DirectedEdge["number-length", "base"], DirectedEdge["number-length", "tagged"], DirectedEdge["numbering", "base"], DirectedEdge["numbering", "containers"], DirectedEdge["numbering", "vector"], DirectedEdge["numbers", "base"], DirectedEdge["numerals", "base"], DirectedEdge["numerals", "base-unicode-symbols"], DirectedEdge["numerals", "containers"], DirectedEdge["numerals", "containers-unicode-symbols"], DirectedEdge["numerals", "fingertree"], DirectedEdge["numerals", "integer-gmp"], DirectedEdge["numerals", "text"], DirectedEdge["numerals-base", "numerals"], DirectedEdge["numerals-base", "base"], DirectedEdge["numerals-base", "base-unicode-symbols"], DirectedEdge["numerals-base", "containers"], DirectedEdge["numerals-base", "containers-unicode-symbols"], DirectedEdge["numerals-base", "fingertree"], DirectedEdge["numeric-extras", "base"], DirectedEdge["numeric-limits", "base"], DirectedEdge["numeric-prelude", "array"], DirectedEdge["numeric-prelude", "base"], DirectedEdge["numeric-prelude", "containers"], DirectedEdge["numeric-prelude", "deepseq"], DirectedEdge["numeric-prelude", "gnuplot"], DirectedEdge["numeric-prelude", "HTam"], DirectedEdge["numeric-prelude", "non-negative"], DirectedEdge["numeric-prelude", "numeric-prelude"], DirectedEdge["numeric-prelude", "parsec"], DirectedEdge["numeric-prelude", "QuickCheck"], DirectedEdge["numeric-prelude", "random"], DirectedEdge["numeric-prelude", "storable-record"], DirectedEdge["numeric-prelude", "utility-ht"], DirectedEdge["numeric-qq", "base"], DirectedEdge["numeric-qq", "loch-th"], DirectedEdge["numeric-qq", "placeholders"], DirectedEdge["numeric-qq", "template-haskell"], DirectedEdge["numeric-quest", "array"], DirectedEdge["numeric-quest", "base"], DirectedEdge["numeric-ranges", "base"], DirectedEdge["numeric-tools", "base"], DirectedEdge["numeric-tools", "primitive"], DirectedEdge["numeric-tools", "vector"], DirectedEdge["numericpeano", "base"], DirectedEdge["numtype", "base"], DirectedEdge["numtype-dk", "base"], DirectedEdge["numtype-tf", "base"], DirectedEdge["nurbs", "base"], DirectedEdge["nurbs", "base-unicode-symbols"], DirectedEdge["nurbs", "lens"], DirectedEdge["nurbs", "linear"], DirectedEdge["nurbs", "mtl"], DirectedEdge["nvim-hs", "ansi-wl-pprint"], DirectedEdge["nvim-hs", "base"], DirectedEdge["nvim-hs", "bytestring"], DirectedEdge["nvim-hs", "cereal"], DirectedEdge["nvim-hs", "cereal-conduit"], DirectedEdge["nvim-hs", "conduit"], DirectedEdge["nvim-hs", "conduit-extra"], DirectedEdge["nvim-hs", "containers"], DirectedEdge["nvim-hs", "data-default"], DirectedEdge["nvim-hs", "directory"], DirectedEdge["nvim-hs", "dyre"], DirectedEdge["nvim-hs", "exceptions"], DirectedEdge["nvim-hs", "filepath"], DirectedEdge["nvim-hs", "foreign-store"], DirectedEdge["nvim-hs", "hslogger"], DirectedEdge["nvim-hs", "lifted-base"], DirectedEdge["nvim-hs", "messagepack"], DirectedEdge["nvim-hs", "monad-control"], DirectedEdge["nvim-hs", "mtl"], DirectedEdge["nvim-hs", "network"], DirectedEdge["nvim-hs", "nvim-hs"], DirectedEdge["nvim-hs", "optparse-applicative"], DirectedEdge["nvim-hs", "parsec"], DirectedEdge["nvim-hs", "process"], DirectedEdge["nvim-hs", "resourcet"], DirectedEdge["nvim-hs", "setenv"], DirectedEdge["nvim-hs", "stm"], DirectedEdge["nvim-hs", "streaming-commons"], DirectedEdge["nvim-hs", "template-haskell"], DirectedEdge["nvim-hs", "text"], DirectedEdge["nvim-hs", "time"], DirectedEdge["nvim-hs", "time-locale-compat"], DirectedEdge["nvim-hs", "transformers"], DirectedEdge["nvim-hs", "transformers-base"], DirectedEdge["nvim-hs", "utf8-string"], DirectedEdge["nvim-hs-contrib", "ansi-wl-pprint"], DirectedEdge["nvim-hs-contrib", "base"], DirectedEdge["nvim-hs-contrib", "bytestring"], DirectedEdge["nvim-hs-contrib", "data-default"], DirectedEdge["nvim-hs-contrib", "directory"], DirectedEdge["nvim-hs-contrib", "exceptions"], DirectedEdge["nvim-hs-contrib", "messagepack"], DirectedEdge["nvim-hs-contrib", "mtl"], DirectedEdge["nvim-hs-contrib", "nvim-hs"], DirectedEdge["nvim-hs-contrib", "parsec"], DirectedEdge["nvim-hs-contrib", "process"], DirectedEdge["nvim-hs-contrib", "resourcet"], DirectedEdge["nvim-hs-contrib", "setenv"], DirectedEdge["nvim-hs-contrib", "stm"], DirectedEdge["nvim-hs-contrib", "text"], DirectedEdge["nvim-hs-contrib", "time"], DirectedEdge["nvim-hs-contrib", "transformers"], DirectedEdge["nvim-hs-contrib", "transformers-base"], DirectedEdge["nvim-hs-contrib", "utf8-string"], DirectedEdge["nyan", "base"], DirectedEdge["nyan", "bytestring"], DirectedEdge["nyan", "mtl"], DirectedEdge["nyan", "ncurses"], DirectedEdge["nyan", "text"], DirectedEdge["nylas", "aeson"], DirectedEdge["nylas", "base"], DirectedEdge["nylas", "bytestring"], DirectedEdge["nylas", "lens"], DirectedEdge["nylas", "lens-aeson"], DirectedEdge["nylas", "pipes"], DirectedEdge["nylas", "pipes-aeson"], DirectedEdge["nylas", "pipes-bytestring"], DirectedEdge["nylas", "pipes-http"], DirectedEdge["nylas", "pipes-parse"], DirectedEdge["nylas", "text"], DirectedEdge["nylas", "time"], DirectedEdge["nylas", "wreq"], DirectedEdge["nymphaea", "base"], DirectedEdge["nymphaea", "cairo"], DirectedEdge["nymphaea", "containers"], DirectedEdge["nymphaea", "glade"], DirectedEdge["nymphaea", "glib"], DirectedEdge["nymphaea", "gtk"], DirectedEdge["nymphaea", "mtl"], DirectedEdge["nymphaea", "parsec"], DirectedEdge["nymphaea", "random"], DirectedEdge["oanda-rest-api", "aeson"], DirectedEdge["oanda-rest-api", "base"], DirectedEdge["oanda-rest-api", "bytestring"], DirectedEdge["oanda-rest-api", "containers"], DirectedEdge["oanda-rest-api", "Decimal"], DirectedEdge["oanda-rest-api", "lens"], DirectedEdge["oanda-rest-api", "old-locale"], DirectedEdge["oanda-rest-api", "scientific"], DirectedEdge["oanda-rest-api", "text"], DirectedEdge["oanda-rest-api", "time"], DirectedEdge["oanda-rest-api", "vector"], DirectedEdge["oanda-rest-api", "wreq"], DirectedEdge["oauthenticated", "aeson"], DirectedEdge["oauthenticated", "base"], DirectedEdge["oauthenticated", "base64-bytestring"], DirectedEdge["oauthenticated", "blaze-builder"], DirectedEdge["oauthenticated", "bytestring"], DirectedEdge["oauthenticated", "case-insensitive"], DirectedEdge["oauthenticated", "crypto-random"], DirectedEdge["oauthenticated", "cryptohash"], DirectedEdge["oauthenticated", "either"], DirectedEdge["oauthenticated", "exceptions"], DirectedEdge["oauthenticated", "http-client"], DirectedEdge["oauthenticated", "http-types"], DirectedEdge["oauthenticated", "mtl"], DirectedEdge["oauthenticated", "network"], DirectedEdge["oauthenticated", "network-uri"], DirectedEdge["oauthenticated", "text"], DirectedEdge["oauthenticated", "time"], DirectedEdge["oauthenticated", "transformers"], DirectedEdge["obdd", "array"], DirectedEdge["obdd", "base"], DirectedEdge["obdd", "containers"], DirectedEdge["obdd", "mtl"], DirectedEdge["obdd", "random"], DirectedEdge["oberon0", "array"], DirectedEdge["oberon0", "AspectAG"], DirectedEdge["oberon0", "base"], DirectedEdge["oberon0", "containers"], DirectedEdge["oberon0", "ghc-prim"], DirectedEdge["oberon0", "HList"], DirectedEdge["oberon0", "language-c"], DirectedEdge["oberon0", "mtl"], DirectedEdge["oberon0", "murder"], DirectedEdge["oberon0", "template-haskell"], DirectedEdge["oberon0", "transformers"], DirectedEdge["oberon0", "uu-parsinglib"], DirectedEdge["oberon0", "uulib"], DirectedEdge["obj", "array"], DirectedEdge["obj", "base"], DirectedEdge["obj", "binary"], DirectedEdge["obj", "bytestring"], DirectedEdge["obj", "checkers"], DirectedEdge["obj", "Codec-Image-DevIL"], DirectedEdge["obj", "containers"], DirectedEdge["obj", "directory"], DirectedEdge["obj", "filepath"], DirectedEdge["obj", "graphicsFormats"], DirectedEdge["obj", "InfixApplicative"], DirectedEdge["obj", "OpenGL"], DirectedEdge["obj", "OpenGLCheck"], DirectedEdge["obj", "QuickCheck"], DirectedEdge["objectid", "base"], DirectedEdge["objectid", "blaze-builder"], DirectedEdge["objectid", "bytestring"], DirectedEdge["objectid", "cereal"], DirectedEdge["objectid", "cryptohash"], DirectedEdge["objective", "base"], DirectedEdge["objective", "containers"], DirectedEdge["objective", "either"], DirectedEdge["objective", "exceptions"], DirectedEdge["objective", "free"], DirectedEdge["objective", "hashable"], DirectedEdge["objective", "monad-skeleton"], DirectedEdge["objective", "mtl"], DirectedEdge["objective", "profunctors"], DirectedEdge["objective", "template-haskell"], DirectedEdge["objective", "transformers"], DirectedEdge["objective", "transformers-compat"], DirectedEdge["objective", "unordered-containers"], DirectedEdge["objective", "void"], DirectedEdge["objective", "witherable"], DirectedEdge["observable-sharing", "base"], DirectedEdge["observable-sharing", "containers"], DirectedEdge["octane", "aeson"], DirectedEdge["octane", "autoexporter"], DirectedEdge["octane", "base"], DirectedEdge["octane", "binary"], DirectedEdge["octane", "binary-bits"], DirectedEdge["octane", "bytestring"], DirectedEdge["octane", "containers"], DirectedEdge["octane", "deepseq"], DirectedEdge["octane", "octane"], DirectedEdge["octane", "text"], DirectedEdge["octohat", "aeson"], DirectedEdge["octohat", "base"], DirectedEdge["octohat", "base-compat"], DirectedEdge["octohat", "base16-bytestring"], DirectedEdge["octohat", "base64-bytestring"], DirectedEdge["octohat", "bytestring"], DirectedEdge["octohat", "containers"], DirectedEdge["octohat", "cryptohash"], DirectedEdge["octohat", "dotenv"], DirectedEdge["octohat", "either"], DirectedEdge["octohat", "errors"], DirectedEdge["octohat", "ghc-prim"], DirectedEdge["octohat", "http-client"], DirectedEdge["octohat", "http-types"], DirectedEdge["octohat", "lens"], DirectedEdge["octohat", "mtl"], DirectedEdge["octohat", "octohat"], DirectedEdge["octohat", "optparse-applicative"], DirectedEdge["octohat", "text"], DirectedEdge["octohat", "time"], DirectedEdge["octohat", "transformers"], DirectedEdge["octohat", "unordered-containers"], DirectedEdge["octohat", "utf8-string"], DirectedEdge["octohat", "wreq-sb"], DirectedEdge["octohat", "xmlhtml"], DirectedEdge["octohat", "yaml"], DirectedEdge["octopus", "array"], DirectedEdge["octopus", "base"], DirectedEdge["octopus", "bytestring"], DirectedEdge["octopus", "containers"], DirectedEdge["octopus", "hexpr"], DirectedEdge["octopus", "mtl"], DirectedEdge["octopus", "parsec"], DirectedEdge["octopus", "symbol"], DirectedEdge["octopus", "text"], DirectedEdge["oculus", "base"], DirectedEdge["oculus", "either"], DirectedEdge["oculus", "monads-tf"], DirectedEdge["oculus", "transformers"], DirectedEdge["oculus", "vect-floating"], DirectedEdge["oden-go-packages", "aeson"], DirectedEdge["oden-go-packages", "base"], DirectedEdge["oden-go-packages", "bytestring"], DirectedEdge["oden-go-packages", "containers"], DirectedEdge["oden-go-packages", "text"], DirectedEdge["oden-go-packages", "unordered-containers"], DirectedEdge["oeis", "base"], DirectedEdge["oeis", "HTTP"], DirectedEdge["oeis", "network"], DirectedEdge["oeis", "network-uri"], DirectedEdge["off-simple", "base"], DirectedEdge["off-simple", "vector"], DirectedEdge["ofx", "base"], DirectedEdge["ofx", "parsec"], DirectedEdge["ofx", "pretty"], DirectedEdge["ofx", "time"], DirectedEdge["ohloh-hs", "base"], DirectedEdge["ohloh-hs", "cmdargs"], DirectedEdge["ohloh-hs", "data-lens"], DirectedEdge["ohloh-hs", "hxt"], DirectedEdge["ohloh-hs", "hxt-curl"], DirectedEdge["ohloh-hs", "pretty-show"], DirectedEdge["ohloh-hs", "text-format-simple"], DirectedEdge["oi", "base"], DirectedEdge["oi", "comonad"], DirectedEdge["oi", "directory"], DirectedEdge["oi", "filepath"], DirectedEdge["oi", "oi"], DirectedEdge["oi", "parallel"], DirectedEdge["oidc-client", "aeson"], DirectedEdge["oidc-client", "attoparsec"], DirectedEdge["oidc-client", "base"], DirectedEdge["oidc-client", "base32-bytestring"], DirectedEdge["oidc-client", "blaze-html"], DirectedEdge["oidc-client", "bytestring"], DirectedEdge["oidc-client", "containers"], DirectedEdge["oidc-client", "cprng-aes"], DirectedEdge["oidc-client", "crypto-random"], DirectedEdge["oidc-client", "exceptions"], DirectedEdge["oidc-client", "http-client"], DirectedEdge["oidc-client", "http-client-tls"], DirectedEdge["oidc-client", "http-types"], DirectedEdge["oidc-client", "jose-jwt"], DirectedEdge["oidc-client", "network"], DirectedEdge["oidc-client", "network-uri"], DirectedEdge["oidc-client", "oidc-client"], DirectedEdge["oidc-client", "scotty"], DirectedEdge["oidc-client", "scotty-cookie"], DirectedEdge["oidc-client", "text"], DirectedEdge["oidc-client", "time"], DirectedEdge["oidc-client", "tls"], DirectedEdge["oidc-client", "transformers"], DirectedEdge["oidc-client", "wai-extra"], DirectedEdge["ois-input-manager", "base"], DirectedEdge["ois-input-manager", "hogre"], DirectedEdge["old-locale", "base"], DirectedEdge["old-time", "base"], DirectedEdge["old-time", "old-locale"], DirectedEdge["old-version", "base"], DirectedEdge["olwrapper", "base"], DirectedEdge["olwrapper", "bytestring"], DirectedEdge["olwrapper", "fay"], DirectedEdge["olwrapper", "fay-jquery"], DirectedEdge["olwrapper", "fay-text"], DirectedEdge["olwrapper", "lens"], DirectedEdge["olwrapper", "mtl"], DirectedEdge["olwrapper", "snap"], DirectedEdge["olwrapper", "snap-core"], DirectedEdge["olwrapper", "snap-loader-dynamic"], DirectedEdge["olwrapper", "snap-loader-static"], DirectedEdge["olwrapper", "snap-server"], DirectedEdge["olwrapper", "snaplet-fay"], DirectedEdge["olwrapper", "text"], DirectedEdge["omaketex", "base"], DirectedEdge["omaketex", "optparse-applicative"], DirectedEdge["omaketex", "shakespeare-text"], DirectedEdge["omaketex", "shelly"], DirectedEdge["omaketex", "text"], DirectedEdge["omega", "array"], DirectedEdge["omega", "base"], DirectedEdge["omega", "containers"], DirectedEdge["omega", "directory"], DirectedEdge["omega", "filepath"], DirectedEdge["omega", "pretty"], DirectedEdge["omega", "time"], DirectedEdge["omnicodec", "base"], DirectedEdge["omnicodec", "bytestring"], DirectedEdge["omnicodec", "cmdargs"], DirectedEdge["omnicodec", "conduit"], DirectedEdge["omnicodec", "sandi"], DirectedEdge["omnicodec", "transformers"], DirectedEdge["omnifmt", "aeson"], DirectedEdge["omnifmt", "base"], DirectedEdge["omnifmt", "exceptions"], DirectedEdge["omnifmt", "extra"], DirectedEdge["omnifmt", "fast-logger"], DirectedEdge["omnifmt", "filepath"], DirectedEdge["omnifmt", "monad-logger"], DirectedEdge["omnifmt", "monad-parallel"], DirectedEdge["omnifmt", "mtl"], DirectedEdge["omnifmt", "omnifmt"], DirectedEdge["omnifmt", "optparse-applicative"], DirectedEdge["omnifmt", "pipes"], DirectedEdge["omnifmt", "pipes-concurrency"], DirectedEdge["omnifmt", "temporary"], DirectedEdge["omnifmt", "text"], DirectedEdge["omnifmt", "time"], DirectedEdge["omnifmt", "unordered-containers"], DirectedEdge["omnifmt", "yaml"], DirectedEdge["on-a-horse", "arrows"], DirectedEdge["on-a-horse", "base"], DirectedEdge["on-a-horse", "bytestring"], DirectedEdge["on-a-horse", "case-insensitive"], DirectedEdge["on-a-horse", "containers"], DirectedEdge["on-a-horse", "cookie"], DirectedEdge["on-a-horse", "http-types"], DirectedEdge["on-a-horse", "mtl"], DirectedEdge["on-a-horse", "random"], DirectedEdge["on-a-horse", "safe"], DirectedEdge["on-a-horse", "split"], DirectedEdge["on-a-horse", "text"], DirectedEdge["on-a-horse", "time"], DirectedEdge["on-a-horse", "transformers"], DirectedEdge["on-a-horse", "utf8-string"], DirectedEdge["on-a-horse", "wai"], DirectedEdge["on-a-horse", "wai-extra"], DirectedEdge["on-a-horse", "warp"], DirectedEdge["on-demand-ssh-tunnel", "base"], DirectedEdge["on-demand-ssh-tunnel", "bytestring"], DirectedEdge["on-demand-ssh-tunnel", "GenericPretty"], DirectedEdge["on-demand-ssh-tunnel", "network"], DirectedEdge["on-demand-ssh-tunnel", "on-demand-ssh-tunnel"], DirectedEdge["on-demand-ssh-tunnel", "process"], DirectedEdge["on-demand-ssh-tunnel", "random"], DirectedEdge["once", "base"], DirectedEdge["once", "containers"], DirectedEdge["once", "hashable"], DirectedEdge["once", "template-haskell"], DirectedEdge["once", "unordered-containers"], DirectedEdge["one-liner", "base"], DirectedEdge["one-liner", "contravariant"], DirectedEdge["one-liner", "ghc-prim"], DirectedEdge["one-liner", "transformers"], DirectedEdge["one-time-password", "base"], DirectedEdge["one-time-password", "byteable"], DirectedEdge["one-time-password", "bytestring"], DirectedEdge["one-time-password", "cereal"], DirectedEdge["one-time-password", "cryptohash"], DirectedEdge["one-time-password", "time"], DirectedEdge["oneOfN", "base"], DirectedEdge["oneormore", "base"], DirectedEdge["only", "base"], DirectedEdge["only", "parsec"], DirectedEdge["only", "regex-compat"], DirectedEdge["onu-course", "base"], DirectedEdge["onu-course", "smallcheck"], DirectedEdge["oo-prototypes", "base"], DirectedEdge["opaleye", "aeson"], DirectedEdge["opaleye", "attoparsec"], DirectedEdge["opaleye", "base"], DirectedEdge["opaleye", "base16-bytestring"], DirectedEdge["opaleye", "bytestring"], DirectedEdge["opaleye", "case-insensitive"], DirectedEdge["opaleye", "contravariant"], DirectedEdge["opaleye", "postgresql-simple"], DirectedEdge["opaleye", "pretty"], DirectedEdge["opaleye", "product-profunctors"], DirectedEdge["opaleye", "profunctors"], DirectedEdge["opaleye", "semigroups"], DirectedEdge["opaleye", "text"], DirectedEdge["opaleye", "time"], DirectedEdge["opaleye", "time-locale-compat"], DirectedEdge["opaleye", "transformers"], DirectedEdge["opaleye", "uuid"], DirectedEdge["opaleye", "void"], DirectedEdge["opaleye-classy", "base"], DirectedEdge["opaleye-classy", "bytestring"], DirectedEdge["opaleye-classy", "lens"], DirectedEdge["opaleye-classy", "mtl"], DirectedEdge["opaleye-classy", "opaleye"], DirectedEdge["opaleye-classy", "postgresql-simple"], DirectedEdge["opaleye-classy", "product-profunctors"], DirectedEdge["opaleye-classy", "transformers"], DirectedEdge["opaleye-sqlite", "base"], DirectedEdge["opaleye-sqlite", "base16-bytestring"], DirectedEdge["opaleye-sqlite", "bytestring"], DirectedEdge["opaleye-sqlite", "case-insensitive"], DirectedEdge["opaleye-sqlite", "contravariant"], DirectedEdge["opaleye-sqlite", "direct-sqlite"], DirectedEdge["opaleye-sqlite", "pretty"], DirectedEdge["opaleye-sqlite", "product-profunctors"], DirectedEdge["opaleye-sqlite", "profunctors"], DirectedEdge["opaleye-sqlite", "semigroups"], DirectedEdge["opaleye-sqlite", "sqlite-simple"], DirectedEdge["opaleye-sqlite", "text"], DirectedEdge["opaleye-sqlite", "time"], DirectedEdge["opaleye-sqlite", "time-locale-compat"], DirectedEdge["opaleye-sqlite", "transformers"], DirectedEdge["opaleye-sqlite", "uuid"], DirectedEdge["opaleye-sqlite", "void"], DirectedEdge["opaleye-trans", "base"], DirectedEdge["opaleye-trans", "mtl"], DirectedEdge["opaleye-trans", "opaleye"], DirectedEdge["opaleye-trans", "opaleye-trans"], DirectedEdge["opaleye-trans", "postgresql-simple"], DirectedEdge["opaleye-trans", "product-profunctors"], DirectedEdge["opaleye-trans", "transformers"], DirectedEdge["opaleye-trans", "transformers-base"], DirectedEdge["open-browser", "base"], DirectedEdge["open-browser", "open-browser"], DirectedEdge["open-browser", "process"], DirectedEdge["open-haddock", "base"], DirectedEdge["open-haddock", "basic-prelude"], DirectedEdge["open-haddock", "text"], DirectedEdge["open-haddock", "turtle"], DirectedEdge["open-pandoc", "pandoc"], DirectedEdge["open-pandoc", "base"], DirectedEdge["open-pandoc", "bytestring"], DirectedEdge["open-pandoc", "citeproc-hs"], DirectedEdge["open-pandoc", "containers"], DirectedEdge["open-pandoc", "directory"], DirectedEdge["open-pandoc", "extensible-exceptions"], DirectedEdge["open-pandoc", "filepath"], DirectedEdge["open-pandoc", "highlighting-kate"], DirectedEdge["open-pandoc", "HTTP"], DirectedEdge["open-pandoc", "mtl"], DirectedEdge["open-pandoc", "network"], DirectedEdge["open-pandoc", "old-time"], DirectedEdge["open-pandoc", "parsec"], DirectedEdge["open-pandoc", "pretty"], DirectedEdge["open-pandoc", "process"], DirectedEdge["open-pandoc", "syb"], DirectedEdge["open-pandoc", "texmath"], DirectedEdge["open-pandoc", "utf8-string"], DirectedEdge["open-pandoc", "xhtml"], DirectedEdge["open-pandoc", "xml"], DirectedEdge["open-pandoc", "zip-archive"], DirectedEdge["open-signals", "base"], DirectedEdge["open-signals", "either"], DirectedEdge["open-signals", "mtl"], DirectedEdge["open-signals", "transformers"], DirectedEdge["open-symbology", "attoparsec"], DirectedEdge["open-symbology", "base"], DirectedEdge["open-symbology", "conduit"], DirectedEdge["open-symbology", "mtl"], DirectedEdge["open-symbology", "text"], DirectedEdge["open-typerep", "base"], DirectedEdge["open-typerep", "base-orphans"], DirectedEdge["open-typerep", "constraints"], DirectedEdge["open-typerep", "mtl"], DirectedEdge["open-typerep", "syntactic"], DirectedEdge["open-typerep", "tagged"], DirectedEdge["open-typerep", "template-haskell"], DirectedEdge["open-union", "base"], DirectedEdge["open-union", "open-union"], DirectedEdge["open-witness", "base"], DirectedEdge["open-witness", "hashable"], DirectedEdge["open-witness", "random"], DirectedEdge["open-witness", "template-haskell"], DirectedEdge["open-witness", "transformers"], DirectedEdge["open-witness", "witness"], DirectedEdge["opencog-atomspace", "base"], DirectedEdge["opencog-atomspace", "transformers"], DirectedEdge["opencv-raw", "base"], DirectedEdge["opencv-raw", "bindings-DSL"], DirectedEdge["opencv-raw", "Cabal"], DirectedEdge["opencv-raw", "vector"], DirectedEdge["opendatatable", "base"], DirectedEdge["opendatatable", "hxt"], DirectedEdge["opendatatable", "template-haskell"], DirectedEdge["opendatatable", "th-lift"], DirectedEdge["openexchangerates", "aeson"], DirectedEdge["openexchangerates", "base"], DirectedEdge["openexchangerates", "containers"], DirectedEdge["openexchangerates", "currency"], DirectedEdge["openexchangerates", "errors"], DirectedEdge["openexchangerates", "HTTP"], DirectedEdge["openexchangerates", "network"], DirectedEdge["openexchangerates", "text"], DirectedEdge["openflow", "aeson"], DirectedEdge["openflow", "base"], DirectedEdge["openflow", "bimap"], DirectedEdge["openflow", "binary"], DirectedEdge["openflow", "bytestring"], DirectedEdge["openflow", "containers"], DirectedEdge["openflow", "deepseq-generics"], DirectedEdge["openflow", "hashable"], DirectedEdge["openflow", "network"], DirectedEdge["opengl-dlp-stereo", "base"], DirectedEdge["opengl-dlp-stereo", "data-default"], DirectedEdge["opengl-dlp-stereo", "GLUT"], DirectedEdge["opengl-dlp-stereo", "OpenGL"], DirectedEdge["opengl-dlp-stereo", "vector"], DirectedEdge["opengl-spacenavigator", "base"], DirectedEdge["opengl-spacenavigator", "binary"], DirectedEdge["opengl-spacenavigator", "data-default"], DirectedEdge["opengl-spacenavigator", "GLUT"], DirectedEdge["opengl-spacenavigator", "OpenGL"], DirectedEdge["opengles", "base"], DirectedEdge["opengles", "bytestring"], DirectedEdge["opengles", "distributive"], DirectedEdge["opengles", "fixed"], DirectedEdge["opengles", "future-resource"], DirectedEdge["opengles", "ghc-prim"], DirectedEdge["opengles", "GLFW-b"], DirectedEdge["opengles", "half"], DirectedEdge["opengles", "lens"], DirectedEdge["opengles", "linear"], DirectedEdge["opengles", "opengles"], DirectedEdge["opengles", "packer"], DirectedEdge["opengles", "random"], DirectedEdge["opengles", "time"], DirectedEdge["opengles", "transformers"], DirectedEdge["opengles", "vector"], DirectedEdge["openid", "base"], DirectedEdge["openid", "bytestring"], DirectedEdge["openid", "containers"], DirectedEdge["openid", "HsOpenSSL"], DirectedEdge["openid", "HTTP"], DirectedEdge["openid", "monadLib"], DirectedEdge["openid", "network"], DirectedEdge["openid", "openid"], DirectedEdge["openid", "time"], DirectedEdge["openid", "xml"], DirectedEdge["openpgp", "base"], DirectedEdge["openpgp", "binary"], DirectedEdge["openpgp", "bytestring"], DirectedEdge["openpgp", "bzlib"], DirectedEdge["openpgp", "utf8-string"], DirectedEdge["openpgp", "zlib"], DirectedEdge["openpgp-Crypto", "base"], DirectedEdge["openpgp-Crypto", "binary"], DirectedEdge["openpgp-Crypto", "bytestring"], DirectedEdge["openpgp-Crypto", "Crypto"], DirectedEdge["openpgp-Crypto", "openpgp"], DirectedEdge["openpgp-Crypto", "utf8-string"], DirectedEdge["openpgp-asciiarmor", "attoparsec"], DirectedEdge["openpgp-asciiarmor", "base"], DirectedEdge["openpgp-asciiarmor", "base64-bytestring"], DirectedEdge["openpgp-asciiarmor", "bytestring"], DirectedEdge["openpgp-asciiarmor", "cereal"], DirectedEdge["openpgp-crypto-api", "base"], DirectedEdge["openpgp-crypto-api", "binary"], DirectedEdge["openpgp-crypto-api", "bytestring"], DirectedEdge["openpgp-crypto-api", "cereal"], DirectedEdge["openpgp-crypto-api", "crypto-api"], DirectedEdge["openpgp-crypto-api", "cryptocipher"], DirectedEdge["openpgp-crypto-api", "cryptohash"], DirectedEdge["openpgp-crypto-api", "openpgp"], DirectedEdge["openpgp-crypto-api", "tagged"], DirectedEdge["openpgp-crypto-api", "transformers"], DirectedEdge["opensoundcontrol-ht", "base"], DirectedEdge["opensoundcontrol-ht", "binary"], DirectedEdge["opensoundcontrol-ht", "bytestring"], DirectedEdge["opensoundcontrol-ht", "hosc"], DirectedEdge["opensoundcontrol-ht", "process"], DirectedEdge["opensoundcontrol-ht", "random"], DirectedEdge["opensoundcontrol-ht", "transformers"], DirectedEdge["opensoundcontrol-ht", "utility-ht"], DirectedEdge["opensource", "aeson"], DirectedEdge["opensource", "base"], DirectedEdge["opensource", "http-client"], DirectedEdge["opensource", "http-client-tls"], DirectedEdge["opensource", "text"], DirectedEdge["opensource", "transformers"], DirectedEdge["opensource", "transformers-compat"], DirectedEdge["openssh-github-keys", "base"], DirectedEdge["openssh-github-keys", "directory"], DirectedEdge["openssh-github-keys", "dotenv"], DirectedEdge["openssh-github-keys", "filepath"], DirectedEdge["openssh-github-keys", "keyword-args"], DirectedEdge["openssh-github-keys", "octohat"], DirectedEdge["openssh-github-keys", "optparse-applicative"], DirectedEdge["openssh-github-keys", "parsec"], DirectedEdge["openssh-github-keys", "text"], DirectedEdge["openssh-github-keys", "unix"], DirectedEdge["openssl-createkey", "base"], DirectedEdge["openssl-createkey", "directory"], DirectedEdge["openssl-createkey", "HsOpenSSL"], DirectedEdge["openssl-createkey", "time"], DirectedEdge["openssl-createkey", "unix"], DirectedEdge["openssl-streams", "base"], DirectedEdge["openssl-streams", "bytestring"], DirectedEdge["openssl-streams", "HsOpenSSL"], DirectedEdge["openssl-streams", "io-streams"], DirectedEdge["openssl-streams", "network"], DirectedEdge["opentheory", "base"], DirectedEdge["opentheory", "opentheory-primitive"], DirectedEdge["opentheory", "QuickCheck"], DirectedEdge["opentheory-bits", "base"], DirectedEdge["opentheory-bits", "opentheory"], DirectedEdge["opentheory-bits", "opentheory-primitive"], DirectedEdge["opentheory-bits", "opentheory-probability"], DirectedEdge["opentheory-bits", "QuickCheck"], DirectedEdge["opentheory-byte", "base"], DirectedEdge["opentheory-byte", "opentheory"], DirectedEdge["opentheory-byte", "opentheory-bits"], DirectedEdge["opentheory-byte", "opentheory-primitive"], DirectedEdge["opentheory-byte", "opentheory-probability"], DirectedEdge["opentheory-byte", "QuickCheck"], DirectedEdge["opentheory-char", "opentheory-unicode"], DirectedEdge["opentheory-char", "base"], DirectedEdge["opentheory-char", "opentheory"], DirectedEdge["opentheory-char", "opentheory-parser"], DirectedEdge["opentheory-char", "opentheory-primitive"], DirectedEdge["opentheory-char", "QuickCheck"], DirectedEdge["opentheory-char", "random"], DirectedEdge["opentheory-divides", "base"], DirectedEdge["opentheory-divides", "opentheory"], DirectedEdge["opentheory-divides", "opentheory-primitive"], DirectedEdge["opentheory-divides", "QuickCheck"], DirectedEdge["opentheory-fibonacci", "base"], DirectedEdge["opentheory-fibonacci", "opentheory"], DirectedEdge["opentheory-fibonacci", "opentheory-primitive"], DirectedEdge["opentheory-fibonacci", "opentheory-stream"], DirectedEdge["opentheory-fibonacci", "QuickCheck"], DirectedEdge["opentheory-parser", "base"], DirectedEdge["opentheory-parser", "opentheory"], DirectedEdge["opentheory-parser", "opentheory-primitive"], DirectedEdge["opentheory-parser", "QuickCheck"], DirectedEdge["opentheory-prime", "base"], DirectedEdge["opentheory-prime", "opentheory"], DirectedEdge["opentheory-prime", "opentheory-divides"], DirectedEdge["opentheory-prime", "opentheory-primitive"], DirectedEdge["opentheory-prime", "opentheory-stream"], DirectedEdge["opentheory-prime", "QuickCheck"], DirectedEdge["opentheory-primitive", "base"], DirectedEdge["opentheory-primitive", "QuickCheck"], DirectedEdge["opentheory-primitive", "random"], DirectedEdge["opentheory-probability", "base"], DirectedEdge["opentheory-probability", "opentheory"], DirectedEdge["opentheory-probability", "opentheory-primitive"], DirectedEdge["opentheory-probability", "QuickCheck"], DirectedEdge["opentheory-stream", "base"], DirectedEdge["opentheory-stream", "opentheory"], DirectedEdge["opentheory-stream", "opentheory-primitive"], DirectedEdge["opentheory-stream", "QuickCheck"], DirectedEdge["opentheory-unicode", "base"], DirectedEdge["opentheory-unicode", "opentheory"], DirectedEdge["opentheory-unicode", "opentheory-bits"], DirectedEdge["opentheory-unicode", "opentheory-byte"], DirectedEdge["opentheory-unicode", "opentheory-parser"], DirectedEdge["opentheory-unicode", "opentheory-primitive"], DirectedEdge["opentheory-unicode", "opentheory-probability"], DirectedEdge["opentheory-unicode", "QuickCheck"], DirectedEdge["operational", "base"], DirectedEdge["operational", "mtl"], DirectedEdge["operational", "random"], DirectedEdge["operational-alacarte", "base"], DirectedEdge["operational-alacarte", "mtl"], DirectedEdge["operational-class", "base"], DirectedEdge["operational-class", "operational"], DirectedEdge["operational-class", "transformers"], DirectedEdge["operational-extra", "base"], DirectedEdge["operational-extra", "bytestring"], DirectedEdge["operational-extra", "operational"], DirectedEdge["operational-extra", "text"], DirectedEdge["operational-extra", "time"], DirectedEdge["operational-extra", "transformers"], DirectedEdge["opml", "base"], DirectedEdge["opml", "directory"], DirectedEdge["opml", "xml"], DirectedEdge["opml-conduit", "base"], DirectedEdge["opml-conduit", "case-insensitive"], DirectedEdge["opml-conduit", "conduit"], DirectedEdge["opml-conduit", "conduit-parse"], DirectedEdge["opml-conduit", "containers"], DirectedEdge["opml-conduit", "exceptions"], DirectedEdge["opml-conduit", "foldl"], DirectedEdge["opml-conduit", "lens-simple"], DirectedEdge["opml-conduit", "mono-traversable"], DirectedEdge["opml-conduit", "monoid-subclasses"], DirectedEdge["opml-conduit", "parsers"], DirectedEdge["opml-conduit", "semigroups"], DirectedEdge["opml-conduit", "text"], DirectedEdge["opml-conduit", "time"], DirectedEdge["opml-conduit", "timerep"], DirectedEdge["opml-conduit", "uri-bytestring"], DirectedEdge["opml-conduit", "xml-conduit"], DirectedEdge["opml-conduit", "xml-conduit-parse"], DirectedEdge["opml-conduit", "xml-types"], DirectedEdge["opn", "base"], DirectedEdge["opn", "directory"], DirectedEdge["opn", "filepath"], DirectedEdge["opn", "ini"], DirectedEdge["opn", "network-uri"], DirectedEdge["opn", "optparse-applicative"], DirectedEdge["opn", "process"], DirectedEdge["opn", "text"], DirectedEdge["opn", "unordered-containers"], DirectedEdge["optimal-blocks", "base"], DirectedEdge["optimal-blocks", "bytestring"], DirectedEdge["optimal-blocks", "cryptohash"], DirectedEdge["optimal-blocks", "deepseq"], DirectedEdge["optimal-blocks", "hex"], DirectedEdge["optimal-blocks", "vector"], DirectedEdge["optimization", "ad"], DirectedEdge["optimization", "base"], DirectedEdge["optimization", "distributive"], DirectedEdge["optimization", "linear"], DirectedEdge["optimization", "semigroupoids"], DirectedEdge["optimization", "vector"], DirectedEdge["optimusprime", "base"], DirectedEdge["optimusprime", "cmdargs"], DirectedEdge["optimusprime", "containers"], DirectedEdge["optimusprime", "fgl"], DirectedEdge["optimusprime", "flite"], DirectedEdge["optimusprime", "graphviz"], DirectedEdge["optimusprime", "mtl"], DirectedEdge["optimusprime", "parsec"], DirectedEdge["optimusprime", "uniplate"], DirectedEdge["optimusprime", "wl-pprint"], DirectedEdge["option", "base"], DirectedEdge["optional", "base"], DirectedEdge["optional-args", "base"], DirectedEdge["options", "base"], DirectedEdge["options", "bytestring"], DirectedEdge["options", "containers"], DirectedEdge["options", "monads-tf"], DirectedEdge["options", "transformers"], DirectedEdge["options-time", "base"], DirectedEdge["options-time", "old-locale"], DirectedEdge["options-time", "options"], DirectedEdge["options-time", "time"], DirectedEdge["optparse-applicative", "ansi-wl-pprint"], DirectedEdge["optparse-applicative", "base"], DirectedEdge["optparse-applicative", "process"], DirectedEdge["optparse-applicative", "transformers"], DirectedEdge["optparse-applicative", "transformers-compat"], DirectedEdge["optparse-declarative", "base"], DirectedEdge["optparse-declarative", "mtl"], DirectedEdge["optparse-generic", "base"], DirectedEdge["optparse-generic", "bytestring"], DirectedEdge["optparse-generic", "optparse-applicative"], DirectedEdge["optparse-generic", "singletons"], DirectedEdge["optparse-generic", "system-filepath"], DirectedEdge["optparse-generic", "tagged"], DirectedEdge["optparse-generic", "text"], DirectedEdge["optparse-generic", "th-desugar"], DirectedEdge["optparse-generic", "time"], DirectedEdge["optparse-generic", "transformers"], DirectedEdge["optparse-generic", "void"], DirectedEdge["optparse-helper", "base"], DirectedEdge["optparse-helper", "optparse-applicative"], DirectedEdge["optparse-simple", "base"], DirectedEdge["optparse-simple", "either"], DirectedEdge["optparse-simple", "gitrev"], DirectedEdge["optparse-simple", "optparse-applicative"], DirectedEdge["optparse-simple", "template-haskell"], DirectedEdge["optparse-simple", "transformers"], DirectedEdge["orc", "base"], DirectedEdge["orc", "deepseq"], DirectedEdge["orc", "monadIO"], DirectedEdge["orc", "mtl"], DirectedEdge["orc", "orc"], DirectedEdge["orc", "process"], DirectedEdge["orc", "random"], DirectedEdge["orc", "stm"], DirectedEdge["orchestrate", "aeson"], DirectedEdge["orchestrate", "base"], DirectedEdge["orchestrate", "bytestring"], DirectedEdge["orchestrate", "case-insensitive"], DirectedEdge["orchestrate", "data-default"], DirectedEdge["orchestrate", "either"], DirectedEdge["orchestrate", "errors"], DirectedEdge["orchestrate", "http-client"], DirectedEdge["orchestrate", "http-types"], DirectedEdge["orchestrate", "lens"], DirectedEdge["orchestrate", "mtl"], DirectedEdge["orchestrate", "text"], DirectedEdge["orchestrate", "transformers"], DirectedEdge["orchestrate", "unordered-containers"], DirectedEdge["orchestrate", "wreq"], DirectedEdge["orchid", "base"], DirectedEdge["orchid", "bytestring"], DirectedEdge["orchid", "containers"], DirectedEdge["orchid", "encoding"], DirectedEdge["orchid", "extensible-exceptions"], DirectedEdge["orchid", "fclabels"], DirectedEdge["orchid", "filestore"], DirectedEdge["orchid", "hscolour"], DirectedEdge["orchid", "mtl"], DirectedEdge["orchid", "parsec"], DirectedEdge["orchid", "process"], DirectedEdge["orchid", "QuickCheck"], DirectedEdge["orchid", "salvia"], DirectedEdge["orchid", "salvia-extras"], DirectedEdge["orchid", "stm"], DirectedEdge["orchid", "time"], DirectedEdge["orchid", "unix"], DirectedEdge["orchid", "xml"], DirectedEdge["orchid-demo", "base"], DirectedEdge["orchid-demo", "extensible-exceptions"], DirectedEdge["orchid-demo", "mtl"], DirectedEdge["orchid-demo", "network"], DirectedEdge["orchid-demo", "orchid"], DirectedEdge["orchid-demo", "Pipe"], DirectedEdge["orchid-demo", "salvia"], DirectedEdge["orchid-demo", "salvia-extras"], DirectedEdge["orchid-demo", "stm"], DirectedEdge["ord-adhoc", "base"], DirectedEdge["ord-adhoc", "void"], DirectedEdge["order-maintenance", "base"], DirectedEdge["order-maintenance", "containers"], DirectedEdge["order-maintenance", "transformers"], DirectedEdge["order-statistic-tree", "base"], DirectedEdge["order-statistics", "base"], DirectedEdge["order-statistics", "containers"], DirectedEdge["order-statistics", "math-functions"], DirectedEdge["order-statistics", "statistics"], DirectedEdge["order-statistics", "vector"], DirectedEdge["order-statistics", "vector-space"], DirectedEdge["ordered", "base"], DirectedEdge["orders", "base"], DirectedEdge["orders", "containers"], DirectedEdge["ordrea", "base"], DirectedEdge["ordrea", "containers"], DirectedEdge["ordrea", "transformers"], DirectedEdge["ordrea", "vector"], DirectedEdge["organize-imports", "attoparsec"], DirectedEdge["organize-imports", "base"], DirectedEdge["organize-imports", "text"], DirectedEdge["orgmode", "base"], DirectedEdge["orgmode", "containers"], DirectedEdge["orgmode", "HStringTemplate"], DirectedEdge["orgmode", "parsec"], DirectedEdge["orgmode", "regex-posix"], DirectedEdge["orgmode", "syb"], DirectedEdge["orgmode", "text"], DirectedEdge["orgmode-parse", "aeson"], DirectedEdge["orgmode-parse", "attoparsec"], DirectedEdge["orgmode-parse", "base"], DirectedEdge["orgmode-parse", "bytestring"], DirectedEdge["orgmode-parse", "containers"], DirectedEdge["orgmode-parse", "free"], DirectedEdge["orgmode-parse", "hashable"], DirectedEdge["orgmode-parse", "old-locale"], DirectedEdge["orgmode-parse", "text"], DirectedEdge["orgmode-parse", "thyme"], DirectedEdge["orgmode-parse", "unordered-containers"], DirectedEdge["origami", "base"], DirectedEdge["origami", "bifunctors"], DirectedEdge["origami", "containers"], DirectedEdge["origami", "lens"], DirectedEdge["origami", "mtl"], DirectedEdge["origami", "pretty"], DirectedEdge["origami", "template-haskell"], DirectedEdge["os-release", "base"], DirectedEdge["os-release", "containers"], DirectedEdge["os-release", "parsec"], DirectedEdge["os-release", "transformers"], DirectedEdge["osc", "attoparsec"], DirectedEdge["osc", "base"], DirectedEdge["osc", "binary"], DirectedEdge["osc", "bytestring"], DirectedEdge["osc", "network"], DirectedEdge["oscpacking", "base"], DirectedEdge["oscpacking", "colour"], DirectedEdge["oscpacking", "gloss"], DirectedEdge["oscpacking", "random"], DirectedEdge["osdkeys", "base"], DirectedEdge["osdkeys", "bytestring"], DirectedEdge["osdkeys", "conduit"], DirectedEdge["osdkeys", "conduit-extra"], DirectedEdge["osdkeys", "containers"], DirectedEdge["osdkeys", "libnotify"], DirectedEdge["osdkeys", "osdkeys"], DirectedEdge["osdkeys", "process"], DirectedEdge["osdkeys", "resourcet"], DirectedEdge["osdkeys", "time"], DirectedEdge["osdkeys", "transformers"], DirectedEdge["osm-conduit", "base"], DirectedEdge["osm-conduit", "conduit"], DirectedEdge["osm-conduit", "exceptions"], DirectedEdge["osm-conduit", "resourcet"], DirectedEdge["osm-conduit", "text"], DirectedEdge["osm-conduit", "transformers"], DirectedEdge["osm-conduit", "xml-conduit"], DirectedEdge["osm-conduit", "xml-types"], DirectedEdge["osm-download", "base"], DirectedEdge["osm-download", "bytestring"], DirectedEdge["osm-download", "conduit"], DirectedEdge["osm-download", "containers"], DirectedEdge["osm-download", "data-default"], DirectedEdge["osm-download", "directory"], DirectedEdge["osm-download", "gps"], DirectedEdge["osm-download", "http-conduit"], DirectedEdge["osm-download", "http-types"], DirectedEdge["osm-download", "monad-control"], DirectedEdge["osm-download", "monadIO"], DirectedEdge["osm-download", "mtl"], DirectedEdge["osm-download", "persistent"], DirectedEdge["osm-download", "persistent-sqlite"], DirectedEdge["osm-download", "persistent-template"], DirectedEdge["osm-download", "pool-conduit"], DirectedEdge["osm-download", "stm"], DirectedEdge["osm-download", "stm-chans"], DirectedEdge["osm-download", "text"], DirectedEdge["osm-download", "time"], DirectedEdge["osm-download", "transformers"], DirectedEdge["osm-download", "transformers-base"], DirectedEdge["oso2pdf", "base"], DirectedEdge["oso2pdf", "directory"], DirectedEdge["oso2pdf", "filepath"], DirectedEdge["oso2pdf", "lens"], DirectedEdge["oso2pdf", "mtl"], DirectedEdge["oso2pdf", "optparse-applicative"], DirectedEdge["oso2pdf", "pandoc-types"], DirectedEdge["oso2pdf", "process"], DirectedEdge["oso2pdf", "temporary"], DirectedEdge["osx-ar", "base"], DirectedEdge["osx-ar", "binary"], DirectedEdge["osx-ar", "bytestring"], DirectedEdge["osx-ar", "containers"], DirectedEdge["ot", "aeson"], DirectedEdge["ot", "attoparsec"], DirectedEdge["ot", "base"], DirectedEdge["ot", "binary"], DirectedEdge["ot", "either"], DirectedEdge["ot", "ghc"], DirectedEdge["ot", "mtl"], DirectedEdge["ot", "QuickCheck"], DirectedEdge["ot", "text"], DirectedEdge["ottparse-pretty", "base"], DirectedEdge["ottparse-pretty", "containers"], DirectedEdge["ottparse-pretty", "parsec"], DirectedEdge["ottparse-pretty", "split"], DirectedEdge["ottparse-pretty", "uniplate"], DirectedEdge["overloaded-records", "base"], DirectedEdge["overloaded-records", "data-default-class"], DirectedEdge["overloaded-records", "template-haskell"], DirectedEdge["overture", "flow"], DirectedEdge["overture", "base"], DirectedEdge["pack", "array"], DirectedEdge["pack", "base"], DirectedEdge["pack", "bytestring"], DirectedEdge["pack", "lens"], DirectedEdge["pack", "transformers"], DirectedEdge["pack", "vector"], DirectedEdge["package-description-remote", "base"], DirectedEdge["package-description-remote", "bytestring"], DirectedEdge["package-description-remote", "Cabal"], DirectedEdge["package-description-remote", "lens"], DirectedEdge["package-description-remote", "lens-aeson"], DirectedEdge["package-description-remote", "wreq"], DirectedEdge["package-o-tron", "base"], DirectedEdge["package-o-tron", "Cabal"], DirectedEdge["package-o-tron", "filemanip"], DirectedEdge["package-o-tron", "filepath"], DirectedEdge["package-o-tron", "groom"], DirectedEdge["package-o-tron", "packdeps"], DirectedEdge["package-o-tron", "process"], DirectedEdge["package-vt", "base"], DirectedEdge["package-vt", "Cabal"], DirectedEdge["package-vt", "Diff"], DirectedEdge["package-vt", "filepath"], DirectedEdge["package-vt", "haskell-src-exts"], DirectedEdge["packdeps", "base"], DirectedEdge["packdeps", "bytestring"], DirectedEdge["packdeps", "Cabal"], DirectedEdge["packdeps", "containers"], DirectedEdge["packdeps", "directory"], DirectedEdge["packdeps", "filepath"], DirectedEdge["packdeps", "packdeps"], DirectedEdge["packdeps", "split"], DirectedEdge["packdeps", "tar"], DirectedEdge["packdeps", "text"], DirectedEdge["packdeps", "time"], DirectedEdge["packed-dawg", "base"], DirectedEdge["packed-dawg", "binary"], DirectedEdge["packed-dawg", "deepseq"], DirectedEdge["packed-dawg", "mtl"], DirectedEdge["packed-dawg", "unordered-containers"], DirectedEdge["packed-dawg", "vector"], DirectedEdge["packed-dawg", "vector-binary-instances"], DirectedEdge["packedstring", "bytestring"], DirectedEdge["packedstring", "array"], DirectedEdge["packedstring", "base"], DirectedEdge["packer", "base"], DirectedEdge["packer", "bytestring"], DirectedEdge["packer", "ghc-prim"], DirectedEdge["packer", "transformers"], DirectedEdge["packman", "array"], DirectedEdge["packman", "base"], DirectedEdge["packman", "binary"], DirectedEdge["packman", "bytestring"], DirectedEdge["packman", "ghc-prim"], DirectedEdge["packman", "primitive"], DirectedEdge["packunused", "base"], DirectedEdge["packunused", "Cabal"], DirectedEdge["packunused", "directory"], DirectedEdge["packunused", "filepath"], DirectedEdge["packunused", "haskell-src-exts"], DirectedEdge["packunused", "optparse-applicative"], DirectedEdge["packunused", "split"], DirectedEdge["pacman-memcache", "base"], DirectedEdge["pacman-memcache", "deepseq"], DirectedEdge["pacman-memcache", "directory-tree"], DirectedEdge["padKONTROL", "base"], DirectedEdge["padKONTROL", "containers"], DirectedEdge["padKONTROL", "hmidi"], DirectedEdge["padKONTROL", "minioperational"], DirectedEdge["padKONTROL", "transformers"], DirectedEdge["pagarme", "aeson"], DirectedEdge["pagarme", "base"], DirectedEdge["pagarme", "bytestring"], DirectedEdge["pagarme", "containers"], DirectedEdge["pagarme", "lens"], DirectedEdge["pagarme", "pagarme"], DirectedEdge["pagarme", "text"], DirectedEdge["pagarme", "wreq"], DirectedEdge["pager", "base"], DirectedEdge["pager", "bytestring"], DirectedEdge["pager", "conduit"], DirectedEdge["pager", "conduit-extra"], DirectedEdge["pager", "directory"], DirectedEdge["pager", "pager"], DirectedEdge["pager", "process"], DirectedEdge["pager", "resourcet"], DirectedEdge["pager", "safe"], DirectedEdge["pager", "terminfo"], DirectedEdge["pager", "text"], DirectedEdge["pager", "transformers"], DirectedEdge["pager", "unix"], DirectedEdge["pagerduty", "aeson"], DirectedEdge["pagerduty", "base"], DirectedEdge["pagerduty", "bifunctors"], DirectedEdge["pagerduty", "bytestring"], DirectedEdge["pagerduty", "bytestring-conversion"], DirectedEdge["pagerduty", "conduit"], DirectedEdge["pagerduty", "data-default-class"], DirectedEdge["pagerduty", "exceptions"], DirectedEdge["pagerduty", "generics-sop"], DirectedEdge["pagerduty", "http-client"], DirectedEdge["pagerduty", "http-types"], DirectedEdge["pagerduty", "lens"], DirectedEdge["pagerduty", "lens-aeson"], DirectedEdge["pagerduty", "mmorph"], DirectedEdge["pagerduty", "monad-control"], DirectedEdge["pagerduty", "mtl"], DirectedEdge["pagerduty", "template-haskell"], DirectedEdge["pagerduty", "text"], DirectedEdge["pagerduty", "time"], DirectedEdge["pagerduty", "time-locale-compat"], DirectedEdge["pagerduty", "transformers"], DirectedEdge["pagerduty", "transformers-base"], DirectedEdge["pagerduty", "transformers-compat"], DirectedEdge["pagerduty", "unordered-containers"], DirectedEdge["pagure-hook-receiver", "base"], DirectedEdge["pagure-hook-receiver", "containers"], DirectedEdge["pagure-hook-receiver", "scotty"], DirectedEdge["pagure-hook-receiver", "shelly"], DirectedEdge["pagure-hook-receiver", "text"], DirectedEdge["pagure-hook-receiver", "transformers"], DirectedEdge["pagure-hook-receiver", "unix"], DirectedEdge["palette", "array"], DirectedEdge["palette", "base"], DirectedEdge["palette", "colour"], DirectedEdge["palette", "containers"], DirectedEdge["palindromes", "array"], DirectedEdge["palindromes", "base"], DirectedEdge["palindromes", "bytestring"], DirectedEdge["palindromes", "containers"], DirectedEdge["pam", "base"], DirectedEdge["panda", "bamboo"], DirectedEdge["panda", "base"], DirectedEdge["panda", "cgi"], DirectedEdge["panda", "containers"], DirectedEdge["panda", "data-default"], DirectedEdge["panda", "directory"], DirectedEdge["panda", "filepath"], DirectedEdge["panda", "gravatar"], DirectedEdge["panda", "hcheat"], DirectedEdge["panda", "kibro"], DirectedEdge["panda", "MissingH"], DirectedEdge["panda", "mps"], DirectedEdge["panda", "network"], DirectedEdge["panda", "old-locale"], DirectedEdge["panda", "old-time"], DirectedEdge["panda", "pandoc"], DirectedEdge["panda", "parsec"], DirectedEdge["panda", "parsedate"], DirectedEdge["panda", "process"], DirectedEdge["panda", "rss"], DirectedEdge["panda", "utf8-string"], DirectedEdge["panda", "xhtml"], DirectedEdge["pandoc", "aeson"], DirectedEdge["pandoc", "array"], DirectedEdge["pandoc", "base"], DirectedEdge["pandoc", "base64-bytestring"], DirectedEdge["pandoc", "binary"], DirectedEdge["pandoc", "blaze-html"], DirectedEdge["pandoc", "blaze-markup"], DirectedEdge["pandoc", "bytestring"], DirectedEdge["pandoc", "cmark"], DirectedEdge["pandoc", "containers"], DirectedEdge["pandoc", "data-default"], DirectedEdge["pandoc", "deepseq"], DirectedEdge["pandoc", "directory"], DirectedEdge["pandoc", "extensible-exceptions"], DirectedEdge["pandoc", "filemanip"], DirectedEdge["pandoc", "filepath"], DirectedEdge["pandoc", "ghc-prim"], DirectedEdge["pandoc", "haddock-library"], DirectedEdge["pandoc", "highlighting-kate"], DirectedEdge["pandoc", "hslua"], DirectedEdge["pandoc", "HTTP"], DirectedEdge["pandoc", "http-client"], DirectedEdge["pandoc", "http-client-tls"], DirectedEdge["pandoc", "http-types"], DirectedEdge["pandoc", "JuicyPixels"], DirectedEdge["pandoc", "mtl"], DirectedEdge["pandoc", "network"], DirectedEdge["pandoc", "network-uri"], DirectedEdge["pandoc", "old-locale"], DirectedEdge["pandoc", "old-time"], DirectedEdge["pandoc", "pandoc"], DirectedEdge["pandoc", "pandoc-types"], DirectedEdge["pandoc", "parsec"], DirectedEdge["pandoc", "process"], DirectedEdge["pandoc", "random"], DirectedEdge["pandoc", "scientific"], DirectedEdge["pandoc", "SHA"], DirectedEdge["pandoc", "syb"], DirectedEdge["pandoc", "tagsoup"], DirectedEdge["pandoc", "temporary"], DirectedEdge["pandoc", "texmath"], DirectedEdge["pandoc", "text"], DirectedEdge["pandoc", "time"], DirectedEdge["pandoc", "unordered-containers"], DirectedEdge["pandoc", "vector"], DirectedEdge["pandoc", "wai"], DirectedEdge["pandoc", "wai-extra"], DirectedEdge["pandoc", "xml"], DirectedEdge["pandoc", "yaml"], DirectedEdge["pandoc", "zip-archive"], DirectedEdge["pandoc", "zlib"], DirectedEdge["pandoc-citeproc", "aeson"], DirectedEdge["pandoc-citeproc", "aeson-pretty"], DirectedEdge["pandoc-citeproc", "attoparsec"], DirectedEdge["pandoc-citeproc", "base"], DirectedEdge["pandoc-citeproc", "bytestring"], DirectedEdge["pandoc-citeproc", "containers"], DirectedEdge["pandoc-citeproc", "data-default"], DirectedEdge["pandoc-citeproc", "directory"], DirectedEdge["pandoc-citeproc", "filepath"], DirectedEdge["pandoc-citeproc", "ghc-prim"], DirectedEdge["pandoc-citeproc", "hs-bibutils"], DirectedEdge["pandoc-citeproc", "mtl"], DirectedEdge["pandoc-citeproc", "old-locale"], DirectedEdge["pandoc-citeproc", "pandoc"], DirectedEdge["pandoc-citeproc", "pandoc-citeproc"], DirectedEdge["pandoc-citeproc", "pandoc-types"], DirectedEdge["pandoc-citeproc", "parsec"], DirectedEdge["pandoc-citeproc", "pretty-show"], DirectedEdge["pandoc-citeproc", "process"], DirectedEdge["pandoc-citeproc", "setenv"], DirectedEdge["pandoc-citeproc", "split"], DirectedEdge["pandoc-citeproc", "syb"], DirectedEdge["pandoc-citeproc", "tagsoup"], DirectedEdge["pandoc-citeproc", "temporary"], DirectedEdge["pandoc-citeproc", "text"], DirectedEdge["pandoc-citeproc", "text-icu"], DirectedEdge["pandoc-citeproc", "time"], DirectedEdge["pandoc-citeproc", "unordered-containers"], DirectedEdge["pandoc-citeproc", "vector"], DirectedEdge["pandoc-citeproc", "xml-conduit"], DirectedEdge["pandoc-citeproc", "yaml"], DirectedEdge["pandoc-citeproc-preamble", "base"], DirectedEdge["pandoc-citeproc-preamble", "directory"], DirectedEdge["pandoc-citeproc-preamble", "filepath"], DirectedEdge["pandoc-citeproc-preamble", "pandoc-types"], DirectedEdge["pandoc-citeproc-preamble", "process"], DirectedEdge["pandoc-crossref", "base"], DirectedEdge["pandoc-crossref", "bytestring"], DirectedEdge["pandoc-crossref", "containers"], DirectedEdge["pandoc-crossref", "data-accessor"], DirectedEdge["pandoc-crossref", "data-accessor-template"], DirectedEdge["pandoc-crossref", "data-accessor-transformers"], DirectedEdge["pandoc-crossref", "data-default"], DirectedEdge["pandoc-crossref", "mtl"], DirectedEdge["pandoc-crossref", "pandoc"], DirectedEdge["pandoc-crossref", "pandoc-crossref"], DirectedEdge["pandoc-crossref", "pandoc-types"], DirectedEdge["pandoc-crossref", "roman-numerals"], DirectedEdge["pandoc-crossref", "syb"], DirectedEdge["pandoc-crossref", "template-haskell"], DirectedEdge["pandoc-crossref", "yaml"], DirectedEdge["pandoc-csv2table", "base"], DirectedEdge["pandoc-csv2table", "csv"], DirectedEdge["pandoc-csv2table", "pandoc"], DirectedEdge["pandoc-csv2table", "pandoc-csv2table"], DirectedEdge["pandoc-csv2table", "pandoc-types"], DirectedEdge["pandoc-csv2table", "text"], DirectedEdge["pandoc-include", "base"], DirectedEdge["pandoc-include", "directory"], DirectedEdge["pandoc-include", "pandoc"], DirectedEdge["pandoc-include", "pandoc-types"], DirectedEdge["pandoc-include", "text"], DirectedEdge["pandoc-japanese-filters", "base"], DirectedEdge["pandoc-japanese-filters", "containers"], DirectedEdge["pandoc-japanese-filters", "data-default"], DirectedEdge["pandoc-japanese-filters", "effin"], DirectedEdge["pandoc-japanese-filters", "HaTeX"], DirectedEdge["pandoc-japanese-filters", "HaTeX-qq"], DirectedEdge["pandoc-japanese-filters", "hxt"], DirectedEdge["pandoc-japanese-filters", "pandoc"], DirectedEdge["pandoc-japanese-filters", "pandoc-types"], DirectedEdge["pandoc-japanese-filters", "shelly"], DirectedEdge["pandoc-japanese-filters", "system-fileio"], DirectedEdge["pandoc-japanese-filters", "system-filepath"], DirectedEdge["pandoc-japanese-filters", "text"], DirectedEdge["pandoc-lens", "base"], DirectedEdge["pandoc-lens", "containers"], DirectedEdge["pandoc-lens", "lens"], DirectedEdge["pandoc-lens", "pandoc-types"], DirectedEdge["pandoc-placetable", "base"], DirectedEdge["pandoc-placetable", "explicit-exception"], DirectedEdge["pandoc-placetable", "http-conduit"], DirectedEdge["pandoc-placetable", "pandoc"], DirectedEdge["pandoc-placetable", "pandoc-types"], DirectedEdge["pandoc-placetable", "spreadsheet"], DirectedEdge["pandoc-placetable", "utf8-string"], DirectedEdge["pandoc-plantuml-diagrams", "base"], DirectedEdge["pandoc-plantuml-diagrams", "bytestring"], DirectedEdge["pandoc-plantuml-diagrams", "directory"], DirectedEdge["pandoc-plantuml-diagrams", "pandoc-plantuml-diagrams"], DirectedEdge["pandoc-plantuml-diagrams", "pandoc-types"], DirectedEdge["pandoc-plantuml-diagrams", "process"], DirectedEdge["pandoc-plantuml-diagrams", "SHA"], DirectedEdge["pandoc-plantuml-diagrams", "utf8-string"], DirectedEdge["pandoc-types", "aeson"], DirectedEdge["pandoc-types", "base"], DirectedEdge["pandoc-types", "bytestring"], DirectedEdge["pandoc-types", "containers"], DirectedEdge["pandoc-types", "deepseq"], DirectedEdge["pandoc-types", "deepseq-generics"], DirectedEdge["pandoc-types", "ghc-prim"], DirectedEdge["pandoc-types", "syb"], DirectedEdge["pandoc-unlit", "markdown-unlit"], DirectedEdge["pandoc-unlit", "base"], DirectedEdge["pandoc-unlit", "pandoc"], DirectedEdge["pango", "array"], DirectedEdge["pango", "base"], DirectedEdge["pango", "cairo"], DirectedEdge["pango", "containers"], DirectedEdge["pango", "directory"], DirectedEdge["pango", "glib"], DirectedEdge["pango", "mtl"], DirectedEdge["pango", "pretty"], DirectedEdge["pango", "process"], DirectedEdge["pango", "text"], DirectedEdge["papillon", "base"], DirectedEdge["papillon", "bytestring"], DirectedEdge["papillon", "directory"], DirectedEdge["papillon", "filepath"], DirectedEdge["papillon", "monads-tf"], DirectedEdge["papillon", "papillon"], DirectedEdge["papillon", "template-haskell"], DirectedEdge["papillon", "transformers"], DirectedEdge["pappy", "base"], DirectedEdge["para", "base"], DirectedEdge["paragon", "array"], DirectedEdge["paragon", "base"], DirectedEdge["paragon", "bytestring"], DirectedEdge["paragon", "containers"], DirectedEdge["paragon", "cpphs"], DirectedEdge["paragon", "directory"], DirectedEdge["paragon", "filepath"], DirectedEdge["paragon", "haskell-src-meta"], DirectedEdge["paragon", "parsec"], DirectedEdge["paragon", "pretty"], DirectedEdge["paragon", "syb"], DirectedEdge["paragon", "template-haskell"], DirectedEdge["paragon", "th-lift"], DirectedEdge["paragon", "uniplate"], DirectedEdge["parallel", "array"], DirectedEdge["parallel", "base"], DirectedEdge["parallel", "containers"], DirectedEdge["parallel", "deepseq"], DirectedEdge["parallel-io", "base"], DirectedEdge["parallel-io", "containers"], DirectedEdge["parallel-io", "extensible-exceptions"], DirectedEdge["parallel-io", "HUnit"], DirectedEdge["parallel-io", "random"], DirectedEdge["parallel-io", "test-framework"], DirectedEdge["parallel-io", "test-framework-hunit"], DirectedEdge["parallel-io", "time"], DirectedEdge["parallel-tasks", "base"], DirectedEdge["parallel-tasks", "bytestring"], DirectedEdge["parallel-tasks", "cereal"], DirectedEdge["parallel-tasks", "deepseq"], DirectedEdge["parallel-tasks", "here"], DirectedEdge["parallel-tasks", "old-locale"], DirectedEdge["parallel-tasks", "stm"], DirectedEdge["parallel-tasks", "time"], DirectedEdge["parallel-tasks", "transformers"], DirectedEdge["parallel-tasks", "vector"], DirectedEdge["parallel-tasks", "vector-algorithms"], DirectedEdge["parallel-tree-search", "base"], DirectedEdge["parallel-tree-search", "parallel"], DirectedEdge["parallel-tree-search", "tree-monad"], DirectedEdge["parameterized-data", "base"], DirectedEdge["parameterized-data", "template-haskell"], DirectedEdge["parameterized-data", "type-level"], DirectedEdge["paranoia", "base"], DirectedEdge["paranoia", "bytestring"], DirectedEdge["paranoia", "directory"], DirectedEdge["paranoia", "filepath"], DirectedEdge["paranoia", "hdaemonize"], DirectedEdge["paranoia", "HsOpenSSL"], DirectedEdge["paranoia", "http-client"], DirectedEdge["paranoia", "http-client-openssl"], DirectedEdge["paranoia", "http-types"], DirectedEdge["paranoia", "network"], DirectedEdge["paranoia", "optparse-applicative"], DirectedEdge["paranoia", "paranoia"], DirectedEdge["paranoia", "split"], DirectedEdge["paranoia", "streaming-commons"], DirectedEdge["paranoia", "text"], DirectedEdge["paranoia", "time"], DirectedEdge["paranoia", "unix"], DirectedEdge["paranoia", "wai"], DirectedEdge["paranoia", "warp"], DirectedEdge["parco", "base"], DirectedEdge["parco", "mtl"], DirectedEdge["parco-attoparsec", "attoparsec"], DirectedEdge["parco-attoparsec", "base"], DirectedEdge["parco-attoparsec", "mtl"], DirectedEdge["parco-attoparsec", "parco"], DirectedEdge["parco-parsec", "base"], DirectedEdge["parco-parsec", "mtl"], DirectedEdge["parco-parsec", "parco"], DirectedEdge["parco-parsec", "parsec"], DirectedEdge["parcom-lib", "base"], DirectedEdge["parcom-lib", "bytestring"], DirectedEdge["parcom-lib", "containers"], DirectedEdge["parcom-lib", "mtl"], DirectedEdge["parcom-lib", "text"], DirectedEdge["parcom-lib", "transformers"], DirectedEdge["parcom-lib", "utf8-string"], DirectedEdge["parconc-examples", "abstract-par"], DirectedEdge["parconc-examples", "accelerate"], DirectedEdge["parconc-examples", "accelerate-cuda"], DirectedEdge["parconc-examples", "accelerate-io"], DirectedEdge["parconc-examples", "array"], DirectedEdge["parconc-examples", "async"], DirectedEdge["parconc-examples", "base"], DirectedEdge["parconc-examples", "binary"], DirectedEdge["parconc-examples", "bytestring"], DirectedEdge["parconc-examples", "containers"], DirectedEdge["parconc-examples", "deepseq"], DirectedEdge["parconc-examples", "directory"], DirectedEdge["parconc-examples", "distributed-process"], DirectedEdge["parconc-examples", "distributed-process-simplelocalnet"], DirectedEdge["parconc-examples", "distributed-static"], DirectedEdge["parconc-examples", "fclabels"], DirectedEdge["parconc-examples", "filepath"], DirectedEdge["parconc-examples", "ghc-prim"], DirectedEdge["parconc-examples", "HTTP"], DirectedEdge["parconc-examples", "monad-par"], DirectedEdge["parconc-examples", "network"], DirectedEdge["parconc-examples", "network-uri"], DirectedEdge["parconc-examples", "normaldistribution"], DirectedEdge["parconc-examples", "parallel"], DirectedEdge["parconc-examples", "random"], DirectedEdge["parconc-examples", "repa"], DirectedEdge["parconc-examples", "repa-devil"], DirectedEdge["parconc-examples", "stm"], DirectedEdge["parconc-examples", "template-haskell"], DirectedEdge["parconc-examples", "time"], DirectedEdge["parconc-examples", "transformers"], DirectedEdge["parconc-examples", "utf8-string"], DirectedEdge["parconc-examples", "vector"], DirectedEdge["parconc-examples", "xml"], DirectedEdge["parport", "array"], DirectedEdge["parport", "base"], DirectedEdge["parse-dimacs", "array"], DirectedEdge["parse-dimacs", "base"], DirectedEdge["parse-dimacs", "bytestring"], DirectedEdge["parse-dimacs", "parsec"], DirectedEdge["parse-help", "attoparsec"], DirectedEdge["parse-help", "base"], DirectedEdge["parse-help", "containers"], DirectedEdge["parse-help", "data-default"], DirectedEdge["parse-help", "file-location"], DirectedEdge["parse-help", "template-haskell"], DirectedEdge["parse-help", "text"], DirectedEdge["parse-help", "th-lift"], DirectedEdge["parseargs", "base"], DirectedEdge["parseargs", "containers"], DirectedEdge["parsec", "base"], DirectedEdge["parsec", "bytestring"], DirectedEdge["parsec", "mtl"], DirectedEdge["parsec", "text"], DirectedEdge["parsec-extra", "base"], DirectedEdge["parsec-extra", "monads-tf"], DirectedEdge["parsec-extra", "parsec"], DirectedEdge["parsec-extra", "transformers"], DirectedEdge["parsec-numbers", "base"], DirectedEdge["parsec-numbers", "parsec"], DirectedEdge["parsec-parsers", "parsers"], DirectedEdge["parsec-parsers", "base"], DirectedEdge["parsec-parsers", "parsec"], DirectedEdge["parsec-parsers", "parsers"], DirectedEdge["parsec-permutation", "base"], DirectedEdge["parsec-permutation", "parsec"], DirectedEdge["parsec-tagsoup", "base"], DirectedEdge["parsec-tagsoup", "parsec"], DirectedEdge["parsec-tagsoup", "tagsoup"], DirectedEdge["parsec-trace", "base"], DirectedEdge["parsec-trace", "containers"], DirectedEdge["parsec-trace", "mtl"], DirectedEdge["parsec-trace", "parsec"], DirectedEdge["parsec-utils", "base"], DirectedEdge["parsec-utils", "parsec"], DirectedEdge["parsec1", "base"], DirectedEdge["parsec2", "base"], DirectedEdge["parsec3", "base"], DirectedEdge["parsec3", "bytestring"], DirectedEdge["parsec3", "mtl"], DirectedEdge["parsec3", "text"], DirectedEdge["parsec3-numbers", "base"], DirectedEdge["parsec3-numbers", "parsec"], DirectedEdge["parsedate", "base"], DirectedEdge["parsedate", "old-locale"], DirectedEdge["parsedate", "old-time"], DirectedEdge["parsedate", "parsec"], DirectedEdge["parseerror-eq", "base"], DirectedEdge["parseerror-eq", "parsec"], DirectedEdge["parsek", "base"], DirectedEdge["parsely", "base"], DirectedEdge["parsely", "mtl"], DirectedEdge["parsely", "parsec"], DirectedEdge["parser-helper", "aeson"], DirectedEdge["parser-helper", "base"], DirectedEdge["parser-helper", "bytestring"], DirectedEdge["parser-helper", "haskell-src-exts"], DirectedEdge["parser-helper", "text"], DirectedEdge["parser241", "base"], DirectedEdge["parser241", "containers"], DirectedEdge["parser241", "mtl"], DirectedEdge["parsergen", "base"], DirectedEdge["parsergen", "bytestring"], DirectedEdge["parsergen", "directory"], DirectedEdge["parsergen", "filepath"], DirectedEdge["parsergen", "parsec"], DirectedEdge["parsergen", "template-haskell"], DirectedEdge["parsers", "attoparsec"], DirectedEdge["parsers", "base"], DirectedEdge["parsers", "base-orphans"], DirectedEdge["parsers", "charset"], DirectedEdge["parsers", "containers"], DirectedEdge["parsers", "parsec"], DirectedEdge["parsers", "scientific"], DirectedEdge["parsers", "text"], DirectedEdge["parsers", "transformers"], DirectedEdge["parsers", "unordered-containers"], DirectedEdge["parsestar", "array"], DirectedEdge["parsestar", "base"], DirectedEdge["parsestar", "binary"], DirectedEdge["parsestar", "bytestring"], DirectedEdge["parsestar", "bytestring-mmap"], DirectedEdge["parsestar", "bytestring-nums"], DirectedEdge["parsestar", "bytestring-show"], DirectedEdge["parsestar", "containers"], DirectedEdge["parsestar", "deepseq"], DirectedEdge["parsestar", "derive"], DirectedEdge["parsestar", "mtl"], DirectedEdge["parsestar", "parsestar"], DirectedEdge["parsestar", "zlib"], DirectedEdge["parsimony", "base"], DirectedEdge["parsimony", "bytestring"], DirectedEdge["parsimony", "text"], DirectedEdge["partage", "base"], DirectedEdge["partage", "containers"], DirectedEdge["partage", "data-lens-light"], DirectedEdge["partage", "data-partition"], DirectedEdge["partage", "dawg-ord"], DirectedEdge["partage", "mmorph"], DirectedEdge["partage", "mtl"], DirectedEdge["partage", "pipes"], DirectedEdge["partage", "PSQueue"], DirectedEdge["partage", "random"], DirectedEdge["partage", "transformers"], DirectedEdge["partage", "vector"], DirectedEdge["partial", "base"], DirectedEdge["partial-handler", "base"], DirectedEdge["partial-isomorphisms", "base"], DirectedEdge["partial-isomorphisms", "template-haskell"], DirectedEdge["partial-lens", "data-lens"], DirectedEdge["partial-lens", "base"], DirectedEdge["partial-lens", "comonad-transformers"], DirectedEdge["partial-lens", "data-lens"], DirectedEdge["partial-lens", "transformers"], DirectedEdge["partial-uri", "base"], DirectedEdge["partial-uri", "network-uri"], DirectedEdge["partly", "aeson"], DirectedEdge["partly", "aeson-pretty"], DirectedEdge["partly", "base"], DirectedEdge["partly", "base64-bytestring"], DirectedEdge["partly", "binary"], DirectedEdge["partly", "bytestring"], DirectedEdge["partly", "optparse-applicative"], DirectedEdge["partly", "vector"], DirectedEdge["passage", "array"], DirectedEdge["passage", "base"], DirectedEdge["passage", "containers"], DirectedEdge["passage", "directory"], DirectedEdge["passage", "filepath"], DirectedEdge["passage", "GraphSCC"], DirectedEdge["passage", "monadLib"], DirectedEdge["passage", "mwc-random"], DirectedEdge["passage", "pretty"], DirectedEdge["passage", "primitive"], DirectedEdge["passage", "process"], DirectedEdge["passage", "random"], DirectedEdge["passwords", "base"], DirectedEdge["passwords", "containers"], DirectedEdge["passwords", "MonadRandom"], DirectedEdge["passwords", "random"], DirectedEdge["pastis", "base"], DirectedEdge["pastis", "HTTP"], DirectedEdge["pastis", "network"], DirectedEdge["pasty", "base"], DirectedEdge["pasty", "bytestring"], DirectedEdge["pasty", "mtl"], DirectedEdge["patch-combinators", "base"], DirectedEdge["patch-image", "accelerate"], DirectedEdge["patch-image", "accelerate-arithmetic"], DirectedEdge["patch-image", "accelerate-cuda"], DirectedEdge["patch-image", "accelerate-fft"], DirectedEdge["patch-image", "accelerate-io"], DirectedEdge["patch-image", "accelerate-utility"], DirectedEdge["patch-image", "base"], DirectedEdge["patch-image", "Cabal"], DirectedEdge["patch-image", "filepath"], DirectedEdge["patch-image", "GeomAlgLib"], DirectedEdge["patch-image", "gnuplot"], DirectedEdge["patch-image", "hmatrix"], DirectedEdge["patch-image", "JuicyPixels"], DirectedEdge["patch-image", "utility-ht"], DirectedEdge["patch-image", "vector"], DirectedEdge["patches-vector", "base"], DirectedEdge["patches-vector", "edit-distance-vector"], DirectedEdge["patches-vector", "microlens"], DirectedEdge["patches-vector", "vector"], DirectedEdge["path", "base"], DirectedEdge["path", "deepseq"], DirectedEdge["path", "exceptions"], DirectedEdge["path", "filepath"], DirectedEdge["path", "template-haskell"], DirectedEdge["path-extra", "base"], DirectedEdge["path-extra", "exceptions"], DirectedEdge["path-extra", "path"], DirectedEdge["path-io", "base"], DirectedEdge["path-io", "directory"], DirectedEdge["path-io", "exceptions"], DirectedEdge["path-io", "filepath"], DirectedEdge["path-io", "path"], DirectedEdge["path-io", "temporary"], DirectedEdge["path-io", "time"], DirectedEdge["path-io", "transformers"], DirectedEdge["path-pieces", "base"], DirectedEdge["path-pieces", "text"], DirectedEdge["path-pieces", "time"], DirectedEdge["pathfinding", "base"], DirectedEdge["pathfinding", "containers"], DirectedEdge["pathfindingcore", "array"], DirectedEdge["pathfindingcore", "base"], DirectedEdge["pathfindingcore", "split"], DirectedEdge["pathtype", "base"], DirectedEdge["pathtype", "deepseq"], DirectedEdge["pathtype", "directory"], DirectedEdge["pathtype", "old-time"], DirectedEdge["pathtype", "QuickCheck"], DirectedEdge["pathtype", "tagged"], DirectedEdge["pathtype", "time"], DirectedEdge["pathtype", "transformers"], DirectedEdge["pathtype", "utility-ht"], DirectedEdge["pathwalk", "base"], DirectedEdge["pathwalk", "directory"], DirectedEdge["pathwalk", "filepath"], DirectedEdge["pathwalk", "transformers"], DirectedEdge["patience", "base"], DirectedEdge["patience", "containers"], DirectedEdge["patronscraper", "base"], DirectedEdge["patronscraper", "HandsomeSoup"], DirectedEdge["patronscraper", "hxt"], DirectedEdge["pattern-arrows", "base"], DirectedEdge["pattern-arrows", "mtl"], DirectedEdge["patterns", "base"], DirectedEdge["patterns", "bytestring"], DirectedEdge["patterns", "conduit"], DirectedEdge["patterns", "containers"], DirectedEdge["patterns", "mtl"], DirectedEdge["patterns", "time"], DirectedEdge["patterns", "utf8-string"], DirectedEdge["patterns", "zeromq-haskell"], DirectedEdge["paymill", "base"], DirectedEdge["paypal-adaptive-hoops", "aeson"], DirectedEdge["paypal-adaptive-hoops", "base"], DirectedEdge["paypal-adaptive-hoops", "bytestring"], DirectedEdge["paypal-adaptive-hoops", "errors"], DirectedEdge["paypal-adaptive-hoops", "http-client"], DirectedEdge["paypal-adaptive-hoops", "lens"], DirectedEdge["paypal-adaptive-hoops", "lens-aeson"], DirectedEdge["paypal-adaptive-hoops", "paypal-adaptive-hoops"], DirectedEdge["paypal-adaptive-hoops", "text"], DirectedEdge["paypal-adaptive-hoops", "time"], DirectedEdge["paypal-adaptive-hoops", "transformers"], DirectedEdge["paypal-adaptive-hoops", "vector"], DirectedEdge["paypal-adaptive-hoops", "wreq"], DirectedEdge["paypal-api", "base"], DirectedEdge["paypal-api", "bytestring"], DirectedEdge["paypal-api", "conduit"], DirectedEdge["paypal-api", "containers"], DirectedEdge["paypal-api", "failure"], DirectedEdge["paypal-api", "http-conduit"], DirectedEdge["paypal-api", "http-types"], DirectedEdge["paypal-api", "mtl"], DirectedEdge["paypal-api", "old-locale"], DirectedEdge["paypal-api", "text"], DirectedEdge["paypal-api", "time"], DirectedEdge["paypal-api", "wai"], DirectedEdge["pb", "base"], DirectedEdge["pb", "containers"], DirectedEdge["pb", "HTTP"], DirectedEdge["pb", "network"], DirectedEdge["pb", "process"], DirectedEdge["pbc4hs", "base"], DirectedEdge["pbc4hs", "hslua"], DirectedEdge["pbc4hs", "string-qq"], DirectedEdge["pbkdf", "base"], DirectedEdge["pbkdf", "binary"], DirectedEdge["pbkdf", "byteable"], DirectedEdge["pbkdf", "bytedump"], DirectedEdge["pbkdf", "bytestring"], DirectedEdge["pbkdf", "cryptohash"], DirectedEdge["pbkdf", "utf8-string"], DirectedEdge["pcap", "base"], DirectedEdge["pcap", "bytestring"], DirectedEdge["pcap", "network"], DirectedEdge["pcap", "time"], DirectedEdge["pcap-conduit", "base"], DirectedEdge["pcap-conduit", "bytestring"], DirectedEdge["pcap-conduit", "conduit"], DirectedEdge["pcap-conduit", "pcap"], DirectedEdge["pcap-conduit", "transformers"], DirectedEdge["pcap-enumerator", "base"], DirectedEdge["pcap-enumerator", "bytestring"], DirectedEdge["pcap-enumerator", "enumerator"], DirectedEdge["pcap-enumerator", "pcap"], DirectedEdge["pcap-enumerator", "transformers"], DirectedEdge["pcd-loader", "attoparsec"], DirectedEdge["pcd-loader", "base"], DirectedEdge["pcd-loader", "binary"], DirectedEdge["pcd-loader", "bytestring"], DirectedEdge["pcd-loader", "deepseq"], DirectedEdge["pcd-loader", "lens"], DirectedEdge["pcd-loader", "linear"], DirectedEdge["pcd-loader", "mtl"], DirectedEdge["pcd-loader", "pcd-loader"], DirectedEdge["pcd-loader", "text"], DirectedEdge["pcd-loader", "vector"], DirectedEdge["pcf", "base"], DirectedEdge["pcf", "bound"], DirectedEdge["pcf", "c-dsl"], DirectedEdge["pcf", "containers"], DirectedEdge["pcf", "monad-gen"], DirectedEdge["pcf", "mtl"], DirectedEdge["pcf", "prelude-extras"], DirectedEdge["pcf", "transformers"], DirectedEdge["pcf", "void"], DirectedEdge["pcg-random", "base"], DirectedEdge["pcg-random", "bytestring"], DirectedEdge["pcg-random", "entropy"], DirectedEdge["pcg-random", "primitive"], DirectedEdge["pcg-random", "random"], DirectedEdge["pcg-random", "time"], DirectedEdge["pcre-heavy", "base"], DirectedEdge["pcre-heavy", "base-compat"], DirectedEdge["pcre-heavy", "bytestring"], DirectedEdge["pcre-heavy", "pcre-light"], DirectedEdge["pcre-heavy", "semigroups"], DirectedEdge["pcre-heavy", "string-conversions"], DirectedEdge["pcre-heavy", "template-haskell"], DirectedEdge["pcre-less", "array"], DirectedEdge["pcre-less", "base"], DirectedEdge["pcre-less", "regex-pcre"], DirectedEdge["pcre-light", "base"], DirectedEdge["pcre-light", "bytestring"], DirectedEdge["pcre-light-extra", "base"], DirectedEdge["pcre-light-extra", "bytestring"], DirectedEdge["pcre-light-extra", "pcre-light"], DirectedEdge["pcre-utils", "array"], DirectedEdge["pcre-utils", "attoparsec"], DirectedEdge["pcre-utils", "base"], DirectedEdge["pcre-utils", "bytestring"], DirectedEdge["pcre-utils", "mtl"], DirectedEdge["pcre-utils", "regex-pcre-builtin"], DirectedEdge["pcre-utils", "vector"], DirectedEdge["pdf-toolbox-content", "attoparsec"], DirectedEdge["pdf-toolbox-content", "base"], DirectedEdge["pdf-toolbox-content", "base16-bytestring"], DirectedEdge["pdf-toolbox-content", "bytestring"], DirectedEdge["pdf-toolbox-content", "containers"], DirectedEdge["pdf-toolbox-content", "io-streams"], DirectedEdge["pdf-toolbox-content", "pdf-toolbox-core"], DirectedEdge["pdf-toolbox-content", "text"], DirectedEdge["pdf-toolbox-core", "attoparsec"], DirectedEdge["pdf-toolbox-core", "base"], DirectedEdge["pdf-toolbox-core", "bytestring"], DirectedEdge["pdf-toolbox-core", "containers"], DirectedEdge["pdf-toolbox-core", "errors"], DirectedEdge["pdf-toolbox-core", "io-streams"], DirectedEdge["pdf-toolbox-core", "scientific"], DirectedEdge["pdf-toolbox-core", "transformers"], DirectedEdge["pdf-toolbox-core", "zlib-bindings"], DirectedEdge["pdf-toolbox-document", "base"], DirectedEdge["pdf-toolbox-document", "bytestring"], DirectedEdge["pdf-toolbox-document", "cipher-aes"], DirectedEdge["pdf-toolbox-document", "containers"], DirectedEdge["pdf-toolbox-document", "crypto-api"], DirectedEdge["pdf-toolbox-document", "cryptohash"], DirectedEdge["pdf-toolbox-document", "io-streams"], DirectedEdge["pdf-toolbox-document", "pdf-toolbox-content"], DirectedEdge["pdf-toolbox-document", "pdf-toolbox-core"], DirectedEdge["pdf-toolbox-document", "text"], DirectedEdge["pdf-toolbox-document", "transformers"], DirectedEdge["pdf-toolbox-viewer", "base"], DirectedEdge["pdf-toolbox-viewer", "bytestring"], DirectedEdge["pdf-toolbox-viewer", "cairo"], DirectedEdge["pdf-toolbox-viewer", "containers"], DirectedEdge["pdf-toolbox-viewer", "directory"], DirectedEdge["pdf-toolbox-viewer", "filepath"], DirectedEdge["pdf-toolbox-viewer", "gtk"], DirectedEdge["pdf-toolbox-viewer", "io-streams"], DirectedEdge["pdf-toolbox-viewer", "pdf-toolbox-content"], DirectedEdge["pdf-toolbox-viewer", "pdf-toolbox-document"], DirectedEdge["pdf-toolbox-viewer", "process"], DirectedEdge["pdf-toolbox-viewer", "random"], DirectedEdge["pdf-toolbox-viewer", "text"], DirectedEdge["pdf-toolbox-viewer", "transformers"], DirectedEdge["pdf2line", "base"], DirectedEdge["pdf2line", "binary"], DirectedEdge["pdf2line", "bytestring"], DirectedEdge["pdf2line", "containers"], DirectedEdge["pdf2line", "filepath"], DirectedEdge["pdf2line", "FindBin"], DirectedEdge["pdf2line", "process"], DirectedEdge["pdfinfo", "base"], DirectedEdge["pdfinfo", "mtl"], DirectedEdge["pdfinfo", "old-locale"], DirectedEdge["pdfinfo", "process-extras"], DirectedEdge["pdfinfo", "text"], DirectedEdge["pdfinfo", "time"], DirectedEdge["pdfinfo", "time-locale-compat"], DirectedEdge["pdfsplit", "base"], DirectedEdge["pdfsplit", "directory"], DirectedEdge["pdfsplit", "pdfinfo"], DirectedEdge["pdfsplit", "process"], DirectedEdge["pdfsplit", "temporary"], DirectedEdge["pdynload", "base"], DirectedEdge["pdynload", "directory"], DirectedEdge["pdynload", "filepath"], DirectedEdge["pdynload", "ghc"], DirectedEdge["pdynload", "ghc-paths"], DirectedEdge["pdynload", "old-time"], DirectedEdge["pdynload", "process"], DirectedEdge["peakachu", "base"], DirectedEdge["peakachu", "derive"], DirectedEdge["peakachu", "GLUT"], DirectedEdge["peakachu", "List"], DirectedEdge["peakachu", "template-haskell"], DirectedEdge["peakachu", "time"], DirectedEdge["peakachu", "TypeCompose"], DirectedEdge["peano", "base"], DirectedEdge["peano-inf", "base"], DirectedEdge["peano-inf", "containers"], DirectedEdge["peano-inf", "lazysmallcheck"], DirectedEdge["pec", "array"], DirectedEdge["pec", "base"], DirectedEdge["pec", "Cabal"], DirectedEdge["pec", "cmdargs"], DirectedEdge["pec", "containers"], DirectedEdge["pec", "deepseq"], DirectedEdge["pec", "derive"], DirectedEdge["pec", "directory"], DirectedEdge["pec", "filepath"], DirectedEdge["pec", "grm"], DirectedEdge["pec", "mtl"], DirectedEdge["pec", "old-time"], DirectedEdge["pec", "pec"], DirectedEdge["pec", "process"], DirectedEdge["pec", "shake"], DirectedEdge["pec", "syb"], DirectedEdge["pec", "uniplate"], DirectedEdge["pec", "wl-pprint"], DirectedEdge["pecoff", "base"], DirectedEdge["pecoff", "binary"], DirectedEdge["pecoff", "bytestring"], DirectedEdge["pecoff", "containers"], DirectedEdge["peg", "base"], DirectedEdge["peg", "containers"], DirectedEdge["peg", "filepath"], DirectedEdge["peg", "haskeline"], DirectedEdge["peg", "logict"], DirectedEdge["peg", "mtl"], DirectedEdge["peg", "parsec"], DirectedEdge["peggy", "base"], DirectedEdge["peggy", "hashtables"], DirectedEdge["peggy", "haskell-src-meta"], DirectedEdge["peggy", "ListLike"], DirectedEdge["peggy", "monad-control"], DirectedEdge["peggy", "mtl"], DirectedEdge["peggy", "peggy"], DirectedEdge["peggy", "template-haskell"], DirectedEdge["pell", "arithmoi"], DirectedEdge["pell", "base"], DirectedEdge["pell", "containers"], DirectedEdge["pem", "base"], DirectedEdge["pem", "base64-bytestring"], DirectedEdge["pem", "bytestring"], DirectedEdge["pem", "mtl"], DirectedEdge["penn-treebank", "base"], DirectedEdge["penn-treebank", "containers"], DirectedEdge["penn-treebank", "parsec"], DirectedEdge["penny", "action-permutations"], DirectedEdge["penny", "anonymous-sums"], DirectedEdge["penny", "base"], DirectedEdge["penny", "bytestring"], DirectedEdge["penny", "cereal"], DirectedEdge["penny", "containers"], DirectedEdge["penny", "contravariant"], DirectedEdge["penny", "either"], DirectedEdge["penny", "matchers"], DirectedEdge["penny", "multiarg"], DirectedEdge["penny", "ofx"], DirectedEdge["penny", "old-locale"], DirectedEdge["penny", "parsec"], DirectedEdge["penny", "penny"], DirectedEdge["penny", "prednote"], DirectedEdge["penny", "QuickCheck"], DirectedEdge["penny", "rainbow"], DirectedEdge["penny", "rainbox"], DirectedEdge["penny", "random"], DirectedEdge["penny", "random-shuffle"], DirectedEdge["penny", "semigroups"], DirectedEdge["penny", "split"], DirectedEdge["penny", "text"], DirectedEdge["penny", "time"], DirectedEdge["penny", "transformers"], DirectedEdge["penny-bin", "penny"], DirectedEdge["penny-bin", "base"], DirectedEdge["penny-bin", "containers"], DirectedEdge["penny-bin", "explicit-exception"], DirectedEdge["penny-bin", "multiarg"], DirectedEdge["penny-bin", "parsec"], DirectedEdge["penny-bin", "penny-lib"], DirectedEdge["penny-bin", "pretty-show"], DirectedEdge["penny-bin", "semigroups"], DirectedEdge["penny-bin", "text"], DirectedEdge["penny-bin", "transformers"], DirectedEdge["penny-lib", "penny"], DirectedEdge["penny-lib", "action-permutations"], DirectedEdge["penny-lib", "base"], DirectedEdge["penny-lib", "binary"], DirectedEdge["penny-lib", "bytestring"], DirectedEdge["penny-lib", "cereal"], DirectedEdge["penny-lib", "containers"], DirectedEdge["penny-lib", "explicit-exception"], DirectedEdge["penny-lib", "matchers"], DirectedEdge["penny-lib", "multiarg"], DirectedEdge["penny-lib", "ofx"], DirectedEdge["penny-lib", "old-locale"], DirectedEdge["penny-lib", "parsec"], DirectedEdge["penny-lib", "prednote"], DirectedEdge["penny-lib", "pretty-show"], DirectedEdge["penny-lib", "QuickCheck"], DirectedEdge["penny-lib", "rainbow"], DirectedEdge["penny-lib", "random"], DirectedEdge["penny-lib", "random-shuffle"], DirectedEdge["penny-lib", "semigroups"], DirectedEdge["penny-lib", "split"], DirectedEdge["penny-lib", "text"], DirectedEdge["penny-lib", "time"], DirectedEdge["penny-lib", "transformers"], DirectedEdge["peparser", "base"], DirectedEdge["peparser", "binary"], DirectedEdge["peparser", "bytestring"], DirectedEdge["perceptron", "base"], DirectedEdge["perdure", "array"], DirectedEdge["perdure", "base"], DirectedEdge["perdure", "binary"], DirectedEdge["perdure", "bytestring"], DirectedEdge["perdure", "cognimeta-utils"], DirectedEdge["perdure", "collections-api"], DirectedEdge["perdure", "comonad-transformers"], DirectedEdge["perdure", "containers"], DirectedEdge["perdure", "cryptohash"], DirectedEdge["perdure", "data-lens"], DirectedEdge["perdure", "data-lens-fd"], DirectedEdge["perdure", "data-lens-template"], DirectedEdge["perdure", "filepath"], DirectedEdge["perdure", "ghc-prim"], DirectedEdge["perdure", "MonadRandom"], DirectedEdge["perdure", "mtl"], DirectedEdge["perdure", "perdure"], DirectedEdge["perdure", "primitive"], DirectedEdge["perdure", "QuickCheck"], DirectedEdge["perdure", "stm"], DirectedEdge["perdure", "strict"], DirectedEdge["perdure", "tagged"], DirectedEdge["perdure", "template-haskell"], DirectedEdge["perdure", "time"], DirectedEdge["perdure", "transformers"], DirectedEdge["perdure", "unix"], DirectedEdge["perfecthash", "array"], DirectedEdge["perfecthash", "base"], DirectedEdge["perfecthash", "bytestring"], DirectedEdge["perfecthash", "cmph"], DirectedEdge["perfecthash", "containers"], DirectedEdge["perfecthash", "time"], DirectedEdge["period", "base"], DirectedEdge["period", "old-locale"], DirectedEdge["period", "optparse-applicative"], DirectedEdge["period", "parsec"], DirectedEdge["period", "period"], DirectedEdge["period", "text"], DirectedEdge["period", "text-show"], DirectedEdge["period", "time"], DirectedEdge["perm", "base"], DirectedEdge["perm", "catch-fd"], DirectedEdge["perm", "mtl"], DirectedEdge["perm", "transformers"], DirectedEdge["permutation", "base"], DirectedEdge["permutation", "ghc-prim"], DirectedEdge["permutation", "QuickCheck"], DirectedEdge["permute", "base"], DirectedEdge["permute", "mtl"], DirectedEdge["persist2er", "base"], DirectedEdge["persist2er", "optparse-applicative"], DirectedEdge["persist2er", "persistent"], DirectedEdge["persist2er", "text"], DirectedEdge["persistable-record", "array"], DirectedEdge["persistable-record", "base"], DirectedEdge["persistable-record", "containers"], DirectedEdge["persistable-record", "dlist"], DirectedEdge["persistable-record", "names-th"], DirectedEdge["persistable-record", "template-haskell"], DirectedEdge["persistable-record", "transformers"], DirectedEdge["persistable-types-HDBC-pg", "base"], DirectedEdge["persistable-types-HDBC-pg", "bytestring"], DirectedEdge["persistable-types-HDBC-pg", "convertible"], DirectedEdge["persistable-types-HDBC-pg", "HDBC"], DirectedEdge["persistable-types-HDBC-pg", "persistable-record"], DirectedEdge["persistable-types-HDBC-pg", "relational-query-HDBC"], DirectedEdge["persistable-types-HDBC-pg", "text-postgresql"], DirectedEdge["persistent", "aeson"], DirectedEdge["persistent", "attoparsec"], DirectedEdge["persistent", "base"], DirectedEdge["persistent", "base64-bytestring"], DirectedEdge["persistent", "blaze-html"], DirectedEdge["persistent", "blaze-markup"], DirectedEdge["persistent", "bytestring"], DirectedEdge["persistent", "conduit"], DirectedEdge["persistent", "containers"], DirectedEdge["persistent", "exceptions"], DirectedEdge["persistent", "fast-logger"], DirectedEdge["persistent", "http-api-data"], DirectedEdge["persistent", "lifted-base"], DirectedEdge["persistent", "monad-control"], DirectedEdge["persistent", "monad-logger"], DirectedEdge["persistent", "mtl"], DirectedEdge["persistent", "old-locale"], DirectedEdge["persistent", "path-pieces"], DirectedEdge["persistent", "resource-pool"], DirectedEdge["persistent", "resourcet"], DirectedEdge["persistent", "scientific"], DirectedEdge["persistent", "silently"], DirectedEdge["persistent", "tagged"], DirectedEdge["persistent", "template-haskell"], DirectedEdge["persistent", "text"], DirectedEdge["persistent", "time"], DirectedEdge["persistent", "transformers"], DirectedEdge["persistent", "transformers-base"], DirectedEdge["persistent", "unordered-containers"], DirectedEdge["persistent", "vector"], DirectedEdge["persistent-audit", "attoparsec"], DirectedEdge["persistent-audit", "base"], DirectedEdge["persistent-audit", "bytestring"], DirectedEdge["persistent-audit", "getopt-generics"], DirectedEdge["persistent-audit", "mongoDB"], DirectedEdge["persistent-audit", "persistent"], DirectedEdge["persistent-audit", "persistent-mongoDB"], DirectedEdge["persistent-audit", "persistent-template"], DirectedEdge["persistent-audit", "text"], DirectedEdge["persistent-audit", "time"], DirectedEdge["persistent-audit", "transformers"], DirectedEdge["persistent-cereal", "base"], DirectedEdge["persistent-cereal", "cereal"], DirectedEdge["persistent-cereal", "persistent"], DirectedEdge["persistent-cereal", "text"], DirectedEdge["persistent-database-url", "base"], DirectedEdge["persistent-database-url", "bytestring"], DirectedEdge["persistent-database-url", "fail"], DirectedEdge["persistent-database-url", "persistent-postgresql"], DirectedEdge["persistent-database-url", "string-conversions"], DirectedEdge["persistent-database-url", "text"], DirectedEdge["persistent-database-url", "uri-bytestring"], DirectedEdge["persistent-equivalence", "array"], DirectedEdge["persistent-equivalence", "base"], DirectedEdge["persistent-equivalence", "diffarray"], DirectedEdge["persistent-hssqlppp", "base"], DirectedEdge["persistent-hssqlppp", "bytestring"], DirectedEdge["persistent-hssqlppp", "hssqlppp"], DirectedEdge["persistent-hssqlppp", "monad-control"], DirectedEdge["persistent-hssqlppp", "mtl"], DirectedEdge["persistent-hssqlppp", "persistent"], DirectedEdge["persistent-hssqlppp", "persistent-template"], DirectedEdge["persistent-hssqlppp", "template-haskell"], DirectedEdge["persistent-hssqlppp", "text"], DirectedEdge["persistent-hssqlppp", "th-lift"], DirectedEdge["persistent-instances-iproute", "base"], DirectedEdge["persistent-instances-iproute", "bytestring"], DirectedEdge["persistent-instances-iproute", "iproute"], DirectedEdge["persistent-instances-iproute", "persistent"], DirectedEdge["persistent-iproute", "aeson"], DirectedEdge["persistent-iproute", "aeson-iproute"], DirectedEdge["persistent-iproute", "base"], DirectedEdge["persistent-iproute", "bytestring"], DirectedEdge["persistent-iproute", "http-api-data"], DirectedEdge["persistent-iproute", "iproute"], DirectedEdge["persistent-iproute", "path-pieces"], DirectedEdge["persistent-iproute", "persistent"], DirectedEdge["persistent-iproute", "text"], DirectedEdge["persistent-map", "tbox"], DirectedEdge["persistent-map", "base"], DirectedEdge["persistent-map", "binary"], DirectedEdge["persistent-map", "containers"], DirectedEdge["persistent-map", "directory"], DirectedEdge["persistent-map", "EdisonAPI"], DirectedEdge["persistent-map", "EdisonCore"], DirectedEdge["persistent-map", "filepath"], DirectedEdge["persistent-map", "LRU"], DirectedEdge["persistent-map", "mtl"], DirectedEdge["persistent-map", "stm-io-hooks"], DirectedEdge["persistent-mongoDB", "aeson"], DirectedEdge["persistent-mongoDB", "attoparsec"], DirectedEdge["persistent-mongoDB", "base"], DirectedEdge["persistent-mongoDB", "bson"], DirectedEdge["persistent-mongoDB", "bytestring"], DirectedEdge["persistent-mongoDB", "cereal"], DirectedEdge["persistent-mongoDB", "conduit"], DirectedEdge["persistent-mongoDB", "containers"], DirectedEdge["persistent-mongoDB", "http-api-data"], DirectedEdge["persistent-mongoDB", "monad-control"], DirectedEdge["persistent-mongoDB", "mongoDB"], DirectedEdge["persistent-mongoDB", "network"], DirectedEdge["persistent-mongoDB", "path-pieces"], DirectedEdge["persistent-mongoDB", "persistent"], DirectedEdge["persistent-mongoDB", "resource-pool"], DirectedEdge["persistent-mongoDB", "resourcet"], DirectedEdge["persistent-mongoDB", "text"], DirectedEdge["persistent-mongoDB", "time"], DirectedEdge["persistent-mongoDB", "transformers"], DirectedEdge["persistent-mysql", "aeson"], DirectedEdge["persistent-mysql", "base"], DirectedEdge["persistent-mysql", "blaze-builder"], DirectedEdge["persistent-mysql", "bytestring"], DirectedEdge["persistent-mysql", "conduit"], DirectedEdge["persistent-mysql", "containers"], DirectedEdge["persistent-mysql", "monad-control"], DirectedEdge["persistent-mysql", "monad-logger"], DirectedEdge["persistent-mysql", "mysql"], DirectedEdge["persistent-mysql", "mysql-simple"], DirectedEdge["persistent-mysql", "persistent"], DirectedEdge["persistent-mysql", "resource-pool"], DirectedEdge["persistent-mysql", "resourcet"], DirectedEdge["persistent-mysql", "text"], DirectedEdge["persistent-mysql", "transformers"], DirectedEdge["persistent-odbc", "aeson"], DirectedEdge["persistent-odbc", "base"], DirectedEdge["persistent-odbc", "blaze-html"], DirectedEdge["persistent-odbc", "bytestring"], DirectedEdge["persistent-odbc", "conduit"], DirectedEdge["persistent-odbc", "containers"], DirectedEdge["persistent-odbc", "convertible"], DirectedEdge["persistent-odbc", "esqueleto"], DirectedEdge["persistent-odbc", "HDBC"], DirectedEdge["persistent-odbc", "HDBC-odbc"], DirectedEdge["persistent-odbc", "monad-control"], DirectedEdge["persistent-odbc", "monad-logger"], DirectedEdge["persistent-odbc", "persistent"], DirectedEdge["persistent-odbc", "persistent-odbc"], DirectedEdge["persistent-odbc", "persistent-template"], DirectedEdge["persistent-odbc", "resourcet"], DirectedEdge["persistent-odbc", "text"], DirectedEdge["persistent-odbc", "time"], DirectedEdge["persistent-odbc", "transformers"], DirectedEdge["persistent-postgresql", "aeson"], DirectedEdge["persistent-postgresql", "base"], DirectedEdge["persistent-postgresql", "blaze-builder"], DirectedEdge["persistent-postgresql", "bytestring"], DirectedEdge["persistent-postgresql", "conduit"], DirectedEdge["persistent-postgresql", "containers"], DirectedEdge["persistent-postgresql", "monad-control"], DirectedEdge["persistent-postgresql", "monad-logger"], DirectedEdge["persistent-postgresql", "persistent"], DirectedEdge["persistent-postgresql", "postgresql-libpq"], DirectedEdge["persistent-postgresql", "postgresql-simple"], DirectedEdge["persistent-postgresql", "resource-pool"], DirectedEdge["persistent-postgresql", "resourcet"], DirectedEdge["persistent-postgresql", "text"], DirectedEdge["persistent-postgresql", "time"], DirectedEdge["persistent-postgresql", "transformers"], DirectedEdge["persistent-protobuf", "base"], DirectedEdge["persistent-protobuf", "bytestring"], DirectedEdge["persistent-protobuf", "persistent"], DirectedEdge["persistent-protobuf", "protocol-buffers"], DirectedEdge["persistent-protobuf", "protocol-buffers-descriptor"], DirectedEdge["persistent-protobuf", "template-haskell"], DirectedEdge["persistent-protobuf", "text"], DirectedEdge["persistent-ratelimit", "base"], DirectedEdge["persistent-ratelimit", "time"], DirectedEdge["persistent-ratelimit", "yesod"], DirectedEdge["persistent-redis", "aeson"], DirectedEdge["persistent-redis", "attoparsec"], DirectedEdge["persistent-redis", "base"], DirectedEdge["persistent-redis", "binary"], DirectedEdge["persistent-redis", "bytestring"], DirectedEdge["persistent-redis", "hedis"], DirectedEdge["persistent-redis", "monad-control"], DirectedEdge["persistent-redis", "mtl"], DirectedEdge["persistent-redis", "path-pieces"], DirectedEdge["persistent-redis", "persistent"], DirectedEdge["persistent-redis", "scientific"], DirectedEdge["persistent-redis", "text"], DirectedEdge["persistent-redis", "time"], DirectedEdge["persistent-redis", "transformers"], DirectedEdge["persistent-redis", "utf8-string"], DirectedEdge["persistent-refs", "base"], DirectedEdge["persistent-refs", "containers"], DirectedEdge["persistent-refs", "mtl"], DirectedEdge["persistent-refs", "ref-fd"], DirectedEdge["persistent-refs", "transformers"], DirectedEdge["persistent-sqlite", "aeson"], DirectedEdge["persistent-sqlite", "base"], DirectedEdge["persistent-sqlite", "bytestring"], DirectedEdge["persistent-sqlite", "conduit"], DirectedEdge["persistent-sqlite", "containers"], DirectedEdge["persistent-sqlite", "monad-control"], DirectedEdge["persistent-sqlite", "monad-logger"], DirectedEdge["persistent-sqlite", "old-locale"], DirectedEdge["persistent-sqlite", "persistent"], DirectedEdge["persistent-sqlite", "persistent-sqlite"], DirectedEdge["persistent-sqlite", "resource-pool"], DirectedEdge["persistent-sqlite", "resourcet"], DirectedEdge["persistent-sqlite", "text"], DirectedEdge["persistent-sqlite", "time"], DirectedEdge["persistent-sqlite", "transformers"], DirectedEdge["persistent-template", "aeson"], DirectedEdge["persistent-template", "aeson-compat"], DirectedEdge["persistent-template", "base"], DirectedEdge["persistent-template", "bytestring"], DirectedEdge["persistent-template", "containers"], DirectedEdge["persistent-template", "ghc-prim"], DirectedEdge["persistent-template", "http-api-data"], DirectedEdge["persistent-template", "monad-control"], DirectedEdge["persistent-template", "monad-logger"], DirectedEdge["persistent-template", "path-pieces"], DirectedEdge["persistent-template", "persistent"], DirectedEdge["persistent-template", "tagged"], DirectedEdge["persistent-template", "template-haskell"], DirectedEdge["persistent-template", "text"], DirectedEdge["persistent-template", "transformers"], DirectedEdge["persistent-template", "unordered-containers"], DirectedEdge["persistent-vector", "base"], DirectedEdge["persistent-vector", "deepseq"], DirectedEdge["persistent-zookeeper", "aeson"], DirectedEdge["persistent-zookeeper", "attoparsec"], DirectedEdge["persistent-zookeeper", "base"], DirectedEdge["persistent-zookeeper", "base64-bytestring"], DirectedEdge["persistent-zookeeper", "binary"], DirectedEdge["persistent-zookeeper", "bytestring"], DirectedEdge["persistent-zookeeper", "conduit"], DirectedEdge["persistent-zookeeper", "containers"], DirectedEdge["persistent-zookeeper", "hzk"], DirectedEdge["persistent-zookeeper", "monad-control"], DirectedEdge["persistent-zookeeper", "mtl"], DirectedEdge["persistent-zookeeper", "path-pieces"], DirectedEdge["persistent-zookeeper", "persistent"], DirectedEdge["persistent-zookeeper", "persistent-template"], DirectedEdge["persistent-zookeeper", "resource-pool"], DirectedEdge["persistent-zookeeper", "resourcet"], DirectedEdge["persistent-zookeeper", "scientific"], DirectedEdge["persistent-zookeeper", "template-haskell"], DirectedEdge["persistent-zookeeper", "text"], DirectedEdge["persistent-zookeeper", "time"], DirectedEdge["persistent-zookeeper", "transformers"], DirectedEdge["persistent-zookeeper", "transformers-base"], DirectedEdge["persistent-zookeeper", "utf8-string"], DirectedEdge["persona", "aeson"], DirectedEdge["persona", "base"], DirectedEdge["persona", "data-default-class"], DirectedEdge["persona", "jose"], DirectedEdge["persona", "lens"], DirectedEdge["persona", "network-uri"], DirectedEdge["persona", "text"], DirectedEdge["persona", "time"], DirectedEdge["persona", "unordered-containers"], DirectedEdge["persona-idp", "aeson"], DirectedEdge["persona-idp", "asn1-types"], DirectedEdge["persona-idp", "base"], DirectedEdge["persona-idp", "blaze-markup"], DirectedEdge["persona-idp", "bytestring"], DirectedEdge["persona-idp", "crypto-random"], DirectedEdge["persona-idp", "directory"], DirectedEdge["persona-idp", "filepath"], DirectedEdge["persona-idp", "hamlet"], DirectedEdge["persona-idp", "http-types"], DirectedEdge["persona-idp", "jose"], DirectedEdge["persona-idp", "lens"], DirectedEdge["persona-idp", "optparse-applicative"], DirectedEdge["persona-idp", "pem"], DirectedEdge["persona-idp", "persona"], DirectedEdge["persona-idp", "scotty"], DirectedEdge["persona-idp", "shakespeare"], DirectedEdge["persona-idp", "text"], DirectedEdge["persona-idp", "time"], DirectedEdge["persona-idp", "transformers"], DirectedEdge["persona-idp", "unix"], DirectedEdge["persona-idp", "wai"], DirectedEdge["pesca", "base"], DirectedEdge["pesca", "process"], DirectedEdge["peyotls", "asn1-encoding"], DirectedEdge["peyotls", "asn1-types"], DirectedEdge["peyotls", "base"], DirectedEdge["peyotls", "bytable"], DirectedEdge["peyotls", "bytestring"], DirectedEdge["peyotls", "cipher-aes"], DirectedEdge["peyotls", "crypto-numbers"], DirectedEdge["peyotls", "crypto-pubkey"], DirectedEdge["peyotls", "crypto-pubkey-types"], DirectedEdge["peyotls", "crypto-random"], DirectedEdge["peyotls", "cryptohash"], DirectedEdge["peyotls", "handle-like"], DirectedEdge["peyotls", "monad-control"], DirectedEdge["peyotls", "monads-tf"], DirectedEdge["peyotls", "pem"], DirectedEdge["peyotls", "peyotls-codec"], DirectedEdge["peyotls", "stm"], DirectedEdge["peyotls", "transformers-base"], DirectedEdge["peyotls", "x509-store"], DirectedEdge["peyotls", "x509-validation"], DirectedEdge["peyotls-codec", "asn1-encoding"], DirectedEdge["peyotls-codec", "asn1-types"], DirectedEdge["peyotls-codec", "base"], DirectedEdge["peyotls-codec", "bytable"], DirectedEdge["peyotls-codec", "bytestring"], DirectedEdge["peyotls-codec", "crypto-pubkey"], DirectedEdge["peyotls-codec", "crypto-pubkey-types"], DirectedEdge["peyotls-codec", "monads-tf"], DirectedEdge["peyotls-codec", "x509-store"], DirectedEdge["pez", "base"], DirectedEdge["pez", "failure"], DirectedEdge["pez", "fclabels"], DirectedEdge["pez", "thrist"], DirectedEdge["pg-harness", "async"], DirectedEdge["pg-harness", "base"], DirectedEdge["pg-harness", "bytestring"], DirectedEdge["pg-harness", "HTTP"], DirectedEdge["pg-harness", "ini"], DirectedEdge["pg-harness", "postgresql-simple"], DirectedEdge["pg-harness", "random"], DirectedEdge["pg-harness", "scotty"], DirectedEdge["pg-harness", "text"], DirectedEdge["pg-harness", "transformers"], DirectedEdge["pg-harness-client", "base"], DirectedEdge["pg-harness-client", "bytestring"], DirectedEdge["pg-harness-client", "HTTP"], DirectedEdge["pg-harness-server", "async"], DirectedEdge["pg-harness-server", "base"], DirectedEdge["pg-harness-server", "ini"], DirectedEdge["pg-harness-server", "postgresql-simple"], DirectedEdge["pg-harness-server", "random"], DirectedEdge["pg-harness-server", "scotty"], DirectedEdge["pg-harness-server", "text"], DirectedEdge["pg-harness-server", "transformers"], DirectedEdge["pg-store", "attoparsec"], DirectedEdge["pg-store", "base"], DirectedEdge["pg-store", "bytestring"], DirectedEdge["pg-store", "postgresql-libpq"], DirectedEdge["pg-store", "template-haskell"], DirectedEdge["pg-store", "text"], DirectedEdge["pg-store", "transformers"], DirectedEdge["pgdl", "base"], DirectedEdge["pgdl", "binary"], DirectedEdge["pgdl", "brick"], DirectedEdge["pgdl", "bytestring"], DirectedEdge["pgdl", "Cabal"], DirectedEdge["pgdl", "conduit"], DirectedEdge["pgdl", "conduit-extra"], DirectedEdge["pgdl", "configurator"], DirectedEdge["pgdl", "data-default"], DirectedEdge["pgdl", "directory"], DirectedEdge["pgdl", "directory-listing-webpage-parser"], DirectedEdge["pgdl", "filepath"], DirectedEdge["pgdl", "http-conduit"], DirectedEdge["pgdl", "http-types"], DirectedEdge["pgdl", "process"], DirectedEdge["pgdl", "resourcet"], DirectedEdge["pgdl", "tagsoup"], DirectedEdge["pgdl", "text"], DirectedEdge["pgdl", "time"], DirectedEdge["pgdl", "transformers"], DirectedEdge["pgdl", "unix"], DirectedEdge["pgdl", "vector"], DirectedEdge["pgdl", "vty"], DirectedEdge["pgm", "array"], DirectedEdge["pgm", "base"], DirectedEdge["pgm", "bytestring"], DirectedEdge["pgm", "parsec"], DirectedEdge["pgp-wordlist", "base"], DirectedEdge["pgp-wordlist", "bytestring"], DirectedEdge["pgp-wordlist", "containers"], DirectedEdge["pgp-wordlist", "text"], DirectedEdge["pgp-wordlist", "vector"], DirectedEdge["pgsql-simple", "attoparsec"], DirectedEdge["pgsql-simple", "base"], DirectedEdge["pgsql-simple", "base16-bytestring"], DirectedEdge["pgsql-simple", "binary"], DirectedEdge["pgsql-simple", "blaze-builder"], DirectedEdge["pgsql-simple", "blaze-textual"], DirectedEdge["pgsql-simple", "bytestring"], DirectedEdge["pgsql-simple", "containers"], DirectedEdge["pgsql-simple", "MonadCatchIO-transformers"], DirectedEdge["pgsql-simple", "mtl"], DirectedEdge["pgsql-simple", "network"], DirectedEdge["pgsql-simple", "old-locale"], DirectedEdge["pgsql-simple", "pcre-light"], DirectedEdge["pgsql-simple", "text"], DirectedEdge["pgsql-simple", "time"], DirectedEdge["pgsql-simple", "utf8-string"], DirectedEdge["pgstream", "async"], DirectedEdge["pgstream", "attoparsec"], DirectedEdge["pgstream", "base"], DirectedEdge["pgstream", "blaze-builder"], DirectedEdge["pgstream", "bytestring"], DirectedEdge["pgstream", "conduit"], DirectedEdge["pgstream", "conduit-extra"], DirectedEdge["pgstream", "deepseq"], DirectedEdge["pgstream", "mtl"], DirectedEdge["pgstream", "parallel"], DirectedEdge["pgstream", "postgresql-binary"], DirectedEdge["pgstream", "postgresql-libpq"], DirectedEdge["pgstream", "resource-pool"], DirectedEdge["pgstream", "resourcet"], DirectedEdge["pgstream", "scientific"], DirectedEdge["pgstream", "stm"], DirectedEdge["pgstream", "stm-chans"], DirectedEdge["pgstream", "stm-conduit"], DirectedEdge["pgstream", "stringsearch"], DirectedEdge["pgstream", "template-haskell"], DirectedEdge["pgstream", "text"], DirectedEdge["pgstream", "time"], DirectedEdge["pgstream", "transformers"], DirectedEdge["pgstream", "uuid"], DirectedEdge["pgstream", "vector"], DirectedEdge["phantom-state", "base"], DirectedEdge["phantom-state", "transformers"], DirectedEdge["phasechange", "array"], DirectedEdge["phasechange", "base"], DirectedEdge["phasechange", "ghc-prim"], DirectedEdge["phasechange", "monad-st"], DirectedEdge["phasechange", "primitive"], DirectedEdge["phasechange", "vector"], DirectedEdge["phash", "base"], DirectedEdge["phizzle", "aeson"], DirectedEdge["phizzle", "base"], DirectedEdge["phizzle", "bytestring"], DirectedEdge["phizzle", "network"], DirectedEdge["phizzle", "network-uri"], DirectedEdge["phizzle", "regex-pcre"], DirectedEdge["phizzle", "text"], DirectedEdge["phoityne", "base"], DirectedEdge["phoityne", "bytestring"], DirectedEdge["phoityne", "Cabal"], DirectedEdge["phoityne", "cmdargs"], DirectedEdge["phoityne", "conduit"], DirectedEdge["phoityne", "conduit-extra"], DirectedEdge["phoityne", "ConfigFile"], DirectedEdge["phoityne", "containers"], DirectedEdge["phoityne", "directory"], DirectedEdge["phoityne", "filepath"], DirectedEdge["phoityne", "hslogger"], DirectedEdge["phoityne", "HStringTemplate"], DirectedEdge["phoityne", "MissingH"], DirectedEdge["phoityne", "mtl"], DirectedEdge["phoityne", "parsec"], DirectedEdge["phoityne", "process"], DirectedEdge["phoityne", "resourcet"], DirectedEdge["phoityne", "safe"], DirectedEdge["phoityne", "text"], DirectedEdge["phoityne", "transformers"], DirectedEdge["phoityne-vscode", "aeson"], DirectedEdge["phoityne-vscode", "base"], DirectedEdge["phoityne-vscode", "bytestring"], DirectedEdge["phoityne-vscode", "Cabal"], DirectedEdge["phoityne-vscode", "cmdargs"], DirectedEdge["phoityne-vscode", "conduit"], DirectedEdge["phoityne-vscode", "conduit-extra"], DirectedEdge["phoityne-vscode", "ConfigFile"], DirectedEdge["phoityne-vscode", "containers"], DirectedEdge["phoityne-vscode", "directory"], DirectedEdge["phoityne-vscode", "filepath"], DirectedEdge["phoityne-vscode", "fsnotify"], DirectedEdge["phoityne-vscode", "hslogger"], DirectedEdge["phoityne-vscode", "HStringTemplate"], DirectedEdge["phoityne-vscode", "MissingH"], DirectedEdge["phoityne-vscode", "mtl"], DirectedEdge["phoityne-vscode", "parsec"], DirectedEdge["phoityne-vscode", "process"], DirectedEdge["phoityne-vscode", "resourcet"], DirectedEdge["phoityne-vscode", "safe"], DirectedEdge["phoityne-vscode", "split"], DirectedEdge["phoityne-vscode", "text"], DirectedEdge["phoityne-vscode", "transformers"], DirectedEdge["phone-numbers", "base"], DirectedEdge["phone-numbers", "bytestring"], DirectedEdge["phone-push", "base"], DirectedEdge["phone-push", "base16-bytestring"], DirectedEdge["phone-push", "binary"], DirectedEdge["phone-push", "bytestring"], DirectedEdge["phone-push", "conduit"], DirectedEdge["phone-push", "convertible"], DirectedEdge["phone-push", "HsOpenSSL"], DirectedEdge["phone-push", "http-conduit"], DirectedEdge["phone-push", "network"], DirectedEdge["phone-push", "time"], DirectedEdge["phone-push", "transformers"], DirectedEdge["phonetic-code", "array"], DirectedEdge["phonetic-code", "base"], DirectedEdge["phonetic-code", "containers"], DirectedEdge["phonetic-code", "regex-compat"], DirectedEdge["phooey", "array"], DirectedEdge["phooey", "base"], DirectedEdge["phooey", "mtl"], DirectedEdge["phooey", "reactive"], DirectedEdge["phooey", "TypeCompose"], DirectedEdge["phooey", "wx"], DirectedEdge["phooey", "wxcore"], DirectedEdge["photoname", "base"], DirectedEdge["photoname", "directory"], DirectedEdge["photoname", "exif"], DirectedEdge["photoname", "filepath"], DirectedEdge["photoname", "mtl"], DirectedEdge["photoname", "old-locale"], DirectedEdge["photoname", "parsec"], DirectedEdge["photoname", "time"], DirectedEdge["photoname", "unix"], DirectedEdge["phraskell", "base"], DirectedEdge["phraskell", "mtl"], DirectedEdge["phraskell", "SDL"], DirectedEdge["phraskell", "transformers"], DirectedEdge["phybin", "async"], DirectedEdge["phybin", "base"], DirectedEdge["phybin", "bitvec"], DirectedEdge["phybin", "bytestring"], DirectedEdge["phybin", "containers"], DirectedEdge["phybin", "directory"], DirectedEdge["phybin", "fgl"], DirectedEdge["phybin", "filepath"], DirectedEdge["phybin", "graphviz"], DirectedEdge["phybin", "hierarchical-clustering"], DirectedEdge["phybin", "HUnit"], DirectedEdge["phybin", "parsec"], DirectedEdge["phybin", "phybin"], DirectedEdge["phybin", "prettyclass"], DirectedEdge["phybin", "process"], DirectedEdge["phybin", "split"], DirectedEdge["phybin", "text"], DirectedEdge["phybin", "time"], DirectedEdge["phybin", "vector"], DirectedEdge["pi-calculus", "AES"], DirectedEdge["pi-calculus", "base"], DirectedEdge["pi-calculus", "binary"], DirectedEdge["pi-calculus", "byteable"], DirectedEdge["pi-calculus", "bytestring"], DirectedEdge["pi-calculus", "containers"], DirectedEdge["pi-calculus", "cryptohash"], DirectedEdge["pi-calculus", "HTTP"], DirectedEdge["pi-calculus", "io-streams"], DirectedEdge["pi-calculus", "mtl"], DirectedEdge["pi-calculus", "network"], DirectedEdge["pi-calculus", "parsec"], DirectedEdge["pi-calculus", "RSA"], DirectedEdge["pi-calculus", "transformers"], DirectedEdge["pia-forward", "aeson"], DirectedEdge["pia-forward", "base"], DirectedEdge["pia-forward", "bytestring"], DirectedEdge["pia-forward", "data-default"], DirectedEdge["pia-forward", "directory"], DirectedEdge["pia-forward", "filepath"], DirectedEdge["pia-forward", "http-client"], DirectedEdge["pia-forward", "http-client-tls"], DirectedEdge["pia-forward", "network-info"], DirectedEdge["pia-forward", "process"], DirectedEdge["pia-forward", "random"], DirectedEdge["pia-forward", "text"], DirectedEdge["pia-forward", "text-format"], DirectedEdge["pia-forward", "time"], DirectedEdge["pia-forward", "xdg-basedir"], DirectedEdge["pianola", "attoparsec"], DirectedEdge["pianola", "attoparsec-iteratee"], DirectedEdge["pianola", "base"], DirectedEdge["pianola", "bytestring"], DirectedEdge["pianola", "comonad"], DirectedEdge["pianola", "comonad-transformers"], DirectedEdge["pianola", "containers"], DirectedEdge["pianola", "either"], DirectedEdge["pianola", "errors"], DirectedEdge["pianola", "filepath"], DirectedEdge["pianola", "free"], DirectedEdge["pianola", "iteratee"], DirectedEdge["pianola", "logict"], DirectedEdge["pianola", "msgpack"], DirectedEdge["pianola", "mtl"], DirectedEdge["pianola", "network"], DirectedEdge["pianola", "pipes"], DirectedEdge["pianola", "streams"], DirectedEdge["pianola", "text"], DirectedEdge["pianola", "transformers"], DirectedEdge["picologic", "base"], DirectedEdge["picologic", "containers"], DirectedEdge["picologic", "haskeline"], DirectedEdge["picologic", "mtl"], DirectedEdge["picologic", "parsec"], DirectedEdge["picologic", "picosat"], DirectedEdge["picologic", "pretty"], DirectedEdge["picologic", "process"], DirectedEdge["picoparsec", "array"], DirectedEdge["picoparsec", "base"], DirectedEdge["picoparsec", "bytestring"], DirectedEdge["picoparsec", "containers"], DirectedEdge["picoparsec", "deepseq"], DirectedEdge["picoparsec", "monoid-subclasses"], DirectedEdge["picoparsec", "scientific"], DirectedEdge["picoparsec", "text"], DirectedEdge["picosat", "base"], DirectedEdge["piet", "array"], DirectedEdge["piet", "base"], DirectedEdge["piet", "containers"], DirectedEdge["piet", "Imlib"], DirectedEdge["piet", "mtl"], DirectedEdge["piki", "base"], DirectedEdge["piki", "mtl"], DirectedEdge["piki", "parsec"], DirectedEdge["piki", "text"], DirectedEdge["pinboard", "aeson"], DirectedEdge["pinboard", "base"], DirectedEdge["pinboard", "bytestring"], DirectedEdge["pinboard", "containers"], DirectedEdge["pinboard", "either"], DirectedEdge["pinboard", "http-client"], DirectedEdge["pinboard", "http-client-tls"], DirectedEdge["pinboard", "http-types"], DirectedEdge["pinboard", "mtl"], DirectedEdge["pinboard", "network"], DirectedEdge["pinboard", "old-locale"], DirectedEdge["pinboard", "profunctors"], DirectedEdge["pinboard", "random"], DirectedEdge["pinboard", "text"], DirectedEdge["pinboard", "time"], DirectedEdge["pinboard", "transformers"], DirectedEdge["pinboard", "unordered-containers"], DirectedEdge["pinboard", "vector"], DirectedEdge["pinch", "array"], DirectedEdge["pinch", "base"], DirectedEdge["pinch", "bytestring"], DirectedEdge["pinch", "containers"], DirectedEdge["pinch", "deepseq"], DirectedEdge["pinch", "ghc-prim"], DirectedEdge["pinch", "hashable"], DirectedEdge["pinch", "text"], DirectedEdge["pinch", "unordered-containers"], DirectedEdge["pinch", "vector"], DirectedEdge["pinchot", "base"], DirectedEdge["pinchot", "containers"], DirectedEdge["pinchot", "Earley"], DirectedEdge["pinchot", "lens"], DirectedEdge["pinchot", "ListLike"], DirectedEdge["pinchot", "semigroups"], DirectedEdge["pinchot", "template-haskell"], DirectedEdge["pinchot", "transformers"], DirectedEdge["pipe-enumerator", "base"], DirectedEdge["pipe-enumerator", "enumerator"], DirectedEdge["pipe-enumerator", "pipes"], DirectedEdge["pipe-enumerator", "transformers"], DirectedEdge["pipeclip", "base"], DirectedEdge["pipeclip", "bytestring"], DirectedEdge["pipeclip", "editor-open"], DirectedEdge["pipeclip", "Hclip"], DirectedEdge["pipeclip", "safe"], DirectedEdge["pipes", "base"], DirectedEdge["pipes", "mmorph"], DirectedEdge["pipes", "mtl"], DirectedEdge["pipes", "transformers"], DirectedEdge["pipes-aeson", "aeson"], DirectedEdge["pipes-aeson", "attoparsec"], DirectedEdge["pipes-aeson", "base"], DirectedEdge["pipes-aeson", "bytestring"], DirectedEdge["pipes-aeson", "pipes"], DirectedEdge["pipes-aeson", "pipes-attoparsec"], DirectedEdge["pipes-aeson", "pipes-bytestring"], DirectedEdge["pipes-aeson", "pipes-parse"], DirectedEdge["pipes-aeson", "transformers"], DirectedEdge["pipes-async", "base"], DirectedEdge["pipes-async", "lifted-async"], DirectedEdge["pipes-async", "lifted-base"], DirectedEdge["pipes-async", "monad-control"], DirectedEdge["pipes-async", "pipes"], DirectedEdge["pipes-async", "pipes-safe"], DirectedEdge["pipes-async", "stm"], DirectedEdge["pipes-async", "transformers-base"], DirectedEdge["pipes-attoparsec", "attoparsec"], DirectedEdge["pipes-attoparsec", "base"], DirectedEdge["pipes-attoparsec", "bytestring"], DirectedEdge["pipes-attoparsec", "pipes"], DirectedEdge["pipes-attoparsec", "pipes-parse"], DirectedEdge["pipes-attoparsec", "text"], DirectedEdge["pipes-attoparsec", "transformers"], DirectedEdge["pipes-attoparsec-streaming", "attoparsec"], DirectedEdge["pipes-attoparsec-streaming", "base"], DirectedEdge["pipes-attoparsec-streaming", "bytestring"], DirectedEdge["pipes-attoparsec-streaming", "pipes-attoparsec-streaming"], DirectedEdge["pipes-attoparsec-streaming", "pipes-core"], DirectedEdge["pipes-attoparsec-streaming", "transformers"], DirectedEdge["pipes-bgzf", "base"], DirectedEdge["pipes-bgzf", "bytestring"], DirectedEdge["pipes-bgzf", "mtl"], DirectedEdge["pipes-bgzf", "parallel"], DirectedEdge["pipes-bgzf", "pipes"], DirectedEdge["pipes-bgzf", "streaming-commons"], DirectedEdge["pipes-binary", "base"], DirectedEdge["pipes-binary", "binary"], DirectedEdge["pipes-binary", "bytestring"], DirectedEdge["pipes-binary", "ghc-prim"], DirectedEdge["pipes-binary", "pipes"], DirectedEdge["pipes-binary", "pipes-bytestring"], DirectedEdge["pipes-binary", "pipes-parse"], DirectedEdge["pipes-binary", "transformers"], DirectedEdge["pipes-bytestring", "base"], DirectedEdge["pipes-bytestring", "bytestring"], DirectedEdge["pipes-bytestring", "pipes"], DirectedEdge["pipes-bytestring", "pipes-group"], DirectedEdge["pipes-bytestring", "pipes-parse"], DirectedEdge["pipes-bytestring", "transformers"], DirectedEdge["pipes-bzip", "base"], DirectedEdge["pipes-bzip", "bindings-DSL"], DirectedEdge["pipes-bzip", "bytestring"], DirectedEdge["pipes-bzip", "data-default"], DirectedEdge["pipes-bzip", "mtl"], DirectedEdge["pipes-bzip", "pipes"], DirectedEdge["pipes-bzip", "pipes-safe"], DirectedEdge["pipes-cacophony", "base"], DirectedEdge["pipes-cacophony", "bytestring"], DirectedEdge["pipes-cacophony", "cacophony"], DirectedEdge["pipes-cacophony", "pipes"], DirectedEdge["pipes-cellular", "base"], DirectedEdge["pipes-cellular", "bytestring"], DirectedEdge["pipes-cellular", "data-cell"], DirectedEdge["pipes-cellular", "pipes"], DirectedEdge["pipes-cellular-csv", "base"], DirectedEdge["pipes-cellular-csv", "bytestring"], DirectedEdge["pipes-cellular-csv", "data-cell"], DirectedEdge["pipes-cellular-csv", "pipes"], DirectedEdge["pipes-cellular-csv", "pipes-cellular"], DirectedEdge["pipes-cereal", "base"], DirectedEdge["pipes-cereal", "bytestring"], DirectedEdge["pipes-cereal", "cereal"], DirectedEdge["pipes-cereal", "mtl"], DirectedEdge["pipes-cereal", "pipes"], DirectedEdge["pipes-cereal", "pipes-bytestring"], DirectedEdge["pipes-cereal", "pipes-parse"], DirectedEdge["pipes-cereal-plus", "base"], DirectedEdge["pipes-cereal-plus", "bytestring"], DirectedEdge["pipes-cereal-plus", "cereal-plus"], DirectedEdge["pipes-cereal-plus", "errors"], DirectedEdge["pipes-cereal-plus", "mtl"], DirectedEdge["pipes-cereal-plus", "pipes"], DirectedEdge["pipes-cereal-plus", "pipes-bytestring"], DirectedEdge["pipes-cereal-plus", "text"], DirectedEdge["pipes-cliff", "async"], DirectedEdge["pipes-cliff", "base"], DirectedEdge["pipes-cliff", "bytestring"], DirectedEdge["pipes-cliff", "pipes"], DirectedEdge["pipes-cliff", "pipes-safe"], DirectedEdge["pipes-cliff", "process"], DirectedEdge["pipes-cliff", "stm"], DirectedEdge["pipes-concurrency", "base"], DirectedEdge["pipes-concurrency", "contravariant"], DirectedEdge["pipes-concurrency", "pipes"], DirectedEdge["pipes-concurrency", "stm"], DirectedEdge["pipes-concurrency", "void"], DirectedEdge["pipes-conduit", "base"], DirectedEdge["pipes-conduit", "conduit"], DirectedEdge["pipes-conduit", "mtl"], DirectedEdge["pipes-conduit", "pipes-core"], DirectedEdge["pipes-core", "pipes"], DirectedEdge["pipes-core", "base"], DirectedEdge["pipes-core", "categories"], DirectedEdge["pipes-core", "lifted-base"], DirectedEdge["pipes-core", "monad-control"], DirectedEdge["pipes-core", "transformers"], DirectedEdge["pipes-core", "void"], DirectedEdge["pipes-courier", "base"], DirectedEdge["pipes-courier", "courier"], DirectedEdge["pipes-courier", "pipes"], DirectedEdge["pipes-csv", "base"], DirectedEdge["pipes-csv", "blaze-builder"], DirectedEdge["pipes-csv", "bytestring"], DirectedEdge["pipes-csv", "cassava"], DirectedEdge["pipes-csv", "pipes"], DirectedEdge["pipes-csv", "unordered-containers"], DirectedEdge["pipes-csv", "vector"], DirectedEdge["pipes-errors", "base"], DirectedEdge["pipes-errors", "errors"], DirectedEdge["pipes-errors", "pipes"], DirectedEdge["pipes-extra", "base"], DirectedEdge["pipes-extra", "bytestring"], DirectedEdge["pipes-extra", "network"], DirectedEdge["pipes-extra", "pipes-core"], DirectedEdge["pipes-extra", "pipes-extra"], DirectedEdge["pipes-extra", "pipes-zlib"], DirectedEdge["pipes-extra", "transformers"], DirectedEdge["pipes-extras", "base"], DirectedEdge["pipes-extras", "foldl"], DirectedEdge["pipes-extras", "pipes"], DirectedEdge["pipes-extras", "transformers"], DirectedEdge["pipes-fastx", "attoparsec"], DirectedEdge["pipes-fastx", "base"], DirectedEdge["pipes-fastx", "bytestring"], DirectedEdge["pipes-fastx", "pipes"], DirectedEdge["pipes-fastx", "pipes-attoparsec"], DirectedEdge["pipes-fastx", "pipes-bytestring"], DirectedEdge["pipes-files", "attoparsec"], DirectedEdge["pipes-files", "base"], DirectedEdge["pipes-files", "bytestring"], DirectedEdge["pipes-files", "directory"], DirectedEdge["pipes-files", "exceptions"], DirectedEdge["pipes-files", "filepath"], DirectedEdge["pipes-files", "free"], DirectedEdge["pipes-files", "hierarchy"], DirectedEdge["pipes-files", "mmorph"], DirectedEdge["pipes-files", "monad-control"], DirectedEdge["pipes-files", "mtl"], DirectedEdge["pipes-files", "pipes"], DirectedEdge["pipes-files", "pipes-safe"], DirectedEdge["pipes-files", "posix-paths"], DirectedEdge["pipes-files", "regex-posix"], DirectedEdge["pipes-files", "semigroups"], DirectedEdge["pipes-files", "text"], DirectedEdge["pipes-files", "time"], DirectedEdge["pipes-files", "transformers"], DirectedEdge["pipes-files", "transformers-base"], DirectedEdge["pipes-files", "transformers-compat"], DirectedEdge["pipes-files", "unix"], DirectedEdge["pipes-files", "unix-compat"], DirectedEdge["pipes-group", "base"], DirectedEdge["pipes-group", "free"], DirectedEdge["pipes-group", "pipes"], DirectedEdge["pipes-group", "pipes-parse"], DirectedEdge["pipes-group", "transformers"], DirectedEdge["pipes-http", "base"], DirectedEdge["pipes-http", "bytestring"], DirectedEdge["pipes-http", "http-client"], DirectedEdge["pipes-http", "http-client-tls"], DirectedEdge["pipes-http", "pipes"], DirectedEdge["pipes-illumina", "base"], DirectedEdge["pipes-illumina", "bytestring"], DirectedEdge["pipes-illumina", "directory"], DirectedEdge["pipes-illumina", "filepath"], DirectedEdge["pipes-illumina", "pipes"], DirectedEdge["pipes-illumina", "pipes-bgzf"], DirectedEdge["pipes-interleave", "base"], DirectedEdge["pipes-interleave", "containers"], DirectedEdge["pipes-interleave", "pipes"], DirectedEdge["pipes-key-value-csv", "base"], DirectedEdge["pipes-key-value-csv", "containers"], DirectedEdge["pipes-key-value-csv", "data-default-class"], DirectedEdge["pipes-key-value-csv", "lens"], DirectedEdge["pipes-key-value-csv", "mtl"], DirectedEdge["pipes-key-value-csv", "pipes"], DirectedEdge["pipes-key-value-csv", "pipes-bytestring"], DirectedEdge["pipes-key-value-csv", "pipes-group"], DirectedEdge["pipes-key-value-csv", "pipes-parse"], DirectedEdge["pipes-key-value-csv", "pipes-safe"], DirectedEdge["pipes-key-value-csv", "pipes-text"], DirectedEdge["pipes-key-value-csv", "reflection"], DirectedEdge["pipes-key-value-csv", "text"], DirectedEdge["pipes-key-value-csv", "vinyl"], DirectedEdge["pipes-key-value-csv", "vinyl-utils"], DirectedEdge["pipes-mongodb", "base"], DirectedEdge["pipes-mongodb", "monad-control"], DirectedEdge["pipes-mongodb", "mongoDB"], DirectedEdge["pipes-mongodb", "pipes"], DirectedEdge["pipes-network", "base"], DirectedEdge["pipes-network", "bytestring"], DirectedEdge["pipes-network", "network"], DirectedEdge["pipes-network", "network-simple"], DirectedEdge["pipes-network", "pipes"], DirectedEdge["pipes-network", "pipes-safe"], DirectedEdge["pipes-network", "transformers"], DirectedEdge["pipes-network-tls", "base"], DirectedEdge["pipes-network-tls", "bytestring"], DirectedEdge["pipes-network-tls", "network"], DirectedEdge["pipes-network-tls", "network-simple"], DirectedEdge["pipes-network-tls", "network-simple-tls"], DirectedEdge["pipes-network-tls", "pipes"], DirectedEdge["pipes-network-tls", "pipes-network"], DirectedEdge["pipes-network-tls", "pipes-safe"], DirectedEdge["pipes-network-tls", "tls"], DirectedEdge["pipes-network-tls", "transformers"], DirectedEdge["pipes-p2p", "async"], DirectedEdge["pipes-p2p", "base"], DirectedEdge["pipes-p2p", "binary"], DirectedEdge["pipes-p2p", "bytestring"], DirectedEdge["pipes-p2p", "errors"], DirectedEdge["pipes-p2p", "exceptions"], DirectedEdge["pipes-p2p", "mtl"], DirectedEdge["pipes-p2p", "network"], DirectedEdge["pipes-p2p", "network-simple-sockaddr"], DirectedEdge["pipes-p2p", "pipes"], DirectedEdge["pipes-p2p", "pipes-concurrency"], DirectedEdge["pipes-p2p", "pipes-network"], DirectedEdge["pipes-p2p-examples", "pipes-p2p"], DirectedEdge["pipes-p2p-examples", "base"], DirectedEdge["pipes-p2p-examples", "binary"], DirectedEdge["pipes-p2p-examples", "bytestring"], DirectedEdge["pipes-p2p-examples", "containers"], DirectedEdge["pipes-p2p-examples", "errors"], DirectedEdge["pipes-p2p-examples", "mtl"], DirectedEdge["pipes-p2p-examples", "network"], DirectedEdge["pipes-p2p-examples", "network-simple-sockaddr"], DirectedEdge["pipes-p2p-examples", "pipes"], DirectedEdge["pipes-p2p-examples", "pipes-network"], DirectedEdge["pipes-p2p-examples", "pipes-p2p"], DirectedEdge["pipes-parse", "base"], DirectedEdge["pipes-parse", "pipes"], DirectedEdge["pipes-parse", "transformers"], DirectedEdge["pipes-postgresql-simple", "async"], DirectedEdge["pipes-postgresql-simple", "base"], DirectedEdge["pipes-postgresql-simple", "bytestring"], DirectedEdge["pipes-postgresql-simple", "exceptions"], DirectedEdge["pipes-postgresql-simple", "mtl"], DirectedEdge["pipes-postgresql-simple", "pipes"], DirectedEdge["pipes-postgresql-simple", "pipes-concurrency"], DirectedEdge["pipes-postgresql-simple", "pipes-safe"], DirectedEdge["pipes-postgresql-simple", "postgresql-simple"], DirectedEdge["pipes-postgresql-simple", "stm"], DirectedEdge["pipes-postgresql-simple", "text"], DirectedEdge["pipes-postgresql-simple", "transformers"], DirectedEdge["pipes-rt", "base"], DirectedEdge["pipes-rt", "mwc-random"], DirectedEdge["pipes-rt", "pipes"], DirectedEdge["pipes-rt", "pipes-rt"], DirectedEdge["pipes-rt", "time"], DirectedEdge["pipes-safe", "base"], DirectedEdge["pipes-safe", "containers"], DirectedEdge["pipes-safe", "exceptions"], DirectedEdge["pipes-safe", "monad-control"], DirectedEdge["pipes-safe", "mtl"], DirectedEdge["pipes-safe", "pipes"], DirectedEdge["pipes-safe", "transformers"], DirectedEdge["pipes-safe", "transformers-base"], DirectedEdge["pipes-shell", "async"], DirectedEdge["pipes-shell", "base"], DirectedEdge["pipes-shell", "bytestring"], DirectedEdge["pipes-shell", "pipes"], DirectedEdge["pipes-shell", "pipes-bytestring"], DirectedEdge["pipes-shell", "pipes-safe"], DirectedEdge["pipes-shell", "process"], DirectedEdge["pipes-shell", "stm"], DirectedEdge["pipes-shell", "stm-chans"], DirectedEdge["pipes-shell", "text"], DirectedEdge["pipes-sqlite-simple", "base"], DirectedEdge["pipes-sqlite-simple", "pipes"], DirectedEdge["pipes-sqlite-simple", "pipes-safe"], DirectedEdge["pipes-sqlite-simple", "sqlite-simple"], DirectedEdge["pipes-sqlite-simple", "text"], DirectedEdge["pipes-text", "base"], DirectedEdge["pipes-text", "bytestring"], DirectedEdge["pipes-text", "pipes"], DirectedEdge["pipes-text", "pipes-bytestring"], DirectedEdge["pipes-text", "pipes-group"], DirectedEdge["pipes-text", "pipes-parse"], DirectedEdge["pipes-text", "pipes-safe"], DirectedEdge["pipes-text", "streaming-commons"], DirectedEdge["pipes-text", "text"], DirectedEdge["pipes-text", "transformers"], DirectedEdge["pipes-transduce", "base"], DirectedEdge["pipes-transduce", "bifunctors"], DirectedEdge["pipes-transduce", "bytestring"], DirectedEdge["pipes-transduce", "conceit"], DirectedEdge["pipes-transduce", "foldl"], DirectedEdge["pipes-transduce", "free"], DirectedEdge["pipes-transduce", "microlens"], DirectedEdge["pipes-transduce", "pipes"], DirectedEdge["pipes-transduce", "pipes-bytestring"], DirectedEdge["pipes-transduce", "pipes-concurrency"], DirectedEdge["pipes-transduce", "pipes-group"], DirectedEdge["pipes-transduce", "pipes-parse"], DirectedEdge["pipes-transduce", "pipes-safe"], DirectedEdge["pipes-transduce", "pipes-text"], DirectedEdge["pipes-transduce", "text"], DirectedEdge["pipes-transduce", "transformers"], DirectedEdge["pipes-transduce", "void"], DirectedEdge["pipes-vector", "base"], DirectedEdge["pipes-vector", "monad-primitive"], DirectedEdge["pipes-vector", "pipes"], DirectedEdge["pipes-vector", "primitive"], DirectedEdge["pipes-vector", "transformers"], DirectedEdge["pipes-vector", "vector"], DirectedEdge["pipes-wai", "base"], DirectedEdge["pipes-wai", "blaze-builder"], DirectedEdge["pipes-wai", "bytestring"], DirectedEdge["pipes-wai", "http-types"], DirectedEdge["pipes-wai", "pipes"], DirectedEdge["pipes-wai", "transformers"], DirectedEdge["pipes-wai", "wai"], DirectedEdge["pipes-websockets", "base"], DirectedEdge["pipes-websockets", "pipes"], DirectedEdge["pipes-websockets", "pipes-concurrency"], DirectedEdge["pipes-websockets", "pipes-websockets"], DirectedEdge["pipes-websockets", "text"], DirectedEdge["pipes-websockets", "transformers"], DirectedEdge["pipes-websockets", "websockets"], DirectedEdge["pipes-zeromq4", "base"], DirectedEdge["pipes-zeromq4", "bytestring"], DirectedEdge["pipes-zeromq4", "pipes"], DirectedEdge["pipes-zeromq4", "pipes-safe"], DirectedEdge["pipes-zeromq4", "semigroups"], DirectedEdge["pipes-zeromq4", "zeromq4-haskell"], DirectedEdge["pipes-zlib", "base"], DirectedEdge["pipes-zlib", "bytestring"], DirectedEdge["pipes-zlib", "pipes"], DirectedEdge["pipes-zlib", "streaming-commons"], DirectedEdge["pipes-zlib", "transformers"], DirectedEdge["pisigma", "array"], DirectedEdge["pisigma", "base"], DirectedEdge["pisigma", "bytestring"], DirectedEdge["pisigma", "containers"], DirectedEdge["pisigma", "haskeline"], DirectedEdge["pisigma", "haskeline-class"], DirectedEdge["pisigma", "mpppc"], DirectedEdge["pisigma", "mtl"], DirectedEdge["pisigma", "parsec"], DirectedEdge["pisigma", "text"], DirectedEdge["pisigma", "utf8-string"], DirectedEdge["pit", "base"], DirectedEdge["pit", "bytestring"], DirectedEdge["pit", "directory"], DirectedEdge["pit", "filepath"], DirectedEdge["pit", "optparse-applicative"], DirectedEdge["pit", "pit"], DirectedEdge["pit", "process"], DirectedEdge["pit", "temporary"], DirectedEdge["pit", "text"], DirectedEdge["pit", "unordered-containers"], DirectedEdge["pit", "yaml"], DirectedEdge["pitchtrack", "base"], DirectedEdge["pitchtrack", "bytestring"], DirectedEdge["pitchtrack", "dywapitchtrack"], DirectedEdge["pitchtrack", "pipes"], DirectedEdge["pitchtrack", "pipes-bytestring"], DirectedEdge["pitchtrack", "process"], DirectedEdge["pitchtrack", "transformers"], DirectedEdge["pivotal-tracker", "aeson"], DirectedEdge["pivotal-tracker", "aeson-casing"], DirectedEdge["pivotal-tracker", "base"], DirectedEdge["pivotal-tracker", "either"], DirectedEdge["pivotal-tracker", "pivotal-tracker"], DirectedEdge["pivotal-tracker", "servant"], DirectedEdge["pivotal-tracker", "servant-client"], DirectedEdge["pivotal-tracker", "text"], DirectedEdge["pivotal-tracker", "time"], DirectedEdge["pivotal-tracker", "transformers"], DirectedEdge["pkcs1", "base"], DirectedEdge["pkcs1", "bytestring"], DirectedEdge["pkcs1", "random"], DirectedEdge["pkcs10", "asn1-encoding"], DirectedEdge["pkcs10", "asn1-parse"], DirectedEdge["pkcs10", "asn1-types"], DirectedEdge["pkcs10", "base"], DirectedEdge["pkcs10", "bytestring"], DirectedEdge["pkcs10", "cryptonite"], DirectedEdge["pkcs10", "pem"], DirectedEdge["pkcs7", "base"], DirectedEdge["pkcs7", "bytestring"], DirectedEdge["pkggraph", "base"], DirectedEdge["pkggraph", "Cabal"], DirectedEdge["pkggraph", "split"], DirectedEdge["pktree", "base"], DirectedEdge["pktree", "containers"], DirectedEdge["placeholders", "base"], DirectedEdge["placeholders", "template-haskell"], DirectedEdge["plailude", "base"], DirectedEdge["plailude", "bytestring"], DirectedEdge["plailude", "mtl"], DirectedEdge["plailude", "time"], DirectedEdge["plailude", "unix"], DirectedEdge["plan-b", "base"], DirectedEdge["plan-b", "exceptions"], DirectedEdge["plan-b", "path"], DirectedEdge["plan-b", "path-io"], DirectedEdge["plan-b", "transformers"], DirectedEdge["planar-graph", "attoparsec"], DirectedEdge["planar-graph", "base"], DirectedEdge["planar-graph", "blaze-builder"], DirectedEdge["planar-graph", "bytestring"], DirectedEdge["planar-graph", "containers"], DirectedEdge["planar-graph", "data-clist"], DirectedEdge["planar-graph", "deepseq"], DirectedEdge["plat", "base"], DirectedEdge["plat", "bytestring"], DirectedEdge["plat", "containers"], DirectedEdge["plat", "mtl"], DirectedEdge["plat", "utf8-string"], DirectedEdge["playlists", "attoparsec"], DirectedEdge["playlists", "base"], DirectedEdge["playlists", "bytestring"], DirectedEdge["playlists", "filepath"], DirectedEdge["playlists", "optparse-applicative"], DirectedEdge["playlists", "playlists"], DirectedEdge["playlists", "text"], DirectedEdge["plist", "base"], DirectedEdge["plist", "base64-bytestring"], DirectedEdge["plist", "bytestring"], DirectedEdge["plist", "hxt"], DirectedEdge["plist-buddy", "base"], DirectedEdge["plist-buddy", "base16-bytestring"], DirectedEdge["plist-buddy", "base64-bytestring"], DirectedEdge["plist-buddy", "bytestring"], DirectedEdge["plist-buddy", "cryptohash"], DirectedEdge["plist-buddy", "directory"], DirectedEdge["plist-buddy", "mtl"], DirectedEdge["plist-buddy", "posix-pty"], DirectedEdge["plist-buddy", "process"], DirectedEdge["plist-buddy", "text"], DirectedEdge["plist-buddy", "time"], DirectedEdge["plist-buddy", "xml"], DirectedEdge["plivo", "aeson"], DirectedEdge["plivo", "base"], DirectedEdge["plivo", "blaze-builder"], DirectedEdge["plivo", "bytestring"], DirectedEdge["plivo", "errors"], DirectedEdge["plivo", "http-streams"], DirectedEdge["plivo", "http-types"], DirectedEdge["plivo", "io-streams"], DirectedEdge["plivo", "network-uri"], DirectedEdge["plivo", "old-locale"], DirectedEdge["plivo", "time"], DirectedEdge["plivo", "unexceptionalio"], DirectedEdge["plot", "array"], DirectedEdge["plot", "base"], DirectedEdge["plot", "cairo"], DirectedEdge["plot", "colour"], DirectedEdge["plot", "hmatrix"], DirectedEdge["plot", "mtl"], DirectedEdge["plot", "pango"], DirectedEdge["plot", "transformers"], DirectedEdge["plot-gtk", "base"], DirectedEdge["plot-gtk", "glib"], DirectedEdge["plot-gtk", "gtk"], DirectedEdge["plot-gtk", "hmatrix"], DirectedEdge["plot-gtk", "mtl"], DirectedEdge["plot-gtk", "plot"], DirectedEdge["plot-gtk", "process"], DirectedEdge["plot-gtk-ui", "base"], DirectedEdge["plot-gtk-ui", "cairo"], DirectedEdge["plot-gtk-ui", "colour"], DirectedEdge["plot-gtk-ui", "fixed-vector"], DirectedEdge["plot-gtk-ui", "gtk"], DirectedEdge["plot-gtk-ui", "hmatrix"], DirectedEdge["plot-gtk-ui", "plot"], DirectedEdge["plot-gtk-ui", "text"], DirectedEdge["plot-gtk-ui", "vector"], DirectedEdge["plot-gtk3", "base"], DirectedEdge["plot-gtk3", "glib"], DirectedEdge["plot-gtk3", "hmatrix"], DirectedEdge["plot-gtk3", "mtl"], DirectedEdge["plot-gtk3", "plot"], DirectedEdge["plot-gtk3", "process"], DirectedEdge["plot-lab", "plot-gtk-ui"], DirectedEdge["plot-lab", "calculator"], DirectedEdge["plot-lab", "base"], DirectedEdge["plot-lab", "colour"], DirectedEdge["plot-lab", "gtk"], DirectedEdge["plot-lab", "hmatrix"], DirectedEdge["plot-lab", "plot"], DirectedEdge["plot-lab", "text"], DirectedEdge["plot-lab", "vector"], DirectedEdge["plotfont", "base"], DirectedEdge["plotfont", "containers"], DirectedEdge["plotserver-api", "base"], DirectedEdge["plotserver-api", "curl"], DirectedEdge["plotserver-api", "split"], DirectedEdge["plugins", "array"], DirectedEdge["plugins", "base"], DirectedEdge["plugins", "Cabal"], DirectedEdge["plugins", "containers"], DirectedEdge["plugins", "directory"], DirectedEdge["plugins", "filepath"], DirectedEdge["plugins", "ghc"], DirectedEdge["plugins", "ghc-paths"], DirectedEdge["plugins", "ghc-prim"], DirectedEdge["plugins", "haskell-src"], DirectedEdge["plugins", "process"], DirectedEdge["plugins", "random"], DirectedEdge["plugins-auto", "base"], DirectedEdge["plugins-auto", "containers"], DirectedEdge["plugins-auto", "filepath"], DirectedEdge["plugins-auto", "hinotify"], DirectedEdge["plugins-auto", "mtl"], DirectedEdge["plugins-auto", "plugins"], DirectedEdge["plugins-auto", "template-haskell"], DirectedEdge["plugins-multistage", "base"], DirectedEdge["plugins-multistage", "directory"], DirectedEdge["plugins-multistage", "ghc"], DirectedEdge["plugins-multistage", "process"], DirectedEdge["plugins-multistage", "template-haskell"], DirectedEdge["plugins-multistage", "th-desugar"], DirectedEdge["plumbers", "base"], DirectedEdge["plumbers", "template-haskell"], DirectedEdge["ply-loader", "attoparsec"], DirectedEdge["ply-loader", "base"], DirectedEdge["ply-loader", "bytestring"], DirectedEdge["ply-loader", "cereal"], DirectedEdge["ply-loader", "directory"], DirectedEdge["ply-loader", "filepath"], DirectedEdge["ply-loader", "lens"], DirectedEdge["ply-loader", "linear"], DirectedEdge["ply-loader", "parallel-io"], DirectedEdge["ply-loader", "ply-loader"], DirectedEdge["ply-loader", "transformers"], DirectedEdge["ply-loader", "vector"], DirectedEdge["png-file", "array"], DirectedEdge["png-file", "base"], DirectedEdge["png-file", "binary-file"], DirectedEdge["png-file", "bytestring"], DirectedEdge["png-file", "monads-tf"], DirectedEdge["png-file", "template-haskell"], DirectedEdge["png-file", "zlib"], DirectedEdge["pngload", "array"], DirectedEdge["pngload", "base"], DirectedEdge["pngload", "bytestring"], DirectedEdge["pngload", "mtl"], DirectedEdge["pngload", "parsec"], DirectedEdge["pngload", "zlib"], DirectedEdge["pngload-fixed", "array"], DirectedEdge["pngload-fixed", "base"], DirectedEdge["pngload-fixed", "bytestring"], DirectedEdge["pngload-fixed", "mtl"], DirectedEdge["pngload-fixed", "parsec"], DirectedEdge["pngload-fixed", "zlib"], DirectedEdge["pnm", "base"], DirectedEdge["pnm", "bytestring"], DirectedEdge["pocket-dns", "aeson"], DirectedEdge["pocket-dns", "base"], DirectedEdge["pocket-dns", "bytestring"], DirectedEdge["pocket-dns", "data-default"], DirectedEdge["pocket-dns", "dns"], DirectedEdge["pocket-dns", "http-conduit"], DirectedEdge["pocket-dns", "iproute"], DirectedEdge["pocket-dns", "monad-control"], DirectedEdge["pocket-dns", "network"], DirectedEdge["pocket-dns", "optparse-applicative"], DirectedEdge["pocket-dns", "persistent"], DirectedEdge["pocket-dns", "persistent-sqlite"], DirectedEdge["pocket-dns", "persistent-template"], DirectedEdge["pocket-dns", "persistent-zookeeper"], DirectedEdge["pocket-dns", "shelly"], DirectedEdge["pocket-dns", "text"], DirectedEdge["pocket-dns", "transformers"], DirectedEdge["pocket-dns", "unordered-containers"], DirectedEdge["pocket-dns", "yaml"], DirectedEdge["pointed", "base"], DirectedEdge["pointed", "comonad"], DirectedEdge["pointed", "containers"], DirectedEdge["pointed", "data-default-class"], DirectedEdge["pointed", "hashable"], DirectedEdge["pointed", "kan-extensions"], DirectedEdge["pointed", "semigroupoids"], DirectedEdge["pointed", "semigroups"], DirectedEdge["pointed", "stm"], DirectedEdge["pointed", "tagged"], DirectedEdge["pointed", "transformers"], DirectedEdge["pointed", "transformers-compat"], DirectedEdge["pointed", "unordered-containers"], DirectedEdge["pointedlist", "base"], DirectedEdge["pointedlist", "binary"], DirectedEdge["pointfree", "array"], DirectedEdge["pointfree", "base"], DirectedEdge["pointfree", "containers"], DirectedEdge["pointfree", "haskell-src-exts"], DirectedEdge["pointfree", "transformers"], DirectedEdge["pointful", "base"], DirectedEdge["pointful", "containers"], DirectedEdge["pointful", "haskell-src-exts"], DirectedEdge["pointful", "mtl"], DirectedEdge["pointful", "syb"], DirectedEdge["pointful", "transformers"], DirectedEdge["pointless-fun", "base"], DirectedEdge["pointless-haskell", "base"], DirectedEdge["pointless-haskell", "GHood"], DirectedEdge["pointless-haskell", "process"], DirectedEdge["pointless-haskell", "syb"], DirectedEdge["pointless-lenses", "base"], DirectedEdge["pointless-lenses", "containers"], DirectedEdge["pointless-lenses", "derive"], DirectedEdge["pointless-lenses", "pointless-haskell"], DirectedEdge["pointless-lenses", "process"], DirectedEdge["pointless-lenses", "QuickCheck"], DirectedEdge["pointless-rewrite", "base"], DirectedEdge["pointless-rewrite", "containers"], DirectedEdge["pointless-rewrite", "mtl"], DirectedEdge["pointless-rewrite", "pointless-haskell"], DirectedEdge["pointless-rewrite", "pointless-lenses"], DirectedEdge["pointless-rewrite", "process"], DirectedEdge["poker-eval", "array"], DirectedEdge["poker-eval", "base"], DirectedEdge["poker-eval", "mtl"], DirectedEdge["poker-eval", "random"], DirectedEdge["poker-eval", "vector"], DirectedEdge["pokitdok", "aeson"], DirectedEdge["pokitdok", "base"], DirectedEdge["pokitdok", "base64-string"], DirectedEdge["pokitdok", "bytestring"], DirectedEdge["pokitdok", "case-insensitive"], DirectedEdge["pokitdok", "directory"], DirectedEdge["pokitdok", "hex"], DirectedEdge["pokitdok", "HTTP"], DirectedEdge["pokitdok", "http-client"], DirectedEdge["pokitdok", "http-conduit"], DirectedEdge["pokitdok", "http-types"], DirectedEdge["pokitdok", "strict"], DirectedEdge["pokitdok", "text"], DirectedEdge["pokitdok", "time"], DirectedEdge["polar", "base"], DirectedEdge["polar-configfile", "base"], DirectedEdge["polar-configfile", "containers"], DirectedEdge["polar-configfile", "MissingH"], DirectedEdge["polar-configfile", "mtl"], DirectedEdge["polar-configfile", "parsec"], DirectedEdge["polar-shader", "base"], DirectedEdge["polar-shader", "containers"], DirectedEdge["polar-shader", "lens"], DirectedEdge["polar-shader", "mtl"], DirectedEdge["polh-lexicon", "base"], DirectedEdge["polh-lexicon", "binary"], DirectedEdge["polh-lexicon", "containers"], DirectedEdge["polh-lexicon", "dawg"], DirectedEdge["polh-lexicon", "directory"], DirectedEdge["polh-lexicon", "filepath"], DirectedEdge["polh-lexicon", "mtl"], DirectedEdge["polh-lexicon", "polysoup"], DirectedEdge["polh-lexicon", "text"], DirectedEdge["polh-lexicon", "text-binary"], DirectedEdge["polh-lexicon", "transformers"], DirectedEdge["polimorf", "base"], DirectedEdge["polimorf", "binary"], DirectedEdge["polimorf", "containers"], DirectedEdge["polimorf", "text"], DirectedEdge["polimorf", "text-binary"], DirectedEdge["poll", "base"], DirectedEdge["poll", "enumset"], DirectedEdge["poll", "utility-ht"], DirectedEdge["poly-arity", "base"], DirectedEdge["poly-arity", "constraints"], DirectedEdge["poly-arity", "HList"], DirectedEdge["poly-control", "base"], DirectedEdge["poly-control", "lens"], DirectedEdge["polyToMonoid", "base"], DirectedEdge["polymap", "base"], DirectedEdge["polymap", "containers"], DirectedEdge["polynom", "algebra"], DirectedEdge["polynom", "base"], DirectedEdge["polynom", "base-unicode-symbols"], DirectedEdge["polynom", "containers"], DirectedEdge["polynomial", "base"], DirectedEdge["polynomial", "deepseq"], DirectedEdge["polynomial", "pretty"], DirectedEdge["polynomial", "prettyclass"], DirectedEdge["polynomial", "vector"], DirectedEdge["polynomial", "vector-space"], DirectedEdge["polynomial", "vector-th-unbox"], DirectedEdge["polynomials-bernstein", "base"], DirectedEdge["polynomials-bernstein", "vector"], DirectedEdge["polyparse", "base"], DirectedEdge["polyparse", "bytestring"], DirectedEdge["polyparse", "text"], DirectedEdge["polyseq", "free-theorems-seq"], DirectedEdge["polyseq", "array"], DirectedEdge["polyseq", "base"], DirectedEdge["polyseq", "bytestring"], DirectedEdge["polyseq", "cgi"], DirectedEdge["polyseq", "containers"], DirectedEdge["polyseq", "free-theorems"], DirectedEdge["polyseq", "haskell-src"], DirectedEdge["polyseq", "mtl"], DirectedEdge["polyseq", "network"], DirectedEdge["polyseq", "old-locale"], DirectedEdge["polyseq", "old-time"], DirectedEdge["polyseq", "parsec"], DirectedEdge["polyseq", "pretty"], DirectedEdge["polyseq", "syb"], DirectedEdge["polyseq", "utf8-string"], DirectedEdge["polyseq", "xhtml"], DirectedEdge["polysoup", "base"], DirectedEdge["polysoup", "containers"], DirectedEdge["polysoup", "deepseq"], DirectedEdge["polysoup", "polyparse"], DirectedEdge["polysoup", "tagsoup"], DirectedEdge["polytypeable", "base"], DirectedEdge["polytypeable-utils", "base"], DirectedEdge["polytypeable-utils", "polytypeable"], DirectedEdge["ponder", "base"], DirectedEdge["ponder", "mtl"], DirectedEdge["pong-server", "base"], DirectedEdge["pong-server", "network"], DirectedEdge["pontarius-mediaserver", "base"], DirectedEdge["pontarius-mediaserver", "HDBC"], DirectedEdge["pontarius-mediaserver", "hlogger"], DirectedEdge["pontarius-mediaserver", "pontarius-xmpp"], DirectedEdge["pontarius-mediaserver", "pontarius-xpmn"], DirectedEdge["pontarius-mediaserver", "xml-types"], DirectedEdge["pontarius-xmpp", "attoparsec"], DirectedEdge["pontarius-xmpp", "base"], DirectedEdge["pontarius-xmpp", "base64-bytestring"], DirectedEdge["pontarius-xmpp", "binary"], DirectedEdge["pontarius-xmpp", "bytestring"], DirectedEdge["pontarius-xmpp", "conduit"], DirectedEdge["pontarius-xmpp", "containers"], DirectedEdge["pontarius-xmpp", "crypto-api"], DirectedEdge["pontarius-xmpp", "crypto-random"], DirectedEdge["pontarius-xmpp", "cryptohash"], DirectedEdge["pontarius-xmpp", "cryptohash-cryptoapi"], DirectedEdge["pontarius-xmpp", "data-default"], DirectedEdge["pontarius-xmpp", "dns"], DirectedEdge["pontarius-xmpp", "exceptions"], DirectedEdge["pontarius-xmpp", "hslogger"], DirectedEdge["pontarius-xmpp", "iproute"], DirectedEdge["pontarius-xmpp", "lens-family"], DirectedEdge["pontarius-xmpp", "lifted-base"], DirectedEdge["pontarius-xmpp", "mtl"], DirectedEdge["pontarius-xmpp", "network"], DirectedEdge["pontarius-xmpp", "profunctors"], DirectedEdge["pontarius-xmpp", "random"], DirectedEdge["pontarius-xmpp", "resourcet"], DirectedEdge["pontarius-xmpp", "split"], DirectedEdge["pontarius-xmpp", "stm"], DirectedEdge["pontarius-xmpp", "stringprep"], DirectedEdge["pontarius-xmpp", "template-haskell"], DirectedEdge["pontarius-xmpp", "text"], DirectedEdge["pontarius-xmpp", "tls"], DirectedEdge["pontarius-xmpp", "transformers"], DirectedEdge["pontarius-xmpp", "unbounded-delays"], DirectedEdge["pontarius-xmpp", "void"], DirectedEdge["pontarius-xmpp", "x509-system"], DirectedEdge["pontarius-xmpp", "xml-conduit"], DirectedEdge["pontarius-xmpp", "xml-picklers"], DirectedEdge["pontarius-xmpp", "xml-types"], DirectedEdge["pontarius-xpmn", "base"], DirectedEdge["pontarius-xpmn", "containers"], DirectedEdge["pontarius-xpmn", "pontarius-xmpp"], DirectedEdge["pontarius-xpmn", "random"], DirectedEdge["pontarius-xpmn", "text"], DirectedEdge["pontarius-xpmn", "xml-types"], DirectedEdge["pony", "base"], DirectedEdge["pool", "resource-pool"], DirectedEdge["pool", "base"], DirectedEdge["pool", "monad-control"], DirectedEdge["pool", "transformers"], DirectedEdge["pool-conduit", "resource-pool"], DirectedEdge["pool-conduit", "base"], DirectedEdge["pool-conduit", "monad-control"], DirectedEdge["pool-conduit", "resource-pool"], DirectedEdge["pool-conduit", "resourcet"], DirectedEdge["pool-conduit", "transformers"], DirectedEdge["pooled-io", "base"], DirectedEdge["pooled-io", "concurrent-split"], DirectedEdge["pooled-io", "containers"], DirectedEdge["pooled-io", "deepseq"], DirectedEdge["pooled-io", "pooled-io"], DirectedEdge["pooled-io", "transformers"], DirectedEdge["pooled-io", "unsafe"], DirectedEdge["pooled-io", "utility-ht"], DirectedEdge["pop3-client", "base"], DirectedEdge["pop3-client", "mtl"], DirectedEdge["pop3-client", "network"], DirectedEdge["popenhs", "base"], DirectedEdge["popenhs", "directory"], DirectedEdge["popenhs", "unix"], DirectedEdge["poppler", "array"], DirectedEdge["poppler", "base"], DirectedEdge["poppler", "bytestring"], DirectedEdge["poppler", "cairo"], DirectedEdge["poppler", "containers"], DirectedEdge["poppler", "glib"], DirectedEdge["poppler", "gtk"], DirectedEdge["poppler", "mtl"], DirectedEdge["populate-setup-exe-cache", "base"], DirectedEdge["portable-lines", "base"], DirectedEdge["portable-lines", "bytestring"], DirectedEdge["portaudio", "base"], DirectedEdge["portaudio", "containers"], DirectedEdge["porte", "base"], DirectedEdge["porte", "bytestring"], DirectedEdge["porte", "containers"], DirectedEdge["porte", "extensible-exceptions"], DirectedEdge["porte", "stringsearch"], DirectedEdge["ports", "base"], DirectedEdge["ports", "unix"], DirectedEdge["ports-tools", "base"], DirectedEdge["ports-tools", "directory"], DirectedEdge["ports-tools", "process"], DirectedEdge["positive", "base"], DirectedEdge["positive", "nats"], DirectedEdge["positive", "semigroups"], DirectedEdge["posix-acl", "base"], DirectedEdge["posix-acl", "bytestring"], DirectedEdge["posix-acl", "containers"], DirectedEdge["posix-acl", "lifted-base"], DirectedEdge["posix-acl", "monad-control"], DirectedEdge["posix-acl", "transformers"], DirectedEdge["posix-acl", "transformers-base"], DirectedEdge["posix-acl", "unix"], DirectedEdge["posix-escape", "base"], DirectedEdge["posix-filelock", "base"], DirectedEdge["posix-filelock", "transformers"], DirectedEdge["posix-filelock", "unix"], DirectedEdge["posix-paths", "base"], DirectedEdge["posix-paths", "bytestring"], DirectedEdge["posix-paths", "unix"], DirectedEdge["posix-pty", "base"], DirectedEdge["posix-pty", "bytestring"], DirectedEdge["posix-pty", "process"], DirectedEdge["posix-pty", "unix"], DirectedEdge["posix-realtime", "base"], DirectedEdge["posix-realtime", "bytestring"], DirectedEdge["posix-realtime", "unix"], DirectedEdge["posix-timer", "base"], DirectedEdge["posix-timer", "transformers-base"], DirectedEdge["posix-timer", "unix"], DirectedEdge["posix-waitpid", "base"], DirectedEdge["posix-waitpid", "unix"], DirectedEdge["possible", "base"], DirectedEdge["possible", "ghc-prim"], DirectedEdge["post-mess-age", "base"], DirectedEdge["postcodes", "aeson"], DirectedEdge["postcodes", "base"], DirectedEdge["postcodes", "bytestring"], DirectedEdge["postcodes", "HTTP"], DirectedEdge["postgresql-binary", "aeson"], DirectedEdge["postgresql-binary", "base"], DirectedEdge["postgresql-binary", "base-prelude"], DirectedEdge["postgresql-binary", "binary-parser"], DirectedEdge["postgresql-binary", "bytestring"], DirectedEdge["postgresql-binary", "foldl"], DirectedEdge["postgresql-binary", "loch-th"], DirectedEdge["postgresql-binary", "placeholders"], DirectedEdge["postgresql-binary", "scientific"], DirectedEdge["postgresql-binary", "text"], DirectedEdge["postgresql-binary", "time"], DirectedEdge["postgresql-binary", "transformers"], DirectedEdge["postgresql-binary", "uuid"], DirectedEdge["postgresql-binary", "vector"], DirectedEdge["postgresql-config", "aeson"], DirectedEdge["postgresql-config", "base"], DirectedEdge["postgresql-config", "bytestring"], DirectedEdge["postgresql-config", "monad-control"], DirectedEdge["postgresql-config", "mtl"], DirectedEdge["postgresql-config", "postgresql-simple"], DirectedEdge["postgresql-config", "resource-pool"], DirectedEdge["postgresql-config", "time"], DirectedEdge["postgresql-connector", "base"], DirectedEdge["postgresql-connector", "bytestring"], DirectedEdge["postgresql-connector", "exceptions"], DirectedEdge["postgresql-connector", "lens"], DirectedEdge["postgresql-connector", "mtl"], DirectedEdge["postgresql-connector", "postgresql-simple"], DirectedEdge["postgresql-connector", "resource-pool"], DirectedEdge["postgresql-connector", "resourcet"], DirectedEdge["postgresql-connector", "time"], DirectedEdge["postgresql-connector", "transformers-base"], DirectedEdge["postgresql-copy-escape", "base"], DirectedEdge["postgresql-copy-escape", "bytestring"], DirectedEdge["postgresql-cube", "base"], DirectedEdge["postgresql-cube", "bytestring"], DirectedEdge["postgresql-cube", "postgresql-simple"], DirectedEdge["postgresql-error-codes", "bytestring"], DirectedEdge["postgresql-libpq", "base"], DirectedEdge["postgresql-libpq", "bytestring"], DirectedEdge["postgresql-orm", "aeson"], DirectedEdge["postgresql-orm", "base"], DirectedEdge["postgresql-orm", "blaze-builder"], DirectedEdge["postgresql-orm", "bytestring"], DirectedEdge["postgresql-orm", "bytestring-builder"], DirectedEdge["postgresql-orm", "directory"], DirectedEdge["postgresql-orm", "filepath"], DirectedEdge["postgresql-orm", "ghc-prim"], DirectedEdge["postgresql-orm", "mtl"], DirectedEdge["postgresql-orm", "old-locale"], DirectedEdge["postgresql-orm", "postgresql-simple"], DirectedEdge["postgresql-orm", "process"], DirectedEdge["postgresql-orm", "text"], DirectedEdge["postgresql-orm", "time"], DirectedEdge["postgresql-orm", "transformers"], DirectedEdge["postgresql-orm", "unix"], DirectedEdge["postgresql-orm", "unordered-containers"], DirectedEdge["postgresql-orm", "vector"], DirectedEdge["postgresql-query", "aeson"], DirectedEdge["postgresql-query", "attoparsec"], DirectedEdge["postgresql-query", "base"], DirectedEdge["postgresql-query", "blaze-builder"], DirectedEdge["postgresql-query", "bytestring"], DirectedEdge["postgresql-query", "containers"], DirectedEdge["postgresql-query", "data-default"], DirectedEdge["postgresql-query", "either"], DirectedEdge["postgresql-query", "exceptions"], DirectedEdge["postgresql-query", "file-embed"], DirectedEdge["postgresql-query", "haskell-src-meta"], DirectedEdge["postgresql-query", "hreader"], DirectedEdge["postgresql-query", "hset"], DirectedEdge["postgresql-query", "inflections"], DirectedEdge["postgresql-query", "monad-control"], DirectedEdge["postgresql-query", "monad-logger"], DirectedEdge["postgresql-query", "mtl"], DirectedEdge["postgresql-query", "postgresql-simple"], DirectedEdge["postgresql-query", "resource-pool"], DirectedEdge["postgresql-query", "semigroups"], DirectedEdge["postgresql-query", "template-haskell"], DirectedEdge["postgresql-query", "text"], DirectedEdge["postgresql-query", "th-lift"], DirectedEdge["postgresql-query", "th-lift-instances"], DirectedEdge["postgresql-query", "time"], DirectedEdge["postgresql-query", "transformers"], DirectedEdge["postgresql-query", "transformers-base"], DirectedEdge["postgresql-query", "transformers-compat"], DirectedEdge["postgresql-schema", "base"], DirectedEdge["postgresql-schema", "basic-prelude"], DirectedEdge["postgresql-schema", "optparse-applicative"], DirectedEdge["postgresql-schema", "postgresql-schema"], DirectedEdge["postgresql-schema", "postgresql-simple"], DirectedEdge["postgresql-schema", "shelly"], DirectedEdge["postgresql-schema", "text"], DirectedEdge["postgresql-schema", "time"], DirectedEdge["postgresql-schema", "time-locale-compat"], DirectedEdge["postgresql-simple", "aeson"], DirectedEdge["postgresql-simple", "attoparsec"], DirectedEdge["postgresql-simple", "base"], DirectedEdge["postgresql-simple", "bytestring"], DirectedEdge["postgresql-simple", "bytestring-builder"], DirectedEdge["postgresql-simple", "case-insensitive"], DirectedEdge["postgresql-simple", "containers"], DirectedEdge["postgresql-simple", "ghc-prim"], DirectedEdge["postgresql-simple", "hashable"], DirectedEdge["postgresql-simple", "postgresql-libpq"], DirectedEdge["postgresql-simple", "scientific"], DirectedEdge["postgresql-simple", "template-haskell"], DirectedEdge["postgresql-simple", "text"], DirectedEdge["postgresql-simple", "time"], DirectedEdge["postgresql-simple", "transformers"], DirectedEdge["postgresql-simple", "uuid-types"], DirectedEdge["postgresql-simple", "vector"], DirectedEdge["postgresql-simple-migration", "base"], DirectedEdge["postgresql-simple-migration", "base64-bytestring"], DirectedEdge["postgresql-simple-migration", "bytestring"], DirectedEdge["postgresql-simple-migration", "cryptohash"], DirectedEdge["postgresql-simple-migration", "directory"], DirectedEdge["postgresql-simple-migration", "postgresql-simple"], DirectedEdge["postgresql-simple-migration", "text"], DirectedEdge["postgresql-simple-migration", "time"], DirectedEdge["postgresql-simple-sop", "base"], DirectedEdge["postgresql-simple-sop", "generics-sop"], DirectedEdge["postgresql-simple-sop", "postgresql-simple"], DirectedEdge["postgresql-simple-typed", "base"], DirectedEdge["postgresql-simple-typed", "postgresql-libpq"], DirectedEdge["postgresql-simple-typed", "postgresql-simple"], DirectedEdge["postgresql-simple-typed", "template-haskell"], DirectedEdge["postgresql-simple-typed", "transformers"], DirectedEdge["postgresql-simple-typed", "typedquery"], DirectedEdge["postgresql-simple-typed", "utf8-string"], DirectedEdge["postgresql-simple-url", "base"], DirectedEdge["postgresql-simple-url", "network-uri"], DirectedEdge["postgresql-simple-url", "postgresql-simple"], DirectedEdge["postgresql-simple-url", "split"], DirectedEdge["postgresql-transactional", "base"], DirectedEdge["postgresql-transactional", "monad-control"], DirectedEdge["postgresql-transactional", "mtl"], DirectedEdge["postgresql-transactional", "postgresql-simple"], DirectedEdge["postgresql-typed", "aeson"], DirectedEdge["postgresql-typed", "array"], DirectedEdge["postgresql-typed", "attoparsec"], DirectedEdge["postgresql-typed", "base"], DirectedEdge["postgresql-typed", "binary"], DirectedEdge["postgresql-typed", "bytestring"], DirectedEdge["postgresql-typed", "containers"], DirectedEdge["postgresql-typed", "cryptonite"], DirectedEdge["postgresql-typed", "haskell-src-meta"], DirectedEdge["postgresql-typed", "memory"], DirectedEdge["postgresql-typed", "network"], DirectedEdge["postgresql-typed", "old-locale"], DirectedEdge["postgresql-typed", "postgresql-binary"], DirectedEdge["postgresql-typed", "scientific"], DirectedEdge["postgresql-typed", "template-haskell"], DirectedEdge["postgresql-typed", "text"], DirectedEdge["postgresql-typed", "time"], DirectedEdge["postgresql-typed", "utf8-string"], DirectedEdge["postgresql-typed", "uuid"], DirectedEdge["postgrest", "aeson"], DirectedEdge["postgrest", "base"], DirectedEdge["postgrest", "bytestring"], DirectedEdge["postgrest", "case-insensitive"], DirectedEdge["postgrest", "cassava"], DirectedEdge["postgrest", "containers"], DirectedEdge["postgrest", "contravariant"], DirectedEdge["postgrest", "errors"], DirectedEdge["postgrest", "hasql"], DirectedEdge["postgrest", "hasql-pool"], DirectedEdge["postgrest", "hasql-transaction"], DirectedEdge["postgrest", "HTTP"], DirectedEdge["postgrest", "http-types"], DirectedEdge["postgrest", "jwt"], DirectedEdge["postgrest", "lens"], DirectedEdge["postgrest", "lens-aeson"], DirectedEdge["postgrest", "mtl"], DirectedEdge["postgrest", "optparse-applicative"], DirectedEdge["postgrest", "parsec"], DirectedEdge["postgrest", "postgrest"], DirectedEdge["postgrest", "Ranged-sets"], DirectedEdge["postgrest", "regex-tdfa"], DirectedEdge["postgrest", "safe"], DirectedEdge["postgrest", "scientific"], DirectedEdge["postgrest", "string-conversions"], DirectedEdge["postgrest", "text"], DirectedEdge["postgrest", "time"], DirectedEdge["postgrest", "unix"], DirectedEdge["postgrest", "unordered-containers"], DirectedEdge["postgrest", "vector"], DirectedEdge["postgrest", "wai"], DirectedEdge["postgrest", "wai-cors"], DirectedEdge["postgrest", "wai-extra"], DirectedEdge["postgrest", "wai-middleware-static"], DirectedEdge["postgrest", "warp"], DirectedEdge["postie", "attoparsec"], DirectedEdge["postie", "base"], DirectedEdge["postie", "bytestring"], DirectedEdge["postie", "cprng-aes"], DirectedEdge["postie", "data-default-class"], DirectedEdge["postie", "mtl"], DirectedEdge["postie", "network"], DirectedEdge["postie", "pipes"], DirectedEdge["postie", "pipes-bytestring"], DirectedEdge["postie", "pipes-parse"], DirectedEdge["postie", "postie"], DirectedEdge["postie", "stringsearch"], DirectedEdge["postie", "tls"], DirectedEdge["postie", "transformers"], DirectedEdge["postie", "uuid"], DirectedEdge["postmark", "aeson"], DirectedEdge["postmark", "attoparsec"], DirectedEdge["postmark", "base"], DirectedEdge["postmark", "bytestring"], DirectedEdge["postmark", "containers"], DirectedEdge["postmark", "http-client-tls"], DirectedEdge["postmark", "http-types"], DirectedEdge["postmark", "network-api-support"], DirectedEdge["postmark", "postmark"], DirectedEdge["postmark", "text"], DirectedEdge["postmaster", "base"], DirectedEdge["postmaster", "bytestring"], DirectedEdge["postmaster", "containers"], DirectedEdge["postmaster", "directory"], DirectedEdge["postmaster", "hopenssl"], DirectedEdge["postmaster", "hsdns"], DirectedEdge["postmaster", "hsemail"], DirectedEdge["postmaster", "hsyslog"], DirectedEdge["postmaster", "mtl"], DirectedEdge["postmaster", "network"], DirectedEdge["postmaster", "old-time"], DirectedEdge["postmaster", "parsec"], DirectedEdge["postmaster", "unix"], DirectedEdge["potato-tool", "base"], DirectedEdge["potato-tool", "binary"], DirectedEdge["potato-tool", "bytestring"], DirectedEdge["potato-tool", "split"], DirectedEdge["potrace", "base"], DirectedEdge["potrace", "bindings-potrace"], DirectedEdge["potrace", "bytestring"], DirectedEdge["potrace", "containers"], DirectedEdge["potrace", "data-default"], DirectedEdge["potrace", "JuicyPixels"], DirectedEdge["potrace", "vector"], DirectedEdge["potrace-diagrams", "base"], DirectedEdge["potrace-diagrams", "diagrams-lib"], DirectedEdge["potrace-diagrams", "JuicyPixels"], DirectedEdge["potrace-diagrams", "potrace"], DirectedEdge["powermate", "base"], DirectedEdge["powermate", "directory"], DirectedEdge["powermate", "network"], DirectedEdge["powermate", "unix"], DirectedEdge["powerpc", "base"], DirectedEdge["ppm", "base"], DirectedEdge["ppm", "mtl"], DirectedEdge["pqc", "base"], DirectedEdge["pqc", "QuickCheck"], DirectedEdge["pqc", "random"], DirectedEdge["pqc", "stm"], DirectedEdge["pqueue", "base"], DirectedEdge["pqueue", "deepseq"], DirectedEdge["pqueue-mtl", "queuelike"], DirectedEdge["pqueue-mtl", "base"], DirectedEdge["pqueue-mtl", "containers"], DirectedEdge["pqueue-mtl", "ghc-prim"], DirectedEdge["pqueue-mtl", "MaybeT"], DirectedEdge["pqueue-mtl", "mtl"], DirectedEdge["pqueue-mtl", "stateful-mtl"], DirectedEdge["pqueue-mtl", "uvector"], DirectedEdge["practice-room", "base"], DirectedEdge["practice-room", "bytestring"], DirectedEdge["practice-room", "data-default"], DirectedEdge["practice-room", "directory"], DirectedEdge["practice-room", "json"], DirectedEdge["practice-room", "mps"], DirectedEdge["precis", "base"], DirectedEdge["precis", "Cabal"], DirectedEdge["precis", "containers"], DirectedEdge["precis", "cpphs"], DirectedEdge["precis", "directory"], DirectedEdge["precis", "filepath"], DirectedEdge["precis", "haskell-src-exts"], DirectedEdge["precis", "xhtml"], DirectedEdge["pred-set", "base"], DirectedEdge["pred-set", "hashable"], DirectedEdge["pred-set", "hashtables"], DirectedEdge["pred-set", "HSet"], DirectedEdge["pred-trie", "base"], DirectedEdge["pred-trie", "composition-extra"], DirectedEdge["pred-trie", "containers"], DirectedEdge["pred-trie", "hashable"], DirectedEdge["pred-trie", "hashtables"], DirectedEdge["pred-trie", "mtl"], DirectedEdge["pred-trie", "poly-arity"], DirectedEdge["pred-trie", "pred-set"], DirectedEdge["pred-trie", "QuickCheck"], DirectedEdge["pred-trie", "semigroups"], DirectedEdge["pred-trie", "tries"], DirectedEdge["pred-trie", "unordered-containers"], DirectedEdge["predicates", "base"], DirectedEdge["prednote", "base"], DirectedEdge["prednote", "bytestring"], DirectedEdge["prednote", "containers"], DirectedEdge["prednote", "contravariant"], DirectedEdge["prednote", "rainbow"], DirectedEdge["prednote", "split"], DirectedEdge["prednote", "text"], DirectedEdge["prednote", "transformers"], DirectedEdge["prednote-test", "prednote"], DirectedEdge["prednote-test", "barecheck"], DirectedEdge["prednote-test", "base"], DirectedEdge["prednote-test", "containers"], DirectedEdge["prednote-test", "prednote"], DirectedEdge["prednote-test", "QuickCheck"], DirectedEdge["prednote-test", "quickpull"], DirectedEdge["prednote-test", "rainbow"], DirectedEdge["prednote-test", "rainbow-tests"], DirectedEdge["prednote-test", "text"], DirectedEdge["prefix-units", "base"], DirectedEdge["prefork", "async"], DirectedEdge["prefork", "base"], DirectedEdge["prefork", "blaze-builder"], DirectedEdge["prefork", "bytestring"], DirectedEdge["prefork", "cmdargs"], DirectedEdge["prefork", "containers"], DirectedEdge["prefork", "data-default"], DirectedEdge["prefork", "http-types"], DirectedEdge["prefork", "network"], DirectedEdge["prefork", "prefork"], DirectedEdge["prefork", "process"], DirectedEdge["prefork", "stm"], DirectedEdge["prefork", "system-filepath"], DirectedEdge["prefork", "unix"], DirectedEdge["prefork", "wai"], DirectedEdge["prefork", "warp"], DirectedEdge["pregame", "base"], DirectedEdge["pregame", "bytestring"], DirectedEdge["pregame", "cmdargs"], DirectedEdge["pregame", "containers"], DirectedEdge["pregame", "data-default"], DirectedEdge["pregame", "lens"], DirectedEdge["pregame", "mtl"], DirectedEdge["pregame", "parallel"], DirectedEdge["pregame", "safe"], DirectedEdge["pregame", "stm"], DirectedEdge["pregame", "text"], DirectedEdge["pregame", "transformers"], DirectedEdge["pregame", "tuple"], DirectedEdge["pregame", "vector"], DirectedEdge["prelude-compat", "base"], DirectedEdge["prelude-edsl", "base"], DirectedEdge["prelude-extras", "base"], DirectedEdge["prelude-generalize", "base"], DirectedEdge["prelude-generalize", "comonad"], DirectedEdge["prelude-generalize", "logict"], DirectedEdge["prelude-generalize", "transformers"], DirectedEdge["prelude-plus", "base"], DirectedEdge["prelude-plus", "containers"], DirectedEdge["prelude-plus", "HUnit"], DirectedEdge["prelude-plus", "QuickCheck"], DirectedEdge["prelude-plus", "test-framework"], DirectedEdge["prelude-plus", "test-framework-hunit"], DirectedEdge["prelude-plus", "utf8-string"], DirectedEdge["prelude-prime", "base"], DirectedEdge["prelude-safeenum", "base"], DirectedEdge["prelude2010", "prelude-compat"], DirectedEdge["preprocess-haskell", "base"], DirectedEdge["preprocess-haskell", "base-unicode-symbols"], DirectedEdge["preprocess-haskell", "basic-prelude"], DirectedEdge["preprocess-haskell", "bytestring"], DirectedEdge["preprocess-haskell", "Cabal"], DirectedEdge["preprocess-haskell", "containers"], DirectedEdge["preprocess-haskell", "cpphs"], DirectedEdge["preprocess-haskell", "deepseq"], DirectedEdge["preprocess-haskell", "directory"], DirectedEdge["preprocess-haskell", "file-embed"], DirectedEdge["preprocess-haskell", "foldl"], DirectedEdge["preprocess-haskell", "haskell-src-exts"], DirectedEdge["preprocess-haskell", "here"], DirectedEdge["preprocess-haskell", "system-filepath"], DirectedEdge["preprocess-haskell", "temporary"], DirectedEdge["preprocess-haskell", "text"], DirectedEdge["preprocess-haskell", "turtle"], DirectedEdge["preprocess-haskell", "unix"], DirectedEdge["preprocessor-tools", "base"], DirectedEdge["preprocessor-tools", "mtl"], DirectedEdge["preprocessor-tools", "parsec"], DirectedEdge["preprocessor-tools", "syb"], DirectedEdge["presburger", "base"], DirectedEdge["presburger", "containers"], DirectedEdge["presburger", "pretty"], DirectedEdge["present", "base"], DirectedEdge["present", "template-haskell"], DirectedEdge["press", "base"], DirectedEdge["press", "containers"], DirectedEdge["press", "json"], DirectedEdge["press", "mtl"], DirectedEdge["press", "parsec"], DirectedEdge["presto-hdbc", "aeson"], DirectedEdge["presto-hdbc", "aeson-pretty"], DirectedEdge["presto-hdbc", "base"], DirectedEdge["presto-hdbc", "bytestring"], DirectedEdge["presto-hdbc", "convertible"], DirectedEdge["presto-hdbc", "either"], DirectedEdge["presto-hdbc", "either-unwrap"], DirectedEdge["presto-hdbc", "errors"], DirectedEdge["presto-hdbc", "HDBC"], DirectedEdge["presto-hdbc", "HTTP"], DirectedEdge["presto-hdbc", "http-streams"], DirectedEdge["presto-hdbc", "io-streams"], DirectedEdge["presto-hdbc", "lens"], DirectedEdge["presto-hdbc", "mtl"], DirectedEdge["presto-hdbc", "network-uri"], DirectedEdge["presto-hdbc", "safe"], DirectedEdge["presto-hdbc", "scientific"], DirectedEdge["presto-hdbc", "text"], DirectedEdge["presto-hdbc", "transformers"], DirectedEdge["prettify", "base"], DirectedEdge["prettify", "containers"], DirectedEdge["prettify", "semigroups"], DirectedEdge["pretty", "base"], DirectedEdge["pretty", "deepseq"], DirectedEdge["pretty", "ghc-prim"], DirectedEdge["pretty-class", "prettyclass"], DirectedEdge["pretty-class", "pretty"], DirectedEdge["pretty-class", "base"], DirectedEdge["pretty-class", "pretty"], DirectedEdge["pretty-compact", "base"], DirectedEdge["pretty-compact", "containers"], DirectedEdge["pretty-error", "base"], DirectedEdge["pretty-error", "basic-prelude"], DirectedEdge["pretty-error", "bytestring"], DirectedEdge["pretty-error", "pretty-show"], DirectedEdge["pretty-hex", "base"], DirectedEdge["pretty-hex", "bytestring"], DirectedEdge["pretty-ncols", "base"], DirectedEdge["pretty-ncols", "pretty"], DirectedEdge["pretty-show", "array"], DirectedEdge["pretty-show", "base"], DirectedEdge["pretty-show", "filepath"], DirectedEdge["pretty-show", "ghc-prim"], DirectedEdge["pretty-show", "haskell-lexer"], DirectedEdge["pretty-show", "pretty"], DirectedEdge["pretty-show", "pretty-show"], DirectedEdge["pretty-sop", "base"], DirectedEdge["pretty-sop", "generics-sop"], DirectedEdge["pretty-sop", "pretty-show"], DirectedEdge["pretty-tree", "base"], DirectedEdge["pretty-tree", "boxes"], DirectedEdge["pretty-tree", "containers"], DirectedEdge["prettyFunctionComposing", "base"], DirectedEdge["prettyclass", "base"], DirectedEdge["prettyclass", "pretty"], DirectedEdge["prim-spoon", "base"], DirectedEdge["prim-spoon", "ghc-prim"], DirectedEdge["prim-spoon", "spoon"], DirectedEdge["prim-uniq", "base"], DirectedEdge["prim-uniq", "dependent-sum"], DirectedEdge["prim-uniq", "primitive"], DirectedEdge["primes", "base"], DirectedEdge["primitive", "base"], DirectedEdge["primitive", "ghc-prim"], DirectedEdge["primitive", "transformers"], DirectedEdge["primitive-simd", "base"], DirectedEdge["primitive-simd", "ghc-prim"], DirectedEdge["primitive-simd", "primitive"], DirectedEdge["primitive-simd", "vector"], DirectedEdge["primula-board", "base"], DirectedEdge["primula-board", "ConfigFile"], DirectedEdge["primula-board", "containers"], DirectedEdge["primula-board", "directory"], DirectedEdge["primula-board", "happstack"], DirectedEdge["primula-board", "happstack-helpers"], DirectedEdge["primula-board", "happstack-server"], DirectedEdge["primula-board", "happstack-state"], DirectedEdge["primula-board", "hsp"], DirectedEdge["primula-board", "MissingH"], DirectedEdge["primula-board", "mtl"], DirectedEdge["primula-board", "old-locale"], DirectedEdge["primula-board", "old-time"], DirectedEdge["primula-board", "random"], DirectedEdge["primula-board", "regex-posix"], DirectedEdge["primula-board", "split"], DirectedEdge["primula-board", "time"], DirectedEdge["primula-bot", "base"], DirectedEdge["primula-bot", "ConfigFile"], DirectedEdge["primula-bot", "directory"], DirectedEdge["primula-bot", "HTTP"], DirectedEdge["primula-bot", "mtl"], DirectedEdge["primula-bot", "network"], DirectedEdge["primula-bot", "parsec"], DirectedEdge["primula-bot", "utf8-string"], DirectedEdge["primula-bot", "XMPP"], DirectedEdge["pringletons", "aeson"], DirectedEdge["pringletons", "base"], DirectedEdge["pringletons", "hashable"], DirectedEdge["pringletons", "singletons"], DirectedEdge["pringletons", "template-haskell"], DirectedEdge["pringletons", "text"], DirectedEdge["pringletons", "unordered-containers"], DirectedEdge["pringletons", "vector"], DirectedEdge["pringletons", "vinyl"], DirectedEdge["print-debugger", "base"], DirectedEdge["print-debugger", "split"], DirectedEdge["printf-mauke", "base"], DirectedEdge["printf-mauke", "bytestring"], DirectedEdge["printf-mauke", "containers"], DirectedEdge["printf-mauke", "data-default"], DirectedEdge["printf-mauke", "template-haskell"], DirectedEdge["printf-safe", "base"], DirectedEdge["printxosd", "base"], DirectedEdge["printxosd", "xosd"], DirectedEdge["priority-queue", "base"], DirectedEdge["priority-queue", "containers"], DirectedEdge["priority-queue", "queue"], DirectedEdge["priority-queue", "reord"], DirectedEdge["priority-queue", "stateref"], DirectedEdge["priority-sync", "base"], DirectedEdge["priority-sync", "containers"], DirectedEdge["priority-sync", "parallel"], DirectedEdge["priority-sync", "PSQueue"], DirectedEdge["priority-sync", "random"], DirectedEdge["priority-sync", "stm"], DirectedEdge["privileged-concurrency", "base"], DirectedEdge["privileged-concurrency", "stm"], DirectedEdge["prizm", "base"], DirectedEdge["prizm", "text"], DirectedEdge["probability", "base"], DirectedEdge["probability", "containers"], DirectedEdge["probability", "random"], DirectedEdge["probability", "special-functors"], DirectedEdge["probability", "transformers"], DirectedEdge["probability", "utility-ht"], DirectedEdge["probable", "base"], DirectedEdge["probable", "mtl"], DirectedEdge["probable", "mwc-random"], DirectedEdge["probable", "primitive"], DirectedEdge["probable", "statistics"], DirectedEdge["probable", "transformers"], DirectedEdge["probable", "vector"], DirectedEdge["proc", "base"], DirectedEdge["proc", "containers"], DirectedEdge["proc", "directory"], DirectedEdge["proc", "filepath"], DirectedEdge["proc", "process"], DirectedEdge["proc", "regex-tdfa"], DirectedEdge["proc", "split"], DirectedEdge["proc", "strict"], DirectedEdge["proc", "xformat"], DirectedEdge["process", "base"], DirectedEdge["process", "deepseq"], DirectedEdge["process", "directory"], DirectedEdge["process", "filepath"], DirectedEdge["process", "unix"], DirectedEdge["process-conduit", "conduit-extra"], DirectedEdge["process-conduit", "base"], DirectedEdge["process-conduit", "bytestring"], DirectedEdge["process-conduit", "conduit"], DirectedEdge["process-conduit", "control-monad-loop"], DirectedEdge["process-conduit", "mtl"], DirectedEdge["process-conduit", "process"], DirectedEdge["process-conduit", "resourcet"], DirectedEdge["process-conduit", "shakespeare"], DirectedEdge["process-conduit", "shakespeare-text"], DirectedEdge["process-conduit", "template-haskell"], DirectedEdge["process-conduit", "text"], DirectedEdge["process-extras", "base"], DirectedEdge["process-extras", "bytestring"], DirectedEdge["process-extras", "deepseq"], DirectedEdge["process-extras", "generic-deriving"], DirectedEdge["process-extras", "ListLike"], DirectedEdge["process-extras", "process"], DirectedEdge["process-extras", "text"], DirectedEdge["process-iterio", "base"], DirectedEdge["process-iterio", "bytestring"], DirectedEdge["process-iterio", "cpphs"], DirectedEdge["process-iterio", "iterIO"], DirectedEdge["process-iterio", "process"], DirectedEdge["process-iterio", "transformers"], DirectedEdge["process-leksah", "base"], DirectedEdge["process-leksah", "directory"], DirectedEdge["process-leksah", "filepath"], DirectedEdge["process-leksah", "unix"], DirectedEdge["process-listlike", "process-extras"], DirectedEdge["process-listlike", "base"], DirectedEdge["process-listlike", "bytestring"], DirectedEdge["process-listlike", "deepseq"], DirectedEdge["process-listlike", "ListLike"], DirectedEdge["process-listlike", "process"], DirectedEdge["process-listlike", "text"], DirectedEdge["process-progress", "process-extras"], DirectedEdge["process-progress", "base"], DirectedEdge["process-progress", "bytestring"], DirectedEdge["process-progress", "deepseq"], DirectedEdge["process-progress", "HUnit"], DirectedEdge["process-progress", "ListLike"], DirectedEdge["process-progress", "mtl"], DirectedEdge["process-progress", "process"], DirectedEdge["process-progress", "process-listlike"], DirectedEdge["process-progress", "text"], DirectedEdge["process-progress", "time"], DirectedEdge["process-progress", "unix"], DirectedEdge["process-progress", "utf8-string"], DirectedEdge["process-qq", "base"], DirectedEdge["process-qq", "bytestring"], DirectedEdge["process-qq", "enumerator"], DirectedEdge["process-qq", "mtl"], DirectedEdge["process-qq", "process"], DirectedEdge["process-qq", "shakespeare-text"], DirectedEdge["process-qq", "template-haskell"], DirectedEdge["process-qq", "text"], DirectedEdge["process-streaming", "base"], DirectedEdge["process-streaming", "bifunctors"], DirectedEdge["process-streaming", "bytestring"], DirectedEdge["process-streaming", "conceit"], DirectedEdge["process-streaming", "free"], DirectedEdge["process-streaming", "kan-extensions"], DirectedEdge["process-streaming", "pipes"], DirectedEdge["process-streaming", "pipes-bytestring"], DirectedEdge["process-streaming", "pipes-concurrency"], DirectedEdge["process-streaming", "pipes-parse"], DirectedEdge["process-streaming", "pipes-safe"], DirectedEdge["process-streaming", "pipes-text"], DirectedEdge["process-streaming", "pipes-transduce"], DirectedEdge["process-streaming", "process"], DirectedEdge["process-streaming", "profunctors"], DirectedEdge["process-streaming", "text"], DirectedEdge["process-streaming", "transformers"], DirectedEdge["process-streaming", "transformers-compat"], DirectedEdge["process-streaming", "void"], DirectedEdge["processing", "base"], DirectedEdge["processing", "blaze-html"], DirectedEdge["processing", "containers"], DirectedEdge["processing", "directory"], DirectedEdge["processing", "filepath"], DirectedEdge["processing", "ghc-prim"], DirectedEdge["processing", "mainland-pretty"], DirectedEdge["processing", "multiset"], DirectedEdge["processing", "QuickCheck"], DirectedEdge["processing", "quickcheck-instances"], DirectedEdge["processing", "template-haskell"], DirectedEdge["processing", "text"], DirectedEdge["processing", "transformers"], DirectedEdge["processor-creative-kit", "array"], DirectedEdge["processor-creative-kit", "attoparsec"], DirectedEdge["processor-creative-kit", "base"], DirectedEdge["processor-creative-kit", "bytestring"], DirectedEdge["processor-creative-kit", "containers"], DirectedEdge["processor-creative-kit", "deepseq"], DirectedEdge["processor-creative-kit", "mtl"], DirectedEdge["procrastinating-structure", "base"], DirectedEdge["procrastinating-structure", "procrastinating-variable"], DirectedEdge["procrastinating-variable", "base"], DirectedEdge["procstat", "attoparsec"], DirectedEdge["procstat", "base"], DirectedEdge["procstat", "bytestring"], DirectedEdge["proctest", "base"], DirectedEdge["proctest", "bytestring"], DirectedEdge["proctest", "hspec"], DirectedEdge["proctest", "HUnit"], DirectedEdge["proctest", "process"], DirectedEdge["proctest", "QuickCheck"], DirectedEdge["proctest", "text"], DirectedEdge["product-profunctors", "base"], DirectedEdge["product-profunctors", "contravariant"], DirectedEdge["product-profunctors", "profunctors"], DirectedEdge["product-profunctors", "tagged"], DirectedEdge["product-profunctors", "template-haskell"], DirectedEdge["product-profunctors", "transformers"], DirectedEdge["prof2dot", "base"], DirectedEdge["prof2dot", "containers"], DirectedEdge["prof2dot", "filepath"], DirectedEdge["prof2dot", "parsec"], DirectedEdge["prof2pretty", "base"], DirectedEdge["prof2pretty", "containers"], DirectedEdge["prof2pretty", "filepath"], DirectedEdge["prof2pretty", "haskell-src-exts"], DirectedEdge["prof2pretty", "semigroups"], DirectedEdge["prof2pretty", "uniplate"], DirectedEdge["prof2pretty", "zenc"], DirectedEdge["profiteur", "aeson"], DirectedEdge["profiteur", "attoparsec"], DirectedEdge["profiteur", "base"], DirectedEdge["profiteur", "bytestring"], DirectedEdge["profiteur", "filepath"], DirectedEdge["profiteur", "text"], DirectedEdge["profiteur", "unordered-containers"], DirectedEdge["profiteur", "vector"], DirectedEdge["profunctor-extras", "base"], DirectedEdge["profunctor-extras", "profunctors"], DirectedEdge["profunctors", "base"], DirectedEdge["profunctors", "base-orphans"], DirectedEdge["profunctors", "bifunctors"], DirectedEdge["profunctors", "comonad"], DirectedEdge["profunctors", "contravariant"], DirectedEdge["profunctors", "distributive"], DirectedEdge["profunctors", "tagged"], DirectedEdge["profunctors", "transformers"], DirectedEdge["progress", "base"], DirectedEdge["progress", "time"], DirectedEdge["progressbar", "base"], DirectedEdge["progressbar", "io-reactive"], DirectedEdge["progression", "base"], DirectedEdge["progression", "containers"], DirectedEdge["progression", "criterion"], DirectedEdge["progression", "directory"], DirectedEdge["progression", "filepath"], DirectedEdge["progression", "haskeline"], DirectedEdge["progression", "process"], DirectedEdge["progression", "txt-sushi"], DirectedEdge["progressive", "base"], DirectedEdge["progressive", "binary"], DirectedEdge["progressive", "bytestring"], DirectedEdge["progressive", "containers"], DirectedEdge["progressive", "directory"], DirectedEdge["progressive", "filepath"], DirectedEdge["progressive", "ghc-prim"], DirectedEdge["progressive", "process"], DirectedEdge["progressive", "text"], DirectedEdge["proj4-hs-bindings", "base"], DirectedEdge["proj4-hs-bindings", "ghc-prim"], DirectedEdge["project-template", "base"], DirectedEdge["project-template", "base64-bytestring"], DirectedEdge["project-template", "bytestring"], DirectedEdge["project-template", "conduit"], DirectedEdge["project-template", "conduit-extra"], DirectedEdge["project-template", "containers"], DirectedEdge["project-template", "directory"], DirectedEdge["project-template", "filepath"], DirectedEdge["project-template", "mtl"], DirectedEdge["project-template", "resourcet"], DirectedEdge["project-template", "text"], DirectedEdge["project-template", "transformers"], DirectedEdge["projection", "base"], DirectedEdge["projectroot", "base"], DirectedEdge["projectroot", "directory"], DirectedEdge["prolog", "base"], DirectedEdge["prolog", "containers"], DirectedEdge["prolog", "mtl"], DirectedEdge["prolog", "parsec"], DirectedEdge["prolog", "syb"], DirectedEdge["prolog", "template-haskell"], DirectedEdge["prolog", "th-lift"], DirectedEdge["prolog", "transformers"], DirectedEdge["prolog-graph", "base"], DirectedEdge["prolog-graph", "cmdargs"], DirectedEdge["prolog-graph", "fgl"], DirectedEdge["prolog-graph", "graphviz"], DirectedEdge["prolog-graph", "mtl"], DirectedEdge["prolog-graph", "prolog"], DirectedEdge["prolog-graph", "prolog-graph-lib"], DirectedEdge["prolog-graph", "text"], DirectedEdge["prolog-graph-lib", "base"], DirectedEdge["prolog-graph-lib", "fgl"], DirectedEdge["prolog-graph-lib", "graphviz"], DirectedEdge["prolog-graph-lib", "mtl"], DirectedEdge["prolog-graph-lib", "prolog"], DirectedEdge["prolog-graph-lib", "text"], DirectedEdge["prologue", "base"], DirectedEdge["prologue", "bifunctors"], DirectedEdge["prologue", "binary"], DirectedEdge["prologue", "cond"], DirectedEdge["prologue", "container"], DirectedEdge["prologue", "convert"], DirectedEdge["prologue", "data-default"], DirectedEdge["prologue", "data-layer"], DirectedEdge["prologue", "errors"], DirectedEdge["prologue", "functor-utils"], DirectedEdge["prologue", "impossible"], DirectedEdge["prologue", "lens"], DirectedEdge["prologue", "lens-utils"], DirectedEdge["prologue", "mtl"], DirectedEdge["prologue", "pretty-show"], DirectedEdge["prologue", "string-qq"], DirectedEdge["prologue", "text"], DirectedEdge["prologue", "transformers"], DirectedEdge["prologue", "transformers-base"], DirectedEdge["prologue", "tuple"], DirectedEdge["prologue", "typelevel"], DirectedEdge["prologue", "vector"], DirectedEdge["prometheus", "atomic-primops"], DirectedEdge["prometheus", "base"], DirectedEdge["prometheus", "bytestring"], DirectedEdge["prometheus", "containers"], DirectedEdge["prometheus", "http-types"], DirectedEdge["prometheus", "text"], DirectedEdge["prometheus", "transformers"], DirectedEdge["prometheus", "wai"], DirectedEdge["prometheus", "warp"], DirectedEdge["prometheus-client", "atomic-primops"], DirectedEdge["prometheus-client", "base"], DirectedEdge["prometheus-client", "bytestring"], DirectedEdge["prometheus-client", "containers"], DirectedEdge["prometheus-client", "mtl"], DirectedEdge["prometheus-client", "stm"], DirectedEdge["prometheus-client", "time"], DirectedEdge["prometheus-client", "transformers"], DirectedEdge["prometheus-client", "utf8-string"], DirectedEdge["prometheus-metrics-ghc", "base"], DirectedEdge["prometheus-metrics-ghc", "prometheus-client"], DirectedEdge["prometheus-metrics-ghc", "utf8-string"], DirectedEdge["promise", "async"], DirectedEdge["promise", "base"], DirectedEdge["promises", "base"], DirectedEdge["promises", "primitive"], DirectedEdge["prompt", "base"], DirectedEdge["prompt", "base-compat"], DirectedEdge["prompt", "mtl"], DirectedEdge["prompt", "transformers"], DirectedEdge["prompt", "transformers-compat"], DirectedEdge["propane", "base"], DirectedEdge["propane", "colour"], DirectedEdge["propane", "containers"], DirectedEdge["propane", "directory"], DirectedEdge["propane", "filepath"], DirectedEdge["propane", "repa"], DirectedEdge["propane", "repa-devil"], DirectedEdge["propane", "spawn"], DirectedEdge["propellor", "ansi-terminal"], DirectedEdge["propellor", "async"], DirectedEdge["propellor", "base"], DirectedEdge["propellor", "bytestring"], DirectedEdge["propellor", "containers"], DirectedEdge["propellor", "directory"], DirectedEdge["propellor", "exceptions"], DirectedEdge["propellor", "filepath"], DirectedEdge["propellor", "hslogger"], DirectedEdge["propellor", "IfElse"], DirectedEdge["propellor", "MissingH"], DirectedEdge["propellor", "mtl"], DirectedEdge["propellor", "network"], DirectedEdge["propellor", "process"], DirectedEdge["propellor", "stm"], DirectedEdge["propellor", "text"], DirectedEdge["propellor", "time"], DirectedEdge["propellor", "transformers"], DirectedEdge["propellor", "unix"], DirectedEdge["propellor", "unix-compat"], DirectedEdge["properties", "base"], DirectedEdge["property-list", "base"], DirectedEdge["property-list", "base64-bytestring"], DirectedEdge["property-list", "bytestring"], DirectedEdge["property-list", "cereal"], DirectedEdge["property-list", "containers"], DirectedEdge["property-list", "free"], DirectedEdge["property-list", "oneOfN"], DirectedEdge["property-list", "recursion-schemes"], DirectedEdge["property-list", "syb"], DirectedEdge["property-list", "template-haskell"], DirectedEdge["property-list", "text"], DirectedEdge["property-list", "time"], DirectedEdge["property-list", "time-locale-compat"], DirectedEdge["property-list", "transformers"], DirectedEdge["property-list", "vector"], DirectedEdge["property-list", "xml"], DirectedEdge["proplang", "base"], DirectedEdge["proplang", "glade"], DirectedEdge["proplang", "glib"], DirectedEdge["proplang", "gtk"], DirectedEdge["props", "base"], DirectedEdge["prosper", "aeson"], DirectedEdge["prosper", "base"], DirectedEdge["prosper", "bytestring"], DirectedEdge["prosper", "cereal"], DirectedEdge["prosper", "containers"], DirectedEdge["prosper", "HsOpenSSL"], DirectedEdge["prosper", "http-streams"], DirectedEdge["prosper", "io-streams"], DirectedEdge["prosper", "mtl"], DirectedEdge["prosper", "text"], DirectedEdge["prosper", "transformers"], DirectedEdge["prosper", "vector"], DirectedEdge["proteaaudio", "base"], DirectedEdge["protobuf", "base"], DirectedEdge["protobuf", "bytestring"], DirectedEdge["protobuf", "cereal"], DirectedEdge["protobuf", "deepseq"], DirectedEdge["protobuf", "mtl"], DirectedEdge["protobuf", "text"], DirectedEdge["protobuf", "unordered-containers"], DirectedEdge["protobuf-native", "base"], DirectedEdge["protobuf-native", "bytestring"], DirectedEdge["protobuf-native", "cplusplus-th"], DirectedEdge["protobuf-native", "protobuf-native"], DirectedEdge["protobuf-native", "template-haskell"], DirectedEdge["protobuf-native", "text"], DirectedEdge["protobuf-simple", "base"], DirectedEdge["protobuf-simple", "binary"], DirectedEdge["protobuf-simple", "bytestring"], DirectedEdge["protobuf-simple", "containers"], DirectedEdge["protobuf-simple", "directory"], DirectedEdge["protobuf-simple", "filepath"], DirectedEdge["protobuf-simple", "mtl"], DirectedEdge["protobuf-simple", "parsec"], DirectedEdge["protobuf-simple", "split"], DirectedEdge["protobuf-simple", "text"], DirectedEdge["protocol-buffers", "array"], DirectedEdge["protocol-buffers", "base"], DirectedEdge["protocol-buffers", "binary"], DirectedEdge["protocol-buffers", "bytestring"], DirectedEdge["protocol-buffers", "containers"], DirectedEdge["protocol-buffers", "directory"], DirectedEdge["protocol-buffers", "filepath"], DirectedEdge["protocol-buffers", "mtl"], DirectedEdge["protocol-buffers", "parsec"], DirectedEdge["protocol-buffers", "syb"], DirectedEdge["protocol-buffers", "utf8-string"], DirectedEdge["protocol-buffers-descriptor", "base"], DirectedEdge["protocol-buffers-descriptor", "bytestring"], DirectedEdge["protocol-buffers-descriptor", "containers"], DirectedEdge["protocol-buffers-descriptor", "protocol-buffers"], DirectedEdge["protocol-buffers-descriptor-fork", "base"], DirectedEdge["protocol-buffers-descriptor-fork", "bytestring"], DirectedEdge["protocol-buffers-descriptor-fork", "containers"], DirectedEdge["protocol-buffers-descriptor-fork", "protocol-buffers-fork"], DirectedEdge["protocol-buffers-fork", "array"], DirectedEdge["protocol-buffers-fork", "base"], DirectedEdge["protocol-buffers-fork", "binary"], DirectedEdge["protocol-buffers-fork", "bytestring"], DirectedEdge["protocol-buffers-fork", "containers"], DirectedEdge["protocol-buffers-fork", "directory"], DirectedEdge["protocol-buffers-fork", "filepath"], DirectedEdge["protocol-buffers-fork", "mtl"], DirectedEdge["protocol-buffers-fork", "syb"], DirectedEdge["protocol-buffers-fork", "utf8-string"], DirectedEdge["protolude", "async"], DirectedEdge["protolude", "base"], DirectedEdge["protolude", "bytestring"], DirectedEdge["protolude", "containers"], DirectedEdge["protolude", "deepseq"], DirectedEdge["protolude", "ghc-prim"], DirectedEdge["protolude", "mtl"], DirectedEdge["protolude", "safe"], DirectedEdge["protolude", "stm"], DirectedEdge["protolude", "string-conv"], DirectedEdge["protolude", "text"], DirectedEdge["protolude", "transformers"], DirectedEdge["proton-haskell", "base"], DirectedEdge["proton-haskell", "containers"], DirectedEdge["proton-haskell", "directory"], DirectedEdge["proton-haskell", "filepath"], DirectedEdge["prototype", "base"], DirectedEdge["prototype", "monads-tf"], DirectedEdge["prove-everywhere-server", "aeson"], DirectedEdge["prove-everywhere-server", "base"], DirectedEdge["prove-everywhere-server", "bytestring"], DirectedEdge["prove-everywhere-server", "case-insensitive"], DirectedEdge["prove-everywhere-server", "http-types"], DirectedEdge["prove-everywhere-server", "optparse-applicative"], DirectedEdge["prove-everywhere-server", "parsec"], DirectedEdge["prove-everywhere-server", "parsers"], DirectedEdge["prove-everywhere-server", "process"], DirectedEdge["prove-everywhere-server", "safe"], DirectedEdge["prove-everywhere-server", "text"], DirectedEdge["prove-everywhere-server", "time"], DirectedEdge["prove-everywhere-server", "unordered-containers"], DirectedEdge["prove-everywhere-server", "wai"], DirectedEdge["prove-everywhere-server", "warp"], DirectedEdge["proxied", "base"], DirectedEdge["proxied", "generic-deriving"], DirectedEdge["proxied", "tagged"], DirectedEdge["proxy-kindness", "base"], DirectedEdge["proxy-kindness", "tagged"], DirectedEdge["psc-ide", "purescript"], DirectedEdge["psc-ide", "aeson"], DirectedEdge["psc-ide", "base"], DirectedEdge["psc-ide", "bytestring"], DirectedEdge["psc-ide", "containers"], DirectedEdge["psc-ide", "directory"], DirectedEdge["psc-ide", "edit-distance"], DirectedEdge["psc-ide", "either"], DirectedEdge["psc-ide", "filepath"], DirectedEdge["psc-ide", "fsnotify"], DirectedEdge["psc-ide", "http-client"], DirectedEdge["psc-ide", "lens"], DirectedEdge["psc-ide", "lens-aeson"], DirectedEdge["psc-ide", "monad-logger"], DirectedEdge["psc-ide", "mtl"], DirectedEdge["psc-ide", "network"], DirectedEdge["psc-ide", "optparse-applicative"], DirectedEdge["psc-ide", "parsec"], DirectedEdge["psc-ide", "psc-ide"], DirectedEdge["psc-ide", "purescript"], DirectedEdge["psc-ide", "regex-tdfa"], DirectedEdge["psc-ide", "stm"], DirectedEdge["psc-ide", "text"], DirectedEdge["psc-ide", "wreq"], DirectedEdge["pseudo-boolean", "attoparsec"], DirectedEdge["pseudo-boolean", "base"], DirectedEdge["pseudo-boolean", "bytestring"], DirectedEdge["pseudo-boolean", "bytestring-builder"], DirectedEdge["pseudo-boolean", "containers"], DirectedEdge["pseudo-boolean", "deepseq"], DirectedEdge["pseudo-boolean", "dlist"], DirectedEdge["pseudo-boolean", "hashable"], DirectedEdge["pseudo-boolean", "megaparsec"], DirectedEdge["pseudo-boolean", "parsec"], DirectedEdge["pseudo-trie", "base"], DirectedEdge["pseudo-trie", "semigroups"], DirectedEdge["pseudomacros", "base"], DirectedEdge["pseudomacros", "template-haskell"], DirectedEdge["pseudomacros", "time"], DirectedEdge["psql-helpers", "base"], DirectedEdge["psql-helpers", "postgresql-simple"], DirectedEdge["psqueues", "base"], DirectedEdge["psqueues", "deepseq"], DirectedEdge["psqueues", "ghc-prim"], DirectedEdge["psqueues", "hashable"], DirectedEdge["pub", "base"], DirectedEdge["pub", "bytestring"], DirectedEdge["pub", "cmdargs"], DirectedEdge["pub", "ConfigFile"], DirectedEdge["pub", "containers"], DirectedEdge["pub", "groom"], DirectedEdge["pub", "hedis"], DirectedEdge["pub", "hslogger"], DirectedEdge["pub", "mtl"], DirectedEdge["pub", "network"], DirectedEdge["pub", "pipes"], DirectedEdge["pub", "pipes-bytestring"], DirectedEdge["pub", "safe"], DirectedEdge["pub", "system-filepath"], DirectedEdge["pub", "text"], DirectedEdge["pub", "time"], DirectedEdge["pub", "transformers"], DirectedEdge["publicsuffix", "base"], DirectedEdge["publicsuffix", "filepath"], DirectedEdge["publicsuffix", "template-haskell"], DirectedEdge["publicsuffixlist", "base"], DirectedEdge["publicsuffixlist", "bytestring"], DirectedEdge["publicsuffixlist", "cereal"], DirectedEdge["publicsuffixlist", "conduit"], DirectedEdge["publicsuffixlist", "containers"], DirectedEdge["publicsuffixlist", "data-default"], DirectedEdge["publicsuffixlist", "idna"], DirectedEdge["publicsuffixlist", "text"], DirectedEdge["publicsuffixlist", "utf8-string"], DirectedEdge["publicsuffixlistcreate", "base"], DirectedEdge["publicsuffixlistcreate", "bytestring"], DirectedEdge["publicsuffixlistcreate", "conduit"], DirectedEdge["publicsuffixlistcreate", "containers"], DirectedEdge["publicsuffixlistcreate", "data-default"], DirectedEdge["publicsuffixlistcreate", "idna"], DirectedEdge["publicsuffixlistcreate", "publicsuffixlist"], DirectedEdge["publicsuffixlistcreate", "text"], DirectedEdge["pubnub", "aeson"], DirectedEdge["pubnub", "async"], DirectedEdge["pubnub", "base"], DirectedEdge["pubnub", "base64-bytestring"], DirectedEdge["pubnub", "bytestring"], DirectedEdge["pubnub", "Cabal"], DirectedEdge["pubnub", "cipher-aes"], DirectedEdge["pubnub", "conduit"], DirectedEdge["pubnub", "conduit-extra"], DirectedEdge["pubnub", "crypto-api"], DirectedEdge["pubnub", "crypto-cipher-types"], DirectedEdge["pubnub", "data-default"], DirectedEdge["pubnub", "http-client"], DirectedEdge["pubnub", "http-conduit"], DirectedEdge["pubnub", "http-types"], DirectedEdge["pubnub", "HUnit"], DirectedEdge["pubnub", "lifted-base"], DirectedEdge["pubnub", "mtl"], DirectedEdge["pubnub", "pubnub"], DirectedEdge["pubnub", "QuickCheck"], DirectedEdge["pubnub", "SHA"], DirectedEdge["pubnub", "smallcheck"], DirectedEdge["pubnub", "tasty"], DirectedEdge["pubnub", "tasty-hunit"], DirectedEdge["pubnub", "tasty-quickcheck"], DirectedEdge["pubnub", "tasty-smallcheck"], DirectedEdge["pubnub", "text"], DirectedEdge["pubnub", "time"], DirectedEdge["pubnub", "transformers"], DirectedEdge["pubnub", "uuid"], DirectedEdge["pubnub", "vector"], DirectedEdge["pubsub", "base"], DirectedEdge["pubsub", "fastcgi"], DirectedEdge["pubsub", "feed"], DirectedEdge["pubsub", "HTTP"], DirectedEdge["pubsub", "json"], DirectedEdge["pubsub", "mime"], DirectedEdge["pubsub", "network"], DirectedEdge["pubsub", "random"], DirectedEdge["pubsub", "utf8-string"], DirectedEdge["pubsub", "xml"], DirectedEdge["puffytools", "aeson"], DirectedEdge["puffytools", "aeson-pretty"], DirectedEdge["puffytools", "base"], DirectedEdge["puffytools", "bytestring"], DirectedEdge["puffytools", "console-program"], DirectedEdge["puffytools", "containers"], DirectedEdge["puffytools", "directory"], DirectedEdge["puffytools", "MissingH"], DirectedEdge["puffytools", "old-locale"], DirectedEdge["puffytools", "puffytools"], DirectedEdge["puffytools", "random-fu"], DirectedEdge["puffytools", "safe"], DirectedEdge["puffytools", "text"], DirectedEdge["puffytools", "time"], DirectedEdge["puffytools", "vector"], DirectedEdge["pugixml", "base"], DirectedEdge["pugixml", "bytestring"], DirectedEdge["pugixml", "data-default-class"], DirectedEdge["pugixml", "template-haskell"], DirectedEdge["pugs-DrIFT", "base"], DirectedEdge["pugs-DrIFT", "bytestring"], DirectedEdge["pugs-DrIFT", "containers"], DirectedEdge["pugs-DrIFT", "hashable"], DirectedEdge["pugs-DrIFT", "hashtables"], DirectedEdge["pugs-DrIFT", "HsSyck"], DirectedEdge["pugs-DrIFT", "mtl"], DirectedEdge["pugs-DrIFT", "old-time"], DirectedEdge["pugs-DrIFT", "pretty"], DirectedEdge["pugs-DrIFT", "pugs-DrIFT"], DirectedEdge["pugs-DrIFT", "random"], DirectedEdge["pugs-DrIFT", "stm"], DirectedEdge["pugs-DrIFT", "utf8-string"], DirectedEdge["pugs-HsSyck", "base"], DirectedEdge["pugs-HsSyck", "bytestring"], DirectedEdge["pugs-compat", "array"], DirectedEdge["pugs-compat", "base"], DirectedEdge["pugs-compat", "bytestring"], DirectedEdge["pugs-compat", "containers"], DirectedEdge["pugs-compat", "directory"], DirectedEdge["pugs-compat", "hashtables"], DirectedEdge["pugs-compat", "mtl"], DirectedEdge["pugs-compat", "network"], DirectedEdge["pugs-compat", "process"], DirectedEdge["pugs-compat", "random"], DirectedEdge["pugs-compat", "regex-base"], DirectedEdge["pugs-compat", "regex-pcre-builtin"], DirectedEdge["pugs-compat", "stm"], DirectedEdge["pugs-compat", "stringtable-atom"], DirectedEdge["pugs-compat", "syb"], DirectedEdge["pugs-compat", "time"], DirectedEdge["pugs-compat", "unix"], DirectedEdge["pugs-compat", "utf8-string"], DirectedEdge["pugs-hsregex", "array"], DirectedEdge["pugs-hsregex", "base"], DirectedEdge["pulse-simple", "base"], DirectedEdge["pulse-simple", "bytestring"], DirectedEdge["punkt", "array"], DirectedEdge["punkt", "base"], DirectedEdge["punkt", "mtl"], DirectedEdge["punkt", "regex-tdfa"], DirectedEdge["punkt", "regex-tdfa-text"], DirectedEdge["punkt", "text"], DirectedEdge["punkt", "unordered-containers"], DirectedEdge["punycode", "base"], DirectedEdge["punycode", "bytestring"], DirectedEdge["punycode", "cereal"], DirectedEdge["punycode", "mtl"], DirectedEdge["punycode", "text"], DirectedEdge["puppetresources", "language-puppet"], DirectedEdge["puppetresources", "base"], DirectedEdge["puppetresources", "bytestring"], DirectedEdge["puppetresources", "containers"], DirectedEdge["puppetresources", "Diff"], DirectedEdge["puppetresources", "hsfacter"], DirectedEdge["puppetresources", "hslogger"], DirectedEdge["puppetresources", "language-puppet"], DirectedEdge["puppetresources", "mtl"], DirectedEdge["puppetresources", "text"], DirectedEdge["pure-cdb", "base"], DirectedEdge["pure-cdb", "binary"], DirectedEdge["pure-cdb", "bytestring"], DirectedEdge["pure-cdb", "containers"], DirectedEdge["pure-cdb", "directory"], DirectedEdge["pure-cdb", "mtl"], DirectedEdge["pure-cdb", "vector"], DirectedEdge["pure-fft", "base"], DirectedEdge["pure-io", "base"], DirectedEdge["pure-io", "containers"], DirectedEdge["pure-io", "mtl"], DirectedEdge["pure-io", "safe"], DirectedEdge["pure-priority-queue", "base"], DirectedEdge["pure-priority-queue", "containers"], DirectedEdge["pure-priority-queue-tests", "base"], DirectedEdge["pure-priority-queue-tests", "containers"], DirectedEdge["pure-priority-queue-tests", "pure-priority-queue"], DirectedEdge["pure-priority-queue-tests", "QuickCheck"], DirectedEdge["pure-priority-queue-tests", "test-framework"], DirectedEdge["pure-zlib", "base"], DirectedEdge["pure-zlib", "bytestring"], DirectedEdge["pure-zlib", "containers"], DirectedEdge["pure-zlib", "fingertree"], DirectedEdge["pure-zlib", "monadLib"], DirectedEdge["pure-zlib", "pure-zlib"], DirectedEdge["pureMD5", "base"], DirectedEdge["pureMD5", "binary"], DirectedEdge["pureMD5", "bytestring"], DirectedEdge["pureMD5", "cereal"], DirectedEdge["pureMD5", "crypto-api"], DirectedEdge["pureMD5", "tagged"], DirectedEdge["purescript", "aeson"], DirectedEdge["purescript", "aeson-better-errors"], DirectedEdge["purescript", "ansi-terminal"], DirectedEdge["purescript", "ansi-wl-pprint"], DirectedEdge["purescript", "base"], DirectedEdge["purescript", "base-compat"], DirectedEdge["purescript", "bower-json"], DirectedEdge["purescript", "boxes"], DirectedEdge["purescript", "bytestring"], DirectedEdge["purescript", "containers"], DirectedEdge["purescript", "directory"], DirectedEdge["purescript", "dlist"], DirectedEdge["purescript", "edit-distance"], DirectedEdge["purescript", "filepath"], DirectedEdge["purescript", "fsnotify"], DirectedEdge["purescript", "Glob"], DirectedEdge["purescript", "haskeline"], DirectedEdge["purescript", "http-types"], DirectedEdge["purescript", "language-javascript"], DirectedEdge["purescript", "lifted-base"], DirectedEdge["purescript", "monad-control"], DirectedEdge["purescript", "monad-logger"], DirectedEdge["purescript", "mtl"], DirectedEdge["purescript", "network"], DirectedEdge["purescript", "optparse-applicative"], DirectedEdge["purescript", "parallel"], DirectedEdge["purescript", "parsec"], DirectedEdge["purescript", "pattern-arrows"], DirectedEdge["purescript", "pipes"], DirectedEdge["purescript", "pipes-http"], DirectedEdge["purescript", "process"], DirectedEdge["purescript", "purescript"], DirectedEdge["purescript", "regex-tdfa"], DirectedEdge["purescript", "safe"], DirectedEdge["purescript", "semigroups"], DirectedEdge["purescript", "sourcemap"], DirectedEdge["purescript", "spdx"], DirectedEdge["purescript", "split"], DirectedEdge["purescript", "stm"], DirectedEdge["purescript", "syb"], DirectedEdge["purescript", "text"], DirectedEdge["purescript", "time"], DirectedEdge["purescript", "transformers"], DirectedEdge["purescript", "transformers-base"], DirectedEdge["purescript", "transformers-compat"], DirectedEdge["purescript", "unordered-containers"], DirectedEdge["purescript", "utf8-string"], DirectedEdge["purescript", "vector"], DirectedEdge["purescript-bridge", "base"], DirectedEdge["purescript-bridge", "containers"], DirectedEdge["purescript-bridge", "directory"], DirectedEdge["purescript-bridge", "filepath"], DirectedEdge["purescript-bridge", "generic-deriving"], DirectedEdge["purescript-bridge", "lens"], DirectedEdge["purescript-bridge", "mtl"], DirectedEdge["purescript-bridge", "text"], DirectedEdge["purescript-bridge", "transformers"], DirectedEdge["purescript-bundle-fast", "base"], DirectedEdge["purescript-bundle-fast", "containers"], DirectedEdge["purescript-bundle-fast", "directory"], DirectedEdge["purescript-bundle-fast", "filepath"], DirectedEdge["purescript-bundle-fast", "optparse-applicative"], DirectedEdge["purescript-bundle-fast", "text"], DirectedEdge["purescript-bundle-fast", "vector"], DirectedEdge["pursuit-client", "base"], DirectedEdge["pursuit-client", "http-client"], DirectedEdge["pursuit-client", "lens"], DirectedEdge["pursuit-client", "pursuit-client"], DirectedEdge["pursuit-client", "taggy-lens"], DirectedEdge["pursuit-client", "text"], DirectedEdge["pursuit-client", "wreq"], DirectedEdge["push-notify", "aeson"], DirectedEdge["push-notify", "async"], DirectedEdge["push-notify", "attoparsec-conduit"], DirectedEdge["push-notify", "base"], DirectedEdge["push-notify", "base16-bytestring"], DirectedEdge["push-notify", "bytestring"], DirectedEdge["push-notify", "cereal"], DirectedEdge["push-notify", "certificate"], DirectedEdge["push-notify", "conduit"], DirectedEdge["push-notify", "connection"], DirectedEdge["push-notify", "containers"], DirectedEdge["push-notify", "convertible"], DirectedEdge["push-notify", "cprng-aes"], DirectedEdge["push-notify", "data-default"], DirectedEdge["push-notify", "http-client"], DirectedEdge["push-notify", "http-conduit"], DirectedEdge["push-notify", "http-types"], DirectedEdge["push-notify", "monad-control"], DirectedEdge["push-notify", "mtl"], DirectedEdge["push-notify", "network"], DirectedEdge["push-notify", "resourcet"], DirectedEdge["push-notify", "retry"], DirectedEdge["push-notify", "stm"], DirectedEdge["push-notify", "text"], DirectedEdge["push-notify", "time"], DirectedEdge["push-notify", "tls"], DirectedEdge["push-notify", "tls-extra"], DirectedEdge["push-notify", "transformers"], DirectedEdge["push-notify", "unordered-containers"], DirectedEdge["push-notify", "xml-conduit"], DirectedEdge["push-notify-ccs", "aeson"], DirectedEdge["push-notify-ccs", "async"], DirectedEdge["push-notify-ccs", "attoparsec"], DirectedEdge["push-notify-ccs", "base"], DirectedEdge["push-notify-ccs", "bytestring"], DirectedEdge["push-notify-ccs", "cprng-aes"], DirectedEdge["push-notify-ccs", "crypto-random"], DirectedEdge["push-notify-ccs", "data-default"], DirectedEdge["push-notify-ccs", "hslogger"], DirectedEdge["push-notify-ccs", "mtl"], DirectedEdge["push-notify-ccs", "network"], DirectedEdge["push-notify-ccs", "pontarius-xmpp"], DirectedEdge["push-notify-ccs", "push-notify"], DirectedEdge["push-notify-ccs", "retry"], DirectedEdge["push-notify-ccs", "stm"], DirectedEdge["push-notify-ccs", "text"], DirectedEdge["push-notify-ccs", "tls"], DirectedEdge["push-notify-ccs", "tls-extra"], DirectedEdge["push-notify-ccs", "unordered-containers"], DirectedEdge["push-notify-ccs", "xml-types"], DirectedEdge["push-notify-general", "aeson"], DirectedEdge["push-notify-general", "base"], DirectedEdge["push-notify-general", "bytestring"], DirectedEdge["push-notify-general", "containers"], DirectedEdge["push-notify-general", "data-default"], DirectedEdge["push-notify-general", "hashable"], DirectedEdge["push-notify-general", "http-client"], DirectedEdge["push-notify-general", "http-conduit"], DirectedEdge["push-notify-general", "http-types"], DirectedEdge["push-notify-general", "push-notify"], DirectedEdge["push-notify-general", "push-notify-ccs"], DirectedEdge["push-notify-general", "text"], DirectedEdge["push-notify-general", "unordered-containers"], DirectedEdge["push-notify-general", "xml-conduit"], DirectedEdge["push-notify-general", "yesod"], DirectedEdge["pusher-haskell", "aeson"], DirectedEdge["pusher-haskell", "base"], DirectedEdge["pusher-haskell", "bytestring"], DirectedEdge["pusher-haskell", "HTTP"], DirectedEdge["pusher-haskell", "MissingH"], DirectedEdge["pusher-haskell", "mtl"], DirectedEdge["pusher-haskell", "SHA"], DirectedEdge["pusher-haskell", "time"], DirectedEdge["pusher-http-haskell", "aeson"], DirectedEdge["pusher-http-haskell", "base"], DirectedEdge["pusher-http-haskell", "base16-bytestring"], DirectedEdge["pusher-http-haskell", "bytestring"], DirectedEdge["pusher-http-haskell", "containers"], DirectedEdge["pusher-http-haskell", "cryptohash"], DirectedEdge["pusher-http-haskell", "hashable"], DirectedEdge["pusher-http-haskell", "http-client"], DirectedEdge["pusher-http-haskell", "http-types"], DirectedEdge["pusher-http-haskell", "mtl"], DirectedEdge["pusher-http-haskell", "pusher-http-haskell"], DirectedEdge["pusher-http-haskell", "QuickCheck"], DirectedEdge["pusher-http-haskell", "snap-core"], DirectedEdge["pusher-http-haskell", "snap-server"], DirectedEdge["pusher-http-haskell", "text"], DirectedEdge["pusher-http-haskell", "time"], DirectedEdge["pusher-http-haskell", "transformers"], DirectedEdge["pusher-http-haskell", "unordered-containers"], DirectedEdge["pusher-http-haskell", "yaml"], DirectedEdge["pusher-ws", "aeson"], DirectedEdge["pusher-ws", "base"], DirectedEdge["pusher-ws", "bytestring"], DirectedEdge["pusher-ws", "containers"], DirectedEdge["pusher-ws", "deepseq"], DirectedEdge["pusher-ws", "hashable"], DirectedEdge["pusher-ws", "http-conduit"], DirectedEdge["pusher-ws", "lens"], DirectedEdge["pusher-ws", "lens-aeson"], DirectedEdge["pusher-ws", "network"], DirectedEdge["pusher-ws", "scientific"], DirectedEdge["pusher-ws", "stm"], DirectedEdge["pusher-ws", "text"], DirectedEdge["pusher-ws", "time"], DirectedEdge["pusher-ws", "transformers"], DirectedEdge["pusher-ws", "unordered-containers"], DirectedEdge["pusher-ws", "websockets"], DirectedEdge["pusher-ws", "wuss"], DirectedEdge["pushme", "aeson"], DirectedEdge["pushme", "base"], DirectedEdge["pushme", "bytestring"], DirectedEdge["pushme", "containers"], DirectedEdge["pushme", "deepseq"], DirectedEdge["pushme", "hslogger"], DirectedEdge["pushme", "io-storage"], DirectedEdge["pushme", "lens"], DirectedEdge["pushme", "old-locale"], DirectedEdge["pushme", "optparse-applicative"], DirectedEdge["pushme", "parallel-io"], DirectedEdge["pushme", "pointless-fun"], DirectedEdge["pushme", "regex-posix"], DirectedEdge["pushme", "shelly"], DirectedEdge["pushme", "system-fileio"], DirectedEdge["pushme", "system-filepath"], DirectedEdge["pushme", "text"], DirectedEdge["pushme", "text-format"], DirectedEdge["pushme", "time"], DirectedEdge["pushme", "unix"], DirectedEdge["pushme", "unordered-containers"], DirectedEdge["pushme", "yaml"], DirectedEdge["putlenses", "base"], DirectedEdge["putlenses", "containers"], DirectedEdge["putlenses", "ghc-prim"], DirectedEdge["putlenses", "lens"], DirectedEdge["putlenses", "mtl"], DirectedEdge["putlenses", "QuickCheck"], DirectedEdge["putlenses", "random"], DirectedEdge["putlenses", "safe"], DirectedEdge["putlenses", "split"], DirectedEdge["putlenses", "template-haskell"], DirectedEdge["putlenses", "transformers"], DirectedEdge["puzzle-draw", "aeson"], DirectedEdge["puzzle-draw", "base"], DirectedEdge["puzzle-draw", "containers"], DirectedEdge["puzzle-draw", "diagrams-cairo"], DirectedEdge["puzzle-draw", "diagrams-lib"], DirectedEdge["puzzle-draw", "diagrams-svg"], DirectedEdge["puzzle-draw", "filepath"], DirectedEdge["puzzle-draw", "hashable"], DirectedEdge["puzzle-draw", "mtl"], DirectedEdge["puzzle-draw", "optparse-applicative"], DirectedEdge["puzzle-draw", "parsec"], DirectedEdge["puzzle-draw", "puzzle-draw"], DirectedEdge["puzzle-draw", "SVGFonts"], DirectedEdge["puzzle-draw", "text"], DirectedEdge["puzzle-draw", "unordered-containers"], DirectedEdge["puzzle-draw", "vector-space"], DirectedEdge["puzzle-draw", "yaml"], DirectedEdge["puzzle-draw-cmdline", "puzzle-draw"], DirectedEdge["puzzle-draw-cmdline", "aeson"], DirectedEdge["puzzle-draw-cmdline", "base"], DirectedEdge["puzzle-draw-cmdline", "diagrams-cairo"], DirectedEdge["puzzle-draw-cmdline", "diagrams-lib"], DirectedEdge["puzzle-draw-cmdline", "diagrams-svg"], DirectedEdge["puzzle-draw-cmdline", "filepath"], DirectedEdge["puzzle-draw-cmdline", "optparse-applicative"], DirectedEdge["puzzle-draw-cmdline", "puzzle-draw"], DirectedEdge["puzzle-draw-cmdline", "yaml"], DirectedEdge["pvd", "array"], DirectedEdge["pvd", "base"], DirectedEdge["pvd", "Codec-Image-DevIL"], DirectedEdge["pvd", "containers"], DirectedEdge["pvd", "mtl"], DirectedEdge["pvd", "network"], DirectedEdge["pvd", "stm"], DirectedEdge["pwstore-cli", "base"], DirectedEdge["pwstore-cli", "bytestring"], DirectedEdge["pwstore-cli", "cmdargs"], DirectedEdge["pwstore-cli", "pwstore-fast"], DirectedEdge["pwstore-cli", "pwstore-purehaskell"], DirectedEdge["pwstore-cli", "text"], DirectedEdge["pwstore-fast", "base"], DirectedEdge["pwstore-fast", "base64-bytestring"], DirectedEdge["pwstore-fast", "binary"], DirectedEdge["pwstore-fast", "byteable"], DirectedEdge["pwstore-fast", "bytestring"], DirectedEdge["pwstore-fast", "cryptohash"], DirectedEdge["pwstore-fast", "random"], DirectedEdge["pwstore-purehaskell", "base"], DirectedEdge["pwstore-purehaskell", "base64-bytestring"], DirectedEdge["pwstore-purehaskell", "byteable"], DirectedEdge["pwstore-purehaskell", "bytestring"], DirectedEdge["pwstore-purehaskell", "random"], DirectedEdge["pwstore-purehaskell", "SHA"], DirectedEdge["pxsl-tools", "base"], DirectedEdge["pxsl-tools", "containers"], DirectedEdge["pxsl-tools", "mtl"], DirectedEdge["pxsl-tools", "parsec"], DirectedEdge["pyffi", "aeson"], DirectedEdge["pyffi", "base"], DirectedEdge["pyffi", "bytestring"], DirectedEdge["pyffi", "containers"], DirectedEdge["pyffi", "template-haskell"], DirectedEdge["pyfi", "aeson"], DirectedEdge["pyfi", "base"], DirectedEdge["pyfi", "bytestring"], DirectedEdge["pyfi", "containers"], DirectedEdge["pyfi", "template-haskell"], DirectedEdge["python-pickle", "attoparsec"], DirectedEdge["python-pickle", "base"], DirectedEdge["python-pickle", "bytestring"], DirectedEdge["python-pickle", "cereal"], DirectedEdge["python-pickle", "cmdargs"], DirectedEdge["python-pickle", "containers"], DirectedEdge["python-pickle", "mtl"], DirectedEdge["python-pickle", "python-pickle"], DirectedEdge["qc-oi-testgenerator", "base"], DirectedEdge["qc-oi-testgenerator", "fclabels"], DirectedEdge["qc-oi-testgenerator", "QuickCheck"], DirectedEdge["qc-oi-testgenerator", "template-haskell"], DirectedEdge["qd", "base"], DirectedEdge["qd", "floatshow"], DirectedEdge["qd-vec", "base"], DirectedEdge["qd-vec", "qd"], DirectedEdge["qd-vec", "Vec"], DirectedEdge["qed", "base"], DirectedEdge["qed", "deepseq"], DirectedEdge["qed", "directory"], DirectedEdge["qed", "exceptions"], DirectedEdge["qed", "extra"], DirectedEdge["qed", "filepath"], DirectedEdge["qed", "haskell-src-exts"], DirectedEdge["qed", "transformers"], DirectedEdge["qed", "uniplate"], DirectedEdge["qhull-simple", "base"], DirectedEdge["qhull-simple", "vector"], DirectedEdge["qrcode", "array"], DirectedEdge["qrcode", "base"], DirectedEdge["qrcode", "containers"], DirectedEdge["qrcode", "mtl"], DirectedEdge["qrcode", "vector"], DirectedEdge["qt", "base"], DirectedEdge["qt", "OpenGL"], DirectedEdge["quadratic-irrational", "arithmoi"], DirectedEdge["quadratic-irrational", "base"], DirectedEdge["quadratic-irrational", "containers"], DirectedEdge["quadratic-irrational", "mtl"], DirectedEdge["quadratic-irrational", "transformers"], DirectedEdge["quandl-api", "aeson"], DirectedEdge["quandl-api", "base"], DirectedEdge["quandl-api", "blaze-builder"], DirectedEdge["quandl-api", "bytestring"], DirectedEdge["quandl-api", "http-conduit"], DirectedEdge["quandl-api", "http-types"], DirectedEdge["quandl-api", "syb"], DirectedEdge["quandl-api", "text"], DirectedEdge["quandl-api", "time"], DirectedEdge["quandl-api", "time-locale-compat"], DirectedEdge["quandl-api", "unordered-containers"], DirectedEdge["quantfin", "base"], DirectedEdge["quantfin", "containers"], DirectedEdge["quantfin", "mtl"], DirectedEdge["quantfin", "quantfin"], DirectedEdge["quantfin", "random"], DirectedEdge["quantfin", "random-fu"], DirectedEdge["quantfin", "random-source"], DirectedEdge["quantfin", "rvar"], DirectedEdge["quantfin", "transformers"], DirectedEdge["quantfin", "vector"], DirectedEdge["quantities", "base"], DirectedEdge["quantities", "containers"], DirectedEdge["quantities", "mtl"], DirectedEdge["quantities", "parsec"], DirectedEdge["quantities", "quantities"], DirectedEdge["quantum-arrow", "base"], DirectedEdge["quantum-arrow", "MonadRandom"], DirectedEdge["quantum-arrow", "mtl"], DirectedEdge["quantum-arrow", "QuickCheck"], DirectedEdge["quantum-arrow", "random"], DirectedEdge["qudb", "array"], DirectedEdge["qudb", "base"], DirectedEdge["qudb", "bytestring"], DirectedEdge["qudb", "directory"], DirectedEdge["qudb", "mtl"], DirectedEdge["qudb", "snappy"], DirectedEdge["quenya-verb", "aeson"], DirectedEdge["quenya-verb", "base"], DirectedEdge["quenya-verb", "bytestring"], DirectedEdge["quenya-verb", "cmdargs"], DirectedEdge["quenya-verb", "cond"], DirectedEdge["quenya-verb", "containers"], DirectedEdge["quenya-verb", "directory"], DirectedEdge["quenya-verb", "iproute"], DirectedEdge["quenya-verb", "MissingH"], DirectedEdge["quenya-verb", "network"], DirectedEdge["quenya-verb", "quenya-verb"], DirectedEdge["quenya-verb", "safe"], DirectedEdge["quenya-verb", "scotty"], DirectedEdge["quenya-verb", "text"], DirectedEdge["quenya-verb", "transformers"], DirectedEdge["quenya-verb", "wai"], DirectedEdge["quenya-verb", "wai-extra"], DirectedEdge["quenya-verb", "wai-middleware-static"], DirectedEdge["quenya-verb", "warp"], DirectedEdge["querystring-pickle", "base"], DirectedEdge["querystring-pickle", "bytestring"], DirectedEdge["querystring-pickle", "text"], DirectedEdge["questioner", "ansi-terminal"], DirectedEdge["questioner", "base"], DirectedEdge["questioner", "questioner"], DirectedEdge["questioner", "readline"], DirectedEdge["questioner", "terminal-size"], DirectedEdge["queue", "base"], DirectedEdge["queue", "stm"], DirectedEdge["queuelike", "array"], DirectedEdge["queuelike", "base"], DirectedEdge["queuelike", "containers"], DirectedEdge["queuelike", "mtl"], DirectedEdge["queuelike", "stateful-mtl"], DirectedEdge["quick-generator", "base"], DirectedEdge["quick-generator", "QuickCheck"], DirectedEdge["quick-schema", "aeson"], DirectedEdge["quick-schema", "base"], DirectedEdge["quick-schema", "hashable"], DirectedEdge["quick-schema", "scientific"], DirectedEdge["quick-schema", "text"], DirectedEdge["quick-schema", "unordered-containers"], DirectedEdge["quick-schema", "vector"], DirectedEdge["quickbooks", "aeson"], DirectedEdge["quickbooks", "authenticate-oauth"], DirectedEdge["quickbooks", "base"], DirectedEdge["quickbooks", "bytestring"], DirectedEdge["quickbooks", "email-validate"], DirectedEdge["quickbooks", "fast-logger"], DirectedEdge["quickbooks", "http-client"], DirectedEdge["quickbooks", "http-client-tls"], DirectedEdge["quickbooks", "http-types"], DirectedEdge["quickbooks", "interpolate"], DirectedEdge["quickbooks", "old-locale"], DirectedEdge["quickbooks", "text"], DirectedEdge["quickbooks", "thyme"], DirectedEdge["quickbooks", "yaml"], DirectedEdge["quickcheck-assertions", "base"], DirectedEdge["quickcheck-assertions", "QuickCheck"], DirectedEdge["quickcheck-combinators", "base"], DirectedEdge["quickcheck-combinators", "QuickCheck"], DirectedEdge["quickcheck-combinators", "unfoldable-restricted"], DirectedEdge["quickcheck-instances", "array"], DirectedEdge["quickcheck-instances", "base"], DirectedEdge["quickcheck-instances", "bytestring"], DirectedEdge["quickcheck-instances", "containers"], DirectedEdge["quickcheck-instances", "hashable"], DirectedEdge["quickcheck-instances", "old-time"], DirectedEdge["quickcheck-instances", "QuickCheck"], DirectedEdge["quickcheck-instances", "scientific"], DirectedEdge["quickcheck-instances", "text"], DirectedEdge["quickcheck-instances", "time"], DirectedEdge["quickcheck-instances", "unordered-containers"], DirectedEdge["quickcheck-instances", "vector"], DirectedEdge["quickcheck-io", "base"], DirectedEdge["quickcheck-io", "HUnit"], DirectedEdge["quickcheck-io", "QuickCheck"], DirectedEdge["quickcheck-poly", "base"], DirectedEdge["quickcheck-poly", "hint"], DirectedEdge["quickcheck-poly", "MonadCatchIO-mtl"], DirectedEdge["quickcheck-poly", "QuickCheck"], DirectedEdge["quickcheck-poly", "regex-compat"], DirectedEdge["quickcheck-poly", "regex-tdfa"], DirectedEdge["quickcheck-properties", "base"], DirectedEdge["quickcheck-property-comb", "base"], DirectedEdge["quickcheck-property-comb", "mtl"], DirectedEdge["quickcheck-property-comb", "QuickCheck"], DirectedEdge["quickcheck-property-monad", "base"], DirectedEdge["quickcheck-property-monad", "either"], DirectedEdge["quickcheck-property-monad", "QuickCheck"], DirectedEdge["quickcheck-property-monad", "transformers"], DirectedEdge["quickcheck-regex", "base"], DirectedEdge["quickcheck-regex", "containers"], DirectedEdge["quickcheck-regex", "QuickCheck"], DirectedEdge["quickcheck-regex", "regex-genex"], DirectedEdge["quickcheck-regex", "regex-tdfa"], DirectedEdge["quickcheck-relaxng", "base"], DirectedEdge["quickcheck-relaxng", "hxt"], DirectedEdge["quickcheck-relaxng", "hxt-relaxng"], DirectedEdge["quickcheck-relaxng", "QuickCheck"], DirectedEdge["quickcheck-relaxng", "quickcheck-regex"], DirectedEdge["quickcheck-rematch", "base"], DirectedEdge["quickcheck-rematch", "QuickCheck"], DirectedEdge["quickcheck-rematch", "rematch"], DirectedEdge["quickcheck-script", "base"], DirectedEdge["quickcheck-script", "directory"], DirectedEdge["quickcheck-script", "process"], DirectedEdge["quickcheck-script", "QuickCheck"], DirectedEdge["quickcheck-simple", "base"], DirectedEdge["quickcheck-simple", "QuickCheck"], DirectedEdge["quickcheck-text", "base"], DirectedEdge["quickcheck-text", "binary"], DirectedEdge["quickcheck-text", "bytestring"], DirectedEdge["quickcheck-text", "QuickCheck"], DirectedEdge["quickcheck-text", "text"], DirectedEdge["quickcheck-unicode", "base"], DirectedEdge["quickcheck-unicode", "QuickCheck"], DirectedEdge["quickcheck-webdriver", "base"], DirectedEdge["quickcheck-webdriver", "QuickCheck"], DirectedEdge["quickcheck-webdriver", "transformers"], DirectedEdge["quickcheck-webdriver", "webdriver"], DirectedEdge["quicklz", "base"], DirectedEdge["quicklz", "bytestring"], DirectedEdge["quickpull", "tasty-th"], DirectedEdge["quickpull", "barecheck"], DirectedEdge["quickpull", "base"], DirectedEdge["quickpull", "directory"], DirectedEdge["quickpull", "filepath"], DirectedEdge["quickpull", "QuickCheck"], DirectedEdge["quickset", "base"], DirectedEdge["quickset", "vector"], DirectedEdge["quickset", "vector-algorithms"], DirectedEdge["quickspec", "array"], DirectedEdge["quickspec", "base"], DirectedEdge["quickspec", "containers"], DirectedEdge["quickspec", "ghc-prim"], DirectedEdge["quickspec", "QuickCheck"], DirectedEdge["quickspec", "random"], DirectedEdge["quickspec", "spoon"], DirectedEdge["quickspec", "transformers"], DirectedEdge["quickterm", "base"], DirectedEdge["quickterm", "edit-distance"], DirectedEdge["quickterm", "hashmap"], DirectedEdge["quicktest", "base"], DirectedEdge["quicktest", "directory"], DirectedEdge["quicktest", "mtl"], DirectedEdge["quicktest", "process"], DirectedEdge["quickwebapp", "aeson"], DirectedEdge["quickwebapp", "base"], DirectedEdge["quickwebapp", "bytestring"], DirectedEdge["quickwebapp", "containers"], DirectedEdge["quickwebapp", "either"], DirectedEdge["quickwebapp", "lucid"], DirectedEdge["quickwebapp", "servant"], DirectedEdge["quickwebapp", "servant-lucid"], DirectedEdge["quickwebapp", "servant-server"], DirectedEdge["quickwebapp", "text"], DirectedEdge["quickwebapp", "warp"], DirectedEdge["quiver", "base"], DirectedEdge["quiver", "mmorph"], DirectedEdge["quiver", "transformers"], DirectedEdge["quiver-binary", "base"], DirectedEdge["quiver-binary", "binary"], DirectedEdge["quiver-binary", "bytestring"], DirectedEdge["quiver-binary", "quiver"], DirectedEdge["quiver-binary", "quiver-bytestring"], DirectedEdge["quiver-bytestring", "base"], DirectedEdge["quiver-bytestring", "bytestring"], DirectedEdge["quiver-bytestring", "quiver"], DirectedEdge["quiver-cell", "base"], DirectedEdge["quiver-cell", "data-cell"], DirectedEdge["quiver-cell", "quiver"], DirectedEdge["quiver-csv", "base"], DirectedEdge["quiver-csv", "bytestring"], DirectedEdge["quiver-csv", "data-cell"], DirectedEdge["quiver-csv", "quiver"], DirectedEdge["quiver-csv", "quiver-bytestring"], DirectedEdge["quiver-enumerator", "base"], DirectedEdge["quiver-enumerator", "enumerator"], DirectedEdge["quiver-enumerator", "quiver"], DirectedEdge["quiver-groups", "base"], DirectedEdge["quiver-groups", "dlist"], DirectedEdge["quiver-groups", "quiver"], DirectedEdge["quiver-http", "base"], DirectedEdge["quiver-http", "bytestring"], DirectedEdge["quiver-http", "http-client"], DirectedEdge["quiver-http", "http-client-tls"], DirectedEdge["quiver-http", "quiver"], DirectedEdge["quiver-instances", "base"], DirectedEdge["quiver-instances", "exceptions"], DirectedEdge["quiver-instances", "quiver"], DirectedEdge["quiver-instances", "resourcet"], DirectedEdge["quiver-instances", "transformers"], DirectedEdge["quiver-instances", "transformers-base"], DirectedEdge["quiver-interleave", "base"], DirectedEdge["quiver-interleave", "quiver"], DirectedEdge["quiver-sort", "base"], DirectedEdge["quiver-sort", "containers"], DirectedEdge["quiver-sort", "directory"], DirectedEdge["quiver-sort", "exceptions"], DirectedEdge["quiver-sort", "quiver"], DirectedEdge["quiver-sort", "quiver-binary"], DirectedEdge["quiver-sort", "quiver-bytestring"], DirectedEdge["quiver-sort", "quiver-groups"], DirectedEdge["quiver-sort", "quiver-instances"], DirectedEdge["quiver-sort", "quiver-interleave"], DirectedEdge["quiver-sort", "resourcet"], DirectedEdge["quiver-sort", "temporary"], DirectedEdge["quiver-sort", "transformers"], DirectedEdge["quoridor-hs", "ansi-terminal"], DirectedEdge["quoridor-hs", "async"], DirectedEdge["quoridor-hs", "base"], DirectedEdge["quoridor-hs", "bytestring"], DirectedEdge["quoridor-hs", "containers"], DirectedEdge["quoridor-hs", "directory"], DirectedEdge["quoridor-hs", "dlist"], DirectedEdge["quoridor-hs", "exceptions"], DirectedEdge["quoridor-hs", "filepath"], DirectedEdge["quoridor-hs", "hex"], DirectedEdge["quoridor-hs", "mtl"], DirectedEdge["quoridor-hs", "network"], DirectedEdge["quoridor-hs", "network-simple"], DirectedEdge["quoridor-hs", "parsec"], DirectedEdge["quoridor-hs", "process"], DirectedEdge["quoridor-hs", "quoridor-hs"], DirectedEdge["quoridor-hs", "snap-core"], DirectedEdge["quoridor-hs", "snap-server"], DirectedEdge["quoridor-hs", "stm"], DirectedEdge["quoridor-hs", "websockets"], DirectedEdge["quoridor-hs", "websockets-snap"], DirectedEdge["qux", "base"], DirectedEdge["qux", "bytestring"], DirectedEdge["qux", "containers"], DirectedEdge["qux", "directory"], DirectedEdge["qux", "filepath"], DirectedEdge["qux", "language-qux"], DirectedEdge["qux", "llvm-general"], DirectedEdge["qux", "mtl"], DirectedEdge["qux", "optparse-applicative"], DirectedEdge["qux", "pretty"], DirectedEdge["rabocsv2qif", "base"], DirectedEdge["rabocsv2qif", "old-locale"], DirectedEdge["rabocsv2qif", "split"], DirectedEdge["rabocsv2qif", "time"], DirectedEdge["rad", "ad"], DirectedEdge["rad", "array"], DirectedEdge["rad", "base"], DirectedEdge["rad", "containers"], DirectedEdge["rad", "data-reify"], DirectedEdge["radian", "base"], DirectedEdge["radian", "profunctors"], DirectedEdge["radium", "base"], DirectedEdge["radium", "containers"], DirectedEdge["radium", "parsec"], DirectedEdge["radium-formula-parser", "radium"], DirectedEdge["radium-formula-parser", "base"], DirectedEdge["radium-formula-parser", "containers"], DirectedEdge["radium-formula-parser", "parsec"], DirectedEdge["radix", "base"], DirectedEdge["radix", "filepath"], DirectedEdge["rados-haskell", "async"], DirectedEdge["rados-haskell", "base"], DirectedEdge["rados-haskell", "bytestring"], DirectedEdge["rados-haskell", "containers"], DirectedEdge["rados-haskell", "mtl"], DirectedEdge["rados-haskell", "uuid"], DirectedEdge["rail-compiler-editor", "base"], DirectedEdge["rail-compiler-editor", "cairo"], DirectedEdge["rail-compiler-editor", "containers"], DirectedEdge["rail-compiler-editor", "gtk"], DirectedEdge["rail-compiler-editor", "llvm-general"], DirectedEdge["rail-compiler-editor", "llvm-general-pure"], DirectedEdge["rail-compiler-editor", "mtl"], DirectedEdge["rail-compiler-editor", "process"], DirectedEdge["rail-compiler-editor", "rail-compiler-editor"], DirectedEdge["rail-compiler-editor", "transformers"], DirectedEdge["rainbow", "base"], DirectedEdge["rainbow", "bytestring"], DirectedEdge["rainbow", "microlens"], DirectedEdge["rainbow", "microlens-th"], DirectedEdge["rainbow", "process"], DirectedEdge["rainbow", "text"], DirectedEdge["rainbow-tests", "barecheck"], DirectedEdge["rainbow-tests", "base"], DirectedEdge["rainbow-tests", "QuickCheck"], DirectedEdge["rainbow-tests", "rainbow"], DirectedEdge["rainbow-tests", "terminfo"], DirectedEdge["rainbow-tests", "text"], DirectedEdge["rainbox", "base"], DirectedEdge["rainbox", "bytestring"], DirectedEdge["rainbox", "containers"], DirectedEdge["rainbox", "microlens-th"], DirectedEdge["rainbox", "rainbow"], DirectedEdge["rainbox", "text"], DirectedEdge["rake", "base"], DirectedEdge["rake", "containers"], DirectedEdge["rake", "text"], DirectedEdge["rakhana", "attoparsec"], DirectedEdge["rakhana", "base"], DirectedEdge["rakhana", "bytestring"], DirectedEdge["rakhana", "containers"], DirectedEdge["rakhana", "lens"], DirectedEdge["rakhana", "mtl"], DirectedEdge["rakhana", "pipes"], DirectedEdge["rakhana", "scientific"], DirectedEdge["rakhana", "transformers"], DirectedEdge["rakhana", "vector"], DirectedEdge["rakhana", "zlib"], DirectedEdge["ralist", "base"], DirectedEdge["rallod", "base"], DirectedEdge["raml", "aeson"], DirectedEdge["raml", "base"], DirectedEdge["raml", "bytestring"], DirectedEdge["raml", "text"], DirectedEdge["raml", "unordered-containers"], DirectedEdge["raml", "yaml"], DirectedEdge["rand-vars", "array"], DirectedEdge["rand-vars", "base"], DirectedEdge["rand-vars", "IntervalMap"], DirectedEdge["rand-vars", "mtl"], DirectedEdge["rand-vars", "random"], DirectedEdge["randfile", "base"], DirectedEdge["randfile", "crypto-api"], DirectedEdge["randfile", "directory"], DirectedEdge["randfile", "filepath"], DirectedEdge["randfile", "monadcryptorandom"], DirectedEdge["randfile", "transformers"], DirectedEdge["randfile", "unix"], DirectedEdge["random", "base"], DirectedEdge["random", "time"], DirectedEdge["random-access-list", "array"], DirectedEdge["random-access-list", "base"], DirectedEdge["random-access-list", "containers"], DirectedEdge["random-derive", "base"], DirectedEdge["random-derive", "random"], DirectedEdge["random-derive", "template-haskell"], DirectedEdge["random-eff", "base"], DirectedEdge["random-eff", "extensible-effects"], DirectedEdge["random-eff", "random"], DirectedEdge["random-effin", "base"], DirectedEdge["random-effin", "effin"], DirectedEdge["random-effin", "MonadRandom"], DirectedEdge["random-effin", "random"], DirectedEdge["random-extras", "array"], DirectedEdge["random-extras", "base"], DirectedEdge["random-extras", "containers"], DirectedEdge["random-extras", "random-fu"], DirectedEdge["random-extras", "random-source"], DirectedEdge["random-fu", "base"], DirectedEdge["random-fu", "erf"], DirectedEdge["random-fu", "erf-native"], DirectedEdge["random-fu", "log-domain"], DirectedEdge["random-fu", "math-functions"], DirectedEdge["random-fu", "monad-loops"], DirectedEdge["random-fu", "mtl"], DirectedEdge["random-fu", "random-shuffle"], DirectedEdge["random-fu", "random-source"], DirectedEdge["random-fu", "rvar"], DirectedEdge["random-fu", "syb"], DirectedEdge["random-fu", "template-haskell"], DirectedEdge["random-fu", "transformers"], DirectedEdge["random-fu", "vector"], DirectedEdge["random-hypergeometric", "base"], DirectedEdge["random-hypergeometric", "math-functions"], DirectedEdge["random-hypergeometric", "random-fu"], DirectedEdge["random-shuffle", "base"], DirectedEdge["random-shuffle", "MonadRandom"], DirectedEdge["random-shuffle", "random"], DirectedEdge["random-source", "base"], DirectedEdge["random-source", "flexible-defaults"], DirectedEdge["random-source", "mtl"], DirectedEdge["random-source", "mwc-random"], DirectedEdge["random-source", "random"], DirectedEdge["random-source", "stateref"], DirectedEdge["random-source", "syb"], DirectedEdge["random-source", "template-haskell"], DirectedEdge["random-source", "th-extras"], DirectedEdge["random-stream", "base"], DirectedEdge["random-stream", "binary"], DirectedEdge["random-stream", "bytestring"], DirectedEdge["random-stream", "random"], DirectedEdge["random-tree", "base"], DirectedEdge["random-tree", "containers"], DirectedEdge["random-tree", "lens"], DirectedEdge["random-tree", "MonadRandom"], DirectedEdge["random-tree", "mtl"], DirectedEdge["random-tree", "random"], DirectedEdge["random-tree", "random-shuffle"], DirectedEdge["random-tree", "transformers"], DirectedEdge["random-tree", "tree-fun"], DirectedEdge["random-variates", "base"], DirectedEdge["random-variates", "binary"], DirectedEdge["random-variates", "bytestring"], DirectedEdge["random-variates", "containers"], DirectedEdge["random-variates", "erf"], DirectedEdge["random-variates", "lens"], DirectedEdge["random-variates", "mtl"], DirectedEdge["random-variates", "random"], DirectedEdge["random-variates", "random-variates"], DirectedEdge["random-variates", "reinterpret-cast"], DirectedEdge["randomgen", "base"], DirectedEdge["randomgen", "binary"], DirectedEdge["randomgen", "bytestring"], DirectedEdge["randproc", "base"], DirectedEdge["randsolid", "base"], DirectedEdge["randsolid", "random"], DirectedEdge["range", "base"], DirectedEdge["range", "free"], DirectedEdge["range", "parsec"], DirectedEdge["range-set-list", "base"], DirectedEdge["range-set-list", "containers"], DirectedEdge["range-set-list", "deepseq"], DirectedEdge["range-set-list", "hashable"], DirectedEdge["range-set-list", "semigroups"], DirectedEdge["range-space", "base"], DirectedEdge["range-space", "semigroups"], DirectedEdge["range-space", "vector-space"], DirectedEdge["range-space", "vector-space-points"], DirectedEdge["rangemin", "base"], DirectedEdge["rangemin", "containers"], DirectedEdge["rangemin", "primitive"], DirectedEdge["rangemin", "vector"], DirectedEdge["ranges", "base"], DirectedEdge["ranges", "containers"], DirectedEdge["rank1dynamic", "base"], DirectedEdge["rank1dynamic", "binary"], DirectedEdge["rascal", "aeson"], DirectedEdge["rascal", "ansi-terminal"], DirectedEdge["rascal", "base"], DirectedEdge["rascal", "containers"], DirectedEdge["rascal", "curl"], DirectedEdge["rascal", "curl-aeson"], DirectedEdge["rascal", "directory"], DirectedEdge["rascal", "filepath"], DirectedEdge["rascal", "mtl"], DirectedEdge["rascal", "process"], DirectedEdge["rascal", "vector"], DirectedEdge["rasterific-svg", "base"], DirectedEdge["rasterific-svg", "binary"], DirectedEdge["rasterific-svg", "bytestring"], DirectedEdge["rasterific-svg", "containers"], DirectedEdge["rasterific-svg", "directory"], DirectedEdge["rasterific-svg", "filepath"], DirectedEdge["rasterific-svg", "FontyFruity"], DirectedEdge["rasterific-svg", "JuicyPixels"], DirectedEdge["rasterific-svg", "lens"], DirectedEdge["rasterific-svg", "linear"], DirectedEdge["rasterific-svg", "mtl"], DirectedEdge["rasterific-svg", "optparse-applicative"], DirectedEdge["rasterific-svg", "Rasterific"], DirectedEdge["rasterific-svg", "rasterific-svg"], DirectedEdge["rasterific-svg", "scientific"], DirectedEdge["rasterific-svg", "svg-tree"], DirectedEdge["rasterific-svg", "text"], DirectedEdge["rasterific-svg", "transformers"], DirectedEdge["rasterific-svg", "vector"], DirectedEdge["rate-limit", "base"], DirectedEdge["rate-limit", "time-units"], DirectedEdge["ratel", "aeson"], DirectedEdge["ratel", "base"], DirectedEdge["ratel", "bytestring"], DirectedEdge["ratel", "case-insensitive"], DirectedEdge["ratel", "containers"], DirectedEdge["ratel", "http-client"], DirectedEdge["ratel", "http-client-tls"], DirectedEdge["ratel", "http-types"], DirectedEdge["ratel", "text"], DirectedEdge["ratel", "uuid"], DirectedEdge["ratel-wai", "base"], DirectedEdge["ratel-wai", "bytestring"], DirectedEdge["ratel-wai", "case-insensitive"], DirectedEdge["ratel-wai", "containers"], DirectedEdge["ratel-wai", "http-client"], DirectedEdge["ratel-wai", "ratel"], DirectedEdge["ratel-wai", "wai"], DirectedEdge["ratio-int", "base"], DirectedEdge["raven-haskell", "aeson"], DirectedEdge["raven-haskell", "base"], DirectedEdge["raven-haskell", "bytestring"], DirectedEdge["raven-haskell", "http-conduit"], DirectedEdge["raven-haskell", "network"], DirectedEdge["raven-haskell", "random"], DirectedEdge["raven-haskell", "text"], DirectedEdge["raven-haskell", "time"], DirectedEdge["raven-haskell", "unordered-containers"], DirectedEdge["raven-haskell", "uuid"], DirectedEdge["raven-haskell-scotty", "base"], DirectedEdge["raven-haskell-scotty", "bytestring"], DirectedEdge["raven-haskell-scotty", "case-insensitive"], DirectedEdge["raven-haskell-scotty", "mtl"], DirectedEdge["raven-haskell-scotty", "raven-haskell"], DirectedEdge["raven-haskell-scotty", "scotty"], DirectedEdge["raven-haskell-scotty", "text"], DirectedEdge["raven-haskell-scotty", "wai"], DirectedEdge["raw-strings-qq", "base"], DirectedEdge["raw-strings-qq", "template-haskell"], DirectedEdge["rawstring-qm", "base"], DirectedEdge["rawstring-qm", "bytestring"], DirectedEdge["rawstring-qm", "template-haskell"], DirectedEdge["rawstring-qm", "text"], DirectedEdge["razom-text-util", "base"], DirectedEdge["razom-text-util", "regex-applicative"], DirectedEdge["razom-text-util", "smaoin"], DirectedEdge["razom-text-util", "text"], DirectedEdge["razom-text-util", "text-position"], DirectedEdge["rbr", "base"], DirectedEdge["rbr", "bio"], DirectedEdge["rbr", "bytestring"], DirectedEdge["rbr", "containers"], DirectedEdge["rclient", "base"], DirectedEdge["rclient", "binary"], DirectedEdge["rclient", "bytestring"], DirectedEdge["rclient", "network"], DirectedEdge["rclient", "QuickCheck"], DirectedEdge["rclient", "split"], DirectedEdge["rcu", "atomic-primops"], DirectedEdge["rcu", "base"], DirectedEdge["rcu", "parallel"], DirectedEdge["rcu", "primitive"], DirectedEdge["rcu", "rcu"], DirectedEdge["rcu", "stm"], DirectedEdge["rcu", "transformers"], DirectedEdge["rdf4h", "base"], DirectedEdge["rdf4h", "binary"], DirectedEdge["rdf4h", "bytestring"], DirectedEdge["rdf4h", "containers"], DirectedEdge["rdf4h", "deepseq"], DirectedEdge["rdf4h", "directory"], DirectedEdge["rdf4h", "fgl"], DirectedEdge["rdf4h", "ghc-prim"], DirectedEdge["rdf4h", "hashable"], DirectedEdge["rdf4h", "hgal"], DirectedEdge["rdf4h", "HTTP"], DirectedEdge["rdf4h", "hxt"], DirectedEdge["rdf4h", "network"], DirectedEdge["rdf4h", "network-uri"], DirectedEdge["rdf4h", "parsec"], DirectedEdge["rdf4h", "rdf4h"], DirectedEdge["rdf4h", "text"], DirectedEdge["rdf4h", "text-binary"], DirectedEdge["rdf4h", "unordered-containers"], DirectedEdge["rdf4h", "utf8-string"], DirectedEdge["rdioh", "aeson"], DirectedEdge["rdioh", "base"], DirectedEdge["rdioh", "bytestring"], DirectedEdge["rdioh", "containers"], DirectedEdge["rdioh", "hoauth"], DirectedEdge["rdioh", "hspec"], DirectedEdge["rdioh", "json"], DirectedEdge["rdioh", "MissingH"], DirectedEdge["rdioh", "mtl"], DirectedEdge["rdioh", "rdioh"], DirectedEdge["rdioh", "transformers"], DirectedEdge["rdioh", "urlencoded"], DirectedEdge["rdtsc", "base"], DirectedEdge["rdtsc-enolan", "base"], DirectedEdge["re2", "base"], DirectedEdge["re2", "bytestring"], DirectedEdge["re2", "vector"], DirectedEdge["react-flux", "aeson"], DirectedEdge["react-flux", "base"], DirectedEdge["react-flux", "bytestring"], DirectedEdge["react-flux", "deepseq"], DirectedEdge["react-flux", "ghcjs-base"], DirectedEdge["react-flux", "mtl"], DirectedEdge["react-flux", "react-flux"], DirectedEdge["react-flux", "template-haskell"], DirectedEdge["react-flux", "text"], DirectedEdge["react-flux", "time"], DirectedEdge["react-flux", "transformers"], DirectedEdge["react-flux", "unordered-containers"], DirectedEdge["react-flux", "web-routes"], DirectedEdge["react-haskell", "aeson"], DirectedEdge["react-haskell", "base"], DirectedEdge["react-haskell", "deepseq"], DirectedEdge["react-haskell", "ghcjs-base"], DirectedEdge["react-haskell", "ghcjs-dom"], DirectedEdge["react-haskell", "ghcjs-prim"], DirectedEdge["react-haskell", "lens-family"], DirectedEdge["react-haskell", "monads-tf"], DirectedEdge["react-haskell", "text"], DirectedEdge["react-haskell", "transformers"], DirectedEdge["react-haskell", "unordered-containers"], DirectedEdge["react-haskell", "void"], DirectedEdge["react-tutorial-haskell-server", "aeson"], DirectedEdge["react-tutorial-haskell-server", "aeson-pretty"], DirectedEdge["react-tutorial-haskell-server", "base"], DirectedEdge["react-tutorial-haskell-server", "bytestring"], DirectedEdge["react-tutorial-haskell-server", "scotty"], DirectedEdge["react-tutorial-haskell-server", "time"], DirectedEdge["react-tutorial-haskell-server", "transformers"], DirectedEdge["reaction-logic", "base"], DirectedEdge["reaction-logic", "mtl"], DirectedEdge["reaction-logic", "QuickCheck"], DirectedEdge["reactive", "base"], DirectedEdge["reactive", "category-extras"], DirectedEdge["reactive", "checkers"], DirectedEdge["reactive", "old-time"], DirectedEdge["reactive", "QuickCheck"], DirectedEdge["reactive", "random"], DirectedEdge["reactive", "Stream"], DirectedEdge["reactive", "TypeCompose"], DirectedEdge["reactive", "unamb"], DirectedEdge["reactive", "vector-space"], DirectedEdge["reactive-bacon", "base"], DirectedEdge["reactive-bacon", "old-time"], DirectedEdge["reactive-bacon", "stm"], DirectedEdge["reactive-balsa", "alsa-core"], DirectedEdge["reactive-balsa", "alsa-seq"], DirectedEdge["reactive-balsa", "base"], DirectedEdge["reactive-balsa", "containers"], DirectedEdge["reactive-balsa", "data-accessor"], DirectedEdge["reactive-balsa", "data-accessor-transformers"], DirectedEdge["reactive-balsa", "event-list"], DirectedEdge["reactive-balsa", "extensible-exceptions"], DirectedEdge["reactive-balsa", "midi"], DirectedEdge["reactive-balsa", "midi-alsa"], DirectedEdge["reactive-balsa", "non-negative"], DirectedEdge["reactive-balsa", "random"], DirectedEdge["reactive-balsa", "reactive-banana"], DirectedEdge["reactive-balsa", "transformers"], DirectedEdge["reactive-balsa", "utility-ht"], DirectedEdge["reactive-banana", "base"], DirectedEdge["reactive-banana", "containers"], DirectedEdge["reactive-banana", "hashable"], DirectedEdge["reactive-banana", "pqueue"], DirectedEdge["reactive-banana", "transformers"], DirectedEdge["reactive-banana", "unordered-containers"], DirectedEdge["reactive-banana", "vault"], DirectedEdge["reactive-banana-sdl", "base"], DirectedEdge["reactive-banana-sdl", "data-lens"], DirectedEdge["reactive-banana-sdl", "data-lens-template"], DirectedEdge["reactive-banana-sdl", "reactive-banana"], DirectedEdge["reactive-banana-sdl", "SDL"], DirectedEdge["reactive-banana-sdl", "SDL-image"], DirectedEdge["reactive-banana-sdl", "SDL-ttf"], DirectedEdge["reactive-banana-sdl2", "base"], DirectedEdge["reactive-banana-sdl2", "reactive-banana"], DirectedEdge["reactive-banana-threepenny", "threepenny-gui"], DirectedEdge["reactive-banana-threepenny", "array"], DirectedEdge["reactive-banana-threepenny", "base"], DirectedEdge["reactive-banana-threepenny", "containers"], DirectedEdge["reactive-banana-threepenny", "filepath"], DirectedEdge["reactive-banana-threepenny", "process"], DirectedEdge["reactive-banana-threepenny", "random"], DirectedEdge["reactive-banana-threepenny", "reactive-banana"], DirectedEdge["reactive-banana-threepenny", "threepenny-gui"], DirectedEdge["reactive-banana-wx", "array"], DirectedEdge["reactive-banana-wx", "base"], DirectedEdge["reactive-banana-wx", "cabal-macosx"], DirectedEdge["reactive-banana-wx", "containers"], DirectedEdge["reactive-banana-wx", "executable-path"], DirectedEdge["reactive-banana-wx", "filepath"], DirectedEdge["reactive-banana-wx", "process"], DirectedEdge["reactive-banana-wx", "random"], DirectedEdge["reactive-banana-wx", "reactive-banana"], DirectedEdge["reactive-banana-wx", "wx"], DirectedEdge["reactive-banana-wx", "wxcore"], DirectedEdge["reactive-fieldtrip", "base"], DirectedEdge["reactive-fieldtrip", "FieldTrip"], DirectedEdge["reactive-fieldtrip", "InfixApplicative"], DirectedEdge["reactive-fieldtrip", "reactive"], DirectedEdge["reactive-fieldtrip", "reactive-glut"], DirectedEdge["reactive-fieldtrip", "unamb"], DirectedEdge["reactive-fieldtrip", "vector-space"], DirectedEdge["reactive-glut", "base"], DirectedEdge["reactive-glut", "GLUT"], DirectedEdge["reactive-glut", "old-time"], DirectedEdge["reactive-glut", "OpenGL"], DirectedEdge["reactive-glut", "reactive"], DirectedEdge["reactive-glut", "vector-space"], DirectedEdge["reactive-haskell", "base"], DirectedEdge["reactive-io", "base"], DirectedEdge["reactive-io", "transformers"], DirectedEdge["reactive-thread", "base"], DirectedEdge["reactive-thread", "monad-parallel"], DirectedEdge["reactive-thread", "reactive-thread"], DirectedEdge["reactive-thread", "SDL"], DirectedEdge["reactive-thread", "stm"], DirectedEdge["reactive-thread", "transformers"], DirectedEdge["reactivity", "array"], DirectedEdge["reactivity", "base"], DirectedEdge["reactivity", "bmp"], DirectedEdge["reactivity", "bytestring"], DirectedEdge["reactivity", "comonad"], DirectedEdge["reactivity", "concurrent-extra"], DirectedEdge["reactivity", "ConcurrentUtils"], DirectedEdge["reactivity", "containers"], DirectedEdge["reactivity", "ghc-prim"], DirectedEdge["reactivity", "list-extras"], DirectedEdge["reactivity", "monad-loops"], DirectedEdge["reactivity", "monads-tf"], DirectedEdge["reactivity", "parallel"], DirectedEdge["reactivity", "random"], DirectedEdge["reactivity", "time"], DirectedEdge["reactivity", "transformers"], DirectedEdge["reactor", "array"], DirectedEdge["reactor", "base"], DirectedEdge["reactor", "bits-atomic"], DirectedEdge["reactor", "comonad"], DirectedEdge["reactor", "contravariant"], DirectedEdge["reactor", "mtl"], DirectedEdge["reactor", "semigroupoids"], DirectedEdge["reactor", "transformers"], DirectedEdge["read-bounded", "base"], DirectedEdge["read-editor", "base"], DirectedEdge["read-editor", "directory"], DirectedEdge["read-editor", "process"], DirectedEdge["read-editor", "read-editor"], DirectedEdge["read-env-var", "base"], DirectedEdge["readable", "base"], DirectedEdge["readable", "bytestring"], DirectedEdge["readable", "text"], DirectedEdge["readline", "base"], DirectedEdge["readline", "process"], DirectedEdge["readline-statevar", "base"], DirectedEdge["readline-statevar", "readline"], DirectedEdge["readline-statevar", "StateVar"], DirectedEdge["readpyc", "base"], DirectedEdge["readpyc", "bliplib"], DirectedEdge["readpyc", "parseargs"], DirectedEdge["readshp", "base"], DirectedEdge["readshp", "binary"], DirectedEdge["readshp", "bytestring"], DirectedEdge["readshp", "filepath"], DirectedEdge["readshp", "monad-loops"], DirectedEdge["really-simple-xml-parser", "base"], DirectedEdge["really-simple-xml-parser", "parsec"], DirectedEdge["reasonable-lens", "base"], DirectedEdge["reasonable-lens", "mtl"], DirectedEdge["reasonable-lens", "split"], DirectedEdge["reasonable-lens", "template-haskell"], DirectedEdge["reasonable-operational", "base"], DirectedEdge["rebase", "base"], DirectedEdge["rebase", "base-prelude"], DirectedEdge["rebase", "bifunctors"], DirectedEdge["rebase", "bytestring"], DirectedEdge["rebase", "containers"], DirectedEdge["rebase", "contravariant"], DirectedEdge["rebase", "contravariant-extras"], DirectedEdge["rebase", "deepseq"], DirectedEdge["rebase", "dlist"], DirectedEdge["rebase", "either"], DirectedEdge["rebase", "fail"], DirectedEdge["rebase", "hashable"], DirectedEdge["rebase", "mtl"], DirectedEdge["rebase", "profunctors"], DirectedEdge["rebase", "scientific"], DirectedEdge["rebase", "semigroups"], DirectedEdge["rebase", "text"], DirectedEdge["rebase", "time"], DirectedEdge["rebase", "transformers"], DirectedEdge["rebase", "unordered-containers"], DirectedEdge["rebase", "uuid"], DirectedEdge["rebase", "vector"], DirectedEdge["rebase", "void"], DirectedEdge["recaptcha", "base"], DirectedEdge["recaptcha", "HTTP"], DirectedEdge["recaptcha", "network"], DirectedEdge["recaptcha", "network-uri"], DirectedEdge["recaptcha", "xhtml"], DirectedEdge["record", "base"], DirectedEdge["record", "base-prelude"], DirectedEdge["record", "basic-lens"], DirectedEdge["record", "template-haskell"], DirectedEdge["record", "transformers"], DirectedEdge["record-aeson", "aeson"], DirectedEdge["record-aeson", "base"], DirectedEdge["record-aeson", "base-prelude"], DirectedEdge["record-aeson", "record"], DirectedEdge["record-aeson", "template-haskell"], DirectedEdge["record-gl", "base"], DirectedEdge["record-gl", "base-prelude"], DirectedEdge["record-gl", "containers"], DirectedEdge["record-gl", "GLUtil"], DirectedEdge["record-gl", "linear"], DirectedEdge["record-gl", "OpenGL"], DirectedEdge["record-gl", "record"], DirectedEdge["record-gl", "tagged"], DirectedEdge["record-gl", "template-haskell"], DirectedEdge["record-gl", "vector"], DirectedEdge["record-preprocessor", "base"], DirectedEdge["record-preprocessor", "base-prelude"], DirectedEdge["record-preprocessor", "conversion"], DirectedEdge["record-preprocessor", "conversion-text"], DirectedEdge["record-preprocessor", "record-syntax"], DirectedEdge["record-preprocessor", "text"], DirectedEdge["record-syntax", "base"], DirectedEdge["record-syntax", "base-prelude"], DirectedEdge["record-syntax", "conversion"], DirectedEdge["record-syntax", "conversion-text"], DirectedEdge["record-syntax", "haskell-src-exts"], DirectedEdge["record-syntax", "parsec"], DirectedEdge["record-syntax", "record"], DirectedEdge["record-syntax", "template-haskell"], DirectedEdge["record-syntax", "text"], DirectedEdge["record-syntax", "transformers"], DirectedEdge["records", "base"], DirectedEdge["records", "kinds"], DirectedEdge["records", "type-functions"], DirectedEdge["records-th", "aeson"], DirectedEdge["records-th", "base"], DirectedEdge["records-th", "data-default"], DirectedEdge["records-th", "kinds"], DirectedEdge["records-th", "records"], DirectedEdge["records-th", "template-haskell"], DirectedEdge["records-th", "text"], DirectedEdge["records-th", "type-functions"], DirectedEdge["records-th", "unordered-containers"], DirectedEdge["recursion-schemes", "base"], DirectedEdge["recursion-schemes", "comonad"], DirectedEdge["recursion-schemes", "free"], DirectedEdge["recursion-schemes", "transformers"], DirectedEdge["recursive-line-count", "base"], DirectedEdge["recursive-line-count", "bytestring"], DirectedEdge["recursive-line-count", "containers"], DirectedEdge["recursive-line-count", "filepath"], DirectedEdge["recursive-line-count", "gtk"], DirectedEdge["recursive-line-count", "mtl"], DirectedEdge["recursive-line-count", "process"], DirectedEdge["redHandlers", "array"], DirectedEdge["redHandlers", "base"], DirectedEdge["redHandlers", "bytestring"], DirectedEdge["redHandlers", "cgi"], DirectedEdge["redHandlers", "containers"], DirectedEdge["redHandlers", "MaybeT"], DirectedEdge["redHandlers", "mtl"], DirectedEdge["redHandlers", "network"], DirectedEdge["redHandlers", "old-time"], DirectedEdge["redHandlers", "parsec"], DirectedEdge["redHandlers", "stm"], DirectedEdge["redHandlers", "unix"], DirectedEdge["redHandlers", "xhtml"], DirectedEdge["reddit", "aeson"], DirectedEdge["reddit", "api-builder"], DirectedEdge["reddit", "base"], DirectedEdge["reddit", "bytestring"], DirectedEdge["reddit", "data-default-class"], DirectedEdge["reddit", "free"], DirectedEdge["reddit", "http-client"], DirectedEdge["reddit", "http-client-tls"], DirectedEdge["reddit", "http-types"], DirectedEdge["reddit", "network"], DirectedEdge["reddit", "text"], DirectedEdge["reddit", "time"], DirectedEdge["reddit", "transformers"], DirectedEdge["reddit", "unordered-containers"], DirectedEdge["reddit", "vector"], DirectedEdge["redis", "base"], DirectedEdge["redis", "bytestring"], DirectedEdge["redis", "concurrent-extra"], DirectedEdge["redis", "containers"], DirectedEdge["redis", "exceptions"], DirectedEdge["redis", "mtl"], DirectedEdge["redis", "network"], DirectedEdge["redis", "old-time"], DirectedEdge["redis", "utf8-string"], DirectedEdge["redis-hs", "base"], DirectedEdge["redis-hs", "bytestring"], DirectedEdge["redis-hs", "network"], DirectedEdge["redis-hs", "utf8-string"], DirectedEdge["redis-io", "attoparsec"], DirectedEdge["redis-io", "auto-update"], DirectedEdge["redis-io", "base"], DirectedEdge["redis-io", "bytestring"], DirectedEdge["redis-io", "containers"], DirectedEdge["redis-io", "exceptions"], DirectedEdge["redis-io", "iproute"], DirectedEdge["redis-io", "monad-control"], DirectedEdge["redis-io", "mtl"], DirectedEdge["redis-io", "network"], DirectedEdge["redis-io", "operational"], DirectedEdge["redis-io", "redis-resp"], DirectedEdge["redis-io", "resource-pool"], DirectedEdge["redis-io", "semigroups"], DirectedEdge["redis-io", "stm"], DirectedEdge["redis-io", "time"], DirectedEdge["redis-io", "tinylog"], DirectedEdge["redis-io", "transformers"], DirectedEdge["redis-io", "transformers-base"], DirectedEdge["redis-job-queue", "aeson"], DirectedEdge["redis-job-queue", "base"], DirectedEdge["redis-job-queue", "bytestring"], DirectedEdge["redis-job-queue", "hedis"], DirectedEdge["redis-resp", "attoparsec"], DirectedEdge["redis-resp", "base"], DirectedEdge["redis-resp", "bytestring"], DirectedEdge["redis-resp", "bytestring-conversion"], DirectedEdge["redis-resp", "containers"], DirectedEdge["redis-resp", "dlist"], DirectedEdge["redis-resp", "double-conversion"], DirectedEdge["redis-resp", "operational"], DirectedEdge["redis-resp", "semigroups"], DirectedEdge["redis-resp", "split"], DirectedEdge["redis-resp", "transformers"], DirectedEdge["redis-simple", "base"], DirectedEdge["redis-simple", "binary"], DirectedEdge["redis-simple", "bytestring"], DirectedEdge["redis-simple", "redis"], DirectedEdge["redo", "base"], DirectedEdge["redo", "bytestring"], DirectedEdge["redo", "containers"], DirectedEdge["redo", "directory"], DirectedEdge["redo", "filepath"], DirectedEdge["redo", "process"], DirectedEdge["reducers", "array"], DirectedEdge["reducers", "base"], DirectedEdge["reducers", "bytestring"], DirectedEdge["reducers", "containers"], DirectedEdge["reducers", "fingertree"], DirectedEdge["reducers", "hashable"], DirectedEdge["reducers", "semigroupoids"], DirectedEdge["reducers", "semigroups"], DirectedEdge["reducers", "text"], DirectedEdge["reducers", "transformers"], DirectedEdge["reducers", "unordered-containers"], DirectedEdge["reedsolomon", "base"], DirectedEdge["reedsolomon", "bytestring"], DirectedEdge["reedsolomon", "exceptions"], DirectedEdge["reedsolomon", "gitrev"], DirectedEdge["reedsolomon", "loop"], DirectedEdge["reedsolomon", "mtl"], DirectedEdge["reedsolomon", "primitive"], DirectedEdge["reedsolomon", "profunctors"], DirectedEdge["reedsolomon", "vector"], DirectedEdge["reenact", "base"], DirectedEdge["reenact", "hamid"], DirectedEdge["reenact", "HCodecs"], DirectedEdge["reenact", "stm"], DirectedEdge["reenact", "time"], DirectedEdge["reenact", "vector-space"], DirectedEdge["reexport-crypto-random", "base"], DirectedEdge["reexport-crypto-random", "crypto-api"], DirectedEdge["ref", "base"], DirectedEdge["ref", "ghc-prim"], DirectedEdge["ref-fd", "base"], DirectedEdge["ref-fd", "stm"], DirectedEdge["ref-fd", "transformers"], DirectedEdge["ref-mtl", "base"], DirectedEdge["ref-mtl", "mtl"], DirectedEdge["ref-mtl", "stm"], DirectedEdge["ref-mtl", "transformers"], DirectedEdge["ref-tf", "base"], DirectedEdge["ref-tf", "stm"], DirectedEdge["ref-tf", "transformers"], DirectedEdge["refact", "base"], DirectedEdge["refcount", "base"], DirectedEdge["refcount", "hashable"], DirectedEdge["refcount", "QuickCheck"], DirectedEdge["refcount", "unordered-containers"], DirectedEdge["reference", "base"], DirectedEdge["reference", "stm"], DirectedEdge["references", "array"], DirectedEdge["references", "base"], DirectedEdge["references", "containers"], DirectedEdge["references", "directory"], DirectedEdge["references", "either"], DirectedEdge["references", "filepath"], DirectedEdge["references", "instance-control"], DirectedEdge["references", "mtl"], DirectedEdge["references", "template-haskell"], DirectedEdge["references", "text"], DirectedEdge["references", "transformers"], DirectedEdge["references", "uniplate"], DirectedEdge["refh", "base"], DirectedEdge["refh", "clippard"], DirectedEdge["refh", "cmdargs"], DirectedEdge["refh", "directory"], DirectedEdge["refh", "filepath"], DirectedEdge["refh", "haskheap"], DirectedEdge["refh", "network"], DirectedEdge["refined", "base"], DirectedEdge["refined", "base-prelude"], DirectedEdge["refined", "template-haskell"], DirectedEdge["reflection", "base"], DirectedEdge["reflection", "tagged"], DirectedEdge["reflection", "template-haskell"], DirectedEdge["reflection-extras", "aeson"], DirectedEdge["reflection-extras", "base"], DirectedEdge["reflection-extras", "constraints"], DirectedEdge["reflection-extras", "lens"], DirectedEdge["reflection-extras", "reflection"], DirectedEdge["reflection-extras", "tagged"], DirectedEdge["reflection-without-remorse", "base"], DirectedEdge["reflection-without-remorse", "type-aligned"], DirectedEdge["reflex", "base"], DirectedEdge["reflex", "containers"], DirectedEdge["reflex", "dependent-map"], DirectedEdge["reflex", "dependent-sum"], DirectedEdge["reflex", "exception-transformers"], DirectedEdge["reflex", "haskell-src-exts"], DirectedEdge["reflex", "haskell-src-meta"], DirectedEdge["reflex", "mtl"], DirectedEdge["reflex", "primitive"], DirectedEdge["reflex", "ref-tf"], DirectedEdge["reflex", "semigroups"], DirectedEdge["reflex", "syb"], DirectedEdge["reflex", "template-haskell"], DirectedEdge["reflex", "these"], DirectedEdge["reflex", "transformers"], DirectedEdge["reflex", "transformers-compat"], DirectedEdge["reflex-animation", "base"], DirectedEdge["reflex-animation", "bifunctors"], DirectedEdge["reflex-animation", "containers"], DirectedEdge["reflex-animation", "profunctors"], DirectedEdge["reflex-animation", "reflex"], DirectedEdge["reflex-animation", "reflex-transformers"], DirectedEdge["reflex-animation", "semigroups"], DirectedEdge["reflex-animation", "vector-space"], DirectedEdge["reflex-dom", "aeson"], DirectedEdge["reflex-dom", "base"], DirectedEdge["reflex-dom", "bifunctors"], DirectedEdge["reflex-dom", "bytestring"], DirectedEdge["reflex-dom", "containers"], DirectedEdge["reflex-dom", "data-default"], DirectedEdge["reflex-dom", "dependent-map"], DirectedEdge["reflex-dom", "dependent-sum"], DirectedEdge["reflex-dom", "dependent-sum-template"], DirectedEdge["reflex-dom", "directory"], DirectedEdge["reflex-dom", "exception-transformers"], DirectedEdge["reflex-dom", "ghcjs-base"], DirectedEdge["reflex-dom", "ghcjs-dom"], DirectedEdge["reflex-dom", "glib"], DirectedEdge["reflex-dom", "lens"], DirectedEdge["reflex-dom", "mtl"], DirectedEdge["reflex-dom", "raw-strings-qq"], DirectedEdge["reflex-dom", "ref-tf"], DirectedEdge["reflex-dom", "reflex"], DirectedEdge["reflex-dom", "safe"], DirectedEdge["reflex-dom", "semigroups"], DirectedEdge["reflex-dom", "text"], DirectedEdge["reflex-dom", "these"], DirectedEdge["reflex-dom", "time"], DirectedEdge["reflex-dom", "transformers"], DirectedEdge["reflex-dom", "unix"], DirectedEdge["reflex-dom", "webkitgtk3-javascriptcore"], DirectedEdge["reflex-dom-contrib", "aeson"], DirectedEdge["reflex-dom-contrib", "base"], DirectedEdge["reflex-dom-contrib", "bifunctors"], DirectedEdge["reflex-dom-contrib", "bytestring"], DirectedEdge["reflex-dom-contrib", "containers"], DirectedEdge["reflex-dom-contrib", "data-default"], DirectedEdge["reflex-dom-contrib", "ghcjs-base"], DirectedEdge["reflex-dom-contrib", "ghcjs-dom"], DirectedEdge["reflex-dom-contrib", "ghcjs-prim"], DirectedEdge["reflex-dom-contrib", "http-types"], DirectedEdge["reflex-dom-contrib", "lens"], DirectedEdge["reflex-dom-contrib", "mtl"], DirectedEdge["reflex-dom-contrib", "random"], DirectedEdge["reflex-dom-contrib", "readable"], DirectedEdge["reflex-dom-contrib", "reflex"], DirectedEdge["reflex-dom-contrib", "reflex-dom"], DirectedEdge["reflex-dom-contrib", "safe"], DirectedEdge["reflex-dom-contrib", "string-conv"], DirectedEdge["reflex-dom-contrib", "text"], DirectedEdge["reflex-dom-contrib", "time"], DirectedEdge["reflex-dom-contrib", "transformers"], DirectedEdge["reflex-dom-helpers", "base"], DirectedEdge["reflex-dom-helpers", "reflex"], DirectedEdge["reflex-dom-helpers", "reflex-dom"], DirectedEdge["reflex-dom-helpers", "template-haskell"], DirectedEdge["reflex-gloss", "base"], DirectedEdge["reflex-gloss", "dependent-sum"], DirectedEdge["reflex-gloss", "gloss"], DirectedEdge["reflex-gloss", "mtl"], DirectedEdge["reflex-gloss", "reflex"], DirectedEdge["reflex-gloss", "transformers"], DirectedEdge["reflex-gloss-scene", "base"], DirectedEdge["reflex-gloss-scene", "containers"], DirectedEdge["reflex-gloss-scene", "dependent-sum"], DirectedEdge["reflex-gloss-scene", "gloss"], DirectedEdge["reflex-gloss-scene", "gloss-rendering"], DirectedEdge["reflex-gloss-scene", "lens"], DirectedEdge["reflex-gloss-scene", "linear"], DirectedEdge["reflex-gloss-scene", "MonadRandom"], DirectedEdge["reflex-gloss-scene", "mtl"], DirectedEdge["reflex-gloss-scene", "profunctors"], DirectedEdge["reflex-gloss-scene", "random"], DirectedEdge["reflex-gloss-scene", "reflex"], DirectedEdge["reflex-gloss-scene", "reflex-animation"], DirectedEdge["reflex-gloss-scene", "reflex-gloss"], DirectedEdge["reflex-gloss-scene", "reflex-gloss-scene"], DirectedEdge["reflex-gloss-scene", "reflex-transformers"], DirectedEdge["reflex-gloss-scene", "semigroups"], DirectedEdge["reflex-gloss-scene", "transformers"], DirectedEdge["reflex-gloss-scene", "tuple"], DirectedEdge["reflex-gloss-scene", "vector-space"], DirectedEdge["reflex-jsx", "base"], DirectedEdge["reflex-jsx", "containers"], DirectedEdge["reflex-jsx", "haskell-src-meta"], DirectedEdge["reflex-jsx", "parsec"], DirectedEdge["reflex-jsx", "reflex"], DirectedEdge["reflex-jsx", "reflex-dom"], DirectedEdge["reflex-jsx", "template-haskell"], DirectedEdge["reflex-jsx", "text"], DirectedEdge["reflex-orphans", "base"], DirectedEdge["reflex-orphans", "reflex"], DirectedEdge["reflex-orphans", "these"], DirectedEdge["reflex-transformers", "base"], DirectedEdge["reflex-transformers", "containers"], DirectedEdge["reflex-transformers", "lens"], DirectedEdge["reflex-transformers", "mtl"], DirectedEdge["reflex-transformers", "reflex"], DirectedEdge["reflex-transformers", "semigroups"], DirectedEdge["reflex-transformers", "stateWriter"], DirectedEdge["reflex-transformers", "transformers"], DirectedEdge["reform", "base"], DirectedEdge["reform", "containers"], DirectedEdge["reform", "mtl"], DirectedEdge["reform", "text"], DirectedEdge["reform-blaze", "base"], DirectedEdge["reform-blaze", "blaze-html"], DirectedEdge["reform-blaze", "blaze-markup"], DirectedEdge["reform-blaze", "reform"], DirectedEdge["reform-blaze", "text"], DirectedEdge["reform-hamlet", "base"], DirectedEdge["reform-hamlet", "blaze-markup"], DirectedEdge["reform-hamlet", "reform"], DirectedEdge["reform-hamlet", "shakespeare"], DirectedEdge["reform-hamlet", "text"], DirectedEdge["reform-happstack", "base"], DirectedEdge["reform-happstack", "bytestring"], DirectedEdge["reform-happstack", "happstack-server"], DirectedEdge["reform-happstack", "mtl"], DirectedEdge["reform-happstack", "random"], DirectedEdge["reform-happstack", "reform"], DirectedEdge["reform-happstack", "text"], DirectedEdge["reform-happstack", "utf8-string"], DirectedEdge["reform-hsp", "base"], DirectedEdge["reform-hsp", "hsp"], DirectedEdge["reform-hsp", "hsx2hs"], DirectedEdge["reform-hsp", "reform"], DirectedEdge["reform-hsp", "text"], DirectedEdge["regex-applicative", "base"], DirectedEdge["regex-applicative", "containers"], DirectedEdge["regex-applicative", "transformers"], DirectedEdge["regex-applicative-text", "base"], DirectedEdge["regex-applicative-text", "regex-applicative"], DirectedEdge["regex-applicative-text", "text"], DirectedEdge["regex-base", "array"], DirectedEdge["regex-base", "base"], DirectedEdge["regex-base", "bytestring"], DirectedEdge["regex-base", "containers"], DirectedEdge["regex-base", "mtl"], DirectedEdge["regex-compat", "array"], DirectedEdge["regex-compat", "base"], DirectedEdge["regex-compat", "regex-base"], DirectedEdge["regex-compat", "regex-posix"], DirectedEdge["regex-compat-tdfa", "array"], DirectedEdge["regex-compat-tdfa", "base"], DirectedEdge["regex-compat-tdfa", "regex-base"], DirectedEdge["regex-compat-tdfa", "regex-tdfa"], DirectedEdge["regex-deriv", "base"], DirectedEdge["regex-deriv", "bitset"], DirectedEdge["regex-deriv", "bytestring"], DirectedEdge["regex-deriv", "containers"], DirectedEdge["regex-deriv", "deepseq"], DirectedEdge["regex-deriv", "dequeue"], DirectedEdge["regex-deriv", "ghc-prim"], DirectedEdge["regex-deriv", "hashable"], DirectedEdge["regex-deriv", "hashtables"], DirectedEdge["regex-deriv", "mtl"], DirectedEdge["regex-deriv", "parallel"], DirectedEdge["regex-deriv", "parsec"], DirectedEdge["regex-deriv", "regex-base"], DirectedEdge["regex-dfa", "base"], DirectedEdge["regex-dfa", "mtl"], DirectedEdge["regex-dfa", "parsec"], DirectedEdge["regex-dfa", "regex-base"], DirectedEdge["regex-easy", "array"], DirectedEdge["regex-easy", "base"], DirectedEdge["regex-easy", "bytestring"], DirectedEdge["regex-easy", "regex-pcre"], DirectedEdge["regex-easy", "string-conversions"], DirectedEdge["regex-genex", "base"], DirectedEdge["regex-genex", "containers"], DirectedEdge["regex-genex", "logict"], DirectedEdge["regex-genex", "mtl"], DirectedEdge["regex-genex", "regex-tdfa"], DirectedEdge["regex-genex", "sbv"], DirectedEdge["regex-genex", "stream-monad"], DirectedEdge["regex-genex", "text"], DirectedEdge["regex-parsec", "base"], DirectedEdge["regex-parsec", "parsec"], DirectedEdge["regex-parsec", "regex-base"], DirectedEdge["regex-pcre", "array"], DirectedEdge["regex-pcre", "base"], DirectedEdge["regex-pcre", "bytestring"], DirectedEdge["regex-pcre", "containers"], DirectedEdge["regex-pcre", "regex-base"], DirectedEdge["regex-pcre-builtin", "array"], DirectedEdge["regex-pcre-builtin", "base"], DirectedEdge["regex-pcre-builtin", "bytestring"], DirectedEdge["regex-pcre-builtin", "containers"], DirectedEdge["regex-pcre-builtin", "regex-base"], DirectedEdge["regex-pderiv", "base"], DirectedEdge["regex-pderiv", "bitset"], DirectedEdge["regex-pderiv", "bytestring"], DirectedEdge["regex-pderiv", "containers"], DirectedEdge["regex-pderiv", "deepseq"], DirectedEdge["regex-pderiv", "ghc-prim"], DirectedEdge["regex-pderiv", "mtl"], DirectedEdge["regex-pderiv", "parallel"], DirectedEdge["regex-pderiv", "parsec"], DirectedEdge["regex-pderiv", "regex-base"], DirectedEdge["regex-posix", "array"], DirectedEdge["regex-posix", "base"], DirectedEdge["regex-posix", "bytestring"], DirectedEdge["regex-posix", "containers"], DirectedEdge["regex-posix", "regex-base"], DirectedEdge["regex-posix-unittest", "array"], DirectedEdge["regex-posix-unittest", "base"], DirectedEdge["regex-posix-unittest", "bytestring"], DirectedEdge["regex-posix-unittest", "containers"], DirectedEdge["regex-posix-unittest", "mtl"], DirectedEdge["regex-posix-unittest", "regex-base"], DirectedEdge["regex-posix-unittest", "regex-posix"], DirectedEdge["regex-tdfa", "array"], DirectedEdge["regex-tdfa", "base"], DirectedEdge["regex-tdfa", "bytestring"], DirectedEdge["regex-tdfa", "containers"], DirectedEdge["regex-tdfa", "ghc-prim"], DirectedEdge["regex-tdfa", "mtl"], DirectedEdge["regex-tdfa", "parsec"], DirectedEdge["regex-tdfa", "regex-base"], DirectedEdge["regex-tdfa-pipes", "array"], DirectedEdge["regex-tdfa-pipes", "base"], DirectedEdge["regex-tdfa-pipes", "lens"], DirectedEdge["regex-tdfa-pipes", "monads-tf"], DirectedEdge["regex-tdfa-pipes", "pipes"], DirectedEdge["regex-tdfa-pipes", "regex-base"], DirectedEdge["regex-tdfa-pipes", "regex-tdfa"], DirectedEdge["regex-tdfa-quasiquoter", "base"], DirectedEdge["regex-tdfa-quasiquoter", "regex-tdfa"], DirectedEdge["regex-tdfa-quasiquoter", "template-haskell"], DirectedEdge["regex-tdfa-rc", "regex-tdfa"], DirectedEdge["regex-tdfa-rc", "array"], DirectedEdge["regex-tdfa-rc", "base"], DirectedEdge["regex-tdfa-rc", "bytestring"], DirectedEdge["regex-tdfa-rc", "containers"], DirectedEdge["regex-tdfa-rc", "ghc-prim"], DirectedEdge["regex-tdfa-rc", "mtl"], DirectedEdge["regex-tdfa-rc", "parsec"], DirectedEdge["regex-tdfa-rc", "regex-base"], DirectedEdge["regex-tdfa-text", "array"], DirectedEdge["regex-tdfa-text", "base"], DirectedEdge["regex-tdfa-text", "regex-base"], DirectedEdge["regex-tdfa-text", "regex-tdfa"], DirectedEdge["regex-tdfa-text", "text"], DirectedEdge["regex-tdfa-unittest", "array"], DirectedEdge["regex-tdfa-unittest", "base"], DirectedEdge["regex-tdfa-unittest", "bytestring"], DirectedEdge["regex-tdfa-unittest", "containers"], DirectedEdge["regex-tdfa-unittest", "mtl"], DirectedEdge["regex-tdfa-unittest", "regex-base"], DirectedEdge["regex-tdfa-unittest", "regex-tdfa"], DirectedEdge["regex-tdfa-utf8", "array"], DirectedEdge["regex-tdfa-utf8", "base"], DirectedEdge["regex-tdfa-utf8", "bytestring"], DirectedEdge["regex-tdfa-utf8", "regex-base"], DirectedEdge["regex-tdfa-utf8", "regex-tdfa"], DirectedEdge["regex-tdfa-utf8", "utf8-string"], DirectedEdge["regex-tre", "base"], DirectedEdge["regex-tre", "regex-base"], DirectedEdge["regex-type", "base"], DirectedEdge["regex-xmlschema", "base"], DirectedEdge["regex-xmlschema", "parsec"], DirectedEdge["regexchar", "array"], DirectedEdge["regexchar", "base"], DirectedEdge["regexchar", "Cabal"], DirectedEdge["regexchar", "containers"], DirectedEdge["regexchar", "parallel"], DirectedEdge["regexchar", "parsec"], DirectedEdge["regexchar", "regex-base"], DirectedEdge["regexchar", "regex-posix"], DirectedEdge["regexchar", "regexchar"], DirectedEdge["regexchar", "regexdot"], DirectedEdge["regexchar", "toolshed"], DirectedEdge["regexdot", "base"], DirectedEdge["regexdot", "deepseq"], DirectedEdge["regexdot", "parallel"], DirectedEdge["regexdot", "parsec"], DirectedEdge["regexdot", "toolshed"], DirectedEdge["regexp-tries", "base"], DirectedEdge["regexp-tries", "containers"], DirectedEdge["regexp-tries", "derive-trie"], DirectedEdge["regexp-tries", "template-haskell"], DirectedEdge["regexp-tries", "weighted-regexp"], DirectedEdge["regexpr", "base"], DirectedEdge["regexpr", "HUnit"], DirectedEdge["regexpr", "mtl"], DirectedEdge["regexpr", "mtlparse"], DirectedEdge["regexpr-symbolic", "base"], DirectedEdge["regexqq", "base"], DirectedEdge["regexqq", "bytestring"], DirectedEdge["regexqq", "pcre-light"], DirectedEdge["regexqq", "template-haskell"], DirectedEdge["regional-pointers", "base"], DirectedEdge["regional-pointers", "base-unicode-symbols"], DirectedEdge["regional-pointers", "regions"], DirectedEdge["regional-pointers", "transformers"], DirectedEdge["regions", "base"], DirectedEdge["regions", "base-unicode-symbols"], DirectedEdge["regions", "monad-control"], DirectedEdge["regions", "transformers"], DirectedEdge["regions-monadsfd", "regions-mtl"], DirectedEdge["regions-monadsfd", "base-unicode-symbols"], DirectedEdge["regions-monadsfd", "monads-fd"], DirectedEdge["regions-monadsfd", "regions"], DirectedEdge["regions-monadsfd", "transformers"], DirectedEdge["regions-monadstf", "base-unicode-symbols"], DirectedEdge["regions-monadstf", "monads-tf"], DirectedEdge["regions-monadstf", "regions"], DirectedEdge["regions-monadstf", "transformers"], DirectedEdge["regions-mtl", "base-unicode-symbols"], DirectedEdge["regions-mtl", "mtl"], DirectedEdge["regions-mtl", "regions"], DirectedEdge["register-machine-typelevel", "base"], DirectedEdge["regress", "ad"], DirectedEdge["regress", "base"], DirectedEdge["regress", "vector"], DirectedEdge["regular", "base"], DirectedEdge["regular", "template-haskell"], DirectedEdge["regular-extras", "base"], DirectedEdge["regular-extras", "binary"], DirectedEdge["regular-extras", "deepseq"], DirectedEdge["regular-extras", "QuickCheck"], DirectedEdge["regular-extras", "regular"], DirectedEdge["regular-web", "applicative-extras"], DirectedEdge["regular-web", "base"], DirectedEdge["regular-web", "fclabels"], DirectedEdge["regular-web", "formlets"], DirectedEdge["regular-web", "json"], DirectedEdge["regular-web", "mtl"], DirectedEdge["regular-web", "regular"], DirectedEdge["regular-web", "xhtml"], DirectedEdge["regular-xmlpickler", "generic-xmlpickler"], DirectedEdge["regular-xmlpickler", "base"], DirectedEdge["regular-xmlpickler", "hxt"], DirectedEdge["regular-xmlpickler", "regular"], DirectedEdge["regular-xmlpickler", "text"], DirectedEdge["reheat", "base"], DirectedEdge["reheat", "directory"], DirectedEdge["reheat", "text"], DirectedEdge["reheat", "vty"], DirectedEdge["reheat", "vty-ui"], DirectedEdge["rehoo", "hoogle"], DirectedEdge["rehoo", "base"], DirectedEdge["rehoo", "cmdargs"], DirectedEdge["rehoo", "parallel-io"], DirectedEdge["rehoo", "shelly"], DirectedEdge["rehoo", "split"], DirectedEdge["rehoo", "system-filepath"], DirectedEdge["rehoo", "text"], DirectedEdge["rei", "attoparsec"], DirectedEdge["rei", "base"], DirectedEdge["rei", "bytestring"], DirectedEdge["rei", "containers"], DirectedEdge["rei", "directory"], DirectedEdge["rei", "regex-tdfa"], DirectedEdge["rei", "split"], DirectedEdge["reified-records", "base"], DirectedEdge["reified-records", "containers"], DirectedEdge["reified-records", "mtl"], DirectedEdge["reify", "base"], DirectedEdge["reify", "ghc"], DirectedEdge["reinterpret-cast", "array"], DirectedEdge["reinterpret-cast", "base"], DirectedEdge["relacion", "array"], DirectedEdge["relacion", "base"], DirectedEdge["relacion", "containers"], DirectedEdge["relation", "array"], DirectedEdge["relation", "base"], DirectedEdge["relation", "containers"], DirectedEdge["relation", "groom"], DirectedEdge["relational-postgresql8", "base"], DirectedEdge["relational-postgresql8", "containers"], DirectedEdge["relational-postgresql8", "HDBC"], DirectedEdge["relational-postgresql8", "names-th"], DirectedEdge["relational-postgresql8", "persistable-record"], DirectedEdge["relational-postgresql8", "relational-query"], DirectedEdge["relational-postgresql8", "relational-query-HDBC"], DirectedEdge["relational-postgresql8", "template-haskell"], DirectedEdge["relational-postgresql8", "time"], DirectedEdge["relational-postgresql8", "transformers"], DirectedEdge["relational-query", "array"], DirectedEdge["relational-query", "base"], DirectedEdge["relational-query", "bytestring"], DirectedEdge["relational-query", "containers"], DirectedEdge["relational-query", "dlist"], DirectedEdge["relational-query", "names-th"], DirectedEdge["relational-query", "persistable-record"], DirectedEdge["relational-query", "sql-words"], DirectedEdge["relational-query", "template-haskell"], DirectedEdge["relational-query", "text"], DirectedEdge["relational-query", "time"], DirectedEdge["relational-query", "time-locale-compat"], DirectedEdge["relational-query", "transformers"], DirectedEdge["relational-query-HDBC", "base"], DirectedEdge["relational-query-HDBC", "containers"], DirectedEdge["relational-query-HDBC", "convertible"], DirectedEdge["relational-query-HDBC", "dlist"], DirectedEdge["relational-query-HDBC", "HDBC"], DirectedEdge["relational-query-HDBC", "HDBC-session"], DirectedEdge["relational-query-HDBC", "names-th"], DirectedEdge["relational-query-HDBC", "persistable-record"], DirectedEdge["relational-query-HDBC", "relational-query"], DirectedEdge["relational-query-HDBC", "relational-schemas"], DirectedEdge["relational-query-HDBC", "template-haskell"], DirectedEdge["relational-query-HDBC", "transformers"], DirectedEdge["relational-record", "base"], DirectedEdge["relational-record", "persistable-types-HDBC-pg"], DirectedEdge["relational-record", "relational-query"], DirectedEdge["relational-record", "relational-query-HDBC"], DirectedEdge["relational-record-examples", "base"], DirectedEdge["relational-record-examples", "HDBC"], DirectedEdge["relational-record-examples", "HDBC-session"], DirectedEdge["relational-record-examples", "persistable-record"], DirectedEdge["relational-record-examples", "relational-query"], DirectedEdge["relational-record-examples", "relational-query-HDBC"], DirectedEdge["relational-record-examples", "relational-record-examples"], DirectedEdge["relational-record-examples", "relational-schemas"], DirectedEdge["relational-record-examples", "template-haskell"], DirectedEdge["relational-record-examples", "time"], DirectedEdge["relational-schemas", "base"], DirectedEdge["relational-schemas", "bytestring"], DirectedEdge["relational-schemas", "containers"], DirectedEdge["relational-schemas", "persistable-record"], DirectedEdge["relational-schemas", "relational-query"], DirectedEdge["relational-schemas", "template-haskell"], DirectedEdge["relational-schemas", "time"], DirectedEdge["relative-date", "base"], DirectedEdge["relative-date", "concatenative"], DirectedEdge["relative-date", "datetime"], DirectedEdge["relative-date", "mtl"], DirectedEdge["relative-date", "parsec"], DirectedEdge["relative-date", "time"], DirectedEdge["relit", "base"], DirectedEdge["relit", "regex-base"], DirectedEdge["relit", "template-haskell"], DirectedEdge["rematch", "base"], DirectedEdge["rematch-text", "base"], DirectedEdge["rematch-text", "rematch"], DirectedEdge["rematch-text", "text"], DirectedEdge["remote", "distributed-process"], DirectedEdge["remote", "base"], DirectedEdge["remote", "binary"], DirectedEdge["remote", "bytestring"], DirectedEdge["remote", "containers"], DirectedEdge["remote", "directory"], DirectedEdge["remote", "filepath"], DirectedEdge["remote", "mtl"], DirectedEdge["remote", "network"], DirectedEdge["remote", "stm"], DirectedEdge["remote", "syb"], DirectedEdge["remote", "template-haskell"], DirectedEdge["remote", "time"], DirectedEdge["remote", "utf8-string"], DirectedEdge["remote-debugger", "array"], DirectedEdge["remote-debugger", "base"], DirectedEdge["remote-debugger", "ghc"], DirectedEdge["remote-debugger", "ghc-paths"], DirectedEdge["remote-debugger", "json"], DirectedEdge["remote-debugger", "network"], DirectedEdge["remote-json", "aeson"], DirectedEdge["remote-json", "base"], DirectedEdge["remote-json", "exceptions"], DirectedEdge["remote-json", "fail"], DirectedEdge["remote-json", "natural-transformation"], DirectedEdge["remote-json", "remote-monad"], DirectedEdge["remote-json", "text"], DirectedEdge["remote-json", "transformers"], DirectedEdge["remote-json", "unordered-containers"], DirectedEdge["remote-json", "vector"], DirectedEdge["remote-json-client", "aeson"], DirectedEdge["remote-json-client", "base"], DirectedEdge["remote-json-client", "lens"], DirectedEdge["remote-json-client", "natural-transformation"], DirectedEdge["remote-json-client", "remote-json"], DirectedEdge["remote-json-client", "wreq"], DirectedEdge["remote-json-server", "aeson"], DirectedEdge["remote-json-server", "base"], DirectedEdge["remote-json-server", "data-default-class"], DirectedEdge["remote-json-server", "natural-transformation"], DirectedEdge["remote-json-server", "remote-json"], DirectedEdge["remote-json-server", "scotty"], DirectedEdge["remote-json-server", "text"], DirectedEdge["remote-json-server", "transformers"], DirectedEdge["remote-json-server", "warp"], DirectedEdge["remote-monad", "base"], DirectedEdge["remote-monad", "natural-transformation"], DirectedEdge["remote-monad", "transformers"], DirectedEdge["remotion", "async"], DirectedEdge["remotion", "base"], DirectedEdge["remotion", "bytestring"], DirectedEdge["remotion", "concurrent-extra"], DirectedEdge["remotion", "containers"], DirectedEdge["remotion", "directory"], DirectedEdge["remotion", "errors"], DirectedEdge["remotion", "filelock"], DirectedEdge["remotion", "hashable"], DirectedEdge["remotion", "hashtables"], DirectedEdge["remotion", "lifted-async"], DirectedEdge["remotion", "loch-th"], DirectedEdge["remotion", "monad-control"], DirectedEdge["remotion", "mtl"], DirectedEdge["remotion", "network"], DirectedEdge["remotion", "network-simple"], DirectedEdge["remotion", "old-locale"], DirectedEdge["remotion", "pipes"], DirectedEdge["remotion", "pipes-bytestring"], DirectedEdge["remotion", "pipes-cereal-plus"], DirectedEdge["remotion", "pipes-network"], DirectedEdge["remotion", "pipes-parse"], DirectedEdge["remotion", "placeholders"], DirectedEdge["remotion", "stm"], DirectedEdge["remotion", "system-fileio"], DirectedEdge["remotion", "system-filepath"], DirectedEdge["remotion", "text"], DirectedEdge["remotion", "time"], DirectedEdge["remotion", "transformers-base"], DirectedEdge["renderable", "base"], DirectedEdge["renderable", "containers"], DirectedEdge["renderable", "hashable"], DirectedEdge["renderable", "transformers"], DirectedEdge["reord", "base"], DirectedEdge["reorderable", "base"], DirectedEdge["reorderable", "constraints"], DirectedEdge["reorderable", "haskell-src-exts"], DirectedEdge["reorderable", "haskell-src-meta"], DirectedEdge["reorderable", "template-haskell"], DirectedEdge["repa", "base"], DirectedEdge["repa", "bytestring"], DirectedEdge["repa", "ghc-prim"], DirectedEdge["repa", "QuickCheck"], DirectedEdge["repa", "template-haskell"], DirectedEdge["repa", "vector"], DirectedEdge["repa-algorithms", "base"], DirectedEdge["repa-algorithms", "repa"], DirectedEdge["repa-algorithms", "vector"], DirectedEdge["repa-array", "base"], DirectedEdge["repa-array", "bytestring"], DirectedEdge["repa-array", "double-conversion"], DirectedEdge["repa-array", "filelock"], DirectedEdge["repa-array", "mtl"], DirectedEdge["repa-array", "primitive"], DirectedEdge["repa-array", "repa-convert"], DirectedEdge["repa-array", "repa-eval"], DirectedEdge["repa-array", "repa-scalar"], DirectedEdge["repa-array", "repa-stream"], DirectedEdge["repa-array", "text"], DirectedEdge["repa-array", "vector"], DirectedEdge["repa-bytestring", "base"], DirectedEdge["repa-bytestring", "repa"], DirectedEdge["repa-convert", "base"], DirectedEdge["repa-convert", "bytestring"], DirectedEdge["repa-convert", "double-conversion"], DirectedEdge["repa-convert", "primitive"], DirectedEdge["repa-convert", "repa-scalar"], DirectedEdge["repa-convert", "text"], DirectedEdge["repa-convert", "vector"], DirectedEdge["repa-devil", "friday"], DirectedEdge["repa-devil", "base"], DirectedEdge["repa-devil", "repa"], DirectedEdge["repa-devil", "transformers"], DirectedEdge["repa-eval", "base"], DirectedEdge["repa-eval", "ghc-prim"], DirectedEdge["repa-examples", "base"], DirectedEdge["repa-examples", "QuickCheck"], DirectedEdge["repa-examples", "random"], DirectedEdge["repa-examples", "repa"], DirectedEdge["repa-examples", "repa-algorithms"], DirectedEdge["repa-examples", "repa-io"], DirectedEdge["repa-examples", "template-haskell"], DirectedEdge["repa-examples", "vector"], DirectedEdge["repa-fftw", "base"], DirectedEdge["repa-fftw", "carray"], DirectedEdge["repa-fftw", "fft"], DirectedEdge["repa-fftw", "repa"], DirectedEdge["repa-fftw", "storable-complex"], DirectedEdge["repa-flow", "base"], DirectedEdge["repa-flow", "bytestring"], DirectedEdge["repa-flow", "containers"], DirectedEdge["repa-flow", "directory"], DirectedEdge["repa-flow", "filepath"], DirectedEdge["repa-flow", "hashtables"], DirectedEdge["repa-flow", "primitive"], DirectedEdge["repa-flow", "repa-array"], DirectedEdge["repa-flow", "repa-convert"], DirectedEdge["repa-flow", "repa-eval"], DirectedEdge["repa-flow", "repa-scalar"], DirectedEdge["repa-flow", "repa-stream"], DirectedEdge["repa-flow", "text"], DirectedEdge["repa-flow", "vector"], DirectedEdge["repa-io", "base"], DirectedEdge["repa-io", "binary"], DirectedEdge["repa-io", "bmp"], DirectedEdge["repa-io", "bytestring"], DirectedEdge["repa-io", "old-time"], DirectedEdge["repa-io", "repa"], DirectedEdge["repa-io", "vector"], DirectedEdge["repa-linear-algebra", "base"], DirectedEdge["repa-linear-algebra", "hmatrix"], DirectedEdge["repa-linear-algebra", "repa"], DirectedEdge["repa-linear-algebra", "vector"], DirectedEdge["repa-plugin", "base"], DirectedEdge["repa-plugin", "containers"], DirectedEdge["repa-plugin", "ddc-base"], DirectedEdge["repa-plugin", "ddc-core"], DirectedEdge["repa-plugin", "ddc-core-flow"], DirectedEdge["repa-plugin", "ddc-core-simpl"], DirectedEdge["repa-plugin", "ghc"], DirectedEdge["repa-plugin", "mtl"], DirectedEdge["repa-scalar", "base"], DirectedEdge["repa-scalar", "bytestring"], DirectedEdge["repa-scalar", "double-conversion"], DirectedEdge["repa-scalar", "primitive"], DirectedEdge["repa-scalar", "time"], DirectedEdge["repa-scalar", "vector"], DirectedEdge["repa-series", "base"], DirectedEdge["repa-series", "ghc"], DirectedEdge["repa-series", "ghc-prim"], DirectedEdge["repa-series", "vector"], DirectedEdge["repa-sndfile", "base"], DirectedEdge["repa-sndfile", "hsndfile"], DirectedEdge["repa-sndfile", "hsndfile-vector"], DirectedEdge["repa-sndfile", "repa"], DirectedEdge["repa-sndfile", "repa-sndfile"], DirectedEdge["repa-sndfile", "vector"], DirectedEdge["repa-stream", "base"], DirectedEdge["repa-stream", "mtl"], DirectedEdge["repa-stream", "primitive"], DirectedEdge["repa-stream", "repa-scalar"], DirectedEdge["repa-stream", "vector"], DirectedEdge["repa-v4l2", "base"], DirectedEdge["repa-v4l2", "bmp"], DirectedEdge["repa-v4l2", "bytestring"], DirectedEdge["repa-v4l2", "containers"], DirectedEdge["repa-v4l2", "deepseq"], DirectedEdge["repa-v4l2", "gloss"], DirectedEdge["repa-v4l2", "mtl"], DirectedEdge["repa-v4l2", "repa"], DirectedEdge["repa-v4l2", "transformers"], DirectedEdge["repa-v4l2", "vector"], DirectedEdge["repl", "base"], DirectedEdge["repl", "ghc"], DirectedEdge["repl", "ghc-paths"], DirectedEdge["repl", "haskell-src-exts"], DirectedEdge["repl", "parsec"], DirectedEdge["repl-toolkit", "aeson"], DirectedEdge["repl-toolkit", "base"], DirectedEdge["repl-toolkit", "bytestring"], DirectedEdge["repl-toolkit", "data-default"], DirectedEdge["repl-toolkit", "directory"], DirectedEdge["repl-toolkit", "exceptions"], DirectedEdge["repl-toolkit", "filepath"], DirectedEdge["repl-toolkit", "functor-monadic"], DirectedEdge["repl-toolkit", "ListLike"], DirectedEdge["repl-toolkit", "listsafe"], DirectedEdge["repl-toolkit", "monad-loops"], DirectedEdge["repl-toolkit", "mtl"], DirectedEdge["repl-toolkit", "parsec"], DirectedEdge["repl-toolkit", "semigroupoids"], DirectedEdge["repl-toolkit", "text"], DirectedEdge["repl-toolkit", "transformers"], DirectedEdge["repline", "base"], DirectedEdge["repline", "containers"], DirectedEdge["repline", "haskeline"], DirectedEdge["repline", "mtl"], DirectedEdge["repline", "process"], DirectedEdge["repline", "repline"], DirectedEdge["repo-based-blog", "base"], DirectedEdge["repo-based-blog", "blaze-html"], DirectedEdge["repo-based-blog", "containers"], DirectedEdge["repo-based-blog", "data-default"], DirectedEdge["repo-based-blog", "directory"], DirectedEdge["repo-based-blog", "dyre"], DirectedEdge["repo-based-blog", "filepath"], DirectedEdge["repo-based-blog", "filestore"], DirectedEdge["repo-based-blog", "ixset"], DirectedEdge["repo-based-blog", "lens"], DirectedEdge["repo-based-blog", "mtl"], DirectedEdge["repo-based-blog", "old-locale"], DirectedEdge["repo-based-blog", "pandoc"], DirectedEdge["repo-based-blog", "parsec"], DirectedEdge["repo-based-blog", "repo-based-blog"], DirectedEdge["repo-based-blog", "stm"], DirectedEdge["repo-based-blog", "text"], DirectedEdge["repo-based-blog", "time"], DirectedEdge["repo-based-blog", "transformers"], DirectedEdge["repo-based-blog", "transformers-base"], DirectedEdge["repo-based-blog", "transformers-compat"], DirectedEdge["repr", "base"], DirectedEdge["repr", "base-unicode-symbols"], DirectedEdge["repr", "dstring"], DirectedEdge["repr", "random"], DirectedEdge["repr", "string-combinators"], DirectedEdge["repr-tree-syb", "base"], DirectedEdge["repr-tree-syb", "containers"], DirectedEdge["repr-tree-syb", "syb"], DirectedEdge["repr-tree-syb", "text"], DirectedEdge["representable-functors", "adjunctions"], DirectedEdge["representable-functors", "array"], DirectedEdge["representable-functors", "base"], DirectedEdge["representable-functors", "comonad"], DirectedEdge["representable-functors", "comonad-transformers"], DirectedEdge["representable-functors", "comonads-fd"], DirectedEdge["representable-functors", "containers"], DirectedEdge["representable-functors", "contravariant"], DirectedEdge["representable-functors", "distributive"], DirectedEdge["representable-functors", "free"], DirectedEdge["representable-functors", "keys"], DirectedEdge["representable-functors", "mtl"], DirectedEdge["representable-functors", "semigroupoids"], DirectedEdge["representable-functors", "semigroups"], DirectedEdge["representable-functors", "transformers"], DirectedEdge["representable-profunctors", "profunctors"], DirectedEdge["representable-profunctors", "base"], DirectedEdge["representable-tries", "adjunctions"], DirectedEdge["representable-tries", "base"], DirectedEdge["representable-tries", "bifunctors"], DirectedEdge["representable-tries", "comonad"], DirectedEdge["representable-tries", "comonad-transformers"], DirectedEdge["representable-tries", "containers"], DirectedEdge["representable-tries", "distributive"], DirectedEdge["representable-tries", "keys"], DirectedEdge["representable-tries", "mtl"], DirectedEdge["representable-tries", "representable-functors"], DirectedEdge["representable-tries", "semigroupoids"], DirectedEdge["representable-tries", "semigroups"], DirectedEdge["representable-tries", "transformers"], DirectedEdge["reqcatcher", "base"], DirectedEdge["reqcatcher", "http-types"], DirectedEdge["reqcatcher", "network"], DirectedEdge["reqcatcher", "text"], DirectedEdge["reqcatcher", "wai"], DirectedEdge["reqcatcher", "warp"], DirectedEdge["request-monad", "base"], DirectedEdge["request-monad", "free"], DirectedEdge["request-monad", "mtl"], DirectedEdge["request-monad", "transformers"], DirectedEdge["reroute", "base"], DirectedEdge["reroute", "deepseq"], DirectedEdge["reroute", "graph-core"], DirectedEdge["reroute", "hashable"], DirectedEdge["reroute", "hvect"], DirectedEdge["reroute", "mtl"], DirectedEdge["reroute", "path-pieces"], DirectedEdge["reroute", "regex-compat"], DirectedEdge["reroute", "text"], DirectedEdge["reroute", "transformers"], DirectedEdge["reroute", "unordered-containers"], DirectedEdge["reroute", "vector"], DirectedEdge["reserve", "base"], DirectedEdge["reserve", "base-compat"], DirectedEdge["reserve", "bytestring"], DirectedEdge["reserve", "directory"], DirectedEdge["reserve", "http-kit"], DirectedEdge["reserve", "http-types"], DirectedEdge["reserve", "network"], DirectedEdge["reserve", "process"], DirectedEdge["reserve", "unix"], DirectedEdge["resistor-cube", "base"], DirectedEdge["resistor-cube", "hmatrix"], DirectedEdge["resistor-cube", "transformers"], DirectedEdge["resistor-cube", "utility-ht"], DirectedEdge["resolve-trivial-conflicts", "ansi-terminal"], DirectedEdge["resolve-trivial-conflicts", "base"], DirectedEdge["resolve-trivial-conflicts", "base-compat"], DirectedEdge["resolve-trivial-conflicts", "Diff"], DirectedEdge["resolve-trivial-conflicts", "directory"], DirectedEdge["resolve-trivial-conflicts", "filepath"], DirectedEdge["resolve-trivial-conflicts", "mtl"], DirectedEdge["resolve-trivial-conflicts", "optparse-applicative"], DirectedEdge["resolve-trivial-conflicts", "process"], DirectedEdge["resolve-trivial-conflicts", "unix"], DirectedEdge["resource-effect", "base"], DirectedEdge["resource-effect", "containers"], DirectedEdge["resource-effect", "extensible-effects"], DirectedEdge["resource-embed", "base"], DirectedEdge["resource-embed", "bytestring"], DirectedEdge["resource-embed", "directory"], DirectedEdge["resource-pool", "base"], DirectedEdge["resource-pool", "hashable"], DirectedEdge["resource-pool", "monad-control"], DirectedEdge["resource-pool", "stm"], DirectedEdge["resource-pool", "time"], DirectedEdge["resource-pool", "transformers"], DirectedEdge["resource-pool", "transformers-base"], DirectedEdge["resource-pool", "vector"], DirectedEdge["resource-pool-catchio", "base"], DirectedEdge["resource-pool-catchio", "hashable"], DirectedEdge["resource-pool-catchio", "MonadCatchIO-transformers"], DirectedEdge["resource-pool-catchio", "stm"], DirectedEdge["resource-pool-catchio", "time"], DirectedEdge["resource-pool-catchio", "transformers"], DirectedEdge["resource-pool-catchio", "transformers-base"], DirectedEdge["resource-pool-catchio", "vector"], DirectedEdge["resource-pool-monad", "base"], DirectedEdge["resource-pool-monad", "free"], DirectedEdge["resource-pool-monad", "kan-extensions"], DirectedEdge["resource-pool-monad", "monad-control"], DirectedEdge["resource-pool-monad", "resource-pool"], DirectedEdge["resource-pool-monad", "transformers"], DirectedEdge["resource-simple", "base"], DirectedEdge["resource-simple", "containers"], DirectedEdge["resource-simple", "monad-control"], DirectedEdge["resource-simple", "monad-fork"], DirectedEdge["resource-simple", "mtl-evil-instances"], DirectedEdge["resource-simple", "transformers"], DirectedEdge["resource-simple", "transformers-base"], DirectedEdge["resourcet", "base"], DirectedEdge["resourcet", "containers"], DirectedEdge["resourcet", "exceptions"], DirectedEdge["resourcet", "lifted-base"], DirectedEdge["resourcet", "mmorph"], DirectedEdge["resourcet", "monad-control"], DirectedEdge["resourcet", "mtl"], DirectedEdge["resourcet", "transformers"], DirectedEdge["resourcet", "transformers-base"], DirectedEdge["resourcet", "transformers-compat"], DirectedEdge["respond", "aeson"], DirectedEdge["respond", "base"], DirectedEdge["respond", "bifunctors"], DirectedEdge["respond", "bytestring"], DirectedEdge["respond", "containers"], DirectedEdge["respond", "data-default-class"], DirectedEdge["respond", "exceptions"], DirectedEdge["respond", "fast-logger"], DirectedEdge["respond", "formatting"], DirectedEdge["respond", "HList"], DirectedEdge["respond", "http-media"], DirectedEdge["respond", "http-types"], DirectedEdge["respond", "lens"], DirectedEdge["respond", "monad-control"], DirectedEdge["respond", "monad-logger"], DirectedEdge["respond", "mtl"], DirectedEdge["respond", "path-pieces"], DirectedEdge["respond", "respond"], DirectedEdge["respond", "safe"], DirectedEdge["respond", "scientific"], DirectedEdge["respond", "template-haskell"], DirectedEdge["respond", "text"], DirectedEdge["respond", "time"], DirectedEdge["respond", "transformers"], DirectedEdge["respond", "transformers-base"], DirectedEdge["respond", "unordered-containers"], DirectedEdge["respond", "vector"], DirectedEdge["respond", "wai"], DirectedEdge["respond", "wai-extra"], DirectedEdge["respond", "warp"], DirectedEdge["rest-client", "aeson-utils"], DirectedEdge["rest-client", "base"], DirectedEdge["rest-client", "bytestring"], DirectedEdge["rest-client", "case-insensitive"], DirectedEdge["rest-client", "data-default"], DirectedEdge["rest-client", "exceptions"], DirectedEdge["rest-client", "http-conduit"], DirectedEdge["rest-client", "http-types"], DirectedEdge["rest-client", "hxt"], DirectedEdge["rest-client", "hxt-pickle-utils"], DirectedEdge["rest-client", "monad-control"], DirectedEdge["rest-client", "mtl"], DirectedEdge["rest-client", "resourcet"], DirectedEdge["rest-client", "rest-types"], DirectedEdge["rest-client", "tostring"], DirectedEdge["rest-client", "transformers"], DirectedEdge["rest-client", "transformers-base"], DirectedEdge["rest-client", "transformers-compat"], DirectedEdge["rest-client", "uri-encode"], DirectedEdge["rest-client", "utf8-string"], DirectedEdge["rest-core", "aeson"], DirectedEdge["rest-core", "aeson-utils"], DirectedEdge["rest-core", "base"], DirectedEdge["rest-core", "base-compat"], DirectedEdge["rest-core", "bytestring"], DirectedEdge["rest-core", "case-insensitive"], DirectedEdge["rest-core", "errors"], DirectedEdge["rest-core", "fclabels"], DirectedEdge["rest-core", "hxt"], DirectedEdge["rest-core", "hxt-pickle-utils"], DirectedEdge["rest-core", "json-schema"], DirectedEdge["rest-core", "mtl"], DirectedEdge["rest-core", "mtl-compat"], DirectedEdge["rest-core", "multipart"], DirectedEdge["rest-core", "random"], DirectedEdge["rest-core", "rest-stringmap"], DirectedEdge["rest-core", "rest-types"], DirectedEdge["rest-core", "safe"], DirectedEdge["rest-core", "split"], DirectedEdge["rest-core", "text"], DirectedEdge["rest-core", "transformers"], DirectedEdge["rest-core", "transformers-compat"], DirectedEdge["rest-core", "unordered-containers"], DirectedEdge["rest-core", "uri-encode"], DirectedEdge["rest-core", "utf8-string"], DirectedEdge["rest-core", "uuid"], DirectedEdge["rest-example", "aeson"], DirectedEdge["rest-example", "base"], DirectedEdge["rest-example", "base-compat"], DirectedEdge["rest-example", "bytestring"], DirectedEdge["rest-example", "containers"], DirectedEdge["rest-example", "generic-aeson"], DirectedEdge["rest-example", "generic-xmlpickler"], DirectedEdge["rest-example", "hxt"], DirectedEdge["rest-example", "json-schema"], DirectedEdge["rest-example", "mtl"], DirectedEdge["rest-example", "rest-core"], DirectedEdge["rest-example", "rest-example"], DirectedEdge["rest-example", "rest-gen"], DirectedEdge["rest-example", "safe"], DirectedEdge["rest-example", "stm"], DirectedEdge["rest-example", "text"], DirectedEdge["rest-example", "time"], DirectedEdge["rest-example", "transformers"], DirectedEdge["rest-example", "transformers-compat"], DirectedEdge["rest-example", "unordered-containers"], DirectedEdge["rest-gen", "aeson"], DirectedEdge["rest-gen", "base"], DirectedEdge["rest-gen", "base-compat"], DirectedEdge["rest-gen", "blaze-html"], DirectedEdge["rest-gen", "Cabal"], DirectedEdge["rest-gen", "code-builder"], DirectedEdge["rest-gen", "directory"], DirectedEdge["rest-gen", "fclabels"], DirectedEdge["rest-gen", "filepath"], DirectedEdge["rest-gen", "hashable"], DirectedEdge["rest-gen", "haskell-src-exts"], DirectedEdge["rest-gen", "HStringTemplate"], DirectedEdge["rest-gen", "hxt"], DirectedEdge["rest-gen", "json-schema"], DirectedEdge["rest-gen", "pretty"], DirectedEdge["rest-gen", "process"], DirectedEdge["rest-gen", "rest-core"], DirectedEdge["rest-gen", "safe"], DirectedEdge["rest-gen", "scientific"], DirectedEdge["rest-gen", "semigroups"], DirectedEdge["rest-gen", "split"], DirectedEdge["rest-gen", "tagged"], DirectedEdge["rest-gen", "text"], DirectedEdge["rest-gen", "uniplate"], DirectedEdge["rest-gen", "unordered-containers"], DirectedEdge["rest-gen", "vector"], DirectedEdge["rest-happstack", "base"], DirectedEdge["rest-happstack", "containers"], DirectedEdge["rest-happstack", "happstack-server"], DirectedEdge["rest-happstack", "mtl"], DirectedEdge["rest-happstack", "rest-core"], DirectedEdge["rest-happstack", "rest-gen"], DirectedEdge["rest-happstack", "utf8-string"], DirectedEdge["rest-snap", "base"], DirectedEdge["rest-snap", "base-compat"], DirectedEdge["rest-snap", "bytestring"], DirectedEdge["rest-snap", "case-insensitive"], DirectedEdge["rest-snap", "rest-core"], DirectedEdge["rest-snap", "safe"], DirectedEdge["rest-snap", "snap-core"], DirectedEdge["rest-snap", "unordered-containers"], DirectedEdge["rest-snap", "uri-encode"], DirectedEdge["rest-snap", "utf8-string"], DirectedEdge["rest-stringmap", "aeson"], DirectedEdge["rest-stringmap", "base"], DirectedEdge["rest-stringmap", "containers"], DirectedEdge["rest-stringmap", "hashable"], DirectedEdge["rest-stringmap", "hxt"], DirectedEdge["rest-stringmap", "json-schema"], DirectedEdge["rest-stringmap", "tagged"], DirectedEdge["rest-stringmap", "tostring"], DirectedEdge["rest-stringmap", "unordered-containers"], DirectedEdge["rest-types", "aeson"], DirectedEdge["rest-types", "base"], DirectedEdge["rest-types", "base-compat"], DirectedEdge["rest-types", "case-insensitive"], DirectedEdge["rest-types", "generic-aeson"], DirectedEdge["rest-types", "generic-xmlpickler"], DirectedEdge["rest-types", "hxt"], DirectedEdge["rest-types", "json-schema"], DirectedEdge["rest-types", "rest-stringmap"], DirectedEdge["rest-types", "text"], DirectedEdge["rest-types", "uuid"], DirectedEdge["rest-wai", "base"], DirectedEdge["rest-wai", "base-compat"], DirectedEdge["rest-wai", "bytestring"], DirectedEdge["rest-wai", "case-insensitive"], DirectedEdge["rest-wai", "containers"], DirectedEdge["rest-wai", "http-types"], DirectedEdge["rest-wai", "mime-types"], DirectedEdge["rest-wai", "mtl"], DirectedEdge["rest-wai", "rest-core"], DirectedEdge["rest-wai", "text"], DirectedEdge["rest-wai", "unordered-containers"], DirectedEdge["rest-wai", "wai"], DirectedEdge["restful-snap", "base"], DirectedEdge["restful-snap", "blaze-builder"], DirectedEdge["restful-snap", "bytestring"], DirectedEdge["restful-snap", "containers"], DirectedEdge["restful-snap", "data-default"], DirectedEdge["restful-snap", "digestive-functors"], DirectedEdge["restful-snap", "errors"], DirectedEdge["restful-snap", "heist"], DirectedEdge["restful-snap", "lens"], DirectedEdge["restful-snap", "mtl"], DirectedEdge["restful-snap", "old-locale"], DirectedEdge["restful-snap", "readable"], DirectedEdge["restful-snap", "snap"], DirectedEdge["restful-snap", "snap-core"], DirectedEdge["restful-snap", "snap-extras"], DirectedEdge["restful-snap", "template-haskell"], DirectedEdge["restful-snap", "text"], DirectedEdge["restful-snap", "time"], DirectedEdge["restful-snap", "xmlhtml"], DirectedEdge["restricted-workers", "async"], DirectedEdge["restricted-workers", "base"], DirectedEdge["restricted-workers", "bytestring"], DirectedEdge["restricted-workers", "cereal"], DirectedEdge["restricted-workers", "data-default"], DirectedEdge["restricted-workers", "directory"], DirectedEdge["restricted-workers", "either"], DirectedEdge["restricted-workers", "filepath"], DirectedEdge["restricted-workers", "monad-control"], DirectedEdge["restricted-workers", "mtl"], DirectedEdge["restricted-workers", "network"], DirectedEdge["restricted-workers", "selinux"], DirectedEdge["restricted-workers", "stm"], DirectedEdge["restricted-workers", "text"], DirectedEdge["restricted-workers", "transformers"], DirectedEdge["restricted-workers", "transformers-base"], DirectedEdge["restricted-workers", "unix"], DirectedEdge["restyle", "base"], DirectedEdge["restyle", "directory"], DirectedEdge["restyle", "filepath"], DirectedEdge["restyle", "utf8-string"], DirectedEdge["resumable-exceptions", "base"], DirectedEdge["resumable-exceptions", "mtl"], DirectedEdge["rethinkdb", "aeson"], DirectedEdge["rethinkdb", "attoparsec"], DirectedEdge["rethinkdb", "base"], DirectedEdge["rethinkdb", "base64-bytestring"], DirectedEdge["rethinkdb", "binary"], DirectedEdge["rethinkdb", "bytestring"], DirectedEdge["rethinkdb", "containers"], DirectedEdge["rethinkdb", "data-default"], DirectedEdge["rethinkdb", "mtl"], DirectedEdge["rethinkdb", "network"], DirectedEdge["rethinkdb", "scientific"], DirectedEdge["rethinkdb", "text"], DirectedEdge["rethinkdb", "time"], DirectedEdge["rethinkdb", "unordered-containers"], DirectedEdge["rethinkdb", "utf8-string"], DirectedEdge["rethinkdb", "vector"], DirectedEdge["rethinkdb-client-driver", "aeson"], DirectedEdge["rethinkdb-client-driver", "base"], DirectedEdge["rethinkdb-client-driver", "binary"], DirectedEdge["rethinkdb-client-driver", "bytestring"], DirectedEdge["rethinkdb-client-driver", "containers"], DirectedEdge["rethinkdb-client-driver", "hashable"], DirectedEdge["rethinkdb-client-driver", "mtl"], DirectedEdge["rethinkdb-client-driver", "network"], DirectedEdge["rethinkdb-client-driver", "old-locale"], DirectedEdge["rethinkdb-client-driver", "scientific"], DirectedEdge["rethinkdb-client-driver", "stm"], DirectedEdge["rethinkdb-client-driver", "template-haskell"], DirectedEdge["rethinkdb-client-driver", "text"], DirectedEdge["rethinkdb-client-driver", "time"], DirectedEdge["rethinkdb-client-driver", "unordered-containers"], DirectedEdge["rethinkdb-client-driver", "vector"], DirectedEdge["rethinkdb-model", "aeson"], DirectedEdge["rethinkdb-model", "base"], DirectedEdge["rethinkdb-model", "mtl"], DirectedEdge["rethinkdb-model", "rethinkdb"], DirectedEdge["rethinkdb-model", "text"], DirectedEdge["rethinkdb-model", "transformers"], DirectedEdge["rethinkdb-model", "unordered-containers"], DirectedEdge["rethinkdb-wereHamster", "aeson"], DirectedEdge["rethinkdb-wereHamster", "attoparsec"], DirectedEdge["rethinkdb-wereHamster", "base"], DirectedEdge["rethinkdb-wereHamster", "bytestring"], DirectedEdge["rethinkdb-wereHamster", "containers"], DirectedEdge["rethinkdb-wereHamster", "data-default"], DirectedEdge["rethinkdb-wereHamster", "ghc-prim"], DirectedEdge["rethinkdb-wereHamster", "mtl"], DirectedEdge["rethinkdb-wereHamster", "network"], DirectedEdge["rethinkdb-wereHamster", "protocol-buffers"], DirectedEdge["rethinkdb-wereHamster", "protocol-buffers-descriptor"], DirectedEdge["rethinkdb-wereHamster", "text"], DirectedEdge["rethinkdb-wereHamster", "time"], DirectedEdge["rethinkdb-wereHamster", "unordered-containers"], DirectedEdge["rethinkdb-wereHamster", "utf8-string"], DirectedEdge["rethinkdb-wereHamster", "vector"], DirectedEdge["retry", "base"], DirectedEdge["retry", "data-default-class"], DirectedEdge["retry", "exceptions"], DirectedEdge["retry", "ghc-prim"], DirectedEdge["retry", "random"], DirectedEdge["retry", "transformers"], DirectedEdge["retryer", "base"], DirectedEdge["retryer", "optparse-applicative"], DirectedEdge["retryer", "process"], DirectedEdge["rev-state", "base"], DirectedEdge["rev-state", "mtl"], DirectedEdge["revdectime", "base"], DirectedEdge["revdectime", "old-time"], DirectedEdge["reverse-apply", "base"], DirectedEdge["reverse-arguments", "base"], DirectedEdge["reverse-geocoding", "aeson"], DirectedEdge["reverse-geocoding", "base"], DirectedEdge["reverse-geocoding", "iso3166-country-codes"], DirectedEdge["reverse-geocoding", "lens"], DirectedEdge["reverse-geocoding", "lens-aeson"], DirectedEdge["reverse-geocoding", "text"], DirectedEdge["reverse-geocoding", "wreq"], DirectedEdge["reversi", "array"], DirectedEdge["reversi", "base"], DirectedEdge["reversi", "process"], DirectedEdge["rewrite", "base"], DirectedEdge["rewrite", "bytestring"], DirectedEdge["rewrite", "directory"], DirectedEdge["rewrite", "multiarg"], DirectedEdge["rewrite", "process"], DirectedEdge["rewriting", "base"], DirectedEdge["rewriting", "containers"], DirectedEdge["rewriting", "regular"], DirectedEdge["rex", "base"], DirectedEdge["rex", "bytestring"], DirectedEdge["rex", "containers"], DirectedEdge["rex", "haskell-src-exts"], DirectedEdge["rex", "haskell-src-meta"], DirectedEdge["rex", "pcre-light"], DirectedEdge["rex", "template-haskell"], DirectedEdge["rezoom", "base"], DirectedEdge["rezoom", "bytestring"], DirectedEdge["rezoom", "containers"], DirectedEdge["rezoom", "datetime"], DirectedEdge["rezoom", "HTTP"], DirectedEdge["rezoom", "json"], DirectedEdge["rezoom", "mtl"], DirectedEdge["rezoom", "xhtml"], DirectedEdge["rfc3339", "base"], DirectedEdge["rfc3339", "timerep"], DirectedEdge["rfc5051", "base"], DirectedEdge["rfc5051", "bytestring"], DirectedEdge["rfc5051", "containers"], DirectedEdge["rhythm-game-tutorial", "base"], DirectedEdge["rhythm-game-tutorial", "call"], DirectedEdge["rhythm-game-tutorial", "containers"], DirectedEdge["rhythm-game-tutorial", "lens"], DirectedEdge["rhythm-game-tutorial", "mtl"], DirectedEdge["rhythm-game-tutorial", "objective"], DirectedEdge["rhythm-game-tutorial", "split"], DirectedEdge["riak", "aeson"], DirectedEdge["riak", "attoparsec"], DirectedEdge["riak", "base"], DirectedEdge["riak", "binary"], DirectedEdge["riak", "blaze-builder"], DirectedEdge["riak", "bytestring"], DirectedEdge["riak", "containers"], DirectedEdge["riak", "data-default-class"], DirectedEdge["riak", "deepseq"], DirectedEdge["riak", "enclosed-exceptions"], DirectedEdge["riak", "exceptions"], DirectedEdge["riak", "hashable"], DirectedEdge["riak", "monad-control"], DirectedEdge["riak", "network"], DirectedEdge["riak", "protocol-buffers"], DirectedEdge["riak", "random"], DirectedEdge["riak", "random-shuffle"], DirectedEdge["riak", "resource-pool"], DirectedEdge["riak", "riak-protobuf"], DirectedEdge["riak", "semigroups"], DirectedEdge["riak", "text"], DirectedEdge["riak", "time"], DirectedEdge["riak", "transformers"], DirectedEdge["riak", "unordered-containers"], DirectedEdge["riak", "vector"], DirectedEdge["riak-protobuf", "array"], DirectedEdge["riak-protobuf", "base"], DirectedEdge["riak-protobuf", "parsec"], DirectedEdge["riak-protobuf", "protocol-buffers"], DirectedEdge["riak-protobuf", "protocol-buffers-descriptor"], DirectedEdge["richreports", "ascetic"], DirectedEdge["richreports", "base"], DirectedEdge["richreports", "MissingH"], DirectedEdge["riemann", "base"], DirectedEdge["riemann", "bytestring"], DirectedEdge["riemann", "cereal"], DirectedEdge["riemann", "containers"], DirectedEdge["riemann", "data-default"], DirectedEdge["riemann", "errors"], DirectedEdge["riemann", "http-client"], DirectedEdge["riemann", "lens"], DirectedEdge["riemann", "mtl"], DirectedEdge["riemann", "network"], DirectedEdge["riemann", "protobuf"], DirectedEdge["riemann", "riemann"], DirectedEdge["riemann", "text"], DirectedEdge["riemann", "time"], DirectedEdge["riemann", "transformers"], DirectedEdge["riemann", "wreq"], DirectedEdge["riff", "base"], DirectedEdge["riff", "binary"], DirectedEdge["riff", "bytestring"], DirectedEdge["riff", "either"], DirectedEdge["riff", "filepath"], DirectedEdge["riff", "riff"], DirectedEdge["riff", "transformers"], DirectedEdge["ring-buffer", "base"], DirectedEdge["ring-buffer", "mtl"], DirectedEdge["ring-buffer", "primitive"], DirectedEdge["ring-buffer", "vector"], DirectedEdge["riot", "base"], DirectedEdge["riot", "containers"], DirectedEdge["riot", "directory"], DirectedEdge["riot", "mtl"], DirectedEdge["riot", "old-locale"], DirectedEdge["riot", "packedstring"], DirectedEdge["riot", "process"], DirectedEdge["riot", "unix"], DirectedEdge["ripple", "aeson"], DirectedEdge["ripple", "attoparsec"], DirectedEdge["ripple", "base"], DirectedEdge["ripple", "base58address"], DirectedEdge["ripple", "binary"], DirectedEdge["ripple", "bytestring"], DirectedEdge["ripple", "cereal"], DirectedEdge["ripple", "crypto-api"], DirectedEdge["ripple", "crypto-pubkey-types"], DirectedEdge["ripple", "cryptohash-cryptoapi"], DirectedEdge["ripple", "ecdsa"], DirectedEdge["ripple", "errors"], DirectedEdge["ripple", "largeword"], DirectedEdge["ripple", "text"], DirectedEdge["ripple", "time"], DirectedEdge["ripple", "transformers"], DirectedEdge["ripple", "utility-ht"], DirectedEdge["ripple", "websockets"], DirectedEdge["ripple-federation", "aeson"], DirectedEdge["ripple-federation", "attoparsec"], DirectedEdge["ripple-federation", "base"], DirectedEdge["ripple-federation", "base58address"], DirectedEdge["ripple-federation", "blaze-builder"], DirectedEdge["ripple-federation", "bytestring"], DirectedEdge["ripple-federation", "errors"], DirectedEdge["ripple-federation", "http-streams"], DirectedEdge["ripple-federation", "http-types"], DirectedEdge["ripple-federation", "io-streams"], DirectedEdge["ripple-federation", "network-uri"], DirectedEdge["ripple-federation", "text"], DirectedEdge["ripple-federation", "unexceptionalio"], DirectedEdge["risc386", "array"], DirectedEdge["risc386", "base"], DirectedEdge["risc386", "containers"], DirectedEdge["risc386", "mtl"], DirectedEdge["risc386", "pretty"], DirectedEdge["rivers", "base"], DirectedEdge["rivers", "lazysmallcheck"], DirectedEdge["rivers", "oeis"], DirectedEdge["rivers", "QuickCheck"], DirectedEdge["rivet", "base"], DirectedEdge["rivet", "rivet-core"], DirectedEdge["rivet", "rivet-simple-deploy"], DirectedEdge["rivet-core", "base"], DirectedEdge["rivet-core", "configurator"], DirectedEdge["rivet-core", "directory"], DirectedEdge["rivet-core", "directory-tree"], DirectedEdge["rivet-core", "filepath"], DirectedEdge["rivet-core", "postgresql-simple"], DirectedEdge["rivet-core", "process"], DirectedEdge["rivet-core", "shake"], DirectedEdge["rivet-core", "template-haskell"], DirectedEdge["rivet-core", "text"], DirectedEdge["rivet-core", "time"], DirectedEdge["rivet-core", "unordered-containers"], DirectedEdge["rivet-migration", "base"], DirectedEdge["rivet-migration", "postgresql-simple"], DirectedEdge["rivet-migration", "text"], DirectedEdge["rivet-simple-deploy", "base"], DirectedEdge["rivet-simple-deploy", "configurator"], DirectedEdge["rivet-simple-deploy", "mtl"], DirectedEdge["rivet-simple-deploy", "rivet-core"], DirectedEdge["rivet-simple-deploy", "text"], DirectedEdge["rlglue", "base"], DirectedEdge["rlglue", "binary"], DirectedEdge["rlglue", "bytestring"], DirectedEdge["rlglue", "exceptions"], DirectedEdge["rlglue", "network"], DirectedEdge["rlglue", "network-simple"], DirectedEdge["rlglue", "parsec"], DirectedEdge["rlglue", "random"], DirectedEdge["rlglue", "transformers"], DirectedEdge["rlist", "base"], DirectedEdge["rmonad", "base"], DirectedEdge["rmonad", "containers"], DirectedEdge["rmonad", "suitable"], DirectedEdge["rmonad", "transformers"], DirectedEdge["rncryptor", "base"], DirectedEdge["rncryptor", "bytestring"], DirectedEdge["rncryptor", "cipher-aes"], DirectedEdge["rncryptor", "io-streams"], DirectedEdge["rncryptor", "mtl"], DirectedEdge["rncryptor", "pbkdf"], DirectedEdge["rncryptor", "QuickCheck"], DirectedEdge["rncryptor", "random"], DirectedEdge["rncryptor", "rncryptor"], DirectedEdge["rng-utils", "base"], DirectedEdge["rng-utils", "bytestring"], DirectedEdge["rng-utils", "mwc-random"], DirectedEdge["rng-utils", "vector"], DirectedEdge["robin", "base"], DirectedEdge["robin", "Cabal"], DirectedEdge["robin", "directory"], DirectedEdge["robin", "filepath"], DirectedEdge["robin", "fsnotify"], DirectedEdge["robin", "hdaemonize"], DirectedEdge["robin", "lens"], DirectedEdge["robin", "lifted-base"], DirectedEdge["robin", "monad-control"], DirectedEdge["robin", "mtl"], DirectedEdge["robin", "process"], DirectedEdge["robin", "resourcet"], DirectedEdge["robin", "text"], DirectedEdge["robin", "time"], DirectedEdge["robin", "unix"], DirectedEdge["robot", "base"], DirectedEdge["robot", "containers"], DirectedEdge["robot", "exceptions"], DirectedEdge["robot", "transformers"], DirectedEdge["robot", "xhb"], DirectedEdge["robots-txt", "attoparsec"], DirectedEdge["robots-txt", "base"], DirectedEdge["robots-txt", "bytestring"], DirectedEdge["robots-txt", "old-locale"], DirectedEdge["robots-txt", "time"], DirectedEdge["rocksdb-haskell", "base"], DirectedEdge["rocksdb-haskell", "bytestring"], DirectedEdge["rocksdb-haskell", "data-default"], DirectedEdge["rocksdb-haskell", "filepath"], DirectedEdge["rocksdb-haskell", "resourcet"], DirectedEdge["rocksdb-haskell", "transformers"], DirectedEdge["roguestar", "base"], DirectedEdge["roguestar", "bytestring"], DirectedEdge["roguestar", "directory"], DirectedEdge["roguestar", "filepath"], DirectedEdge["roguestar", "old-time"], DirectedEdge["roguestar", "process"], DirectedEdge["roguestar-engine", "array"], DirectedEdge["roguestar-engine", "base"], DirectedEdge["roguestar-engine", "bytestring"], DirectedEdge["roguestar-engine", "containers"], DirectedEdge["roguestar-engine", "data-memocombinators"], DirectedEdge["roguestar-engine", "hslogger"], DirectedEdge["roguestar-engine", "MaybeT"], DirectedEdge["roguestar-engine", "MonadRandom"], DirectedEdge["roguestar-engine", "mtl"], DirectedEdge["roguestar-engine", "old-time"], DirectedEdge["roguestar-engine", "parallel"], DirectedEdge["roguestar-engine", "priority-sync"], DirectedEdge["roguestar-engine", "PSQueue"], DirectedEdge["roguestar-engine", "random"], DirectedEdge["roguestar-engine", "stm"], DirectedEdge["roguestar-gl", "arrows"], DirectedEdge["roguestar-gl", "base"], DirectedEdge["roguestar-gl", "bytestring"], DirectedEdge["roguestar-gl", "containers"], DirectedEdge["roguestar-gl", "filepath"], DirectedEdge["roguestar-gl", "GLUT"], DirectedEdge["roguestar-gl", "MonadRandom"], DirectedEdge["roguestar-gl", "mtl"], DirectedEdge["roguestar-gl", "OpenGL"], DirectedEdge["roguestar-gl", "priority-sync"], DirectedEdge["roguestar-gl", "random"], DirectedEdge["roguestar-gl", "rsagl"], DirectedEdge["roguestar-gl", "rsagl-frp"], DirectedEdge["roguestar-gl", "rsagl-math"], DirectedEdge["roguestar-gl", "stm"], DirectedEdge["roguestar-glut", "base"], DirectedEdge["roguestar-glut", "GLUT"], DirectedEdge["roguestar-glut", "roguestar-gl"], DirectedEdge["roguestar-glut", "rsagl"], DirectedEdge["rollbar", "aeson"], DirectedEdge["rollbar", "base"], DirectedEdge["rollbar", "basic-prelude"], DirectedEdge["rollbar", "http-conduit"], DirectedEdge["rollbar", "monad-control"], DirectedEdge["rollbar", "network"], DirectedEdge["rollbar", "text"], DirectedEdge["rollbar", "vector"], DirectedEdge["roller", "base"], DirectedEdge["roller", "optparse-applicative"], DirectedEdge["roller", "random"], DirectedEdge["roller", "regex-applicative"], DirectedEdge["roller", "roller"], DirectedEdge["rolling-queue", "base"], DirectedEdge["rolling-queue", "stm"], DirectedEdge["roman-numerals", "base"], DirectedEdge["roman-numerals", "base-unicode-symbols"], DirectedEdge["roman-numerals", "bytestring"], DirectedEdge["roman-numerals", "text"], DirectedEdge["romkan", "attoparsec"], DirectedEdge["romkan", "base"], DirectedEdge["romkan", "containers"], DirectedEdge["romkan", "text"], DirectedEdge["roots", "base"], DirectedEdge["roots", "tagged"], DirectedEdge["rope", "base"], DirectedEdge["rope", "bytestring"], DirectedEdge["rope", "fingertree"], DirectedEdge["rope", "mtl"], DirectedEdge["rope", "utf8-string"], DirectedEdge["rosa", "aeson"], DirectedEdge["rosa", "base"], DirectedEdge["rosa", "bytestring"], DirectedEdge["rosa", "lens"], DirectedEdge["rosa", "optparse-applicative"], DirectedEdge["rosa", "process"], DirectedEdge["rosa", "text"], DirectedEdge["rosa", "unordered-containers"], DirectedEdge["rosa", "vector"], DirectedEdge["rosa", "wreq"], DirectedEdge["rose-trees", "base"], DirectedEdge["rose-trees", "containers"], DirectedEdge["rose-trees", "deepseq"], DirectedEdge["rose-trees", "mtl"], DirectedEdge["rose-trees", "QuickCheck"], DirectedEdge["rose-trees", "quickcheck-instances"], DirectedEdge["rose-trees", "semigroupoids"], DirectedEdge["rose-trees", "semigroups"], DirectedEdge["rose-trees", "sets"], DirectedEdge["rose-trees", "witherable"], DirectedEdge["rose-trie", "base"], DirectedEdge["rose-trie", "containers"], DirectedEdge["rose-trie", "deepseq"], DirectedEdge["rose-trie", "minilens"], DirectedEdge["rose-trie", "mtl"], DirectedEdge["rose-trie", "transformers"], DirectedEdge["rosezipper", "base"], DirectedEdge["rosezipper", "containers"], DirectedEdge["roshask", "attoparsec"], DirectedEdge["roshask", "base"], DirectedEdge["roshask", "binary"], DirectedEdge["roshask", "BoundedChan"], DirectedEdge["roshask", "bytestring"], DirectedEdge["roshask", "Cabal"], DirectedEdge["roshask", "containers"], DirectedEdge["roshask", "data-default-generics"], DirectedEdge["roshask", "deepseq"], DirectedEdge["roshask", "directory"], DirectedEdge["roshask", "filemanip"], DirectedEdge["roshask", "filepath"], DirectedEdge["roshask", "haxr"], DirectedEdge["roshask", "mtl"], DirectedEdge["roshask", "network"], DirectedEdge["roshask", "parsec"], DirectedEdge["roshask", "process"], DirectedEdge["roshask", "roshask"], DirectedEdge["roshask", "SafeSemaphore"], DirectedEdge["roshask", "snap-core"], DirectedEdge["roshask", "snap-server"], DirectedEdge["roshask", "stm"], DirectedEdge["roshask", "storable-tuple"], DirectedEdge["roshask", "template-haskell"], DirectedEdge["roshask", "time"], DirectedEdge["roshask", "transformers"], DirectedEdge["roshask", "unix"], DirectedEdge["roshask", "uri"], DirectedEdge["roshask", "utf8-string"], DirectedEdge["roshask", "vector"], DirectedEdge["roshask", "vector-space"], DirectedEdge["roshask", "xml"], DirectedEdge["rosso", "base"], DirectedEdge["rosso", "containers"], DirectedEdge["rosso", "deepseq"], DirectedEdge["rot13", "base"], DirectedEdge["rot13", "bytestring"], DirectedEdge["rotating-log", "base"], DirectedEdge["rotating-log", "bytestring"], DirectedEdge["rotating-log", "directory"], DirectedEdge["rotating-log", "filepath"], DirectedEdge["rotating-log", "time"], DirectedEdge["roundRobin", "base"], DirectedEdge["rounding", "array"], DirectedEdge["rounding", "base"], DirectedEdge["rounding", "numeric-extras"], DirectedEdge["roundtrip", "base"], DirectedEdge["roundtrip", "containers"], DirectedEdge["roundtrip", "pretty"], DirectedEdge["roundtrip", "safe"], DirectedEdge["roundtrip", "template-haskell"], DirectedEdge["roundtrip", "text"], DirectedEdge["roundtrip", "xml-types"], DirectedEdge["roundtrip-aeson", "aeson"], DirectedEdge["roundtrip-aeson", "base"], DirectedEdge["roundtrip-aeson", "bytestring"], DirectedEdge["roundtrip-aeson", "containers"], DirectedEdge["roundtrip-aeson", "lens"], DirectedEdge["roundtrip-aeson", "lens-aeson"], DirectedEdge["roundtrip-aeson", "roundtrip"], DirectedEdge["roundtrip-aeson", "scientific"], DirectedEdge["roundtrip-aeson", "text"], DirectedEdge["roundtrip-aeson", "unordered-containers"], DirectedEdge["roundtrip-aeson", "vector"], DirectedEdge["roundtrip-string", "base"], DirectedEdge["roundtrip-string", "mtl"], DirectedEdge["roundtrip-string", "parsec"], DirectedEdge["roundtrip-string", "roundtrip"], DirectedEdge["roundtrip-xml", "base"], DirectedEdge["roundtrip-xml", "blaze-builder"], DirectedEdge["roundtrip-xml", "blaze-builder-enumerator"], DirectedEdge["roundtrip-xml", "bytestring"], DirectedEdge["roundtrip-xml", "containers"], DirectedEdge["roundtrip-xml", "enumerator"], DirectedEdge["roundtrip-xml", "filepath"], DirectedEdge["roundtrip-xml", "HTF"], DirectedEdge["roundtrip-xml", "mtl"], DirectedEdge["roundtrip-xml", "pretty"], DirectedEdge["roundtrip-xml", "reference"], DirectedEdge["roundtrip-xml", "roundtrip"], DirectedEdge["roundtrip-xml", "roundtrip-string"], DirectedEdge["roundtrip-xml", "roundtrip-xml"], DirectedEdge["roundtrip-xml", "safe"], DirectedEdge["roundtrip-xml", "text"], DirectedEdge["roundtrip-xml", "xml-enumerator"], DirectedEdge["roundtrip-xml", "xml-types"], DirectedEdge["route-generator", "attoparsec"], DirectedEdge["route-generator", "base"], DirectedEdge["route-generator", "network"], DirectedEdge["route-generator", "text"], DirectedEdge["route-generator", "yesod-routes"], DirectedEdge["route-planning", "base"], DirectedEdge["route-planning", "containers"], DirectedEdge["route-planning", "coordinate"], DirectedEdge["route-planning", "lens"], DirectedEdge["route-planning", "semigroupoids"], DirectedEdge["route-planning", "semigroups"], DirectedEdge["route-planning", "text"], DirectedEdge["route-planning", "xsd"], DirectedEdge["rowrecord", "base"], DirectedEdge["rowrecord", "containers"], DirectedEdge["rowrecord", "template-haskell"], DirectedEdge["rpc", "base"], DirectedEdge["rpc", "bytestring"], DirectedEdge["rpc", "cereal"], DirectedEdge["rpc", "containers"], DirectedEdge["rpc", "derive"], DirectedEdge["rpc", "network-fancy"], DirectedEdge["rpc", "template-haskell"], DirectedEdge["rpc", "th-lift"], DirectedEdge["rpc-framework", "base"], DirectedEdge["rpc-framework", "containers"], DirectedEdge["rpc-framework", "mtl"], DirectedEdge["rpc-framework", "network"], DirectedEdge["rpc-framework", "rpc-framework"], DirectedEdge["rpc-framework", "template-haskell"], DirectedEdge["rpc-framework", "transformers"], DirectedEdge["rpf", "appar"], DirectedEdge["rpf", "base"], DirectedEdge["rpf", "blaze-builder"], DirectedEdge["rpf", "bytestring"], DirectedEdge["rpf", "c10k"], DirectedEdge["rpf", "containers"], DirectedEdge["rpf", "dns"], DirectedEdge["rpf", "domain-auth"], DirectedEdge["rpf", "hslogger"], DirectedEdge["rpf", "iproute"], DirectedEdge["rpf", "parsec"], DirectedEdge["rpf", "unix"], DirectedEdge["rpm", "base"], DirectedEdge["rpm", "directory"], DirectedEdge["rpm", "filepath"], DirectedEdge["rpm", "HaXml"], DirectedEdge["rpm", "HUnit"], DirectedEdge["rpm", "process"], DirectedEdge["rpm", "QuickCheck"], DirectedEdge["rpm", "test-framework"], DirectedEdge["rpm", "test-framework-hunit"], DirectedEdge["rpm", "test-framework-quickcheck"], DirectedEdge["rsagl", "array"], DirectedEdge["rsagl", "arrows"], DirectedEdge["rsagl", "base"], DirectedEdge["rsagl", "containers"], DirectedEdge["rsagl", "data-memocombinators"], DirectedEdge["rsagl", "deepseq"], DirectedEdge["rsagl", "mtl"], DirectedEdge["rsagl", "old-time"], DirectedEdge["rsagl", "OpenGL"], DirectedEdge["rsagl", "OpenGLRaw"], DirectedEdge["rsagl", "parallel"], DirectedEdge["rsagl", "parsec"], DirectedEdge["rsagl", "random"], DirectedEdge["rsagl", "rsagl-frp"], DirectedEdge["rsagl", "rsagl-math"], DirectedEdge["rsagl", "stm"], DirectedEdge["rsagl", "Vec"], DirectedEdge["rsagl", "Vec-OpenGLRaw"], DirectedEdge["rsagl-frp", "array"], DirectedEdge["rsagl-frp", "arrows"], DirectedEdge["rsagl-frp", "base"], DirectedEdge["rsagl-frp", "containers"], DirectedEdge["rsagl-frp", "mtl"], DirectedEdge["rsagl-frp", "old-time"], DirectedEdge["rsagl-frp", "random"], DirectedEdge["rsagl-frp", "rsagl-math"], DirectedEdge["rsagl-frp", "stm"], DirectedEdge["rsagl-math", "array"], DirectedEdge["rsagl-math", "base"], DirectedEdge["rsagl-math", "containers"], DirectedEdge["rsagl-math", "deepseq"], DirectedEdge["rsagl-math", "OpenGL"], DirectedEdge["rsagl-math", "OpenGLRaw"], DirectedEdge["rsagl-math", "parallel"], DirectedEdge["rsagl-math", "parsec"], DirectedEdge["rsagl-math", "random"], DirectedEdge["rsagl-math", "Vec"], DirectedEdge["rsagl-math", "Vec-OpenGLRaw"], DirectedEdge["rspp", "base"], DirectedEdge["rss", "base"], DirectedEdge["rss", "HaXml"], DirectedEdge["rss", "network"], DirectedEdge["rss", "network-uri"], DirectedEdge["rss", "old-locale"], DirectedEdge["rss", "time"], DirectedEdge["rss-conduit", "base"], DirectedEdge["rss-conduit", "conduit"], DirectedEdge["rss-conduit", "conduit-parse"], DirectedEdge["rss-conduit", "containers"], DirectedEdge["rss-conduit", "exceptions"], DirectedEdge["rss-conduit", "foldl"], DirectedEdge["rss-conduit", "lens-simple"], DirectedEdge["rss-conduit", "mono-traversable"], DirectedEdge["rss-conduit", "parsers"], DirectedEdge["rss-conduit", "safe"], DirectedEdge["rss-conduit", "text"], DirectedEdge["rss-conduit", "time"], DirectedEdge["rss-conduit", "timerep"], DirectedEdge["rss-conduit", "uri-bytestring"], DirectedEdge["rss-conduit", "xml-conduit"], DirectedEdge["rss-conduit", "xml-conduit-parse"], DirectedEdge["rss-conduit", "xml-types"], DirectedEdge["rss2irc", "base"], DirectedEdge["rss2irc", "bytestring"], DirectedEdge["rss2irc", "cabal-file-th"], DirectedEdge["rss2irc", "cmdargs"], DirectedEdge["rss2irc", "containers"], DirectedEdge["rss2irc", "deepseq"], DirectedEdge["rss2irc", "feed"], DirectedEdge["rss2irc", "http-client"], DirectedEdge["rss2irc", "http-conduit"], DirectedEdge["rss2irc", "http-types"], DirectedEdge["rss2irc", "io-storage"], DirectedEdge["rss2irc", "irc"], DirectedEdge["rss2irc", "network"], DirectedEdge["rss2irc", "old-locale"], DirectedEdge["rss2irc", "parsec"], DirectedEdge["rss2irc", "regexpr"], DirectedEdge["rss2irc", "resourcet"], DirectedEdge["rss2irc", "safe"], DirectedEdge["rss2irc", "split"], DirectedEdge["rss2irc", "text"], DirectedEdge["rss2irc", "time"], DirectedEdge["rss2irc", "transformers"], DirectedEdge["rss2irc", "utf8-string"], DirectedEdge["rtcm", "array"], DirectedEdge["rtcm", "base"], DirectedEdge["rtcm", "basic-prelude"], DirectedEdge["rtcm", "binary"], DirectedEdge["rtcm", "binary-bits"], DirectedEdge["rtcm", "bytestring"], DirectedEdge["rtcm", "lens"], DirectedEdge["rtcm", "template-haskell"], DirectedEdge["rtld", "base"], DirectedEdge["rtlsdr", "base"], DirectedEdge["rtorrent-rpc", "attoparsec"], DirectedEdge["rtorrent-rpc", "base"], DirectedEdge["rtorrent-rpc", "blaze-builder"], DirectedEdge["rtorrent-rpc", "blaze-textual"], DirectedEdge["rtorrent-rpc", "bytestring"], DirectedEdge["rtorrent-rpc", "deepseq"], DirectedEdge["rtorrent-rpc", "haxr"], DirectedEdge["rtorrent-rpc", "mtl"], DirectedEdge["rtorrent-rpc", "network"], DirectedEdge["rtorrent-rpc", "split"], DirectedEdge["rtorrent-rpc", "utf8-string"], DirectedEdge["rtorrent-state", "base"], DirectedEdge["rtorrent-state", "bencoding"], DirectedEdge["rtorrent-state", "bytestring"], DirectedEdge["rtorrent-state", "containers"], DirectedEdge["rtorrent-state", "directory"], DirectedEdge["rtorrent-state", "filepath"], DirectedEdge["rtorrent-state", "lens"], DirectedEdge["rtorrent-state", "utf8-string"], DirectedEdge["rubberband", "base"], DirectedEdge["rubberband", "vector"], DirectedEdge["ruby-marshal", "base"], DirectedEdge["ruby-marshal", "bytestring"], DirectedEdge["ruby-marshal", "cereal"], DirectedEdge["ruby-marshal", "containers"], DirectedEdge["ruby-marshal", "mtl"], DirectedEdge["ruby-marshal", "string-conv"], DirectedEdge["ruby-marshal", "vector"], DirectedEdge["ruby-qq", "base"], DirectedEdge["ruby-qq", "bytestring"], DirectedEdge["ruby-qq", "haskell-src-exts"], DirectedEdge["ruby-qq", "haskell-src-meta"], DirectedEdge["ruby-qq", "pcre-light"], DirectedEdge["ruby-qq", "process"], DirectedEdge["ruby-qq", "template-haskell"], DirectedEdge["ruby-qq", "trifecta"], DirectedEdge["ruff", "array"], DirectedEdge["ruff", "base"], DirectedEdge["ruff", "mtl"], DirectedEdge["ruff", "parsec"], DirectedEdge["ruff", "safe"], DirectedEdge["ruff", "strict"], DirectedEdge["ruff", "Vec"], DirectedEdge["ruler", "base"], DirectedEdge["ruler", "containers"], DirectedEdge["ruler", "mtl"], DirectedEdge["ruler", "shuffle"], DirectedEdge["ruler", "uhc-util"], DirectedEdge["ruler", "uuagc"], DirectedEdge["ruler", "uuagc-cabal"], DirectedEdge["ruler", "uulib"], DirectedEdge["ruler-core", "array"], DirectedEdge["ruler-core", "base"], DirectedEdge["ruler-core", "containers"], DirectedEdge["ruler-core", "directory"], DirectedEdge["ruler-core", "fgl"], DirectedEdge["ruler-core", "filepath"], DirectedEdge["ruler-core", "mtl"], DirectedEdge["ruler-core", "uuagc"], DirectedEdge["ruler-core", "uulib"], DirectedEdge["rungekutta", "base"], DirectedEdge["runghc", "base"], DirectedEdge["runghc", "cmdargs"], DirectedEdge["runghc", "directory"], DirectedEdge["runghc", "filepath"], DirectedEdge["runghc", "old-time"], DirectedEdge["runghc", "process"], DirectedEdge["rvar", "base"], DirectedEdge["rvar", "MonadPrompt"], DirectedEdge["rvar", "mtl"], DirectedEdge["rvar", "random-source"], DirectedEdge["rvar", "transformers"], DirectedEdge["rwlock", "base"], DirectedEdge["rwlock", "monad-loops-stm"], DirectedEdge["rwlock", "stm"], DirectedEdge["rwlock", "syb"], DirectedEdge["rws", "base"], DirectedEdge["rws", "binary"], DirectedEdge["rws", "bytestring"], DirectedEdge["rws", "parsec"], DirectedEdge["s-cargot", "base"], DirectedEdge["s-cargot", "containers"], DirectedEdge["s-cargot", "parsec"], DirectedEdge["s-cargot", "s-cargot"], DirectedEdge["s-cargot", "text"], DirectedEdge["s3-signer", "base"], DirectedEdge["s3-signer", "base64-bytestring"], DirectedEdge["s3-signer", "cryptohash"], DirectedEdge["s3-signer", "http-types"], DirectedEdge["s3-signer", "time"], DirectedEdge["s3-signer", "utf8-string"], DirectedEdge["safe", "base"], DirectedEdge["safe-access", "base"], DirectedEdge["safe-access", "mtl"], DirectedEdge["safe-access", "transformers"], DirectedEdge["safe-failure", "base"], DirectedEdge["safe-failure", "failure"], DirectedEdge["safe-failure-cme", "base"], DirectedEdge["safe-failure-cme", "control-monad-exception"], DirectedEdge["safe-failure-cme", "safe-failure"], DirectedEdge["safe-freeze", "base"], DirectedEdge["safe-freeze", "indexed"], DirectedEdge["safe-freeze", "mtl"], DirectedEdge["safe-freeze", "vector"], DirectedEdge["safe-globals", "base"], DirectedEdge["safe-globals", "stm"], DirectedEdge["safe-globals", "template-haskell"], DirectedEdge["safe-lazy-io", "base"], DirectedEdge["safe-lazy-io", "extensible-exceptions"], DirectedEdge["safe-lazy-io", "parallel"], DirectedEdge["safe-lazy-io", "strict-io"], DirectedEdge["safe-length", "base"], DirectedEdge["safe-plugins", "base"], DirectedEdge["safe-plugins", "directory"], DirectedEdge["safe-plugins", "filepath"], DirectedEdge["safe-plugins", "haskell-src-exts"], DirectedEdge["safe-plugins", "plugins"], DirectedEdge["safe-plugins", "Unixutils"], DirectedEdge["safe-printf", "base"], DirectedEdge["safe-printf", "haskell-src-meta"], DirectedEdge["safe-printf", "template-haskell"], DirectedEdge["safe-printf", "th-lift"], DirectedEdge["safecopy", "array"], DirectedEdge["safecopy", "base"], DirectedEdge["safecopy", "bytestring"], DirectedEdge["safecopy", "cereal"], DirectedEdge["safecopy", "containers"], DirectedEdge["safecopy", "old-time"], DirectedEdge["safecopy", "template-haskell"], DirectedEdge["safecopy", "text"], DirectedEdge["safecopy", "time"], DirectedEdge["safecopy", "vector"], DirectedEdge["safeint", "base"], DirectedEdge["safeint", "ghc-prim"], DirectedEdge["safer-file-handles", "base"], DirectedEdge["safer-file-handles", "base-unicode-symbols"], DirectedEdge["safer-file-handles", "explicit-iomodes"], DirectedEdge["safer-file-handles", "pathtype"], DirectedEdge["safer-file-handles", "regional-pointers"], DirectedEdge["safer-file-handles", "regions"], DirectedEdge["safer-file-handles", "transformers"], DirectedEdge["safer-file-handles-bytestring", "base"], DirectedEdge["safer-file-handles-bytestring", "bytestring"], DirectedEdge["safer-file-handles-bytestring", "explicit-iomodes-bytestring"], DirectedEdge["safer-file-handles-bytestring", "regions"], DirectedEdge["safer-file-handles-bytestring", "safer-file-handles"], DirectedEdge["safer-file-handles-bytestring", "transformers"], DirectedEdge["safer-file-handles-text", "explicit-iomodes-text"], DirectedEdge["safer-file-handles-text", "regions"], DirectedEdge["safer-file-handles-text", "safer-file-handles"], DirectedEdge["safer-file-handles-text", "text"], DirectedEdge["safer-file-handles-text", "transformers"], DirectedEdge["saferoute", "base"], DirectedEdge["saferoute", "blaze-html"], DirectedEdge["saferoute", "containers"], DirectedEdge["saferoute", "text"], DirectedEdge["sai-shape-syb", "base"], DirectedEdge["sai-shape-syb", "containers"], DirectedEdge["sai-shape-syb", "ghc"], DirectedEdge["sai-shape-syb", "ghc-syb-utils"], DirectedEdge["sai-shape-syb", "syb"], DirectedEdge["saltine", "base"], DirectedEdge["saltine", "bytestring"], DirectedEdge["saltine", "profunctors"], DirectedEdge["saltine-quickcheck", "base"], DirectedEdge["saltine-quickcheck", "bytestring"], DirectedEdge["saltine-quickcheck", "bytestring-arbitrary"], DirectedEdge["saltine-quickcheck", "hex"], DirectedEdge["saltine-quickcheck", "QuickCheck"], DirectedEdge["saltine-quickcheck", "saltine"], DirectedEdge["salvia", "base"], DirectedEdge["salvia", "bytestring"], DirectedEdge["salvia", "containers"], DirectedEdge["salvia", "directory"], DirectedEdge["salvia", "fclabels"], DirectedEdge["salvia", "MaybeT-transformers"], DirectedEdge["salvia", "monads-fd"], DirectedEdge["salvia", "network"], DirectedEdge["salvia", "old-locale"], DirectedEdge["salvia", "process"], DirectedEdge["salvia", "random"], DirectedEdge["salvia", "safe"], DirectedEdge["salvia", "salvia-protocol"], DirectedEdge["salvia", "split"], DirectedEdge["salvia", "stm"], DirectedEdge["salvia", "text"], DirectedEdge["salvia", "threadmanager"], DirectedEdge["salvia", "time"], DirectedEdge["salvia", "transformers"], DirectedEdge["salvia", "unix"], DirectedEdge["salvia", "utf8-string"], DirectedEdge["salvia-demo", "base"], DirectedEdge["salvia-demo", "c10k"], DirectedEdge["salvia-demo", "fclabels"], DirectedEdge["salvia-demo", "filestore"], DirectedEdge["salvia-demo", "monads-fd"], DirectedEdge["salvia-demo", "network"], DirectedEdge["salvia-demo", "salvia"], DirectedEdge["salvia-demo", "salvia-extras"], DirectedEdge["salvia-demo", "salvia-protocol"], DirectedEdge["salvia-demo", "salvia-sessions"], DirectedEdge["salvia-demo", "salvia-websocket"], DirectedEdge["salvia-demo", "stm"], DirectedEdge["salvia-demo", "threadmanager"], DirectedEdge["salvia-demo", "transformers"], DirectedEdge["salvia-extras", "base"], DirectedEdge["salvia-extras", "bytestring"], DirectedEdge["salvia-extras", "c10k"], DirectedEdge["salvia-extras", "clevercss"], DirectedEdge["salvia-extras", "fclabels"], DirectedEdge["salvia-extras", "filestore"], DirectedEdge["salvia-extras", "hscolour"], DirectedEdge["salvia-extras", "HStringTemplate"], DirectedEdge["salvia-extras", "monads-fd"], DirectedEdge["salvia-extras", "network"], DirectedEdge["salvia-extras", "old-locale"], DirectedEdge["salvia-extras", "salvia"], DirectedEdge["salvia-extras", "salvia-protocol"], DirectedEdge["salvia-extras", "sendfile"], DirectedEdge["salvia-extras", "split"], DirectedEdge["salvia-extras", "stm"], DirectedEdge["salvia-extras", "text"], DirectedEdge["salvia-extras", "threadmanager"], DirectedEdge["salvia-extras", "time"], DirectedEdge["salvia-extras", "transformers"], DirectedEdge["salvia-extras", "utf8-string"], DirectedEdge["salvia-protocol", "base"], DirectedEdge["salvia-protocol", "bimap"], DirectedEdge["salvia-protocol", "bytestring"], DirectedEdge["salvia-protocol", "containers"], DirectedEdge["salvia-protocol", "fclabels"], DirectedEdge["salvia-protocol", "parsec"], DirectedEdge["salvia-protocol", "safe"], DirectedEdge["salvia-protocol", "split"], DirectedEdge["salvia-protocol", "utf8-string"], DirectedEdge["salvia-sessions", "base"], DirectedEdge["salvia-sessions", "containers"], DirectedEdge["salvia-sessions", "fclabels"], DirectedEdge["salvia-sessions", "MaybeT-transformers"], DirectedEdge["salvia-sessions", "monads-fd"], DirectedEdge["salvia-sessions", "random"], DirectedEdge["salvia-sessions", "safe"], DirectedEdge["salvia-sessions", "salvia"], DirectedEdge["salvia-sessions", "salvia-protocol"], DirectedEdge["salvia-sessions", "stm"], DirectedEdge["salvia-sessions", "time"], DirectedEdge["salvia-sessions", "utf8-string"], DirectedEdge["salvia-websocket", "base"], DirectedEdge["salvia-websocket", "bytestring"], DirectedEdge["salvia-websocket", "fclabels"], DirectedEdge["salvia-websocket", "monads-fd"], DirectedEdge["salvia-websocket", "salvia"], DirectedEdge["salvia-websocket", "salvia-protocol"], DirectedEdge["salvia-websocket", "stm"], DirectedEdge["salvia-websocket", "utf8-string"], DirectedEdge["sample-frame", "base"], DirectedEdge["sample-frame", "QuickCheck"], DirectedEdge["sample-frame", "special-functors"], DirectedEdge["sample-frame", "storable-record"], DirectedEdge["sample-frame", "storable-tuple"], DirectedEdge["sample-frame", "storablevector"], DirectedEdge["sample-frame-np", "base"], DirectedEdge["sample-frame-np", "numeric-prelude"], DirectedEdge["sample-frame-np", "sample-frame"], DirectedEdge["sample-frame-np", "special-functors"], DirectedEdge["sampling", "base"], DirectedEdge["sampling", "foldl"], DirectedEdge["sampling", "mwc-random"], DirectedEdge["sampling", "primitive"], DirectedEdge["sampling", "sampling"], DirectedEdge["sampling", "vector"], DirectedEdge["samtools", "base"], DirectedEdge["samtools", "bytestring"], DirectedEdge["samtools", "filepath"], DirectedEdge["samtools", "process"], DirectedEdge["samtools", "seqloc"], DirectedEdge["samtools", "vector"], DirectedEdge["samtools-conduit", "base"], DirectedEdge["samtools-conduit", "bytestring"], DirectedEdge["samtools-conduit", "conduit"], DirectedEdge["samtools-conduit", "filepath"], DirectedEdge["samtools-conduit", "resourcet"], DirectedEdge["samtools-conduit", "samtools"], DirectedEdge["samtools-conduit", "transformers"], DirectedEdge["samtools-enumerator", "base"], DirectedEdge["samtools-enumerator", "bytestring"], DirectedEdge["samtools-enumerator", "enumerator"], DirectedEdge["samtools-enumerator", "samtools"], DirectedEdge["samtools-enumerator", "transformers"], DirectedEdge["samtools-iteratee", "base"], DirectedEdge["samtools-iteratee", "bytestring"], DirectedEdge["samtools-iteratee", "iteratee"], DirectedEdge["samtools-iteratee", "monads-tf"], DirectedEdge["samtools-iteratee", "samtools"], DirectedEdge["samtools-iteratee", "transformers"], DirectedEdge["sandi", "base"], DirectedEdge["sandi", "bytestring"], DirectedEdge["sandi", "conduit"], DirectedEdge["sandi", "exceptions"], DirectedEdge["sandlib", "base"], DirectedEdge["sandman", "base"], DirectedEdge["sandman", "Cabal"], DirectedEdge["sandman", "containers"], DirectedEdge["sandman", "directory"], DirectedEdge["sandman", "filepath"], DirectedEdge["sandman", "optparse-applicative"], DirectedEdge["sandman", "process"], DirectedEdge["sandman", "text"], DirectedEdge["sandman", "unix-compat"], DirectedEdge["sarasvati", "base"], DirectedEdge["sarasvati", "deepseq"], DirectedEdge["sarasvati", "portaudio"], DirectedEdge["sarsi", "async"], DirectedEdge["sarsi", "attoparsec"], DirectedEdge["sarsi", "base"], DirectedEdge["sarsi", "binary"], DirectedEdge["sarsi", "bytestring"], DirectedEdge["sarsi", "Cabal"], DirectedEdge["sarsi", "containers"], DirectedEdge["sarsi", "cryptonite"], DirectedEdge["sarsi", "directory"], DirectedEdge["sarsi", "filepath"], DirectedEdge["sarsi", "fsnotify"], DirectedEdge["sarsi", "machines"], DirectedEdge["sarsi", "machines-binary"], DirectedEdge["sarsi", "machines-io"], DirectedEdge["sarsi", "machines-process"], DirectedEdge["sarsi", "msgpack"], DirectedEdge["sarsi", "network"], DirectedEdge["sarsi", "process"], DirectedEdge["sarsi", "sarsi"], DirectedEdge["sarsi", "stm"], DirectedEdge["sarsi", "text"], DirectedEdge["sarsi", "unordered-containers"], DirectedEdge["sarsi", "vector"], DirectedEdge["sasl", "base"], DirectedEdge["sasl", "base64-bytestring"], DirectedEdge["sasl", "bytestring"], DirectedEdge["sasl", "cryptohash"], DirectedEdge["sasl", "monads-tf"], DirectedEdge["sasl", "papillon"], DirectedEdge["sasl", "simple-pipe"], DirectedEdge["sat", "base"], DirectedEdge["sat-micro-hs", "base"], DirectedEdge["sat-micro-hs", "containers"], DirectedEdge["sat-micro-hs", "mtl"], DirectedEdge["sat-micro-hs", "parse-dimacs"], DirectedEdge["sat-micro-hs", "pretty"], DirectedEdge["satchmo", "array"], DirectedEdge["satchmo", "async"], DirectedEdge["satchmo", "base"], DirectedEdge["satchmo", "bytestring"], DirectedEdge["satchmo", "containers"], DirectedEdge["satchmo", "deepseq"], DirectedEdge["satchmo", "directory"], DirectedEdge["satchmo", "hashable"], DirectedEdge["satchmo", "lens"], DirectedEdge["satchmo", "memoize"], DirectedEdge["satchmo", "minisat"], DirectedEdge["satchmo", "mtl"], DirectedEdge["satchmo", "process"], DirectedEdge["satchmo", "transformers"], DirectedEdge["satchmo-backends", "array"], DirectedEdge["satchmo-backends", "base"], DirectedEdge["satchmo-backends", "bytestring"], DirectedEdge["satchmo-backends", "containers"], DirectedEdge["satchmo-backends", "process"], DirectedEdge["satchmo-backends", "satchmo"], DirectedEdge["satchmo-backends", "timeit"], DirectedEdge["satchmo-examples", "array"], DirectedEdge["satchmo-examples", "base"], DirectedEdge["satchmo-examples", "containers"], DirectedEdge["satchmo-examples", "process"], DirectedEdge["satchmo-examples", "satchmo"], DirectedEdge["satchmo-examples", "satchmo-backends"], DirectedEdge["satchmo-funsat", "array"], DirectedEdge["satchmo-funsat", "base"], DirectedEdge["satchmo-funsat", "containers"], DirectedEdge["satchmo-funsat", "funsat"], DirectedEdge["satchmo-funsat", "parse-dimacs"], DirectedEdge["satchmo-funsat", "satchmo"], DirectedEdge["satchmo-minisat", "base"], DirectedEdge["satchmo-minisat", "containers"], DirectedEdge["satchmo-minisat", "process"], DirectedEdge["satchmo-minisat", "satchmo"], DirectedEdge["satchmo-toysat", "array"], DirectedEdge["satchmo-toysat", "base"], DirectedEdge["satchmo-toysat", "containers"], DirectedEdge["satchmo-toysat", "satchmo"], DirectedEdge["satchmo-toysat", "toysolver"], DirectedEdge["sbp", "aeson"], DirectedEdge["sbp", "array"], DirectedEdge["sbp", "base"], DirectedEdge["sbp", "base64-bytestring"], DirectedEdge["sbp", "basic-prelude"], DirectedEdge["sbp", "binary"], DirectedEdge["sbp", "binary-conduit"], DirectedEdge["sbp", "bytestring"], DirectedEdge["sbp", "conduit"], DirectedEdge["sbp", "conduit-combinators"], DirectedEdge["sbp", "conduit-extra"], DirectedEdge["sbp", "lens"], DirectedEdge["sbp", "monad-loops"], DirectedEdge["sbp", "resourcet"], DirectedEdge["sbp", "sbp"], DirectedEdge["sbp", "template-haskell"], DirectedEdge["sbp", "text"], DirectedEdge["sbp", "unordered-containers"], DirectedEdge["sbp", "yaml"], DirectedEdge["sbp2udp", "base"], DirectedEdge["sbp2udp", "basic-prelude"], DirectedEdge["sbp2udp", "binary"], DirectedEdge["sbp2udp", "binary-conduit"], DirectedEdge["sbp2udp", "bytestring"], DirectedEdge["sbp2udp", "conduit"], DirectedEdge["sbp2udp", "conduit-extra"], DirectedEdge["sbp2udp", "network"], DirectedEdge["sbp2udp", "optparse-generic"], DirectedEdge["sbp2udp", "protolude"], DirectedEdge["sbp2udp", "resourcet"], DirectedEdge["sbp2udp", "sbp"], DirectedEdge["sbp2udp", "streaming-commons"], DirectedEdge["sbv", "array"], DirectedEdge["sbv", "async"], DirectedEdge["sbv", "base"], DirectedEdge["sbv", "base-compat"], DirectedEdge["sbv", "containers"], DirectedEdge["sbv", "crackNum"], DirectedEdge["sbv", "deepseq"], DirectedEdge["sbv", "directory"], DirectedEdge["sbv", "filepath"], DirectedEdge["sbv", "HUnit"], DirectedEdge["sbv", "mtl"], DirectedEdge["sbv", "old-time"], DirectedEdge["sbv", "pretty"], DirectedEdge["sbv", "process"], DirectedEdge["sbv", "QuickCheck"], DirectedEdge["sbv", "random"], DirectedEdge["sbv", "sbv"], DirectedEdge["sbv", "syb"], DirectedEdge["sbvPlugin", "base"], DirectedEdge["sbvPlugin", "containers"], DirectedEdge["sbvPlugin", "ghc"], DirectedEdge["sbvPlugin", "ghc-prim"], DirectedEdge["sbvPlugin", "mtl"], DirectedEdge["sbvPlugin", "sbv"], DirectedEdge["sbvPlugin", "template-haskell"], DirectedEdge["sc3-rdu", "base"], DirectedEdge["sc3-rdu", "hsc3-db"], DirectedEdge["scalable-server", "attoparsec"], DirectedEdge["scalable-server", "attoparsec-enumerator"], DirectedEdge["scalable-server", "base"], DirectedEdge["scalable-server", "blaze-builder"], DirectedEdge["scalable-server", "BoundedChan"], DirectedEdge["scalable-server", "bytestring"], DirectedEdge["scalable-server", "enumerator"], DirectedEdge["scalable-server", "mtl"], DirectedEdge["scalable-server", "network"], DirectedEdge["scalable-server", "network-enumerator"], DirectedEdge["scaleimage", "base"], DirectedEdge["scaleimage", "filepath"], DirectedEdge["scaleimage", "gd"], DirectedEdge["scalp-webhooks", "aeson"], DirectedEdge["scalp-webhooks", "async"], DirectedEdge["scalp-webhooks", "base"], DirectedEdge["scalp-webhooks", "bytestring"], DirectedEdge["scalp-webhooks", "hastache"], DirectedEdge["scalp-webhooks", "lens"], DirectedEdge["scalp-webhooks", "lens-aeson"], DirectedEdge["scalp-webhooks", "rainbow"], DirectedEdge["scalp-webhooks", "random"], DirectedEdge["scalp-webhooks", "scalp-webhooks"], DirectedEdge["scalp-webhooks", "shelly"], DirectedEdge["scalp-webhooks", "Spock"], DirectedEdge["scalp-webhooks", "stm"], DirectedEdge["scalp-webhooks", "text"], DirectedEdge["scalp-webhooks", "transformers"], DirectedEdge["scalp-webhooks", "wreq"], DirectedEdge["scalpel", "base"], DirectedEdge["scalpel", "bytestring"], DirectedEdge["scalpel", "containers"], DirectedEdge["scalpel", "curl"], DirectedEdge["scalpel", "data-default"], DirectedEdge["scalpel", "regex-base"], DirectedEdge["scalpel", "regex-tdfa"], DirectedEdge["scalpel", "tagsoup"], DirectedEdge["scalpel", "text"], DirectedEdge["scan", "base"], DirectedEdge["scan", "parsec"], DirectedEdge["scan-vector-machine", "accelerate"], DirectedEdge["scan-vector-machine", "array"], DirectedEdge["scan-vector-machine", "base"], DirectedEdge["scan-vector-machine", "dph-base"], DirectedEdge["scan-vector-machine", "HUnit"], DirectedEdge["scanner", "base"], DirectedEdge["scanner", "bytestring"], DirectedEdge["scanner-attoparsec", "attoparsec"], DirectedEdge["scanner-attoparsec", "base"], DirectedEdge["scanner-attoparsec", "scanner"], DirectedEdge["scat", "ansi-terminal"], DirectedEdge["scat", "base"], DirectedEdge["scat", "bytestring"], DirectedEdge["scat", "mtl"], DirectedEdge["scat", "optparse-applicative"], DirectedEdge["scat", "scrypt"], DirectedEdge["scat", "vector"], DirectedEdge["scc", "base"], DirectedEdge["scc", "bytestring"], DirectedEdge["scc", "containers"], DirectedEdge["scc", "haskeline"], DirectedEdge["scc", "incremental-parser"], DirectedEdge["scc", "monad-coroutine"], DirectedEdge["scc", "monad-parallel"], DirectedEdge["scc", "monoid-subclasses"], DirectedEdge["scc", "parsec"], DirectedEdge["scc", "process"], DirectedEdge["scc", "text"], DirectedEdge["scc", "transformers"], DirectedEdge["scc", "transformers-compat"], DirectedEdge["scenegraph", "array"], DirectedEdge["scenegraph", "base"], DirectedEdge["scenegraph", "containers"], DirectedEdge["scenegraph", "fgl"], DirectedEdge["scenegraph", "GLUT"], DirectedEdge["scenegraph", "hmatrix"], DirectedEdge["scenegraph", "mtl"], DirectedEdge["scenegraph", "old-time"], DirectedEdge["scenegraph", "OpenGL"], DirectedEdge["scenegraph", "process"], DirectedEdge["scgi", "wai"], DirectedEdge["scgi", "base"], DirectedEdge["scgi", "bytestring"], DirectedEdge["scgi", "cgi"], DirectedEdge["scgi", "extensible-exceptions"], DirectedEdge["scgi", "network"], DirectedEdge["schedevr", "base"], DirectedEdge["schedevr", "directory"], DirectedEdge["schedevr", "filepath"], DirectedEdge["schedevr", "old-locale"], DirectedEdge["schedevr", "time"], DirectedEdge["schedevr", "xturtle"], DirectedEdge["schedule-planner", "aeson"], DirectedEdge["schedule-planner", "base"], DirectedEdge["schedule-planner", "bytestring"], DirectedEdge["schedule-planner", "composition"], DirectedEdge["schedule-planner", "containers"], DirectedEdge["schedule-planner", "HTTP"], DirectedEdge["schedule-planner", "http-types"], DirectedEdge["schedule-planner", "mtl"], DirectedEdge["schedule-planner", "options"], DirectedEdge["schedule-planner", "text"], DirectedEdge["schedule-planner", "text-icu"], DirectedEdge["schedule-planner", "transformers"], DirectedEdge["schedule-planner", "wai"], DirectedEdge["schedule-planner", "warp"], DirectedEdge["schedyield", "base"], DirectedEdge["scholdoc", "aeson"], DirectedEdge["scholdoc", "base"], DirectedEdge["scholdoc", "base64-bytestring"], DirectedEdge["scholdoc", "binary"], DirectedEdge["scholdoc", "blaze-html"], DirectedEdge["scholdoc", "blaze-markup"], DirectedEdge["scholdoc", "bytestring"], DirectedEdge["scholdoc", "containers"], DirectedEdge["scholdoc", "data-default"], DirectedEdge["scholdoc", "directory"], DirectedEdge["scholdoc", "extensible-exceptions"], DirectedEdge["scholdoc", "filepath"], DirectedEdge["scholdoc", "highlighting-kate"], DirectedEdge["scholdoc", "hslua"], DirectedEdge["scholdoc", "HTTP"], DirectedEdge["scholdoc", "http-client"], DirectedEdge["scholdoc", "http-client-tls"], DirectedEdge["scholdoc", "http-types"], DirectedEdge["scholdoc", "JuicyPixels"], DirectedEdge["scholdoc", "mtl"], DirectedEdge["scholdoc", "network"], DirectedEdge["scholdoc", "network-uri"], DirectedEdge["scholdoc", "old-locale"], DirectedEdge["scholdoc", "old-time"], DirectedEdge["scholdoc", "parsec"], DirectedEdge["scholdoc", "process"], DirectedEdge["scholdoc", "random"], DirectedEdge["scholdoc", "scholdoc"], DirectedEdge["scholdoc", "scholdoc-texmath"], DirectedEdge["scholdoc", "scholdoc-types"], DirectedEdge["scholdoc", "scientific"], DirectedEdge["scholdoc", "SHA"], DirectedEdge["scholdoc", "syb"], DirectedEdge["scholdoc", "tagsoup"], DirectedEdge["scholdoc", "temporary"], DirectedEdge["scholdoc", "text"], DirectedEdge["scholdoc", "time"], DirectedEdge["scholdoc", "unordered-containers"], DirectedEdge["scholdoc", "vector"], DirectedEdge["scholdoc", "wai"], DirectedEdge["scholdoc", "wai-extra"], DirectedEdge["scholdoc", "xml"], DirectedEdge["scholdoc", "yaml"], DirectedEdge["scholdoc", "zip-archive"], DirectedEdge["scholdoc", "zlib"], DirectedEdge["scholdoc-citeproc", "aeson"], DirectedEdge["scholdoc-citeproc", "aeson-pretty"], DirectedEdge["scholdoc-citeproc", "attoparsec"], DirectedEdge["scholdoc-citeproc", "base"], DirectedEdge["scholdoc-citeproc", "bytestring"], DirectedEdge["scholdoc-citeproc", "containers"], DirectedEdge["scholdoc-citeproc", "data-default"], DirectedEdge["scholdoc-citeproc", "directory"], DirectedEdge["scholdoc-citeproc", "filepath"], DirectedEdge["scholdoc-citeproc", "ghc-prim"], DirectedEdge["scholdoc-citeproc", "hs-bibutils"], DirectedEdge["scholdoc-citeproc", "mtl"], DirectedEdge["scholdoc-citeproc", "old-locale"], DirectedEdge["scholdoc-citeproc", "parsec"], DirectedEdge["scholdoc-citeproc", "process"], DirectedEdge["scholdoc-citeproc", "scholdoc"], DirectedEdge["scholdoc-citeproc", "scholdoc-citeproc"], DirectedEdge["scholdoc-citeproc", "scholdoc-types"], DirectedEdge["scholdoc-citeproc", "split"], DirectedEdge["scholdoc-citeproc", "syb"], DirectedEdge["scholdoc-citeproc", "tagsoup"], DirectedEdge["scholdoc-citeproc", "temporary"], DirectedEdge["scholdoc-citeproc", "text"], DirectedEdge["scholdoc-citeproc", "text-icu"], DirectedEdge["scholdoc-citeproc", "time"], DirectedEdge["scholdoc-citeproc", "vector"], DirectedEdge["scholdoc-citeproc", "xml-conduit"], DirectedEdge["scholdoc-citeproc", "yaml"], DirectedEdge["scholdoc-texmath", "aeson"], DirectedEdge["scholdoc-texmath", "base"], DirectedEdge["scholdoc-texmath", "bytestring"], DirectedEdge["scholdoc-texmath", "containers"], DirectedEdge["scholdoc-texmath", "mtl"], DirectedEdge["scholdoc-texmath", "network"], DirectedEdge["scholdoc-texmath", "network-uri"], DirectedEdge["scholdoc-texmath", "parsec"], DirectedEdge["scholdoc-texmath", "scholdoc-texmath"], DirectedEdge["scholdoc-texmath", "scholdoc-types"], DirectedEdge["scholdoc-texmath", "split"], DirectedEdge["scholdoc-texmath", "syb"], DirectedEdge["scholdoc-texmath", "text"], DirectedEdge["scholdoc-texmath", "xml"], DirectedEdge["scholdoc-types", "aeson"], DirectedEdge["scholdoc-types", "base"], DirectedEdge["scholdoc-types", "bytestring"], DirectedEdge["scholdoc-types", "containers"], DirectedEdge["scholdoc-types", "deepseq-generics"], DirectedEdge["scholdoc-types", "ghc-prim"], DirectedEdge["scholdoc-types", "syb"], DirectedEdge["schonfinkeling", "base"], DirectedEdge["sci-ratio", "base"], DirectedEdge["sci-ratio", "hashable"], DirectedEdge["science-constants", "base"], DirectedEdge["science-constants-dimensional", "base"], DirectedEdge["science-constants-dimensional", "dimensional"], DirectedEdge["science-constants-dimensional", "numtype"], DirectedEdge["science-constants-dimensional", "science-constants"], DirectedEdge["scientific", "base"], DirectedEdge["scientific", "binary"], DirectedEdge["scientific", "bytestring"], DirectedEdge["scientific", "containers"], DirectedEdge["scientific", "deepseq"], DirectedEdge["scientific", "ghc-prim"], DirectedEdge["scientific", "hashable"], DirectedEdge["scientific", "integer-gmp"], DirectedEdge["scientific", "integer-simple"], DirectedEdge["scientific", "text"], DirectedEdge["scientific", "vector"], DirectedEdge["scion", "base"], DirectedEdge["scion", "bytestring"], DirectedEdge["scion", "Cabal"], DirectedEdge["scion", "containers"], DirectedEdge["scion", "directory"], DirectedEdge["scion", "filepath"], DirectedEdge["scion", "ghc"], DirectedEdge["scion", "ghc-paths"], DirectedEdge["scion", "ghc-syb"], DirectedEdge["scion", "hslogger"], DirectedEdge["scion", "json"], DirectedEdge["scion", "multiset"], DirectedEdge["scion", "network"], DirectedEdge["scion", "network-bytestring"], DirectedEdge["scion", "QuickCheck"], DirectedEdge["scion", "time"], DirectedEdge["scion", "uniplate"], DirectedEdge["scion", "utf8-string"], DirectedEdge["scion-browser", "aeson"], DirectedEdge["scion-browser", "attoparsec"], DirectedEdge["scion-browser", "base"], DirectedEdge["scion-browser", "bytestring"], DirectedEdge["scion-browser", "Cabal"], DirectedEdge["scion-browser", "conduit"], DirectedEdge["scion-browser", "containers"], DirectedEdge["scion-browser", "deepseq"], DirectedEdge["scion-browser", "derive"], DirectedEdge["scion-browser", "directory"], DirectedEdge["scion-browser", "filepath"], DirectedEdge["scion-browser", "ghc"], DirectedEdge["scion-browser", "ghc-paths"], DirectedEdge["scion-browser", "ghc-pkg-lib"], DirectedEdge["scion-browser", "haskeline"], DirectedEdge["scion-browser", "haskell-src-exts"], DirectedEdge["scion-browser", "HTTP"], DirectedEdge["scion-browser", "http-conduit"], DirectedEdge["scion-browser", "monad-logger"], DirectedEdge["scion-browser", "mtl"], DirectedEdge["scion-browser", "parallel-io"], DirectedEdge["scion-browser", "parsec"], DirectedEdge["scion-browser", "persistent"], DirectedEdge["scion-browser", "persistent-sqlite"], DirectedEdge["scion-browser", "persistent-template"], DirectedEdge["scion-browser", "process"], DirectedEdge["scion-browser", "resourcet"], DirectedEdge["scion-browser", "tar"], DirectedEdge["scion-browser", "text"], DirectedEdge["scion-browser", "transformers"], DirectedEdge["scion-browser", "unix"], DirectedEdge["scion-browser", "unordered-containers"], DirectedEdge["scion-browser", "utf8-string"], DirectedEdge["scion-browser", "vector"], DirectedEdge["scion-browser", "zlib"], DirectedEdge["scons2dot", "base"], DirectedEdge["scons2dot", "bytestring"], DirectedEdge["scons2dot", "containers"], DirectedEdge["scons2dot", "process"], DirectedEdge["scope", "base"], DirectedEdge["scope", "bytestring"], DirectedEdge["scope", "containers"], DirectedEdge["scope", "iteratee"], DirectedEdge["scope", "MonadCatchIO-transformers"], DirectedEdge["scope", "mtl"], DirectedEdge["scope", "mwc-random"], DirectedEdge["scope", "time"], DirectedEdge["scope", "unix"], DirectedEdge["scope", "zoom-cache"], DirectedEdge["scope-cairo", "base"], DirectedEdge["scope-cairo", "cairo"], DirectedEdge["scope-cairo", "gtk"], DirectedEdge["scope-cairo", "MonadCatchIO-transformers"], DirectedEdge["scope-cairo", "mtl"], DirectedEdge["scope-cairo", "old-locale"], DirectedEdge["scope-cairo", "scope"], DirectedEdge["scope-cairo", "time"], DirectedEdge["scope-cairo", "zoom-cache"], DirectedEdge["scottish", "base"], DirectedEdge["scottish", "data-default"], DirectedEdge["scottish", "enclosed-exceptions"], DirectedEdge["scottish", "http-types"], DirectedEdge["scottish", "lens"], DirectedEdge["scottish", "mtl"], DirectedEdge["scottish", "persistent"], DirectedEdge["scottish", "resource-pool"], DirectedEdge["scottish", "scotty"], DirectedEdge["scottish", "stm"], DirectedEdge["scottish", "text"], DirectedEdge["scottish", "transformers"], DirectedEdge["scottish", "wai"], DirectedEdge["scottish", "warp"], DirectedEdge["scotty", "aeson"], DirectedEdge["scotty", "base"], DirectedEdge["scotty", "blaze-builder"], DirectedEdge["scotty", "bytestring"], DirectedEdge["scotty", "case-insensitive"], DirectedEdge["scotty", "data-default-class"], DirectedEdge["scotty", "fail"], DirectedEdge["scotty", "http-types"], DirectedEdge["scotty", "monad-control"], DirectedEdge["scotty", "mtl"], DirectedEdge["scotty", "nats"], DirectedEdge["scotty", "network"], DirectedEdge["scotty", "regex-compat"], DirectedEdge["scotty", "text"], DirectedEdge["scotty", "transformers"], DirectedEdge["scotty", "transformers-base"], DirectedEdge["scotty", "transformers-compat"], DirectedEdge["scotty", "wai"], DirectedEdge["scotty", "wai-extra"], DirectedEdge["scotty", "warp"], DirectedEdge["scotty-binding-play", "base"], DirectedEdge["scotty-binding-play", "bytestring"], DirectedEdge["scotty-binding-play", "mtl"], DirectedEdge["scotty-binding-play", "scotty"], DirectedEdge["scotty-binding-play", "template-haskell"], DirectedEdge["scotty-binding-play", "text"], DirectedEdge["scotty-blaze", "base"], DirectedEdge["scotty-blaze", "blaze-builder"], DirectedEdge["scotty-blaze", "blaze-html"], DirectedEdge["scotty-blaze", "mtl"], DirectedEdge["scotty-blaze", "scotty"], DirectedEdge["scotty-blaze", "wai"], DirectedEdge["scotty-cookie", "base"], DirectedEdge["scotty-cookie", "blaze-builder"], DirectedEdge["scotty-cookie", "bytestring"], DirectedEdge["scotty-cookie", "containers"], DirectedEdge["scotty-cookie", "cookie"], DirectedEdge["scotty-cookie", "scotty"], DirectedEdge["scotty-cookie", "text"], DirectedEdge["scotty-cookie", "time"], DirectedEdge["scotty-cookie", "transformers"], DirectedEdge["scotty-fay", "base"], DirectedEdge["scotty-fay", "bytestring"], DirectedEdge["scotty-fay", "data-default"], DirectedEdge["scotty-fay", "directory"], DirectedEdge["scotty-fay", "fay"], DirectedEdge["scotty-fay", "fay-jquery"], DirectedEdge["scotty-fay", "filepath"], DirectedEdge["scotty-fay", "http-types"], DirectedEdge["scotty-fay", "scotty"], DirectedEdge["scotty-fay", "text"], DirectedEdge["scotty-fay", "transformers"], DirectedEdge["scotty-fay", "wai"], DirectedEdge["scotty-hastache", "base"], DirectedEdge["scotty-hastache", "containers"], DirectedEdge["scotty-hastache", "filepath"], DirectedEdge["scotty-hastache", "hastache"], DirectedEdge["scotty-hastache", "http-types"], DirectedEdge["scotty-hastache", "mtl"], DirectedEdge["scotty-hastache", "scotty"], DirectedEdge["scotty-hastache", "text"], DirectedEdge["scotty-hastache", "wai"], DirectedEdge["scotty-hastache", "warp"], DirectedEdge["scotty-params-parser", "base-prelude"], DirectedEdge["scotty-params-parser", "matcher"], DirectedEdge["scotty-params-parser", "scotty"], DirectedEdge["scotty-params-parser", "success"], DirectedEdge["scotty-params-parser", "text"], DirectedEdge["scotty-params-parser", "transformers"], DirectedEdge["scotty-params-parser", "unordered-containers"], DirectedEdge["scotty-resource", "base"], DirectedEdge["scotty-resource", "containers"], DirectedEdge["scotty-resource", "http-types"], DirectedEdge["scotty-resource", "scotty"], DirectedEdge["scotty-resource", "text"], DirectedEdge["scotty-resource", "transformers"], DirectedEdge["scotty-resource", "wai"], DirectedEdge["scotty-rest", "base"], DirectedEdge["scotty-rest", "base-prelude"], DirectedEdge["scotty-rest", "bytestring"], DirectedEdge["scotty-rest", "convertible"], DirectedEdge["scotty-rest", "data-default-class"], DirectedEdge["scotty-rest", "http-date"], DirectedEdge["scotty-rest", "http-media"], DirectedEdge["scotty-rest", "http-types"], DirectedEdge["scotty-rest", "mtl"], DirectedEdge["scotty-rest", "scotty"], DirectedEdge["scotty-rest", "string-conversions"], DirectedEdge["scotty-rest", "text"], DirectedEdge["scotty-rest", "time"], DirectedEdge["scotty-rest", "transformers"], DirectedEdge["scotty-rest", "wai"], DirectedEdge["scotty-rest", "wai-extra"], DirectedEdge["scotty-session", "Spock"], DirectedEdge["scotty-session", "base"], DirectedEdge["scotty-session", "base64-bytestring"], DirectedEdge["scotty-session", "blaze-builder"], DirectedEdge["scotty-session", "bytestring"], DirectedEdge["scotty-session", "crypto-api"], DirectedEdge["scotty-session", "http-types"], DirectedEdge["scotty-session", "scotty"], DirectedEdge["scotty-session", "stm"], DirectedEdge["scotty-session", "text"], DirectedEdge["scotty-session", "time"], DirectedEdge["scotty-session", "transformers"], DirectedEdge["scotty-session", "unordered-containers"], DirectedEdge["scotty-session", "wai"], DirectedEdge["scotty-tls", "base"], DirectedEdge["scotty-tls", "scotty"], DirectedEdge["scotty-tls", "transformers"], DirectedEdge["scotty-tls", "wai"], DirectedEdge["scotty-tls", "warp"], DirectedEdge["scotty-tls", "warp-tls"], DirectedEdge["scotty-view", "base"], DirectedEdge["scotty-view", "scotty"], DirectedEdge["scotty-view", "scotty-view"], DirectedEdge["scotty-view", "text"], DirectedEdge["scotty-view", "transformers"], DirectedEdge["scp-streams", "attoparsec"], DirectedEdge["scp-streams", "base"], DirectedEdge["scp-streams", "bytestring"], DirectedEdge["scp-streams", "cmdargs"], DirectedEdge["scp-streams", "io-streams"], DirectedEdge["scp-streams", "process"], DirectedEdge["scp-streams", "scp-streams"], DirectedEdge["scp-streams", "SHA"], DirectedEdge["scp-streams", "sha-streams"], DirectedEdge["scp-streams", "unix"], DirectedEdge["scrabble-bot", "array"], DirectedEdge["scrabble-bot", "base"], DirectedEdge["scrabble-bot", "binary"], DirectedEdge["scrabble-bot", "containers"], DirectedEdge["scrabble-bot", "deepseq"], DirectedEdge["scrabble-bot", "directory"], DirectedEdge["scrabble-bot", "mtl"], DirectedEdge["scrabble-bot", "packed-dawg"], DirectedEdge["scrabble-bot", "parallel"], DirectedEdge["scrabble-bot", "split"], DirectedEdge["scrape-changes", "async"], DirectedEdge["scrape-changes", "attoparsec"], DirectedEdge["scrape-changes", "base"], DirectedEdge["scrape-changes", "bytestring"], DirectedEdge["scrape-changes", "cron"], DirectedEdge["scrape-changes", "directory"], DirectedEdge["scrape-changes", "email-validate"], DirectedEdge["scrape-changes", "filepath"], DirectedEdge["scrape-changes", "hashable"], DirectedEdge["scrape-changes", "hslogger"], DirectedEdge["scrape-changes", "http-client"], DirectedEdge["scrape-changes", "lens"], DirectedEdge["scrape-changes", "mime-mail"], DirectedEdge["scrape-changes", "network-uri"], DirectedEdge["scrape-changes", "semigroups"], DirectedEdge["scrape-changes", "strict"], DirectedEdge["scrape-changes", "text"], DirectedEdge["scrape-changes", "validation"], DirectedEdge["scrape-changes", "wreq"], DirectedEdge["scrobble", "base"], DirectedEdge["scrobble", "containers"], DirectedEdge["scrobble", "curl"], DirectedEdge["scrobble", "MissingH"], DirectedEdge["scrobble", "network"], DirectedEdge["scrobble", "network-uri"], DirectedEdge["scrobble", "old-locale"], DirectedEdge["scrobble", "time"], DirectedEdge["scrobble", "url"], DirectedEdge["scroll", "base"], DirectedEdge["scroll", "bytestring"], DirectedEdge["scroll", "case-insensitive"], DirectedEdge["scroll", "containers"], DirectedEdge["scroll", "data-default"], DirectedEdge["scroll", "IfElse"], DirectedEdge["scroll", "monad-loops"], DirectedEdge["scroll", "mtl"], DirectedEdge["scroll", "ncurses"], DirectedEdge["scroll", "optparse-applicative"], DirectedEdge["scroll", "random"], DirectedEdge["scroll", "text"], DirectedEdge["scroll", "unix"], DirectedEdge["scroll", "vector"], DirectedEdge["scrypt", "base"], DirectedEdge["scrypt", "base64-bytestring"], DirectedEdge["scrypt", "bytestring"], DirectedEdge["scrypt", "entropy"], DirectedEdge["scrz", "aeson"], DirectedEdge["scrz", "base"], DirectedEdge["scrz", "base16-bytestring"], DirectedEdge["scrz", "bytestring"], DirectedEdge["scrz", "conduit"], DirectedEdge["scrz", "containers"], DirectedEdge["scrz", "cryptohash"], DirectedEdge["scrz", "directory"], DirectedEdge["scrz", "filepath"], DirectedEdge["scrz", "friendly-time"], DirectedEdge["scrz", "hashable"], DirectedEdge["scrz", "http-conduit"], DirectedEdge["scrz", "http-types"], DirectedEdge["scrz", "MonadRandom"], DirectedEdge["scrz", "mtl"], DirectedEdge["scrz", "network"], DirectedEdge["scrz", "old-locale"], DirectedEdge["scrz", "process"], DirectedEdge["scrz", "random"], DirectedEdge["scrz", "stm"], DirectedEdge["scrz", "template-haskell"], DirectedEdge["scrz", "text"], DirectedEdge["scrz", "time"], DirectedEdge["scrz", "unix"], DirectedEdge["scyther-proof", "array"], DirectedEdge["scyther-proof", "base"], DirectedEdge["scyther-proof", "cmdargs"], DirectedEdge["scyther-proof", "containers"], DirectedEdge["scyther-proof", "directory"], DirectedEdge["scyther-proof", "filepath"], DirectedEdge["scyther-proof", "json"], DirectedEdge["scyther-proof", "mtl"], DirectedEdge["scyther-proof", "parsec"], DirectedEdge["scyther-proof", "pretty"], DirectedEdge["scyther-proof", "process"], DirectedEdge["scyther-proof", "safe"], DirectedEdge["scyther-proof", "tagsoup"], DirectedEdge["scyther-proof", "time"], DirectedEdge["scyther-proof", "uniplate"], DirectedEdge["scyther-proof", "utf8-string"], DirectedEdge["sde-solver", "base"], DirectedEdge["sde-solver", "cereal"], DirectedEdge["sde-solver", "cereal-vector"], DirectedEdge["sde-solver", "ghc-prim"], DirectedEdge["sde-solver", "haskell-mpi"], DirectedEdge["sde-solver", "mtl"], DirectedEdge["sde-solver", "mwc-random"], DirectedEdge["sde-solver", "normaldistribution"], DirectedEdge["sde-solver", "parallel"], DirectedEdge["sde-solver", "vector"], DirectedEdge["sdf2p1-parser", "base"], DirectedEdge["sdf2p1-parser", "bytestring"], DirectedEdge["sdf2p1-parser", "parsec"], DirectedEdge["sdf2p1-parser", "transformers"], DirectedEdge["sdl2", "base"], DirectedEdge["sdl2", "bytestring"], DirectedEdge["sdl2", "exceptions"], DirectedEdge["sdl2", "lens"], DirectedEdge["sdl2", "linear"], DirectedEdge["sdl2", "OpenGL"], DirectedEdge["sdl2", "StateVar"], DirectedEdge["sdl2", "text"], DirectedEdge["sdl2", "transformers"], DirectedEdge["sdl2", "vector"], DirectedEdge["sdl2-cairo", "base"], DirectedEdge["sdl2-cairo", "cairo"], DirectedEdge["sdl2-cairo", "linear"], DirectedEdge["sdl2-cairo", "mtl"], DirectedEdge["sdl2-cairo", "random"], DirectedEdge["sdl2-cairo", "sdl2-cairo"], DirectedEdge["sdl2-cairo", "time"], DirectedEdge["sdl2-cairo-image", "base"], DirectedEdge["sdl2-cairo-image", "cairo"], DirectedEdge["sdl2-cairo-image", "convertible"], DirectedEdge["sdl2-cairo-image", "JuicyPixels"], DirectedEdge["sdl2-cairo-image", "linear"], DirectedEdge["sdl2-cairo-image", "sdl2-cairo"], DirectedEdge["sdl2-cairo-image", "vector"], DirectedEdge["sdl2-compositor", "base"], DirectedEdge["sdl2-compositor", "lens"], DirectedEdge["sdl2-compositor", "linear"], DirectedEdge["sdl2-compositor", "lrucache"], DirectedEdge["sdl2-compositor", "QuickCheck"], DirectedEdge["sdl2-compositor", "sdl2-ttf"], DirectedEdge["sdl2-compositor", "StateVar"], DirectedEdge["sdl2-compositor", "stm"], DirectedEdge["sdl2-compositor", "text"], DirectedEdge["sdl2-compositor", "transformers"], DirectedEdge["sdl2-image", "base"], DirectedEdge["sdl2-ttf", "base"], DirectedEdge["sdl2-ttf", "linear"], DirectedEdge["sdl2-ttf", "sdl2-ttf"], DirectedEdge["sdl2-ttf", "transformers"], DirectedEdge["sdnv", "base"], DirectedEdge["sdnv", "binary"], DirectedEdge["sdnv", "bytestring"], DirectedEdge["sdr", "array"], DirectedEdge["sdr", "base"], DirectedEdge["sdr", "bytestring"], DirectedEdge["sdr", "cairo"], DirectedEdge["sdr", "cereal"], DirectedEdge["sdr", "Chart"], DirectedEdge["sdr", "Chart-cairo"], DirectedEdge["sdr", "colour"], DirectedEdge["sdr", "containers"], DirectedEdge["sdr", "Decimal"], DirectedEdge["sdr", "dynamic-graph"], DirectedEdge["sdr", "either"], DirectedEdge["sdr", "fftwRaw"], DirectedEdge["sdr", "GLFW-b"], DirectedEdge["sdr", "mwc-random"], DirectedEdge["sdr", "OpenGL"], DirectedEdge["sdr", "optparse-applicative"], DirectedEdge["sdr", "pango"], DirectedEdge["sdr", "pipes"], DirectedEdge["sdr", "pipes-bytestring"], DirectedEdge["sdr", "pipes-concurrency"], DirectedEdge["sdr", "primitive"], DirectedEdge["sdr", "pulse-simple"], DirectedEdge["sdr", "rtlsdr"], DirectedEdge["sdr", "storable-complex"], DirectedEdge["sdr", "time"], DirectedEdge["sdr", "tuple"], DirectedEdge["sdr", "vector"], DirectedEdge["seacat", "base"], DirectedEdge["seacat", "blaze-builder"], DirectedEdge["seacat", "blaze-html"], DirectedEdge["seacat", "bytestring"], DirectedEdge["seacat", "ConfigFile"], DirectedEdge["seacat", "data-default"], DirectedEdge["seacat", "directory"], DirectedEdge["seacat", "filepath"], DirectedEdge["seacat", "http-types"], DirectedEdge["seacat", "mime-types"], DirectedEdge["seacat", "MissingH"], DirectedEdge["seacat", "monad-control"], DirectedEdge["seacat", "mtl"], DirectedEdge["seacat", "network"], DirectedEdge["seacat", "persistent"], DirectedEdge["seacat", "persistent-postgresql"], DirectedEdge["seacat", "persistent-sqlite"], DirectedEdge["seacat", "persistent-template"], DirectedEdge["seacat", "text"], DirectedEdge["seacat", "time"], DirectedEdge["seacat", "transformers"], DirectedEdge["seacat", "wai"], DirectedEdge["seacat", "wai-extra"], DirectedEdge["seacat", "wai-middleware-static"], DirectedEdge["seacat", "warp"], DirectedEdge["seacat", "web-routes"], DirectedEdge["seacat", "web-routes-wai"], DirectedEdge["seal-module", "base"], DirectedEdge["seal-module", "template-haskell"], DirectedEdge["search", "base"], DirectedEdge["search", "ghc-prim"], DirectedEdge["search", "profunctors"], DirectedEdge["search", "semigroupoids"], DirectedEdge["search", "tagged"], DirectedEdge["search", "transformers"], DirectedEdge["sec", "base"], DirectedEdge["sec", "template-haskell"], DirectedEdge["secdh", "base"], DirectedEdge["secdh", "containers"], DirectedEdge["secdh", "secdh"], DirectedEdge["seclib", "base"], DirectedEdge["second-transfer", "attoparsec"], DirectedEdge["second-transfer", "base"], DirectedEdge["second-transfer", "base16-bytestring"], DirectedEdge["second-transfer", "binary"], DirectedEdge["second-transfer", "BoundedChan"], DirectedEdge["second-transfer", "bytestring"], DirectedEdge["second-transfer", "clock"], DirectedEdge["second-transfer", "conduit"], DirectedEdge["second-transfer", "containers"], DirectedEdge["second-transfer", "deepseq"], DirectedEdge["second-transfer", "exceptions"], DirectedEdge["second-transfer", "hashable"], DirectedEdge["second-transfer", "hashtables"], DirectedEdge["second-transfer", "lens"], DirectedEdge["second-transfer", "mmorph"], DirectedEdge["second-transfer", "network"], DirectedEdge["second-transfer", "network-uri"], DirectedEdge["second-transfer", "pqueue"], DirectedEdge["second-transfer", "resourcet"], DirectedEdge["second-transfer", "stm"], DirectedEdge["second-transfer", "text"], DirectedEdge["second-transfer", "time"], DirectedEdge["second-transfer", "transformers"], DirectedEdge["second-transfer", "vector"], DirectedEdge["second-transfer", "vector-algorithms"], DirectedEdge["secp256k1", "base"], DirectedEdge["secp256k1", "base16-bytestring"], DirectedEdge["secp256k1", "binary"], DirectedEdge["secp256k1", "bytestring"], DirectedEdge["secp256k1", "entropy"], DirectedEdge["secp256k1", "largeword"], DirectedEdge["secp256k1", "mtl"], DirectedEdge["secp256k1", "QuickCheck"], DirectedEdge["secp256k1", "string-conversions"], DirectedEdge["secret-santa", "base"], DirectedEdge["secret-santa", "containers"], DirectedEdge["secret-santa", "diagrams-cairo"], DirectedEdge["secret-santa", "diagrams-lib"], DirectedEdge["secret-santa", "haskell-qrencode"], DirectedEdge["secret-santa", "random"], DirectedEdge["secret-sharing", "base"], DirectedEdge["secret-sharing", "binary"], DirectedEdge["secret-sharing", "bytestring"], DirectedEdge["secret-sharing", "dice-entropy-conduit"], DirectedEdge["secret-sharing", "finite-field"], DirectedEdge["secret-sharing", "polynomial"], DirectedEdge["secret-sharing", "vector"], DirectedEdge["secrm", "base"], DirectedEdge["secure-sockets", "base"], DirectedEdge["secure-sockets", "bytestring"], DirectedEdge["secure-sockets", "directory"], DirectedEdge["secure-sockets", "HsOpenSSL"], DirectedEdge["secure-sockets", "network"], DirectedEdge["secure-sockets", "process"], DirectedEdge["secure-sockets", "transformers"], DirectedEdge["securemem", "base"], DirectedEdge["securemem", "byteable"], DirectedEdge["securemem", "bytestring"], DirectedEdge["securemem", "ghc-prim"], DirectedEdge["securemem", "memory"], DirectedEdge["sednaDBXML", "base"], DirectedEdge["sednaDBXML", "bindings-DSL"], DirectedEdge["sednaDBXML", "bytestring"], DirectedEdge["sednaDBXML", "containers"], DirectedEdge["sednaDBXML", "iteratee"], DirectedEdge["sednaDBXML", "mtl"], DirectedEdge["sednaDBXML", "text"], DirectedEdge["select", "base"], DirectedEdge["selectors", "array"], DirectedEdge["selectors", "base"], DirectedEdge["selectors", "containers"], DirectedEdge["selectors", "template-haskell"], DirectedEdge["selectors", "text"], DirectedEdge["selectors", "xml-conduit"], DirectedEdge["selenium", "base"], DirectedEdge["selenium", "HTTP"], DirectedEdge["selenium", "HUnit"], DirectedEdge["selenium", "mtl"], DirectedEdge["selenium", "network"], DirectedEdge["selenium", "pretty"], DirectedEdge["selenium-server", "base"], DirectedEdge["selenium-server", "conduit"], DirectedEdge["selenium-server", "directory"], DirectedEdge["selenium-server", "filepath"], DirectedEdge["selenium-server", "http-conduit"], DirectedEdge["selenium-server", "http-conduit-downloader"], DirectedEdge["selenium-server", "network"], DirectedEdge["selenium-server", "process"], DirectedEdge["selenium-server", "random"], DirectedEdge["selenium-server", "regex-tdfa"], DirectedEdge["selenium-server", "utf8-string"], DirectedEdge["selfrestart", "base"], DirectedEdge["selfrestart", "directory"], DirectedEdge["selfrestart", "executable-path"], DirectedEdge["selfrestart", "unix"], DirectedEdge["selinux", "base"], DirectedEdge["selinux", "unix"], DirectedEdge["semaphore-plus", "base"], DirectedEdge["semi-iso", "base"], DirectedEdge["semi-iso", "lens"], DirectedEdge["semi-iso", "profunctors"], DirectedEdge["semi-iso", "semigroupoids"], DirectedEdge["semi-iso", "transformers"], DirectedEdge["semi-iso", "tuple-morph"], DirectedEdge["semigroupoid-extras", "base"], DirectedEdge["semigroupoid-extras", "profunctors"], DirectedEdge["semigroupoid-extras", "semigroupoids"], DirectedEdge["semigroupoids", "base"], DirectedEdge["semigroupoids", "base-orphans"], DirectedEdge["semigroupoids", "bifunctors"], DirectedEdge["semigroupoids", "comonad"], DirectedEdge["semigroupoids", "containers"], DirectedEdge["semigroupoids", "contravariant"], DirectedEdge["semigroupoids", "distributive"], DirectedEdge["semigroupoids", "semigroups"], DirectedEdge["semigroupoids", "tagged"], DirectedEdge["semigroupoids", "transformers"], DirectedEdge["semigroupoids", "transformers-compat"], DirectedEdge["semigroupoids-syntax", "base"], DirectedEdge["semigroupoids-syntax", "comonad"], DirectedEdge["semigroupoids-syntax", "containers"], DirectedEdge["semigroupoids-syntax", "contravariant"], DirectedEdge["semigroupoids-syntax", "distributive"], DirectedEdge["semigroupoids-syntax", "semigroupoids"], DirectedEdge["semigroupoids-syntax", "semigroups"], DirectedEdge["semigroupoids-syntax", "transformers"], DirectedEdge["semigroups", "base"], DirectedEdge["semigroups", "binary"], DirectedEdge["semigroups", "bytestring"], DirectedEdge["semigroups", "containers"], DirectedEdge["semigroups", "deepseq"], DirectedEdge["semigroups", "ghc-prim"], DirectedEdge["semigroups", "hashable"], DirectedEdge["semigroups", "nats"], DirectedEdge["semigroups", "tagged"], DirectedEdge["semigroups", "text"], DirectedEdge["semigroups", "transformers"], DirectedEdge["semigroups", "unordered-containers"], DirectedEdge["semigroups-actions", "base"], DirectedEdge["semigroups-actions", "containers"], DirectedEdge["semigroups-actions", "semigroups"], DirectedEdge["semiring", "base"], DirectedEdge["semiring", "Boolean"], DirectedEdge["semiring", "containers"], DirectedEdge["semiring", "HUnit"], DirectedEdge["semiring", "monoids"], DirectedEdge["semiring", "QuickCheck"], DirectedEdge["semiring", "test-framework"], DirectedEdge["semiring", "test-framework-hunit"], DirectedEdge["semiring-simple", "base"], DirectedEdge["semver", "attoparsec"], DirectedEdge["semver", "base"], DirectedEdge["semver", "deepseq"], DirectedEdge["semver", "text"], DirectedEdge["semver-range", "base"], DirectedEdge["semver-range", "classy-prelude"], DirectedEdge["semver-range", "parsec"], DirectedEdge["semver-range", "text"], DirectedEdge["semver-range", "unordered-containers"], DirectedEdge["sendfile", "base"], DirectedEdge["sendfile", "bytestring"], DirectedEdge["sendfile", "network"], DirectedEdge["sendgrid-haskell", "aeson"], DirectedEdge["sendgrid-haskell", "base"], DirectedEdge["sendgrid-haskell", "bytestring"], DirectedEdge["sendgrid-haskell", "containers"], DirectedEdge["sendgrid-haskell", "exceptions"], DirectedEdge["sendgrid-haskell", "http-conduit"], DirectedEdge["sendgrid-haskell", "monad-control"], DirectedEdge["sendgrid-haskell", "text"], DirectedEdge["sendgrid-haskell", "transformers"], DirectedEdge["sensei", "ansi-terminal"], DirectedEdge["sensei", "base"], DirectedEdge["sensei", "base-compat"], DirectedEdge["sensei", "bytestring"], DirectedEdge["sensei", "directory"], DirectedEdge["sensei", "filepath"], DirectedEdge["sensei", "fsnotify"], DirectedEdge["sensei", "http-client"], DirectedEdge["sensei", "http-types"], DirectedEdge["sensei", "network"], DirectedEdge["sensei", "process"], DirectedEdge["sensei", "stm"], DirectedEdge["sensei", "text"], DirectedEdge["sensei", "time"], DirectedEdge["sensei", "unix"], DirectedEdge["sensei", "wai"], DirectedEdge["sensei", "warp"], DirectedEdge["sensenet", "aeson"], DirectedEdge["sensenet", "base"], DirectedEdge["sensenet", "bytestring"], DirectedEdge["sensenet", "containers"], DirectedEdge["sensenet", "process"], DirectedEdge["sensenet", "stm"], DirectedEdge["sensenet", "zeromq3-haskell"], DirectedEdge["sentry", "ansi-terminal"], DirectedEdge["sentry", "base"], DirectedEdge["sentry", "bytestring"], DirectedEdge["sentry", "cereal"], DirectedEdge["sentry", "cmdargs"], DirectedEdge["sentry", "directory"], DirectedEdge["sentry", "filepath"], DirectedEdge["sentry", "old-locale"], DirectedEdge["sentry", "old-time"], DirectedEdge["sentry", "process"], DirectedEdge["sentry", "safecopy"], DirectedEdge["sentry", "sentry"], DirectedEdge["sentry", "time"], DirectedEdge["sentry", "unix"], DirectedEdge["senza", "lucid"], DirectedEdge["separated", "base"], DirectedEdge["separated", "bifunctors"], DirectedEdge["separated", "lens"], DirectedEdge["separated", "semigroupoids"], DirectedEdge["separated", "semigroups"], DirectedEdge["seqaid", "array"], DirectedEdge["seqaid", "base"], DirectedEdge["seqaid", "Cabal"], DirectedEdge["seqaid", "containers"], DirectedEdge["seqaid", "cpphs"], DirectedEdge["seqaid", "deepseq-bounded"], DirectedEdge["seqaid", "directory"], DirectedEdge["seqaid", "exceptions"], DirectedEdge["seqaid", "filepath"], DirectedEdge["seqaid", "ghc"], DirectedEdge["seqaid", "ghc-paths"], DirectedEdge["seqaid", "mtl"], DirectedEdge["seqaid", "process"], DirectedEdge["seqaid", "regex-base"], DirectedEdge["seqaid", "regex-pcre"], DirectedEdge["seqaid", "syb"], DirectedEdge["seqaid", "template-haskell"], DirectedEdge["seqaid", "temporary"], DirectedEdge["seqaid", "transformers"], DirectedEdge["seqalign", "base"], DirectedEdge["seqalign", "bytestring"], DirectedEdge["seqalign", "vector"], DirectedEdge["seqid", "base"], DirectedEdge["seqid", "mtl"], DirectedEdge["seqid", "transformers"], DirectedEdge["seqid-streams", "base"], DirectedEdge["seqid-streams", "io-streams"], DirectedEdge["seqid-streams", "seqid"], DirectedEdge["seqloc", "attoparsec"], DirectedEdge["seqloc", "base"], DirectedEdge["seqloc", "biocore"], DirectedEdge["seqloc", "bytestring"], DirectedEdge["seqloc", "hashable"], DirectedEdge["seqloc", "unordered-containers"], DirectedEdge["seqloc", "vector"], DirectedEdge["seqloc-datafiles", "attoparsec"], DirectedEdge["seqloc-datafiles", "base"], DirectedEdge["seqloc-datafiles", "biocore"], DirectedEdge["seqloc-datafiles", "bytestring"], DirectedEdge["seqloc-datafiles", "cmdtheline"], DirectedEdge["seqloc-datafiles", "conduit"], DirectedEdge["seqloc-datafiles", "conduit-extra"], DirectedEdge["seqloc-datafiles", "filepath"], DirectedEdge["seqloc-datafiles", "hashable"], DirectedEdge["seqloc-datafiles", "iteratee"], DirectedEdge["seqloc-datafiles", "lifted-base"], DirectedEdge["seqloc-datafiles", "monads-tf"], DirectedEdge["seqloc-datafiles", "pretty"], DirectedEdge["seqloc-datafiles", "QuickCheck"], DirectedEdge["seqloc-datafiles", "random"], DirectedEdge["seqloc-datafiles", "resourcet"], DirectedEdge["seqloc-datafiles", "seqloc"], DirectedEdge["seqloc-datafiles", "transformers"], DirectedEdge["seqloc-datafiles", "transformers-base"], DirectedEdge["seqloc-datafiles", "unordered-containers"], DirectedEdge["seqloc-datafiles", "vector"], DirectedEdge["sequence", "base"], DirectedEdge["sequence", "containers"], DirectedEdge["sequence", "transformers"], DirectedEdge["sequent-core", "base"], DirectedEdge["sequent-core", "bytestring"], DirectedEdge["sequent-core", "containers"], DirectedEdge["sequent-core", "ghc"], DirectedEdge["sequent-core", "sequent-core"], DirectedEdge["sequent-core", "transformers"], DirectedEdge["sequential-index", "base"], DirectedEdge["sequential-index", "bytestring"], DirectedEdge["sequor", "array"], DirectedEdge["sequor", "base"], DirectedEdge["sequor", "binary"], DirectedEdge["sequor", "bytestring"], DirectedEdge["sequor", "containers"], DirectedEdge["sequor", "mtl"], DirectedEdge["sequor", "nlp-scores"], DirectedEdge["sequor", "pretty"], DirectedEdge["sequor", "split"], DirectedEdge["sequor", "text"], DirectedEdge["sequor", "vector"], DirectedEdge["serf", "attoparsec"], DirectedEdge["serf", "base"], DirectedEdge["serf", "conduit"], DirectedEdge["serf", "conduit-extra"], DirectedEdge["serf", "mtl"], DirectedEdge["serf", "operational"], DirectedEdge["serf", "process"], DirectedEdge["serf", "resourcet"], DirectedEdge["serf", "text"], DirectedEdge["serial", "base"], DirectedEdge["serial", "unix"], DirectedEdge["serial-test-generators", "aeson"], DirectedEdge["serial-test-generators", "base"], DirectedEdge["serial-test-generators", "binary"], DirectedEdge["serial-test-generators", "bytestring"], DirectedEdge["serial-test-generators", "cereal"], DirectedEdge["serial-test-generators", "here"], DirectedEdge["serialport", "base"], DirectedEdge["serialport", "bytestring"], DirectedEdge["serialport", "unix"], DirectedEdge["serpentine", "base"], DirectedEdge["serpentine", "pringletons"], DirectedEdge["serpentine", "serpentine"], DirectedEdge["serpentine", "singletons"], DirectedEdge["serpentine", "template-haskell"], DirectedEdge["serpentine", "text"], DirectedEdge["serpentine", "vinyl"], DirectedEdge["serv", "base"], DirectedEdge["serv", "containers"], DirectedEdge["serv", "http-kinder"], DirectedEdge["serv", "singletons"], DirectedEdge["serv", "text"], DirectedEdge["serv-wai", "aeson"], DirectedEdge["serv-wai", "base"], DirectedEdge["serv-wai", "bytestring"], DirectedEdge["serv-wai", "case-insensitive"], DirectedEdge["serv-wai", "containers"], DirectedEdge["serv-wai", "http-kinder"], DirectedEdge["serv-wai", "http-media"], DirectedEdge["serv-wai", "http-types"], DirectedEdge["serv-wai", "mmorph"], DirectedEdge["serv-wai", "mtl"], DirectedEdge["serv-wai", "serv"], DirectedEdge["serv-wai", "singletons"], DirectedEdge["serv-wai", "tagged"], DirectedEdge["serv-wai", "text"], DirectedEdge["serv-wai", "time"], DirectedEdge["serv-wai", "transformers"], DirectedEdge["serv-wai", "vinyl"], DirectedEdge["serv-wai", "wai"], DirectedEdge["servant", "aeson"], DirectedEdge["servant", "attoparsec"], DirectedEdge["servant", "base"], DirectedEdge["servant", "base-compat"], DirectedEdge["servant", "bytestring"], DirectedEdge["servant", "bytestring-conversion"], DirectedEdge["servant", "case-insensitive"], DirectedEdge["servant", "http-api-data"], DirectedEdge["servant", "http-media"], DirectedEdge["servant", "http-types"], DirectedEdge["servant", "mmorph"], DirectedEdge["servant", "mtl"], DirectedEdge["servant", "network-uri"], DirectedEdge["servant", "string-conversions"], DirectedEdge["servant", "text"], DirectedEdge["servant", "vault"], DirectedEdge["servant-JuicyPixels", "base"], DirectedEdge["servant-JuicyPixels", "bytestring"], DirectedEdge["servant-JuicyPixels", "http-media"], DirectedEdge["servant-JuicyPixels", "JuicyPixels"], DirectedEdge["servant-JuicyPixels", "servant"], DirectedEdge["servant-JuicyPixels", "servant-JuicyPixels"], DirectedEdge["servant-JuicyPixels", "servant-server"], DirectedEdge["servant-JuicyPixels", "wai"], DirectedEdge["servant-JuicyPixels", "warp"], DirectedEdge["servant-blaze", "base"], DirectedEdge["servant-blaze", "blaze-html"], DirectedEdge["servant-blaze", "http-media"], DirectedEdge["servant-blaze", "servant"], DirectedEdge["servant-cassava", "base"], DirectedEdge["servant-cassava", "cassava"], DirectedEdge["servant-cassava", "http-media"], DirectedEdge["servant-cassava", "servant"], DirectedEdge["servant-cassava", "vector"], DirectedEdge["servant-client", "aeson"], DirectedEdge["servant-client", "attoparsec"], DirectedEdge["servant-client", "base"], DirectedEdge["servant-client", "base64-bytestring"], DirectedEdge["servant-client", "bytestring"], DirectedEdge["servant-client", "exceptions"], DirectedEdge["servant-client", "http-api-data"], DirectedEdge["servant-client", "http-client"], DirectedEdge["servant-client", "http-client-tls"], DirectedEdge["servant-client", "http-media"], DirectedEdge["servant-client", "http-types"], DirectedEdge["servant-client", "network-uri"], DirectedEdge["servant-client", "safe"], DirectedEdge["servant-client", "servant"], DirectedEdge["servant-client", "string-conversions"], DirectedEdge["servant-client", "text"], DirectedEdge["servant-client", "transformers"], DirectedEdge["servant-client", "transformers-compat"], DirectedEdge["servant-csharp", "aeson"], DirectedEdge["servant-csharp", "base"], DirectedEdge["servant-csharp", "bytestring"], DirectedEdge["servant-csharp", "directory"], DirectedEdge["servant-csharp", "filepath"], DirectedEdge["servant-csharp", "heredocs"], DirectedEdge["servant-csharp", "http-types"], DirectedEdge["servant-csharp", "lens"], DirectedEdge["servant-csharp", "mtl"], DirectedEdge["servant-csharp", "servant"], DirectedEdge["servant-csharp", "servant-foreign"], DirectedEdge["servant-csharp", "servant-swagger"], DirectedEdge["servant-csharp", "text"], DirectedEdge["servant-csharp", "time"], DirectedEdge["servant-csharp", "unordered-containers"], DirectedEdge["servant-csharp", "uuid"], DirectedEdge["servant-csharp", "uuid-types"], DirectedEdge["servant-docs", "aeson"], DirectedEdge["servant-docs", "aeson-pretty"], DirectedEdge["servant-docs", "base"], DirectedEdge["servant-docs", "bytestring"], DirectedEdge["servant-docs", "bytestring-conversion"], DirectedEdge["servant-docs", "case-insensitive"], DirectedEdge["servant-docs", "control-monad-omega"], DirectedEdge["servant-docs", "hashable"], DirectedEdge["servant-docs", "http-media"], DirectedEdge["servant-docs", "http-types"], DirectedEdge["servant-docs", "lens"], DirectedEdge["servant-docs", "servant"], DirectedEdge["servant-docs", "servant-docs"], DirectedEdge["servant-docs", "string-conversions"], DirectedEdge["servant-docs", "text"], DirectedEdge["servant-docs", "unordered-containers"], DirectedEdge["servant-ede", "aeson"], DirectedEdge["servant-ede", "base"], DirectedEdge["servant-ede", "bytestring"], DirectedEdge["servant-ede", "ede"], DirectedEdge["servant-ede", "either"], DirectedEdge["servant-ede", "filepath"], DirectedEdge["servant-ede", "http-media"], DirectedEdge["servant-ede", "http-types"], DirectedEdge["servant-ede", "semigroups"], DirectedEdge["servant-ede", "servant"], DirectedEdge["servant-ede", "servant-ede"], DirectedEdge["servant-ede", "servant-server"], DirectedEdge["servant-ede", "text"], DirectedEdge["servant-ede", "transformers"], DirectedEdge["servant-ede", "unordered-containers"], DirectedEdge["servant-ede", "vector"], DirectedEdge["servant-ede", "warp"], DirectedEdge["servant-ede", "xss-sanitize"], DirectedEdge["servant-elm", "base"], DirectedEdge["servant-elm", "elm-export"], DirectedEdge["servant-elm", "lens"], DirectedEdge["servant-elm", "servant"], DirectedEdge["servant-elm", "servant-foreign"], DirectedEdge["servant-elm", "text"], DirectedEdge["servant-examples", "aeson"], DirectedEdge["servant-examples", "base"], DirectedEdge["servant-examples", "bytestring"], DirectedEdge["servant-examples", "directory"], DirectedEdge["servant-examples", "either"], DirectedEdge["servant-examples", "http-types"], DirectedEdge["servant-examples", "js-jquery"], DirectedEdge["servant-examples", "lucid"], DirectedEdge["servant-examples", "random"], DirectedEdge["servant-examples", "servant"], DirectedEdge["servant-examples", "servant-client"], DirectedEdge["servant-examples", "servant-docs"], DirectedEdge["servant-examples", "servant-jquery"], DirectedEdge["servant-examples", "servant-lucid"], DirectedEdge["servant-examples", "servant-server"], DirectedEdge["servant-examples", "text"], DirectedEdge["servant-examples", "time"], DirectedEdge["servant-examples", "transformers"], DirectedEdge["servant-examples", "wai"], DirectedEdge["servant-examples", "wai-extra"], DirectedEdge["servant-examples", "warp"], DirectedEdge["servant-foreign", "base"], DirectedEdge["servant-foreign", "http-types"], DirectedEdge["servant-foreign", "lens"], DirectedEdge["servant-foreign", "servant"], DirectedEdge["servant-foreign", "text"], DirectedEdge["servant-github", "aeson"], DirectedEdge["servant-github", "base"], DirectedEdge["servant-github", "either"], DirectedEdge["servant-github", "http-link-header"], DirectedEdge["servant-github", "servant"], DirectedEdge["servant-github", "servant-client"], DirectedEdge["servant-github", "text"], DirectedEdge["servant-github", "transformers"], DirectedEdge["servant-haxl-client", "aeson"], DirectedEdge["servant-haxl-client", "async"], DirectedEdge["servant-haxl-client", "attoparsec"], DirectedEdge["servant-haxl-client", "base"], DirectedEdge["servant-haxl-client", "bytestring"], DirectedEdge["servant-haxl-client", "case-insensitive"], DirectedEdge["servant-haxl-client", "either"], DirectedEdge["servant-haxl-client", "exceptions"], DirectedEdge["servant-haxl-client", "ghcjs-base"], DirectedEdge["servant-haxl-client", "hashable"], DirectedEdge["servant-haxl-client", "haxl"], DirectedEdge["servant-haxl-client", "http-client"], DirectedEdge["servant-haxl-client", "http-client-tls"], DirectedEdge["servant-haxl-client", "http-media"], DirectedEdge["servant-haxl-client", "http-types"], DirectedEdge["servant-haxl-client", "network-uri"], DirectedEdge["servant-haxl-client", "safe"], DirectedEdge["servant-haxl-client", "servant"], DirectedEdge["servant-haxl-client", "string-conversions"], DirectedEdge["servant-haxl-client", "text"], DirectedEdge["servant-haxl-client", "transformers"], DirectedEdge["servant-jquery", "servant-js"], DirectedEdge["servant-jquery", "aeson"], DirectedEdge["servant-jquery", "base"], DirectedEdge["servant-jquery", "charset"], DirectedEdge["servant-jquery", "filepath"], DirectedEdge["servant-jquery", "lens"], DirectedEdge["servant-jquery", "servant"], DirectedEdge["servant-jquery", "servant-jquery"], DirectedEdge["servant-jquery", "servant-server"], DirectedEdge["servant-jquery", "stm"], DirectedEdge["servant-jquery", "text"], DirectedEdge["servant-jquery", "transformers"], DirectedEdge["servant-jquery", "warp"], DirectedEdge["servant-js", "aeson"], DirectedEdge["servant-js", "base"], DirectedEdge["servant-js", "base-compat"], DirectedEdge["servant-js", "charset"], DirectedEdge["servant-js", "filepath"], DirectedEdge["servant-js", "lens"], DirectedEdge["servant-js", "servant"], DirectedEdge["servant-js", "servant-foreign"], DirectedEdge["servant-js", "servant-js"], DirectedEdge["servant-js", "servant-server"], DirectedEdge["servant-js", "stm"], DirectedEdge["servant-js", "text"], DirectedEdge["servant-js", "transformers"], DirectedEdge["servant-js", "warp"], DirectedEdge["servant-lucid", "base"], DirectedEdge["servant-lucid", "http-media"], DirectedEdge["servant-lucid", "lucid"], DirectedEdge["servant-lucid", "servant"], DirectedEdge["servant-mock", "aeson"], DirectedEdge["servant-mock", "base"], DirectedEdge["servant-mock", "bytestring"], DirectedEdge["servant-mock", "http-types"], DirectedEdge["servant-mock", "QuickCheck"], DirectedEdge["servant-mock", "servant"], DirectedEdge["servant-mock", "servant-mock"], DirectedEdge["servant-mock", "servant-server"], DirectedEdge["servant-mock", "transformers"], DirectedEdge["servant-mock", "wai"], DirectedEdge["servant-mock", "warp"], DirectedEdge["servant-pandoc", "base"], DirectedEdge["servant-pandoc", "bytestring"], DirectedEdge["servant-pandoc", "http-media"], DirectedEdge["servant-pandoc", "lens"], DirectedEdge["servant-pandoc", "pandoc-types"], DirectedEdge["servant-pandoc", "servant-docs"], DirectedEdge["servant-pandoc", "text"], DirectedEdge["servant-pandoc", "unordered-containers"], DirectedEdge["servant-pool", "base"], DirectedEdge["servant-pool", "resource-pool"], DirectedEdge["servant-pool", "servant"], DirectedEdge["servant-pool", "time"], DirectedEdge["servant-postgresql", "servant"], DirectedEdge["servant-postgresql", "base"], DirectedEdge["servant-postgresql", "bytestring"], DirectedEdge["servant-postgresql", "postgresql-simple"], DirectedEdge["servant-postgresql", "servant"], DirectedEdge["servant-postgresql", "servant-pool"], DirectedEdge["servant-postgresql", "servant-response"], DirectedEdge["servant-quickcheck", "aeson"], DirectedEdge["servant-quickcheck", "base"], DirectedEdge["servant-quickcheck", "base-compat"], DirectedEdge["servant-quickcheck", "bifunctors"], DirectedEdge["servant-quickcheck", "bytestring"], DirectedEdge["servant-quickcheck", "case-insensitive"], DirectedEdge["servant-quickcheck", "data-default-class"], DirectedEdge["servant-quickcheck", "hspec"], DirectedEdge["servant-quickcheck", "http-client"], DirectedEdge["servant-quickcheck", "http-media"], DirectedEdge["servant-quickcheck", "http-types"], DirectedEdge["servant-quickcheck", "mtl"], DirectedEdge["servant-quickcheck", "process"], DirectedEdge["servant-quickcheck", "QuickCheck"], DirectedEdge["servant-quickcheck", "servant"], DirectedEdge["servant-quickcheck", "servant-client"], DirectedEdge["servant-quickcheck", "servant-server"], DirectedEdge["servant-quickcheck", "split"], DirectedEdge["servant-quickcheck", "string-conversions"], DirectedEdge["servant-quickcheck", "temporary"], DirectedEdge["servant-quickcheck", "text"], DirectedEdge["servant-quickcheck", "warp"], DirectedEdge["servant-response", "servant"], DirectedEdge["servant-response", "aeson"], DirectedEdge["servant-response", "base"], DirectedEdge["servant-response", "http-types"], DirectedEdge["servant-response", "text"], DirectedEdge["servant-router", "base"], DirectedEdge["servant-router", "bytestring"], DirectedEdge["servant-router", "http-api-data"], DirectedEdge["servant-router", "http-types"], DirectedEdge["servant-router", "mtl"], DirectedEdge["servant-router", "network-uri"], DirectedEdge["servant-router", "servant"], DirectedEdge["servant-router", "text"], DirectedEdge["servant-scotty", "servant"], DirectedEdge["servant-scotty", "aeson"], DirectedEdge["servant-scotty", "base"], DirectedEdge["servant-scotty", "http-types"], DirectedEdge["servant-scotty", "scotty"], DirectedEdge["servant-scotty", "servant"], DirectedEdge["servant-scotty", "servant-response"], DirectedEdge["servant-scotty", "text"], DirectedEdge["servant-scotty", "transformers"], DirectedEdge["servant-server", "aeson"], DirectedEdge["servant-server", "attoparsec"], DirectedEdge["servant-server", "base"], DirectedEdge["servant-server", "base-compat"], DirectedEdge["servant-server", "base64-bytestring"], DirectedEdge["servant-server", "bytestring"], DirectedEdge["servant-server", "containers"], DirectedEdge["servant-server", "filepath"], DirectedEdge["servant-server", "http-api-data"], DirectedEdge["servant-server", "http-types"], DirectedEdge["servant-server", "mtl"], DirectedEdge["servant-server", "network"], DirectedEdge["servant-server", "network-uri"], DirectedEdge["servant-server", "safe"], DirectedEdge["servant-server", "servant"], DirectedEdge["servant-server", "servant-server"], DirectedEdge["servant-server", "split"], DirectedEdge["servant-server", "string-conversions"], DirectedEdge["servant-server", "system-filepath"], DirectedEdge["servant-server", "text"], DirectedEdge["servant-server", "transformers"], DirectedEdge["servant-server", "transformers-compat"], DirectedEdge["servant-server", "wai"], DirectedEdge["servant-server", "wai-app-static"], DirectedEdge["servant-server", "warp"], DirectedEdge["servant-swagger", "aeson"], DirectedEdge["servant-swagger", "base"], DirectedEdge["servant-swagger", "bytestring"], DirectedEdge["servant-swagger", "hspec"], DirectedEdge["servant-swagger", "http-media"], DirectedEdge["servant-swagger", "insert-ordered-containers"], DirectedEdge["servant-swagger", "lens"], DirectedEdge["servant-swagger", "QuickCheck"], DirectedEdge["servant-swagger", "servant"], DirectedEdge["servant-swagger", "text"], DirectedEdge["servant-swagger", "unordered-containers"], DirectedEdge["servant-swagger-ui", "base"], DirectedEdge["servant-swagger-ui", "blaze-markup"], DirectedEdge["servant-swagger-ui", "bytestring"], DirectedEdge["servant-swagger-ui", "directory"], DirectedEdge["servant-swagger-ui", "file-embed"], DirectedEdge["servant-swagger-ui", "filepath"], DirectedEdge["servant-swagger-ui", "http-media"], DirectedEdge["servant-swagger-ui", "servant"], DirectedEdge["servant-swagger-ui", "servant-blaze"], DirectedEdge["servant-swagger-ui", "servant-server"], DirectedEdge["servant-swagger-ui", "servant-swagger"], DirectedEdge["servant-swagger-ui", "template-haskell"], DirectedEdge["servant-swagger-ui", "text"], DirectedEdge["servant-swagger-ui", "wai-app-static"], DirectedEdge["servant-yaml", "base"], DirectedEdge["servant-yaml", "bytestring"], DirectedEdge["servant-yaml", "http-media"], DirectedEdge["servant-yaml", "servant"], DirectedEdge["servant-yaml", "yaml"], DirectedEdge["serversession", "aeson"], DirectedEdge["serversession", "base"], DirectedEdge["serversession", "base64-bytestring"], DirectedEdge["serversession", "bytestring"], DirectedEdge["serversession", "data-default"], DirectedEdge["serversession", "hashable"], DirectedEdge["serversession", "nonce"], DirectedEdge["serversession", "path-pieces"], DirectedEdge["serversession", "text"], DirectedEdge["serversession", "time"], DirectedEdge["serversession", "transformers"], DirectedEdge["serversession", "unordered-containers"], DirectedEdge["serversession-backend-acid-state", "acid-state"], DirectedEdge["serversession-backend-acid-state", "base"], DirectedEdge["serversession-backend-acid-state", "containers"], DirectedEdge["serversession-backend-acid-state", "mtl"], DirectedEdge["serversession-backend-acid-state", "safecopy"], DirectedEdge["serversession-backend-acid-state", "serversession"], DirectedEdge["serversession-backend-acid-state", "unordered-containers"], DirectedEdge["serversession-backend-persistent", "aeson"], DirectedEdge["serversession-backend-persistent", "base"], DirectedEdge["serversession-backend-persistent", "base64-bytestring"], DirectedEdge["serversession-backend-persistent", "bytestring"], DirectedEdge["serversession-backend-persistent", "cereal"], DirectedEdge["serversession-backend-persistent", "path-pieces"], DirectedEdge["serversession-backend-persistent", "persistent"], DirectedEdge["serversession-backend-persistent", "serversession"], DirectedEdge["serversession-backend-persistent", "tagged"], DirectedEdge["serversession-backend-persistent", "text"], DirectedEdge["serversession-backend-persistent", "time"], DirectedEdge["serversession-backend-persistent", "transformers"], DirectedEdge["serversession-backend-persistent", "unordered-containers"], DirectedEdge["serversession-backend-redis", "base"], DirectedEdge["serversession-backend-redis", "bytestring"], DirectedEdge["serversession-backend-redis", "hedis"], DirectedEdge["serversession-backend-redis", "old-locale"], DirectedEdge["serversession-backend-redis", "path-pieces"], DirectedEdge["serversession-backend-redis", "serversession"], DirectedEdge["serversession-backend-redis", "tagged"], DirectedEdge["serversession-backend-redis", "text"], DirectedEdge["serversession-backend-redis", "time"], DirectedEdge["serversession-backend-redis", "transformers"], DirectedEdge["serversession-backend-redis", "unordered-containers"], DirectedEdge["serversession-frontend-snap", "base"], DirectedEdge["serversession-frontend-snap", "bytestring"], DirectedEdge["serversession-frontend-snap", "nonce"], DirectedEdge["serversession-frontend-snap", "path-pieces"], DirectedEdge["serversession-frontend-snap", "serversession"], DirectedEdge["serversession-frontend-snap", "snap"], DirectedEdge["serversession-frontend-snap", "snap-core"], DirectedEdge["serversession-frontend-snap", "text"], DirectedEdge["serversession-frontend-snap", "time"], DirectedEdge["serversession-frontend-snap", "transformers"], DirectedEdge["serversession-frontend-snap", "unordered-containers"], DirectedEdge["serversession-frontend-wai", "base"], DirectedEdge["serversession-frontend-wai", "bytestring"], DirectedEdge["serversession-frontend-wai", "cookie"], DirectedEdge["serversession-frontend-wai", "data-default"], DirectedEdge["serversession-frontend-wai", "path-pieces"], DirectedEdge["serversession-frontend-wai", "serversession"], DirectedEdge["serversession-frontend-wai", "text"], DirectedEdge["serversession-frontend-wai", "time"], DirectedEdge["serversession-frontend-wai", "transformers"], DirectedEdge["serversession-frontend-wai", "unordered-containers"], DirectedEdge["serversession-frontend-wai", "vault"], DirectedEdge["serversession-frontend-wai", "wai"], DirectedEdge["serversession-frontend-wai", "wai-session"], DirectedEdge["serversession-frontend-yesod", "base"], DirectedEdge["serversession-frontend-yesod", "bytestring"], DirectedEdge["serversession-frontend-yesod", "containers"], DirectedEdge["serversession-frontend-yesod", "cookie"], DirectedEdge["serversession-frontend-yesod", "data-default"], DirectedEdge["serversession-frontend-yesod", "path-pieces"], DirectedEdge["serversession-frontend-yesod", "serversession"], DirectedEdge["serversession-frontend-yesod", "text"], DirectedEdge["serversession-frontend-yesod", "time"], DirectedEdge["serversession-frontend-yesod", "transformers"], DirectedEdge["serversession-frontend-yesod", "unordered-containers"], DirectedEdge["serversession-frontend-yesod", "wai"], DirectedEdge["serversession-frontend-yesod", "yesod-core"], DirectedEdge["servius", "base"], DirectedEdge["servius", "blaze-builder"], DirectedEdge["servius", "blaze-html"], DirectedEdge["servius", "bytestring"], DirectedEdge["servius", "http-types"], DirectedEdge["servius", "markdown"], DirectedEdge["servius", "shakespeare"], DirectedEdge["servius", "text"], DirectedEdge["servius", "wai"], DirectedEdge["servius", "wai-app-static"], DirectedEdge["ses-html", "base"], DirectedEdge["ses-html", "base64-bytestring"], DirectedEdge["ses-html", "blaze-html"], DirectedEdge["ses-html", "byteable"], DirectedEdge["ses-html", "bytestring"], DirectedEdge["ses-html", "cryptohash"], DirectedEdge["ses-html", "HsOpenSSL"], DirectedEdge["ses-html", "http-streams"], DirectedEdge["ses-html", "tagsoup"], DirectedEdge["ses-html", "time"], DirectedEdge["ses-html-snaplet", "snaplet-ses-html"], DirectedEdge["ses-html-snaplet", "base"], DirectedEdge["ses-html-snaplet", "blaze-html"], DirectedEdge["ses-html-snaplet", "bytestring"], DirectedEdge["ses-html-snaplet", "configurator"], DirectedEdge["ses-html-snaplet", "ses-html"], DirectedEdge["ses-html-snaplet", "snap"], DirectedEdge["ses-html-snaplet", "text"], DirectedEdge["ses-html-snaplet", "transformers"], DirectedEdge["sessions", "base"], DirectedEdge["sessions", "binary"], DirectedEdge["sessions", "bytestring"], DirectedEdge["sessions", "containers"], DirectedEdge["sessions", "mtl"], DirectedEdge["sessions", "network"], DirectedEdge["set-cover", "array"], DirectedEdge["set-cover", "base"], DirectedEdge["set-cover", "containers"], DirectedEdge["set-cover", "enummapset"], DirectedEdge["set-cover", "haha"], DirectedEdge["set-cover", "non-empty"], DirectedEdge["set-cover", "pooled-io"], DirectedEdge["set-cover", "psqueues"], DirectedEdge["set-cover", "random"], DirectedEdge["set-cover", "set-cover"], DirectedEdge["set-cover", "transformers"], DirectedEdge["set-cover", "unicode"], DirectedEdge["set-cover", "utility-ht"], DirectedEdge["set-extra", "base"], DirectedEdge["set-extra", "containers"], DirectedEdge["set-extra", "mtl"], DirectedEdge["set-extra", "syb"], DirectedEdge["set-monad", "base"], DirectedEdge["set-monad", "containers"], DirectedEdge["set-monad", "deepseq"], DirectedEdge["set-with", "sets"], DirectedEdge["set-with", "base"], DirectedEdge["set-with", "containers"], DirectedEdge["set-with", "invariant"], DirectedEdge["setdown", "array"], DirectedEdge["setdown", "base"], DirectedEdge["setdown", "bytestring"], DirectedEdge["setdown", "cmdargs"], DirectedEdge["setdown", "containers"], DirectedEdge["setdown", "directory"], DirectedEdge["setdown", "filepath"], DirectedEdge["setdown", "mtl"], DirectedEdge["setdown", "split"], DirectedEdge["setdown", "text"], DirectedEdge["setdown", "uuid"], DirectedEdge["setenv", "base"], DirectedEdge["setenv", "unix"], DirectedEdge["setgame", "base"], DirectedEdge["setgame", "random"], DirectedEdge["setgame", "setgame"], DirectedEdge["setgame", "vty"], DirectedEdge["setlocale", "base"], DirectedEdge["setops", "base"], DirectedEdge["setops", "containers"], DirectedEdge["sets", "base"], DirectedEdge["sets", "commutative"], DirectedEdge["sets", "composition"], DirectedEdge["sets", "containers"], DirectedEdge["sets", "contravariant"], DirectedEdge["sets", "hashable"], DirectedEdge["sets", "invariant"], DirectedEdge["sets", "keys"], DirectedEdge["sets", "mtl"], DirectedEdge["sets", "QuickCheck"], DirectedEdge["sets", "semigroupoids"], DirectedEdge["sets", "semigroups"], DirectedEdge["sets", "transformers"], DirectedEdge["sets", "transformers-base"], DirectedEdge["sets", "unordered-containers"], DirectedEdge["sets", "witherable"], DirectedEdge["setters", "base"], DirectedEdge["setters", "mtl"], DirectedEdge["setters", "template-haskell"], DirectedEdge["settings", "base"], DirectedEdge["settings", "text"], DirectedEdge["settings", "unordered-containers"], DirectedEdge["sexp", "attoparsec"], DirectedEdge["sexp", "base"], DirectedEdge["sexp", "bytestring"], DirectedEdge["sexp", "cmdargs"], DirectedEdge["sexp", "containers"], DirectedEdge["sexp", "dlist"], DirectedEdge["sexp", "ghc-prim"], DirectedEdge["sexp", "mtl"], DirectedEdge["sexp", "sexp"], DirectedEdge["sexp", "vector"], DirectedEdge["sexp-grammar", "array"], DirectedEdge["sexp-grammar", "base"], DirectedEdge["sexp-grammar", "containers"], DirectedEdge["sexp-grammar", "mtl"], DirectedEdge["sexp-grammar", "scientific"], DirectedEdge["sexp-grammar", "semigroups"], DirectedEdge["sexp-grammar", "split"], DirectedEdge["sexp-grammar", "stack-prism"], DirectedEdge["sexp-grammar", "template-haskell"], DirectedEdge["sexp-grammar", "text"], DirectedEdge["sexp-grammar", "wl-pprint-text"], DirectedEdge["sexp-show", "base"], DirectedEdge["sexp-show", "pretty-show"], DirectedEdge["sexpr", "base"], DirectedEdge["sexpr", "base64-string"], DirectedEdge["sexpr", "binary"], DirectedEdge["sexpr", "bytestring"], DirectedEdge["sexpr", "pretty"], DirectedEdge["sexpr", "QuickCheck"], DirectedEdge["sexpr", "random"], DirectedEdge["sext", "base"], DirectedEdge["sext", "bytestring"], DirectedEdge["sext", "template-haskell"], DirectedEdge["sext", "text"], DirectedEdge["sfml-audio", "base"], DirectedEdge["sfml-audio", "bytestring"], DirectedEdge["sfmt", "base"], DirectedEdge["sfmt", "bytestring"], DirectedEdge["sfmt", "entropy"], DirectedEdge["sfmt", "primitive"], DirectedEdge["sgd", "base"], DirectedEdge["sgd", "binary"], DirectedEdge["sgd", "bytestring"], DirectedEdge["sgd", "containers"], DirectedEdge["sgd", "deepseq"], DirectedEdge["sgd", "filepath"], DirectedEdge["sgd", "lazy-io"], DirectedEdge["sgd", "logfloat"], DirectedEdge["sgd", "monad-par"], DirectedEdge["sgd", "mtl"], DirectedEdge["sgd", "primitive"], DirectedEdge["sgd", "random"], DirectedEdge["sgd", "temporary"], DirectedEdge["sgd", "vector"], DirectedEdge["sgf", "base"], DirectedEdge["sgf", "containers"], DirectedEdge["sgf", "encoding"], DirectedEdge["sgf", "extensible-exceptions"], DirectedEdge["sgf", "mtl"], DirectedEdge["sgf", "parsec"], DirectedEdge["sgf", "split"], DirectedEdge["sgf", "time"], DirectedEdge["sgf", "transformers"], DirectedEdge["sgrep", "base"], DirectedEdge["sgrep", "bio"], DirectedEdge["sgrep", "regex-compat"], DirectedEdge["sha-streams", "base"], DirectedEdge["sha-streams", "binary"], DirectedEdge["sha-streams", "bytestring"], DirectedEdge["sha-streams", "io-streams"], DirectedEdge["sha-streams", "SHA"], DirectedEdge["sha-streams", "sha-streams"], DirectedEdge["shadower", "base"], DirectedEdge["shadower", "doctest"], DirectedEdge["shadower", "filemanip"], DirectedEdge["shadower", "fsnotify"], DirectedEdge["shadower", "MissingH"], DirectedEdge["shadower", "mtl"], DirectedEdge["shadower", "process"], DirectedEdge["shadower", "safe"], DirectedEdge["shadower", "system-filepath"], DirectedEdge["shadower", "text"], DirectedEdge["shadowsocks", "aeson"], DirectedEdge["shadowsocks", "async"], DirectedEdge["shadowsocks", "base"], DirectedEdge["shadowsocks", "binary"], DirectedEdge["shadowsocks", "bytestring"], DirectedEdge["shadowsocks", "conduit-combinators"], DirectedEdge["shadowsocks", "conduit-extra"], DirectedEdge["shadowsocks", "containers"], DirectedEdge["shadowsocks", "cryptohash"], DirectedEdge["shadowsocks", "HsOpenSSL"], DirectedEdge["shadowsocks", "iproute"], DirectedEdge["shadowsocks", "network"], DirectedEdge["shadowsocks", "optparse-applicative"], DirectedEdge["shadowsocks", "streaming-commons"], DirectedEdge["shadowsocks", "unordered-containers"], DirectedEdge["shady-gen", "applicative-numbers"], DirectedEdge["shady-gen", "base"], DirectedEdge["shady-gen", "Boolean"], DirectedEdge["shady-gen", "containers"], DirectedEdge["shady-gen", "data-treify"], DirectedEdge["shady-gen", "MemoTrie"], DirectedEdge["shady-gen", "mtl"], DirectedEdge["shady-gen", "ty"], DirectedEdge["shady-gen", "TypeCompose"], DirectedEdge["shady-gen", "vector-space"], DirectedEdge["shady-gen", "wl-pprint"], DirectedEdge["shady-graphics", "applicative-numbers"], DirectedEdge["shady-graphics", "base"], DirectedEdge["shady-graphics", "Boolean"], DirectedEdge["shady-graphics", "containers"], DirectedEdge["shady-graphics", "data-treify"], DirectedEdge["shady-graphics", "MemoTrie"], DirectedEdge["shady-graphics", "mtl"], DirectedEdge["shady-graphics", "shady-gen"], DirectedEdge["shady-graphics", "ty"], DirectedEdge["shady-graphics", "TypeCompose"], DirectedEdge["shady-graphics", "vector-space"], DirectedEdge["shady-graphics", "wl-pprint"], DirectedEdge["shake", "base"], DirectedEdge["shake", "binary"], DirectedEdge["shake", "bytestring"], DirectedEdge["shake", "deepseq"], DirectedEdge["shake", "directory"], DirectedEdge["shake", "extra"], DirectedEdge["shake", "filepath"], DirectedEdge["shake", "hashable"], DirectedEdge["shake", "js-flot"], DirectedEdge["shake", "js-jquery"], DirectedEdge["shake", "old-time"], DirectedEdge["shake", "primitive"], DirectedEdge["shake", "process"], DirectedEdge["shake", "random"], DirectedEdge["shake", "time"], DirectedEdge["shake", "transformers"], DirectedEdge["shake", "unix"], DirectedEdge["shake", "unordered-containers"], DirectedEdge["shake", "utf8-string"], DirectedEdge["shake-cabal-build", "base"], DirectedEdge["shake-cabal-build", "Cabal"], DirectedEdge["shake-cabal-build", "directory"], DirectedEdge["shake-cabal-build", "filepath"], DirectedEdge["shake-cabal-build", "process"], DirectedEdge["shake-extras", "base"], DirectedEdge["shake-extras", "bytestring"], DirectedEdge["shake-extras", "cmdargs"], DirectedEdge["shake-extras", "directory"], DirectedEdge["shake-extras", "filepath"], DirectedEdge["shake-extras", "shake"], DirectedEdge["shake-language-c", "base"], DirectedEdge["shake-language-c", "data-default-class"], DirectedEdge["shake-language-c", "fclabels"], DirectedEdge["shake-language-c", "process"], DirectedEdge["shake-language-c", "shake"], DirectedEdge["shake-language-c", "split"], DirectedEdge["shake-language-c", "unordered-containers"], DirectedEdge["shake-minify", "base"], DirectedEdge["shake-minify", "bytestring"], DirectedEdge["shake-minify", "css-text"], DirectedEdge["shake-minify", "hjsmin"], DirectedEdge["shake-minify", "shake"], DirectedEdge["shake-minify", "text"], DirectedEdge["shake-pack", "base"], DirectedEdge["shake-pack", "bytestring"], DirectedEdge["shake-pack", "bzlib"], DirectedEdge["shake-pack", "shake"], DirectedEdge["shake-pack", "tar"], DirectedEdge["shake-persist", "base"], DirectedEdge["shake-persist", "binary"], DirectedEdge["shake-persist", "directory"], DirectedEdge["shake-persist", "shake"], DirectedEdge["shake-persist", "shake-persist"], DirectedEdge["shake-persist", "template-haskell"], DirectedEdge["shaker", "base"], DirectedEdge["shaker", "bytestring"], DirectedEdge["shaker", "Cabal"], DirectedEdge["shaker", "containers"], DirectedEdge["shaker", "directory"], DirectedEdge["shaker", "filepath"], DirectedEdge["shaker", "ghc"], DirectedEdge["shaker", "ghc-paths"], DirectedEdge["shaker", "haskeline"], DirectedEdge["shaker", "haskell-src"], DirectedEdge["shaker", "HUnit"], DirectedEdge["shaker", "mtl"], DirectedEdge["shaker", "old-time"], DirectedEdge["shaker", "QuickCheck"], DirectedEdge["shaker", "regex-posix"], DirectedEdge["shaker", "template-haskell"], DirectedEdge["shaker", "test-framework"], DirectedEdge["shaker", "test-framework-hunit"], DirectedEdge["shakespeare", "aeson"], DirectedEdge["shakespeare", "base"], DirectedEdge["shakespeare", "blaze-html"], DirectedEdge["shakespeare", "blaze-markup"], DirectedEdge["shakespeare", "bytestring"], DirectedEdge["shakespeare", "containers"], DirectedEdge["shakespeare", "directory"], DirectedEdge["shakespeare", "exceptions"], DirectedEdge["shakespeare", "ghc-prim"], DirectedEdge["shakespeare", "parsec"], DirectedEdge["shakespeare", "process"], DirectedEdge["shakespeare", "scientific"], DirectedEdge["shakespeare", "template-haskell"], DirectedEdge["shakespeare", "text"], DirectedEdge["shakespeare", "time"], DirectedEdge["shakespeare", "transformers"], DirectedEdge["shakespeare", "unordered-containers"], DirectedEdge["shakespeare", "vector"], DirectedEdge["shakespeare-babel", "base"], DirectedEdge["shakespeare-babel", "classy-prelude"], DirectedEdge["shakespeare-babel", "data-default"], DirectedEdge["shakespeare-babel", "directory"], DirectedEdge["shakespeare-babel", "process"], DirectedEdge["shakespeare-babel", "shakespeare"], DirectedEdge["shakespeare-babel", "template-haskell"], DirectedEdge["shakespeare-css", "shakespeare"], DirectedEdge["shakespeare-css", "base"], DirectedEdge["shakespeare-css", "shakespeare"], DirectedEdge["shakespeare-i18n", "shakespeare"], DirectedEdge["shakespeare-i18n", "base"], DirectedEdge["shakespeare-i18n", "shakespeare"], DirectedEdge["shakespeare-js", "shakespeare"], DirectedEdge["shakespeare-js", "base"], DirectedEdge["shakespeare-js", "shakespeare"], DirectedEdge["shakespeare-text", "shakespeare"], DirectedEdge["shakespeare-text", "base"], DirectedEdge["shakespeare-text", "shakespeare"], DirectedEdge["shana", "base"], DirectedEdge["shana", "directory"], DirectedEdge["shana", "regex-posix"], DirectedEdge["shapefile", "base"], DirectedEdge["shapefile", "binary"], DirectedEdge["shapefile", "bytestring"], DirectedEdge["shapefile", "dbf"], DirectedEdge["shapefile", "filepath"], DirectedEdge["shapefile", "rwlock"], DirectedEdge["shapely-data", "base"], DirectedEdge["shapely-data", "proxy-kindness"], DirectedEdge["shapely-data", "tagged"], DirectedEdge["shapely-data", "template-haskell"], DirectedEdge["sharc-timbre", "base"], DirectedEdge["shared-buffer", "base"], DirectedEdge["shared-buffer", "bytestring"], DirectedEdge["shared-buffer", "unix"], DirectedEdge["shared-fields", "base"], DirectedEdge["shared-fields", "template-haskell"], DirectedEdge["shared-memory", "base"], DirectedEdge["shared-memory", "unix"], DirectedEdge["sharedio", "base"], DirectedEdge["she", "base"], DirectedEdge["she", "filepath"], DirectedEdge["she", "mtl"], DirectedEdge["shelduck", "aeson"], DirectedEdge["shelduck", "aeson-pretty"], DirectedEdge["shelduck", "async"], DirectedEdge["shelduck", "base"], DirectedEdge["shelduck", "bytestring"], DirectedEdge["shelduck", "directory"], DirectedEdge["shelduck", "exceptions"], DirectedEdge["shelduck", "hastache"], DirectedEdge["shelduck", "http-client"], DirectedEdge["shelduck", "lens"], DirectedEdge["shelduck", "lens-aeson"], DirectedEdge["shelduck", "mtl"], DirectedEdge["shelduck", "random"], DirectedEdge["shelduck", "shelduck"], DirectedEdge["shelduck", "shelly"], DirectedEdge["shelduck", "Spock"], DirectedEdge["shelduck", "stm"], DirectedEdge["shelduck", "text"], DirectedEdge["shelduck", "time"], DirectedEdge["shelduck", "transformers"], DirectedEdge["shelduck", "unix"], DirectedEdge["shelduck", "unordered-containers"], DirectedEdge["shelduck", "uuid"], DirectedEdge["shelduck", "wreq"], DirectedEdge["shelduck", "yesod"], DirectedEdge["shell-conduit", "async"], DirectedEdge["shell-conduit", "base"], DirectedEdge["shell-conduit", "bytestring"], DirectedEdge["shell-conduit", "conduit"], DirectedEdge["shell-conduit", "conduit-extra"], DirectedEdge["shell-conduit", "control-monad-loop"], DirectedEdge["shell-conduit", "directory"], DirectedEdge["shell-conduit", "filepath"], DirectedEdge["shell-conduit", "monad-control"], DirectedEdge["shell-conduit", "monads-tf"], DirectedEdge["shell-conduit", "process"], DirectedEdge["shell-conduit", "resourcet"], DirectedEdge["shell-conduit", "semigroups"], DirectedEdge["shell-conduit", "split"], DirectedEdge["shell-conduit", "template-haskell"], DirectedEdge["shell-conduit", "text"], DirectedEdge["shell-conduit", "transformers"], DirectedEdge["shell-conduit", "transformers-base"], DirectedEdge["shell-conduit", "unix"], DirectedEdge["shell-escape", "base"], DirectedEdge["shell-escape", "binary"], DirectedEdge["shell-escape", "bytestring"], DirectedEdge["shell-escape", "containers"], DirectedEdge["shell-escape", "vector"], DirectedEdge["shell-monad", "base"], DirectedEdge["shell-monad", "containers"], DirectedEdge["shell-monad", "text"], DirectedEdge["shell-monad", "unix"], DirectedEdge["shell-pipe", "process"], DirectedEdge["shell-pipe", "base"], DirectedEdge["shellish", "base"], DirectedEdge["shellish", "bytestring"], DirectedEdge["shellish", "directory"], DirectedEdge["shellish", "filepath"], DirectedEdge["shellish", "mtl"], DirectedEdge["shellish", "process"], DirectedEdge["shellish", "strict"], DirectedEdge["shellish", "time"], DirectedEdge["shellish", "unix-compat"], DirectedEdge["shellmate", "base"], DirectedEdge["shellmate", "bytestring"], DirectedEdge["shellmate", "directory"], DirectedEdge["shellmate", "feed"], DirectedEdge["shellmate", "filepath"], DirectedEdge["shellmate", "HTTP"], DirectedEdge["shellmate", "network-uri"], DirectedEdge["shellmate", "process"], DirectedEdge["shellmate", "tagsoup"], DirectedEdge["shellmate", "temporary"], DirectedEdge["shellmate", "transformers"], DirectedEdge["shellmate", "xml"], DirectedEdge["shelltestrunner", "base"], DirectedEdge["shelltestrunner", "cmdargs"], DirectedEdge["shelltestrunner", "Diff"], DirectedEdge["shelltestrunner", "directory"], DirectedEdge["shelltestrunner", "filemanip"], DirectedEdge["shelltestrunner", "filepath"], DirectedEdge["shelltestrunner", "HUnit"], DirectedEdge["shelltestrunner", "parsec"], DirectedEdge["shelltestrunner", "pretty-show"], DirectedEdge["shelltestrunner", "process"], DirectedEdge["shelltestrunner", "regex-tdfa"], DirectedEdge["shelltestrunner", "safe"], DirectedEdge["shelltestrunner", "test-framework"], DirectedEdge["shelltestrunner", "test-framework-hunit"], DirectedEdge["shelltestrunner", "utf8-string"], DirectedEdge["shelly", "async"], DirectedEdge["shelly", "base"], DirectedEdge["shelly", "bytestring"], DirectedEdge["shelly", "containers"], DirectedEdge["shelly", "directory"], DirectedEdge["shelly", "enclosed-exceptions"], DirectedEdge["shelly", "exceptions"], DirectedEdge["shelly", "lifted-async"], DirectedEdge["shelly", "lifted-base"], DirectedEdge["shelly", "monad-control"], DirectedEdge["shelly", "mtl"], DirectedEdge["shelly", "process"], DirectedEdge["shelly", "system-fileio"], DirectedEdge["shelly", "system-filepath"], DirectedEdge["shelly", "text"], DirectedEdge["shelly", "time"], DirectedEdge["shelly", "transformers"], DirectedEdge["shelly", "transformers-base"], DirectedEdge["shelly", "unix-compat"], DirectedEdge["shelly-extra", "async"], DirectedEdge["shelly-extra", "base"], DirectedEdge["shelly-extra", "mtl"], DirectedEdge["shelly-extra", "SafeSemaphore"], DirectedEdge["shelly-extra", "shelly"], DirectedEdge["shine", "base"], DirectedEdge["shine", "ghcjs-dom"], DirectedEdge["shine", "ghcjs-prim"], DirectedEdge["shine", "keycode"], DirectedEdge["shine", "mtl"], DirectedEdge["shine", "time"], DirectedEdge["shine", "transformers"], DirectedEdge["shine-varying", "base"], DirectedEdge["shine-varying", "ghcjs-dom"], DirectedEdge["shine-varying", "keycode"], DirectedEdge["shine-varying", "shine"], DirectedEdge["shine-varying", "varying"], DirectedEdge["shivers-cfg", "base"], DirectedEdge["shivers-cfg", "containers"], DirectedEdge["shivers-cfg", "directory"], DirectedEdge["shivers-cfg", "HPDF"], DirectedEdge["shivers-cfg", "language-dot"], DirectedEdge["shivers-cfg", "mtl"], DirectedEdge["shivers-cfg", "pretty"], DirectedEdge["shivers-cfg", "process"], DirectedEdge["shoap", "base"], DirectedEdge["shoap", "curl"], DirectedEdge["shortcircuit", "base"], DirectedEdge["shortcut-links", "base"], DirectedEdge["shortcut-links", "text"], DirectedEdge["shorten-strings", "base"], DirectedEdge["shorten-strings", "text"], DirectedEdge["should-not-typecheck", "base"], DirectedEdge["should-not-typecheck", "deepseq"], DirectedEdge["should-not-typecheck", "HUnit"], DirectedEdge["show", "base"], DirectedEdge["show", "syb"], DirectedEdge["show-type", "base"], DirectedEdge["showdown", "base"], DirectedEdge["showdown", "glade"], DirectedEdge["showdown", "gtk"], DirectedEdge["showdown", "random"], DirectedEdge["shpider", "base"], DirectedEdge["shpider", "bytestring"], DirectedEdge["shpider", "containers"], DirectedEdge["shpider", "curl"], DirectedEdge["shpider", "mtl"], DirectedEdge["shpider", "regex-posix"], DirectedEdge["shpider", "tagsoup"], DirectedEdge["shpider", "tagsoup-parsec"], DirectedEdge["shpider", "time"], DirectedEdge["shpider", "url"], DirectedEdge["shpider", "web-encodings"], DirectedEdge["shplit", "base"], DirectedEdge["shplit", "mtl"], DirectedEdge["shqq", "base"], DirectedEdge["shqq", "parsec"], DirectedEdge["shqq", "posix-escape"], DirectedEdge["shqq", "process"], DirectedEdge["shqq", "template-haskell"], DirectedEdge["shqq", "unix"], DirectedEdge["shuffle", "array"], DirectedEdge["shuffle", "base"], DirectedEdge["shuffle", "Cabal"], DirectedEdge["shuffle", "containers"], DirectedEdge["shuffle", "directory"], DirectedEdge["shuffle", "filepath"], DirectedEdge["shuffle", "network"], DirectedEdge["shuffle", "network-uri"], DirectedEdge["shuffle", "process"], DirectedEdge["shuffle", "shuffle"], DirectedEdge["shuffle", "uhc-util"], DirectedEdge["shuffle", "uuagc"], DirectedEdge["shuffle", "uuagc-cabal"], DirectedEdge["shuffle", "uulib"], DirectedEdge["sieve", "base"], DirectedEdge["sifflet", "base"], DirectedEdge["sifflet", "cairo"], DirectedEdge["sifflet", "containers"], DirectedEdge["sifflet", "directory"], DirectedEdge["sifflet", "fgl"], DirectedEdge["sifflet", "filepath"], DirectedEdge["sifflet", "glib"], DirectedEdge["sifflet", "gtk"], DirectedEdge["sifflet", "hxt"], DirectedEdge["sifflet", "mtl"], DirectedEdge["sifflet", "parsec"], DirectedEdge["sifflet", "process"], DirectedEdge["sifflet", "sifflet"], DirectedEdge["sifflet", "text"], DirectedEdge["sifflet", "unix"], DirectedEdge["sifflet-lib", "sifflet"], DirectedEdge["sifflet-lib", "base"], DirectedEdge["sifflet-lib", "cairo"], DirectedEdge["sifflet-lib", "containers"], DirectedEdge["sifflet-lib", "directory"], DirectedEdge["sifflet-lib", "fgl"], DirectedEdge["sifflet-lib", "filepath"], DirectedEdge["sifflet-lib", "glib"], DirectedEdge["sifflet-lib", "gtk"], DirectedEdge["sifflet-lib", "hxt"], DirectedEdge["sifflet-lib", "mtl"], DirectedEdge["sifflet-lib", "parsec"], DirectedEdge["sifflet-lib", "process"], DirectedEdge["sifflet-lib", "unix"], DirectedEdge["sign", "base"], DirectedEdge["sign", "containers"], DirectedEdge["sign", "deepseq"], DirectedEdge["sign", "hashable"], DirectedEdge["sign", "lattices"], DirectedEdge["sign", "universe-base"], DirectedEdge["signal", "base"], DirectedEdge["signal", "signal"], DirectedEdge["signal", "unix"], DirectedEdge["signals", "base"], DirectedEdge["signals", "containers"], DirectedEdge["signals", "hashable"], DirectedEdge["signals", "imperative-edsl-vhdl"], DirectedEdge["signals", "language-vhdl"], DirectedEdge["signals", "mtl"], DirectedEdge["signals", "observable-sharing"], DirectedEdge["signals", "operational-alacarte"], DirectedEdge["signed-multiset", "base"], DirectedEdge["signed-multiset", "containers"], DirectedEdge["silently", "base"], DirectedEdge["silently", "deepseq"], DirectedEdge["silently", "directory"], DirectedEdge["simd", "base"], DirectedEdge["simd", "ghc-prim"], DirectedEdge["simd", "primitive"], DirectedEdge["simd", "vector"], DirectedEdge["simgi", "base"], DirectedEdge["simgi", "containers"], DirectedEdge["simgi", "mtl"], DirectedEdge["simgi", "parsec"], DirectedEdge["simgi", "random"], DirectedEdge["simple", "aeson"], DirectedEdge["simple", "attoparsec"], DirectedEdge["simple", "base"], DirectedEdge["simple", "base64-bytestring"], DirectedEdge["simple", "blaze-builder"], DirectedEdge["simple", "bytestring"], DirectedEdge["simple", "cmdargs"], DirectedEdge["simple", "directory"], DirectedEdge["simple", "filepath"], DirectedEdge["simple", "http-types"], DirectedEdge["simple", "mime-types"], DirectedEdge["simple", "monad-control"], DirectedEdge["simple", "mtl"], DirectedEdge["simple", "process"], DirectedEdge["simple", "setenv"], DirectedEdge["simple", "simple-templates"], DirectedEdge["simple", "text"], DirectedEdge["simple", "transformers"], DirectedEdge["simple", "transformers-base"], DirectedEdge["simple", "unordered-containers"], DirectedEdge["simple", "vector"], DirectedEdge["simple", "wai"], DirectedEdge["simple", "wai-extra"], DirectedEdge["simple-actors", "base"], DirectedEdge["simple-actors", "chan-split"], DirectedEdge["simple-actors", "contravariant"], DirectedEdge["simple-actors", "mtl"], DirectedEdge["simple-actors", "transformers"], DirectedEdge["simple-atom", "base"], DirectedEdge["simple-atom", "containers"], DirectedEdge["simple-atom", "deepseq"], DirectedEdge["simple-atom", "murmur-hash"], DirectedEdge["simple-bluetooth", "base"], DirectedEdge["simple-bluetooth", "bytestring"], DirectedEdge["simple-bluetooth", "network"], DirectedEdge["simple-c-value", "base"], DirectedEdge["simple-c-value", "DebugTraceHelpers"], DirectedEdge["simple-c-value", "dlist"], DirectedEdge["simple-c-value", "ghc-prim"], DirectedEdge["simple-c-value", "tuple"], DirectedEdge["simple-conduit", "base"], DirectedEdge["simple-conduit", "bifunctors"], DirectedEdge["simple-conduit", "bytestring"], DirectedEdge["simple-conduit", "chunked-data"], DirectedEdge["simple-conduit", "containers"], DirectedEdge["simple-conduit", "either"], DirectedEdge["simple-conduit", "exceptions"], DirectedEdge["simple-conduit", "filepath"], DirectedEdge["simple-conduit", "free"], DirectedEdge["simple-conduit", "lifted-async"], DirectedEdge["simple-conduit", "lifted-base"], DirectedEdge["simple-conduit", "mmorph"], DirectedEdge["simple-conduit", "monad-control"], DirectedEdge["simple-conduit", "mono-traversable"], DirectedEdge["simple-conduit", "mtl"], DirectedEdge["simple-conduit", "mwc-random"], DirectedEdge["simple-conduit", "primitive"], DirectedEdge["simple-conduit", "semigroups"], DirectedEdge["simple-conduit", "stm"], DirectedEdge["simple-conduit", "streaming-commons"], DirectedEdge["simple-conduit", "text"], DirectedEdge["simple-conduit", "transformers"], DirectedEdge["simple-conduit", "transformers-base"], DirectedEdge["simple-conduit", "vector"], DirectedEdge["simple-config", "base"], DirectedEdge["simple-config", "bytestring"], DirectedEdge["simple-config", "data-default"], DirectedEdge["simple-config", "network"], DirectedEdge["simple-config", "network-uri"], DirectedEdge["simple-config", "parsec"], DirectedEdge["simple-config", "template-haskell"], DirectedEdge["simple-config", "transformers"], DirectedEdge["simple-css", "base"], DirectedEdge["simple-css", "blaze-html"], DirectedEdge["simple-css", "hashable"], DirectedEdge["simple-css", "language-css"], DirectedEdge["simple-css", "unordered-containers"], DirectedEdge["simple-eval", "base"], DirectedEdge["simple-eval", "parsec"], DirectedEdge["simple-eval", "simple-eval"], DirectedEdge["simple-eval", "text"], DirectedEdge["simple-eval", "transformers"], DirectedEdge["simple-firewire", "base"], DirectedEdge["simple-firewire", "CV"], DirectedEdge["simple-form", "base"], DirectedEdge["simple-form", "blaze-html"], DirectedEdge["simple-form", "digestive-functors"], DirectedEdge["simple-form", "email-validate"], DirectedEdge["simple-form", "network-uri"], DirectedEdge["simple-form", "old-locale"], DirectedEdge["simple-form", "text"], DirectedEdge["simple-form", "time"], DirectedEdge["simple-form", "transformers"], DirectedEdge["simple-genetic-algorithm", "base"], DirectedEdge["simple-genetic-algorithm", "deepseq"], DirectedEdge["simple-genetic-algorithm", "parallel"], DirectedEdge["simple-genetic-algorithm", "random"], DirectedEdge["simple-genetic-algorithm-mr", "base"], DirectedEdge["simple-genetic-algorithm-mr", "deepseq"], DirectedEdge["simple-genetic-algorithm-mr", "MonadRandom"], DirectedEdge["simple-genetic-algorithm-mr", "parallel"], DirectedEdge["simple-genetic-algorithm-mr", "random"], DirectedEdge["simple-genetic-algorithm-mr", "transformers"], DirectedEdge["simple-get-opt", "base"], DirectedEdge["simple-index", "base"], DirectedEdge["simple-index", "containers"], DirectedEdge["simple-index", "hashable"], DirectedEdge["simple-index", "safecopy"], DirectedEdge["simple-index", "unordered-containers"], DirectedEdge["simple-log", "async"], DirectedEdge["simple-log", "base"], DirectedEdge["simple-log", "containers"], DirectedEdge["simple-log", "deepseq"], DirectedEdge["simple-log", "directory"], DirectedEdge["simple-log", "exceptions"], DirectedEdge["simple-log", "filepath"], DirectedEdge["simple-log", "mtl"], DirectedEdge["simple-log", "SafeSemaphore"], DirectedEdge["simple-log", "text"], DirectedEdge["simple-log", "time"], DirectedEdge["simple-log", "transformers"], DirectedEdge["simple-log-syslog", "base"], DirectedEdge["simple-log-syslog", "hsyslog"], DirectedEdge["simple-log-syslog", "simple-log"], DirectedEdge["simple-log-syslog", "text"], DirectedEdge["simple-neural-networks", "base"], DirectedEdge["simple-neural-networks", "containers"], DirectedEdge["simple-neural-networks", "deepseq"], DirectedEdge["simple-neural-networks", "parallel"], DirectedEdge["simple-neural-networks", "random"], DirectedEdge["simple-neural-networks", "split"], DirectedEdge["simple-nix", "base"], DirectedEdge["simple-nix", "classy-prelude"], DirectedEdge["simple-nix", "error-list"], DirectedEdge["simple-nix", "MissingH"], DirectedEdge["simple-nix", "mtl"], DirectedEdge["simple-nix", "parsec"], DirectedEdge["simple-nix", "system-filepath"], DirectedEdge["simple-nix", "text"], DirectedEdge["simple-nix", "text-render"], DirectedEdge["simple-nix", "unordered-containers"], DirectedEdge["simple-observer", "base"], DirectedEdge["simple-pascal", "base"], DirectedEdge["simple-pascal", "containers"], DirectedEdge["simple-pascal", "filepath"], DirectedEdge["simple-pascal", "mtl"], DirectedEdge["simple-pascal", "parsec"], DirectedEdge["simple-pascal", "simple-stacked-vm"], DirectedEdge["simple-pipe", "base"], DirectedEdge["simple-pipe", "bytestring"], DirectedEdge["simple-pipe", "lifted-base"], DirectedEdge["simple-pipe", "monad-control"], DirectedEdge["simple-pipe", "monads-tf"], DirectedEdge["simple-pipe", "stm"], DirectedEdge["simple-pipe", "transformers-base"], DirectedEdge["simple-postgresql-orm", "base"], DirectedEdge["simple-postgresql-orm", "bytestring"], DirectedEdge["simple-postgresql-orm", "directory"], DirectedEdge["simple-postgresql-orm", "filepath"], DirectedEdge["simple-postgresql-orm", "postgresql-orm"], DirectedEdge["simple-postgresql-orm", "postgresql-simple"], DirectedEdge["simple-postgresql-orm", "resource-pool"], DirectedEdge["simple-postgresql-orm", "simple"], DirectedEdge["simple-postgresql-orm", "transformers"], DirectedEdge["simple-reflect", "base"], DirectedEdge["simple-rope", "base"], DirectedEdge["simple-rope", "bytestring"], DirectedEdge["simple-rope", "QuickCheck"], DirectedEdge["simple-sendfile", "base"], DirectedEdge["simple-sendfile", "bytestring"], DirectedEdge["simple-sendfile", "conduit"], DirectedEdge["simple-sendfile", "conduit-extra"], DirectedEdge["simple-sendfile", "network"], DirectedEdge["simple-sendfile", "resourcet"], DirectedEdge["simple-sendfile", "transformers"], DirectedEdge["simple-sendfile", "unix"], DirectedEdge["simple-server", "base"], DirectedEdge["simple-server", "bytestring"], DirectedEdge["simple-server", "concurrent-extra"], DirectedEdge["simple-server", "containers"], DirectedEdge["simple-server", "hashtables"], DirectedEdge["simple-server", "network"], DirectedEdge["simple-server", "time"], DirectedEdge["simple-server", "unbounded-delays"], DirectedEdge["simple-session", "base"], DirectedEdge["simple-session", "base64-bytestring"], DirectedEdge["simple-session", "blaze-builder"], DirectedEdge["simple-session", "byteable"], DirectedEdge["simple-session", "bytestring"], DirectedEdge["simple-session", "containers"], DirectedEdge["simple-session", "cookie"], DirectedEdge["simple-session", "cryptohash"], DirectedEdge["simple-session", "http-types"], DirectedEdge["simple-session", "simple"], DirectedEdge["simple-session", "transformers"], DirectedEdge["simple-session", "wai"], DirectedEdge["simple-session", "wai-extra"], DirectedEdge["simple-sessions", "base"], DirectedEdge["simple-sessions", "indexed"], DirectedEdge["simple-sessions", "synchronous-channels"], DirectedEdge["simple-smt", "base"], DirectedEdge["simple-smt", "process"], DirectedEdge["simple-sql-parser", "base"], DirectedEdge["simple-sql-parser", "mtl"], DirectedEdge["simple-sql-parser", "parsec"], DirectedEdge["simple-sql-parser", "pretty"], DirectedEdge["simple-stacked-vm", "array"], DirectedEdge["simple-stacked-vm", "base"], DirectedEdge["simple-stacked-vm", "binary-state"], DirectedEdge["simple-stacked-vm", "containers"], DirectedEdge["simple-stacked-vm", "filepath"], DirectedEdge["simple-stacked-vm", "mtl"], DirectedEdge["simple-stacked-vm", "parsec"], DirectedEdge["simple-tabular", "base"], DirectedEdge["simple-templates", "aeson"], DirectedEdge["simple-templates", "attoparsec"], DirectedEdge["simple-templates", "base"], DirectedEdge["simple-templates", "scientific"], DirectedEdge["simple-templates", "text"], DirectedEdge["simple-templates", "unordered-containers"], DirectedEdge["simple-templates", "vector"], DirectedEdge["simple-vec3", "base"], DirectedEdge["simple-vec3", "vector"], DirectedEdge["simpleargs", "base"], DirectedEdge["simpleirc", "base"], DirectedEdge["simpleirc", "bytestring"], DirectedEdge["simpleirc", "connection"], DirectedEdge["simpleirc", "containers"], DirectedEdge["simpleirc", "network"], DirectedEdge["simpleirc", "old-locale"], DirectedEdge["simpleirc", "time"], DirectedEdge["simpleirc-lens", "base"], DirectedEdge["simpleirc-lens", "bytestring"], DirectedEdge["simpleirc-lens", "simpleirc"], DirectedEdge["simplenote", "base"], DirectedEdge["simplenote", "bytestring"], DirectedEdge["simplenote", "curl"], DirectedEdge["simplenote", "dataenc"], DirectedEdge["simplenote", "download-curl"], DirectedEdge["simplenote", "HTTP"], DirectedEdge["simplenote", "json"], DirectedEdge["simplenote", "time"], DirectedEdge["simplenote", "utf8-string"], DirectedEdge["simpleprelude", "base"], DirectedEdge["simpleprelude", "ghc-paths"], DirectedEdge["simpleprelude", "haskell-src-exts"], DirectedEdge["simpleprelude", "process"], DirectedEdge["simpleprelude", "uniplate"], DirectedEdge["simplesmtpclient", "array"], DirectedEdge["simplesmtpclient", "base"], DirectedEdge["simplesmtpclient", "directory"], DirectedEdge["simplesmtpclient", "network"], DirectedEdge["simplesmtpclient", "old-time"], DirectedEdge["simplessh", "base"], DirectedEdge["simplessh", "bytestring"], DirectedEdge["simplessh", "mtl"], DirectedEdge["simplest-sqlite", "base"], DirectedEdge["simplest-sqlite", "bytestring"], DirectedEdge["simplest-sqlite", "exception-hierarchy"], DirectedEdge["simplest-sqlite", "template-haskell"], DirectedEdge["simplest-sqlite", "text"], DirectedEdge["simplex", "base"], DirectedEdge["simplex", "directory"], DirectedEdge["simplex", "filepath"], DirectedEdge["simplex", "mtl"], DirectedEdge["simplex", "process"], DirectedEdge["simplex", "random"], DirectedEdge["simplex", "regex-compat"], DirectedEdge["simplex", "split"], DirectedEdge["simplex", "time"], DirectedEdge["simplex-basic", "base"], DirectedEdge["simplex-basic", "bifunctors"], DirectedEdge["simplex-basic", "linear-grammar"], DirectedEdge["simplex-basic", "mtl"], DirectedEdge["simplex-basic", "QuickCheck"], DirectedEdge["simplex-basic", "transformers"], DirectedEdge["simseq", "base"], DirectedEdge["simseq", "bio"], DirectedEdge["simseq", "bytestring"], DirectedEdge["simseq", "random"], DirectedEdge["simtreelo", "base"], DirectedEdge["simtreelo", "containers"], DirectedEdge["sindre", "array"], DirectedEdge["sindre", "attoparsec"], DirectedEdge["sindre", "base"], DirectedEdge["sindre", "bytestring"], DirectedEdge["sindre", "containers"], DirectedEdge["sindre", "mtl"], DirectedEdge["sindre", "parsec"], DirectedEdge["sindre", "permute"], DirectedEdge["sindre", "process"], DirectedEdge["sindre", "regex-pcre"], DirectedEdge["sindre", "setlocale"], DirectedEdge["sindre", "text"], DirectedEdge["sindre", "unix"], DirectedEdge["sindre", "utf8-string"], DirectedEdge["sindre", "X11-rm"], DirectedEdge["sindre", "x11-xim"], DirectedEdge["sindre", "X11-xshape"], DirectedEdge["singleton-nats", "base"], DirectedEdge["singleton-nats", "singletons"], DirectedEdge["singletons", "base"], DirectedEdge["singletons", "containers"], DirectedEdge["singletons", "mtl"], DirectedEdge["singletons", "syb"], DirectedEdge["singletons", "template-haskell"], DirectedEdge["singletons", "th-desugar"], DirectedEdge["sink", "base"], DirectedEdge["siphash", "memory"], DirectedEdge["siphash", "base"], DirectedEdge["siphash", "bytestring"], DirectedEdge["siphash", "cpu"], DirectedEdge["sirkel", "base"], DirectedEdge["sirkel", "binary"], DirectedEdge["sirkel", "bytestring"], DirectedEdge["sirkel", "containers"], DirectedEdge["sirkel", "hashtables"], DirectedEdge["sirkel", "random"], DirectedEdge["sirkel", "remote"], DirectedEdge["sirkel", "SHA"], DirectedEdge["sirkel", "transformers"], DirectedEdge["sitemap", "base"], DirectedEdge["sitemap", "lens"], DirectedEdge["sitemap", "taggy"], DirectedEdge["sitemap", "taggy-lens"], DirectedEdge["sitemap", "text"], DirectedEdge["sized", "base"], DirectedEdge["sized", "constraints"], DirectedEdge["sized", "containers"], DirectedEdge["sized", "ListLike"], DirectedEdge["sized", "monomorphic"], DirectedEdge["sized", "type-natural"], DirectedEdge["sized", "vector"], DirectedEdge["sized-types", "array"], DirectedEdge["sized-types", "base"], DirectedEdge["sized-types", "base-compat"], DirectedEdge["sized-types", "containers"], DirectedEdge["sized-types", "singletons"], DirectedEdge["sized-types", "sized-types"], DirectedEdge["sized-vector", "base"], DirectedEdge["sized-vector", "constraints"], DirectedEdge["sized-vector", "deepseq"], DirectedEdge["sized-vector", "equational-reasoning"], DirectedEdge["sized-vector", "hashable"], DirectedEdge["sized-vector", "monomorphic"], DirectedEdge["sized-vector", "singletons"], DirectedEdge["sized-vector", "template-haskell"], DirectedEdge["sized-vector", "type-natural"], DirectedEdge["sizes", "base"], DirectedEdge["sizes", "bytestring"], DirectedEdge["sizes", "cmdargs"], DirectedEdge["sizes", "deepseq"], DirectedEdge["sizes", "dlist"], DirectedEdge["sizes", "lens"], DirectedEdge["sizes", "parallel-io"], DirectedEdge["sizes", "regex-posix"], DirectedEdge["sizes", "system-fileio"], DirectedEdge["sizes", "system-filepath"], DirectedEdge["sizes", "text"], DirectedEdge["sizes", "unix"], DirectedEdge["sjsp", "base"], DirectedEdge["sjsp", "blaze-builder"], DirectedEdge["sjsp", "bytestring"], DirectedEdge["sjsp", "filepath"], DirectedEdge["sjsp", "ghc-prim"], DirectedEdge["sjsp", "language-javascript"], DirectedEdge["sjsp", "syb"], DirectedEdge["sjsp", "unordered-containers"], DirectedEdge["skein", "base"], DirectedEdge["skein", "bytestring"], DirectedEdge["skein", "cereal"], DirectedEdge["skein", "crypto-api"], DirectedEdge["skein", "tagged"], DirectedEdge["skeleton", "argparser"], DirectedEdge["skeleton", "attoparsec"], DirectedEdge["skeleton", "base"], DirectedEdge["skeleton", "bytestring"], DirectedEdge["skeleton", "filepath"], DirectedEdge["skeleton", "hex"], DirectedEdge["skeleton", "posix-escape"], DirectedEdge["skeleton", "process"], DirectedEdge["skeleton", "time"], DirectedEdge["skeletons", "ansi-wl-pprint"], DirectedEdge["skeletons", "base"], DirectedEdge["skeletons", "containers"], DirectedEdge["skeletons", "directory"], DirectedEdge["skeletons", "filepath"], DirectedEdge["skeletons", "text"], DirectedEdge["skeletons", "tinytemplate"], DirectedEdge["skeletons", "transformers"], DirectedEdge["skeletons", "transformers-compat"], DirectedEdge["skell", "base"], DirectedEdge["skell", "blaze-html"], DirectedEdge["skell", "bytestring"], DirectedEdge["skell", "containers"], DirectedEdge["skell", "http-types"], DirectedEdge["skell", "text"], DirectedEdge["skell", "wai"], DirectedEdge["skemmtun", "base"], DirectedEdge["skemmtun", "bytestring"], DirectedEdge["skemmtun", "data-default"], DirectedEdge["skemmtun", "http-client"], DirectedEdge["skemmtun", "http-types"], DirectedEdge["skemmtun", "lens"], DirectedEdge["skemmtun", "text"], DirectedEdge["skemmtun", "time"], DirectedEdge["skemmtun", "wreq"], DirectedEdge["skemmtun", "xml-conduit"], DirectedEdge["skulk", "base"], DirectedEdge["skype4hs", "attoparsec"], DirectedEdge["skype4hs", "base"], DirectedEdge["skype4hs", "bytestring"], DirectedEdge["skype4hs", "lifted-base"], DirectedEdge["skype4hs", "monad-control"], DirectedEdge["skype4hs", "mtl"], DirectedEdge["skype4hs", "stm"], DirectedEdge["skype4hs", "text"], DirectedEdge["skype4hs", "time"], DirectedEdge["skype4hs", "transformers-base"], DirectedEdge["skypelogexport", "attoparsec"], DirectedEdge["skypelogexport", "base"], DirectedEdge["skypelogexport", "bytestring"], DirectedEdge["skypelogexport", "containers"], DirectedEdge["skypelogexport", "directory"], DirectedEdge["skypelogexport", "filepath"], DirectedEdge["skypelogexport", "ghc-binary"], DirectedEdge["skypelogexport", "IfElse"], DirectedEdge["skypelogexport", "old-locale"], DirectedEdge["skypelogexport", "regex-pcre"], DirectedEdge["skypelogexport", "time"], DirectedEdge["skypelogexport", "utf8-string"], DirectedEdge["slack", "aeson"], DirectedEdge["slack", "base"], DirectedEdge["slack", "containers"], DirectedEdge["slack", "either"], DirectedEdge["slack", "http-conduit"], DirectedEdge["slack", "mtl"], DirectedEdge["slack", "old-locale"], DirectedEdge["slack", "text"], DirectedEdge["slack", "time"], DirectedEdge["slack", "transformers"], DirectedEdge["slack-api", "aeson"], DirectedEdge["slack-api", "base"], DirectedEdge["slack-api", "bytestring"], DirectedEdge["slack-api", "containers"], DirectedEdge["slack-api", "errors"], DirectedEdge["slack-api", "HsOpenSSL"], DirectedEdge["slack-api", "io-streams"], DirectedEdge["slack-api", "lens"], DirectedEdge["slack-api", "lens-aeson"], DirectedEdge["slack-api", "monad-loops"], DirectedEdge["slack-api", "mtl"], DirectedEdge["slack-api", "network"], DirectedEdge["slack-api", "network-uri"], DirectedEdge["slack-api", "openssl-streams"], DirectedEdge["slack-api", "text"], DirectedEdge["slack-api", "time"], DirectedEdge["slack-api", "time-locale-compat"], DirectedEdge["slack-api", "transformers"], DirectedEdge["slack-api", "websockets"], DirectedEdge["slack-api", "wreq"], DirectedEdge["slack-notify-haskell", "base"], DirectedEdge["slack-notify-haskell", "bytestring"], DirectedEdge["slack-notify-haskell", "containers"], DirectedEdge["slack-notify-haskell", "HTTP"], DirectedEdge["slack-notify-haskell", "http-client"], DirectedEdge["slack-notify-haskell", "http-client-tls"], DirectedEdge["slack-notify-haskell", "network"], DirectedEdge["slack-notify-haskell", "slack-notify-haskell"], DirectedEdge["slack-notify-haskell", "text"], DirectedEdge["slave-thread", "base"], DirectedEdge["slave-thread", "base-prelude"], DirectedEdge["slave-thread", "list-t"], DirectedEdge["slave-thread", "mmorph"], DirectedEdge["slave-thread", "partial-handler"], DirectedEdge["slave-thread", "stm-containers"], DirectedEdge["slave-thread", "transformers"], DirectedEdge["sleep", "base"], DirectedEdge["sleep", "time"], DirectedEdge["slice-cpp-gen", "base"], DirectedEdge["slice-cpp-gen", "bytestring"], DirectedEdge["slice-cpp-gen", "cmdargs"], DirectedEdge["slice-cpp-gen", "containers"], DirectedEdge["slice-cpp-gen", "directory"], DirectedEdge["slice-cpp-gen", "filepath"], DirectedEdge["slice-cpp-gen", "language-slice"], DirectedEdge["slice-cpp-gen", "MissingH"], DirectedEdge["slidemews", "aeson"], DirectedEdge["slidemews", "base"], DirectedEdge["slidemews", "bytestring"], DirectedEdge["slidemews", "MonadCatchIO-transformers"], DirectedEdge["slidemews", "mtl"], DirectedEdge["slidemews", "pandoc"], DirectedEdge["slidemews", "snap-core"], DirectedEdge["slidemews", "snap-server"], DirectedEdge["slidemews", "utf8-string"], DirectedEdge["sloane", "aeson"], DirectedEdge["sloane", "ansi-terminal"], DirectedEdge["sloane", "attoparsec"], DirectedEdge["sloane", "base"], DirectedEdge["sloane", "bloomfilter"], DirectedEdge["sloane", "bytestring"], DirectedEdge["sloane", "conduit"], DirectedEdge["sloane", "conduit-extra"], DirectedEdge["sloane", "containers"], DirectedEdge["sloane", "directory"], DirectedEdge["sloane", "filepath"], DirectedEdge["sloane", "http-conduit"], DirectedEdge["sloane", "http-types"], DirectedEdge["sloane", "optparse-applicative"], DirectedEdge["sloane", "resourcet"], DirectedEdge["sloane", "stringsearch"], DirectedEdge["sloane", "text"], DirectedEdge["sloane", "transformers"], DirectedEdge["slot-lambda", "base"], DirectedEdge["slot-lambda", "containers"], DirectedEdge["slot-lambda", "haskell-src-exts"], DirectedEdge["slot-lambda", "haskell-src-meta"], DirectedEdge["slot-lambda", "syb"], DirectedEdge["slot-lambda", "template-haskell"], DirectedEdge["slot-lambda", "vector"], DirectedEdge["sloth", "base"], DirectedEdge["sloth", "mtl"], DirectedEdge["sloth", "process"], DirectedEdge["slug", "aeson"], DirectedEdge["slug", "base"], DirectedEdge["slug", "exceptions"], DirectedEdge["slug", "path-pieces"], DirectedEdge["slug", "persistent"], DirectedEdge["slug", "text"], DirectedEdge["smallarray", "base"], DirectedEdge["smallarray", "bytestring"], DirectedEdge["smallarray", "deepseq"], DirectedEdge["smallarray", "hashable"], DirectedEdge["smallcaps", "attoparsec"], DirectedEdge["smallcaps", "base"], DirectedEdge["smallcaps", "containers"], DirectedEdge["smallcaps", "data-default"], DirectedEdge["smallcaps", "directory"], DirectedEdge["smallcaps", "filepath"], DirectedEdge["smallcaps", "parsec"], DirectedEdge["smallcaps", "smallcaps"], DirectedEdge["smallcaps", "text"], DirectedEdge["smallcaps", "transformers"], DirectedEdge["smallcheck", "base"], DirectedEdge["smallcheck", "ghc-prim"], DirectedEdge["smallcheck", "logict"], DirectedEdge["smallcheck", "mtl"], DirectedEdge["smallcheck", "pretty"], DirectedEdge["smallcheck-laws", "base"], DirectedEdge["smallcheck-laws", "smallcheck"], DirectedEdge["smallcheck-laws", "smallcheck-series"], DirectedEdge["smallcheck-laws", "tagged"], DirectedEdge["smallcheck-laws", "transformers"], DirectedEdge["smallcheck-lens", "base"], DirectedEdge["smallcheck-lens", "lens"], DirectedEdge["smallcheck-lens", "smallcheck"], DirectedEdge["smallcheck-lens", "smallcheck-series"], DirectedEdge["smallcheck-lens", "tagged"], DirectedEdge["smallcheck-lens", "transformers"], DirectedEdge["smallcheck-series", "base"], DirectedEdge["smallcheck-series", "bytestring"], DirectedEdge["smallcheck-series", "containers"], DirectedEdge["smallcheck-series", "logict"], DirectedEdge["smallcheck-series", "smallcheck"], DirectedEdge["smallcheck-series", "text"], DirectedEdge["smallcheck-series", "transformers"], DirectedEdge["smallpt-hs", "base"], DirectedEdge["smallpt-hs", "vector"], DirectedEdge["smallstring", "base"], DirectedEdge["smallstring", "bytestring"], DirectedEdge["smallstring", "deepseq"], DirectedEdge["smallstring", "hashable"], DirectedEdge["smallstring", "smallarray"], DirectedEdge["smallstring", "text"], DirectedEdge["smallstring", "utf8-string"], DirectedEdge["smaoin", "base"], DirectedEdge["smaoin", "bytestring"], DirectedEdge["smaoin", "random"], DirectedEdge["smaoin", "text"], DirectedEdge["smaoin", "uuid"], DirectedEdge["smartGroup", "base"], DirectedEdge["smartGroup", "bytestring"], DirectedEdge["smartGroup", "containers"], DirectedEdge["smartGroup", "template-haskell"], DirectedEdge["smartcheck", "base"], DirectedEdge["smartcheck", "containers"], DirectedEdge["smartcheck", "generic-deriving"], DirectedEdge["smartcheck", "ghc-prim"], DirectedEdge["smartcheck", "lazysmallcheck"], DirectedEdge["smartcheck", "mtl"], DirectedEdge["smartcheck", "QuickCheck"], DirectedEdge["smartcheck", "random"], DirectedEdge["smartcheck", "smartcheck"], DirectedEdge["smartcheck", "testing-feat"], DirectedEdge["smartconstructor", "base"], DirectedEdge["smartconstructor", "template-haskell"], DirectedEdge["smartword", "base"], DirectedEdge["smartword", "pretty"], DirectedEdge["smartword", "unix"], DirectedEdge["smartword", "utf8-string"], DirectedEdge["sme", "base"], DirectedEdge["smoothie", "aeson"], DirectedEdge["smoothie", "base"], DirectedEdge["smoothie", "linear"], DirectedEdge["smoothie", "text"], DirectedEdge["smoothie", "vector"], DirectedEdge["smsaero", "aeson"], DirectedEdge["smsaero", "base"], DirectedEdge["smsaero", "either"], DirectedEdge["smsaero", "lens"], DirectedEdge["smsaero", "servant"], DirectedEdge["smsaero", "servant-client"], DirectedEdge["smsaero", "servant-docs"], DirectedEdge["smsaero", "text"], DirectedEdge["smsaero", "time"], DirectedEdge["smt-lib", "array"], DirectedEdge["smt-lib", "base"], DirectedEdge["smt-lib", "directory"], DirectedEdge["smt-lib", "polyparse"], DirectedEdge["smtLib", "base"], DirectedEdge["smtLib", "pretty"], DirectedEdge["smtlib2", "array"], DirectedEdge["smtlib2", "atto-lisp"], DirectedEdge["smtlib2", "attoparsec"], DirectedEdge["smtlib2", "base"], DirectedEdge["smtlib2", "blaze-builder"], DirectedEdge["smtlib2", "bytestring"], DirectedEdge["smtlib2", "constraints"], DirectedEdge["smtlib2", "containers"], DirectedEdge["smtlib2", "data-fix"], DirectedEdge["smtlib2", "mtl"], DirectedEdge["smtlib2", "process"], DirectedEdge["smtlib2", "tagged"], DirectedEdge["smtlib2", "text"], DirectedEdge["smtlib2", "transformers"], DirectedEdge["smtp-mail", "array"], DirectedEdge["smtp-mail", "base"], DirectedEdge["smtp-mail", "base16-bytestring"], DirectedEdge["smtp-mail", "base64-bytestring"], DirectedEdge["smtp-mail", "bytestring"], DirectedEdge["smtp-mail", "cryptohash"], DirectedEdge["smtp-mail", "filepath"], DirectedEdge["smtp-mail", "mime-mail"], DirectedEdge["smtp-mail", "network"], DirectedEdge["smtp-mail", "text"], DirectedEdge["smtp-mail-ng", "attoparsec"], DirectedEdge["smtp-mail-ng", "base"], DirectedEdge["smtp-mail-ng", "base16-bytestring"], DirectedEdge["smtp-mail-ng", "base64-bytestring"], DirectedEdge["smtp-mail-ng", "bytestring"], DirectedEdge["smtp-mail-ng", "crypto-random"], DirectedEdge["smtp-mail-ng", "cryptohash"], DirectedEdge["smtp-mail-ng", "filepath"], DirectedEdge["smtp-mail-ng", "haskeline"], DirectedEdge["smtp-mail-ng", "mime-mail"], DirectedEdge["smtp-mail-ng", "mtl"], DirectedEdge["smtp-mail-ng", "network"], DirectedEdge["smtp-mail-ng", "stringsearch"], DirectedEdge["smtp-mail-ng", "text"], DirectedEdge["smtp-mail-ng", "tls"], DirectedEdge["smtp-mail-ng", "transformers"], DirectedEdge["smtp-mail-ng", "transformers-compat"], DirectedEdge["smtp-mail-ng", "x509-store"], DirectedEdge["smtp-mail-ng", "x509-system"], DirectedEdge["smtp2mta", "base"], DirectedEdge["smtp2mta", "network"], DirectedEdge["smtp2mta", "process"], DirectedEdge["smtps-gmail", "attoparsec"], DirectedEdge["smtps-gmail", "base"], DirectedEdge["smtps-gmail", "base64-bytestring"], DirectedEdge["smtps-gmail", "bytestring"], DirectedEdge["smtps-gmail", "conduit"], DirectedEdge["smtps-gmail", "conduit-extra"], DirectedEdge["smtps-gmail", "data-default"], DirectedEdge["smtps-gmail", "filepath"], DirectedEdge["smtps-gmail", "mime-mail"], DirectedEdge["smtps-gmail", "network"], DirectedEdge["smtps-gmail", "resourcet"], DirectedEdge["smtps-gmail", "stringsearch"], DirectedEdge["smtps-gmail", "text"], DirectedEdge["smtps-gmail", "tls"], DirectedEdge["smtps-gmail", "transformers"], DirectedEdge["snake", "base"], DirectedEdge["snake", "random"], DirectedEdge["snake", "split"], DirectedEdge["snake", "terminal-size"], DirectedEdge["snake-game", "base"], DirectedEdge["snake-game", "GLUT"], DirectedEdge["snake-game", "OpenGL"], DirectedEdge["snake-game", "random"], DirectedEdge["snap", "aeson"], DirectedEdge["snap", "attoparsec"], DirectedEdge["snap", "base"], DirectedEdge["snap", "bytestring"], DirectedEdge["snap", "cereal"], DirectedEdge["snap", "clientsession"], DirectedEdge["snap", "comonad"], DirectedEdge["snap", "configurator"], DirectedEdge["snap", "containers"], DirectedEdge["snap", "directory"], DirectedEdge["snap", "directory-tree"], DirectedEdge["snap", "dlist"], DirectedEdge["snap", "either"], DirectedEdge["snap", "filepath"], DirectedEdge["snap", "hashable"], DirectedEdge["snap", "heist"], DirectedEdge["snap", "lens"], DirectedEdge["snap", "logict"], DirectedEdge["snap", "MonadCatchIO-transformers"], DirectedEdge["snap", "mtl"], DirectedEdge["snap", "mwc-random"], DirectedEdge["snap", "old-time"], DirectedEdge["snap", "pwstore-fast"], DirectedEdge["snap", "regex-posix"], DirectedEdge["snap", "snap-core"], DirectedEdge["snap", "snap-server"], DirectedEdge["snap", "stm"], DirectedEdge["snap", "template-haskell"], DirectedEdge["snap", "text"], DirectedEdge["snap", "time"], DirectedEdge["snap", "transformers"], DirectedEdge["snap", "unordered-containers"], DirectedEdge["snap", "vector"], DirectedEdge["snap", "vector-algorithms"], DirectedEdge["snap", "xmlhtml"], DirectedEdge["snap-accept", "base"], DirectedEdge["snap-accept", "http-media"], DirectedEdge["snap-accept", "snap-core"], DirectedEdge["snap-auth-cli", "aeson"], DirectedEdge["snap-auth-cli", "aeson-pretty"], DirectedEdge["snap-auth-cli", "base"], DirectedEdge["snap-auth-cli", "bytestring"], DirectedEdge["snap-auth-cli", "clientsession"], DirectedEdge["snap-auth-cli", "cmdargs"], DirectedEdge["snap-auth-cli", "snap"], DirectedEdge["snap-auth-cli", "text"], DirectedEdge["snap-auth-cli", "unordered-containers"], DirectedEdge["snap-auth-cli", "utf8-string"], DirectedEdge["snap-blaze", "base"], DirectedEdge["snap-blaze", "blaze-html"], DirectedEdge["snap-blaze", "snap-core"], DirectedEdge["snap-blaze-clay", "base"], DirectedEdge["snap-blaze-clay", "blaze-html"], DirectedEdge["snap-blaze-clay", "clay"], DirectedEdge["snap-blaze-clay", "snap-core"], DirectedEdge["snap-configuration-utilities", "base"], DirectedEdge["snap-configuration-utilities", "configurator"], DirectedEdge["snap-configuration-utilities", "text"], DirectedEdge["snap-configuration-utilities", "unordered-containers"], DirectedEdge["snap-core", "attoparsec"], DirectedEdge["snap-core", "attoparsec-enumerator"], DirectedEdge["snap-core", "base"], DirectedEdge["snap-core", "blaze-builder"], DirectedEdge["snap-core", "blaze-builder-enumerator"], DirectedEdge["snap-core", "bytestring"], DirectedEdge["snap-core", "bytestring-mmap"], DirectedEdge["snap-core", "case-insensitive"], DirectedEdge["snap-core", "containers"], DirectedEdge["snap-core", "deepseq"], DirectedEdge["snap-core", "directory"], DirectedEdge["snap-core", "enumerator"], DirectedEdge["snap-core", "filepath"], DirectedEdge["snap-core", "hashable"], DirectedEdge["snap-core", "HUnit"], DirectedEdge["snap-core", "MonadCatchIO-transformers"], DirectedEdge["snap-core", "mtl"], DirectedEdge["snap-core", "old-locale"], DirectedEdge["snap-core", "random"], DirectedEdge["snap-core", "regex-posix"], DirectedEdge["snap-core", "text"], DirectedEdge["snap-core", "time"], DirectedEdge["snap-core", "time-locale-compat"], DirectedEdge["snap-core", "unix"], DirectedEdge["snap-core", "unix-compat"], DirectedEdge["snap-core", "unordered-containers"], DirectedEdge["snap-core", "vector"], DirectedEdge["snap-core", "zlib-enum"], DirectedEdge["snap-cors", "attoparsec"], DirectedEdge["snap-cors", "base"], DirectedEdge["snap-cors", "bytestring"], DirectedEdge["snap-cors", "case-insensitive"], DirectedEdge["snap-cors", "hashable"], DirectedEdge["snap-cors", "network"], DirectedEdge["snap-cors", "network-uri"], DirectedEdge["snap-cors", "snap"], DirectedEdge["snap-cors", "text"], DirectedEdge["snap-cors", "transformers"], DirectedEdge["snap-cors", "unordered-containers"], DirectedEdge["snap-elm", "base"], DirectedEdge["snap-elm", "bytestring"], DirectedEdge["snap-elm", "directory"], DirectedEdge["snap-elm", "Elm"], DirectedEdge["snap-elm", "filepath"], DirectedEdge["snap-elm", "process"], DirectedEdge["snap-elm", "snap-core"], DirectedEdge["snap-elm", "text"], DirectedEdge["snap-elm", "transformers"], DirectedEdge["snap-error-collector", "async"], DirectedEdge["snap-error-collector", "base"], DirectedEdge["snap-error-collector", "containers"], DirectedEdge["snap-error-collector", "monad-loops"], DirectedEdge["snap-error-collector", "MonadCatchIO-transformers"], DirectedEdge["snap-error-collector", "snap"], DirectedEdge["snap-error-collector", "stm"], DirectedEdge["snap-error-collector", "time"], DirectedEdge["snap-error-collector", "transformers"], DirectedEdge["snap-extras", "aeson"], DirectedEdge["snap-extras", "base"], DirectedEdge["snap-extras", "blaze-builder"], DirectedEdge["snap-extras", "blaze-html"], DirectedEdge["snap-extras", "bytestring"], DirectedEdge["snap-extras", "case-insensitive"], DirectedEdge["snap-extras", "configurator"], DirectedEdge["snap-extras", "containers"], DirectedEdge["snap-extras", "data-default"], DirectedEdge["snap-extras", "digestive-functors"], DirectedEdge["snap-extras", "digestive-functors-heist"], DirectedEdge["snap-extras", "digestive-functors-snap"], DirectedEdge["snap-extras", "directory-tree"], DirectedEdge["snap-extras", "filepath"], DirectedEdge["snap-extras", "heist"], DirectedEdge["snap-extras", "jmacro"], DirectedEdge["snap-extras", "lens"], DirectedEdge["snap-extras", "mtl"], DirectedEdge["snap-extras", "pcre-light"], DirectedEdge["snap-extras", "readable"], DirectedEdge["snap-extras", "safe"], DirectedEdge["snap-extras", "snap"], DirectedEdge["snap-extras", "snap-core"], DirectedEdge["snap-extras", "snap-extras"], DirectedEdge["snap-extras", "snap-server"], DirectedEdge["snap-extras", "text"], DirectedEdge["snap-extras", "time"], DirectedEdge["snap-extras", "transformers"], DirectedEdge["snap-extras", "wl-pprint-text"], DirectedEdge["snap-extras", "xmlhtml"], DirectedEdge["snap-language", "attoparsec"], DirectedEdge["snap-language", "base"], DirectedEdge["snap-language", "bytestring"], DirectedEdge["snap-language", "containers"], DirectedEdge["snap-language", "snap-core"], DirectedEdge["snap-loader-dynamic", "base"], DirectedEdge["snap-loader-dynamic", "directory"], DirectedEdge["snap-loader-dynamic", "directory-tree"], DirectedEdge["snap-loader-dynamic", "hint"], DirectedEdge["snap-loader-dynamic", "mtl"], DirectedEdge["snap-loader-dynamic", "old-time"], DirectedEdge["snap-loader-dynamic", "snap-core"], DirectedEdge["snap-loader-dynamic", "template-haskell"], DirectedEdge["snap-loader-dynamic", "time"], DirectedEdge["snap-loader-dynamic", "unix"], DirectedEdge["snap-loader-static", "base"], DirectedEdge["snap-loader-static", "template-haskell"], DirectedEdge["snap-predicates", "attoparsec"], DirectedEdge["snap-predicates", "base"], DirectedEdge["snap-predicates", "bytestring"], DirectedEdge["snap-predicates", "case-insensitive"], DirectedEdge["snap-predicates", "containers"], DirectedEdge["snap-predicates", "monads-tf"], DirectedEdge["snap-predicates", "snap-core"], DirectedEdge["snap-predicates", "text"], DirectedEdge["snap-predicates", "transformers"], DirectedEdge["snap-routes", "base"], DirectedEdge["snap-routes", "blaze-builder"], DirectedEdge["snap-routes", "bytestring"], DirectedEdge["snap-routes", "containers"], DirectedEdge["snap-routes", "filepath"], DirectedEdge["snap-routes", "http-types"], DirectedEdge["snap-routes", "mime-types"], DirectedEdge["snap-routes", "path-pieces"], DirectedEdge["snap-routes", "random"], DirectedEdge["snap-routes", "snap"], DirectedEdge["snap-routes", "template-haskell"], DirectedEdge["snap-routes", "text"], DirectedEdge["snap-server", "attoparsec"], DirectedEdge["snap-server", "attoparsec-enumerator"], DirectedEdge["snap-server", "base"], DirectedEdge["snap-server", "blaze-builder"], DirectedEdge["snap-server", "blaze-builder-enumerator"], DirectedEdge["snap-server", "bytestring"], DirectedEdge["snap-server", "case-insensitive"], DirectedEdge["snap-server", "containers"], DirectedEdge["snap-server", "enumerator"], DirectedEdge["snap-server", "HsOpenSSL"], DirectedEdge["snap-server", "MonadCatchIO-transformers"], DirectedEdge["snap-server", "mtl"], DirectedEdge["snap-server", "network"], DirectedEdge["snap-server", "old-locale"], DirectedEdge["snap-server", "snap-core"], DirectedEdge["snap-server", "text"], DirectedEdge["snap-server", "time"], DirectedEdge["snap-server", "unix"], DirectedEdge["snap-server", "unix-compat"], DirectedEdge["snap-testing", "hspec-snap"], DirectedEdge["snap-testing", "async"], DirectedEdge["snap-testing", "base"], DirectedEdge["snap-testing", "bytestring"], DirectedEdge["snap-testing", "containers"], DirectedEdge["snap-testing", "digestive-functors"], DirectedEdge["snap-testing", "HandsomeSoup"], DirectedEdge["snap-testing", "hxt"], DirectedEdge["snap-testing", "io-streams"], DirectedEdge["snap-testing", "mtl"], DirectedEdge["snap-testing", "process"], DirectedEdge["snap-testing", "QuickCheck"], DirectedEdge["snap-testing", "snap"], DirectedEdge["snap-testing", "snap-core"], DirectedEdge["snap-testing", "text"], DirectedEdge["snap-testing", "transformers"], DirectedEdge["snap-utils", "base"], DirectedEdge["snap-utils", "bytestring"], DirectedEdge["snap-utils", "heist"], DirectedEdge["snap-utils", "http-types"], DirectedEdge["snap-utils", "MonadCatchIO-transformers"], DirectedEdge["snap-utils", "mtl"], DirectedEdge["snap-utils", "snap"], DirectedEdge["snap-utils", "snap-core"], DirectedEdge["snap-utils", "text"], DirectedEdge["snap-utils", "xmlhtml"], DirectedEdge["snap-web-routes", "base"], DirectedEdge["snap-web-routes", "bytestring"], DirectedEdge["snap-web-routes", "heist"], DirectedEdge["snap-web-routes", "mtl"], DirectedEdge["snap-web-routes", "snap"], DirectedEdge["snap-web-routes", "snap-core"], DirectedEdge["snap-web-routes", "text"], DirectedEdge["snap-web-routes", "web-routes"], DirectedEdge["snap-web-routes", "xmlhtml"], DirectedEdge["snaplet-acid-state", "acid-state"], DirectedEdge["snaplet-acid-state", "base"], DirectedEdge["snaplet-acid-state", "mtl"], DirectedEdge["snaplet-acid-state", "snap"], DirectedEdge["snaplet-acid-state", "text"], DirectedEdge["snaplet-acid-state", "transformers"], DirectedEdge["snaplet-actionlog", "base"], DirectedEdge["snaplet-actionlog", "blaze-builder"], DirectedEdge["snaplet-actionlog", "bytestring"], DirectedEdge["snaplet-actionlog", "digestive-functors"], DirectedEdge["snaplet-actionlog", "digestive-functors-heist"], DirectedEdge["snaplet-actionlog", "digestive-functors-snap"], DirectedEdge["snaplet-actionlog", "errors"], DirectedEdge["snaplet-actionlog", "heist"], DirectedEdge["snaplet-actionlog", "persistent"], DirectedEdge["snaplet-actionlog", "persistent-postgresql"], DirectedEdge["snaplet-actionlog", "persistent-template"], DirectedEdge["snaplet-actionlog", "readable"], DirectedEdge["snaplet-actionlog", "restful-snap"], DirectedEdge["snaplet-actionlog", "snap"], DirectedEdge["snaplet-actionlog", "snap-extras"], DirectedEdge["snaplet-actionlog", "snaplet-persistent"], DirectedEdge["snaplet-actionlog", "text"], DirectedEdge["snaplet-actionlog", "time"], DirectedEdge["snaplet-actionlog", "transformers"], DirectedEdge["snaplet-actionlog", "unordered-containers"], DirectedEdge["snaplet-actionlog", "xmlhtml"], DirectedEdge["snaplet-amqp", "amqp"], DirectedEdge["snaplet-amqp", "base"], DirectedEdge["snaplet-amqp", "bytestring"], DirectedEdge["snaplet-amqp", "configurator"], DirectedEdge["snaplet-amqp", "lens"], DirectedEdge["snaplet-amqp", "monad-control"], DirectedEdge["snaplet-amqp", "mtl"], DirectedEdge["snaplet-amqp", "network"], DirectedEdge["snaplet-amqp", "resource-pool"], DirectedEdge["snaplet-amqp", "snap"], DirectedEdge["snaplet-amqp", "transformers"], DirectedEdge["snaplet-auth-acid", "acid-state"], DirectedEdge["snaplet-auth-acid", "aeson"], DirectedEdge["snaplet-auth-acid", "attoparsec"], DirectedEdge["snaplet-auth-acid", "base"], DirectedEdge["snaplet-auth-acid", "cereal"], DirectedEdge["snaplet-auth-acid", "clientsession"], DirectedEdge["snaplet-auth-acid", "directory"], DirectedEdge["snaplet-auth-acid", "errors"], DirectedEdge["snaplet-auth-acid", "filepath"], DirectedEdge["snaplet-auth-acid", "hashable"], DirectedEdge["snaplet-auth-acid", "lens"], DirectedEdge["snaplet-auth-acid", "MonadCatchIO-transformers"], DirectedEdge["snaplet-auth-acid", "mtl"], DirectedEdge["snaplet-auth-acid", "safecopy"], DirectedEdge["snaplet-auth-acid", "scientific"], DirectedEdge["snaplet-auth-acid", "snap"], DirectedEdge["snaplet-auth-acid", "snap-core"], DirectedEdge["snaplet-auth-acid", "text"], DirectedEdge["snaplet-auth-acid", "time"], DirectedEdge["snaplet-auth-acid", "unordered-containers"], DirectedEdge["snaplet-auth-acid", "vector"], DirectedEdge["snaplet-coffee", "base"], DirectedEdge["snaplet-coffee", "bytestring"], DirectedEdge["snaplet-coffee", "configurator"], DirectedEdge["snaplet-coffee", "directory"], DirectedEdge["snaplet-coffee", "filepath"], DirectedEdge["snaplet-coffee", "haskell-coffee"], DirectedEdge["snaplet-coffee", "mtl"], DirectedEdge["snaplet-coffee", "snap"], DirectedEdge["snaplet-coffee", "snap-core"], DirectedEdge["snaplet-css-min", "base"], DirectedEdge["snaplet-css-min", "bytestring"], DirectedEdge["snaplet-css-min", "css-text"], DirectedEdge["snaplet-css-min", "directory"], DirectedEdge["snaplet-css-min", "filepath"], DirectedEdge["snaplet-css-min", "lens"], DirectedEdge["snaplet-css-min", "snap"], DirectedEdge["snaplet-css-min", "text"], DirectedEdge["snaplet-css-min", "utf8-string"], DirectedEdge["snaplet-environments", "base"], DirectedEdge["snaplet-environments", "bson"], DirectedEdge["snaplet-environments", "configurator"], DirectedEdge["snaplet-environments", "mtl"], DirectedEdge["snaplet-environments", "regex-tdfa"], DirectedEdge["snaplet-environments", "snap"], DirectedEdge["snaplet-environments", "snap-core"], DirectedEdge["snaplet-environments", "text"], DirectedEdge["snaplet-environments", "unordered-containers"], DirectedEdge["snaplet-fay", "aeson"], DirectedEdge["snaplet-fay", "base"], DirectedEdge["snaplet-fay", "bytestring"], DirectedEdge["snaplet-fay", "configurator"], DirectedEdge["snaplet-fay", "directory"], DirectedEdge["snaplet-fay", "fay"], DirectedEdge["snaplet-fay", "filepath"], DirectedEdge["snaplet-fay", "mtl"], DirectedEdge["snaplet-fay", "snap"], DirectedEdge["snaplet-fay", "snap-core"], DirectedEdge["snaplet-fay", "transformers"], DirectedEdge["snaplet-ghcjs", "base"], DirectedEdge["snaplet-ghcjs", "directory"], DirectedEdge["snaplet-ghcjs", "filepath"], DirectedEdge["snaplet-ghcjs", "lens"], DirectedEdge["snaplet-ghcjs", "mtl"], DirectedEdge["snaplet-ghcjs", "process"], DirectedEdge["snaplet-ghcjs", "snap"], DirectedEdge["snaplet-ghcjs", "snap-core"], DirectedEdge["snaplet-ghcjs", "string-conversions"], DirectedEdge["snaplet-ghcjs", "transformers"], DirectedEdge["snaplet-hasql", "aeson"], DirectedEdge["snaplet-hasql", "base"], DirectedEdge["snaplet-hasql", "bytestring"], DirectedEdge["snaplet-hasql", "clientsession"], DirectedEdge["snaplet-hasql", "configurator"], DirectedEdge["snaplet-hasql", "hasql"], DirectedEdge["snaplet-hasql", "hasql-backend"], DirectedEdge["snaplet-hasql", "lens"], DirectedEdge["snaplet-hasql", "mtl"], DirectedEdge["snaplet-hasql", "snap"], DirectedEdge["snaplet-hasql", "text"], DirectedEdge["snaplet-hasql", "time"], DirectedEdge["snaplet-haxl", "base"], DirectedEdge["snaplet-haxl", "haxl"], DirectedEdge["snaplet-haxl", "MonadCatchIO-transformers"], DirectedEdge["snaplet-haxl", "snap"], DirectedEdge["snaplet-haxl", "transformers"], DirectedEdge["snaplet-hdbc", "base"], DirectedEdge["snaplet-hdbc", "bytestring"], DirectedEdge["snaplet-hdbc", "clientsession"], DirectedEdge["snaplet-hdbc", "containers"], DirectedEdge["snaplet-hdbc", "convertible"], DirectedEdge["snaplet-hdbc", "data-lens"], DirectedEdge["snaplet-hdbc", "data-lens-template"], DirectedEdge["snaplet-hdbc", "HDBC"], DirectedEdge["snaplet-hdbc", "MonadCatchIO-transformers"], DirectedEdge["snaplet-hdbc", "mtl"], DirectedEdge["snaplet-hdbc", "resource-pool-catchio"], DirectedEdge["snaplet-hdbc", "snap"], DirectedEdge["snaplet-hdbc", "text"], DirectedEdge["snaplet-hdbc", "time"], DirectedEdge["snaplet-hdbc", "transformers"], DirectedEdge["snaplet-hdbc", "unordered-containers"], DirectedEdge["snaplet-hslogger", "base"], DirectedEdge["snaplet-hslogger", "configurator"], DirectedEdge["snaplet-hslogger", "hslogger"], DirectedEdge["snaplet-hslogger", "mtl"], DirectedEdge["snaplet-hslogger", "snap"], DirectedEdge["snaplet-hslogger", "transformers"], DirectedEdge["snaplet-i18n", "base"], DirectedEdge["snaplet-i18n", "bytestring"], DirectedEdge["snaplet-i18n", "configurator"], DirectedEdge["snaplet-i18n", "filepath"], DirectedEdge["snaplet-i18n", "heist"], DirectedEdge["snaplet-i18n", "lens"], DirectedEdge["snaplet-i18n", "snap"], DirectedEdge["snaplet-i18n", "snap-loader-static"], DirectedEdge["snaplet-i18n", "snaplet-i18n"], DirectedEdge["snaplet-i18n", "text"], DirectedEdge["snaplet-i18n", "xmlhtml"], DirectedEdge["snaplet-influxdb", "base"], DirectedEdge["snaplet-influxdb", "bytestring"], DirectedEdge["snaplet-influxdb", "configurator"], DirectedEdge["snaplet-influxdb", "http-client"], DirectedEdge["snaplet-influxdb", "influxdb"], DirectedEdge["snaplet-influxdb", "lens"], DirectedEdge["snaplet-influxdb", "monad-control"], DirectedEdge["snaplet-influxdb", "mtl"], DirectedEdge["snaplet-influxdb", "network"], DirectedEdge["snaplet-influxdb", "snap"], DirectedEdge["snaplet-influxdb", "text"], DirectedEdge["snaplet-influxdb", "transformers"], DirectedEdge["snaplet-lss", "base"], DirectedEdge["snaplet-lss", "directory"], DirectedEdge["snaplet-lss", "filepath"], DirectedEdge["snaplet-lss", "heist"], DirectedEdge["snaplet-lss", "lss"], DirectedEdge["snaplet-lss", "snap"], DirectedEdge["snaplet-lss", "text"], DirectedEdge["snaplet-lss", "xmlhtml"], DirectedEdge["snaplet-mandrill", "base"], DirectedEdge["snaplet-mandrill", "configurator"], DirectedEdge["snaplet-mandrill", "mandrill"], DirectedEdge["snaplet-mandrill", "mtl"], DirectedEdge["snaplet-mandrill", "network"], DirectedEdge["snaplet-mandrill", "snap"], DirectedEdge["snaplet-mandrill", "transformers"], DirectedEdge["snaplet-mongoDB", "base"], DirectedEdge["snaplet-mongoDB", "bson"], DirectedEdge["snaplet-mongoDB", "bytestring"], DirectedEdge["snaplet-mongoDB", "compact-string-fix"], DirectedEdge["snaplet-mongoDB", "containers"], DirectedEdge["snaplet-mongoDB", "haskell-src-exts"], DirectedEdge["snaplet-mongoDB", "MonadCatchIO-transformers"], DirectedEdge["snaplet-mongoDB", "mongoDB"], DirectedEdge["snaplet-mongoDB", "mtl"], DirectedEdge["snaplet-mongoDB", "parsec"], DirectedEdge["snaplet-mongoDB", "regular"], DirectedEdge["snaplet-mongoDB", "safe"], DirectedEdge["snaplet-mongoDB", "snap"], DirectedEdge["snaplet-mongoDB", "snap-core"], DirectedEdge["snaplet-mongoDB", "template-haskell"], DirectedEdge["snaplet-mongoDB", "text"], DirectedEdge["snaplet-mongoDB", "time"], DirectedEdge["snaplet-mongodb-minimalistic", "base"], DirectedEdge["snaplet-mongodb-minimalistic", "lens"], DirectedEdge["snaplet-mongodb-minimalistic", "mongoDB"], DirectedEdge["snaplet-mongodb-minimalistic", "mtl"], DirectedEdge["snaplet-mongodb-minimalistic", "snap"], DirectedEdge["snaplet-mongodb-minimalistic", "text"], DirectedEdge["snaplet-mongodb-minimalistic", "transformers"], DirectedEdge["snaplet-mysql-simple", "base"], DirectedEdge["snaplet-mysql-simple", "bytestring"], DirectedEdge["snaplet-mysql-simple", "clientsession"], DirectedEdge["snaplet-mysql-simple", "configurator"], DirectedEdge["snaplet-mysql-simple", "containers"], DirectedEdge["snaplet-mysql-simple", "errors"], DirectedEdge["snaplet-mysql-simple", "lens"], DirectedEdge["snaplet-mysql-simple", "MonadCatchIO-transformers"], DirectedEdge["snaplet-mysql-simple", "mtl"], DirectedEdge["snaplet-mysql-simple", "mysql"], DirectedEdge["snaplet-mysql-simple", "mysql-simple"], DirectedEdge["snaplet-mysql-simple", "resource-pool-catchio"], DirectedEdge["snaplet-mysql-simple", "snap"], DirectedEdge["snaplet-mysql-simple", "text"], DirectedEdge["snaplet-mysql-simple", "transformers"], DirectedEdge["snaplet-mysql-simple", "unordered-containers"], DirectedEdge["snaplet-oauth", "aeson"], DirectedEdge["snaplet-oauth", "base"], DirectedEdge["snaplet-oauth", "bytestring"], DirectedEdge["snaplet-oauth", "bytestring-show"], DirectedEdge["snaplet-oauth", "data-lens"], DirectedEdge["snaplet-oauth", "data-lens-template"], DirectedEdge["snaplet-oauth", "failure"], DirectedEdge["snaplet-oauth", "hashable"], DirectedEdge["snaplet-oauth", "heist"], DirectedEdge["snaplet-oauth", "http-conduit"], DirectedEdge["snaplet-oauth", "http-types"], DirectedEdge["snaplet-oauth", "MonadCatchIO-mtl"], DirectedEdge["snaplet-oauth", "snap"], DirectedEdge["snaplet-oauth", "snap-core"], DirectedEdge["snaplet-oauth", "snap-loader-dynamic"], DirectedEdge["snaplet-oauth", "snap-loader-static"], DirectedEdge["snaplet-oauth", "text"], DirectedEdge["snaplet-oauth", "unordered-containers"], DirectedEdge["snaplet-persistent", "base"], DirectedEdge["snaplet-persistent", "bytestring"], DirectedEdge["snaplet-persistent", "clientsession"], DirectedEdge["snaplet-persistent", "configurator"], DirectedEdge["snaplet-persistent", "errors"], DirectedEdge["snaplet-persistent", "heist"], DirectedEdge["snaplet-persistent", "lens"], DirectedEdge["snaplet-persistent", "monad-logger"], DirectedEdge["snaplet-persistent", "MonadCatchIO-transformers"], DirectedEdge["snaplet-persistent", "mtl"], DirectedEdge["snaplet-persistent", "persistent"], DirectedEdge["snaplet-persistent", "persistent-postgresql"], DirectedEdge["snaplet-persistent", "persistent-template"], DirectedEdge["snaplet-persistent", "readable"], DirectedEdge["snaplet-persistent", "resource-pool"], DirectedEdge["snaplet-persistent", "resourcet"], DirectedEdge["snaplet-persistent", "safe"], DirectedEdge["snaplet-persistent", "snap"], DirectedEdge["snaplet-persistent", "text"], DirectedEdge["snaplet-persistent", "time"], DirectedEdge["snaplet-persistent", "transformers"], DirectedEdge["snaplet-persistent", "unordered-containers"], DirectedEdge["snaplet-postgresql-simple", "base"], DirectedEdge["snaplet-postgresql-simple", "bytestring"], DirectedEdge["snaplet-postgresql-simple", "clientsession"], DirectedEdge["snaplet-postgresql-simple", "configurator"], DirectedEdge["snaplet-postgresql-simple", "lens"], DirectedEdge["snaplet-postgresql-simple", "MonadCatchIO-transformers"], DirectedEdge["snaplet-postgresql-simple", "mtl"], DirectedEdge["snaplet-postgresql-simple", "postgresql-simple"], DirectedEdge["snaplet-postgresql-simple", "resource-pool-catchio"], DirectedEdge["snaplet-postgresql-simple", "snap"], DirectedEdge["snaplet-postgresql-simple", "text"], DirectedEdge["snaplet-postgresql-simple", "transformers"], DirectedEdge["snaplet-postgresql-simple", "unordered-containers"], DirectedEdge["snaplet-postmark", "base"], DirectedEdge["snaplet-postmark", "configurator"], DirectedEdge["snaplet-postmark", "mtl"], DirectedEdge["snaplet-postmark", "postmark"], DirectedEdge["snaplet-postmark", "snap"], DirectedEdge["snaplet-postmark", "text"], DirectedEdge["snaplet-postmark", "transformers"], DirectedEdge["snaplet-purescript", "base"], DirectedEdge["snaplet-purescript", "configurator"], DirectedEdge["snaplet-purescript", "mtl"], DirectedEdge["snaplet-purescript", "raw-strings-qq"], DirectedEdge["snaplet-purescript", "shelly"], DirectedEdge["snaplet-purescript", "snap"], DirectedEdge["snaplet-purescript", "snap-core"], DirectedEdge["snaplet-purescript", "string-conv"], DirectedEdge["snaplet-purescript", "text"], DirectedEdge["snaplet-purescript", "transformers"], DirectedEdge["snaplet-recaptcha", "aeson"], DirectedEdge["snaplet-recaptcha", "base"], DirectedEdge["snaplet-recaptcha", "blaze-builder"], DirectedEdge["snaplet-recaptcha", "bytestring"], DirectedEdge["snaplet-recaptcha", "configurator"], DirectedEdge["snaplet-recaptcha", "heist"], DirectedEdge["snaplet-recaptcha", "http-conduit"], DirectedEdge["snaplet-recaptcha", "lens"], DirectedEdge["snaplet-recaptcha", "MonadCatchIO-transformers"], DirectedEdge["snaplet-recaptcha", "mtl"], DirectedEdge["snaplet-recaptcha", "snap"], DirectedEdge["snaplet-recaptcha", "text"], DirectedEdge["snaplet-recaptcha", "transformers"], DirectedEdge["snaplet-redis", "base"], DirectedEdge["snaplet-redis", "configurator"], DirectedEdge["snaplet-redis", "hedis"], DirectedEdge["snaplet-redis", "lens"], DirectedEdge["snaplet-redis", "mtl"], DirectedEdge["snaplet-redis", "network"], DirectedEdge["snaplet-redis", "snap"], DirectedEdge["snaplet-redis", "text"], DirectedEdge["snaplet-redis", "transformers"], DirectedEdge["snaplet-redson", "aeson"], DirectedEdge["snaplet-redson", "base"], DirectedEdge["snaplet-redson", "bytestring"], DirectedEdge["snaplet-redson", "configurator"], DirectedEdge["snaplet-redson", "containers"], DirectedEdge["snaplet-redson", "data-lens"], DirectedEdge["snaplet-redson", "data-lens-template"], DirectedEdge["snaplet-redson", "easy-file"], DirectedEdge["snaplet-redson", "hedis"], DirectedEdge["snaplet-redson", "mtl"], DirectedEdge["snaplet-redson", "snap"], DirectedEdge["snaplet-redson", "snap-core"], DirectedEdge["snaplet-redson", "snaplet-redis"], DirectedEdge["snaplet-redson", "text"], DirectedEdge["snaplet-redson", "utf8-string"], DirectedEdge["snaplet-redson", "websockets"], DirectedEdge["snaplet-redson", "websockets-snap"], DirectedEdge["snaplet-rest", "aeson"], DirectedEdge["snaplet-rest", "base"], DirectedEdge["snaplet-rest", "blaze-builder"], DirectedEdge["snaplet-rest", "bytestring"], DirectedEdge["snaplet-rest", "case-insensitive"], DirectedEdge["snaplet-rest", "http-media"], DirectedEdge["snaplet-rest", "lens"], DirectedEdge["snaplet-rest", "mtl"], DirectedEdge["snaplet-rest", "snap"], DirectedEdge["snaplet-rest", "snap-accept"], DirectedEdge["snaplet-rest", "snap-core"], DirectedEdge["snaplet-rest", "text"], DirectedEdge["snaplet-rest", "utf8-string"], DirectedEdge["snaplet-rest", "xmlhtml"], DirectedEdge["snaplet-riak", "aeson"], DirectedEdge["snaplet-riak", "base"], DirectedEdge["snaplet-riak", "containers"], DirectedEdge["snaplet-riak", "data-lens"], DirectedEdge["snaplet-riak", "data-lens-template"], DirectedEdge["snaplet-riak", "mtl"], DirectedEdge["snaplet-riak", "riak"], DirectedEdge["snaplet-riak", "riak-protobuf"], DirectedEdge["snaplet-riak", "snap"], DirectedEdge["snaplet-riak", "snap-core"], DirectedEdge["snaplet-riak", "time"], DirectedEdge["snaplet-riak", "transformers"], DirectedEdge["snaplet-sass", "base"], DirectedEdge["snaplet-sass", "bytestring"], DirectedEdge["snaplet-sass", "configurator"], DirectedEdge["snaplet-sass", "directory"], DirectedEdge["snaplet-sass", "filepath"], DirectedEdge["snaplet-sass", "mtl"], DirectedEdge["snaplet-sass", "process"], DirectedEdge["snaplet-sass", "snap"], DirectedEdge["snaplet-sass", "snap-core"], DirectedEdge["snaplet-sass", "transformers"], DirectedEdge["snaplet-sedna", "base"], DirectedEdge["snaplet-sedna", "bytestring"], DirectedEdge["snaplet-sedna", "containers"], DirectedEdge["snaplet-sedna", "monad-control"], DirectedEdge["snaplet-sedna", "mtl"], DirectedEdge["snaplet-sedna", "resource-pool"], DirectedEdge["snaplet-sedna", "sednaDBXML"], DirectedEdge["snaplet-sedna", "snap"], DirectedEdge["snaplet-ses-html", "adjunctions"], DirectedEdge["snaplet-ses-html", "base"], DirectedEdge["snaplet-ses-html", "blaze-html"], DirectedEdge["snaplet-ses-html", "bytestring"], DirectedEdge["snaplet-ses-html", "configurator"], DirectedEdge["snaplet-ses-html", "lens"], DirectedEdge["snaplet-ses-html", "ses-html"], DirectedEdge["snaplet-ses-html", "snap"], DirectedEdge["snaplet-ses-html", "text"], DirectedEdge["snaplet-ses-html", "transformers"], DirectedEdge["snaplet-sqlite-simple", "aeson"], DirectedEdge["snaplet-sqlite-simple", "base"], DirectedEdge["snaplet-sqlite-simple", "bytestring"], DirectedEdge["snaplet-sqlite-simple", "clientsession"], DirectedEdge["snaplet-sqlite-simple", "configurator"], DirectedEdge["snaplet-sqlite-simple", "direct-sqlite"], DirectedEdge["snaplet-sqlite-simple", "lens"], DirectedEdge["snaplet-sqlite-simple", "MonadCatchIO-transformers"], DirectedEdge["snaplet-sqlite-simple", "mtl"], DirectedEdge["snaplet-sqlite-simple", "snap"], DirectedEdge["snaplet-sqlite-simple", "sqlite-simple"], DirectedEdge["snaplet-sqlite-simple", "text"], DirectedEdge["snaplet-sqlite-simple", "transformers"], DirectedEdge["snaplet-sqlite-simple", "unordered-containers"], DirectedEdge["snaplet-stripe", "base"], DirectedEdge["snaplet-stripe", "bytestring"], DirectedEdge["snaplet-stripe", "configurator"], DirectedEdge["snaplet-stripe", "heist"], DirectedEdge["snaplet-stripe", "lens-family-core"], DirectedEdge["snaplet-stripe", "mtl"], DirectedEdge["snaplet-stripe", "snap"], DirectedEdge["snaplet-stripe", "stripe"], DirectedEdge["snaplet-stripe", "text"], DirectedEdge["snaplet-stripe", "text-format"], DirectedEdge["snaplet-stripe", "transformers"], DirectedEdge["snaplet-stripe", "xmlhtml"], DirectedEdge["snaplet-tasks", "base"], DirectedEdge["snaplet-tasks", "bytestring"], DirectedEdge["snaplet-tasks", "containers"], DirectedEdge["snaplet-tasks", "curl"], DirectedEdge["snaplet-tasks", "data-hash"], DirectedEdge["snaplet-tasks", "MissingH"], DirectedEdge["snaplet-tasks", "mtl"], DirectedEdge["snaplet-tasks", "network"], DirectedEdge["snaplet-tasks", "snap"], DirectedEdge["snaplet-tasks", "snap-core"], DirectedEdge["snaplet-typed-sessions", "base"], DirectedEdge["snaplet-typed-sessions", "bytestring"], DirectedEdge["snaplet-typed-sessions", "cereal"], DirectedEdge["snaplet-typed-sessions", "clientsession"], DirectedEdge["snaplet-typed-sessions", "containers"], DirectedEdge["snaplet-typed-sessions", "hashtables"], DirectedEdge["snaplet-typed-sessions", "mtl"], DirectedEdge["snaplet-typed-sessions", "PSQueue"], DirectedEdge["snaplet-typed-sessions", "random"], DirectedEdge["snaplet-typed-sessions", "regex-posix"], DirectedEdge["snaplet-typed-sessions", "snap"], DirectedEdge["snaplet-typed-sessions", "snap-core"], DirectedEdge["snaplet-typed-sessions", "time"], DirectedEdge["snaplet-wordpress", "aeson"], DirectedEdge["snaplet-wordpress", "async"], DirectedEdge["snaplet-wordpress", "attoparsec"], DirectedEdge["snaplet-wordpress", "base"], DirectedEdge["snaplet-wordpress", "blaze-builder"], DirectedEdge["snaplet-wordpress", "bytestring"], DirectedEdge["snaplet-wordpress", "configurator"], DirectedEdge["snaplet-wordpress", "containers"], DirectedEdge["snaplet-wordpress", "data-default"], DirectedEdge["snaplet-wordpress", "either"], DirectedEdge["snaplet-wordpress", "hedis"], DirectedEdge["snaplet-wordpress", "heist"], DirectedEdge["snaplet-wordpress", "hspec"], DirectedEdge["snaplet-wordpress", "hspec-snap"], DirectedEdge["snaplet-wordpress", "lens"], DirectedEdge["snaplet-wordpress", "map-syntax"], DirectedEdge["snaplet-wordpress", "mtl"], DirectedEdge["snaplet-wordpress", "snap"], DirectedEdge["snaplet-wordpress", "snap-core"], DirectedEdge["snaplet-wordpress", "snaplet-redis"], DirectedEdge["snaplet-wordpress", "text"], DirectedEdge["snaplet-wordpress", "time"], DirectedEdge["snaplet-wordpress", "unordered-containers"], DirectedEdge["snaplet-wordpress", "vector"], DirectedEdge["snaplet-wordpress", "wreq"], DirectedEdge["snaplet-wordpress", "xmlhtml"], DirectedEdge["snappy", "base"], DirectedEdge["snappy", "bytestring"], DirectedEdge["snappy-conduit", "base"], DirectedEdge["snappy-conduit", "bytestring"], DirectedEdge["snappy-conduit", "conduit"], DirectedEdge["snappy-conduit", "snappy"], DirectedEdge["snappy-framing", "array"], DirectedEdge["snappy-framing", "base"], DirectedEdge["snappy-framing", "binary"], DirectedEdge["snappy-framing", "bytestring"], DirectedEdge["snappy-framing", "snappy"], DirectedEdge["snappy-iteratee", "base"], DirectedEdge["snappy-iteratee", "bytestring"], DirectedEdge["snappy-iteratee", "iteratee"], DirectedEdge["snappy-iteratee", "snappy"], DirectedEdge["sndfile-enumerators", "base"], DirectedEdge["sndfile-enumerators", "binary"], DirectedEdge["sndfile-enumerators", "bytestring"], DirectedEdge["sndfile-enumerators", "containers"], DirectedEdge["sndfile-enumerators", "filepath"], DirectedEdge["sndfile-enumerators", "iteratee"], DirectedEdge["sndfile-enumerators", "listlike-instances"], DirectedEdge["sndfile-enumerators", "MonadCatchIO-transformers"], DirectedEdge["sndfile-enumerators", "transformers"], DirectedEdge["sndfile-enumerators", "vector"], DirectedEdge["sneakyterm", "base"], DirectedEdge["sneakyterm", "classy-prelude"], DirectedEdge["sneakyterm", "containers"], DirectedEdge["sneakyterm", "lens"], DirectedEdge["sneakyterm", "linear"], DirectedEdge["sneakyterm", "mtl"], DirectedEdge["sneakyterm", "ncurses"], DirectedEdge["sneakyterm", "transformers"], DirectedEdge["sneathlane-haste", "base"], DirectedEdge["sneathlane-haste", "haste-compiler"], DirectedEdge["sneathlane-haste", "haste-lib"], DirectedEdge["snippet-extractor", "base"], DirectedEdge["snippet-extractor", "parsec"], DirectedEdge["snm", "base"], DirectedEdge["snm", "containers"], DirectedEdge["snm", "directory"], DirectedEdge["snm", "filepath"], DirectedEdge["snm", "HsSyck"], DirectedEdge["snm", "parsec"], DirectedEdge["snm", "safe"], DirectedEdge["snm", "spoonutil"], DirectedEdge["snm", "xhtml"], DirectedEdge["snmp", "asn1-encoding"], DirectedEdge["snmp", "asn1-parse"], DirectedEdge["snmp", "asn1-types"], DirectedEdge["snmp", "async"], DirectedEdge["snmp", "base"], DirectedEdge["snmp", "binary"], DirectedEdge["snmp", "bytestring"], DirectedEdge["snmp", "cipher-aes"], DirectedEdge["snmp", "cipher-des"], DirectedEdge["snmp", "containers"], DirectedEdge["snmp", "crypto-cipher-types"], DirectedEdge["snmp", "cryptohash"], DirectedEdge["snmp", "mtl"], DirectedEdge["snmp", "network"], DirectedEdge["snmp", "network-info"], DirectedEdge["snmp", "random"], DirectedEdge["snmp", "securemem"], DirectedEdge["snmp", "text"], DirectedEdge["snmp", "time"], DirectedEdge["snow-white", "base"], DirectedEdge["snow-white", "binary"], DirectedEdge["snow-white", "bytestring"], DirectedEdge["snow-white", "mps"], DirectedEdge["snowball", "base"], DirectedEdge["snowball", "bytestring"], DirectedEdge["snowball", "text"], DirectedEdge["snowball", "text-icu"], DirectedEdge["snowflake", "base"], DirectedEdge["snowflake", "time"], DirectedEdge["snowglobe", "base"], DirectedEdge["snowglobe", "bytestring"], DirectedEdge["snowglobe", "containers"], DirectedEdge["snowglobe", "gl-capture"], DirectedEdge["snowglobe", "GLUT"], DirectedEdge["snowglobe", "OpenGL"], DirectedEdge["snowglobe", "OpenGLRaw"], DirectedEdge["snowglobe", "random"], DirectedEdge["soap", "base"], DirectedEdge["soap", "bytestring"], DirectedEdge["soap", "conduit"], DirectedEdge["soap", "configurator"], DirectedEdge["soap", "data-default"], DirectedEdge["soap", "exceptions"], DirectedEdge["soap", "http-client"], DirectedEdge["soap", "http-types"], DirectedEdge["soap", "iconv"], DirectedEdge["soap", "mtl"], DirectedEdge["soap", "resourcet"], DirectedEdge["soap", "text"], DirectedEdge["soap", "unordered-containers"], DirectedEdge["soap", "xml-conduit"], DirectedEdge["soap", "xml-conduit-writer"], DirectedEdge["soap", "xml-types"], DirectedEdge["soap-openssl", "base"], DirectedEdge["soap-openssl", "configurator"], DirectedEdge["soap-openssl", "data-default"], DirectedEdge["soap-openssl", "HsOpenSSL"], DirectedEdge["soap-openssl", "http-client"], DirectedEdge["soap-openssl", "http-client-openssl"], DirectedEdge["soap-openssl", "soap"], DirectedEdge["soap-openssl", "text"], DirectedEdge["soap-tls", "base"], DirectedEdge["soap-tls", "configurator"], DirectedEdge["soap-tls", "connection"], DirectedEdge["soap-tls", "data-default"], DirectedEdge["soap-tls", "http-client"], DirectedEdge["soap-tls", "http-client-tls"], DirectedEdge["soap-tls", "soap"], DirectedEdge["soap-tls", "text"], DirectedEdge["soap-tls", "tls"], DirectedEdge["soap-tls", "x509-store"], DirectedEdge["soap-tls", "x509-validation"], DirectedEdge["sock2stream", "base"], DirectedEdge["sock2stream", "binary"], DirectedEdge["sock2stream", "bytestring"], DirectedEdge["sock2stream", "containers"], DirectedEdge["sock2stream", "directory"], DirectedEdge["sock2stream", "network"], DirectedEdge["sockaddr", "base"], DirectedEdge["sockaddr", "byteorder"], DirectedEdge["sockaddr", "bytestring"], DirectedEdge["sockaddr", "network"], DirectedEdge["socket", "base"], DirectedEdge["socket", "bytestring"], DirectedEdge["socket-activation", "base"], DirectedEdge["socket-activation", "network"], DirectedEdge["socket-activation", "transformers"], DirectedEdge["socket-activation", "unix"], DirectedEdge["socket-io", "aeson"], DirectedEdge["socket-io", "attoparsec"], DirectedEdge["socket-io", "base"], DirectedEdge["socket-io", "bytestring"], DirectedEdge["socket-io", "engine-io"], DirectedEdge["socket-io", "mtl"], DirectedEdge["socket-io", "stm"], DirectedEdge["socket-io", "text"], DirectedEdge["socket-io", "transformers"], DirectedEdge["socket-io", "unordered-containers"], DirectedEdge["socket-io", "vector"], DirectedEdge["socket-sctp", "base"], DirectedEdge["socket-sctp", "bytestring"], DirectedEdge["socket-sctp", "socket"], DirectedEdge["socketio", "aeson"], DirectedEdge["socketio", "ansi-terminal"], DirectedEdge["socketio", "attoparsec"], DirectedEdge["socketio", "base"], DirectedEdge["socketio", "blaze-builder"], DirectedEdge["socketio", "bytestring"], DirectedEdge["socketio", "conduit"], DirectedEdge["socketio", "conduit-extra"], DirectedEdge["socketio", "http-types"], DirectedEdge["socketio", "lifted-base"], DirectedEdge["socketio", "monad-control"], DirectedEdge["socketio", "mtl"], DirectedEdge["socketio", "random"], DirectedEdge["socketio", "text"], DirectedEdge["socketio", "transformers-base"], DirectedEdge["socketio", "unordered-containers"], DirectedEdge["socketio", "vector"], DirectedEdge["socketio", "wai"], DirectedEdge["socketio", "warp"], DirectedEdge["socketson", "aeson"], DirectedEdge["socketson", "base"], DirectedEdge["socketson", "base64-bytestring"], DirectedEdge["socketson", "bytestring"], DirectedEdge["socketson", "cereal"], DirectedEdge["socketson", "crypto-api"], DirectedEdge["socketson", "data-default"], DirectedEdge["socketson", "DRBG"], DirectedEdge["socketson", "either"], DirectedEdge["socketson", "errors"], DirectedEdge["socketson", "http-types"], DirectedEdge["socketson", "leveldb-haskell"], DirectedEdge["socketson", "lifted-base"], DirectedEdge["socketson", "mtl"], DirectedEdge["socketson", "network"], DirectedEdge["socketson", "socketson"], DirectedEdge["socketson", "text"], DirectedEdge["socketson", "transformers"], DirectedEdge["socketson", "transformers-base"], DirectedEdge["socketson", "wai"], DirectedEdge["socketson", "wai-websockets"], DirectedEdge["socketson", "warp"], DirectedEdge["socketson", "websockets"], DirectedEdge["socks", "base"], DirectedEdge["socks", "bytestring"], DirectedEdge["socks", "cereal"], DirectedEdge["socks", "network"], DirectedEdge["sodium", "base"], DirectedEdge["sodium", "containers"], DirectedEdge["sodium", "mtl"], DirectedEdge["soegtk", "base"], DirectedEdge["soegtk", "cairo"], DirectedEdge["soegtk", "gtk"], DirectedEdge["soegtk", "old-time"], DirectedEdge["soegtk", "stm"], DirectedEdge["solr", "base"], DirectedEdge["solr", "base-prelude"], DirectedEdge["solr", "bytestring"], DirectedEdge["solr", "bytestring-tree-builder"], DirectedEdge["solr", "case-insensitive"], DirectedEdge["solr", "contravariant"], DirectedEdge["solr", "http-client"], DirectedEdge["solr", "http-response-decoder"], DirectedEdge["solr", "json-encoder"], DirectedEdge["solr", "json-incremental-decoder"], DirectedEdge["solr", "matcher"], DirectedEdge["solr", "profunctors"], DirectedEdge["solr", "semigroups"], DirectedEdge["solr", "text"], DirectedEdge["solr", "transformers"], DirectedEdge["solr", "uri-encode"], DirectedEdge["som", "assert"], DirectedEdge["som", "base"], DirectedEdge["som", "containers"], DirectedEdge["som", "deepseq"], DirectedEdge["som", "grid"], DirectedEdge["som", "MonadRandom"], DirectedEdge["sonic-visualiser", "array"], DirectedEdge["sonic-visualiser", "base"], DirectedEdge["sonic-visualiser", "bytestring"], DirectedEdge["sonic-visualiser", "bzlib"], DirectedEdge["sonic-visualiser", "containers"], DirectedEdge["sonic-visualiser", "mtl"], DirectedEdge["sonic-visualiser", "pretty"], DirectedEdge["sonic-visualiser", "utf8-string"], DirectedEdge["sonic-visualiser", "xml"], DirectedEdge["sophia", "base"], DirectedEdge["sophia", "bindings-sophia"], DirectedEdge["sophia", "bytestring"], DirectedEdge["sort-by-pinyin", "air"], DirectedEdge["sort-by-pinyin", "air-extra"], DirectedEdge["sort-by-pinyin", "air-th"], DirectedEdge["sort-by-pinyin", "base"], DirectedEdge["sort-by-pinyin", "bytestring"], DirectedEdge["sort-by-pinyin", "containers"], DirectedEdge["sort-by-pinyin", "text"], DirectedEdge["sorted", "base"], DirectedEdge["sorted-list", "base"], DirectedEdge["sorted-list", "deepseq"], DirectedEdge["sorting", "base"], DirectedEdge["sorty", "base"], DirectedEdge["sorty", "bytestring"], DirectedEdge["sound-collage", "array"], DirectedEdge["sound-collage", "base"], DirectedEdge["sound-collage", "carray"], DirectedEdge["sound-collage", "directory"], DirectedEdge["sound-collage", "fft"], DirectedEdge["sound-collage", "filepath"], DirectedEdge["sound-collage", "numeric-prelude"], DirectedEdge["sound-collage", "optparse-applicative"], DirectedEdge["sound-collage", "sample-frame"], DirectedEdge["sound-collage", "soxlib"], DirectedEdge["sound-collage", "storablevector"], DirectedEdge["sound-collage", "storablevector-carray"], DirectedEdge["sound-collage", "synthesizer-core"], DirectedEdge["sound-collage", "temporary"], DirectedEdge["sound-collage", "transformers"], DirectedEdge["sound-collage", "utility-ht"], DirectedEdge["sounddelay", "base"], DirectedEdge["sounddelay", "containers"], DirectedEdge["sounddelay", "parseargs"], DirectedEdge["sounddelay", "WAVE"], DirectedEdge["source-code-server", "base"], DirectedEdge["source-code-server", "bytestring"], DirectedEdge["source-code-server", "containers"], DirectedEdge["source-code-server", "curl"], DirectedEdge["source-code-server", "data-default"], DirectedEdge["source-code-server", "directory"], DirectedEdge["source-code-server", "filepath"], DirectedEdge["source-code-server", "hack"], DirectedEdge["source-code-server", "hack-contrib"], DirectedEdge["source-code-server", "hack-handler-happstack"], DirectedEdge["source-code-server", "HDBC"], DirectedEdge["source-code-server", "json"], DirectedEdge["source-code-server", "loli"], DirectedEdge["source-code-server", "mps"], DirectedEdge["source-code-server", "mtl"], DirectedEdge["source-code-server", "process"], DirectedEdge["source-code-server", "safe"], DirectedEdge["source-code-server", "StateVar"], DirectedEdge["source-code-server", "stm"], DirectedEdge["source-code-server", "template-haskell"], DirectedEdge["source-code-server", "time"], DirectedEdge["source-code-server", "unix"], DirectedEdge["sourcemap", "aeson"], DirectedEdge["sourcemap", "attoparsec"], DirectedEdge["sourcemap", "base"], DirectedEdge["sourcemap", "bytestring"], DirectedEdge["sourcemap", "process"], DirectedEdge["sourcemap", "text"], DirectedEdge["sourcemap", "unordered-containers"], DirectedEdge["sourcemap", "utf8-string"], DirectedEdge["sousit", "base"], DirectedEdge["sousit", "bytestring"], DirectedEdge["sousit", "cereal"], DirectedEdge["sousit", "mtl"], DirectedEdge["sousit", "resourcet"], DirectedEdge["sousit", "stm"], DirectedEdge["sousit", "transformers"], DirectedEdge["sox", "base"], DirectedEdge["sox", "containers"], DirectedEdge["sox", "explicit-exception"], DirectedEdge["sox", "extensible-exceptions"], DirectedEdge["sox", "process"], DirectedEdge["sox", "sample-frame"], DirectedEdge["sox", "special-functors"], DirectedEdge["sox", "transformers"], DirectedEdge["sox", "unix"], DirectedEdge["sox", "utility-ht"], DirectedEdge["soxlib", "base"], DirectedEdge["soxlib", "containers"], DirectedEdge["soxlib", "explicit-exception"], DirectedEdge["soxlib", "extensible-exceptions"], DirectedEdge["soxlib", "sample-frame"], DirectedEdge["soxlib", "soxlib"], DirectedEdge["soxlib", "storablevector"], DirectedEdge["soxlib", "transformers"], DirectedEdge["soxlib", "utility-ht"], DirectedEdge["soyuz", "base"], DirectedEdge["soyuz", "bytestring"], DirectedEdge["soyuz", "cereal"], DirectedEdge["soyuz", "cmdargs"], DirectedEdge["soyuz", "containers"], DirectedEdge["soyuz", "pretty"], DirectedEdge["soyuz", "QuickCheck"], DirectedEdge["soyuz", "trifecta"], DirectedEdge["soyuz", "uniplate"], DirectedEdge["soyuz", "vector"], DirectedEdge["spacefill", "base"], DirectedEdge["spacepart", "base"], DirectedEdge["spacepart", "vector-space"], DirectedEdge["spaceprobe", "base"], DirectedEdge["spaceprobe", "clock"], DirectedEdge["spaceprobe", "containers"], DirectedEdge["spaceprobe", "erf"], DirectedEdge["spaceprobe", "mtl"], DirectedEdge["spanout", "base"], DirectedEdge["spanout", "containers"], DirectedEdge["spanout", "gloss"], DirectedEdge["spanout", "lens"], DirectedEdge["spanout", "linear"], DirectedEdge["spanout", "MonadRandom"], DirectedEdge["spanout", "mtl"], DirectedEdge["spanout", "netwire"], DirectedEdge["sparkle", "base"], DirectedEdge["sparkle", "binary"], DirectedEdge["sparkle", "bytestring"], DirectedEdge["sparkle", "distributed-closure"], DirectedEdge["sparkle", "filepath"], DirectedEdge["sparkle", "inline-java"], DirectedEdge["sparkle", "process"], DirectedEdge["sparkle", "regex-tdfa"], DirectedEdge["sparkle", "singletons"], DirectedEdge["sparkle", "sparkle"], DirectedEdge["sparkle", "text"], DirectedEdge["sparkle", "vector"], DirectedEdge["sparkle", "zip-archive"], DirectedEdge["sparse", "base"], DirectedEdge["sparse", "contravariant"], DirectedEdge["sparse", "deepseq"], DirectedEdge["sparse", "hybrid-vectors"], DirectedEdge["sparse", "lens"], DirectedEdge["sparse", "primitive"], DirectedEdge["sparse", "transformers"], DirectedEdge["sparse", "vector"], DirectedEdge["sparse", "vector-algorithms"], DirectedEdge["sparse-lin-alg", "base"], DirectedEdge["sparse-lin-alg", "containers"], DirectedEdge["sparsebit", "base"], DirectedEdge["sparsecheck", "base"], DirectedEdge["sparsecheck", "containers"], DirectedEdge["sparser", "base"], DirectedEdge["sparser", "containers"], DirectedEdge["sparser", "data-default"], DirectedEdge["sparser", "monadplus"], DirectedEdge["sparser", "nats"], DirectedEdge["sparser", "pointed"], DirectedEdge["sparser", "semigroups"], DirectedEdge["spata", "base"], DirectedEdge["spata", "dlist"], DirectedEdge["spata", "mps"], DirectedEdge["spata", "mtl"], DirectedEdge["spatial-math", "base"], DirectedEdge["spatial-math", "binary"], DirectedEdge["spatial-math", "cereal"], DirectedEdge["spatial-math", "ghc-prim"], DirectedEdge["spatial-math", "lens"], DirectedEdge["spatial-math", "linear"], DirectedEdge["spatial-math", "TypeCompose"], DirectedEdge["spawn", "base"], DirectedEdge["spdx", "base"], DirectedEdge["spdx", "ghc-prim"], DirectedEdge["spdx", "transformers"], DirectedEdge["spe", "base"], DirectedEdge["special-functors", "base"], DirectedEdge["special-functors", "base"], DirectedEdge["special-functors", "mtl"], DirectedEdge["special-keys", "aeson"], DirectedEdge["special-keys", "base"], DirectedEdge["special-keys", "blaze-markup"], DirectedEdge["special-keys", "bytestring"], DirectedEdge["special-keys", "cereal"], DirectedEdge["special-keys", "deepseq"], DirectedEdge["special-keys", "hashable"], DirectedEdge["special-keys", "mwc-random"], DirectedEdge["special-keys", "path-pieces"], DirectedEdge["special-keys", "primitive"], DirectedEdge["special-keys", "safecopy"], DirectedEdge["special-keys", "text"], DirectedEdge["special-keys", "uuid"], DirectedEdge["specialize-th", "base"], DirectedEdge["specialize-th", "composition"], DirectedEdge["specialize-th", "derive"], DirectedEdge["specialize-th", "MissingH"], DirectedEdge["specialize-th", "mtl"], DirectedEdge["specialize-th", "newtype"], DirectedEdge["specialize-th", "newtype-th"], DirectedEdge["specialize-th", "template-haskell"], DirectedEdge["specialize-th", "th-expand-syns"], DirectedEdge["specialize-th", "tuple"], DirectedEdge["specialize-th", "type-sub-th"], DirectedEdge["specialize-th", "uniplate"], DirectedEdge["specialize-th", "universe-th"], DirectedEdge["species", "base"], DirectedEdge["species", "containers"], DirectedEdge["species", "multiset-comb"], DirectedEdge["species", "np-extras"], DirectedEdge["species", "numeric-prelude"], DirectedEdge["species", "template-haskell"], DirectedEdge["speculation", "base"], DirectedEdge["speculation", "ghc-prim"], DirectedEdge["speculation", "stm"], DirectedEdge["speculation", "transformers"], DirectedEdge["speculation-transformers", "speculation"], DirectedEdge["speedy-slice", "base"], DirectedEdge["speedy-slice", "lens"], DirectedEdge["speedy-slice", "mcmc-types"], DirectedEdge["speedy-slice", "mwc-probability"], DirectedEdge["speedy-slice", "pipes"], DirectedEdge["speedy-slice", "primitive"], DirectedEdge["speedy-slice", "transformers"], DirectedEdge["spelling-suggest", "base"], DirectedEdge["spelling-suggest", "edit-distance"], DirectedEdge["spelling-suggest", "parseargs"], DirectedEdge["spelling-suggest", "phonetic-code"], DirectedEdge["spelling-suggest", "sqlite"], DirectedEdge["sphero", "base"], DirectedEdge["sphero", "bytestring"], DirectedEdge["sphero", "cereal"], DirectedEdge["sphero", "containers"], DirectedEdge["sphero", "mtl"], DirectedEdge["sphero", "simple-bluetooth"], DirectedEdge["sphinx", "base"], DirectedEdge["sphinx", "binary"], DirectedEdge["sphinx", "bytestring"], DirectedEdge["sphinx", "network"], DirectedEdge["sphinx", "text"], DirectedEdge["sphinx", "text-icu"], DirectedEdge["sphinx", "xml"], DirectedEdge["sphinx-cli", "base"], DirectedEdge["sphinx-cli", "sphinx"], DirectedEdge["spice", "base"], DirectedEdge["spice", "bytestring"], DirectedEdge["spice", "containers"], DirectedEdge["spice", "data-default"], DirectedEdge["spice", "elerea"], DirectedEdge["spice", "GLFW"], DirectedEdge["spice", "JuicyPixels"], DirectedEdge["spice", "JuicyPixels-repa"], DirectedEdge["spice", "OpenGL"], DirectedEdge["spike", "base"], DirectedEdge["spike", "containers"], DirectedEdge["spike", "directory"], DirectedEdge["spike", "filepath"], DirectedEdge["spike", "glib"], DirectedEdge["spike", "global-variables"], DirectedEdge["spike", "gtk"], DirectedEdge["spike", "mtl"], DirectedEdge["spike", "process"], DirectedEdge["spike", "random"], DirectedEdge["spike", "rosezipper"], DirectedEdge["spike", "stm"], DirectedEdge["spike", "webkit"], DirectedEdge["spine", "base"], DirectedEdge["spir-v", "base"], DirectedEdge["splay", "base"], DirectedEdge["splaytree", "base"], DirectedEdge["splaytree", "deepseq"], DirectedEdge["splice", "base"], DirectedEdge["splice", "network"], DirectedEdge["splice", "unix"], DirectedEdge["spline3", "base"], DirectedEdge["spline3", "cmdargs"], DirectedEdge["spline3", "filepath"], DirectedEdge["spline3", "MissingH"], DirectedEdge["spline3", "repa"], DirectedEdge["spline3", "repa-algorithms"], DirectedEdge["spline3", "repa-io"], DirectedEdge["spline3", "tasty"], DirectedEdge["spline3", "tasty-hunit"], DirectedEdge["spline3", "tasty-quickcheck"], DirectedEdge["spline3", "vector"], DirectedEdge["splines", "base"], DirectedEdge["splines", "containers"], DirectedEdge["splines", "polynomial"], DirectedEdge["splines", "vector"], DirectedEdge["splines", "vector-space"], DirectedEdge["split", "base"], DirectedEdge["split-channel", "base"], DirectedEdge["split-record", "base"], DirectedEdge["split-record", "numeric-prelude"], DirectedEdge["split-record", "soxlib"], DirectedEdge["split-record", "storablevector"], DirectedEdge["split-record", "synthesizer-core"], DirectedEdge["split-record", "transformers"], DirectedEdge["split-record", "utility-ht"], DirectedEdge["split-tchan", "base"], DirectedEdge["split-tchan", "stm"], DirectedEdge["splitter", "base"], DirectedEdge["splitter", "directory"], DirectedEdge["splitter", "filepath"], DirectedEdge["splitter", "parsec"], DirectedEdge["splitter", "range"], DirectedEdge["splot", "base"], DirectedEdge["splot", "bytestring"], DirectedEdge["splot", "bytestring-lexing"], DirectedEdge["splot", "cairo"], DirectedEdge["splot", "colour"], DirectedEdge["splot", "containers"], DirectedEdge["splot", "HUnit"], DirectedEdge["splot", "mtl"], DirectedEdge["splot", "strptime"], DirectedEdge["splot", "template-haskell"], DirectedEdge["splot", "time"], DirectedEdge["splot", "vcs-revision"], DirectedEdge["spool", "base"], DirectedEdge["spool", "bytestring"], DirectedEdge["spool", "vector"], DirectedEdge["spoon", "base"], DirectedEdge["spoon", "deepseq"], DirectedEdge["spoonutil", "base"], DirectedEdge["spoonutil", "directory"], DirectedEdge["spoonutil", "extensible-exceptions"], DirectedEdge["spoonutil", "filepath"], DirectedEdge["spoonutil", "parsec"], DirectedEdge["spoty", "aeson"], DirectedEdge["spoty", "base"], DirectedEdge["spoty", "bytestring"], DirectedEdge["spoty", "lens"], DirectedEdge["spoty", "lens-aeson"], DirectedEdge["spoty", "pipes"], DirectedEdge["spoty", "text"], DirectedEdge["spoty", "unordered-containers"], DirectedEdge["spoty", "wreq"], DirectedEdge["spreadsheet", "base"], DirectedEdge["spreadsheet", "bytestring"], DirectedEdge["spreadsheet", "explicit-exception"], DirectedEdge["spreadsheet", "transformers"], DirectedEdge["spreadsheet", "utility-ht"], DirectedEdge["spritz", "base"], DirectedEdge["spritz", "lens"], DirectedEdge["spritz", "mtl"], DirectedEdge["spritz", "vector"], DirectedEdge["sproxy", "aeson"], DirectedEdge["sproxy", "attoparsec"], DirectedEdge["sproxy", "base"], DirectedEdge["sproxy", "base64-bytestring"], DirectedEdge["sproxy", "bytestring"], DirectedEdge["sproxy", "containers"], DirectedEdge["sproxy", "data-default"], DirectedEdge["sproxy", "docopt"], DirectedEdge["sproxy", "entropy"], DirectedEdge["sproxy", "http-conduit"], DirectedEdge["sproxy", "http-kit"], DirectedEdge["sproxy", "http-types"], DirectedEdge["sproxy", "logging-facade"], DirectedEdge["sproxy", "logsink"], DirectedEdge["sproxy", "network"], DirectedEdge["sproxy", "postgresql-simple"], DirectedEdge["sproxy", "raw-strings-qq"], DirectedEdge["sproxy", "resource-pool"], DirectedEdge["sproxy", "SHA"], DirectedEdge["sproxy", "split"], DirectedEdge["sproxy", "string-conversions"], DirectedEdge["sproxy", "time"], DirectedEdge["sproxy", "tls"], DirectedEdge["sproxy", "unix"], DirectedEdge["sproxy", "utf8-string"], DirectedEdge["sproxy", "yaml"], DirectedEdge["sproxy-web", "aeson"], DirectedEdge["sproxy-web", "base"], DirectedEdge["sproxy-web", "blaze-html"], DirectedEdge["sproxy-web", "blaze-markup"], DirectedEdge["sproxy-web", "bytestring"], DirectedEdge["sproxy-web", "configurator"], DirectedEdge["sproxy-web", "data-default-class"], DirectedEdge["sproxy-web", "directory"], DirectedEdge["sproxy-web", "filepath"], DirectedEdge["sproxy-web", "hflags"], DirectedEdge["sproxy-web", "http-types"], DirectedEdge["sproxy-web", "mtl"], DirectedEdge["sproxy-web", "postgresql-simple"], DirectedEdge["sproxy-web", "resource-pool"], DirectedEdge["sproxy-web", "scotty"], DirectedEdge["sproxy-web", "text"], DirectedEdge["sproxy-web", "wai"], DirectedEdge["sproxy-web", "wai-extra"], DirectedEdge["sproxy-web", "wai-middleware-static"], DirectedEdge["sproxy-web", "warp"], DirectedEdge["spsa", "base"], DirectedEdge["spsa", "hmatrix"], DirectedEdge["spsa", "HUnit"], DirectedEdge["spsa", "mtl"], DirectedEdge["spsa", "QuickCheck"], DirectedEdge["spsa", "random"], DirectedEdge["spsa", "test-framework"], DirectedEdge["spsa", "test-framework-hunit"], DirectedEdge["spy", "base"], DirectedEdge["spy", "cmdargs"], DirectedEdge["spy", "directory"], DirectedEdge["spy", "filemanip"], DirectedEdge["spy", "filepath"], DirectedEdge["spy", "fsnotify"], DirectedEdge["spy", "json"], DirectedEdge["spy", "process"], DirectedEdge["spy", "system-filepath"], DirectedEdge["spy", "time"], DirectedEdge["spy", "unix"], DirectedEdge["sql-simple", "base"], DirectedEdge["sql-simple", "containers"], DirectedEdge["sql-simple", "exceptions"], DirectedEdge["sql-simple", "monad-control"], DirectedEdge["sql-simple", "tagged"], DirectedEdge["sql-simple", "text"], DirectedEdge["sql-simple", "transformers"], DirectedEdge["sql-simple", "transformers-base"], DirectedEdge["sql-simple-mysql", "base"], DirectedEdge["sql-simple-mysql", "data-default-class"], DirectedEdge["sql-simple-mysql", "mysql"], DirectedEdge["sql-simple-mysql", "mysql-simple"], DirectedEdge["sql-simple-mysql", "sql-simple"], DirectedEdge["sql-simple-mysql", "tagged"], DirectedEdge["sql-simple-mysql", "text"], DirectedEdge["sql-simple-pool", "base"], DirectedEdge["sql-simple-pool", "data-default-class"], DirectedEdge["sql-simple-pool", "monad-control"], DirectedEdge["sql-simple-pool", "resource-pool"], DirectedEdge["sql-simple-pool", "sql-simple"], DirectedEdge["sql-simple-pool", "text"], DirectedEdge["sql-simple-pool", "time"], DirectedEdge["sql-simple-postgresql", "base"], DirectedEdge["sql-simple-postgresql", "data-default-class"], DirectedEdge["sql-simple-postgresql", "postgresql-simple"], DirectedEdge["sql-simple-postgresql", "sql-simple"], DirectedEdge["sql-simple-postgresql", "tagged"], DirectedEdge["sql-simple-postgresql", "text"], DirectedEdge["sql-simple-sqlite", "base"], DirectedEdge["sql-simple-sqlite", "sql-simple"], DirectedEdge["sql-simple-sqlite", "sqlite-simple"], DirectedEdge["sql-simple-sqlite", "tagged"], DirectedEdge["sql-words", "base"], DirectedEdge["sqlite", "base"], DirectedEdge["sqlite", "bytestring"], DirectedEdge["sqlite", "directory"], DirectedEdge["sqlite", "pretty"], DirectedEdge["sqlite", "time"], DirectedEdge["sqlite", "utf8-string"], DirectedEdge["sqlite-simple", "attoparsec"], DirectedEdge["sqlite-simple", "base"], DirectedEdge["sqlite-simple", "blaze-builder"], DirectedEdge["sqlite-simple", "blaze-textual"], DirectedEdge["sqlite-simple", "bytestring"], DirectedEdge["sqlite-simple", "containers"], DirectedEdge["sqlite-simple", "direct-sqlite"], DirectedEdge["sqlite-simple", "text"], DirectedEdge["sqlite-simple", "time"], DirectedEdge["sqlite-simple", "transformers"], DirectedEdge["sqlite-simple-typed", "base"], DirectedEdge["sqlite-simple-typed", "haskell-src-meta"], DirectedEdge["sqlite-simple-typed", "sqlite"], DirectedEdge["sqlite-simple-typed", "sqlite-simple"], DirectedEdge["sqlite-simple-typed", "template-haskell"], DirectedEdge["sqlite-simple-typed", "typedquery"], DirectedEdge["sqlite-simple-typed", "utf8-string"], DirectedEdge["sqlvalue-list", "base"], DirectedEdge["sqlvalue-list", "convertible"], DirectedEdge["sqlvalue-list", "HDBC"], DirectedEdge["sqlvalue-list", "template-haskell"], DirectedEdge["squeeze", "base"], DirectedEdge["squeeze", "Cabal"], DirectedEdge["squeeze", "directory"], DirectedEdge["squeeze", "factory"], DirectedEdge["squeeze", "filepath"], DirectedEdge["squeeze", "mtl"], DirectedEdge["squeeze", "random"], DirectedEdge["squeeze", "squeeze"], DirectedEdge["squeeze", "toolshed"], DirectedEdge["sr-extra", "base"], DirectedEdge["sr-extra", "bytestring"], DirectedEdge["sr-extra", "bzlib"], DirectedEdge["sr-extra", "containers"], DirectedEdge["sr-extra", "directory"], DirectedEdge["sr-extra", "filepath"], DirectedEdge["sr-extra", "HUnit"], DirectedEdge["sr-extra", "mtl"], DirectedEdge["sr-extra", "network"], DirectedEdge["sr-extra", "network-uri"], DirectedEdge["sr-extra", "old-locale"], DirectedEdge["sr-extra", "old-time"], DirectedEdge["sr-extra", "pretty"], DirectedEdge["sr-extra", "process"], DirectedEdge["sr-extra", "QuickCheck"], DirectedEdge["sr-extra", "random"], DirectedEdge["sr-extra", "regex-compat"], DirectedEdge["sr-extra", "time"], DirectedEdge["sr-extra", "unix"], DirectedEdge["sr-extra", "Unixutils"], DirectedEdge["sr-extra", "zlib"], DirectedEdge["srcinst", "base"], DirectedEdge["srcinst", "directory"], DirectedEdge["srcinst", "hslogger"], DirectedEdge["srcinst", "MissingH"], DirectedEdge["srcinst", "network"], DirectedEdge["srcinst", "parsec"], DirectedEdge["srcinst", "process"], DirectedEdge["srcinst", "regex-compat"], DirectedEdge["srcinst", "unix"], DirectedEdge["srcloc", "base"], DirectedEdge["srec", "base"], DirectedEdge["srec", "bytestring"], DirectedEdge["sscgi", "attoparsec"], DirectedEdge["sscgi", "base"], DirectedEdge["sscgi", "bytestring"], DirectedEdge["sscgi", "case-insensitive"], DirectedEdge["sscgi", "containers"], DirectedEdge["sscgi", "Glob"], DirectedEdge["sscgi", "MonadCatchIO-mtl"], DirectedEdge["sscgi", "mtl"], DirectedEdge["sscgi", "transformers"], DirectedEdge["sscgi", "utf8-string"], DirectedEdge["sscript", "base"], DirectedEdge["ssh", "asn1-encoding"], DirectedEdge["ssh", "asn1-types"], DirectedEdge["ssh", "base"], DirectedEdge["ssh", "base64-string"], DirectedEdge["ssh", "binary"], DirectedEdge["ssh", "bytestring"], DirectedEdge["ssh", "cereal"], DirectedEdge["ssh", "containers"], DirectedEdge["ssh", "crypto-api"], DirectedEdge["ssh", "crypto-pubkey-types"], DirectedEdge["ssh", "cryptohash-cryptoapi"], DirectedEdge["ssh", "HsOpenSSL"], DirectedEdge["ssh", "integer-gmp"], DirectedEdge["ssh", "network"], DirectedEdge["ssh", "process"], DirectedEdge["ssh", "random"], DirectedEdge["ssh", "RSA"], DirectedEdge["ssh", "SHA"], DirectedEdge["ssh", "SimpleAES"], DirectedEdge["ssh", "split"], DirectedEdge["ssh", "transformers"], DirectedEdge["sshd-lint", "base"], DirectedEdge["sshd-lint", "containers"], DirectedEdge["sshd-lint", "keyword-args"], DirectedEdge["sshd-lint", "nagios-check"], DirectedEdge["sshd-lint", "parsec"], DirectedEdge["sshtun", "base"], DirectedEdge["sshtun", "containers"], DirectedEdge["sshtun", "curl"], DirectedEdge["sshtun", "directory"], DirectedEdge["sshtun", "hdaemonize"], DirectedEdge["sshtun", "hslogger"], DirectedEdge["sshtun", "mtl"], DirectedEdge["sshtun", "process"], DirectedEdge["sshtun", "regex-compat"], DirectedEdge["sshtun", "stm"], DirectedEdge["sshtun", "unix"], DirectedEdge["sssp", "attempt"], DirectedEdge["sssp", "attoparsec"], DirectedEdge["sssp", "aws"], DirectedEdge["sssp", "base"], DirectedEdge["sssp", "base64-bytestring"], DirectedEdge["sssp", "blaze-builder"], DirectedEdge["sssp", "bytestring"], DirectedEdge["sssp", "case-insensitive"], DirectedEdge["sssp", "cereal"], DirectedEdge["sssp", "conduit"], DirectedEdge["sssp", "containers"], DirectedEdge["sssp", "cryptohash"], DirectedEdge["sssp", "data-default"], DirectedEdge["sssp", "http-conduit"], DirectedEdge["sssp", "http-types"], DirectedEdge["sssp", "mtl"], DirectedEdge["sssp", "network-conduit"], DirectedEdge["sssp", "text"], DirectedEdge["sssp", "wai"], DirectedEdge["sssp", "wai-extra"], DirectedEdge["sssp", "warp"], DirectedEdge["sstable", "array"], DirectedEdge["sstable", "base"], DirectedEdge["sstable", "binary"], DirectedEdge["sstable", "bytestring"], DirectedEdge["sstable", "cmdargs"], DirectedEdge["sstable", "containers"], DirectedEdge["sstable", "deepseq"], DirectedEdge["sstable", "directory"], DirectedEdge["sstable", "iteratee"], DirectedEdge["sstable", "QuickCheck"], DirectedEdge["sstable", "test-framework"], DirectedEdge["ssv", "base"], DirectedEdge["ssv", "containers"], DirectedEdge["stable-heap", "base"], DirectedEdge["stable-maps", "base"], DirectedEdge["stable-maps", "containers"], DirectedEdge["stable-maps", "ghc-prim"], DirectedEdge["stable-marriage", "base"], DirectedEdge["stable-marriage", "ghc-prim"], DirectedEdge["stable-memo", "base"], DirectedEdge["stable-memo", "ghc-prim"], DirectedEdge["stable-memo", "hashtables"], DirectedEdge["stable-tree", "base"], DirectedEdge["stable-tree", "binary"], DirectedEdge["stable-tree", "blaze-builder"], DirectedEdge["stable-tree", "bytestring"], DirectedEdge["stable-tree", "cereal"], DirectedEdge["stable-tree", "containers"], DirectedEdge["stable-tree", "mtl"], DirectedEdge["stable-tree", "objectid"], DirectedEdge["stable-tree", "stable-tree"], DirectedEdge["stable-tree", "text"], DirectedEdge["stack", "aeson"], DirectedEdge["stack", "ansi-terminal"], DirectedEdge["stack", "async"], DirectedEdge["stack", "attoparsec"], DirectedEdge["stack", "base"], DirectedEdge["stack", "base-compat"], DirectedEdge["stack", "base16-bytestring"], DirectedEdge["stack", "base64-bytestring"], DirectedEdge["stack", "binary"], DirectedEdge["stack", "binary-tagged"], DirectedEdge["stack", "blaze-builder"], DirectedEdge["stack", "byteable"], DirectedEdge["stack", "bytestring"], DirectedEdge["stack", "Cabal"], DirectedEdge["stack", "conduit"], DirectedEdge["stack", "conduit-extra"], DirectedEdge["stack", "containers"], DirectedEdge["stack", "cryptohash"], DirectedEdge["stack", "cryptohash-conduit"], DirectedEdge["stack", "deepseq"], DirectedEdge["stack", "directory"], DirectedEdge["stack", "edit-distance"], DirectedEdge["stack", "either"], DirectedEdge["stack", "enclosed-exceptions"], DirectedEdge["stack", "errors"], DirectedEdge["stack", "exceptions"], DirectedEdge["stack", "extra"], DirectedEdge["stack", "fast-logger"], DirectedEdge["stack", "filelock"], DirectedEdge["stack", "filepath"], DirectedEdge["stack", "fsnotify"], DirectedEdge["stack", "generic-deriving"], DirectedEdge["stack", "gitrev"], DirectedEdge["stack", "hashable"], DirectedEdge["stack", "hastache"], DirectedEdge["stack", "hit"], DirectedEdge["stack", "hpack"], DirectedEdge["stack", "hpc"], DirectedEdge["stack", "http-client"], DirectedEdge["stack", "http-client-tls"], DirectedEdge["stack", "http-conduit"], DirectedEdge["stack", "http-types"], DirectedEdge["stack", "lifted-base"], DirectedEdge["stack", "microlens"], DirectedEdge["stack", "monad-control"], DirectedEdge["stack", "monad-logger"], DirectedEdge["stack", "monad-unlift"], DirectedEdge["stack", "mtl"], DirectedEdge["stack", "open-browser"], DirectedEdge["stack", "optparse-applicative"], DirectedEdge["stack", "optparse-simple"], DirectedEdge["stack", "path"], DirectedEdge["stack", "path-io"], DirectedEdge["stack", "persistent"], DirectedEdge["stack", "persistent-sqlite"], DirectedEdge["stack", "persistent-template"], DirectedEdge["stack", "pretty"], DirectedEdge["stack", "process"], DirectedEdge["stack", "project-template"], DirectedEdge["stack", "regex-applicative-text"], DirectedEdge["stack", "resourcet"], DirectedEdge["stack", "retry"], DirectedEdge["stack", "safe"], DirectedEdge["stack", "semigroups"], DirectedEdge["stack", "split"], DirectedEdge["stack", "stack"], DirectedEdge["stack", "stm"], DirectedEdge["stack", "streaming-commons"], DirectedEdge["stack", "tar"], DirectedEdge["stack", "template-haskell"], DirectedEdge["stack", "temporary"], DirectedEdge["stack", "text"], DirectedEdge["stack", "text-binary"], DirectedEdge["stack", "time"], DirectedEdge["stack", "tls"], DirectedEdge["stack", "transformers"], DirectedEdge["stack", "transformers-base"], DirectedEdge["stack", "unix"], DirectedEdge["stack", "unix-compat"], DirectedEdge["stack", "unordered-containers"], DirectedEdge["stack", "vector"], DirectedEdge["stack", "vector-binary-instances"], DirectedEdge["stack", "yaml"], DirectedEdge["stack", "zip-archive"], DirectedEdge["stack", "zlib"], DirectedEdge["stack-hpc-coveralls", "aeson"], DirectedEdge["stack-hpc-coveralls", "base"], DirectedEdge["stack-hpc-coveralls", "bytestring"], DirectedEdge["stack-hpc-coveralls", "containers"], DirectedEdge["stack-hpc-coveralls", "docopt"], DirectedEdge["stack-hpc-coveralls", "filepath"], DirectedEdge["stack-hpc-coveralls", "hpc"], DirectedEdge["stack-hpc-coveralls", "http-client"], DirectedEdge["stack-hpc-coveralls", "lens"], DirectedEdge["stack-hpc-coveralls", "lens-aeson"], DirectedEdge["stack-hpc-coveralls", "process"], DirectedEdge["stack-hpc-coveralls", "stack-hpc-coveralls"], DirectedEdge["stack-hpc-coveralls", "text"], DirectedEdge["stack-hpc-coveralls", "utf8-string"], DirectedEdge["stack-hpc-coveralls", "wreq"], DirectedEdge["stack-prism", "base"], DirectedEdge["stack-prism", "profunctors"], DirectedEdge["stack-prism", "tagged"], DirectedEdge["stack-prism", "template-haskell"], DirectedEdge["stack-prism", "transformers"], DirectedEdge["stack-run", "ansi-terminal"], DirectedEdge["stack-run", "base"], DirectedEdge["stack-run", "bytestring"], DirectedEdge["stack-run", "Cabal"], DirectedEdge["stack-run", "conduit"], DirectedEdge["stack-run", "conduit-extra"], DirectedEdge["stack-run", "directory"], DirectedEdge["stack-run", "filepath"], DirectedEdge["stack-run", "MissingH"], DirectedEdge["stack-run", "projectroot"], DirectedEdge["stack-run-auto", "async"], DirectedEdge["stack-run-auto", "base"], DirectedEdge["stack-run-auto", "extract-dependencies"], DirectedEdge["stack-run-auto", "file-modules"], DirectedEdge["stack-run-auto", "lens"], DirectedEdge["stack-run-auto", "lens-aeson"], DirectedEdge["stack-run-auto", "MissingH"], DirectedEdge["stack-run-auto", "process"], DirectedEdge["stack-run-auto", "stack-run-auto"], DirectedEdge["stack-run-auto", "stm-containers"], DirectedEdge["stack-run-auto", "text"], DirectedEdge["stack-run-auto", "time"], DirectedEdge["stack-run-auto", "wreq"], DirectedEdge["stackage", "base"], DirectedEdge["stackage", "stackage-build-plan"], DirectedEdge["stackage", "stackage-cabal"], DirectedEdge["stackage", "stackage-cli"], DirectedEdge["stackage", "stackage-install"], DirectedEdge["stackage", "stackage-sandbox"], DirectedEdge["stackage", "stackage-setup"], DirectedEdge["stackage", "stackage-update"], DirectedEdge["stackage", "stackage-upload"], DirectedEdge["stackage-build-plan", "stackage-curator"], DirectedEdge["stackage-build-plan", "aeson"], DirectedEdge["stackage-build-plan", "base"], DirectedEdge["stackage-build-plan", "bytestring"], DirectedEdge["stackage-build-plan", "Cabal"], DirectedEdge["stackage-build-plan", "containers"], DirectedEdge["stackage-build-plan", "directory"], DirectedEdge["stackage-build-plan", "exceptions"], DirectedEdge["stackage-build-plan", "filepath"], DirectedEdge["stackage-build-plan", "http-client"], DirectedEdge["stackage-build-plan", "http-client-tls"], DirectedEdge["stackage-build-plan", "mtl"], DirectedEdge["stackage-build-plan", "optparse-applicative"], DirectedEdge["stackage-build-plan", "stackage-build-plan"], DirectedEdge["stackage-build-plan", "stackage-cli"], DirectedEdge["stackage-build-plan", "stackage-types"], DirectedEdge["stackage-build-plan", "text"], DirectedEdge["stackage-build-plan", "time"], DirectedEdge["stackage-build-plan", "yaml"], DirectedEdge["stackage-cabal", "base"], DirectedEdge["stackage-cabal", "bytestring"], DirectedEdge["stackage-cabal", "exceptions"], DirectedEdge["stackage-cabal", "http-client"], DirectedEdge["stackage-cabal", "http-client-tls"], DirectedEdge["stackage-cabal", "http-types"], DirectedEdge["stackage-cabal", "optparse-applicative"], DirectedEdge["stackage-cabal", "parsec"], DirectedEdge["stackage-cabal", "process"], DirectedEdge["stackage-cabal", "stackage-cli"], DirectedEdge["stackage-cabal", "system-fileio"], DirectedEdge["stackage-cabal", "text"], DirectedEdge["stackage-cli", "stack"], DirectedEdge["stackage-cli", "base"], DirectedEdge["stackage-cli", "conduit"], DirectedEdge["stackage-cli", "directory"], DirectedEdge["stackage-cli", "either"], DirectedEdge["stackage-cli", "exceptions"], DirectedEdge["stackage-cli", "filepath"], DirectedEdge["stackage-cli", "hashable"], DirectedEdge["stackage-cli", "optparse-applicative"], DirectedEdge["stackage-cli", "optparse-simple"], DirectedEdge["stackage-cli", "process"], DirectedEdge["stackage-cli", "split"], DirectedEdge["stackage-cli", "stackage-cli"], DirectedEdge["stackage-cli", "text"], DirectedEdge["stackage-cli", "transformers"], DirectedEdge["stackage-cli", "unordered-containers"], DirectedEdge["stackage-curator", "aeson"], DirectedEdge["stackage-curator", "amazonka"], DirectedEdge["stackage-curator", "amazonka-core"], DirectedEdge["stackage-curator", "async"], DirectedEdge["stackage-curator", "base"], DirectedEdge["stackage-curator", "base16-bytestring"], DirectedEdge["stackage-curator", "binary"], DirectedEdge["stackage-curator", "binary-orphans"], DirectedEdge["stackage-curator", "binary-tagged"], DirectedEdge["stackage-curator", "blaze-html"], DirectedEdge["stackage-curator", "byteable"], DirectedEdge["stackage-curator", "bytestring"], DirectedEdge["stackage-curator", "Cabal"], DirectedEdge["stackage-curator", "classy-prelude-conduit"], DirectedEdge["stackage-curator", "conduit"], DirectedEdge["stackage-curator", "conduit-extra"], DirectedEdge["stackage-curator", "containers"], DirectedEdge["stackage-curator", "cryptohash"], DirectedEdge["stackage-curator", "cryptohash-conduit"], DirectedEdge["stackage-curator", "data-default-class"], DirectedEdge["stackage-curator", "directory"], DirectedEdge["stackage-curator", "exceptions"], DirectedEdge["stackage-curator", "filepath"], DirectedEdge["stackage-curator", "hashable"], DirectedEdge["stackage-curator", "html-conduit"], DirectedEdge["stackage-curator", "http-client"], DirectedEdge["stackage-curator", "http-client-tls"], DirectedEdge["stackage-curator", "http-conduit"], DirectedEdge["stackage-curator", "lucid"], DirectedEdge["stackage-curator", "mime-types"], DirectedEdge["stackage-curator", "monad-unlift"], DirectedEdge["stackage-curator", "monad-unlift-ref"], DirectedEdge["stackage-curator", "mono-traversable"], DirectedEdge["stackage-curator", "mtl"], DirectedEdge["stackage-curator", "old-locale"], DirectedEdge["stackage-curator", "optparse-applicative"], DirectedEdge["stackage-curator", "optparse-simple"], DirectedEdge["stackage-curator", "process"], DirectedEdge["stackage-curator", "resourcet"], DirectedEdge["stackage-curator", "safe"], DirectedEdge["stackage-curator", "semigroups"], DirectedEdge["stackage-curator", "stackage-cli"], DirectedEdge["stackage-curator", "stackage-curator"], DirectedEdge["stackage-curator", "stackage-install"], DirectedEdge["stackage-curator", "stm"], DirectedEdge["stackage-curator", "streaming-commons"], DirectedEdge["stackage-curator", "syb"], DirectedEdge["stackage-curator", "system-fileio"], DirectedEdge["stackage-curator", "system-filepath"], DirectedEdge["stackage-curator", "tar"], DirectedEdge["stackage-curator", "temporary"], DirectedEdge["stackage-curator", "text"], DirectedEdge["stackage-curator", "time"], DirectedEdge["stackage-curator", "transformers"], DirectedEdge["stackage-curator", "unix-compat"], DirectedEdge["stackage-curator", "unordered-containers"], DirectedEdge["stackage-curator", "utf8-string"], DirectedEdge["stackage-curator", "vector"], DirectedEdge["stackage-curator", "xml-conduit"], DirectedEdge["stackage-curator", "xml-types"], DirectedEdge["stackage-curator", "yaml"], DirectedEdge["stackage-curator", "zlib"], DirectedEdge["stackage-install", "aeson"], DirectedEdge["stackage-install", "async"], DirectedEdge["stackage-install", "base"], DirectedEdge["stackage-install", "bytestring"], DirectedEdge["stackage-install", "containers"], DirectedEdge["stackage-install", "cryptohash"], DirectedEdge["stackage-install", "directory"], DirectedEdge["stackage-install", "filepath"], DirectedEdge["stackage-install", "http-client"], DirectedEdge["stackage-install", "http-client-tls"], DirectedEdge["stackage-install", "http-types"], DirectedEdge["stackage-install", "process"], DirectedEdge["stackage-install", "stackage-install"], DirectedEdge["stackage-install", "stm"], DirectedEdge["stackage-install", "tar"], DirectedEdge["stackage-install", "text"], DirectedEdge["stackage-metadata", "aeson"], DirectedEdge["stackage-metadata", "base"], DirectedEdge["stackage-metadata", "base16-bytestring"], DirectedEdge["stackage-metadata", "bytestring"], DirectedEdge["stackage-metadata", "Cabal"], DirectedEdge["stackage-metadata", "conduit"], DirectedEdge["stackage-metadata", "containers"], DirectedEdge["stackage-metadata", "cryptohash"], DirectedEdge["stackage-metadata", "directory"], DirectedEdge["stackage-metadata", "filepath"], DirectedEdge["stackage-metadata", "http-client"], DirectedEdge["stackage-metadata", "http-client-tls"], DirectedEdge["stackage-metadata", "pretty"], DirectedEdge["stackage-metadata", "resourcet"], DirectedEdge["stackage-metadata", "stackage-install"], DirectedEdge["stackage-metadata", "stackage-metadata"], DirectedEdge["stackage-metadata", "stackage-update"], DirectedEdge["stackage-metadata", "tar"], DirectedEdge["stackage-metadata", "text"], DirectedEdge["stackage-metadata", "transformers"], DirectedEdge["stackage-metadata", "yaml"], DirectedEdge["stackage-metadata", "zlib"], DirectedEdge["stackage-sandbox", "attoparsec"], DirectedEdge["stackage-sandbox", "base"], DirectedEdge["stackage-sandbox", "bytestring"], DirectedEdge["stackage-sandbox", "conduit-combinators"], DirectedEdge["stackage-sandbox", "conduit-extra"], DirectedEdge["stackage-sandbox", "directory"], DirectedEdge["stackage-sandbox", "filepath"], DirectedEdge["stackage-sandbox", "optparse-applicative"], DirectedEdge["stackage-sandbox", "process"], DirectedEdge["stackage-sandbox", "stackage-cli"], DirectedEdge["stackage-sandbox", "text"], DirectedEdge["stackage-setup", "stack"], DirectedEdge["stackage-setup", "aeson"], DirectedEdge["stackage-setup", "base"], DirectedEdge["stackage-setup", "bytestring"], DirectedEdge["stackage-setup", "classy-prelude-conduit"], DirectedEdge["stackage-setup", "cryptohash"], DirectedEdge["stackage-setup", "cryptohash-conduit"], DirectedEdge["stackage-setup", "directory"], DirectedEdge["stackage-setup", "filepath"], DirectedEdge["stackage-setup", "http-client-tls"], DirectedEdge["stackage-setup", "http-conduit"], DirectedEdge["stackage-setup", "http-types"], DirectedEdge["stackage-setup", "optparse-applicative"], DirectedEdge["stackage-setup", "process"], DirectedEdge["stackage-setup", "stackage-cli"], DirectedEdge["stackage-setup", "text"], DirectedEdge["stackage-setup", "unordered-containers"], DirectedEdge["stackage-setup", "yaml"], DirectedEdge["stackage-types", "stackage-curator"], DirectedEdge["stackage-types", "aeson"], DirectedEdge["stackage-types", "base"], DirectedEdge["stackage-types", "Cabal"], DirectedEdge["stackage-types", "containers"], DirectedEdge["stackage-types", "exceptions"], DirectedEdge["stackage-types", "hashable"], DirectedEdge["stackage-types", "safe"], DirectedEdge["stackage-types", "semigroups"], DirectedEdge["stackage-types", "text"], DirectedEdge["stackage-types", "time"], DirectedEdge["stackage-types", "unordered-containers"], DirectedEdge["stackage-types", "vector"], DirectedEdge["stackage-update", "base"], DirectedEdge["stackage-update", "directory"], DirectedEdge["stackage-update", "filepath"], DirectedEdge["stackage-update", "process"], DirectedEdge["stackage-update", "stackage-update"], DirectedEdge["stackage-upload", "aeson"], DirectedEdge["stackage-upload", "base"], DirectedEdge["stackage-upload", "bytestring"], DirectedEdge["stackage-upload", "directory"], DirectedEdge["stackage-upload", "filepath"], DirectedEdge["stackage-upload", "http-client"], DirectedEdge["stackage-upload", "http-client-tls"], DirectedEdge["stackage-upload", "http-types"], DirectedEdge["stackage-upload", "optparse-applicative"], DirectedEdge["stackage-upload", "process"], DirectedEdge["stackage-upload", "stackage-cli"], DirectedEdge["stackage-upload", "stackage-upload"], DirectedEdge["stackage-upload", "temporary"], DirectedEdge["stackage-upload", "text"], DirectedEdge["standalone-derive-topdown", "base"], DirectedEdge["standalone-derive-topdown", "mtl"], DirectedEdge["standalone-derive-topdown", "template-haskell"], DirectedEdge["standalone-haddock", "base"], DirectedEdge["standalone-haddock", "Cabal"], DirectedEdge["standalone-haddock", "containers"], DirectedEdge["standalone-haddock", "directory"], DirectedEdge["standalone-haddock", "filepath"], DirectedEdge["standalone-haddock", "optparse-applicative"], DirectedEdge["star-to-star", "base"], DirectedEdge["star-to-star-contra", "base"], DirectedEdge["star-to-star-contra", "star-to-star"], DirectedEdge["starling", "base"], DirectedEdge["starling", "binary"], DirectedEdge["starling", "bytestring"], DirectedEdge["starling", "failure"], DirectedEdge["starling", "transformers"], DirectedEdge["starrover2", "base"], DirectedEdge["starrover2", "bytestring"], DirectedEdge["starrover2", "directory"], DirectedEdge["starrover2", "EdisonCore"], DirectedEdge["starrover2", "FTGL"], DirectedEdge["starrover2", "mtl"], DirectedEdge["starrover2", "OpenGL"], DirectedEdge["starrover2", "random"], DirectedEdge["starrover2", "SDL"], DirectedEdge["stash", "aeson"], DirectedEdge["stash", "attoparsec"], DirectedEdge["stash", "base"], DirectedEdge["stash", "bytestring"], DirectedEdge["stash", "directory"], DirectedEdge["stash", "hashable"], DirectedEdge["stash", "text"], DirectedEdge["stash", "vector"], DirectedEdge["state", "arrows"], DirectedEdge["state", "base"], DirectedEdge["state", "mtl"], DirectedEdge["state-plus", "base"], DirectedEdge["state-plus", "mtl"], DirectedEdge["state-record", "lens"], DirectedEdge["state-record", "base"], DirectedEdge["state-record", "mtl"], DirectedEdge["state-record", "template-haskell"], DirectedEdge["stateWriter", "base"], DirectedEdge["stateWriter", "mtl"], DirectedEdge["stateWriter", "transformers"], DirectedEdge["statechart", "base"], DirectedEdge["statechart", "polyparse"], DirectedEdge["stateful-mtl", "base"], DirectedEdge["stateful-mtl", "MaybeT"], DirectedEdge["stateful-mtl", "mtl"], DirectedEdge["stateref", "base"], DirectedEdge["stateref", "mtl"], DirectedEdge["stateref", "stm"], DirectedEdge["statestack", "base"], DirectedEdge["statestack", "mtl"], DirectedEdge["statestack", "transformers"], DirectedEdge["statestack", "transformers-compat"], DirectedEdge["statethread", "applicative"], DirectedEdge["statethread", "base"], DirectedEdge["statethread", "transformers"], DirectedEdge["statgrab", "async"], DirectedEdge["statgrab", "base"], DirectedEdge["statgrab", "bytestring"], DirectedEdge["statgrab", "time"], DirectedEdge["statgrab", "transformers"], DirectedEdge["static-canvas", "base"], DirectedEdge["static-canvas", "double-conversion"], DirectedEdge["static-canvas", "free"], DirectedEdge["static-canvas", "mtl"], DirectedEdge["static-canvas", "text"], DirectedEdge["static-hash", "array"], DirectedEdge["static-hash", "base"], DirectedEdge["static-hash", "containers"], DirectedEdge["static-hash", "hashable"], DirectedEdge["static-hash", "primes"], DirectedEdge["static-resources", "base"], DirectedEdge["static-resources", "directory"], DirectedEdge["static-resources", "filepath"], DirectedEdge["static-resources", "hslogger"], DirectedEdge["static-resources", "MissingH"], DirectedEdge["static-resources", "mtl"], DirectedEdge["static-resources", "old-time"], DirectedEdge["static-resources", "process"], DirectedEdge["static-resources", "syb"], DirectedEdge["static-resources", "time"], DirectedEdge["staticanalysis", "base"], DirectedEdge["staticanalysis", "MissingH"], DirectedEdge["statistics", "aeson"], DirectedEdge["statistics", "base"], DirectedEdge["statistics", "binary"], DirectedEdge["statistics", "deepseq"], DirectedEdge["statistics", "erf"], DirectedEdge["statistics", "ghc-prim"], DirectedEdge["statistics", "math-functions"], DirectedEdge["statistics", "monad-par"], DirectedEdge["statistics", "mwc-random"], DirectedEdge["statistics", "primitive"], DirectedEdge["statistics", "vector"], DirectedEdge["statistics", "vector-algorithms"], DirectedEdge["statistics", "vector-binary-instances"], DirectedEdge["statistics-dirichlet", "base"], DirectedEdge["statistics-dirichlet", "deepseq"], DirectedEdge["statistics-dirichlet", "hmatrix-special"], DirectedEdge["statistics-dirichlet", "nonlinear-optimization"], DirectedEdge["statistics-dirichlet", "vector"], DirectedEdge["statistics-fusion", "statistics"], DirectedEdge["statistics-fusion", "base"], DirectedEdge["statistics-fusion", "vector"], DirectedEdge["statistics-hypergeometric-genvar", "base"], DirectedEdge["statistics-hypergeometric-genvar", "math-functions"], DirectedEdge["statistics-hypergeometric-genvar", "mwc-random"], DirectedEdge["statistics-hypergeometric-genvar", "primitive"], DirectedEdge["statistics-hypergeometric-genvar", "statistics"], DirectedEdge["statistics-linreg", "base"], DirectedEdge["statistics-linreg", "MonadRandom"], DirectedEdge["statistics-linreg", "random"], DirectedEdge["statistics-linreg", "random-shuffle"], DirectedEdge["statistics-linreg", "safe"], DirectedEdge["statistics-linreg", "statistics"], DirectedEdge["statistics-linreg", "vector"], DirectedEdge["stats", "base"], DirectedEdge["stats", "statistics"], DirectedEdge["stats", "text"], DirectedEdge["stats", "vector"], DirectedEdge["statsd", "ekg-statsd"], DirectedEdge["statsd", "base"], DirectedEdge["statsd", "bytestring"], DirectedEdge["statsd", "monad-control"], DirectedEdge["statsd", "mtl"], DirectedEdge["statsd", "network"], DirectedEdge["statsd", "random"], DirectedEdge["statsd-client", "base"], DirectedEdge["statsd-client", "byteable"], DirectedEdge["statsd-client", "bytestring"], DirectedEdge["statsd-client", "crypto-api"], DirectedEdge["statsd-client", "cryptohash"], DirectedEdge["statsd-client", "digest-pure"], DirectedEdge["statsd-client", "DRBG"], DirectedEdge["statsd-client", "network"], DirectedEdge["statsd-client", "network-uri"], DirectedEdge["statsd-client", "old-time"], DirectedEdge["statsd-client", "random"], DirectedEdge["statsd-client", "time-units"], DirectedEdge["statsd-datadog", "base"], DirectedEdge["statsd-datadog", "bytestring"], DirectedEdge["statsd-datadog", "monad-control"], DirectedEdge["statsd-datadog", "network"], DirectedEdge["statsd-datadog", "text"], DirectedEdge["statsd-datadog", "transformers-base"], DirectedEdge["statvfs", "base"], DirectedEdge["stb-image", "base"], DirectedEdge["stb-image", "bitmap"], DirectedEdge["stb-image", "bytestring"], DirectedEdge["stb-truetype", "array"], DirectedEdge["stb-truetype", "base"], DirectedEdge["stb-truetype", "bytestring"], DirectedEdge["stb-truetype", "containers"], DirectedEdge["stdata", "base"], DirectedEdge["stdata", "parsec"], DirectedEdge["stdata", "syb"], DirectedEdge["stdata", "template-haskell"], DirectedEdge["stdf", "aeson"], DirectedEdge["stdf", "base"], DirectedEdge["stdf", "base64-bytestring"], DirectedEdge["stdf", "binary"], DirectedEdge["stdf", "bytestring"], DirectedEdge["stdf", "containers"], DirectedEdge["stdf", "split"], DirectedEdge["stdf", "stdf"], DirectedEdge["stdf", "text"], DirectedEdge["stdf", "time"], DirectedEdge["stdf", "unix-time"], DirectedEdge["stdf", "zlib"], DirectedEdge["steambrowser", "base"], DirectedEdge["steambrowser", "directory"], DirectedEdge["steambrowser", "parsec"], DirectedEdge["steambrowser", "transformers"], DirectedEdge["steeloverseer", "ansi-terminal"], DirectedEdge["steeloverseer", "base"], DirectedEdge["steeloverseer", "filepath"], DirectedEdge["steeloverseer", "fsnotify"], DirectedEdge["steeloverseer", "process"], DirectedEdge["steeloverseer", "regex-tdfa"], DirectedEdge["steeloverseer", "time"], DirectedEdge["steeloverseer", "unix"], DirectedEdge["stemmer", "base"], DirectedEdge["step-function", "base"], DirectedEdge["stepwise", "base"], DirectedEdge["stepwise", "containers"], DirectedEdge["stepwise", "mtl"], DirectedEdge["stickyKeysHotKey", "base"], DirectedEdge["stitch", "base"], DirectedEdge["stitch", "containers"], DirectedEdge["stitch", "text"], DirectedEdge["stitch", "transformers"], DirectedEdge["stm", "array"], DirectedEdge["stm", "base"], DirectedEdge["stm-channelize", "base"], DirectedEdge["stm-channelize", "stm"], DirectedEdge["stm-chans", "base"], DirectedEdge["stm-chans", "stm"], DirectedEdge["stm-chunked-queues", "async"], DirectedEdge["stm-chunked-queues", "base"], DirectedEdge["stm-chunked-queues", "stm"], DirectedEdge["stm-conduit", "async"], DirectedEdge["stm-conduit", "base"], DirectedEdge["stm-conduit", "cereal"], DirectedEdge["stm-conduit", "cereal-conduit"], DirectedEdge["stm-conduit", "conduit"], DirectedEdge["stm-conduit", "conduit-combinators"], DirectedEdge["stm-conduit", "conduit-extra"], DirectedEdge["stm-conduit", "directory"], DirectedEdge["stm-conduit", "ghc-prim"], DirectedEdge["stm-conduit", "lifted-async"], DirectedEdge["stm-conduit", "lifted-base"], DirectedEdge["stm-conduit", "monad-control"], DirectedEdge["stm-conduit", "monad-loops"], DirectedEdge["stm-conduit", "resourcet"], DirectedEdge["stm-conduit", "stm"], DirectedEdge["stm-conduit", "stm-chans"], DirectedEdge["stm-conduit", "transformers"], DirectedEdge["stm-conduit", "void"], DirectedEdge["stm-containers", "base"], DirectedEdge["stm-containers", "base-prelude"], DirectedEdge["stm-containers", "focus"], DirectedEdge["stm-containers", "hashable"], DirectedEdge["stm-containers", "list-t"], DirectedEdge["stm-containers", "primitive"], DirectedEdge["stm-containers", "transformers"], DirectedEdge["stm-delay", "base"], DirectedEdge["stm-delay", "stm"], DirectedEdge["stm-firehose", "base"], DirectedEdge["stm-firehose", "blaze-builder"], DirectedEdge["stm-firehose", "conduit"], DirectedEdge["stm-firehose", "http-types"], DirectedEdge["stm-firehose", "resourcet"], DirectedEdge["stm-firehose", "stm"], DirectedEdge["stm-firehose", "stm-chans"], DirectedEdge["stm-firehose", "stm-conduit"], DirectedEdge["stm-firehose", "transformers"], DirectedEdge["stm-firehose", "wai"], DirectedEdge["stm-firehose", "wai-conduit"], DirectedEdge["stm-firehose", "warp"], DirectedEdge["stm-io-hooks", "array"], DirectedEdge["stm-io-hooks", "base"], DirectedEdge["stm-io-hooks", "containers"], DirectedEdge["stm-io-hooks", "mtl"], DirectedEdge["stm-io-hooks", "stm"], DirectedEdge["stm-lifted", "base"], DirectedEdge["stm-lifted", "stm"], DirectedEdge["stm-lifted", "transformers"], DirectedEdge["stm-linkedlist", "base"], DirectedEdge["stm-linkedlist", "stm"], DirectedEdge["stm-orelse-io", "base"], DirectedEdge["stm-orelse-io", "stm"], DirectedEdge["stm-promise", "base"], DirectedEdge["stm-promise", "mtl"], DirectedEdge["stm-promise", "process"], DirectedEdge["stm-promise", "stm"], DirectedEdge["stm-promise", "unix"], DirectedEdge["stm-queue-extras", "base"], DirectedEdge["stm-queue-extras", "stm"], DirectedEdge["stm-queue-extras", "stm-chans"], DirectedEdge["stm-sbchan", "base"], DirectedEdge["stm-sbchan", "stm"], DirectedEdge["stm-sbchan", "stm-tlist"], DirectedEdge["stm-split", "base"], DirectedEdge["stm-split", "stm"], DirectedEdge["stm-stats", "base"], DirectedEdge["stm-stats", "containers"], DirectedEdge["stm-stats", "stm"], DirectedEdge["stm-stats", "template-haskell"], DirectedEdge["stm-stats", "time"], DirectedEdge["stm-tlist", "base"], DirectedEdge["stm-tlist", "stm"], DirectedEdge["stmcontrol", "base"], DirectedEdge["stmcontrol", "mtl"], DirectedEdge["stmcontrol", "stm"], DirectedEdge["stomp-conduit", "base"], DirectedEdge["stomp-conduit", "conduit"], DirectedEdge["stomp-conduit", "mime"], DirectedEdge["stomp-conduit", "mtl"], DirectedEdge["stomp-conduit", "resourcet"], DirectedEdge["stomp-conduit", "stomp-queue"], DirectedEdge["stomp-conduit", "stompl"], DirectedEdge["stomp-patterns", "base"], DirectedEdge["stomp-patterns", "bytestring"], DirectedEdge["stomp-patterns", "containers"], DirectedEdge["stomp-patterns", "mime"], DirectedEdge["stomp-patterns", "mtl"], DirectedEdge["stomp-patterns", "split"], DirectedEdge["stomp-patterns", "stomp-queue"], DirectedEdge["stomp-patterns", "stompl"], DirectedEdge["stomp-patterns", "time"], DirectedEdge["stomp-queue", "attoparsec"], DirectedEdge["stomp-queue", "base"], DirectedEdge["stomp-queue", "bytestring"], DirectedEdge["stomp-queue", "conduit"], DirectedEdge["stomp-queue", "conduit-extra"], DirectedEdge["stomp-queue", "mime"], DirectedEdge["stomp-queue", "mtl"], DirectedEdge["stomp-queue", "network-conduit-tls"], DirectedEdge["stomp-queue", "split"], DirectedEdge["stomp-queue", "stompl"], DirectedEdge["stomp-queue", "time"], DirectedEdge["stomp-queue", "utf8-string"], DirectedEdge["stompl", "attoparsec"], DirectedEdge["stompl", "base"], DirectedEdge["stompl", "bytestring"], DirectedEdge["stompl", "mime"], DirectedEdge["stompl", "split"], DirectedEdge["stompl", "text"], DirectedEdge["stompl", "utf8-string"], DirectedEdge["stopwatch", "base"], DirectedEdge["stopwatch", "clock"], DirectedEdge["stopwatch", "transformers"], DirectedEdge["storable", "base"], DirectedEdge["storable", "mtl"], DirectedEdge["storable-complex", "base"], DirectedEdge["storable-endian", "base"], DirectedEdge["storable-endian", "byteorder"], DirectedEdge["storable-record", "base"], DirectedEdge["storable-record", "special-functors"], DirectedEdge["storable-record", "storablevector"], DirectedEdge["storable-record", "timeit"], DirectedEdge["storable-record", "transformers"], DirectedEdge["storable-record", "utility-ht"], DirectedEdge["storable-static-array", "array"], DirectedEdge["storable-static-array", "base"], DirectedEdge["storable-static-array", "tagged"], DirectedEdge["storable-static-array", "vector"], DirectedEdge["storable-tuple", "base"], DirectedEdge["storable-tuple", "base-orphans"], DirectedEdge["storable-tuple", "special-functors"], DirectedEdge["storable-tuple", "storable-record"], DirectedEdge["storable-tuple", "utility-ht"], DirectedEdge["storablevector", "base"], DirectedEdge["storablevector", "non-negative"], DirectedEdge["storablevector", "QuickCheck"], DirectedEdge["storablevector", "statethread"], DirectedEdge["storablevector", "syb"], DirectedEdge["storablevector", "transformers"], DirectedEdge["storablevector", "unsafe"], DirectedEdge["storablevector", "utility-ht"], DirectedEdge["storablevector-carray", "base"], DirectedEdge["storablevector-carray", "carray"], DirectedEdge["storablevector-carray", "storablevector"], DirectedEdge["storablevector-carray", "utility-ht"], DirectedEdge["storablevector-streamfusion", "base"], DirectedEdge["storablevector-streamfusion", "binary"], DirectedEdge["storablevector-streamfusion", "bytestring"], DirectedEdge["storablevector-streamfusion", "old-time"], DirectedEdge["storablevector-streamfusion", "storablevector"], DirectedEdge["storablevector-streamfusion", "stream-fusion"], DirectedEdge["storablevector-streamfusion", "utility-ht"], DirectedEdge["store", "array"], DirectedEdge["store", "base"], DirectedEdge["store", "base-orphans"], DirectedEdge["store", "bytestring"], DirectedEdge["store", "conduit"], DirectedEdge["store", "containers"], DirectedEdge["store", "cryptohash"], DirectedEdge["store", "deepseq"], DirectedEdge["store", "fail"], DirectedEdge["store", "ghc-prim"], DirectedEdge["store", "hashable"], DirectedEdge["store", "hspec"], DirectedEdge["store", "hspec-smallcheck"], DirectedEdge["store", "integer-gmp"], DirectedEdge["store", "lifted-base"], DirectedEdge["store", "monad-control"], DirectedEdge["store", "mono-traversable"], DirectedEdge["store", "primitive"], DirectedEdge["store", "resourcet"], DirectedEdge["store", "safe"], DirectedEdge["store", "semigroups"], DirectedEdge["store", "smallcheck"], DirectedEdge["store", "syb"], DirectedEdge["store", "template-haskell"], DirectedEdge["store", "text"], DirectedEdge["store", "th-lift"], DirectedEdge["store", "th-lift-instances"], DirectedEdge["store", "th-orphans"], DirectedEdge["store", "th-reify-many"], DirectedEdge["store", "th-utilities"], DirectedEdge["store", "time"], DirectedEdge["store", "transformers"], DirectedEdge["store", "unordered-containers"], DirectedEdge["store", "vector"], DirectedEdge["store", "void"], DirectedEdge["str", "base"], DirectedEdge["str", "base16-bytestring"], DirectedEdge["str", "bytestring"], DirectedEdge["str", "Crypto"], DirectedEdge["str", "hashable"], DirectedEdge["str", "MissingH"], DirectedEdge["str", "text"], DirectedEdge["str", "utf8-string"], DirectedEdge["stratosphere", "aeson"], DirectedEdge["stratosphere", "aeson-pretty"], DirectedEdge["stratosphere", "base"], DirectedEdge["stratosphere", "bytestring"], DirectedEdge["stratosphere", "ede"], DirectedEdge["stratosphere", "lens"], DirectedEdge["stratosphere", "stratosphere"], DirectedEdge["stratosphere", "system-fileio"], DirectedEdge["stratosphere", "system-filepath"], DirectedEdge["stratosphere", "template-haskell"], DirectedEdge["stratosphere", "text"], DirectedEdge["stratosphere", "unordered-containers"], DirectedEdge["stratum-tool", "aeson"], DirectedEdge["stratum-tool", "async"], DirectedEdge["stratum-tool", "base"], DirectedEdge["stratum-tool", "bytestring"], DirectedEdge["stratum-tool", "bytestring-builder"], DirectedEdge["stratum-tool", "cmdargs"], DirectedEdge["stratum-tool", "connection"], DirectedEdge["stratum-tool", "containers"], DirectedEdge["stratum-tool", "curl"], DirectedEdge["stratum-tool", "curl-aeson"], DirectedEdge["stratum-tool", "network"], DirectedEdge["stratum-tool", "stm"], DirectedEdge["stratum-tool", "text"], DirectedEdge["stratum-tool", "time"], DirectedEdge["stratum-tool", "unordered-containers"], DirectedEdge["stratum-tool", "vector"], DirectedEdge["stratux", "base"], DirectedEdge["stratux", "stratux-types"], DirectedEdge["stratux", "stratux-websockets"], DirectedEdge["stratux-types", "aeson"], DirectedEdge["stratux-types", "base"], DirectedEdge["stratux-types", "bytestring"], DirectedEdge["stratux-types", "lens"], DirectedEdge["stratux-types", "scientific"], DirectedEdge["stratux-types", "time"], DirectedEdge["stratux-websockets", "aeson"], DirectedEdge["stratux-websockets", "base"], DirectedEdge["stratux-websockets", "either"], DirectedEdge["stratux-websockets", "network"], DirectedEdge["stratux-websockets", "stratux-types"], DirectedEdge["stratux-websockets", "text"], DirectedEdge["stratux-websockets", "transformers"], DirectedEdge["stratux-websockets", "websockets"], DirectedEdge["stream", "base"], DirectedEdge["stream", "bytestring"], DirectedEdge["stream", "exceptions"], DirectedEdge["stream", "mtl"], DirectedEdge["stream", "streaming-commons"], DirectedEdge["stream", "transformers"], DirectedEdge["stream-fusion", "base"], DirectedEdge["stream-monad", "base"], DirectedEdge["stream-monad", "criterion"], DirectedEdge["stream-monad", "logict"], DirectedEdge["streamed", "reactive-balsa"], DirectedEdge["streamed", "alsa-core"], DirectedEdge["streamed", "alsa-seq"], DirectedEdge["streamed", "base"], DirectedEdge["streamed", "containers"], DirectedEdge["streamed", "data-accessor"], DirectedEdge["streamed", "data-accessor-transformers"], DirectedEdge["streamed", "event-list"], DirectedEdge["streamed", "midi"], DirectedEdge["streamed", "midi-alsa"], DirectedEdge["streamed", "non-negative"], DirectedEdge["streamed", "random"], DirectedEdge["streamed", "transformers"], DirectedEdge["streamed", "utility-ht"], DirectedEdge["streaming", "base"], DirectedEdge["streaming", "exceptions"], DirectedEdge["streaming", "ghc-prim"], DirectedEdge["streaming", "mmorph"], DirectedEdge["streaming", "monad-control"], DirectedEdge["streaming", "mtl"], DirectedEdge["streaming", "resourcet"], DirectedEdge["streaming", "time"], DirectedEdge["streaming", "transformers"], DirectedEdge["streaming", "transformers-base"], DirectedEdge["streaming-bytestring", "base"], DirectedEdge["streaming-bytestring", "bytestring"], DirectedEdge["streaming-bytestring", "bytestring-builder"], DirectedEdge["streaming-bytestring", "deepseq"], DirectedEdge["streaming-bytestring", "exceptions"], DirectedEdge["streaming-bytestring", "mmorph"], DirectedEdge["streaming-bytestring", "mtl"], DirectedEdge["streaming-bytestring", "resourcet"], DirectedEdge["streaming-bytestring", "streaming"], DirectedEdge["streaming-bytestring", "transformers"], DirectedEdge["streaming-bytestring", "transformers-base"], DirectedEdge["streaming-commons", "array"], DirectedEdge["streaming-commons", "async"], DirectedEdge["streaming-commons", "base"], DirectedEdge["streaming-commons", "blaze-builder"], DirectedEdge["streaming-commons", "bytestring"], DirectedEdge["streaming-commons", "bytestring-builder"], DirectedEdge["streaming-commons", "directory"], DirectedEdge["streaming-commons", "filepath"], DirectedEdge["streaming-commons", "network"], DirectedEdge["streaming-commons", "process"], DirectedEdge["streaming-commons", "random"], DirectedEdge["streaming-commons", "stm"], DirectedEdge["streaming-commons", "text"], DirectedEdge["streaming-commons", "transformers"], DirectedEdge["streaming-commons", "unix"], DirectedEdge["streaming-commons", "zlib"], DirectedEdge["streaming-histogram", "base"], DirectedEdge["streaming-histogram", "containers"], DirectedEdge["streaming-histogram", "criterion"], DirectedEdge["streaming-png", "base"], DirectedEdge["streaming-png", "bytestring"], DirectedEdge["streaming-png", "cereal"], DirectedEdge["streaming-png", "criterion"], DirectedEdge["streaming-png", "exceptions"], DirectedEdge["streaming-png", "JuicyPixels"], DirectedEdge["streaming-png", "mmorph"], DirectedEdge["streaming-png", "mtl"], DirectedEdge["streaming-png", "resourcet"], DirectedEdge["streaming-png", "streaming"], DirectedEdge["streaming-png", "streaming-bytestring"], DirectedEdge["streaming-png", "streaming-commons"], DirectedEdge["streaming-png", "streaming-png"], DirectedEdge["streaming-png", "transformers"], DirectedEdge["streaming-png", "vector"], DirectedEdge["streaming-utils", "aeson"], DirectedEdge["streaming-utils", "attoparsec"], DirectedEdge["streaming-utils", "base"], DirectedEdge["streaming-utils", "bytestring"], DirectedEdge["streaming-utils", "http-client"], DirectedEdge["streaming-utils", "http-client-tls"], DirectedEdge["streaming-utils", "json-stream"], DirectedEdge["streaming-utils", "mtl"], DirectedEdge["streaming-utils", "network"], DirectedEdge["streaming-utils", "network-simple"], DirectedEdge["streaming-utils", "pipes"], DirectedEdge["streaming-utils", "resourcet"], DirectedEdge["streaming-utils", "streaming"], DirectedEdge["streaming-utils", "streaming-bytestring"], DirectedEdge["streaming-utils", "transformers"], DirectedEdge["streaming-wai", "base"], DirectedEdge["streaming-wai", "bytestring"], DirectedEdge["streaming-wai", "bytestring-builder"], DirectedEdge["streaming-wai", "http-types"], DirectedEdge["streaming-wai", "streaming"], DirectedEdge["streaming-wai", "wai"], DirectedEdge["streamproc", "base"], DirectedEdge["streams", "adjunctions"], DirectedEdge["streams", "base"], DirectedEdge["streams", "comonad"], DirectedEdge["streams", "distributive"], DirectedEdge["streams", "semigroupoids"], DirectedEdge["streams", "semigroups"], DirectedEdge["strict", "array"], DirectedEdge["strict", "base"], DirectedEdge["strict-base-types", "aeson"], DirectedEdge["strict-base-types", "base"], DirectedEdge["strict-base-types", "bifunctors"], DirectedEdge["strict-base-types", "binary"], DirectedEdge["strict-base-types", "deepseq"], DirectedEdge["strict-base-types", "ghc-prim"], DirectedEdge["strict-base-types", "hashable"], DirectedEdge["strict-base-types", "lens"], DirectedEdge["strict-base-types", "QuickCheck"], DirectedEdge["strict-base-types", "strict"], DirectedEdge["strict-concurrency", "base"], DirectedEdge["strict-concurrency", "deepseq"], DirectedEdge["strict-ghc-plugin", "base"], DirectedEdge["strict-ghc-plugin", "ghc"], DirectedEdge["strict-ghc-plugin", "syb"], DirectedEdge["strict-identity", "base"], DirectedEdge["strict-io", "base"], DirectedEdge["strict-io", "deepseq"], DirectedEdge["strict-io", "extensible-exceptions"], DirectedEdge["strictify", "base"], DirectedEdge["strictify", "directory"], DirectedEdge["strictify", "filepath"], DirectedEdge["strictify", "process"], DirectedEdge["strictify", "unix"], DirectedEdge["strictly", "base"], DirectedEdge["strictly", "deepseq"], DirectedEdge["string", "text"], DirectedEdge["string-class", "base"], DirectedEdge["string-class", "bytestring"], DirectedEdge["string-class", "tagged"], DirectedEdge["string-class", "text"], DirectedEdge["string-combinators", "base"], DirectedEdge["string-conv", "base"], DirectedEdge["string-conv", "bytestring"], DirectedEdge["string-conv", "text"], DirectedEdge["string-conversions", "base"], DirectedEdge["string-conversions", "bytestring"], DirectedEdge["string-conversions", "text"], DirectedEdge["string-conversions", "utf8-string"], DirectedEdge["string-convert", "base"], DirectedEdge["string-convert", "bytestring"], DirectedEdge["string-convert", "text"], DirectedEdge["string-convert", "utf8-string"], DirectedEdge["string-qq", "base"], DirectedEdge["string-qq", "template-haskell"], DirectedEdge["string-quote", "base"], DirectedEdge["string-quote", "template-haskell"], DirectedEdge["string-similarity", "base"], DirectedEdge["string-similarity", "suffixtree"], DirectedEdge["string-typelits", "base"], DirectedEdge["string-typelits", "template-haskell"], DirectedEdge["string-typelits", "type-combinators"], DirectedEdge["string-typelits", "type-combinators-quote"], DirectedEdge["stringable", "base"], DirectedEdge["stringable", "bytestring"], DirectedEdge["stringable", "system-filepath"], DirectedEdge["stringable", "text"], DirectedEdge["stringbuilder", "base"], DirectedEdge["stringlike", "base"], DirectedEdge["stringlike", "bytestring"], DirectedEdge["stringlike", "text"], DirectedEdge["stringprep", "base"], DirectedEdge["stringprep", "containers"], DirectedEdge["stringprep", "text"], DirectedEdge["stringprep", "text-icu"], DirectedEdge["strings", "base"], DirectedEdge["strings", "bytestring"], DirectedEdge["strings", "text"], DirectedEdge["stringsearch", "array"], DirectedEdge["stringsearch", "base"], DirectedEdge["stringsearch", "bytestring"], DirectedEdge["stringsearch", "containers"], DirectedEdge["stringtable-atom", "base"], DirectedEdge["stringtable-atom", "binary"], DirectedEdge["stringtable-atom", "bytestring"], DirectedEdge["stringtable-atom", "containers"], DirectedEdge["stringtable-atom", "syb"], DirectedEdge["strio", "base"], DirectedEdge["strio", "strio"], DirectedEdge["stripe", "aeson"], DirectedEdge["stripe", "base"], DirectedEdge["stripe", "bytestring"], DirectedEdge["stripe", "http-conduit"], DirectedEdge["stripe", "http-types"], DirectedEdge["stripe", "mtl"], DirectedEdge["stripe", "text"], DirectedEdge["stripe", "time"], DirectedEdge["stripe", "unordered-containers"], DirectedEdge["stripe", "utf8-string"], DirectedEdge["stripe-core", "aeson"], DirectedEdge["stripe-core", "base"], DirectedEdge["stripe-core", "bytestring"], DirectedEdge["stripe-core", "mtl"], DirectedEdge["stripe-core", "text"], DirectedEdge["stripe-core", "time"], DirectedEdge["stripe-core", "transformers"], DirectedEdge["stripe-core", "unordered-containers"], DirectedEdge["stripe-haskell", "base"], DirectedEdge["stripe-haskell", "stripe-core"], DirectedEdge["stripe-haskell", "stripe-http-streams"], DirectedEdge["stripe-http-streams", "aeson"], DirectedEdge["stripe-http-streams", "base"], DirectedEdge["stripe-http-streams", "bytestring"], DirectedEdge["stripe-http-streams", "HsOpenSSL"], DirectedEdge["stripe-http-streams", "http-streams"], DirectedEdge["stripe-http-streams", "io-streams"], DirectedEdge["stripe-http-streams", "stripe-core"], DirectedEdge["stripe-http-streams", "text"], DirectedEdge["strive", "aeson"], DirectedEdge["strive", "base"], DirectedEdge["strive", "bytestring"], DirectedEdge["strive", "data-default"], DirectedEdge["strive", "gpolyline"], DirectedEdge["strive", "http-conduit"], DirectedEdge["strive", "http-types"], DirectedEdge["strive", "template-haskell"], DirectedEdge["strive", "text"], DirectedEdge["strive", "time"], DirectedEdge["strive", "transformers"], DirectedEdge["strptime", "base"], DirectedEdge["strptime", "bytestring"], DirectedEdge["strptime", "text"], DirectedEdge["strptime", "time"], DirectedEdge["structs", "base"], DirectedEdge["structs", "deepseq"], DirectedEdge["structs", "ghc-prim"], DirectedEdge["structs", "primitive"], DirectedEdge["structural-induction", "base"], DirectedEdge["structural-induction", "containers"], DirectedEdge["structural-induction", "genifunctors"], DirectedEdge["structural-induction", "mtl"], DirectedEdge["structural-induction", "pretty"], DirectedEdge["structural-induction", "safe"], DirectedEdge["structural-traversal", "base"], DirectedEdge["structural-traversal", "mtl"], DirectedEdge["structural-traversal", "template-haskell"], DirectedEdge["structured-haskell-mode", "applicative-quoters"], DirectedEdge["structured-haskell-mode", "base"], DirectedEdge["structured-haskell-mode", "descriptive"], DirectedEdge["structured-haskell-mode", "ghc-prim"], DirectedEdge["structured-haskell-mode", "haskell-src-exts"], DirectedEdge["structured-haskell-mode", "text"], DirectedEdge["structured-mongoDB", "array"], DirectedEdge["structured-mongoDB", "base"], DirectedEdge["structured-mongoDB", "bson"], DirectedEdge["structured-mongoDB", "bytestring"], DirectedEdge["structured-mongoDB", "compact-string-fix"], DirectedEdge["structured-mongoDB", "containers"], DirectedEdge["structured-mongoDB", "monad-control"], DirectedEdge["structured-mongoDB", "mongoDB"], DirectedEdge["structured-mongoDB", "mtl"], DirectedEdge["structured-mongoDB", "old-time"], DirectedEdge["structured-mongoDB", "template-haskell"], DirectedEdge["structured-mongoDB", "transformers"], DirectedEdge["structured-mongoDB", "transformers-base"], DirectedEdge["structures", "base"], DirectedEdge["structures", "containers"], DirectedEdge["structures", "contravariant"], DirectedEdge["structures", "deepseq"], DirectedEdge["structures", "free"], DirectedEdge["structures", "ghc"], DirectedEdge["structures", "ghc-prim"], DirectedEdge["structures", "hashable"], DirectedEdge["structures", "hybrid-vectors"], DirectedEdge["structures", "lens"], DirectedEdge["structures", "monad-st"], DirectedEdge["structures", "parallel"], DirectedEdge["structures", "primitive"], DirectedEdge["structures", "semigroups"], DirectedEdge["structures", "transformers"], DirectedEdge["structures", "vector"], DirectedEdge["structures", "vector-algorithms"], DirectedEdge["stunclient", "base"], DirectedEdge["stunclient", "bytestring"], DirectedEdge["stunclient", "cereal"], DirectedEdge["stunclient", "crypto-api"], DirectedEdge["stunclient", "cryptohash"], DirectedEdge["stunclient", "cryptohash-cryptoapi"], DirectedEdge["stunclient", "digest"], DirectedEdge["stunclient", "network"], DirectedEdge["stunclient", "random"], DirectedEdge["stunclient", "stringprep"], DirectedEdge["stunclient", "text"], DirectedEdge["stunclient", "transformers"], DirectedEdge["stunclient", "unbounded-delays"], DirectedEdge["stunts", "base"], DirectedEdge["stunts", "binary"], DirectedEdge["stunts", "bullet"], DirectedEdge["stunts", "bytestring"], DirectedEdge["stunts", "Codec-Image-DevIL"], DirectedEdge["stunts", "containers"], DirectedEdge["stunts", "directory"], DirectedEdge["stunts", "elerea"], DirectedEdge["stunts", "GLFW-b"], DirectedEdge["stunts", "lambdacube-bullet"], DirectedEdge["stunts", "lambdacube-engine"], DirectedEdge["stunts", "mtl"], DirectedEdge["stunts", "random"], DirectedEdge["stunts", "vector"], DirectedEdge["stylish-haskell", "aeson"], DirectedEdge["stylish-haskell", "base"], DirectedEdge["stylish-haskell", "bytestring"], DirectedEdge["stylish-haskell", "cmdargs"], DirectedEdge["stylish-haskell", "containers"], DirectedEdge["stylish-haskell", "directory"], DirectedEdge["stylish-haskell", "filepath"], DirectedEdge["stylish-haskell", "haskell-src-exts"], DirectedEdge["stylish-haskell", "mtl"], DirectedEdge["stylish-haskell", "strict"], DirectedEdge["stylish-haskell", "stylish-haskell"], DirectedEdge["stylish-haskell", "syb"], DirectedEdge["stylish-haskell", "yaml"], DirectedEdge["stylized", "ansi-terminal"], DirectedEdge["stylized", "base"], DirectedEdge["sub-state", "base"], DirectedEdge["sub-state", "mtl"], DirectedEdge["sub-state", "sets"], DirectedEdge["subhask", "approximate"], DirectedEdge["subhask", "array"], DirectedEdge["subhask", "base"], DirectedEdge["subhask", "bloomfilter"], DirectedEdge["subhask", "bytes"], DirectedEdge["subhask", "bytestring"], DirectedEdge["subhask", "cassava"], DirectedEdge["subhask", "containers"], DirectedEdge["subhask", "deepseq"], DirectedEdge["subhask", "erf"], DirectedEdge["subhask", "gamma"], DirectedEdge["subhask", "ghc-prim"], DirectedEdge["subhask", "hmatrix"], DirectedEdge["subhask", "hyperloglog"], DirectedEdge["subhask", "lens"], DirectedEdge["subhask", "monad-primitive"], DirectedEdge["subhask", "MonadRandom"], DirectedEdge["subhask", "mtl"], DirectedEdge["subhask", "parallel"], DirectedEdge["subhask", "primitive"], DirectedEdge["subhask", "QuickCheck"], DirectedEdge["subhask", "semigroups"], DirectedEdge["subhask", "template-haskell"], DirectedEdge["subhask", "vector"], DirectedEdge["subleq-toolchain", "base"], DirectedEdge["subleq-toolchain", "cmdargs"], DirectedEdge["subleq-toolchain", "containers"], DirectedEdge["subleq-toolchain", "lens"], DirectedEdge["subleq-toolchain", "mtl"], DirectedEdge["subleq-toolchain", "parsec"], DirectedEdge["subleq-toolchain", "pretty"], DirectedEdge["subnet", "base"], DirectedEdge["subnet", "split"], DirectedEdge["subtitleParser", "attoparsec"], DirectedEdge["subtitleParser", "base"], DirectedEdge["subtitleParser", "containers"], DirectedEdge["subtitleParser", "text"], DirectedEdge["subtitles", "base"], DirectedEdge["subtitles", "split"], DirectedEdge["subwordgraph", "base"], DirectedEdge["subwordgraph", "containers"], DirectedEdge["subwordgraph", "mtl"], DirectedEdge["success", "base"], DirectedEdge["success", "monad-control"], DirectedEdge["success", "mtl"], DirectedEdge["success", "transformers"], DirectedEdge["success", "transformers-base"], DirectedEdge["suffixarray", "base"], DirectedEdge["suffixarray", "HUnit"], DirectedEdge["suffixarray", "vector"], DirectedEdge["suffixtree", "base"], DirectedEdge["suffixtree", "bytestring"], DirectedEdge["suffixtree", "containers"], DirectedEdge["sugarhaskell", "base"], DirectedEdge["sugarhaskell", "process"], DirectedEdge["suitable", "base"], DirectedEdge["suitable", "containers"], DirectedEdge["sump", "base"], DirectedEdge["sump", "bytestring"], DirectedEdge["sump", "data-default"], DirectedEdge["sump", "either"], DirectedEdge["sump", "lens"], DirectedEdge["sump", "serialport"], DirectedEdge["sump", "transformers"], DirectedEdge["sump", "vector"], DirectedEdge["sundown", "base"], DirectedEdge["sundown", "bytestring"], DirectedEdge["sundown", "text"], DirectedEdge["sunlight", "base"], DirectedEdge["sunlight", "bytestring"], DirectedEdge["sunlight", "Cabal"], DirectedEdge["sunlight", "directory"], DirectedEdge["sunlight", "old-locale"], DirectedEdge["sunlight", "process"], DirectedEdge["sunlight", "random"], DirectedEdge["sunlight", "time"], DirectedEdge["sunlight", "tuple"], DirectedEdge["sunroof-compiler", "base"], DirectedEdge["sunroof-compiler", "Boolean"], DirectedEdge["sunroof-compiler", "containers"], DirectedEdge["sunroof-compiler", "data-default"], DirectedEdge["sunroof-compiler", "data-reify"], DirectedEdge["sunroof-compiler", "mtl"], DirectedEdge["sunroof-compiler", "operational"], DirectedEdge["sunroof-compiler", "semigroups"], DirectedEdge["sunroof-compiler", "tagged"], DirectedEdge["sunroof-compiler", "template-haskell"], DirectedEdge["sunroof-compiler", "transformers"], DirectedEdge["sunroof-compiler", "vector-space"], DirectedEdge["sunroof-examples", "base"], DirectedEdge["sunroof-examples", "Boolean"], DirectedEdge["sunroof-examples", "containers"], DirectedEdge["sunroof-examples", "data-default"], DirectedEdge["sunroof-examples", "directory"], DirectedEdge["sunroof-examples", "filepath"], DirectedEdge["sunroof-examples", "parallel-io"], DirectedEdge["sunroof-examples", "process"], DirectedEdge["sunroof-examples", "QuickCheck"], DirectedEdge["sunroof-examples", "random"], DirectedEdge["sunroof-examples", "semigroups"], DirectedEdge["sunroof-examples", "shake"], DirectedEdge["sunroof-examples", "stm"], DirectedEdge["sunroof-examples", "sunroof-compiler"], DirectedEdge["sunroof-examples", "sunroof-server"], DirectedEdge["sunroof-server", "aeson"], DirectedEdge["sunroof-server", "base"], DirectedEdge["sunroof-server", "containers"], DirectedEdge["sunroof-server", "data-default"], DirectedEdge["sunroof-server", "filepath"], DirectedEdge["sunroof-server", "kansas-comet"], DirectedEdge["sunroof-server", "scientific"], DirectedEdge["sunroof-server", "scotty"], DirectedEdge["sunroof-server", "semigroups"], DirectedEdge["sunroof-server", "stm"], DirectedEdge["sunroof-server", "sunroof-compiler"], DirectedEdge["sunroof-server", "tagged"], DirectedEdge["sunroof-server", "text"], DirectedEdge["sunroof-server", "time"], DirectedEdge["sunroof-server", "transformers"], DirectedEdge["sunroof-server", "unordered-containers"], DirectedEdge["sunroof-server", "vector"], DirectedEdge["sunroof-server", "vector-space"], DirectedEdge["sunroof-server", "wai-middleware-static"], DirectedEdge["sunroof-server", "warp"], DirectedEdge["super-user-spark", "aeson"], DirectedEdge["super-user-spark", "aeson-pretty"], DirectedEdge["super-user-spark", "base"], DirectedEdge["super-user-spark", "bytestring"], DirectedEdge["super-user-spark", "directory"], DirectedEdge["super-user-spark", "filepath"], DirectedEdge["super-user-spark", "mtl"], DirectedEdge["super-user-spark", "optparse-applicative"], DirectedEdge["super-user-spark", "parsec"], DirectedEdge["super-user-spark", "process"], DirectedEdge["super-user-spark", "shelly"], DirectedEdge["super-user-spark", "super-user-spark"], DirectedEdge["super-user-spark", "text"], DirectedEdge["super-user-spark", "transformers"], DirectedEdge["super-user-spark", "unix"], DirectedEdge["supercollider-ht", "base"], DirectedEdge["supercollider-ht", "hosc"], DirectedEdge["supercollider-ht", "opensoundcontrol-ht"], DirectedEdge["supercollider-ht", "process"], DirectedEdge["supercollider-ht", "random"], DirectedEdge["supercollider-ht", "transformers"], DirectedEdge["supercollider-midi", "alsa-seq"], DirectedEdge["supercollider-midi", "array"], DirectedEdge["supercollider-midi", "base"], DirectedEdge["supercollider-midi", "containers"], DirectedEdge["supercollider-midi", "data-accessor"], DirectedEdge["supercollider-midi", "data-accessor-transformers"], DirectedEdge["supercollider-midi", "event-list"], DirectedEdge["supercollider-midi", "hosc"], DirectedEdge["supercollider-midi", "midi"], DirectedEdge["supercollider-midi", "midi-alsa"], DirectedEdge["supercollider-midi", "non-negative"], DirectedEdge["supercollider-midi", "opensoundcontrol-ht"], DirectedEdge["supercollider-midi", "random"], DirectedEdge["supercollider-midi", "supercollider-ht"], DirectedEdge["supercollider-midi", "transformers"], DirectedEdge["supercollider-midi", "utility-ht"], DirectedEdge["superdoc", "base"], DirectedEdge["superdoc", "Cabal"], DirectedEdge["superdoc", "containers"], DirectedEdge["superdoc", "directory"], DirectedEdge["superdoc", "filepath"], DirectedEdge["superdoc", "superdoc"], DirectedEdge["supero", "base"], DirectedEdge["supero", "containers"], DirectedEdge["supero", "cpphs"], DirectedEdge["supero", "directory"], DirectedEdge["supero", "filepath"], DirectedEdge["supero", "haskell-src-exts"], DirectedEdge["supero", "mtl"], DirectedEdge["supero", "process"], DirectedEdge["supero", "time"], DirectedEdge["supero", "uniplate"], DirectedEdge["supervisor", "base"], DirectedEdge["supervisor", "containers"], DirectedEdge["supervisor", "exceptions"], DirectedEdge["supervisor", "monadloc"], DirectedEdge["supervisor", "mtl"], DirectedEdge["supplemented", "base"], DirectedEdge["supplemented", "base-prelude"], DirectedEdge["supplemented", "transformers"], DirectedEdge["suspend", "base"], DirectedEdge["suspend", "lifted-base"], DirectedEdge["suspend", "transformers-base"], DirectedEdge["svg-builder", "base"], DirectedEdge["svg-builder", "blaze-builder"], DirectedEdge["svg-builder", "bytestring"], DirectedEdge["svg-builder", "hashable"], DirectedEdge["svg-builder", "text"], DirectedEdge["svg-builder", "unordered-containers"], DirectedEdge["svg-tree", "attoparsec"], DirectedEdge["svg-tree", "base"], DirectedEdge["svg-tree", "bytestring"], DirectedEdge["svg-tree", "containers"], DirectedEdge["svg-tree", "JuicyPixels"], DirectedEdge["svg-tree", "lens"], DirectedEdge["svg-tree", "linear"], DirectedEdge["svg-tree", "mtl"], DirectedEdge["svg-tree", "scientific"], DirectedEdge["svg-tree", "text"], DirectedEdge["svg-tree", "transformers"], DirectedEdge["svg-tree", "vector"], DirectedEdge["svg-tree", "xml"], DirectedEdge["svg2q", "base"], DirectedEdge["svg2q", "language-c"], DirectedEdge["svg2q", "pretty"], DirectedEdge["svg2q", "svgutils"], DirectedEdge["svg2q", "syb"], DirectedEdge["svg2q", "xml"], DirectedEdge["svgcairo", "base"], DirectedEdge["svgcairo", "cairo"], DirectedEdge["svgcairo", "glib"], DirectedEdge["svgcairo", "mtl"], DirectedEdge["svgcairo", "text"], DirectedEdge["svgutils", "base"], DirectedEdge["svgutils", "filepath"], DirectedEdge["svgutils", "xml"], DirectedEdge["svm", "array"], DirectedEdge["svm", "base"], DirectedEdge["svm-light-utils", "attoparsec"], DirectedEdge["svm-light-utils", "base"], DirectedEdge["svm-light-utils", "bytestring"], DirectedEdge["svm-light-utils", "containers"], DirectedEdge["svm-simple", "base"], DirectedEdge["svm-simple", "binary"], DirectedEdge["svm-simple", "bindings-svm"], DirectedEdge["svm-simple", "bytestring"], DirectedEdge["svm-simple", "containers"], DirectedEdge["svm-simple", "deepseq"], DirectedEdge["svm-simple", "directory"], DirectedEdge["svm-simple", "monad-par"], DirectedEdge["svm-simple", "mwc-random"], DirectedEdge["svm-simple", "vector"], DirectedEdge["svndump", "attoparsec"], DirectedEdge["svndump", "base"], DirectedEdge["svndump", "bytestring"], DirectedEdge["svndump", "containers"], DirectedEdge["svndump", "filepath"], DirectedEdge["svndump", "old-locale"], DirectedEdge["svndump", "text"], DirectedEdge["svndump", "time"], DirectedEdge["swagger", "aeson"], DirectedEdge["swagger", "base"], DirectedEdge["swagger", "bytestring"], DirectedEdge["swagger", "text"], DirectedEdge["swagger", "time"], DirectedEdge["swagger", "transformers"], DirectedEdge["swagger2", "aeson"], DirectedEdge["swagger2", "base"], DirectedEdge["swagger2", "base-compat"], DirectedEdge["swagger2", "containers"], DirectedEdge["swagger2", "generics-sop"], DirectedEdge["swagger2", "hashable"], DirectedEdge["swagger2", "http-media"], DirectedEdge["swagger2", "insert-ordered-containers"], DirectedEdge["swagger2", "lens"], DirectedEdge["swagger2", "mtl"], DirectedEdge["swagger2", "network"], DirectedEdge["swagger2", "scientific"], DirectedEdge["swagger2", "template-haskell"], DirectedEdge["swagger2", "text"], DirectedEdge["swagger2", "time"], DirectedEdge["swagger2", "transformers"], DirectedEdge["swagger2", "unordered-containers"], DirectedEdge["swagger2", "vector"], DirectedEdge["swapper", "base"], DirectedEdge["swapper", "binary"], DirectedEdge["swapper", "bytestring"], DirectedEdge["swapper", "deepseq"], DirectedEdge["swapper", "happstack-data"], DirectedEdge["swapper", "happstack-state"], DirectedEdge["swapper", "parallel"], DirectedEdge["swearjure", "attoparsec"], DirectedEdge["swearjure", "base"], DirectedEdge["swearjure", "containers"], DirectedEdge["swearjure", "fixplate"], DirectedEdge["swearjure", "mtl"], DirectedEdge["swearjure", "pretty"], DirectedEdge["swearjure", "random"], DirectedEdge["swearjure", "random-shuffle"], DirectedEdge["swearjure", "readline"], DirectedEdge["swearjure", "system-fileio"], DirectedEdge["swearjure", "system-filepath"], DirectedEdge["swearjure", "text"], DirectedEdge["swf", "base"], DirectedEdge["swf", "mtl"], DirectedEdge["swf", "pretty"], DirectedEdge["swift-lda", "array"], DirectedEdge["swift-lda", "base"], DirectedEdge["swift-lda", "containers"], DirectedEdge["swift-lda", "ghc-prim"], DirectedEdge["swift-lda", "mwc-random"], DirectedEdge["swift-lda", "primitive"], DirectedEdge["swift-lda", "vector"], DirectedEdge["swish", "base"], DirectedEdge["swish", "containers"], DirectedEdge["swish", "directory"], DirectedEdge["swish", "filepath"], DirectedEdge["swish", "hashable"], DirectedEdge["swish", "intern"], DirectedEdge["swish", "mtl"], DirectedEdge["swish", "network"], DirectedEdge["swish", "network-uri"], DirectedEdge["swish", "old-locale"], DirectedEdge["swish", "polyparse"], DirectedEdge["swish", "semigroups"], DirectedEdge["swish", "swish"], DirectedEdge["swish", "text"], DirectedEdge["swish", "time"], DirectedEdge["sws", "asn1-encoding"], DirectedEdge["sws", "asn1-types"], DirectedEdge["sws", "base"], DirectedEdge["sws", "bytestring"], DirectedEdge["sws", "crypto-pubkey"], DirectedEdge["sws", "crypto-random"], DirectedEdge["sws", "directory"], DirectedEdge["sws", "filepath"], DirectedEdge["sws", "hourglass"], DirectedEdge["sws", "http-types"], DirectedEdge["sws", "network"], DirectedEdge["sws", "pem"], DirectedEdge["sws", "resourcet"], DirectedEdge["sws", "transformers"], DirectedEdge["sws", "wai"], DirectedEdge["sws", "wai-extra"], DirectedEdge["sws", "wai-middleware-static"], DirectedEdge["sws", "warp"], DirectedEdge["sws", "warp-tls"], DirectedEdge["syb", "base"], DirectedEdge["syb-extras", "base"], DirectedEdge["syb-extras", "eq"], DirectedEdge["syb-extras", "prelude-extras"], DirectedEdge["syb-with-class", "array"], DirectedEdge["syb-with-class", "base"], DirectedEdge["syb-with-class", "bytestring"], DirectedEdge["syb-with-class", "containers"], DirectedEdge["syb-with-class", "template-haskell"], DirectedEdge["syb-with-class-instances-text", "base"], DirectedEdge["syb-with-class-instances-text", "syb-with-class"], DirectedEdge["syb-with-class-instances-text", "text"], DirectedEdge["sylvia", "base"], DirectedEdge["sylvia", "cairo"], DirectedEdge["sylvia", "comonad-transformers"], DirectedEdge["sylvia", "data-default"], DirectedEdge["sylvia", "data-lens"], DirectedEdge["sylvia", "data-lens-template"], DirectedEdge["sylvia", "gtk"], DirectedEdge["sylvia", "optparse-applicative"], DirectedEdge["sylvia", "parsec"], DirectedEdge["sylvia", "transformers"], DirectedEdge["sylvia", "void"], DirectedEdge["sym", "base"], DirectedEdge["sym", "containers"], DirectedEdge["sym", "hashable"], DirectedEdge["sym", "vector"], DirectedEdge["sym-plot", "base"], DirectedEdge["sym-plot", "diagrams-cairo"], DirectedEdge["sym-plot", "diagrams-lib"], DirectedEdge["sym-plot", "sym"], DirectedEdge["symbol", "base"], DirectedEdge["symbol", "containers"], DirectedEdge["symbol", "deepseq"], DirectedEdge["symengine-hs", "base"], DirectedEdge["symengine-hs", "symengine-hs"], DirectedEdge["sync", "base"], DirectedEdge["sync", "stm"], DirectedEdge["sync-mht", "array"], DirectedEdge["sync-mht", "base"], DirectedEdge["sync-mht", "base16-bytestring"], DirectedEdge["sync-mht", "byteable"], DirectedEdge["sync-mht", "bytes"], DirectedEdge["sync-mht", "bytestring"], DirectedEdge["sync-mht", "cereal"], DirectedEdge["sync-mht", "containers"], DirectedEdge["sync-mht", "cryptohash"], DirectedEdge["sync-mht", "directory"], DirectedEdge["sync-mht", "exceptions"], DirectedEdge["sync-mht", "filepath"], DirectedEdge["sync-mht", "HUnit"], DirectedEdge["sync-mht", "io-streams"], DirectedEdge["sync-mht", "mtl"], DirectedEdge["sync-mht", "process"], DirectedEdge["sync-mht", "random"], DirectedEdge["sync-mht", "regex-compat"], DirectedEdge["sync-mht", "temporary"], DirectedEdge["sync-mht", "text"], DirectedEdge["sync-mht", "time"], DirectedEdge["sync-mht", "transformers"], DirectedEdge["sync-mht", "unix"], DirectedEdge["sync-mht", "zlib"], DirectedEdge["synchronous-channels", "base"], DirectedEdge["syncthing-hs", "aeson"], DirectedEdge["syncthing-hs", "base"], DirectedEdge["syncthing-hs", "bytestring"], DirectedEdge["syncthing-hs", "connection"], DirectedEdge["syncthing-hs", "containers"], DirectedEdge["syncthing-hs", "either"], DirectedEdge["syncthing-hs", "exceptions"], DirectedEdge["syncthing-hs", "http-client"], DirectedEdge["syncthing-hs", "http-client-tls"], DirectedEdge["syncthing-hs", "lens"], DirectedEdge["syncthing-hs", "regex-posix"], DirectedEdge["syncthing-hs", "text"], DirectedEdge["syncthing-hs", "time"], DirectedEdge["syncthing-hs", "time-locale-compat"], DirectedEdge["syncthing-hs", "transformers"], DirectedEdge["syncthing-hs", "unordered-containers"], DirectedEdge["syncthing-hs", "vector"], DirectedEdge["syncthing-hs", "wreq"], DirectedEdge["synt", "argparser"], DirectedEdge["synt", "base"], DirectedEdge["synt", "haskell-src-exts"], DirectedEdge["synt", "regexpr"], DirectedEdge["synt", "split"], DirectedEdge["syntactic", "base"], DirectedEdge["syntactic", "base-orphans"], DirectedEdge["syntactic", "constraints"], DirectedEdge["syntactic", "containers"], DirectedEdge["syntactic", "data-hash"], DirectedEdge["syntactic", "deepseq"], DirectedEdge["syntactic", "mtl"], DirectedEdge["syntactic", "syb"], DirectedEdge["syntactic", "tagged"], DirectedEdge["syntactic", "template-haskell"], DirectedEdge["syntactic", "tree-view"], DirectedEdge["syntactical", "base"], DirectedEdge["syntax", "base"], DirectedEdge["syntax", "lens"], DirectedEdge["syntax", "mono-traversable"], DirectedEdge["syntax", "scientific"], DirectedEdge["syntax", "semi-iso"], DirectedEdge["syntax", "text"], DirectedEdge["syntax", "vector"], DirectedEdge["syntax-attoparsec", "attoparsec"], DirectedEdge["syntax-attoparsec", "base"], DirectedEdge["syntax-attoparsec", "bytestring"], DirectedEdge["syntax-attoparsec", "scientific"], DirectedEdge["syntax-attoparsec", "semi-iso"], DirectedEdge["syntax-attoparsec", "syntax"], DirectedEdge["syntax-attoparsec", "text"], DirectedEdge["syntax-attoparsec", "vector"], DirectedEdge["syntax-example", "attoparsec"], DirectedEdge["syntax-example", "base"], DirectedEdge["syntax-example", "lens"], DirectedEdge["syntax-example", "scientific"], DirectedEdge["syntax-example", "semi-iso"], DirectedEdge["syntax-example", "syntax"], DirectedEdge["syntax-example", "syntax-attoparsec"], DirectedEdge["syntax-example", "syntax-printer"], DirectedEdge["syntax-example", "text"], DirectedEdge["syntax-example-json", "attoparsec"], DirectedEdge["syntax-example-json", "base"], DirectedEdge["syntax-example-json", "containers"], DirectedEdge["syntax-example-json", "lens"], DirectedEdge["syntax-example-json", "scientific"], DirectedEdge["syntax-example-json", "semi-iso"], DirectedEdge["syntax-example-json", "syntax"], DirectedEdge["syntax-example-json", "syntax-attoparsec"], DirectedEdge["syntax-example-json", "syntax-printer"], DirectedEdge["syntax-example-json", "text"], DirectedEdge["syntax-pretty", "syntax-printer"], DirectedEdge["syntax-pretty", "base"], DirectedEdge["syntax-pretty", "pretty"], DirectedEdge["syntax-pretty", "scientific"], DirectedEdge["syntax-pretty", "semi-iso"], DirectedEdge["syntax-pretty", "syntax"], DirectedEdge["syntax-pretty", "text"], DirectedEdge["syntax-printer", "base"], DirectedEdge["syntax-printer", "bifunctors"], DirectedEdge["syntax-printer", "bytestring"], DirectedEdge["syntax-printer", "scientific"], DirectedEdge["syntax-printer", "semi-iso"], DirectedEdge["syntax-printer", "semigroupoids"], DirectedEdge["syntax-printer", "syntax"], DirectedEdge["syntax-printer", "text"], DirectedEdge["syntax-printer", "vector"], DirectedEdge["syntax-trees", "base"], DirectedEdge["syntax-trees", "haskell-src-exts"], DirectedEdge["syntax-trees", "hint"], DirectedEdge["syntax-trees", "mtl"], DirectedEdge["syntax-trees", "template-haskell"], DirectedEdge["syntax-trees", "uniplate"], DirectedEdge["syntax-trees-fork-bairyn", "base"], DirectedEdge["syntax-trees-fork-bairyn", "haskell-src-exts"], DirectedEdge["syntax-trees-fork-bairyn", "hint"], DirectedEdge["syntax-trees-fork-bairyn", "mtl"], DirectedEdge["syntax-trees-fork-bairyn", "template-haskell"], DirectedEdge["syntax-trees-fork-bairyn", "uniplate"], DirectedEdge["synthesizer", "synthesizer-core"], DirectedEdge["synthesizer", "synthesizer-dimensional"], DirectedEdge["synthesizer", "synthesizer-inference"], DirectedEdge["synthesizer", "array"], DirectedEdge["synthesizer", "base"], DirectedEdge["synthesizer", "binary"], DirectedEdge["synthesizer", "bytestring"], DirectedEdge["synthesizer", "containers"], DirectedEdge["synthesizer", "directory"], DirectedEdge["synthesizer", "event-list"], DirectedEdge["synthesizer", "filepath"], DirectedEdge["synthesizer", "gnuplot"], DirectedEdge["synthesizer", "non-negative"], DirectedEdge["synthesizer", "numeric-prelude"], DirectedEdge["synthesizer", "numeric-quest"], DirectedEdge["synthesizer", "old-time"], DirectedEdge["synthesizer", "process"], DirectedEdge["synthesizer", "QuickCheck"], DirectedEdge["synthesizer", "random"], DirectedEdge["synthesizer", "sox"], DirectedEdge["synthesizer", "special-functors"], DirectedEdge["synthesizer", "storable-record"], DirectedEdge["synthesizer", "storablevector"], DirectedEdge["synthesizer", "transformers"], DirectedEdge["synthesizer", "utility-ht"], DirectedEdge["synthesizer-alsa", "alsa-core"], DirectedEdge["synthesizer-alsa", "alsa-pcm"], DirectedEdge["synthesizer-alsa", "alsa-seq"], DirectedEdge["synthesizer-alsa", "base"], DirectedEdge["synthesizer-alsa", "event-list"], DirectedEdge["synthesizer-alsa", "midi"], DirectedEdge["synthesizer-alsa", "midi-alsa"], DirectedEdge["synthesizer-alsa", "non-negative"], DirectedEdge["synthesizer-alsa", "numeric-prelude"], DirectedEdge["synthesizer-alsa", "old-time"], DirectedEdge["synthesizer-alsa", "random"], DirectedEdge["synthesizer-alsa", "sox"], DirectedEdge["synthesizer-alsa", "storablevector"], DirectedEdge["synthesizer-alsa", "synthesizer-core"], DirectedEdge["synthesizer-alsa", "synthesizer-dimensional"], DirectedEdge["synthesizer-alsa", "synthesizer-midi"], DirectedEdge["synthesizer-alsa", "transformers"], DirectedEdge["synthesizer-alsa", "utility-ht"], DirectedEdge["synthesizer-core", "array"], DirectedEdge["synthesizer-core", "base"], DirectedEdge["synthesizer-core", "binary"], DirectedEdge["synthesizer-core", "bytestring"], DirectedEdge["synthesizer-core", "containers"], DirectedEdge["synthesizer-core", "deepseq"], DirectedEdge["synthesizer-core", "event-list"], DirectedEdge["synthesizer-core", "explicit-exception"], DirectedEdge["synthesizer-core", "filepath"], DirectedEdge["synthesizer-core", "non-empty"], DirectedEdge["synthesizer-core", "non-negative"], DirectedEdge["synthesizer-core", "numeric-prelude"], DirectedEdge["synthesizer-core", "numeric-quest"], DirectedEdge["synthesizer-core", "process"], DirectedEdge["synthesizer-core", "QuickCheck"], DirectedEdge["synthesizer-core", "random"], DirectedEdge["synthesizer-core", "sample-frame-np"], DirectedEdge["synthesizer-core", "sox"], DirectedEdge["synthesizer-core", "storable-record"], DirectedEdge["synthesizer-core", "storable-tuple"], DirectedEdge["synthesizer-core", "storablevector"], DirectedEdge["synthesizer-core", "stream-fusion"], DirectedEdge["synthesizer-core", "transformers"], DirectedEdge["synthesizer-core", "utility-ht"], DirectedEdge["synthesizer-dimensional", "base"], DirectedEdge["synthesizer-dimensional", "bytestring"], DirectedEdge["synthesizer-dimensional", "event-list"], DirectedEdge["synthesizer-dimensional", "explicit-exception"], DirectedEdge["synthesizer-dimensional", "non-negative"], DirectedEdge["synthesizer-dimensional", "numeric-prelude"], DirectedEdge["synthesizer-dimensional", "old-time"], DirectedEdge["synthesizer-dimensional", "random"], DirectedEdge["synthesizer-dimensional", "sox"], DirectedEdge["synthesizer-dimensional", "storable-record"], DirectedEdge["synthesizer-dimensional", "storablevector"], DirectedEdge["synthesizer-dimensional", "synthesizer-core"], DirectedEdge["synthesizer-dimensional", "synthesizer-dimensional"], DirectedEdge["synthesizer-dimensional", "transformers"], DirectedEdge["synthesizer-dimensional", "utility-ht"], DirectedEdge["synthesizer-filter", "base"], DirectedEdge["synthesizer-filter", "containers"], DirectedEdge["synthesizer-filter", "numeric-prelude"], DirectedEdge["synthesizer-filter", "numeric-quest"], DirectedEdge["synthesizer-filter", "synthesizer-core"], DirectedEdge["synthesizer-filter", "transformers"], DirectedEdge["synthesizer-filter", "utility-ht"], DirectedEdge["synthesizer-inference", "base"], DirectedEdge["synthesizer-inference", "event-list"], DirectedEdge["synthesizer-inference", "non-negative"], DirectedEdge["synthesizer-inference", "numeric-prelude"], DirectedEdge["synthesizer-inference", "random"], DirectedEdge["synthesizer-inference", "special-functors"], DirectedEdge["synthesizer-inference", "synthesizer-core"], DirectedEdge["synthesizer-inference", "transformers"], DirectedEdge["synthesizer-inference", "UniqueLogicNP"], DirectedEdge["synthesizer-inference", "utility-ht"], DirectedEdge["synthesizer-llvm", "alsa-pcm"], DirectedEdge["synthesizer-llvm", "alsa-seq"], DirectedEdge["synthesizer-llvm", "base"], DirectedEdge["synthesizer-llvm", "containers"], DirectedEdge["synthesizer-llvm", "event-list"], DirectedEdge["synthesizer-llvm", "explicit-exception"], DirectedEdge["synthesizer-llvm", "filepath"], DirectedEdge["synthesizer-llvm", "gnuplot"], DirectedEdge["synthesizer-llvm", "jack"], DirectedEdge["synthesizer-llvm", "llvm-extra"], DirectedEdge["synthesizer-llvm", "llvm-tf"], DirectedEdge["synthesizer-llvm", "midi"], DirectedEdge["synthesizer-llvm", "midi-alsa"], DirectedEdge["synthesizer-llvm", "non-empty"], DirectedEdge["synthesizer-llvm", "non-negative"], DirectedEdge["synthesizer-llvm", "numeric-prelude"], DirectedEdge["synthesizer-llvm", "random"], DirectedEdge["synthesizer-llvm", "sox"], DirectedEdge["synthesizer-llvm", "storable-record"], DirectedEdge["synthesizer-llvm", "storable-tuple"], DirectedEdge["synthesizer-llvm", "storablevector"], DirectedEdge["synthesizer-llvm", "synthesizer-alsa"], DirectedEdge["synthesizer-llvm", "synthesizer-core"], DirectedEdge["synthesizer-llvm", "synthesizer-llvm"], DirectedEdge["synthesizer-llvm", "synthesizer-midi"], DirectedEdge["synthesizer-llvm", "tfp"], DirectedEdge["synthesizer-llvm", "transformers"], DirectedEdge["synthesizer-llvm", "unsafe"], DirectedEdge["synthesizer-llvm", "utility-ht"], DirectedEdge["synthesizer-llvm", "vault"], DirectedEdge["synthesizer-midi", "array"], DirectedEdge["synthesizer-midi", "base"], DirectedEdge["synthesizer-midi", "containers"], DirectedEdge["synthesizer-midi", "data-accessor"], DirectedEdge["synthesizer-midi", "data-accessor-transformers"], DirectedEdge["synthesizer-midi", "deepseq"], DirectedEdge["synthesizer-midi", "event-list"], DirectedEdge["synthesizer-midi", "midi"], DirectedEdge["synthesizer-midi", "non-negative"], DirectedEdge["synthesizer-midi", "numeric-prelude"], DirectedEdge["synthesizer-midi", "sox"], DirectedEdge["synthesizer-midi", "storable-record"], DirectedEdge["synthesizer-midi", "storablevector"], DirectedEdge["synthesizer-midi", "synthesizer-core"], DirectedEdge["synthesizer-midi", "synthesizer-dimensional"], DirectedEdge["synthesizer-midi", "synthesizer-midi"], DirectedEdge["synthesizer-midi", "transformers"], DirectedEdge["synthesizer-midi", "utility-ht"], DirectedEdge["sys-auth-smbclient", "base"], DirectedEdge["sys-auth-smbclient", "process"], DirectedEdge["sys-auth-smbclient", "text"], DirectedEdge["sys-process", "base"], DirectedEdge["sys-process", "bifunctors"], DirectedEdge["sys-process", "directory"], DirectedEdge["sys-process", "filepath"], DirectedEdge["sys-process", "lens"], DirectedEdge["sys-process", "mtl"], DirectedEdge["sys-process", "notzero"], DirectedEdge["sys-process", "process"], DirectedEdge["sys-process", "semigroupoids"], DirectedEdge["sys-process", "semigroups"], DirectedEdge["sys-process", "transformers"], DirectedEdge["system-argv0", "base"], DirectedEdge["system-argv0", "bytestring"], DirectedEdge["system-argv0", "system-filepath"], DirectedEdge["system-argv0", "text"], DirectedEdge["system-canonicalpath", "base"], DirectedEdge["system-canonicalpath", "basic-prelude"], DirectedEdge["system-canonicalpath", "directory"], DirectedEdge["system-canonicalpath", "system-filepath"], DirectedEdge["system-canonicalpath", "text"], DirectedEdge["system-command", "base"], DirectedEdge["system-command", "directory"], DirectedEdge["system-command", "filepath"], DirectedEdge["system-command", "process"], DirectedEdge["system-command", "transformers"], DirectedEdge["system-fileio", "directory"], DirectedEdge["system-fileio", "base"], DirectedEdge["system-fileio", "bytestring"], DirectedEdge["system-fileio", "directory"], DirectedEdge["system-fileio", "system-filepath"], DirectedEdge["system-fileio", "text"], DirectedEdge["system-fileio", "time"], DirectedEdge["system-fileio", "unix"], DirectedEdge["system-filepath", "filepath"], DirectedEdge["system-filepath", "base"], DirectedEdge["system-filepath", "bytestring"], DirectedEdge["system-filepath", "deepseq"], DirectedEdge["system-filepath", "text"], DirectedEdge["system-gpio", "array"], DirectedEdge["system-gpio", "base"], DirectedEdge["system-gpio", "ghc-prim"], DirectedEdge["system-inotify", "base"], DirectedEdge["system-inotify", "bytestring"], DirectedEdge["system-lifted", "base"], DirectedEdge["system-lifted", "directory"], DirectedEdge["system-lifted", "either"], DirectedEdge["system-lifted", "haskell-src-meta"], DirectedEdge["system-lifted", "template-haskell"], DirectedEdge["system-lifted", "text"], DirectedEdge["system-lifted", "time"], DirectedEdge["system-lifted", "transformers"], DirectedEdge["system-lifted", "unix"], DirectedEdge["system-posix-redirect", "base"], DirectedEdge["system-posix-redirect", "bytestring"], DirectedEdge["system-posix-redirect", "unix"], DirectedEdge["system-random-effect", "base"], DirectedEdge["system-random-effect", "bytestring"], DirectedEdge["system-random-effect", "crypto-api"], DirectedEdge["system-random-effect", "extensible-effects"], DirectedEdge["system-random-effect", "primitive"], DirectedEdge["system-random-effect", "statistics"], DirectedEdge["system-random-effect", "vector"], DirectedEdge["system-random-effect", "vector-algorithms"], DirectedEdge["system-test", "aeson"], DirectedEdge["system-test", "ansi-terminal"], DirectedEdge["system-test", "base"], DirectedEdge["system-test", "bytestring"], DirectedEdge["system-test", "process"], DirectedEdge["system-test", "system-test"], DirectedEdge["system-test", "text"], DirectedEdge["system-time-monotonic", "base"], DirectedEdge["system-time-monotonic", "time"], DirectedEdge["system-util", "base"], DirectedEdge["system-util", "directory"], DirectedEdge["system-util", "either"], DirectedEdge["system-util", "filepath"], DirectedEdge["system-util", "semigroups"], DirectedEdge["system-util", "system-lifted"], DirectedEdge["system-util", "template-haskell"], DirectedEdge["system-util", "transformers"], DirectedEdge["system-util", "unix"], DirectedEdge["system-uuid", "base"], DirectedEdge["system-uuid", "binary"], DirectedEdge["system-uuid", "bytestring"], DirectedEdge["system-uuid", "containers"], DirectedEdge["system-uuid", "murmur-hash"], DirectedEdge["system-uuid", "parsec"], DirectedEdge["system-uuid", "template-haskell"], DirectedEdge["systemd", "base"], DirectedEdge["systemd", "bytestring"], DirectedEdge["systemd", "network"], DirectedEdge["systemd", "transformers"], DirectedEdge["systemd", "unix"], DirectedEdge["syz", "base"], DirectedEdge["syz", "syb"], DirectedEdge["t-regex", "base"], DirectedEdge["t-regex", "containers"], DirectedEdge["t-regex", "haskell-src-exts"], DirectedEdge["t-regex", "haskell-src-meta"], DirectedEdge["t-regex", "lens"], DirectedEdge["t-regex", "mtl"], DirectedEdge["t-regex", "QuickCheck"], DirectedEdge["t-regex", "recursion-schemes"], DirectedEdge["t-regex", "template-haskell"], DirectedEdge["t-regex", "transformers"], DirectedEdge["t3-client", "base"], DirectedEdge["t3-client", "t3-game"], DirectedEdge["t3-client", "t3-server"], DirectedEdge["t3-game", "aeson"], DirectedEdge["t3-game", "base"], DirectedEdge["t3-game", "bytestring"], DirectedEdge["t3-game", "containers"], DirectedEdge["t3-game", "mtl"], DirectedEdge["t3-game", "safe"], DirectedEdge["t3-game", "text"], DirectedEdge["t3-game", "vector"], DirectedEdge["t3-server", "aeson"], DirectedEdge["t3-server", "async"], DirectedEdge["t3-server", "base"], DirectedEdge["t3-server", "bytestring"], DirectedEdge["t3-server", "case-insensitive"], DirectedEdge["t3-server", "containers"], DirectedEdge["t3-server", "dejafu"], DirectedEdge["t3-server", "either"], DirectedEdge["t3-server", "hashable"], DirectedEdge["t3-server", "hashmap"], DirectedEdge["t3-server", "MonadRandom"], DirectedEdge["t3-server", "mtl"], DirectedEdge["t3-server", "random"], DirectedEdge["t3-server", "safe"], DirectedEdge["t3-server", "stm"], DirectedEdge["t3-server", "t3-game"], DirectedEdge["t3-server", "text"], DirectedEdge["t3-server", "time"], DirectedEdge["t3-server", "transformers"], DirectedEdge["t3-server", "unordered-containers"], DirectedEdge["t3-server", "vector"], DirectedEdge["t3-server", "wai"], DirectedEdge["ta", "base"], DirectedEdge["ta", "containers"], DirectedEdge["ta", "ghc-prim"], DirectedEdge["ta", "mtl"], DirectedEdge["ta", "Takusen"], DirectedEdge["ta", "template-haskell"], DirectedEdge["ta", "time"], DirectedEdge["table", "base"], DirectedEdge["table", "csv"], DirectedEdge["table", "optparse-applicative"], DirectedEdge["table", "process"], DirectedEdge["table", "split"], DirectedEdge["table-layout", "base"], DirectedEdge["table-layout", "data-default-class"], DirectedEdge["table-layout", "data-default-instances-base"], DirectedEdge["table-tennis", "base"], DirectedEdge["tableaux", "base"], DirectedEdge["tableaux", "cgi"], DirectedEdge["tableaux", "containers"], DirectedEdge["tableaux", "html"], DirectedEdge["tableaux", "mtl"], DirectedEdge["tableaux", "parsec"], DirectedEdge["tableaux", "QuickCheck"], DirectedEdge["tables", "base"], DirectedEdge["tables", "binary"], DirectedEdge["tables", "cereal"], DirectedEdge["tables", "comonad"], DirectedEdge["tables", "containers"], DirectedEdge["tables", "deepseq"], DirectedEdge["tables", "hashable"], DirectedEdge["tables", "lens"], DirectedEdge["tables", "profunctors"], DirectedEdge["tables", "safecopy"], DirectedEdge["tables", "template-haskell"], DirectedEdge["tables", "transformers"], DirectedEdge["tables", "transformers-compat"], DirectedEdge["tables", "unordered-containers"], DirectedEdge["tablestorage", "base"], DirectedEdge["tablestorage", "base64-bytestring"], DirectedEdge["tablestorage", "bytestring"], DirectedEdge["tablestorage", "conduit"], DirectedEdge["tablestorage", "crypto-api"], DirectedEdge["tablestorage", "cryptohash"], DirectedEdge["tablestorage", "HTTP"], DirectedEdge["tablestorage", "http-conduit"], DirectedEdge["tablestorage", "http-types"], DirectedEdge["tablestorage", "mtl"], DirectedEdge["tablestorage", "network"], DirectedEdge["tablestorage", "old-locale"], DirectedEdge["tablestorage", "resourcet"], DirectedEdge["tablestorage", "SHA"], DirectedEdge["tablestorage", "time"], DirectedEdge["tablestorage", "transformers"], DirectedEdge["tablestorage", "utf8-string"], DirectedEdge["tablestorage", "xml"], DirectedEdge["tabloid", "base"], DirectedEdge["tabloid", "bytestring"], DirectedEdge["tabloid", "containers"], DirectedEdge["tabloid", "gtk"], DirectedEdge["tabloid", "hint"], DirectedEdge["tabloid", "parallel"], DirectedEdge["tabloid", "process"], DirectedEdge["tabloid", "regex-base"], DirectedEdge["tabloid", "regex-posix"], DirectedEdge["tabular", "base"], DirectedEdge["tabular", "csv"], DirectedEdge["tabular", "html"], DirectedEdge["tabular", "mtl"], DirectedEdge["taffybar", "base"], DirectedEdge["taffybar", "cairo"], DirectedEdge["taffybar", "containers"], DirectedEdge["taffybar", "dbus"], DirectedEdge["taffybar", "dyre"], DirectedEdge["taffybar", "enclosed-exceptions"], DirectedEdge["taffybar", "filepath"], DirectedEdge["taffybar", "gtk"], DirectedEdge["taffybar", "gtk-traymanager"], DirectedEdge["taffybar", "HStringTemplate"], DirectedEdge["taffybar", "HTTP"], DirectedEdge["taffybar", "mtl"], DirectedEdge["taffybar", "network"], DirectedEdge["taffybar", "network-uri"], DirectedEdge["taffybar", "old-locale"], DirectedEdge["taffybar", "parsec"], DirectedEdge["taffybar", "process"], DirectedEdge["taffybar", "safe"], DirectedEdge["taffybar", "split"], DirectedEdge["taffybar", "stm"], DirectedEdge["taffybar", "text"], DirectedEdge["taffybar", "time"], DirectedEdge["taffybar", "time-locale-compat"], DirectedEdge["taffybar", "transformers"], DirectedEdge["taffybar", "utf8-string"], DirectedEdge["taffybar", "xdg-basedir"], DirectedEdge["taffybar", "xmonad"], DirectedEdge["taffybar", "xmonad-contrib"], DirectedEdge["tag-bits", "base"], DirectedEdge["tag-bits", "ghc-prim"], DirectedEdge["tag-stream", "attoparsec"], DirectedEdge["tag-stream", "base"], DirectedEdge["tag-stream", "blaze-builder"], DirectedEdge["tag-stream", "bytestring"], DirectedEdge["tag-stream", "enumerator"], DirectedEdge["tagchup", "base"], DirectedEdge["tagchup", "bytestring"], DirectedEdge["tagchup", "containers"], DirectedEdge["tagchup", "data-accessor"], DirectedEdge["tagchup", "explicit-exception"], DirectedEdge["tagchup", "hxt"], DirectedEdge["tagchup", "tagchup"], DirectedEdge["tagchup", "transformers"], DirectedEdge["tagchup", "utility-ht"], DirectedEdge["tagchup", "xml-basic"], DirectedEdge["tagged", "base"], DirectedEdge["tagged", "deepseq"], DirectedEdge["tagged", "ghc-prim"], DirectedEdge["tagged", "template-haskell"], DirectedEdge["tagged-binary", "base"], DirectedEdge["tagged-binary", "binary"], DirectedEdge["tagged-binary", "bytestring"], DirectedEdge["tagged-exception-core", "base"], DirectedEdge["tagged-exception-core", "exceptions"], DirectedEdge["tagged-exception-core", "ghc-prim"], DirectedEdge["tagged-exception-core", "mmorph"], DirectedEdge["tagged-exception-core", "mtl"], DirectedEdge["tagged-exception-core", "transformers"], DirectedEdge["tagged-list", "AbortT-transformers"], DirectedEdge["tagged-list", "base"], DirectedEdge["tagged-list", "binary"], DirectedEdge["tagged-list", "natural-number"], DirectedEdge["tagged-list", "type-equality"], DirectedEdge["tagged-list", "type-level-natural-number"], DirectedEdge["tagged-list", "type-level-natural-number-induction"], DirectedEdge["tagged-list", "type-level-natural-number-operations"], DirectedEdge["tagged-th", "base"], DirectedEdge["tagged-th", "tagged"], DirectedEdge["tagged-th", "template-haskell"], DirectedEdge["tagged-th", "type-spine"], DirectedEdge["tagged-timers", "base"], DirectedEdge["tagged-timers", "time"], DirectedEdge["tagged-timers", "transformers"], DirectedEdge["tagged-timers", "unordered-containers"], DirectedEdge["tagged-transformer", "base"], DirectedEdge["tagged-transformer", "comonad"], DirectedEdge["tagged-transformer", "contravariant"], DirectedEdge["tagged-transformer", "distributive"], DirectedEdge["tagged-transformer", "exceptions"], DirectedEdge["tagged-transformer", "mtl"], DirectedEdge["tagged-transformer", "reflection"], DirectedEdge["tagged-transformer", "semigroupoids"], DirectedEdge["tagged-transformer", "tagged"], DirectedEdge["tagging", "base"], DirectedEdge["tagging", "bytestring"], DirectedEdge["tagging", "pcre-light"], DirectedEdge["taggy", "attoparsec"], DirectedEdge["taggy", "base"], DirectedEdge["taggy", "blaze-html"], DirectedEdge["taggy", "blaze-markup"], DirectedEdge["taggy", "taggy"], DirectedEdge["taggy", "text"], DirectedEdge["taggy", "unordered-containers"], DirectedEdge["taggy", "vector"], DirectedEdge["taggy-lens", "base"], DirectedEdge["taggy-lens", "lens"], DirectedEdge["taggy-lens", "taggy"], DirectedEdge["taggy-lens", "text"], DirectedEdge["taggy-lens", "unordered-containers"], DirectedEdge["taglib", "base"], DirectedEdge["taglib", "bytestring"], DirectedEdge["taglib", "utf8-string"], DirectedEdge["taglib-api", "base"], DirectedEdge["taglib-api", "bytestring"], DirectedEdge["taglib-api", "containers"], DirectedEdge["taglib-api", "mtl"], DirectedEdge["taglib-api", "text"], DirectedEdge["taglib-api", "transformers"], DirectedEdge["tagset-positional", "base"], DirectedEdge["tagset-positional", "binary"], DirectedEdge["tagset-positional", "containers"], DirectedEdge["tagset-positional", "parsec"], DirectedEdge["tagset-positional", "text"], DirectedEdge["tagset-positional", "text-binary"], DirectedEdge["tagshare", "base"], DirectedEdge["tagshare", "containers"], DirectedEdge["tagshare", "mtl"], DirectedEdge["tagsoup", "base"], DirectedEdge["tagsoup", "bytestring"], DirectedEdge["tagsoup", "containers"], DirectedEdge["tagsoup", "deepseq"], DirectedEdge["tagsoup", "directory"], DirectedEdge["tagsoup", "network"], DirectedEdge["tagsoup", "process"], DirectedEdge["tagsoup", "QuickCheck"], DirectedEdge["tagsoup", "text"], DirectedEdge["tagsoup", "time"], DirectedEdge["tagsoup-ht", "tagchup"], DirectedEdge["tagsoup-ht", "base"], DirectedEdge["tagsoup-ht", "bytestring"], DirectedEdge["tagsoup-ht", "containers"], DirectedEdge["tagsoup-ht", "data-accessor"], DirectedEdge["tagsoup-ht", "explicit-exception"], DirectedEdge["tagsoup-ht", "old-time"], DirectedEdge["tagsoup-ht", "tagsoup"], DirectedEdge["tagsoup-ht", "transformers"], DirectedEdge["tagsoup-ht", "utility-ht"], DirectedEdge["tagsoup-ht", "xml-basic"], DirectedEdge["tagsoup-parsec", "base"], DirectedEdge["tagsoup-parsec", "parsec"], DirectedEdge["tagsoup-parsec", "tagsoup"], DirectedEdge["tagstream-conduit", "attoparsec"], DirectedEdge["tagstream-conduit", "base"], DirectedEdge["tagstream-conduit", "blaze-builder"], DirectedEdge["tagstream-conduit", "bytestring"], DirectedEdge["tagstream-conduit", "case-insensitive"], DirectedEdge["tagstream-conduit", "conduit"], DirectedEdge["tagstream-conduit", "conduit-extra"], DirectedEdge["tagstream-conduit", "data-default"], DirectedEdge["tagstream-conduit", "resourcet"], DirectedEdge["tagstream-conduit", "text"], DirectedEdge["tagstream-conduit", "transformers"], DirectedEdge["tagstream-conduit", "xml-conduit"], DirectedEdge["tai64", "attoparsec"], DirectedEdge["tai64", "base"], DirectedEdge["tai64", "base16-bytestring"], DirectedEdge["tai64", "binary"], DirectedEdge["tai64", "bytestring"], DirectedEdge["tai64", "QuickCheck"], DirectedEdge["tai64", "text"], DirectedEdge["tai64", "time"], DirectedEdge["tai64", "vector"], DirectedEdge["takahashi", "base"], DirectedEdge["takahashi", "lens"], DirectedEdge["takahashi", "monad-skeleton"], DirectedEdge["takahashi", "mtl"], DirectedEdge["takusen-oracle", "base"], DirectedEdge["takusen-oracle", "mtl"], DirectedEdge["takusen-oracle", "old-time"], DirectedEdge["takusen-oracle", "QuickCheck"], DirectedEdge["takusen-oracle", "random"], DirectedEdge["takusen-oracle", "takusen-oracle"], DirectedEdge["takusen-oracle", "time"], DirectedEdge["tamarin-prover", "aeson"], DirectedEdge["tamarin-prover", "array"], DirectedEdge["tamarin-prover", "base"], DirectedEdge["tamarin-prover", "binary"], DirectedEdge["tamarin-prover", "blaze-builder"], DirectedEdge["tamarin-prover", "blaze-html"], DirectedEdge["tamarin-prover", "bytestring"], DirectedEdge["tamarin-prover", "cmdargs"], DirectedEdge["tamarin-prover", "conduit"], DirectedEdge["tamarin-prover", "containers"], DirectedEdge["tamarin-prover", "deepseq"], DirectedEdge["tamarin-prover", "derive"], DirectedEdge["tamarin-prover", "directory"], DirectedEdge["tamarin-prover", "dlist"], DirectedEdge["tamarin-prover", "fclabels"], DirectedEdge["tamarin-prover", "filepath"], DirectedEdge["tamarin-prover", "hamlet"], DirectedEdge["tamarin-prover", "http-types"], DirectedEdge["tamarin-prover", "HUnit"], DirectedEdge["tamarin-prover", "lifted-base"], DirectedEdge["tamarin-prover", "monad-control"], DirectedEdge["tamarin-prover", "mtl"], DirectedEdge["tamarin-prover", "old-locale"], DirectedEdge["tamarin-prover", "parallel"], DirectedEdge["tamarin-prover", "parsec"], DirectedEdge["tamarin-prover", "process"], DirectedEdge["tamarin-prover", "safe"], DirectedEdge["tamarin-prover", "shakespeare"], DirectedEdge["tamarin-prover", "syb"], DirectedEdge["tamarin-prover", "tamarin-prover-term"], DirectedEdge["tamarin-prover", "tamarin-prover-theory"], DirectedEdge["tamarin-prover", "tamarin-prover-utils"], DirectedEdge["tamarin-prover", "text"], DirectedEdge["tamarin-prover", "threads"], DirectedEdge["tamarin-prover", "time"], DirectedEdge["tamarin-prover", "transformers"], DirectedEdge["tamarin-prover", "uniplate"], DirectedEdge["tamarin-prover", "wai"], DirectedEdge["tamarin-prover", "warp"], DirectedEdge["tamarin-prover", "yesod-core"], DirectedEdge["tamarin-prover", "yesod-json"], DirectedEdge["tamarin-prover", "yesod-static"], DirectedEdge["tamarin-prover-term", "attoparsec"], DirectedEdge["tamarin-prover-term", "base"], DirectedEdge["tamarin-prover-term", "binary"], DirectedEdge["tamarin-prover-term", "bytestring"], DirectedEdge["tamarin-prover-term", "containers"], DirectedEdge["tamarin-prover-term", "deepseq"], DirectedEdge["tamarin-prover-term", "derive"], DirectedEdge["tamarin-prover-term", "directory"], DirectedEdge["tamarin-prover-term", "dlist"], DirectedEdge["tamarin-prover-term", "HUnit"], DirectedEdge["tamarin-prover-term", "mtl"], DirectedEdge["tamarin-prover-term", "parsec"], DirectedEdge["tamarin-prover-term", "process"], DirectedEdge["tamarin-prover-term", "safe"], DirectedEdge["tamarin-prover-term", "split"], DirectedEdge["tamarin-prover-term", "syb"], DirectedEdge["tamarin-prover-term", "tamarin-prover-utils"], DirectedEdge["tamarin-prover-theory", "array"], DirectedEdge["tamarin-prover-theory", "base"], DirectedEdge["tamarin-prover-theory", "binary"], DirectedEdge["tamarin-prover-theory", "bytestring"], DirectedEdge["tamarin-prover-theory", "cmdargs"], DirectedEdge["tamarin-prover-theory", "containers"], DirectedEdge["tamarin-prover-theory", "deepseq"], DirectedEdge["tamarin-prover-theory", "derive"], DirectedEdge["tamarin-prover-theory", "directory"], DirectedEdge["tamarin-prover-theory", "dlist"], DirectedEdge["tamarin-prover-theory", "fclabels"], DirectedEdge["tamarin-prover-theory", "filepath"], DirectedEdge["tamarin-prover-theory", "HUnit"], DirectedEdge["tamarin-prover-theory", "mtl"], DirectedEdge["tamarin-prover-theory", "parallel"], DirectedEdge["tamarin-prover-theory", "parsec"], DirectedEdge["tamarin-prover-theory", "process"], DirectedEdge["tamarin-prover-theory", "safe"], DirectedEdge["tamarin-prover-theory", "syb"], DirectedEdge["tamarin-prover-theory", "tamarin-prover-term"], DirectedEdge["tamarin-prover-theory", "tamarin-prover-utils"], DirectedEdge["tamarin-prover-theory", "time"], DirectedEdge["tamarin-prover-theory", "transformers"], DirectedEdge["tamarin-prover-theory", "uniplate"], DirectedEdge["tamarin-prover-utils", "base"], DirectedEdge["tamarin-prover-utils", "base64-bytestring"], DirectedEdge["tamarin-prover-utils", "binary"], DirectedEdge["tamarin-prover-utils", "blaze-builder"], DirectedEdge["tamarin-prover-utils", "bytestring"], DirectedEdge["tamarin-prover-utils", "containers"], DirectedEdge["tamarin-prover-utils", "deepseq"], DirectedEdge["tamarin-prover-utils", "dlist"], DirectedEdge["tamarin-prover-utils", "fclabels"], DirectedEdge["tamarin-prover-utils", "mtl"], DirectedEdge["tamarin-prover-utils", "parsec"], DirectedEdge["tamarin-prover-utils", "pretty"], DirectedEdge["tamarin-prover-utils", "SHA"], DirectedEdge["tamarin-prover-utils", "syb"], DirectedEdge["tamarin-prover-utils", "time"], DirectedEdge["tamarin-prover-utils", "transformers"], DirectedEdge["tamper", "base"], DirectedEdge["tamper", "containers"], DirectedEdge["tamper", "mtl"], DirectedEdge["tamper", "safe"], DirectedEdge["tamper", "text"], DirectedEdge["tar", "array"], DirectedEdge["tar", "base"], DirectedEdge["tar", "bytestring"], DirectedEdge["tar", "bytestring-builder"], DirectedEdge["tar", "containers"], DirectedEdge["tar", "deepseq"], DirectedEdge["tar", "directory"], DirectedEdge["tar", "filepath"], DirectedEdge["tar", "old-time"], DirectedEdge["tar", "time"], DirectedEdge["tardis", "base"], DirectedEdge["tardis", "mmorph"], DirectedEdge["tardis", "mtl"], DirectedEdge["target", "base"], DirectedEdge["target", "containers"], DirectedEdge["target", "directory"], DirectedEdge["target", "exceptions"], DirectedEdge["target", "filepath"], DirectedEdge["target", "ghc"], DirectedEdge["target", "ghc-paths"], DirectedEdge["target", "hint"], DirectedEdge["target", "liquid-fixpoint"], DirectedEdge["target", "liquidhaskell"], DirectedEdge["target", "mtl"], DirectedEdge["target", "pretty"], DirectedEdge["target", "process"], DirectedEdge["target", "QuickCheck"], DirectedEdge["target", "syb"], DirectedEdge["target", "tagged"], DirectedEdge["target", "target"], DirectedEdge["target", "template-haskell"], DirectedEdge["target", "text"], DirectedEdge["target", "text-format"], DirectedEdge["target", "th-lift"], DirectedEdge["target", "transformers"], DirectedEdge["target", "unordered-containers"], DirectedEdge["target", "vector"], DirectedEdge["task", "aeson"], DirectedEdge["task", "attoparsec"], DirectedEdge["task", "base"], DirectedEdge["task", "bytestring"], DirectedEdge["task", "containers"], DirectedEdge["task", "csv-enumerator"], DirectedEdge["task", "directory"], DirectedEdge["task", "filepath"], DirectedEdge["task", "old-locale"], DirectedEdge["task", "random"], DirectedEdge["task", "text"], DirectedEdge["task", "time"], DirectedEdge["task", "unix"], DirectedEdge["task-distribution", "async"], DirectedEdge["task-distribution", "base"], DirectedEdge["task-distribution", "binary"], DirectedEdge["task-distribution", "bytestring"], DirectedEdge["task-distribution", "bzlib"], DirectedEdge["task-distribution", "containers"], DirectedEdge["task-distribution", "directory"], DirectedEdge["task-distribution", "distributed-process"], DirectedEdge["task-distribution", "distributed-process-simplelocalnet"], DirectedEdge["task-distribution", "distributed-static"], DirectedEdge["task-distribution", "filepath"], DirectedEdge["task-distribution", "hadoop-rpc"], DirectedEdge["task-distribution", "hashable"], DirectedEdge["task-distribution", "hint"], DirectedEdge["task-distribution", "hslogger"], DirectedEdge["task-distribution", "json"], DirectedEdge["task-distribution", "packman"], DirectedEdge["task-distribution", "process"], DirectedEdge["task-distribution", "rank1dynamic"], DirectedEdge["task-distribution", "split"], DirectedEdge["task-distribution", "strings"], DirectedEdge["task-distribution", "task-distribution"], DirectedEdge["task-distribution", "temporary"], DirectedEdge["task-distribution", "text"], DirectedEdge["task-distribution", "time"], DirectedEdge["task-distribution", "transformers"], DirectedEdge["task-distribution", "vector"], DirectedEdge["task-distribution", "zlib"], DirectedEdge["taskpool", "async-pool"], DirectedEdge["taskpool", "async"], DirectedEdge["taskpool", "base"], DirectedEdge["taskpool", "containers"], DirectedEdge["taskpool", "fgl"], DirectedEdge["taskpool", "stm"], DirectedEdge["taskpool", "transformers"], DirectedEdge["tasty", "ansi-terminal"], DirectedEdge["tasty", "async"], DirectedEdge["tasty", "base"], DirectedEdge["tasty", "clock"], DirectedEdge["tasty", "containers"], DirectedEdge["tasty", "deepseq"], DirectedEdge["tasty", "ghc-prim"], DirectedEdge["tasty", "mtl"], DirectedEdge["tasty", "optparse-applicative"], DirectedEdge["tasty", "regex-tdfa"], DirectedEdge["tasty", "stm"], DirectedEdge["tasty", "tagged"], DirectedEdge["tasty", "unbounded-delays"], DirectedEdge["tasty-ant-xml", "base"], DirectedEdge["tasty-ant-xml", "containers"], DirectedEdge["tasty-ant-xml", "generic-deriving"], DirectedEdge["tasty-ant-xml", "ghc-prim"], DirectedEdge["tasty-ant-xml", "mtl"], DirectedEdge["tasty-ant-xml", "stm"], DirectedEdge["tasty-ant-xml", "tagged"], DirectedEdge["tasty-ant-xml", "tasty"], DirectedEdge["tasty-ant-xml", "transformers"], DirectedEdge["tasty-ant-xml", "xml"], DirectedEdge["tasty-dejafu", "base"], DirectedEdge["tasty-dejafu", "dejafu"], DirectedEdge["tasty-dejafu", "tagged"], DirectedEdge["tasty-dejafu", "tasty"], DirectedEdge["tasty-expected-failure", "base"], DirectedEdge["tasty-expected-failure", "tagged"], DirectedEdge["tasty-expected-failure", "tasty"], DirectedEdge["tasty-fail-fast", "base"], DirectedEdge["tasty-fail-fast", "containers"], DirectedEdge["tasty-fail-fast", "stm"], DirectedEdge["tasty-fail-fast", "tagged"], DirectedEdge["tasty-fail-fast", "tasty"], DirectedEdge["tasty-golden", "async"], DirectedEdge["tasty-golden", "base"], DirectedEdge["tasty-golden", "bytestring"], DirectedEdge["tasty-golden", "containers"], DirectedEdge["tasty-golden", "deepseq"], DirectedEdge["tasty-golden", "directory"], DirectedEdge["tasty-golden", "filepath"], DirectedEdge["tasty-golden", "mtl"], DirectedEdge["tasty-golden", "optparse-applicative"], DirectedEdge["tasty-golden", "process"], DirectedEdge["tasty-golden", "tagged"], DirectedEdge["tasty-golden", "tasty"], DirectedEdge["tasty-golden", "temporary"], DirectedEdge["tasty-groundhog-converters", "aeson"], DirectedEdge["tasty-groundhog-converters", "base"], DirectedEdge["tasty-groundhog-converters", "bimap"], DirectedEdge["tasty-groundhog-converters", "bytestring"], DirectedEdge["tasty-groundhog-converters", "containers"], DirectedEdge["tasty-groundhog-converters", "groundhog"], DirectedEdge["tasty-groundhog-converters", "groundhog-converters"], DirectedEdge["tasty-groundhog-converters", "groundhog-sqlite"], DirectedEdge["tasty-groundhog-converters", "groundhog-th"], DirectedEdge["tasty-groundhog-converters", "tasty"], DirectedEdge["tasty-groundhog-converters", "tasty-hunit"], DirectedEdge["tasty-groundhog-converters", "tasty-quickcheck"], DirectedEdge["tasty-hspec", "base"], DirectedEdge["tasty-hspec", "hspec"], DirectedEdge["tasty-hspec", "hspec-core"], DirectedEdge["tasty-hspec", "QuickCheck"], DirectedEdge["tasty-hspec", "random"], DirectedEdge["tasty-hspec", "tagged"], DirectedEdge["tasty-hspec", "tasty"], DirectedEdge["tasty-hspec", "tasty-quickcheck"], DirectedEdge["tasty-hspec", "tasty-smallcheck"], DirectedEdge["tasty-html", "base"], DirectedEdge["tasty-html", "blaze-html"], DirectedEdge["tasty-html", "bytestring"], DirectedEdge["tasty-html", "containers"], DirectedEdge["tasty-html", "filepath"], DirectedEdge["tasty-html", "generic-deriving"], DirectedEdge["tasty-html", "mtl"], DirectedEdge["tasty-html", "stm"], DirectedEdge["tasty-html", "tagged"], DirectedEdge["tasty-html", "tasty"], DirectedEdge["tasty-html", "text"], DirectedEdge["tasty-html", "transformers"], DirectedEdge["tasty-hunit", "base"], DirectedEdge["tasty-hunit", "tasty"], DirectedEdge["tasty-hunit-adapter", "base"], DirectedEdge["tasty-hunit-adapter", "HUnit"], DirectedEdge["tasty-hunit-adapter", "tasty"], DirectedEdge["tasty-hunit-adapter", "tasty-hunit"], DirectedEdge["tasty-integrate", "aeson"], DirectedEdge["tasty-integrate", "base"], DirectedEdge["tasty-integrate", "bytestring"], DirectedEdge["tasty-integrate", "cmdargs"], DirectedEdge["tasty-integrate", "containers"], DirectedEdge["tasty-integrate", "directory"], DirectedEdge["tasty-integrate", "either"], DirectedEdge["tasty-integrate", "haskell-src-exts"], DirectedEdge["tasty-integrate", "language-haskell-extract"], DirectedEdge["tasty-integrate", "lens"], DirectedEdge["tasty-integrate", "mtl"], DirectedEdge["tasty-integrate", "parsec"], DirectedEdge["tasty-integrate", "regex-posix"], DirectedEdge["tasty-integrate", "split"], DirectedEdge["tasty-integrate", "system-filepath"], DirectedEdge["tasty-integrate", "tasty"], DirectedEdge["tasty-integrate", "tasty-quickcheck"], DirectedEdge["tasty-integrate", "text"], DirectedEdge["tasty-integrate", "transformers"], DirectedEdge["tasty-integrate", "unix"], DirectedEdge["tasty-kat", "base"], DirectedEdge["tasty-kat", "bytestring"], DirectedEdge["tasty-kat", "tasty"], DirectedEdge["tasty-laws", "base"], DirectedEdge["tasty-laws", "smallcheck"], DirectedEdge["tasty-laws", "smallcheck-laws"], DirectedEdge["tasty-laws", "smallcheck-series"], DirectedEdge["tasty-laws", "tagged"], DirectedEdge["tasty-laws", "tasty"], DirectedEdge["tasty-laws", "tasty-smallcheck"], DirectedEdge["tasty-laws", "transformers"], DirectedEdge["tasty-lens", "base"], DirectedEdge["tasty-lens", "lens"], DirectedEdge["tasty-lens", "smallcheck"], DirectedEdge["tasty-lens", "smallcheck-lens"], DirectedEdge["tasty-lens", "tagged"], DirectedEdge["tasty-lens", "tasty"], DirectedEdge["tasty-lens", "tasty-smallcheck"], DirectedEdge["tasty-program", "base"], DirectedEdge["tasty-program", "deepseq"], DirectedEdge["tasty-program", "directory"], DirectedEdge["tasty-program", "filepath"], DirectedEdge["tasty-program", "process"], DirectedEdge["tasty-program", "tasty"], DirectedEdge["tasty-quickcheck", "base"], DirectedEdge["tasty-quickcheck", "QuickCheck"], DirectedEdge["tasty-quickcheck", "random"], DirectedEdge["tasty-quickcheck", "tagged"], DirectedEdge["tasty-quickcheck", "tasty"], DirectedEdge["tasty-rerun", "base"], DirectedEdge["tasty-rerun", "containers"], DirectedEdge["tasty-rerun", "mtl"], DirectedEdge["tasty-rerun", "optparse-applicative"], DirectedEdge["tasty-rerun", "reducers"], DirectedEdge["tasty-rerun", "split"], DirectedEdge["tasty-rerun", "stm"], DirectedEdge["tasty-rerun", "tagged"], DirectedEdge["tasty-rerun", "tasty"], DirectedEdge["tasty-rerun", "transformers"], DirectedEdge["tasty-silver", "ansi-terminal"], DirectedEdge["tasty-silver", "async"], DirectedEdge["tasty-silver", "base"], DirectedEdge["tasty-silver", "bytestring"], DirectedEdge["tasty-silver", "containers"], DirectedEdge["tasty-silver", "deepseq"], DirectedEdge["tasty-silver", "directory"], DirectedEdge["tasty-silver", "filepath"], DirectedEdge["tasty-silver", "mtl"], DirectedEdge["tasty-silver", "optparse-applicative"], DirectedEdge["tasty-silver", "process"], DirectedEdge["tasty-silver", "process-extras"], DirectedEdge["tasty-silver", "regex-tdfa"], DirectedEdge["tasty-silver", "stm"], DirectedEdge["tasty-silver", "tagged"], DirectedEdge["tasty-silver", "tasty"], DirectedEdge["tasty-silver", "temporary"], DirectedEdge["tasty-silver", "text"], DirectedEdge["tasty-smallcheck", "async"], DirectedEdge["tasty-smallcheck", "base"], DirectedEdge["tasty-smallcheck", "smallcheck"], DirectedEdge["tasty-smallcheck", "tagged"], DirectedEdge["tasty-smallcheck", "tasty"], DirectedEdge["tasty-tap", "base"], DirectedEdge["tasty-tap", "containers"], DirectedEdge["tasty-tap", "stm"], DirectedEdge["tasty-tap", "tasty"], DirectedEdge["tasty-th", "base"], DirectedEdge["tasty-th", "tasty"], DirectedEdge["tasty-th", "template-haskell"], DirectedEdge["tateti-tateti", "array"], DirectedEdge["tateti-tateti", "base"], DirectedEdge["tateti-tateti", "lens-simple"], DirectedEdge["tateti-tateti", "mtl"], DirectedEdge["tateti-tateti", "ncurses"], DirectedEdge["tateti-tateti", "random"], DirectedEdge["tau", "base"], DirectedEdge["tbox", "array"], DirectedEdge["tbox", "base"], DirectedEdge["tbox", "binary"], DirectedEdge["tbox", "cautious-file"], DirectedEdge["tbox", "containers"], DirectedEdge["tbox", "directory"], DirectedEdge["tbox", "filepath"], DirectedEdge["tbox", "IfElse"], DirectedEdge["tbox", "monad-loops"], DirectedEdge["tbox", "mtl"], DirectedEdge["tbox", "random"], DirectedEdge["tbox", "safe-failure"], DirectedEdge["tbox", "stm-io-hooks"], DirectedEdge["tcache-AWS", "aws"], DirectedEdge["tcache-AWS", "base"], DirectedEdge["tcache-AWS", "bytestring"], DirectedEdge["tcache-AWS", "conduit"], DirectedEdge["tcache-AWS", "http-conduit"], DirectedEdge["tcache-AWS", "network"], DirectedEdge["tcache-AWS", "TCache"], DirectedEdge["tcache-AWS", "text"], DirectedEdge["tccli", "base"], DirectedEdge["tccli", "bytestring"], DirectedEdge["tccli", "tokyocabinet-haskell"], DirectedEdge["tccli", "utf8-string"], DirectedEdge["tce-conf", "base"], DirectedEdge["tce-conf", "containers"], DirectedEdge["tconfig", "base"], DirectedEdge["tconfig", "containers"], DirectedEdge["tcp", "base"], DirectedEdge["tcp", "containers"], DirectedEdge["tcp", "old-time"], DirectedEdge["tdd-util", "base"], DirectedEdge["tdd-util", "bytestring"], DirectedEdge["tdd-util", "HUnit"], DirectedEdge["tdd-util", "lens"], DirectedEdge["tdd-util", "MonadCatchIO-transformers"], DirectedEdge["tdd-util", "parallel-io"], DirectedEdge["tdd-util", "process"], DirectedEdge["tdd-util", "QuickCheck"], DirectedEdge["tdd-util", "random"], DirectedEdge["tdd-util", "system-posix-redirect"], DirectedEdge["tdd-util", "tagged"], DirectedEdge["tdd-util", "test-framework"], DirectedEdge["tdd-util", "test-framework-hunit"], DirectedEdge["tdd-util", "time"], DirectedEdge["tdd-util", "transformers"], DirectedEdge["tdoc", "base"], DirectedEdge["tdoc", "bytestring"], DirectedEdge["tdoc", "template-haskell"], DirectedEdge["tdoc", "transformers"], DirectedEdge["tdoc", "xhtml"], DirectedEdge["teams", "base"], DirectedEdge["teams", "containers"], DirectedEdge["teams", "fgl"], DirectedEdge["teams", "graphviz"], DirectedEdge["teeth", "base"], DirectedEdge["telegram", "aeson"], DirectedEdge["telegram", "base"], DirectedEdge["telegram", "bytestring"], DirectedEdge["telegram", "data-default"], DirectedEdge["telegram", "http-conduit"], DirectedEdge["telegram", "url"], DirectedEdge["telegram", "utf8-string"], DirectedEdge["telegram-api", "aeson"], DirectedEdge["telegram-api", "base"], DirectedEdge["telegram-api", "bytestring"], DirectedEdge["telegram-api", "either"], DirectedEdge["telegram-api", "http-api-data"], DirectedEdge["telegram-api", "http-client"], DirectedEdge["telegram-api", "http-media"], DirectedEdge["telegram-api", "http-types"], DirectedEdge["telegram-api", "mime-types"], DirectedEdge["telegram-api", "servant"], DirectedEdge["telegram-api", "servant-client"], DirectedEdge["telegram-api", "string-conversions"], DirectedEdge["telegram-api", "text"], DirectedEdge["telegram-api", "transformers"], DirectedEdge["teleport", "aeson"], DirectedEdge["teleport", "ansi-terminal"], DirectedEdge["teleport", "base"], DirectedEdge["teleport", "bytestring"], DirectedEdge["teleport", "configurator"], DirectedEdge["teleport", "optparse-applicative"], DirectedEdge["teleport", "system-filepath"], DirectedEdge["teleport", "teleport"], DirectedEdge["teleport", "text"], DirectedEdge["teleport", "turtle"], DirectedEdge["tellbot", "base"], DirectedEdge["tellbot", "bifunctors"], DirectedEdge["tellbot", "bytestring"], DirectedEdge["tellbot", "containers"], DirectedEdge["tellbot", "http-conduit"], DirectedEdge["tellbot", "mtl"], DirectedEdge["tellbot", "network"], DirectedEdge["tellbot", "regex-pcre"], DirectedEdge["tellbot", "split"], DirectedEdge["tellbot", "tagsoup"], DirectedEdge["tellbot", "text"], DirectedEdge["tellbot", "time"], DirectedEdge["tellbot", "transformers"], DirectedEdge["template", "base"], DirectedEdge["template", "mtl"], DirectedEdge["template", "text"], DirectedEdge["template-default", "base"], DirectedEdge["template-default", "data-default"], DirectedEdge["template-default", "template-haskell"], DirectedEdge["template-haskell", "base"], DirectedEdge["template-haskell", "ghc-boot-th"], DirectedEdge["template-haskell", "pretty"], DirectedEdge["template-haskell-util", "base"], DirectedEdge["template-haskell-util", "GenericPretty"], DirectedEdge["template-haskell-util", "ghc-prim"], DirectedEdge["template-haskell-util", "template-haskell"], DirectedEdge["template-hsml", "base"], DirectedEdge["template-hsml", "blaze-markup"], DirectedEdge["template-hsml", "haskell-src-exts"], DirectedEdge["template-hsml", "haskell-src-meta"], DirectedEdge["template-hsml", "parsec"], DirectedEdge["template-hsml", "template-haskell"], DirectedEdge["template-yj", "base"], DirectedEdge["template-yj", "bytestring"], DirectedEdge["template-yj", "text"], DirectedEdge["templatepg", "base"], DirectedEdge["templatepg", "binary"], DirectedEdge["templatepg", "bytestring"], DirectedEdge["templatepg", "haskell-src-meta"], DirectedEdge["templatepg", "mtl"], DirectedEdge["templatepg", "network"], DirectedEdge["templatepg", "parsec"], DirectedEdge["templatepg", "regex-compat"], DirectedEdge["templatepg", "regex-posix"], DirectedEdge["templatepg", "template-haskell"], DirectedEdge["templatepg", "time"], DirectedEdge["templatepg", "utf8-string"], DirectedEdge["templater", "attoparsec"], DirectedEdge["templater", "base"], DirectedEdge["templater", "text"], DirectedEdge["tempo", "base"], DirectedEdge["tempo", "base64-bytestring"], DirectedEdge["tempo", "bytestring"], DirectedEdge["tempo", "ConfigFile"], DirectedEdge["tempo", "directory"], DirectedEdge["tempo", "filepath"], DirectedEdge["tempo", "http-conduit"], DirectedEdge["tempo", "MissingH"], DirectedEdge["tempo", "mtl"], DirectedEdge["tempo", "process"], DirectedEdge["tempo", "regex-posix"], DirectedEdge["tempo", "resourcet"], DirectedEdge["tempo", "split"], DirectedEdge["tempo", "tempo"], DirectedEdge["tempo", "time"], DirectedEdge["tempodb", "aeson"], DirectedEdge["tempodb", "base"], DirectedEdge["tempodb", "blaze-builder"], DirectedEdge["tempodb", "bytestring"], DirectedEdge["tempodb", "containers"], DirectedEdge["tempodb", "HsOpenSSL"], DirectedEdge["tempodb", "HTTP"], DirectedEdge["tempodb", "http-streams"], DirectedEdge["tempodb", "io-streams"], DirectedEdge["tempodb", "mtl"], DirectedEdge["tempodb", "old-locale"], DirectedEdge["tempodb", "text"], DirectedEdge["tempodb", "time"], DirectedEdge["temporal-csound", "base"], DirectedEdge["temporal-csound", "csound-catalog"], DirectedEdge["temporal-csound", "csound-expression"], DirectedEdge["temporal-csound", "temporal-media"], DirectedEdge["temporal-csound", "temporal-music-notation"], DirectedEdge["temporal-csound", "temporal-music-notation-western"], DirectedEdge["temporal-media", "base"], DirectedEdge["temporal-media", "Boolean"], DirectedEdge["temporal-music-notation", "base"], DirectedEdge["temporal-music-notation", "data-default"], DirectedEdge["temporal-music-notation", "temporal-media"], DirectedEdge["temporal-music-notation", "vector"], DirectedEdge["temporal-music-notation-demo", "base"], DirectedEdge["temporal-music-notation-demo", "binary"], DirectedEdge["temporal-music-notation-demo", "data-default"], DirectedEdge["temporal-music-notation-demo", "HCodecs"], DirectedEdge["temporal-music-notation-demo", "temporal-music-notation"], DirectedEdge["temporal-music-notation-western", "base"], DirectedEdge["temporal-music-notation-western", "temporal-music-notation"], DirectedEdge["temporary", "base"], DirectedEdge["temporary", "directory"], DirectedEdge["temporary", "exceptions"], DirectedEdge["temporary", "filepath"], DirectedEdge["temporary", "transformers"], DirectedEdge["temporary", "unix"], DirectedEdge["temporary-rc", "temporary"], DirectedEdge["temporary-rc", "base"], DirectedEdge["temporary-rc", "directory"], DirectedEdge["temporary-rc", "exceptions"], DirectedEdge["temporary-rc", "filepath"], DirectedEdge["temporary-rc", "transformers"], DirectedEdge["temporary-rc", "unix"], DirectedEdge["temporary-resourcet", "base"], DirectedEdge["temporary-resourcet", "directory"], DirectedEdge["temporary-resourcet", "exceptions"], DirectedEdge["temporary-resourcet", "filepath"], DirectedEdge["temporary-resourcet", "resourcet"], DirectedEdge["temporary-resourcet", "transformers"], DirectedEdge["temporary-resourcet", "unix"], DirectedEdge["tempus", "array"], DirectedEdge["tempus", "base"], DirectedEdge["tempus", "directory"], DirectedEdge["tempus", "executable-path"], DirectedEdge["tempus", "filepath"], DirectedEdge["tempus", "haskeline"], DirectedEdge["tempus", "mtl"], DirectedEdge["tempus", "uniplate"], DirectedEdge["tempus", "utf8-string"], DirectedEdge["tempus-fugit", "base"], DirectedEdge["tempus-fugit", "tempus-fugit"], DirectedEdge["tensor", "base"], DirectedEdge["tensor", "ghc-prim"], DirectedEdge["tensor", "random"], DirectedEdge["tensor", "vector"], DirectedEdge["term-rewriting", "ansi-wl-pprint"], DirectedEdge["term-rewriting", "array"], DirectedEdge["term-rewriting", "base"], DirectedEdge["term-rewriting", "containers"], DirectedEdge["term-rewriting", "mtl"], DirectedEdge["term-rewriting", "multiset"], DirectedEdge["term-rewriting", "parsec"], DirectedEdge["term-rewriting", "union-find-array"], DirectedEdge["termbox-bindings", "base"], DirectedEdge["termbox-bindings", "termbox-bindings"], DirectedEdge["terminal-progress-bar", "base"], DirectedEdge["terminal-progress-bar", "base-unicode-symbols"], DirectedEdge["terminal-progress-bar", "stm"], DirectedEdge["terminal-progress-bar", "stm-chans"], DirectedEdge["terminal-size", "base"], DirectedEdge["terminal-size", "ghc-prim"], DirectedEdge["terminal-size", "process"], DirectedEdge["termination-combinators", "base"], DirectedEdge["termination-combinators", "containers"], DirectedEdge["termination-combinators", "contravariant"], DirectedEdge["terminfo", "base"], DirectedEdge["terminfo-hs", "attoparsec"], DirectedEdge["terminfo-hs", "base"], DirectedEdge["terminfo-hs", "bytestring"], DirectedEdge["terminfo-hs", "containers"], DirectedEdge["terminfo-hs", "directory"], DirectedEdge["terminfo-hs", "errors"], DirectedEdge["terminfo-hs", "filepath"], DirectedEdge["termplot", "base"], DirectedEdge["termplot", "brick"], DirectedEdge["termplot", "data-default"], DirectedEdge["termplot", "optparse-applicative"], DirectedEdge["termplot", "process"], DirectedEdge["termplot", "split"], DirectedEdge["termplot", "time-units"], DirectedEdge["termplot", "transformers"], DirectedEdge["termplot", "unix"], DirectedEdge["termplot", "vty"], DirectedEdge["terntup", "base"], DirectedEdge["terrahs", "base"], DirectedEdge["terrahs", "old-time"], DirectedEdge["tersmu", "base"], DirectedEdge["tersmu", "containers"], DirectedEdge["tersmu", "mtl"], DirectedEdge["tersmu", "process"], DirectedEdge["tersmu", "syb"], DirectedEdge["tersmu", "transformers"], DirectedEdge["test-fixture", "base"], DirectedEdge["test-fixture", "mtl"], DirectedEdge["test-framework", "ansi-terminal"], DirectedEdge["test-framework", "ansi-wl-pprint"], DirectedEdge["test-framework", "base"], DirectedEdge["test-framework", "bytestring"], DirectedEdge["test-framework", "containers"], DirectedEdge["test-framework", "hostname"], DirectedEdge["test-framework", "HUnit"], DirectedEdge["test-framework", "libxml"], DirectedEdge["test-framework", "old-locale"], DirectedEdge["test-framework", "QuickCheck"], DirectedEdge["test-framework", "random"], DirectedEdge["test-framework", "regex-posix"], DirectedEdge["test-framework", "time"], DirectedEdge["test-framework", "xml"], DirectedEdge["test-framework-doctest", "doctest"], DirectedEdge["test-framework-doctest", "base"], DirectedEdge["test-framework-doctest", "doctest"], DirectedEdge["test-framework-doctest", "test-framework"], DirectedEdge["test-framework-doctest", "test-framework-hunit"], DirectedEdge["test-framework-golden", "tasty-golden"], DirectedEdge["test-framework-golden", "base"], DirectedEdge["test-framework-golden", "bytestring"], DirectedEdge["test-framework-golden", "filepath"], DirectedEdge["test-framework-golden", "mtl"], DirectedEdge["test-framework-golden", "process"], DirectedEdge["test-framework-golden", "temporary"], DirectedEdge["test-framework-golden", "test-framework"], DirectedEdge["test-framework-hunit", "base"], DirectedEdge["test-framework-hunit", "extensible-exceptions"], DirectedEdge["test-framework-hunit", "HUnit"], DirectedEdge["test-framework-hunit", "test-framework"], DirectedEdge["test-framework-program", "base"], DirectedEdge["test-framework-program", "directory"], DirectedEdge["test-framework-program", "process"], DirectedEdge["test-framework-program", "test-framework"], DirectedEdge["test-framework-quickcheck", "base"], DirectedEdge["test-framework-quickcheck", "deepseq"], DirectedEdge["test-framework-quickcheck", "extensible-exceptions"], DirectedEdge["test-framework-quickcheck", "QuickCheck"], DirectedEdge["test-framework-quickcheck", "random"], DirectedEdge["test-framework-quickcheck", "test-framework"], DirectedEdge["test-framework-quickcheck2", "base"], DirectedEdge["test-framework-quickcheck2", "extensible-exceptions"], DirectedEdge["test-framework-quickcheck2", "QuickCheck"], DirectedEdge["test-framework-quickcheck2", "random"], DirectedEdge["test-framework-quickcheck2", "test-framework"], DirectedEdge["test-framework-sandbox", "ansi-terminal"], DirectedEdge["test-framework-sandbox", "base"], DirectedEdge["test-framework-sandbox", "lifted-base"], DirectedEdge["test-framework-sandbox", "mtl"], DirectedEdge["test-framework-sandbox", "temporary"], DirectedEdge["test-framework-sandbox", "test-framework"], DirectedEdge["test-framework-sandbox", "test-sandbox"], DirectedEdge["test-framework-sandbox", "transformers"], DirectedEdge["test-framework-skip", "base"], DirectedEdge["test-framework-skip", "test-framework"], DirectedEdge["test-framework-smallcheck", "tasty-smallcheck"], DirectedEdge["test-framework-smallcheck", "base"], DirectedEdge["test-framework-smallcheck", "smallcheck"], DirectedEdge["test-framework-smallcheck", "test-framework"], DirectedEdge["test-framework-smallcheck", "transformers"], DirectedEdge["test-framework-testing-feat", "base"], DirectedEdge["test-framework-testing-feat", "test-framework"], DirectedEdge["test-framework-testing-feat", "testing-feat"], DirectedEdge["test-framework-th", "base"], DirectedEdge["test-framework-th", "haskell-src-exts"], DirectedEdge["test-framework-th", "language-haskell-extract"], DirectedEdge["test-framework-th", "regex-posix"], DirectedEdge["test-framework-th", "template-haskell"], DirectedEdge["test-framework-th", "test-framework"], DirectedEdge["test-framework-th-prime", "base"], DirectedEdge["test-framework-th-prime", "cpphs"], DirectedEdge["test-framework-th-prime", "haskell-src-exts"], DirectedEdge["test-framework-th-prime", "template-haskell"], DirectedEdge["test-framework-th-prime", "test-framework"], DirectedEdge["test-invariant", "base"], DirectedEdge["test-invariant", "QuickCheck"], DirectedEdge["test-pkg", "base"], DirectedEdge["test-sandbox", "base"], DirectedEdge["test-sandbox", "bytestring"], DirectedEdge["test-sandbox", "cereal"], DirectedEdge["test-sandbox", "containers"], DirectedEdge["test-sandbox", "data-default"], DirectedEdge["test-sandbox", "directory"], DirectedEdge["test-sandbox", "filepath"], DirectedEdge["test-sandbox", "lifted-base"], DirectedEdge["test-sandbox", "monad-control"], DirectedEdge["test-sandbox", "monad-loops"], DirectedEdge["test-sandbox", "mtl"], DirectedEdge["test-sandbox", "network"], DirectedEdge["test-sandbox", "process"], DirectedEdge["test-sandbox", "random"], DirectedEdge["test-sandbox", "random-shuffle"], DirectedEdge["test-sandbox", "regex-posix"], DirectedEdge["test-sandbox", "temporary"], DirectedEdge["test-sandbox", "transformers"], DirectedEdge["test-sandbox", "transformers-base"], DirectedEdge["test-sandbox", "transformers-compat"], DirectedEdge["test-sandbox", "unix"], DirectedEdge["test-sandbox-compose", "aeson"], DirectedEdge["test-sandbox-compose", "base"], DirectedEdge["test-sandbox-compose", "bytestring"], DirectedEdge["test-sandbox-compose", "containers"], DirectedEdge["test-sandbox-compose", "directory"], DirectedEdge["test-sandbox-compose", "hastache"], DirectedEdge["test-sandbox-compose", "http-conduit"], DirectedEdge["test-sandbox-compose", "lifted-base"], DirectedEdge["test-sandbox-compose", "network"], DirectedEdge["test-sandbox-compose", "optparse-applicative"], DirectedEdge["test-sandbox-compose", "process"], DirectedEdge["test-sandbox-compose", "shelly"], DirectedEdge["test-sandbox-compose", "test-sandbox"], DirectedEdge["test-sandbox-compose", "test-sandbox-compose"], DirectedEdge["test-sandbox-compose", "text"], DirectedEdge["test-sandbox-compose", "unix"], DirectedEdge["test-sandbox-compose", "wai"], DirectedEdge["test-sandbox-compose", "wai-extra"], DirectedEdge["test-sandbox-compose", "warp"], DirectedEdge["test-sandbox-compose", "yaml"], DirectedEdge["test-sandbox-compose", "yesod"], DirectedEdge["test-sandbox-compose", "yesod-core"], DirectedEdge["test-sandbox-hunit", "base"], DirectedEdge["test-sandbox-hunit", "HUnit"], DirectedEdge["test-sandbox-hunit", "lifted-base"], DirectedEdge["test-sandbox-hunit", "test-sandbox"], DirectedEdge["test-sandbox-quickcheck", "base"], DirectedEdge["test-sandbox-quickcheck", "mtl"], DirectedEdge["test-sandbox-quickcheck", "QuickCheck"], DirectedEdge["test-sandbox-quickcheck", "random"], DirectedEdge["test-sandbox-quickcheck", "test-sandbox"], DirectedEdge["test-sandbox-quickcheck", "transformers"], DirectedEdge["test-shouldbe", "hspec-expectations"], DirectedEdge["test-shouldbe", "base"], DirectedEdge["test-shouldbe", "HUnit"], DirectedEdge["test-simple", "base"], DirectedEdge["test-simple", "mtl"], DirectedEdge["test-simple", "QuickCheck"], DirectedEdge["test-simple", "state-plus"], DirectedEdge["test-simple", "template-haskell"], DirectedEdge["testPkg", "base"], DirectedEdge["testbench", "base"], DirectedEdge["testbench", "boxes"], DirectedEdge["testbench", "bytestring"], DirectedEdge["testbench", "containers"], DirectedEdge["testbench", "criterion"], DirectedEdge["testbench", "deepseq"], DirectedEdge["testbench", "HUnit"], DirectedEdge["testbench", "statistics"], DirectedEdge["testbench", "testbench"], DirectedEdge["testbench", "transformers"], DirectedEdge["testing-feat", "base"], DirectedEdge["testing-feat", "mtl"], DirectedEdge["testing-feat", "QuickCheck"], DirectedEdge["testing-feat", "tagshare"], DirectedEdge["testing-feat", "template-haskell"], DirectedEdge["testing-type-modifiers", "base"], DirectedEdge["testloop", "base"], DirectedEdge["testloop", "Cabal"], DirectedEdge["testloop", "directory"], DirectedEdge["testloop", "filepath"], DirectedEdge["testloop", "fsnotify"], DirectedEdge["testloop", "hint"], DirectedEdge["testloop", "mtl"], DirectedEdge["testloop", "system-filepath"], DirectedEdge["testloop", "time"], DirectedEdge["testloop", "unix"], DirectedEdge["testpack", "base"], DirectedEdge["testpack", "containers"], DirectedEdge["testpack", "HUnit"], DirectedEdge["testpack", "mtl"], DirectedEdge["testpack", "QuickCheck"], DirectedEdge["testpack", "random"], DirectedEdge["testpattern", "base"], DirectedEdge["testpattern", "filepath"], DirectedEdge["testpattern", "gtk"], DirectedEdge["testrunner", "base"], DirectedEdge["testrunner", "HUnit"], DirectedEdge["testrunner", "QuickCheck"], DirectedEdge["testrunner", "random"], DirectedEdge["testrunner", "regex-compat"], DirectedEdge["testrunner", "stm"], DirectedEdge["tetris", "base"], DirectedEdge["tetris", "GLUT"], DirectedEdge["tetris", "random"], DirectedEdge["tex2txt", "base"], DirectedEdge["tex2txt", "containers"], DirectedEdge["tex2txt", "deepseq"], DirectedEdge["tex2txt", "parsec"], DirectedEdge["texmath", "aeson"], DirectedEdge["texmath", "base"], DirectedEdge["texmath", "bytestring"], DirectedEdge["texmath", "containers"], DirectedEdge["texmath", "mtl"], DirectedEdge["texmath", "network"], DirectedEdge["texmath", "network-uri"], DirectedEdge["texmath", "pandoc-types"], DirectedEdge["texmath", "parsec"], DirectedEdge["texmath", "split"], DirectedEdge["texmath", "syb"], DirectedEdge["texmath", "texmath"], DirectedEdge["texmath", "text"], DirectedEdge["texmath", "xml"], DirectedEdge["texrunner", "attoparsec"], DirectedEdge["texrunner", "base"], DirectedEdge["texrunner", "bytestring"], DirectedEdge["texrunner", "directory"], DirectedEdge["texrunner", "filepath"], DirectedEdge["texrunner", "io-streams"], DirectedEdge["texrunner", "mtl"], DirectedEdge["texrunner", "process"], DirectedEdge["texrunner", "temporary"], DirectedEdge["text", "array"], DirectedEdge["text", "base"], DirectedEdge["text", "binary"], DirectedEdge["text", "bytestring"], DirectedEdge["text", "deepseq"], DirectedEdge["text", "ghc-prim"], DirectedEdge["text", "integer-gmp"], DirectedEdge["text", "integer-simple"], DirectedEdge["text-all", "base"], DirectedEdge["text-all", "text"], DirectedEdge["text-all", "text-format"], DirectedEdge["text-all", "text-show"], DirectedEdge["text-and-plots", "base"], DirectedEdge["text-and-plots", "blaze-html"], DirectedEdge["text-and-plots", "bytestring"], DirectedEdge["text-and-plots", "containers"], DirectedEdge["text-and-plots", "markdown"], DirectedEdge["text-and-plots", "text"], DirectedEdge["text-and-plots", "unordered-containers"], DirectedEdge["text-binary", "base"], DirectedEdge["text-binary", "binary"], DirectedEdge["text-binary", "text"], DirectedEdge["text-conversions", "base"], DirectedEdge["text-conversions", "bytestring"], DirectedEdge["text-conversions", "errors"], DirectedEdge["text-conversions", "text"], DirectedEdge["text-format", "array"], DirectedEdge["text-format", "base"], DirectedEdge["text-format", "double-conversion"], DirectedEdge["text-format", "ghc-prim"], DirectedEdge["text-format", "integer"], DirectedEdge["text-format", "integer-gmp"], DirectedEdge["text-format", "old-locale"], DirectedEdge["text-format", "text"], DirectedEdge["text-format", "time"], DirectedEdge["text-format", "transformers"], DirectedEdge["text-format-simple", "base"], DirectedEdge["text-format-simple", "MissingH"], DirectedEdge["text-icu", "base"], DirectedEdge["text-icu", "bytestring"], DirectedEdge["text-icu", "deepseq"], DirectedEdge["text-icu", "text"], DirectedEdge["text-icu-translit", "base"], DirectedEdge["text-icu-translit", "text"], DirectedEdge["text-json-qq", "base"], DirectedEdge["text-json-qq", "haskell-src-meta"], DirectedEdge["text-json-qq", "json"], DirectedEdge["text-json-qq", "json-qq"], DirectedEdge["text-json-qq", "parsec"], DirectedEdge["text-json-qq", "template-haskell"], DirectedEdge["text-latin1", "base"], DirectedEdge["text-latin1", "bytestring"], DirectedEdge["text-latin1", "case-insensitive"], DirectedEdge["text-latin1", "data-checked"], DirectedEdge["text-latin1", "hashable"], DirectedEdge["text-latin1", "text"], DirectedEdge["text-ldap", "attoparsec"], DirectedEdge["text-ldap", "base"], DirectedEdge["text-ldap", "base64-bytestring"], DirectedEdge["text-ldap", "bytestring"], DirectedEdge["text-ldap", "containers"], DirectedEdge["text-ldap", "dlist"], DirectedEdge["text-ldap", "semigroups"], DirectedEdge["text-ldap", "text-ldap"], DirectedEdge["text-ldap", "transformers"], DirectedEdge["text-locale-encoding", "base"], DirectedEdge["text-locale-encoding", "bytestring"], DirectedEdge["text-locale-encoding", "bytestring-handle"], DirectedEdge["text-locale-encoding", "text"], DirectedEdge["text-manipulate", "base"], DirectedEdge["text-manipulate", "text"], DirectedEdge["text-normal", "base"], DirectedEdge["text-normal", "deepseq"], DirectedEdge["text-normal", "text"], DirectedEdge["text-normal", "text-icu"], DirectedEdge["text-position", "base"], DirectedEdge["text-position", "regex-applicative"], DirectedEdge["text-postgresql", "base"], DirectedEdge["text-postgresql", "dlist"], DirectedEdge["text-postgresql", "transformers"], DirectedEdge["text-printer", "base"], DirectedEdge["text-printer", "bytestring"], DirectedEdge["text-printer", "pretty"], DirectedEdge["text-printer", "semigroups"], DirectedEdge["text-printer", "text"], DirectedEdge["text-regex-replace", "attoparsec"], DirectedEdge["text-regex-replace", "base"], DirectedEdge["text-regex-replace", "text"], DirectedEdge["text-regex-replace", "text-icu"], DirectedEdge["text-region", "aeson"], DirectedEdge["text-region", "base"], DirectedEdge["text-region", "base-unicode-symbols"], DirectedEdge["text-region", "bytestring"], DirectedEdge["text-region", "containers"], DirectedEdge["text-region", "groups"], DirectedEdge["text-region", "lens"], DirectedEdge["text-region", "mtl"], DirectedEdge["text-region", "text"], DirectedEdge["text-register-machine", "base"], DirectedEdge["text-register-machine", "containers"], DirectedEdge["text-register-machine", "mtl"], DirectedEdge["text-register-machine", "vector"], DirectedEdge["text-render", "base"], DirectedEdge["text-render", "classy-prelude"], DirectedEdge["text-render", "mtl"], DirectedEdge["text-render", "parsec"], DirectedEdge["text-render", "text"], DirectedEdge["text-show", "array"], DirectedEdge["text-show", "base"], DirectedEdge["text-show", "base-compat"], DirectedEdge["text-show", "bifunctors"], DirectedEdge["text-show", "bytestring"], DirectedEdge["text-show", "bytestring-builder"], DirectedEdge["text-show", "containers"], DirectedEdge["text-show", "generic-deriving"], DirectedEdge["text-show", "ghc-boot"], DirectedEdge["text-show", "ghc-prim"], DirectedEdge["text-show", "integer-gmp"], DirectedEdge["text-show", "nats"], DirectedEdge["text-show", "semigroups"], DirectedEdge["text-show", "tagged"], DirectedEdge["text-show", "template-haskell"], DirectedEdge["text-show", "text"], DirectedEdge["text-show", "th-lift"], DirectedEdge["text-show", "transformers"], DirectedEdge["text-show", "transformers-compat"], DirectedEdge["text-show", "void"], DirectedEdge["text-show-instances", "base"], DirectedEdge["text-show-instances", "base-compat"], DirectedEdge["text-show-instances", "bifunctors"], DirectedEdge["text-show-instances", "binary"], DirectedEdge["text-show-instances", "bytestring"], DirectedEdge["text-show-instances", "containers"], DirectedEdge["text-show-instances", "directory"], DirectedEdge["text-show-instances", "haskeline"], DirectedEdge["text-show-instances", "hoopl"], DirectedEdge["text-show-instances", "hpc"], DirectedEdge["text-show-instances", "old-locale"], DirectedEdge["text-show-instances", "old-time"], DirectedEdge["text-show-instances", "pretty"], DirectedEdge["text-show-instances", "random"], DirectedEdge["text-show-instances", "semigroups"], DirectedEdge["text-show-instances", "tagged"], DirectedEdge["text-show-instances", "template-haskell"], DirectedEdge["text-show-instances", "terminfo"], DirectedEdge["text-show-instances", "text"], DirectedEdge["text-show-instances", "text-show"], DirectedEdge["text-show-instances", "time"], DirectedEdge["text-show-instances", "transformers"], DirectedEdge["text-show-instances", "transformers-compat"], DirectedEdge["text-show-instances", "unix"], DirectedEdge["text-show-instances", "unordered-containers"], DirectedEdge["text-show-instances", "vector"], DirectedEdge["text-show-instances", "xhtml"], DirectedEdge["text-stream-decode", "streaming-commons"], DirectedEdge["text-stream-decode", "base"], DirectedEdge["text-stream-decode", "bytestring"], DirectedEdge["text-stream-decode", "text"], DirectedEdge["text-utf7", "base"], DirectedEdge["text-utf7", "bytestring"], DirectedEdge["text-utf7", "text"], DirectedEdge["text-xml-generic", "base"], DirectedEdge["text-xml-generic", "bytestring"], DirectedEdge["text-xml-generic", "containers"], DirectedEdge["text-xml-generic", "mtl"], DirectedEdge["text-xml-generic", "not-in-base"], DirectedEdge["text-xml-generic", "split"], DirectedEdge["text-xml-generic", "syb"], DirectedEdge["text-xml-generic", "template-haskell"], DirectedEdge["text-xml-generic", "xml"], DirectedEdge["text-xml-qq", "base"], DirectedEdge["text-xml-qq", "parsec"], DirectedEdge["text-xml-qq", "template-haskell"], DirectedEdge["text-xml-qq", "xml"], DirectedEdge["text-zipper", "base"], DirectedEdge["text-zipper", "text"], DirectedEdge["text-zipper", "vector"], DirectedEdge["text1", "base"], DirectedEdge["text1", "binary"], DirectedEdge["text1", "lens"], DirectedEdge["text1", "semigroups"], DirectedEdge["text1", "text"], DirectedEdge["textPlot", "array"], DirectedEdge["textPlot", "base"], DirectedEdge["textmatetags", "base"], DirectedEdge["textmatetags", "process"], DirectedEdge["textocat-api", "aeson"], DirectedEdge["textocat-api", "base"], DirectedEdge["textocat-api", "bytestring"], DirectedEdge["textocat-api", "conduit"], DirectedEdge["textocat-api", "http-conduit"], DirectedEdge["textocat-api", "http-types"], DirectedEdge["textocat-api", "resourcet"], DirectedEdge["textocat-api", "text"], DirectedEdge["textocat-api", "transformers"], DirectedEdge["texts", "formatting"], DirectedEdge["textual", "string-conversions"], DirectedEdge["textual", "string-convert"], DirectedEdge["textual", "base"], DirectedEdge["textual", "bytestring"], DirectedEdge["textual", "text"], DirectedEdge["textual", "utf8-string"], DirectedEdge["tf-random", "base"], DirectedEdge["tf-random", "primitive"], DirectedEdge["tf-random", "random"], DirectedEdge["tf-random", "time"], DirectedEdge["tfp", "base"], DirectedEdge["tfp", "utility-ht"], DirectedEdge["tfp-th", "base"], DirectedEdge["tfp-th", "template-haskell"], DirectedEdge["tfp-th", "tfp"], DirectedEdge["tftp", "base"], DirectedEdge["tftp", "binary"], DirectedEdge["tftp", "bytestring"], DirectedEdge["tftp", "containers"], DirectedEdge["tftp", "directory"], DirectedEdge["tftp", "hslogger"], DirectedEdge["tftp", "mtl"], DirectedEdge["tftp", "network"], DirectedEdge["tftp", "tftp"], DirectedEdge["tftp", "transformers"], DirectedEdge["tga", "base"], DirectedEdge["tga", "bytestring"], DirectedEdge["th-alpha", "base"], DirectedEdge["th-alpha", "containers"], DirectedEdge["th-alpha", "mmorph"], DirectedEdge["th-alpha", "mtl"], DirectedEdge["th-alpha", "template-haskell"], DirectedEdge["th-alpha", "th-desugar"], DirectedEdge["th-alpha", "transformers"], DirectedEdge["th-build", "base"], DirectedEdge["th-build", "template-haskell"], DirectedEdge["th-cas", "base"], DirectedEdge["th-cas", "template-haskell"], DirectedEdge["th-context", "base"], DirectedEdge["th-context", "containers"], DirectedEdge["th-context", "data-default"], DirectedEdge["th-context", "haskell-src-exts"], DirectedEdge["th-context", "lens"], DirectedEdge["th-context", "mtl"], DirectedEdge["th-context", "mtl-unleashed"], DirectedEdge["th-context", "syb"], DirectedEdge["th-context", "template-haskell"], DirectedEdge["th-context", "th-desugar"], DirectedEdge["th-context", "th-orphans"], DirectedEdge["th-context", "th-typegraph"], DirectedEdge["th-desugar", "base"], DirectedEdge["th-desugar", "containers"], DirectedEdge["th-desugar", "mtl"], DirectedEdge["th-desugar", "syb"], DirectedEdge["th-desugar", "template-haskell"], DirectedEdge["th-desugar", "th-expand-syns"], DirectedEdge["th-desugar", "th-lift"], DirectedEdge["th-desugar", "th-orphans"], DirectedEdge["th-expand-syns", "base"], DirectedEdge["th-expand-syns", "containers"], DirectedEdge["th-expand-syns", "syb"], DirectedEdge["th-expand-syns", "template-haskell"], DirectedEdge["th-extras", "base"], DirectedEdge["th-extras", "syb"], DirectedEdge["th-extras", "template-haskell"], DirectedEdge["th-fold", "base"], DirectedEdge["th-fold", "template-haskell"], DirectedEdge["th-inline-io-action", "base"], DirectedEdge["th-inline-io-action", "template-haskell"], DirectedEdge["th-instance-reification", "base"], DirectedEdge["th-instance-reification", "containers"], DirectedEdge["th-instance-reification", "list-extras"], DirectedEdge["th-instance-reification", "loch-th"], DirectedEdge["th-instance-reification", "placeholders"], DirectedEdge["th-instance-reification", "template-haskell"], DirectedEdge["th-instance-reification", "th-expand-syns"], DirectedEdge["th-instances", "base"], DirectedEdge["th-instances", "checkers"], DirectedEdge["th-instances", "derive"], DirectedEdge["th-instances", "mtl"], DirectedEdge["th-instances", "QuickCheck"], DirectedEdge["th-instances", "template-haskell"], DirectedEdge["th-instances", "th-kinds"], DirectedEdge["th-instances", "th-lift"], DirectedEdge["th-kinds", "base"], DirectedEdge["th-kinds", "containers"], DirectedEdge["th-kinds", "mtl"], DirectedEdge["th-kinds", "template-haskell"], DirectedEdge["th-kinds-fork", "base"], DirectedEdge["th-kinds-fork", "containers"], DirectedEdge["th-kinds-fork", "mtl"], DirectedEdge["th-kinds-fork", "template-haskell"], DirectedEdge["th-kinds-fork", "th-orphans"], DirectedEdge["th-lift", "base"], DirectedEdge["th-lift", "ghc-prim"], DirectedEdge["th-lift", "packedstring"], DirectedEdge["th-lift", "template-haskell"], DirectedEdge["th-lift-instances", "base"], DirectedEdge["th-lift-instances", "bytestring"], DirectedEdge["th-lift-instances", "containers"], DirectedEdge["th-lift-instances", "template-haskell"], DirectedEdge["th-lift-instances", "text"], DirectedEdge["th-lift-instances", "th-lift"], DirectedEdge["th-lift-instances", "vector"], DirectedEdge["th-orphans", "base"], DirectedEdge["th-orphans", "generic-deriving"], DirectedEdge["th-orphans", "ghc-prim"], DirectedEdge["th-orphans", "mtl"], DirectedEdge["th-orphans", "template-haskell"], DirectedEdge["th-orphans", "th-lift"], DirectedEdge["th-orphans", "th-lift-instances"], DirectedEdge["th-orphans", "th-reify-many"], DirectedEdge["th-printf", "attoparsec"], DirectedEdge["th-printf", "base"], DirectedEdge["th-printf", "bytestring"], DirectedEdge["th-printf", "template-haskell"], DirectedEdge["th-printf", "text"], DirectedEdge["th-printf", "transformers"], DirectedEdge["th-reify-many", "base"], DirectedEdge["th-reify-many", "containers"], DirectedEdge["th-reify-many", "mtl"], DirectedEdge["th-reify-many", "safe"], DirectedEdge["th-reify-many", "template-haskell"], DirectedEdge["th-reify-many", "th-expand-syns"], DirectedEdge["th-sccs", "base"], DirectedEdge["th-sccs", "containers"], DirectedEdge["th-sccs", "template-haskell"], DirectedEdge["th-traced", "base"], DirectedEdge["th-traced", "containers"], DirectedEdge["th-traced", "mtl"], DirectedEdge["th-traced", "template-haskell"], DirectedEdge["th-typegraph", "base"], DirectedEdge["th-typegraph", "base-compat"], DirectedEdge["th-typegraph", "containers"], DirectedEdge["th-typegraph", "data-default"], DirectedEdge["th-typegraph", "haskell-src-exts"], DirectedEdge["th-typegraph", "lens"], DirectedEdge["th-typegraph", "microlens-compat"], DirectedEdge["th-typegraph", "mtl"], DirectedEdge["th-typegraph", "mtl-unleashed"], DirectedEdge["th-typegraph", "pretty"], DirectedEdge["th-typegraph", "set-extra"], DirectedEdge["th-typegraph", "syb"], DirectedEdge["th-typegraph", "template-haskell"], DirectedEdge["th-typegraph", "th-desugar"], DirectedEdge["th-typegraph", "th-orphans"], DirectedEdge["th-utilities", "base"], DirectedEdge["th-utilities", "bytestring"], DirectedEdge["th-utilities", "containers"], DirectedEdge["th-utilities", "directory"], DirectedEdge["th-utilities", "filepath"], DirectedEdge["th-utilities", "primitive"], DirectedEdge["th-utilities", "syb"], DirectedEdge["th-utilities", "template-haskell"], DirectedEdge["th-utilities", "text"], DirectedEdge["th-utilities", "th-orphans"], DirectedEdge["themoviedb", "aeson"], DirectedEdge["themoviedb", "base"], DirectedEdge["themoviedb", "binary"], DirectedEdge["themoviedb", "bytestring"], DirectedEdge["themoviedb", "either"], DirectedEdge["themoviedb", "http-client"], DirectedEdge["themoviedb", "http-client-tls"], DirectedEdge["themoviedb", "http-types"], DirectedEdge["themoviedb", "mtl"], DirectedEdge["themoviedb", "text"], DirectedEdge["themoviedb", "text-binary"], DirectedEdge["themoviedb", "themoviedb"], DirectedEdge["themoviedb", "time"], DirectedEdge["themoviedb", "time-locale-compat"], DirectedEdge["themoviedb", "transformers"], DirectedEdge["themplate", "base"], DirectedEdge["themplate", "configurator"], DirectedEdge["themplate", "directory"], DirectedEdge["themplate", "either"], DirectedEdge["themplate", "errors"], DirectedEdge["themplate", "filepath"], DirectedEdge["themplate", "optparse-applicative"], DirectedEdge["themplate", "text"], DirectedEdge["themplate", "transformers"], DirectedEdge["themplate", "transformers-compat"], DirectedEdge["theoremquest", "base"], DirectedEdge["theoremquest", "HTTP"], DirectedEdge["theoremquest", "json"], DirectedEdge["theoremquest", "utf8-string"], DirectedEdge["theoremquest-client", "base"], DirectedEdge["theoremquest-client", "HTTP"], DirectedEdge["theoremquest-client", "network"], DirectedEdge["theoremquest-client", "theoremquest"], DirectedEdge["these", "base"], DirectedEdge["these", "bifunctors"], DirectedEdge["these", "containers"], DirectedEdge["these", "data-default-class"], DirectedEdge["these", "ghc-prim"], DirectedEdge["these", "hashable"], DirectedEdge["these", "mtl"], DirectedEdge["these", "profunctors"], DirectedEdge["these", "semigroupoids"], DirectedEdge["these", "semigroups"], DirectedEdge["these", "transformers"], DirectedEdge["these", "transformers-compat"], DirectedEdge["these", "unordered-containers"], DirectedEdge["these", "vector"], DirectedEdge["thespian", "base"], DirectedEdge["thespian", "containers"], DirectedEdge["thespian", "mtl"], DirectedEdge["theta-functions", "base"], DirectedEdge["thih", "base"], DirectedEdge["thih", "pretty"], DirectedEdge["thimk", "spelling-suggest"], DirectedEdge["thimk", "base"], DirectedEdge["thimk", "edit-distance"], DirectedEdge["thimk", "parseargs"], DirectedEdge["thimk", "phonetic-code"], DirectedEdge["thimk", "sqlite"], DirectedEdge["thorn", "base"], DirectedEdge["thorn", "bifunctors"], DirectedEdge["thorn", "containers"], DirectedEdge["thorn", "contravariant"], DirectedEdge["thorn", "mtl"], DirectedEdge["thorn", "profunctors"], DirectedEdge["thorn", "random"], DirectedEdge["thorn", "template-haskell"], DirectedEdge["thread-local-storage", "base"], DirectedEdge["thread-local-storage", "containers"], DirectedEdge["threadPool", "base"], DirectedEdge["threadPool", "process"], DirectedEdge["threadmanager", "base"], DirectedEdge["threadmanager", "containers"], DirectedEdge["threads", "base"], DirectedEdge["threads", "stm"], DirectedEdge["threads-pool", "base"], DirectedEdge["threads-pool", "containers"], DirectedEdge["threads-pool", "mtl"], DirectedEdge["threads-pool", "stm"], DirectedEdge["threads-supervisor", "base"], DirectedEdge["threads-supervisor", "retry"], DirectedEdge["threads-supervisor", "stm"], DirectedEdge["threads-supervisor", "threads-supervisor"], DirectedEdge["threads-supervisor", "time"], DirectedEdge["threads-supervisor", "unordered-containers"], DirectedEdge["threadscope", "array"], DirectedEdge["threadscope", "base"], DirectedEdge["threadscope", "binary"], DirectedEdge["threadscope", "cairo"], DirectedEdge["threadscope", "containers"], DirectedEdge["threadscope", "deepseq"], DirectedEdge["threadscope", "filepath"], DirectedEdge["threadscope", "ghc-events"], DirectedEdge["threadscope", "glib"], DirectedEdge["threadscope", "gtk"], DirectedEdge["threadscope", "mtl"], DirectedEdge["threadscope", "pango"], DirectedEdge["threadscope", "text"], DirectedEdge["threadscope", "time"], DirectedEdge["threadscope", "unix"], DirectedEdge["threefish", "array"], DirectedEdge["threefish", "base"], DirectedEdge["threefish", "bytestring"], DirectedEdge["threefish", "cereal"], DirectedEdge["threefish", "crypto-api"], DirectedEdge["threefish", "data-default"], DirectedEdge["threefish", "entropy"], DirectedEdge["threefish", "random"], DirectedEdge["threefish", "tagged"], DirectedEdge["threepenny-gui", "aeson"], DirectedEdge["threepenny-gui", "async"], DirectedEdge["threepenny-gui", "base"], DirectedEdge["threepenny-gui", "bytestring"], DirectedEdge["threepenny-gui", "containers"], DirectedEdge["threepenny-gui", "data-default"], DirectedEdge["threepenny-gui", "deepseq"], DirectedEdge["threepenny-gui", "filepath"], DirectedEdge["threepenny-gui", "hashable"], DirectedEdge["threepenny-gui", "network"], DirectedEdge["threepenny-gui", "network-uri"], DirectedEdge["threepenny-gui", "safe"], DirectedEdge["threepenny-gui", "snap-core"], DirectedEdge["threepenny-gui", "snap-server"], DirectedEdge["threepenny-gui", "stm"], DirectedEdge["threepenny-gui", "template-haskell"], DirectedEdge["threepenny-gui", "text"], DirectedEdge["threepenny-gui", "threepenny-gui"], DirectedEdge["threepenny-gui", "time"], DirectedEdge["threepenny-gui", "transformers"], DirectedEdge["threepenny-gui", "unordered-containers"], DirectedEdge["threepenny-gui", "vault"], DirectedEdge["threepenny-gui", "vector"], DirectedEdge["threepenny-gui", "websockets"], DirectedEdge["threepenny-gui", "websockets-snap"], DirectedEdge["thrift", "attoparsec"], DirectedEdge["thrift", "base"], DirectedEdge["thrift", "binary"], DirectedEdge["thrift", "bytestring"], DirectedEdge["thrift", "containers"], DirectedEdge["thrift", "ghc-prim"], DirectedEdge["thrift", "hashable"], DirectedEdge["thrift", "HTTP"], DirectedEdge["thrift", "network"], DirectedEdge["thrift", "network-uri"], DirectedEdge["thrift", "QuickCheck"], DirectedEdge["thrift", "split"], DirectedEdge["thrift", "text"], DirectedEdge["thrift", "unordered-containers"], DirectedEdge["thrift", "vector"], DirectedEdge["thrist", "base"], DirectedEdge["through-text", "base"], DirectedEdge["through-text", "bytestring"], DirectedEdge["through-text", "case-insensitive"], DirectedEdge["through-text", "text"], DirectedEdge["thumbnail", "base"], DirectedEdge["thumbnail", "bytestring"], DirectedEdge["thumbnail", "gd"], DirectedEdge["thumbnail-plus", "base"], DirectedEdge["thumbnail-plus", "bytestring"], DirectedEdge["thumbnail-plus", "conduit"], DirectedEdge["thumbnail-plus", "conduit-extra"], DirectedEdge["thumbnail-plus", "data-default"], DirectedEdge["thumbnail-plus", "directory"], DirectedEdge["thumbnail-plus", "either"], DirectedEdge["thumbnail-plus", "gd"], DirectedEdge["thumbnail-plus", "imagesize-conduit"], DirectedEdge["thumbnail-plus", "resourcet"], DirectedEdge["thumbnail-plus", "temporary"], DirectedEdge["thumbnail-plus", "transformers"], DirectedEdge["thyme", "aeson"], DirectedEdge["thyme", "attoparsec"], DirectedEdge["thyme", "base"], DirectedEdge["thyme", "bytestring"], DirectedEdge["thyme", "containers"], DirectedEdge["thyme", "deepseq"], DirectedEdge["thyme", "mtl"], DirectedEdge["thyme", "old-locale"], DirectedEdge["thyme", "profunctors"], DirectedEdge["thyme", "QuickCheck"], DirectedEdge["thyme", "random"], DirectedEdge["thyme", "text"], DirectedEdge["thyme", "time"], DirectedEdge["thyme", "vector"], DirectedEdge["thyme", "vector-space"], DirectedEdge["thyme", "vector-th-unbox"], DirectedEdge["tianbar", "aeson"], DirectedEdge["tianbar", "base"], DirectedEdge["tianbar", "blaze-html"], DirectedEdge["tianbar", "blaze-markup"], DirectedEdge["tianbar", "containers"], DirectedEdge["tianbar", "dbus"], DirectedEdge["tianbar", "directory"], DirectedEdge["tianbar", "gtk"], DirectedEdge["tianbar", "gtk-traymanager"], DirectedEdge["tianbar", "happstack-server"], DirectedEdge["tianbar", "network"], DirectedEdge["tianbar", "network-uri"], DirectedEdge["tianbar", "process"], DirectedEdge["tianbar", "random"], DirectedEdge["tianbar", "split"], DirectedEdge["tianbar", "text"], DirectedEdge["tianbar", "transformers"], DirectedEdge["tianbar", "utf8-string"], DirectedEdge["tianbar", "webkit"], DirectedEdge["tianbar", "xdg-basedir"], DirectedEdge["tianbar", "xmonad"], DirectedEdge["tianbar", "xmonad-contrib"], DirectedEdge["tic-tac-toe", "base"], DirectedEdge["tic-tac-toe", "glade"], DirectedEdge["tic-tac-toe", "gtk"], DirectedEdge["tickle", "base"], DirectedEdge["tickle", "bifunctors"], DirectedEdge["tickle", "bytestring"], DirectedEdge["tickle", "filepath"], DirectedEdge["tickle", "lens"], DirectedEdge["tickle", "mtl"], DirectedEdge["tickle", "semigroupoids"], DirectedEdge["tickle", "semigroups"], DirectedEdge["tickle", "transformers"], DirectedEdge["tickle", "validation"], DirectedEdge["tictactoe3d", "base"], DirectedEdge["tictactoe3d", "vector"], DirectedEdge["tidal", "base"], DirectedEdge["tidal", "binary"], DirectedEdge["tidal", "bytestring"], DirectedEdge["tidal", "colour"], DirectedEdge["tidal", "containers"], DirectedEdge["tidal", "hashable"], DirectedEdge["tidal", "hmt"], DirectedEdge["tidal", "hosc"], DirectedEdge["tidal", "mtl"], DirectedEdge["tidal", "parsec"], DirectedEdge["tidal", "PortMidi"], DirectedEdge["tidal", "process"], DirectedEdge["tidal", "serialport"], DirectedEdge["tidal", "text"], DirectedEdge["tidal", "time"], DirectedEdge["tidal", "transformers"], DirectedEdge["tidal", "websockets"], DirectedEdge["tidal-midi", "base"], DirectedEdge["tidal-midi", "bytestring"], DirectedEdge["tidal-midi", "containers"], DirectedEdge["tidal-midi", "hashable"], DirectedEdge["tidal-midi", "hosc"], DirectedEdge["tidal-midi", "PortMidi"], DirectedEdge["tidal-midi", "process"], DirectedEdge["tidal-midi", "tidal"], DirectedEdge["tidal-midi", "time"], DirectedEdge["tidal-serial", "base"], DirectedEdge["tidal-serial", "bytestring"], DirectedEdge["tidal-serial", "containers"], DirectedEdge["tidal-serial", "serialport"], DirectedEdge["tidal-serial", "tidal"], DirectedEdge["tidal-vis", "base"], DirectedEdge["tidal-vis", "cairo"], DirectedEdge["tidal-vis", "colour"], DirectedEdge["tidal-vis", "tidal"], DirectedEdge["tie-knot", "base"], DirectedEdge["tie-knot", "containers"], DirectedEdge["tie-knot", "mtl"], DirectedEdge["tie-knot", "recursion-schemes"], DirectedEdge["tiempo", "base"], DirectedEdge["tiempo", "deepseq"], DirectedEdge["tiempo", "time"], DirectedEdge["tiger", "array"], DirectedEdge["tiger", "base"], DirectedEdge["tiger", "containers"], DirectedEdge["tiger", "uuagc"], DirectedEdge["tiger", "uuagc-cabal"], DirectedEdge["tiger", "uulib"], DirectedEdge["tight-apply", "base"], DirectedEdge["tightrope", "aeson"], DirectedEdge["tightrope", "base"], DirectedEdge["tightrope", "bytestring"], DirectedEdge["tightrope", "containers"], DirectedEdge["tightrope", "http-types"], DirectedEdge["tightrope", "lens"], DirectedEdge["tightrope", "mtl"], DirectedEdge["tightrope", "text"], DirectedEdge["tightrope", "wai"], DirectedEdge["tightrope", "wai-extra"], DirectedEdge["tightrope", "wreq"], DirectedEdge["tighttp", "base"], DirectedEdge["tighttp", "bytestring"], DirectedEdge["tighttp", "handle-like"], DirectedEdge["tighttp", "monads-tf"], DirectedEdge["tighttp", "old-locale"], DirectedEdge["tighttp", "papillon"], DirectedEdge["tighttp", "simple-pipe"], DirectedEdge["tighttp", "time"], DirectedEdge["tilings", "base"], DirectedEdge["timberc", "array"], DirectedEdge["timberc", "base"], DirectedEdge["timberc", "binary"], DirectedEdge["timberc", "bytestring"], DirectedEdge["timberc", "bzlib"], DirectedEdge["timberc", "filepath"], DirectedEdge["timberc", "mtl"], DirectedEdge["timberc", "pretty"], DirectedEdge["time", "base"], DirectedEdge["time", "deepseq"], DirectedEdge["time-cache", "auto-update"], DirectedEdge["time-cache", "base"], DirectedEdge["time-cache", "text"], DirectedEdge["time-cache", "time"], DirectedEdge["time-cache", "time-units"], DirectedEdge["time-cache", "transformers"], DirectedEdge["time-compat", "base"], DirectedEdge["time-compat", "old-time"], DirectedEdge["time-compat", "time"], DirectedEdge["time-extras", "base"], DirectedEdge["time-extras", "time"], DirectedEdge["time-exts", "aeson"], DirectedEdge["time-exts", "attoparsec"], DirectedEdge["time-exts", "base"], DirectedEdge["time-exts", "bindings-DSL"], DirectedEdge["time-exts", "containers"], DirectedEdge["time-exts", "convertible"], DirectedEdge["time-exts", "data-default"], DirectedEdge["time-exts", "deepseq"], DirectedEdge["time-exts", "fclabels"], DirectedEdge["time-exts", "mtl"], DirectedEdge["time-exts", "old-locale"], DirectedEdge["time-exts", "QuickCheck"], DirectedEdge["time-exts", "random"], DirectedEdge["time-exts", "text"], DirectedEdge["time-exts", "time"], DirectedEdge["time-exts", "timezone-olson"], DirectedEdge["time-http", "ascii"], DirectedEdge["time-http", "attempt"], DirectedEdge["time-http", "attoparsec"], DirectedEdge["time-http", "base"], DirectedEdge["time-http", "base-unicode-symbols"], DirectedEdge["time-http", "blaze-builder"], DirectedEdge["time-http", "blaze-textual"], DirectedEdge["time-http", "bytestring"], DirectedEdge["time-http", "convertible-text"], DirectedEdge["time-http", "data-default"], DirectedEdge["time-http", "failure"], DirectedEdge["time-http", "tagged"], DirectedEdge["time-http", "time"], DirectedEdge["time-interval", "base"], DirectedEdge["time-interval", "time-units"], DirectedEdge["time-io-access", "base"], DirectedEdge["time-io-access", "base-io-access"], DirectedEdge["time-io-access", "time"], DirectedEdge["time-lens", "base"], DirectedEdge["time-lens", "data-lens-light"], DirectedEdge["time-lens", "time"], DirectedEdge["time-locale-compat", "base"], DirectedEdge["time-locale-compat", "old-locale"], DirectedEdge["time-locale-compat", "time"], DirectedEdge["time-out", "base"], DirectedEdge["time-out", "data-default-class"], DirectedEdge["time-out", "exceptions"], DirectedEdge["time-out", "time-interval"], DirectedEdge["time-out", "time-units"], DirectedEdge["time-out", "transformers"], DirectedEdge["time-parsers", "base"], DirectedEdge["time-parsers", "parsers"], DirectedEdge["time-parsers", "template-haskell"], DirectedEdge["time-parsers", "time"], DirectedEdge["time-patterns", "base"], DirectedEdge["time-patterns", "intervals"], DirectedEdge["time-patterns", "lens"], DirectedEdge["time-patterns", "thyme"], DirectedEdge["time-patterns", "vector-space"], DirectedEdge["time-qq", "base"], DirectedEdge["time-qq", "template-haskell"], DirectedEdge["time-qq", "time"], DirectedEdge["time-qq", "time-locale-compat"], DirectedEdge["time-recurrence", "base"], DirectedEdge["time-recurrence", "data-ordlist"], DirectedEdge["time-recurrence", "mtl"], DirectedEdge["time-recurrence", "time"], DirectedEdge["time-series", "array"], DirectedEdge["time-series", "base"], DirectedEdge["time-series", "containers"], DirectedEdge["time-series", "mtl"], DirectedEdge["time-series", "time-series"], DirectedEdge["time-units", "base"], DirectedEdge["time-w3c", "base"], DirectedEdge["time-w3c", "convertible"], DirectedEdge["time-w3c", "HUnit"], DirectedEdge["time-w3c", "parsec"], DirectedEdge["time-w3c", "time"], DirectedEdge["timecalc", "base"], DirectedEdge["timecalc", "haskeline"], DirectedEdge["timecalc", "uu-parsinglib"], DirectedEdge["timeconsole", "base"], DirectedEdge["timeconsole", "process"], DirectedEdge["timeconsole", "time"], DirectedEdge["timeit", "base"], DirectedEdge["timeless", "ansi-terminal"], DirectedEdge["timeless", "base"], DirectedEdge["timeless", "linear"], DirectedEdge["timeless", "time"], DirectedEdge["timeless", "transformers"], DirectedEdge["timelike", "base"], DirectedEdge["timelike", "transformers"], DirectedEdge["timelike-clock", "base"], DirectedEdge["timelike-clock", "clock"], DirectedEdge["timelike-clock", "timelike"], DirectedEdge["timelike-clock", "transformers"], DirectedEdge["timelike-time", "base"], DirectedEdge["timelike-time", "time"], DirectedEdge["timelike-time", "timelike"], DirectedEdge["timelike-time", "transformers"], DirectedEdge["timemap", "base"], DirectedEdge["timemap", "containers"], DirectedEdge["timemap", "focus"], DirectedEdge["timemap", "hashable"], DirectedEdge["timemap", "list-t"], DirectedEdge["timemap", "stm"], DirectedEdge["timemap", "stm-containers"], DirectedEdge["timemap", "time"], DirectedEdge["timemap", "unordered-containers"], DirectedEdge["timeout", "base"], DirectedEdge["timeout", "exceptions"], DirectedEdge["timeout", "mtl"], DirectedEdge["timeout", "time"], DirectedEdge["timeout-control", "base"], DirectedEdge["timeout-control", "ghc-prim"], DirectedEdge["timeout-control", "lifted-base"], DirectedEdge["timeout-control", "monad-control"], DirectedEdge["timeout-control", "mtl"], DirectedEdge["timeout-control", "transformers-base"], DirectedEdge["timeout-with-results", "base"], DirectedEdge["timeout-with-results", "deepseq"], DirectedEdge["timeout-with-results", "mtl"], DirectedEdge["timeout-with-results", "parallel"], DirectedEdge["timeparsers", "attoparsec"], DirectedEdge["timeparsers", "base"], DirectedEdge["timeparsers", "bytestring"], DirectedEdge["timeparsers", "containers"], DirectedEdge["timeparsers", "convertible"], DirectedEdge["timeparsers", "mtl"], DirectedEdge["timeparsers", "time"], DirectedEdge["timeplot", "base"], DirectedEdge["timeplot", "bytestring"], DirectedEdge["timeplot", "bytestring-lexing"], DirectedEdge["timeplot", "cairo"], DirectedEdge["timeplot", "Chart"], DirectedEdge["timeplot", "Chart-cairo"], DirectedEdge["timeplot", "colour"], DirectedEdge["timeplot", "containers"], DirectedEdge["timeplot", "data-default"], DirectedEdge["timeplot", "lens"], DirectedEdge["timeplot", "regex-tdfa"], DirectedEdge["timeplot", "strptime"], DirectedEdge["timeplot", "template-haskell"], DirectedEdge["timeplot", "time"], DirectedEdge["timeplot", "transformers"], DirectedEdge["timeplot", "vcs-revision"], DirectedEdge["timerep", "attoparsec"], DirectedEdge["timerep", "base"], DirectedEdge["timerep", "monoid-subclasses"], DirectedEdge["timerep", "text"], DirectedEdge["timerep", "time"], DirectedEdge["timers", "base"], DirectedEdge["timers", "lifted-base"], DirectedEdge["timers", "monad-control"], DirectedEdge["timers", "suspend"], DirectedEdge["timers", "transformers-base"], DirectedEdge["timers-updatable", "base"], DirectedEdge["timers-updatable", "stm"], DirectedEdge["timestamp-subprocess-lines", "base"], DirectedEdge["timestamp-subprocess-lines", "bytestring"], DirectedEdge["timestamp-subprocess-lines", "old-locale"], DirectedEdge["timestamp-subprocess-lines", "process"], DirectedEdge["timestamp-subprocess-lines", "split"], DirectedEdge["timestamp-subprocess-lines", "time"], DirectedEdge["timestamp-subprocess-lines", "transformers"], DirectedEdge["timestamper", "base"], DirectedEdge["timestamper", "old-locale"], DirectedEdge["timestamper", "time"], DirectedEdge["timezone-olson", "base"], DirectedEdge["timezone-olson", "binary"], DirectedEdge["timezone-olson", "bytestring"], DirectedEdge["timezone-olson", "extensible-exceptions"], DirectedEdge["timezone-olson", "time"], DirectedEdge["timezone-olson", "timezone-series"], DirectedEdge["timezone-olson-th", "base"], DirectedEdge["timezone-olson-th", "template-haskell"], DirectedEdge["timezone-olson-th", "time"], DirectedEdge["timezone-olson-th", "timezone-olson"], DirectedEdge["timezone-olson-th", "timezone-series"], DirectedEdge["timezone-series", "base"], DirectedEdge["timezone-series", "time"], DirectedEdge["timing-convenience", "base"], DirectedEdge["timing-convenience", "time"], DirectedEdge["tinyMesh", "attoparsec"], DirectedEdge["tinyMesh", "base"], DirectedEdge["tinyMesh", "bytestring"], DirectedEdge["tinyMesh", "hex"], DirectedEdge["tinyMesh", "serialport"], DirectedEdge["tinyMesh", "unix"], DirectedEdge["tinylog", "base"], DirectedEdge["tinylog", "bytestring"], DirectedEdge["tinylog", "containers"], DirectedEdge["tinylog", "double-conversion"], DirectedEdge["tinylog", "fast-logger"], DirectedEdge["tinylog", "text"], DirectedEdge["tinylog", "transformers"], DirectedEdge["tinylog", "unix-time"], DirectedEdge["tinytemplate", "base"], DirectedEdge["tinytemplate", "text"], DirectedEdge["tip-haskell-frontend", "base"], DirectedEdge["tip-haskell-frontend", "bytestring"], DirectedEdge["tip-haskell-frontend", "containers"], DirectedEdge["tip-haskell-frontend", "directory"], DirectedEdge["tip-haskell-frontend", "filepath"], DirectedEdge["tip-haskell-frontend", "geniplate-mirror"], DirectedEdge["tip-haskell-frontend", "ghc"], DirectedEdge["tip-haskell-frontend", "ghc-paths"], DirectedEdge["tip-haskell-frontend", "ghc-simple"], DirectedEdge["tip-haskell-frontend", "mtl"], DirectedEdge["tip-haskell-frontend", "optparse-applicative"], DirectedEdge["tip-haskell-frontend", "pretty"], DirectedEdge["tip-haskell-frontend", "pretty-show"], DirectedEdge["tip-haskell-frontend", "QuickCheck"], DirectedEdge["tip-haskell-frontend", "split"], DirectedEdge["tip-haskell-frontend", "tip-haskell-frontend"], DirectedEdge["tip-haskell-frontend", "tip-lib"], DirectedEdge["tip-lib", "array"], DirectedEdge["tip-lib", "base"], DirectedEdge["tip-lib", "containers"], DirectedEdge["tip-lib", "filepath"], DirectedEdge["tip-lib", "genifunctors"], DirectedEdge["tip-lib", "geniplate-mirror"], DirectedEdge["tip-lib", "mtl"], DirectedEdge["tip-lib", "optparse-applicative"], DirectedEdge["tip-lib", "pretty"], DirectedEdge["tip-lib", "split"], DirectedEdge["tip-lib", "structural-induction"], DirectedEdge["tip-lib", "tip-lib"], DirectedEdge["tiphys", "aeson"], DirectedEdge["tiphys", "attoparsec"], DirectedEdge["tiphys", "base"], DirectedEdge["tiphys", "errors"], DirectedEdge["tiphys", "text"], DirectedEdge["tiphys", "unordered-containers"], DirectedEdge["tiphys", "vector"], DirectedEdge["titlecase", "base"], DirectedEdge["titlecase", "blaze-markup"], DirectedEdge["titlecase", "semigroups"], DirectedEdge["titlecase", "text"], DirectedEdge["titlecase", "titlecase"], DirectedEdge["tkhs", "base"], DirectedEdge["tkhs", "mtl"], DirectedEdge["tkhs", "parsec"], DirectedEdge["tkhs", "pretty"], DirectedEdge["tkhs", "utf8-string"], DirectedEdge["tkhs", "vty"], DirectedEdge["tkyprof", "aeson"], DirectedEdge["tkyprof", "attoparsec"], DirectedEdge["tkyprof", "base"], DirectedEdge["tkyprof", "blaze-builder"], DirectedEdge["tkyprof", "bytestring"], DirectedEdge["tkyprof", "cmdargs"], DirectedEdge["tkyprof", "conduit"], DirectedEdge["tkyprof", "conduit-extra"], DirectedEdge["tkyprof", "containers"], DirectedEdge["tkyprof", "data-default"], DirectedEdge["tkyprof", "directory"], DirectedEdge["tkyprof", "exceptions"], DirectedEdge["tkyprof", "filepath"], DirectedEdge["tkyprof", "http-types"], DirectedEdge["tkyprof", "mtl"], DirectedEdge["tkyprof", "resourcet"], DirectedEdge["tkyprof", "rosezipper"], DirectedEdge["tkyprof", "shakespeare"], DirectedEdge["tkyprof", "stm"], DirectedEdge["tkyprof", "template-haskell"], DirectedEdge["tkyprof", "text"], DirectedEdge["tkyprof", "time"], DirectedEdge["tkyprof", "transformers"], DirectedEdge["tkyprof", "unordered-containers"], DirectedEdge["tkyprof", "vector"], DirectedEdge["tkyprof", "wai"], DirectedEdge["tkyprof", "wai-extra"], DirectedEdge["tkyprof", "warp"], DirectedEdge["tkyprof", "web-routes"], DirectedEdge["tkyprof", "yesod"], DirectedEdge["tkyprof", "yesod-core"], DirectedEdge["tkyprof", "yesod-form"], DirectedEdge["tkyprof", "yesod-static"], DirectedEdge["tld", "base"], DirectedEdge["tld", "containers"], DirectedEdge["tld", "network-uri"], DirectedEdge["tld", "text"], DirectedEdge["tls", "asn1-encoding"], DirectedEdge["tls", "asn1-types"], DirectedEdge["tls", "async"], DirectedEdge["tls", "base"], DirectedEdge["tls", "bytestring"], DirectedEdge["tls", "cereal"], DirectedEdge["tls", "cryptonite"], DirectedEdge["tls", "data-default-class"], DirectedEdge["tls", "hans"], DirectedEdge["tls", "memory"], DirectedEdge["tls", "mtl"], DirectedEdge["tls", "network"], DirectedEdge["tls", "transformers"], DirectedEdge["tls", "x509-store"], DirectedEdge["tls", "x509-validation"], DirectedEdge["tls-debug", "base"], DirectedEdge["tls-debug", "bytestring"], DirectedEdge["tls-debug", "cryptonite"], DirectedEdge["tls-debug", "data-default-class"], DirectedEdge["tls-debug", "network"], DirectedEdge["tls-debug", "pem"], DirectedEdge["tls-debug", "time"], DirectedEdge["tls-debug", "tls"], DirectedEdge["tls-debug", "x509-store"], DirectedEdge["tls-debug", "x509-system"], DirectedEdge["tls-debug", "x509-validation"], DirectedEdge["tls-extra", "tls"], DirectedEdge["tls-extra", "base"], DirectedEdge["tls-extra", "bytestring"], DirectedEdge["tls-extra", "certificate"], DirectedEdge["tls-extra", "cipher-aes"], DirectedEdge["tls-extra", "cprng-aes"], DirectedEdge["tls-extra", "crypto-pubkey"], DirectedEdge["tls-extra", "crypto-random"], DirectedEdge["tls-extra", "cryptohash"], DirectedEdge["tls-extra", "HUnit"], DirectedEdge["tls-extra", "mtl"], DirectedEdge["tls-extra", "network"], DirectedEdge["tls-extra", "pem"], DirectedEdge["tls-extra", "QuickCheck"], DirectedEdge["tls-extra", "time"], DirectedEdge["tls-extra", "tls"], DirectedEdge["tls-extra", "vector"], DirectedEdge["tmpl", "base"], DirectedEdge["tmpl", "bytestring"], DirectedEdge["tmpl", "directory"], DirectedEdge["tmpl", "template"], DirectedEdge["tmpl", "text"], DirectedEdge["tn", "aeson"], DirectedEdge["tn", "base"], DirectedEdge["tn", "bytestring"], DirectedEdge["tn", "directory"], DirectedEdge["tn", "file-embed"], DirectedEdge["tn", "optparse-applicative"], DirectedEdge["tn", "optparse-helper"], DirectedEdge["tn", "optparse-simple"], DirectedEdge["tn", "pager"], DirectedEdge["tn", "text"], DirectedEdge["tn", "time"], DirectedEdge["tn", "tn"], DirectedEdge["tn", "vector"], DirectedEdge["tn", "yaml"], DirectedEdge["tnet", "attoparsec"], DirectedEdge["tnet", "base"], DirectedEdge["tnet", "bytestring"], DirectedEdge["tnet", "utf8-string"], DirectedEdge["to-haskell", "base"], DirectedEdge["to-haskell", "containers"], DirectedEdge["to-haskell", "haskell-src-exts"], DirectedEdge["to-haskell", "transformers"], DirectedEdge["to-string-class", "base"], DirectedEdge["to-string-instances", "bytestring"], DirectedEdge["to-string-instances", "pretty"], DirectedEdge["to-string-instances", "text"], DirectedEdge["to-string-instances", "to-string-class"], DirectedEdge["todos", "ansi-terminal"], DirectedEdge["todos", "base"], DirectedEdge["todos", "base-unicode-symbols"], DirectedEdge["todos", "containers"], DirectedEdge["todos", "data-hash"], DirectedEdge["todos", "dates"], DirectedEdge["todos", "directory"], DirectedEdge["todos", "dyre"], DirectedEdge["todos", "filepath"], DirectedEdge["todos", "Glob"], DirectedEdge["todos", "hscurses"], DirectedEdge["todos", "mtl"], DirectedEdge["todos", "parsec"], DirectedEdge["todos", "process"], DirectedEdge["todos", "regex-pcre"], DirectedEdge["todos", "setlocale"], DirectedEdge["todos", "syb"], DirectedEdge["todos", "time"], DirectedEdge["todos", "utf8-string"], DirectedEdge["tofromxml", "array"], DirectedEdge["tofromxml", "base"], DirectedEdge["tofromxml", "bytestring"], DirectedEdge["tofromxml", "containers"], DirectedEdge["tofromxml", "hexpat"], DirectedEdge["tofromxml", "hexpat-pickle"], DirectedEdge["toilet", "base"], DirectedEdge["toilet", "containers"], DirectedEdge["toilet", "old-locale"], DirectedEdge["toilet", "strict"], DirectedEdge["toilet", "time"], DirectedEdge["toilet", "transformers"], DirectedEdge["toilet", "utility-ht"], DirectedEdge["token-bucket", "base"], DirectedEdge["tokenify", "base"], DirectedEdge["tokenify", "containers"], DirectedEdge["tokenify", "text"], DirectedEdge["tokenize", "base"], DirectedEdge["tokenize", "split"], DirectedEdge["tokenize", "text"], DirectedEdge["toktok", "base"], DirectedEdge["toktok", "bytestring"], DirectedEdge["toktok", "containers"], DirectedEdge["toktok", "criterion"], DirectedEdge["toktok", "filepath"], DirectedEdge["toktok", "gf"], DirectedEdge["toktok", "HUnit"], DirectedEdge["toktok", "iconv"], DirectedEdge["toktok", "progression"], DirectedEdge["toktok", "QuickCheck"], DirectedEdge["tokyocabinet-haskell", "base"], DirectedEdge["tokyocabinet-haskell", "bytestring"], DirectedEdge["tokyocabinet-haskell", "mtl"], DirectedEdge["tokyotyrant-haskell", "base"], DirectedEdge["tokyotyrant-haskell", "bytestring"], DirectedEdge["tokyotyrant-haskell", "mtl"], DirectedEdge["tomato-rubato-openal", "base"], DirectedEdge["tomato-rubato-openal", "OpenAL"], DirectedEdge["tomato-rubato-openal", "stm"], DirectedEdge["tomato-rubato-openal", "vector"], DirectedEdge["toml", "attoparsec"], DirectedEdge["toml", "base"], DirectedEdge["toml", "bytestring"], DirectedEdge["toml", "containers"], DirectedEdge["toml", "old-locale"], DirectedEdge["toml", "time"], DirectedEdge["toolshed", "array"], DirectedEdge["toolshed", "base"], DirectedEdge["toolshed", "containers"], DirectedEdge["toolshed", "deepseq"], DirectedEdge["toolshed", "directory"], DirectedEdge["toolshed", "filepath"], DirectedEdge["toolshed", "QuickCheck"], DirectedEdge["toolshed", "random"], DirectedEdge["topkata", "ALUT"], DirectedEdge["topkata", "array"], DirectedEdge["topkata", "base"], DirectedEdge["topkata", "cairo"], DirectedEdge["topkata", "filepath"], DirectedEdge["topkata", "FTGL"], DirectedEdge["topkata", "GLFW-b"], DirectedEdge["topkata", "OpenAL"], DirectedEdge["topkata", "OpenGL"], DirectedEdge["topkata", "parseargs"], DirectedEdge["topkata", "random"], DirectedEdge["torch", "base"], DirectedEdge["torch", "mtl"], DirectedEdge["torch", "parallel"], DirectedEdge["torch", "QuickCheck"], DirectedEdge["torrent", "base"], DirectedEdge["torrent", "bencode"], DirectedEdge["torrent", "binary"], DirectedEdge["torrent", "bytestring"], DirectedEdge["torrent", "containers"], DirectedEdge["torrent", "filepath"], DirectedEdge["torrent", "syb"], DirectedEdge["tostring", "base"], DirectedEdge["tostring", "case-insensitive"], DirectedEdge["tostring", "text"], DirectedEdge["tostring", "utf8-string"], DirectedEdge["total", "base"], DirectedEdge["total", "void"], DirectedEdge["total-alternative", "base"], DirectedEdge["total-map", "base"], DirectedEdge["total-map", "containers"], DirectedEdge["total-maps", "adjunctions"], DirectedEdge["total-maps", "base"], DirectedEdge["total-maps", "base-compat"], DirectedEdge["total-maps", "bytes"], DirectedEdge["total-maps", "containers"], DirectedEdge["total-maps", "distributive"], DirectedEdge["total-maps", "keys"], DirectedEdge["total-maps", "linear"], DirectedEdge["total-maps", "reflection"], DirectedEdge["total-maps", "semigroups"], DirectedEdge["total-maps", "vector"], DirectedEdge["touched", "base"], DirectedEdge["touched", "cmdargs"], DirectedEdge["touched", "directory"], DirectedEdge["touched", "process"], DirectedEdge["touched", "time"], DirectedEdge["touched", "touched"], DirectedEdge["toysolver", "array"], DirectedEdge["toysolver", "base"], DirectedEdge["toysolver", "bytestring"], DirectedEdge["toysolver", "bytestring-builder"], DirectedEdge["toysolver", "containers"], DirectedEdge["toysolver", "data-default-class"], DirectedEdge["toysolver", "data-interval"], DirectedEdge["toysolver", "deepseq"], DirectedEdge["toysolver", "exceptions"], DirectedEdge["toysolver", "extended-reals"], DirectedEdge["toysolver", "filepath"], DirectedEdge["toysolver", "finite-field"], DirectedEdge["toysolver", "ghc-prim"], DirectedEdge["toysolver", "hashable"], DirectedEdge["toysolver", "haskeline"], DirectedEdge["toysolver", "heaps"], DirectedEdge["toysolver", "intern"], DirectedEdge["toysolver", "loop"], DirectedEdge["toysolver", "MemoTrie"], DirectedEdge["toysolver", "mtl"], DirectedEdge["toysolver", "multiset"], DirectedEdge["toysolver", "mwc-random"], DirectedEdge["toysolver", "old-locale"], DirectedEdge["toysolver", "OptDir"], DirectedEdge["toysolver", "parse-dimacs"], DirectedEdge["toysolver", "parsec"], DirectedEdge["toysolver", "prettyclass"], DirectedEdge["toysolver", "primes"], DirectedEdge["toysolver", "process"], DirectedEdge["toysolver", "pseudo-boolean"], DirectedEdge["toysolver", "queue"], DirectedEdge["toysolver", "semigroups"], DirectedEdge["toysolver", "sign"], DirectedEdge["toysolver", "split"], DirectedEdge["toysolver", "stm"], DirectedEdge["toysolver", "template-haskell"], DirectedEdge["toysolver", "temporary"], DirectedEdge["toysolver", "time"], DirectedEdge["toysolver", "toysolver"], DirectedEdge["toysolver", "transformers"], DirectedEdge["toysolver", "transformers-compat"], DirectedEdge["toysolver", "type-level-numbers"], DirectedEdge["toysolver", "unbounded-delays"], DirectedEdge["toysolver", "unordered-containers"], DirectedEdge["toysolver", "vector"], DirectedEdge["toysolver", "vector-space"], DirectedEdge["tpdb", "base"], DirectedEdge["tpdb", "containers"], DirectedEdge["tpdb", "filepath"], DirectedEdge["tpdb", "hashable"], DirectedEdge["tpdb", "HaXml"], DirectedEdge["tpdb", "hxt"], DirectedEdge["tpdb", "mtl"], DirectedEdge["tpdb", "parsec"], DirectedEdge["tpdb", "text"], DirectedEdge["tpdb", "time"], DirectedEdge["tpdb", "wl-pprint-text"], DirectedEdge["trace", "base"], DirectedEdge["trace", "containers"], DirectedEdge["trace", "deepseq"], DirectedEdge["trace", "monad-control"], DirectedEdge["trace", "mtl"], DirectedEdge["trace", "transformers"], DirectedEdge["trace", "transformers-base"], DirectedEdge["trace-call", "base"], DirectedEdge["trace-call", "containers"], DirectedEdge["trace-call", "mtl"], DirectedEdge["trace-function-call", "base"], DirectedEdge["traced", "base"], DirectedEdge["traced", "containers"], DirectedEdge["traced", "mtl"], DirectedEdge["traced", "pretty"], DirectedEdge["tracer", "base"], DirectedEdge["tracer", "mtl"], DirectedEdge["tracer", "transformers"], DirectedEdge["tracetree", "base"], DirectedEdge["tracetree", "bifunctors"], DirectedEdge["tracetree", "colour"], DirectedEdge["tracetree", "containers"], DirectedEdge["tracetree", "diagrams-cairo"], DirectedEdge["tracetree", "diagrams-contrib"], DirectedEdge["tracetree", "diagrams-lib"], DirectedEdge["tracetree", "json"], DirectedEdge["tracetree", "mtl"], DirectedEdge["tracetree", "optparse-applicative"], DirectedEdge["tracetree", "parsec"], DirectedEdge["tracetree", "regex-posix"], DirectedEdge["tracetree", "SVGFonts"], DirectedEdge["tracetree", "tracetree"], DirectedEdge["tracetree", "transformers"], DirectedEdge["tracker", "base"], DirectedEdge["tracker", "containers"], DirectedEdge["tracker", "glib"], DirectedEdge["tracy", "base"], DirectedEdge["traildb", "base"], DirectedEdge["traildb", "bytestring"], DirectedEdge["traildb", "containers"], DirectedEdge["traildb", "directory"], DirectedEdge["traildb", "exceptions"], DirectedEdge["traildb", "lens"], DirectedEdge["traildb", "primitive"], DirectedEdge["traildb", "text"], DirectedEdge["traildb", "time"], DirectedEdge["traildb", "transformers"], DirectedEdge["traildb", "unix"], DirectedEdge["traildb", "vector"], DirectedEdge["trajectory", "aeson"], DirectedEdge["trajectory", "attoparsec"], DirectedEdge["trajectory", "base"], DirectedEdge["trajectory", "bytestring"], DirectedEdge["trajectory", "cmdargs"], DirectedEdge["trajectory", "containers"], DirectedEdge["trajectory", "http-enumerator"], DirectedEdge["trajectory", "http-types"], DirectedEdge["trajectory", "regexpr"], DirectedEdge["trajectory", "text"], DirectedEdge["trajectory", "unordered-containers"], DirectedEdge["trajectory", "uri"], DirectedEdge["transactional-events", "base"], DirectedEdge["transactional-events", "ListZipper"], DirectedEdge["transactional-events", "MonadPrompt"], DirectedEdge["transactional-events", "stm"], DirectedEdge["transf", "async"], DirectedEdge["transf", "base"], DirectedEdge["transf", "containers"], DirectedEdge["transf", "data-default"], DirectedEdge["transf", "filepath"], DirectedEdge["transf", "hashable"], DirectedEdge["transf", "hint"], DirectedEdge["transf", "monadplus"], DirectedEdge["transf", "mtl"], DirectedEdge["transf", "process"], DirectedEdge["transf", "semigroups"], DirectedEdge["transformations", "base"], DirectedEdge["transformations", "containers"], DirectedEdge["transformations", "criterion"], DirectedEdge["transformations", "mtl"], DirectedEdge["transformations", "multirec"], DirectedEdge["transformations", "parsec"], DirectedEdge["transformations", "QuickCheck"], DirectedEdge["transformations", "regular"], DirectedEdge["transformations", "template-haskell"], DirectedEdge["transformers", "base"], DirectedEdge["transformers", "ghc-prim"], DirectedEdge["transformers-abort", "base"], DirectedEdge["transformers-abort", "data-default-class"], DirectedEdge["transformers-abort", "monad-control"], DirectedEdge["transformers-abort", "pointed"], DirectedEdge["transformers-abort", "semigroupoids"], DirectedEdge["transformers-abort", "transformers"], DirectedEdge["transformers-abort", "transformers-base"], DirectedEdge["transformers-base", "base"], DirectedEdge["transformers-base", "stm"], DirectedEdge["transformers-base", "transformers"], DirectedEdge["transformers-base", "transformers-compat"], DirectedEdge["transformers-compat", "base"], DirectedEdge["transformers-compat", "ghc-prim"], DirectedEdge["transformers-compat", "transformers"], DirectedEdge["transformers-compose", "base"], DirectedEdge["transformers-compose", "transformers"], DirectedEdge["transformers-convert", "base"], DirectedEdge["transformers-convert", "data-easy"], DirectedEdge["transformers-convert", "either"], DirectedEdge["transformers-convert", "transformers"], DirectedEdge["transformers-eff", "base"], DirectedEdge["transformers-eff", "free"], DirectedEdge["transformers-eff", "mmorph"], DirectedEdge["transformers-eff", "pipes"], DirectedEdge["transformers-eff", "transformers"], DirectedEdge["transformers-free", "free"], DirectedEdge["transformers-free", "base"], DirectedEdge["transformers-free", "transformers"], DirectedEdge["transformers-lift", "base"], DirectedEdge["transformers-lift", "transformers"], DirectedEdge["transformers-runnable", "base"], DirectedEdge["transformers-runnable", "transformers"], DirectedEdge["transformers-supply", "base"], DirectedEdge["transformers-supply", "mtl"], DirectedEdge["transformers-supply", "transformers"], DirectedEdge["transient", "base"], DirectedEdge["transient", "containers"], DirectedEdge["transient", "mtl"], DirectedEdge["transient", "stm"], DirectedEdge["transient", "time"], DirectedEdge["transient", "transformers"], DirectedEdge["transient-universe", "base"], DirectedEdge["transient-universe", "bytestring"], DirectedEdge["transient-universe", "case-insensitive"], DirectedEdge["transient-universe", "containers"], DirectedEdge["transient-universe", "directory"], DirectedEdge["transient-universe", "filepath"], DirectedEdge["transient-universe", "ghcjs-base"], DirectedEdge["transient-universe", "ghcjs-prim"], DirectedEdge["transient-universe", "hashable"], DirectedEdge["transient-universe", "HTTP"], DirectedEdge["transient-universe", "mtl"], DirectedEdge["transient-universe", "network"], DirectedEdge["transient-universe", "network-info"], DirectedEdge["transient-universe", "network-uri"], DirectedEdge["transient-universe", "process"], DirectedEdge["transient-universe", "random"], DirectedEdge["transient-universe", "stm"], DirectedEdge["transient-universe", "TCache"], DirectedEdge["transient-universe", "text"], DirectedEdge["transient-universe", "time"], DirectedEdge["transient-universe", "transformers"], DirectedEdge["transient-universe", "transient"], DirectedEdge["transient-universe", "vector"], DirectedEdge["transient-universe", "websockets"], DirectedEdge["translatable-intset", "base"], DirectedEdge["translatable-intset", "fingertree"], DirectedEdge["translate", "base"], DirectedEdge["translate", "curl"], DirectedEdge["translate", "json"], DirectedEdge["translate", "network"], DirectedEdge["translate", "utf8-string"], DirectedEdge["traverse-with-class", "base"], DirectedEdge["traverse-with-class", "template-haskell"], DirectedEdge["traverse-with-class", "transformers"], DirectedEdge["travis", "aeson"], DirectedEdge["travis", "base"], DirectedEdge["travis", "bytestring"], DirectedEdge["travis", "http-conduit"], DirectedEdge["travis", "transformers"], DirectedEdge["travis-meta-yaml", "aeson"], DirectedEdge["travis-meta-yaml", "base"], DirectedEdge["travis-meta-yaml", "bytestring"], DirectedEdge["travis-meta-yaml", "file-embed"], DirectedEdge["travis-meta-yaml", "lens"], DirectedEdge["travis-meta-yaml", "lens-aeson"], DirectedEdge["travis-meta-yaml", "optparse-applicative"], DirectedEdge["travis-meta-yaml", "regex-applicative"], DirectedEdge["travis-meta-yaml", "text"], DirectedEdge["travis-meta-yaml", "travis-meta-yaml"], DirectedEdge["travis-meta-yaml", "unordered-containers"], DirectedEdge["travis-meta-yaml", "yaml"], DirectedEdge["trawl", "base"], DirectedEdge["trawl", "Cabal"], DirectedEdge["trawl", "directory"], DirectedEdge["trawl", "filepath"], DirectedEdge["trawl", "MissingH"], DirectedEdge["trawl", "optparse-applicative"], DirectedEdge["trawl", "process"], DirectedEdge["trawl", "split"], DirectedEdge["traypoweroff", "base"], DirectedEdge["traypoweroff", "gtk"], DirectedEdge["traypoweroff", "process"], DirectedEdge["tree-fun", "base"], DirectedEdge["tree-fun", "containers"], DirectedEdge["tree-fun", "mtl"], DirectedEdge["tree-monad", "base"], DirectedEdge["tree-view", "base"], DirectedEdge["tree-view", "containers"], DirectedEdge["tree-view", "mtl"], DirectedEdge["treemap-html", "base"], DirectedEdge["treemap-html", "Cabal"], DirectedEdge["treemap-html", "containers"], DirectedEdge["treemap-html", "filepath"], DirectedEdge["treemap-html", "ghc"], DirectedEdge["treemap-html", "html"], DirectedEdge["treemap-html", "parsec"], DirectedEdge["treemap-html", "regex-posix"], DirectedEdge["treemap-html-tools", "base"], DirectedEdge["treemap-html-tools", "Cabal"], DirectedEdge["treemap-html-tools", "containers"], DirectedEdge["treemap-html-tools", "directory"], DirectedEdge["treemap-html-tools", "filepath"], DirectedEdge["treemap-html-tools", "ghc"], DirectedEdge["treemap-html-tools", "parsec"], DirectedEdge["treemap-html-tools", "regex-posix"], DirectedEdge["treemap-html-tools", "split"], DirectedEdge["treemap-html-tools", "treemap-html"], DirectedEdge["treemap-html-tools", "xml"], DirectedEdge["treersec", "base"], DirectedEdge["treersec", "haste-compiler"], DirectedEdge["treersec", "haste-lib"], DirectedEdge["treersec", "sneathlane-haste"], DirectedEdge["treeviz", "base"], DirectedEdge["treeviz", "containers"], DirectedEdge["treeviz", "mtl"], DirectedEdge["treeviz", "QuickCheck"], DirectedEdge["treeviz", "random"], DirectedEdge["tremulous-query", "attoparsec"], DirectedEdge["tremulous-query", "base"], DirectedEdge["tremulous-query", "bytestring"], DirectedEdge["tremulous-query", "containers"], DirectedEdge["tremulous-query", "deepseq"], DirectedEdge["tremulous-query", "mtl"], DirectedEdge["tremulous-query", "network"], DirectedEdge["trhsx", "hsx"], DirectedEdge["triangulation", "array"], DirectedEdge["triangulation", "base"], DirectedEdge["triangulation", "collada-types"], DirectedEdge["triangulation", "tuple"], DirectedEdge["triangulation", "vector"], DirectedEdge["triangulation", "vector-algorithms"], DirectedEdge["tries", "base"], DirectedEdge["tries", "bytestring"], DirectedEdge["tries", "bytestring-trie"], DirectedEdge["tries", "composition"], DirectedEdge["tries", "composition-extra"], DirectedEdge["tries", "containers"], DirectedEdge["tries", "deepseq"], DirectedEdge["tries", "hashable"], DirectedEdge["tries", "keys"], DirectedEdge["tries", "QuickCheck"], DirectedEdge["tries", "quickcheck-instances"], DirectedEdge["tries", "rose-trees"], DirectedEdge["tries", "semigroups"], DirectedEdge["tries", "sets"], DirectedEdge["tries", "unordered-containers"], DirectedEdge["trifecta", "ansi-terminal"], DirectedEdge["trifecta", "ansi-wl-pprint"], DirectedEdge["trifecta", "array"], DirectedEdge["trifecta", "base"], DirectedEdge["trifecta", "blaze-builder"], DirectedEdge["trifecta", "blaze-html"], DirectedEdge["trifecta", "blaze-markup"], DirectedEdge["trifecta", "bytestring"], DirectedEdge["trifecta", "charset"], DirectedEdge["trifecta", "comonad"], DirectedEdge["trifecta", "containers"], DirectedEdge["trifecta", "deepseq"], DirectedEdge["trifecta", "fingertree"], DirectedEdge["trifecta", "ghc-prim"], DirectedEdge["trifecta", "hashable"], DirectedEdge["trifecta", "lens"], DirectedEdge["trifecta", "mtl"], DirectedEdge["trifecta", "parsers"], DirectedEdge["trifecta", "profunctors"], DirectedEdge["trifecta", "reducers"], DirectedEdge["trifecta", "semigroups"], DirectedEdge["trifecta", "transformers"], DirectedEdge["trifecta", "unordered-containers"], DirectedEdge["trifecta", "utf8-string"], DirectedEdge["trimpolya", "base"], DirectedEdge["trimpolya", "bio"], DirectedEdge["trimpolya", "bytestring"], DirectedEdge["trimpolya", "simpleargs"], DirectedEdge["tripLL", "base"], DirectedEdge["tripLL", "bytestring"], DirectedEdge["tripLL", "cereal"], DirectedEdge["tripLL", "filepath"], DirectedEdge["tripLL", "leveldb-haskell"], DirectedEdge["trivia", "base"], DirectedEdge["trivia", "comonad"], DirectedEdge["trivia", "distributive"], DirectedEdge["trivial-constraint", "base"], DirectedEdge["tropical", "base"], DirectedEdge["tropical", "semiring-simple"], DirectedEdge["true-name", "base"], DirectedEdge["true-name", "template-haskell"], DirectedEdge["truelevel", "base"], DirectedEdge["truelevel", "containers"], DirectedEdge["truelevel", "parseargs"], DirectedEdge["truelevel", "WAVE"], DirectedEdge["trurl", "aeson"], DirectedEdge["trurl", "base"], DirectedEdge["trurl", "bytestring"], DirectedEdge["trurl", "directory"], DirectedEdge["trurl", "filemanip"], DirectedEdge["trurl", "filepath"], DirectedEdge["trurl", "hastache"], DirectedEdge["trurl", "hastache-aeson"], DirectedEdge["trurl", "http-conduit"], DirectedEdge["trurl", "MissingH"], DirectedEdge["trurl", "safe"], DirectedEdge["trurl", "split"], DirectedEdge["trurl", "tar"], DirectedEdge["trurl", "text"], DirectedEdge["trurl", "trurl"], DirectedEdge["trurl", "unordered-containers"], DirectedEdge["truthful", "base"], DirectedEdge["tsession", "base"], DirectedEdge["tsession", "containers"], DirectedEdge["tsession", "mtl"], DirectedEdge["tsession", "time"], DirectedEdge["tsession", "transformers"], DirectedEdge["tsession-happstack", "base"], DirectedEdge["tsession-happstack", "happstack-server"], DirectedEdge["tsession-happstack", "transformers"], DirectedEdge["tsession-happstack", "tsession"], DirectedEdge["tskiplist", "array"], DirectedEdge["tskiplist", "base"], DirectedEdge["tskiplist", "containers"], DirectedEdge["tskiplist", "random"], DirectedEdge["tskiplist", "stm"], DirectedEdge["tslib", "base"], DirectedEdge["tslib", "containers"], DirectedEdge["tslib", "hybrid-vectors"], DirectedEdge["tslib", "lens"], DirectedEdge["tslib", "statistics"], DirectedEdge["tslib", "time"], DirectedEdge["tslib", "vector"], DirectedEdge["tslogger", "async"], DirectedEdge["tslogger", "base"], DirectedEdge["tslogger", "containers"], DirectedEdge["tslogger", "random"], DirectedEdge["tsp-viz", "base"], DirectedEdge["tsp-viz", "gloss"], DirectedEdge["tsp-viz", "stm"], DirectedEdge["tsp-viz", "vector"], DirectedEdge["tsparse", "base"], DirectedEdge["tsparse", "Decimal"], DirectedEdge["tsparse", "parsec"], DirectedEdge["tsparse", "pretty"], DirectedEdge["tsparse", "process"], DirectedEdge["tsparse", "QuickCheck"], DirectedEdge["tsparse", "random"], DirectedEdge["tsparse", "split"], DirectedEdge["tsparse", "time"], DirectedEdge["tst", "base"], DirectedEdge["tsvsql", "attoparsec"], DirectedEdge["tsvsql", "base"], DirectedEdge["tsvsql", "bytestring"], DirectedEdge["tsvsql", "containers"], DirectedEdge["tsvsql", "optparse-applicative"], DirectedEdge["tsvsql", "string-qq"], DirectedEdge["tsvsql", "text"], DirectedEdge["tsvsql", "unordered-containers"], DirectedEdge["ttask", "base"], DirectedEdge["ttask", "directory"], DirectedEdge["ttask", "extra"], DirectedEdge["ttask", "optparse-declarative"], DirectedEdge["ttask", "safe"], DirectedEdge["ttask", "time"], DirectedEdge["ttask", "transformers"], DirectedEdge["ttask", "ttask"], DirectedEdge["ttrie", "atomic-primops"], DirectedEdge["ttrie", "base"], DirectedEdge["ttrie", "hashable"], DirectedEdge["ttrie", "primitive"], DirectedEdge["ttrie", "stm"], DirectedEdge["tttool", "aeson"], DirectedEdge["tttool", "base"], DirectedEdge["tttool", "binary"], DirectedEdge["tttool", "bytestring"], DirectedEdge["tttool", "bytestring-builder"], DirectedEdge["tttool", "containers"], DirectedEdge["tttool", "directory"], DirectedEdge["tttool", "executable-path"], DirectedEdge["tttool", "filepath"], DirectedEdge["tttool", "ghc-prim"], DirectedEdge["tttool", "hashable"], DirectedEdge["tttool", "haskeline"], DirectedEdge["tttool", "HPDF"], DirectedEdge["tttool", "JuicyPixels"], DirectedEdge["tttool", "mtl"], DirectedEdge["tttool", "old-locale"], DirectedEdge["tttool", "optparse-applicative"], DirectedEdge["tttool", "parsec"], DirectedEdge["tttool", "process"], DirectedEdge["tttool", "random"], DirectedEdge["tttool", "split"], DirectedEdge["tttool", "spool"], DirectedEdge["tttool", "template-haskell"], DirectedEdge["tttool", "time"], DirectedEdge["tttool", "vector"], DirectedEdge["tttool", "yaml"], DirectedEdge["tttool", "zlib"], DirectedEdge["tubes", "base"], DirectedEdge["tubes", "comonad"], DirectedEdge["tubes", "contravariant"], DirectedEdge["tubes", "free"], DirectedEdge["tubes", "mtl"], DirectedEdge["tubes", "profunctors"], DirectedEdge["tubes", "semigroups"], DirectedEdge["tubes", "transformers"], DirectedEdge["tuntap", "base"], DirectedEdge["tuntap", "bytestring"], DirectedEdge["tuntap", "unix"], DirectedEdge["tup-functor", "base"], DirectedEdge["tup-functor", "cpphs"], DirectedEdge["tup-functor", "haskell-src-exts"], DirectedEdge["tuple", "base"], DirectedEdge["tuple", "OneTuple"], DirectedEdge["tuple-gen", "base"], DirectedEdge["tuple-gen", "combinat"], DirectedEdge["tuple-generic", "base"], DirectedEdge["tuple-hlist", "base"], DirectedEdge["tuple-hlist", "HList"], DirectedEdge["tuple-hlist", "OneTuple"], DirectedEdge["tuple-lenses", "base"], DirectedEdge["tuple-lenses", "lens"], DirectedEdge["tuple-lenses", "template-haskell"], DirectedEdge["tuple-morph", "base"], DirectedEdge["tuple-morph", "HList"], DirectedEdge["tuple-morph", "template-haskell"], DirectedEdge["tuple-th", "base"], DirectedEdge["tuple-th", "containers"], DirectedEdge["tuple-th", "template-haskell"], DirectedEdge["tupleinstances", "base"], DirectedEdge["tupleinstances", "template-haskell"], DirectedEdge["tuples-homogenous-h98", "base"], DirectedEdge["turing", "base"], DirectedEdge["turing-music", "ALUT"], DirectedEdge["turing-music", "base"], DirectedEdge["turingMachine", "base"], DirectedEdge["turingMachine", "containers"], DirectedEdge["turkish-deasciifier", "base"], DirectedEdge["turkish-deasciifier", "containers"], DirectedEdge["turkish-deasciifier", "turkish-deasciifier"], DirectedEdge["turkish-deasciifier", "vector"], DirectedEdge["turni", "base"], DirectedEdge["turni", "containers"], DirectedEdge["turni", "MonadRandom"], DirectedEdge["turni", "random"], DirectedEdge["turtle", "async"], DirectedEdge["turtle", "base"], DirectedEdge["turtle", "clock"], DirectedEdge["turtle", "directory"], DirectedEdge["turtle", "foldl"], DirectedEdge["turtle", "hostname"], DirectedEdge["turtle", "managed"], DirectedEdge["turtle", "optional-args"], DirectedEdge["turtle", "optparse-applicative"], DirectedEdge["turtle", "process"], DirectedEdge["turtle", "stm"], DirectedEdge["turtle", "system-fileio"], DirectedEdge["turtle", "system-filepath"], DirectedEdge["turtle", "temporary"], DirectedEdge["turtle", "text"], DirectedEdge["turtle", "time"], DirectedEdge["turtle", "transformers"], DirectedEdge["turtle", "unix"], DirectedEdge["turtle-options", "base"], DirectedEdge["turtle-options", "optional-args"], DirectedEdge["turtle-options", "parsec"], DirectedEdge["turtle-options", "text"], DirectedEdge["turtle-options", "turtle"], DirectedEdge["turtle-options", "turtle-options"], DirectedEdge["tweak", "base"], DirectedEdge["tweak", "containers"], DirectedEdge["tweak", "lens"], DirectedEdge["tweak", "stm"], DirectedEdge["tweak", "transformers"], DirectedEdge["twee", "array"], DirectedEdge["twee", "base"], DirectedEdge["twee", "containers"], DirectedEdge["twee", "dlist"], DirectedEdge["twee", "ghc-prim"], DirectedEdge["twee", "heaps"], DirectedEdge["twee", "jukebox"], DirectedEdge["twee", "pretty"], DirectedEdge["twee", "primitive"], DirectedEdge["twee", "reflection"], DirectedEdge["twee", "split"], DirectedEdge["twee", "transformers"], DirectedEdge["twee", "twee"], DirectedEdge["twentefp", "base"], DirectedEdge["twentefp", "gloss"], DirectedEdge["twentefp", "parsec"], DirectedEdge["twentefp", "time"], DirectedEdge["twentefp-eventloop-graphics", "eventloop"], DirectedEdge["twentefp-eventloop-graphics", "base"], DirectedEdge["twentefp-eventloop-graphics", "network"], DirectedEdge["twentefp-eventloop-graphics", "text"], DirectedEdge["twentefp-eventloop-graphics", "twentefp-number"], DirectedEdge["twentefp-eventloop-graphics", "twentefp-websockets"], DirectedEdge["twentefp-eventloop-trees", "base"], DirectedEdge["twentefp-eventloop-trees", "eventloop"], DirectedEdge["twentefp-graphs", "base"], DirectedEdge["twentefp-graphs", "twentefp-eventloop-graphics"], DirectedEdge["twentefp-number", "base"], DirectedEdge["twentefp-number", "parsec"], DirectedEdge["twentefp-rosetree", "twentefp-trees"], DirectedEdge["twentefp-rosetree", "base"], DirectedEdge["twentefp-rosetree", "twentefp-eventloop-graphics"], DirectedEdge["twentefp-rosetree", "twentefp-number"], DirectedEdge["twentefp-trees", "twentefp-eventloop-trees"], DirectedEdge["twentefp-trees", "base"], DirectedEdge["twentefp-trees", "twentefp-eventloop-graphics"], DirectedEdge["twentefp-websockets", "attoparsec"], DirectedEdge["twentefp-websockets", "base"], DirectedEdge["twentefp-websockets", "base64-bytestring"], DirectedEdge["twentefp-websockets", "binary"], DirectedEdge["twentefp-websockets", "blaze-builder"], DirectedEdge["twentefp-websockets", "bytestring"], DirectedEdge["twentefp-websockets", "case-insensitive"], DirectedEdge["twentefp-websockets", "concurrent-extra"], DirectedEdge["twentefp-websockets", "containers"], DirectedEdge["twentefp-websockets", "entropy"], DirectedEdge["twentefp-websockets", "io-streams"], DirectedEdge["twentefp-websockets", "mtl"], DirectedEdge["twentefp-websockets", "network"], DirectedEdge["twentefp-websockets", "random"], DirectedEdge["twentefp-websockets", "SHA"], DirectedEdge["twentefp-websockets", "text"], DirectedEdge["twentyseven", "base"], DirectedEdge["twentyseven", "containers"], DirectedEdge["twentyseven", "deepseq"], DirectedEdge["twentyseven", "directory"], DirectedEdge["twentyseven", "filepath"], DirectedEdge["twentyseven", "heap"], DirectedEdge["twentyseven", "monad-loops"], DirectedEdge["twentyseven", "MonadRandom"], DirectedEdge["twentyseven", "mtl"], DirectedEdge["twentyseven", "newtype"], DirectedEdge["twentyseven", "optparse-applicative"], DirectedEdge["twentyseven", "primitive"], DirectedEdge["twentyseven", "ref-fd"], DirectedEdge["twentyseven", "template-haskell"], DirectedEdge["twentyseven", "time"], DirectedEdge["twentyseven", "transformers"], DirectedEdge["twentyseven", "twentyseven"], DirectedEdge["twentyseven", "vector"], DirectedEdge["twhs", "ansi-terminal"], DirectedEdge["twhs", "authenticate-oauth"], DirectedEdge["twhs", "base"], DirectedEdge["twhs", "bytestring"], DirectedEdge["twhs", "case-insensitive"], DirectedEdge["twhs", "conduit"], DirectedEdge["twhs", "containers"], DirectedEdge["twhs", "data-default"], DirectedEdge["twhs", "http-conduit"], DirectedEdge["twhs", "lens"], DirectedEdge["twhs", "monad-control"], DirectedEdge["twhs", "monad-logger"], DirectedEdge["twhs", "network"], DirectedEdge["twhs", "resourcet"], DirectedEdge["twhs", "text"], DirectedEdge["twhs", "transformers"], DirectedEdge["twhs", "transformers-base"], DirectedEdge["twhs", "twitter-conduit"], DirectedEdge["twidge", "aeson"], DirectedEdge["twidge", "base"], DirectedEdge["twidge", "binary"], DirectedEdge["twidge", "Bitly"], DirectedEdge["twidge", "bytestring"], DirectedEdge["twidge", "ConfigFile"], DirectedEdge["twidge", "curl"], DirectedEdge["twidge", "directory"], DirectedEdge["twidge", "hoauth"], DirectedEdge["twidge", "HSH"], DirectedEdge["twidge", "hslogger"], DirectedEdge["twidge", "MissingH"], DirectedEdge["twidge", "mtl"], DirectedEdge["twidge", "network"], DirectedEdge["twidge", "old-locale"], DirectedEdge["twidge", "parsec"], DirectedEdge["twidge", "regex-posix"], DirectedEdge["twidge", "text"], DirectedEdge["twidge", "time"], DirectedEdge["twidge", "unix"], DirectedEdge["twidge", "utf8-string"], DirectedEdge["twilight-stm", "base"], DirectedEdge["twilight-stm", "containers"], DirectedEdge["twilight-stm", "mtl"], DirectedEdge["twilio", "aeson"], DirectedEdge["twilio", "base"], DirectedEdge["twilio", "bifunctors"], DirectedEdge["twilio", "bytestring"], DirectedEdge["twilio", "containers"], DirectedEdge["twilio", "errors"], DirectedEdge["twilio", "exceptions"], DirectedEdge["twilio", "free"], DirectedEdge["twilio", "http-client"], DirectedEdge["twilio", "http-client-tls"], DirectedEdge["twilio", "http-types"], DirectedEdge["twilio", "mtl"], DirectedEdge["twilio", "network-uri"], DirectedEdge["twilio", "old-locale"], DirectedEdge["twilio", "scientific"], DirectedEdge["twilio", "text"], DirectedEdge["twilio", "time"], DirectedEdge["twilio", "transformers"], DirectedEdge["twilio", "unordered-containers"], DirectedEdge["twill", "aeson"], DirectedEdge["twill", "attoparsec"], DirectedEdge["twill", "base"], DirectedEdge["twill", "base16-bytestring"], DirectedEdge["twill", "base64-bytestring"], DirectedEdge["twill", "bytestring"], DirectedEdge["twill", "cryptohash"], DirectedEdge["twill", "data-default"], DirectedEdge["twill", "datetime"], DirectedEdge["twill", "errors"], DirectedEdge["twill", "old-locale"], DirectedEdge["twill", "QuickCheck"], DirectedEdge["twill", "text"], DirectedEdge["twill", "time"], DirectedEdge["twiml", "base"], DirectedEdge["twiml", "data-default"], DirectedEdge["twiml", "deepseq"], DirectedEdge["twiml", "lens"], DirectedEdge["twiml", "network-uri"], DirectedEdge["twiml", "parsec"], DirectedEdge["twiml", "template-haskell"], DirectedEdge["twiml", "text"], DirectedEdge["twiml", "void"], DirectedEdge["twiml", "xml"], DirectedEdge["twine", "base"], DirectedEdge["twine", "bytestring"], DirectedEdge["twine", "containers"], DirectedEdge["twine", "convertible"], DirectedEdge["twine", "filepath"], DirectedEdge["twine", "mtl"], DirectedEdge["twine", "parsec"], DirectedEdge["twisty", "array"], DirectedEdge["twisty", "base"], DirectedEdge["twisty", "containers"], DirectedEdge["twisty", "data-memocombinators"], DirectedEdge["twisty", "MonadRandom"], DirectedEdge["twisty", "parallel"], DirectedEdge["twitch", "base"], DirectedEdge["twitch", "data-default"], DirectedEdge["twitch", "directory"], DirectedEdge["twitch", "filepath"], DirectedEdge["twitch", "fsnotify"], DirectedEdge["twitch", "Glob"], DirectedEdge["twitch", "optparse-applicative"], DirectedEdge["twitch", "time"], DirectedEdge["twitch", "transformers"], DirectedEdge["twitter", "base"], DirectedEdge["twitter", "curl"], DirectedEdge["twitter", "directory"], DirectedEdge["twitter", "filepath"], DirectedEdge["twitter", "json"], DirectedEdge["twitter", "mtl"], DirectedEdge["twitter", "old-locale"], DirectedEdge["twitter", "readline"], DirectedEdge["twitter", "time"], DirectedEdge["twitter", "xml"], DirectedEdge["twitter-conduit", "aeson"], DirectedEdge["twitter-conduit", "attoparsec"], DirectedEdge["twitter-conduit", "authenticate-oauth"], DirectedEdge["twitter-conduit", "base"], DirectedEdge["twitter-conduit", "bytestring"], DirectedEdge["twitter-conduit", "conduit"], DirectedEdge["twitter-conduit", "conduit-extra"], DirectedEdge["twitter-conduit", "containers"], DirectedEdge["twitter-conduit", "data-default"], DirectedEdge["twitter-conduit", "exceptions"], DirectedEdge["twitter-conduit", "http-client"], DirectedEdge["twitter-conduit", "http-conduit"], DirectedEdge["twitter-conduit", "http-types"], DirectedEdge["twitter-conduit", "lens"], DirectedEdge["twitter-conduit", "lens-aeson"], DirectedEdge["twitter-conduit", "resourcet"], DirectedEdge["twitter-conduit", "template-haskell"], DirectedEdge["twitter-conduit", "text"], DirectedEdge["twitter-conduit", "time"], DirectedEdge["twitter-conduit", "transformers"], DirectedEdge["twitter-conduit", "transformers-base"], DirectedEdge["twitter-conduit", "twitter-types"], DirectedEdge["twitter-conduit", "twitter-types-lens"], DirectedEdge["twitter-enumerator", "twitter-conduit"], DirectedEdge["twitter-enumerator", "aeson"], DirectedEdge["twitter-enumerator", "attoparsec"], DirectedEdge["twitter-enumerator", "attoparsec-enumerator"], DirectedEdge["twitter-enumerator", "authenticate"], DirectedEdge["twitter-enumerator", "base"], DirectedEdge["twitter-enumerator", "bytestring"], DirectedEdge["twitter-enumerator", "containers"], DirectedEdge["twitter-enumerator", "enumerator"], DirectedEdge["twitter-enumerator", "http-enumerator"], DirectedEdge["twitter-enumerator", "http-types"], DirectedEdge["twitter-enumerator", "text"], DirectedEdge["twitter-enumerator", "tls-extra"], DirectedEdge["twitter-enumerator", "transformers"], DirectedEdge["twitter-feed", "aeson"], DirectedEdge["twitter-feed", "authenticate-oauth"], DirectedEdge["twitter-feed", "base"], DirectedEdge["twitter-feed", "bytestring"], DirectedEdge["twitter-feed", "http-conduit"], DirectedEdge["twitter-types", "aeson"], DirectedEdge["twitter-types", "base"], DirectedEdge["twitter-types", "ghc-prim"], DirectedEdge["twitter-types", "old-locale"], DirectedEdge["twitter-types", "text"], DirectedEdge["twitter-types", "time"], DirectedEdge["twitter-types", "unordered-containers"], DirectedEdge["twitter-types-lens", "base"], DirectedEdge["twitter-types-lens", "lens"], DirectedEdge["twitter-types-lens", "template-haskell"], DirectedEdge["twitter-types-lens", "text"], DirectedEdge["twitter-types-lens", "time"], DirectedEdge["twitter-types-lens", "twitter-types"], DirectedEdge["tx", "base"], DirectedEdge["tx", "bytestring"], DirectedEdge["tx", "cereal"], DirectedEdge["tx", "safecopy"], DirectedEdge["tx", "stm"], DirectedEdge["tx", "transformers"], DirectedEdge["txt-sushi", "base"], DirectedEdge["txt-sushi", "binary"], DirectedEdge["txt-sushi", "bytestring"], DirectedEdge["txt-sushi", "containers"], DirectedEdge["txt-sushi", "directory"], DirectedEdge["txt-sushi", "parsec"], DirectedEdge["txt-sushi", "regex-posix"], DirectedEdge["txt2rtf", "base"], DirectedEdge["txtblk", "base"], DirectedEdge["ty", "base"], DirectedEdge["ty", "ghc-prim"], DirectedEdge["typalyze", "base"], DirectedEdge["typalyze", "bytestring"], DirectedEdge["typalyze", "directory"], DirectedEdge["typalyze", "filepath"], DirectedEdge["typalyze", "ghc"], DirectedEdge["typalyze", "process"], DirectedEdge["type", "base"], DirectedEdge["type", "containers"], DirectedEdge["type", "template-haskell"], DirectedEdge["type-aligned", "base"], DirectedEdge["type-booleans", "base"], DirectedEdge["type-cache", "base"], DirectedEdge["type-cache", "containers"], DirectedEdge["type-cache", "lens"], DirectedEdge["type-cache", "lens-utils"], DirectedEdge["type-cache", "template-haskell"], DirectedEdge["type-cereal", "base"], DirectedEdge["type-cereal", "bytestring"], DirectedEdge["type-cereal", "cereal"], DirectedEdge["type-cereal", "data-hash"], DirectedEdge["type-cereal", "template-haskell"], DirectedEdge["type-cereal", "type-digits"], DirectedEdge["type-cereal", "type-spine"], DirectedEdge["type-combinators", "base"], DirectedEdge["type-combinators-quote", "base"], DirectedEdge["type-combinators-quote", "haskell-src-meta"], DirectedEdge["type-combinators-quote", "template-haskell"], DirectedEdge["type-combinators-quote", "type-combinators"], DirectedEdge["type-digits", "base"], DirectedEdge["type-digits", "template-haskell"], DirectedEdge["type-digits", "type-spine"], DirectedEdge["type-eq", "base"], DirectedEdge["type-equality", "base"], DirectedEdge["type-equality-check", "base"], DirectedEdge["type-equality-check", "type-level"], DirectedEdge["type-fun", "base"], DirectedEdge["type-functions", "base"], DirectedEdge["type-functions", "kinds"], DirectedEdge["type-hint", "base"], DirectedEdge["type-hint", "tagged"], DirectedEdge["type-int", "base"], DirectedEdge["type-int", "template-haskell"], DirectedEdge["type-iso", "base"], DirectedEdge["type-iso", "data-default"], DirectedEdge["type-iso", "nats"], DirectedEdge["type-iso", "numericpeano"], DirectedEdge["type-iso", "text"], DirectedEdge["type-level", "base"], DirectedEdge["type-level", "syb"], DirectedEdge["type-level", "template-haskell"], DirectedEdge["type-level-bst", "base"], DirectedEdge["type-level-natural-number", "base"], DirectedEdge["type-level-natural-number-induction", "base"], DirectedEdge["type-level-natural-number-induction", "transformers"], DirectedEdge["type-level-natural-number-induction", "type-level-natural-number"], DirectedEdge["type-level-natural-number-operations", "base"], DirectedEdge["type-level-natural-number-operations", "type-level-natural-number"], DirectedEdge["type-level-numbers", "base"], DirectedEdge["type-level-numbers", "template-haskell"], DirectedEdge["type-level-sets", "base"], DirectedEdge["type-level-sets", "ghc-prim"], DirectedEdge["type-level-tf", "base"], DirectedEdge["type-level-tf", "syb"], DirectedEdge["type-level-tf", "template-haskell"], DirectedEdge["type-list", "base"], DirectedEdge["type-list", "singletons"], DirectedEdge["type-natural", "base"], DirectedEdge["type-natural", "constraints"], DirectedEdge["type-natural", "equational-reasoning"], DirectedEdge["type-natural", "monomorphic"], DirectedEdge["type-natural", "singletons"], DirectedEdge["type-natural", "template-haskell"], DirectedEdge["type-operators", "base"], DirectedEdge["type-operators", "ghc-prim"], DirectedEdge["type-ord", "base"], DirectedEdge["type-ord", "template-haskell"], DirectedEdge["type-ord", "type-digits"], DirectedEdge["type-ord", "type-spine"], DirectedEdge["type-ord-spine-cereal", "base"], DirectedEdge["type-ord-spine-cereal", "template-haskell"], DirectedEdge["type-ord-spine-cereal", "type-cereal"], DirectedEdge["type-ord-spine-cereal", "type-ord"], DirectedEdge["type-ord-spine-cereal", "type-spine"], DirectedEdge["type-prelude", "base"], DirectedEdge["type-prelude", "ghc-prim"], DirectedEdge["type-settheory", "base"], DirectedEdge["type-settheory", "containers"], DirectedEdge["type-settheory", "syb"], DirectedEdge["type-settheory", "template-haskell"], DirectedEdge["type-settheory", "transformers"], DirectedEdge["type-settheory", "type-equality"], DirectedEdge["type-spine", "base"], DirectedEdge["type-spine", "template-haskell"], DirectedEdge["type-structure", "array"], DirectedEdge["type-structure", "base"], DirectedEdge["type-structure", "bytestring"], DirectedEdge["type-structure", "containers"], DirectedEdge["type-structure", "hashable"], DirectedEdge["type-structure", "loch-th"], DirectedEdge["type-structure", "mtl"], DirectedEdge["type-structure", "placeholders"], DirectedEdge["type-structure", "template-haskell"], DirectedEdge["type-structure", "text"], DirectedEdge["type-structure", "th-instance-reification"], DirectedEdge["type-structure", "time"], DirectedEdge["type-structure", "transformers"], DirectedEdge["type-structure", "unordered-containers"], DirectedEdge["type-structure", "vector"], DirectedEdge["type-sub-th", "base"], DirectedEdge["type-sub-th", "DebugTraceHelpers"], DirectedEdge["type-sub-th", "HUnit"], DirectedEdge["type-sub-th", "QuickCheck"], DirectedEdge["type-sub-th", "template-haskell"], DirectedEdge["type-sub-th", "test-framework"], DirectedEdge["type-sub-th", "test-framework-hunit"], DirectedEdge["type-sub-th", "tuple"], DirectedEdge["type-sub-th", "uniplate"], DirectedEdge["type-unary", "applicative-numbers"], DirectedEdge["type-unary", "base"], DirectedEdge["type-unary", "constraints"], DirectedEdge["type-unary", "newtype"], DirectedEdge["type-unary", "ty"], DirectedEdge["type-unary", "vector-space"], DirectedEdge["typeable-th", "base"], DirectedEdge["typeable-th", "template-haskell"], DirectedEdge["typeable-th", "transformers"], DirectedEdge["typed-spreadsheet", "async"], DirectedEdge["typed-spreadsheet", "base"], DirectedEdge["typed-spreadsheet", "diagrams-cairo"], DirectedEdge["typed-spreadsheet", "diagrams-gtk"], DirectedEdge["typed-spreadsheet", "diagrams-lib"], DirectedEdge["typed-spreadsheet", "foldl"], DirectedEdge["typed-spreadsheet", "gtk"], DirectedEdge["typed-spreadsheet", "microlens"], DirectedEdge["typed-spreadsheet", "stm"], DirectedEdge["typed-spreadsheet", "text"], DirectedEdge["typed-spreadsheet", "transformers"], DirectedEdge["typed-spreadsheet", "typed-spreadsheet"], DirectedEdge["typed-wire", "base"], DirectedEdge["typed-wire", "containers"], DirectedEdge["typed-wire", "directory"], DirectedEdge["typed-wire", "filepath"], DirectedEdge["typed-wire", "gitrev"], DirectedEdge["typed-wire", "http-types"], DirectedEdge["typed-wire", "mtl"], DirectedEdge["typed-wire", "optparse-applicative"], DirectedEdge["typed-wire", "parsec"], DirectedEdge["typed-wire", "text"], DirectedEdge["typed-wire", "typed-wire"], DirectedEdge["typed-wire-utils", "aeson"], DirectedEdge["typed-wire-utils", "base"], DirectedEdge["typed-wire-utils", "base64-bytestring"], DirectedEdge["typed-wire-utils", "bytestring"], DirectedEdge["typed-wire-utils", "text"], DirectedEdge["typed-wire-utils", "time"], DirectedEdge["typedquery", "aeson"], DirectedEdge["typedquery", "base"], DirectedEdge["typedquery", "bytestring"], DirectedEdge["typedquery", "haskell-src-exts"], DirectedEdge["typedquery", "haskell-src-meta"], DirectedEdge["typedquery", "parsec"], DirectedEdge["typedquery", "rawstring-qm"], DirectedEdge["typedquery", "template-haskell"], DirectedEdge["typedquery", "text"], DirectedEdge["typedquery", "transformers"], DirectedEdge["typehash", "base"], DirectedEdge["typehash", "binary"], DirectedEdge["typehash", "bytestring"], DirectedEdge["typehash", "mtl"], DirectedEdge["typehash", "syb"], DirectedEdge["typelevel", "base"], DirectedEdge["typelevel", "pretty"], DirectedEdge["typelevel", "pretty-show"], DirectedEdge["typelevel-tensor", "base"], DirectedEdge["typelevel-tensor", "numeric-prelude"], DirectedEdge["typelevel-tensor", "QuickCheck"], DirectedEdge["typelits-witnesses", "base"], DirectedEdge["typelits-witnesses", "base-compat"], DirectedEdge["typelits-witnesses", "constraints"], DirectedEdge["typelits-witnesses", "reflection"], DirectedEdge["typelits-witnesses", "transformers"], DirectedEdge["typeof", "base"], DirectedEdge["typeof", "process"], DirectedEdge["typeparams", "base"], DirectedEdge["typeparams", "constraints"], DirectedEdge["typeparams", "deepseq"], DirectedEdge["typeparams", "ghc-prim"], DirectedEdge["typeparams", "primitive"], DirectedEdge["typeparams", "reflection"], DirectedEdge["typeparams", "tagged"], DirectedEdge["typeparams", "template-haskell"], DirectedEdge["typeparams", "vector"], DirectedEdge["types-compat", "base"], DirectedEdge["types-compat", "tagged"], DirectedEdge["typesafe-endian", "base"], DirectedEdge["typescript-docs", "base"], DirectedEdge["typescript-docs", "blaze-html"], DirectedEdge["typescript-docs", "cmdtheline"], DirectedEdge["typescript-docs", "containers"], DirectedEdge["typescript-docs", "filemanip"], DirectedEdge["typescript-docs", "filepath"], DirectedEdge["typescript-docs", "language-typescript"], DirectedEdge["typescript-docs", "parsec"], DirectedEdge["typescript-docs", "split"], DirectedEdge["typescript-docs", "syb"], DirectedEdge["typescript-docs", "utf8-string"], DirectedEdge["typical", "base"], DirectedEdge["typography-geometry", "base"], DirectedEdge["typography-geometry", "containers"], DirectedEdge["typography-geometry", "parallel"], DirectedEdge["typography-geometry", "polynomials-bernstein"], DirectedEdge["typography-geometry", "vector"], DirectedEdge["tz", "base"], DirectedEdge["tz", "binary"], DirectedEdge["tz", "bytestring"], DirectedEdge["tz", "containers"], DirectedEdge["tz", "data-default"], DirectedEdge["tz", "deepseq"], DirectedEdge["tz", "template-haskell"], DirectedEdge["tz", "time"], DirectedEdge["tz", "tzdata"], DirectedEdge["tz", "vector"], DirectedEdge["tzdata", "base"], DirectedEdge["tzdata", "bytestring"], DirectedEdge["tzdata", "containers"], DirectedEdge["tzdata", "deepseq"], DirectedEdge["tzdata", "vector"], DirectedEdge["uAgda", "array"], DirectedEdge["uAgda", "base"], DirectedEdge["uAgda", "BNFC-meta"], DirectedEdge["uAgda", "cmdargs"], DirectedEdge["uAgda", "containers"], DirectedEdge["uAgda", "mtl"], DirectedEdge["uAgda", "parsec"], DirectedEdge["uAgda", "pretty"], DirectedEdge["uAgda", "split"], DirectedEdge["uAgda", "transformers"], DirectedEdge["ua-parser", "aeson"], DirectedEdge["ua-parser", "base"], DirectedEdge["ua-parser", "bytestring"], DirectedEdge["ua-parser", "data-default"], DirectedEdge["ua-parser", "file-embed"], DirectedEdge["ua-parser", "pcre-light"], DirectedEdge["ua-parser", "text"], DirectedEdge["ua-parser", "yaml"], DirectedEdge["uacpid", "base"], DirectedEdge["uacpid", "containers"], DirectedEdge["uacpid", "directory"], DirectedEdge["uacpid", "filepath"], DirectedEdge["uacpid", "hslogger"], DirectedEdge["uacpid", "mtl"], DirectedEdge["uacpid", "network"], DirectedEdge["uacpid", "process"], DirectedEdge["uacpid", "regex-compat"], DirectedEdge["uacpid", "time"], DirectedEdge["uacpid", "time-locale-compat"], DirectedEdge["uacpid", "unix"], DirectedEdge["uber", "aeson"], DirectedEdge["uber", "base"], DirectedEdge["uber", "text"], DirectedEdge["uber", "webapi"], DirectedEdge["uberlast", "base"], DirectedEdge["uberlast", "lens"], DirectedEdge["uberlast", "tagged"], DirectedEdge["uberlast", "template-haskell"], DirectedEdge["uconv", "base"], DirectedEdge["uconv", "bytestring"], DirectedEdge["udbus", "base"], DirectedEdge["udbus", "binary"], DirectedEdge["udbus", "bytestring"], DirectedEdge["udbus", "cereal"], DirectedEdge["udbus", "containers"], DirectedEdge["udbus", "ghc-prim"], DirectedEdge["udbus", "mtl"], DirectedEdge["udbus", "network"], DirectedEdge["udbus", "QuickCheck"], DirectedEdge["udbus", "test-framework"], DirectedEdge["udbus", "unix"], DirectedEdge["udbus", "utf8-string"], DirectedEdge["udbus-model", "base"], DirectedEdge["udbus-model", "bytestring"], DirectedEdge["udbus-model", "groom"], DirectedEdge["udbus-model", "udbus"], DirectedEdge["udbus-model", "udbus-model"], DirectedEdge["udbus-model", "xml"], DirectedEdge["udcode", "base"], DirectedEdge["udcode", "containers"], DirectedEdge["udcode", "mtl"], DirectedEdge["udev", "base"], DirectedEdge["udev", "bytestring"], DirectedEdge["udev", "posix-paths"], DirectedEdge["udev", "select"], DirectedEdge["udev", "udev"], DirectedEdge["udev", "unix"], DirectedEdge["uglymemo", "base"], DirectedEdge["uglymemo", "containers"], DirectedEdge["uhc-light", "array"], DirectedEdge["uhc-light", "base"], DirectedEdge["uhc-light", "binary"], DirectedEdge["uhc-light", "bytestring"], DirectedEdge["uhc-light", "containers"], DirectedEdge["uhc-light", "directory"], DirectedEdge["uhc-light", "fgl"], DirectedEdge["uhc-light", "filepath"], DirectedEdge["uhc-light", "hashable"], DirectedEdge["uhc-light", "mtl"], DirectedEdge["uhc-light", "network"], DirectedEdge["uhc-light", "old-locale"], DirectedEdge["uhc-light", "primitive"], DirectedEdge["uhc-light", "process"], DirectedEdge["uhc-light", "syb"], DirectedEdge["uhc-light", "transformers"], DirectedEdge["uhc-light", "uhc-light"], DirectedEdge["uhc-light", "uhc-util"], DirectedEdge["uhc-light", "uulib"], DirectedEdge["uhc-light", "vector"], DirectedEdge["uhc-util", "array"], DirectedEdge["uhc-util", "base"], DirectedEdge["uhc-util", "binary"], DirectedEdge["uhc-util", "bytestring"], DirectedEdge["uhc-util", "containers"], DirectedEdge["uhc-util", "directory"], DirectedEdge["uhc-util", "fclabels"], DirectedEdge["uhc-util", "fgl"], DirectedEdge["uhc-util", "hashable"], DirectedEdge["uhc-util", "logict-state"], DirectedEdge["uhc-util", "mtl"], DirectedEdge["uhc-util", "pqueue"], DirectedEdge["uhc-util", "process"], DirectedEdge["uhc-util", "time"], DirectedEdge["uhc-util", "time-compat"], DirectedEdge["uhc-util", "transformers"], DirectedEdge["uhc-util", "uulib"], DirectedEdge["uhexdump", "base"], DirectedEdge["uhexdump", "bytestring"], DirectedEdge["uhexdump", "split"], DirectedEdge["uhttpc", "async"], DirectedEdge["uhttpc", "base"], DirectedEdge["uhttpc", "bytestring"], DirectedEdge["uhttpc", "bytestring-lexing"], DirectedEdge["uhttpc", "deepseq"], DirectedEdge["uhttpc", "network"], DirectedEdge["uhttpc", "network-uri"], DirectedEdge["uhttpc", "optparse-applicative"], DirectedEdge["uhttpc", "uhttpc"], DirectedEdge["ui-command", "base"], DirectedEdge["ui-command", "data-default"], DirectedEdge["ui-command", "mtl"], DirectedEdge["ui-command", "old-locale"], DirectedEdge["ui-command", "time"], DirectedEdge["uid", "aeson"], DirectedEdge["uid", "base"], DirectedEdge["uid", "bytestring"], DirectedEdge["uid", "cereal"], DirectedEdge["uid", "dataenc"], DirectedEdge["uid", "text"], DirectedEdge["uid", "uuid"], DirectedEdge["una", "base"], DirectedEdge["una", "bytestring"], DirectedEdge["una", "cmdargs"], DirectedEdge["una", "directory"], DirectedEdge["una", "filepath"], DirectedEdge["una", "io-storage"], DirectedEdge["una", "process"], DirectedEdge["unagi-chan", "atomic-primops"], DirectedEdge["unagi-chan", "base"], DirectedEdge["unagi-chan", "ghc-prim"], DirectedEdge["unagi-chan", "primitive"], DirectedEdge["unagi-streams", "base"], DirectedEdge["unagi-streams", "io-streams"], DirectedEdge["unagi-streams", "unagi-chan"], DirectedEdge["unamb", "base"], DirectedEdge["unamb", "checkers"], DirectedEdge["unamb", "QuickCheck"], DirectedEdge["unamb-custom", "base"], DirectedEdge["unamb-custom", "containers"], DirectedEdge["unamb-custom", "mtl"], DirectedEdge["unbound", "base"], DirectedEdge["unbound", "binary"], DirectedEdge["unbound", "containers"], DirectedEdge["unbound", "mtl"], DirectedEdge["unbound", "RepLib"], DirectedEdge["unbound", "transformers"], DirectedEdge["unbound-generics", "base"], DirectedEdge["unbound-generics", "containers"], DirectedEdge["unbound-generics", "contravariant"], DirectedEdge["unbound-generics", "deepseq"], DirectedEdge["unbound-generics", "mtl"], DirectedEdge["unbound-generics", "profunctors"], DirectedEdge["unbound-generics", "template-haskell"], DirectedEdge["unbound-generics", "transformers"], DirectedEdge["unbound-generics", "transformers-compat"], DirectedEdge["unbounded-delays", "base"], DirectedEdge["unbounded-delays-units", "base"], DirectedEdge["unbounded-delays-units", "unbounded-delays"], DirectedEdge["unbounded-delays-units", "units"], DirectedEdge["unbounded-delays-units", "units-defs"], DirectedEdge["unboxed-containers", "base"], DirectedEdge["unboxed-containers", "containers"], DirectedEdge["unbreak", "aeson"], DirectedEdge["unbreak", "aeson-pretty"], DirectedEdge["unbreak", "base"], DirectedEdge["unbreak", "base64-bytestring"], DirectedEdge["unbreak", "bytestring"], DirectedEdge["unbreak", "cereal"], DirectedEdge["unbreak", "cmdargs"], DirectedEdge["unbreak", "cryptonite"], DirectedEdge["unbreak", "memory"], DirectedEdge["unbreak", "process"], DirectedEdge["unbreak", "text"], DirectedEdge["unbreak", "unbreak"], DirectedEdge["unbreak", "unix"], DirectedEdge["uncertain", "ad"], DirectedEdge["uncertain", "base"], DirectedEdge["uncertain", "base-compat"], DirectedEdge["uncertain", "containers"], DirectedEdge["uncertain", "free"], DirectedEdge["uncertain", "mwc-random"], DirectedEdge["uncertain", "primitive"], DirectedEdge["uncertain", "transformers"], DirectedEdge["unexceptionalio", "base"], DirectedEdge["unfoldable", "base"], DirectedEdge["unfoldable", "ghc-prim"], DirectedEdge["unfoldable", "QuickCheck"], DirectedEdge["unfoldable", "random"], DirectedEdge["unfoldable", "transformers"], DirectedEdge["unfoldable-restricted", "base"], DirectedEdge["unfoldable-restricted", "constraints"], DirectedEdge["unfoldable-restricted", "containers"], DirectedEdge["unfoldable-restricted", "hashable"], DirectedEdge["unfoldable-restricted", "transformers"], DirectedEdge["unfoldable-restricted", "unfoldable"], DirectedEdge["unfoldable-restricted", "unit-constraint"], DirectedEdge["unfoldable-restricted", "unordered-containers"], DirectedEdge["ungadtagger", "base"], DirectedEdge["uni-events", "base"], DirectedEdge["uni-events", "containers"], DirectedEdge["uni-events", "uni-util"], DirectedEdge["uni-graphs", "base"], DirectedEdge["uni-graphs", "containers"], DirectedEdge["uni-graphs", "mtl"], DirectedEdge["uni-graphs", "uni-events"], DirectedEdge["uni-graphs", "uni-htk"], DirectedEdge["uni-graphs", "uni-reactor"], DirectedEdge["uni-graphs", "uni-util"], DirectedEdge["uni-htk", "base"], DirectedEdge["uni-htk", "containers"], DirectedEdge["uni-htk", "directory"], DirectedEdge["uni-htk", "uni-events"], DirectedEdge["uni-htk", "uni-posixutil"], DirectedEdge["uni-htk", "uni-reactor"], DirectedEdge["uni-htk", "uni-util"], DirectedEdge["uni-posixutil", "base"], DirectedEdge["uni-posixutil", "directory"], DirectedEdge["uni-posixutil", "process"], DirectedEdge["uni-posixutil", "uni-events"], DirectedEdge["uni-posixutil", "uni-util"], DirectedEdge["uni-posixutil", "unix"], DirectedEdge["uni-reactor", "base"], DirectedEdge["uni-reactor", "containers"], DirectedEdge["uni-reactor", "directory"], DirectedEdge["uni-reactor", "uni-events"], DirectedEdge["uni-reactor", "uni-util"], DirectedEdge["uni-uDrawGraph", "base"], DirectedEdge["uni-uDrawGraph", "containers"], DirectedEdge["uni-uDrawGraph", "uni-events"], DirectedEdge["uni-uDrawGraph", "uni-graphs"], DirectedEdge["uni-uDrawGraph", "uni-posixutil"], DirectedEdge["uni-uDrawGraph", "uni-reactor"], DirectedEdge["uni-uDrawGraph", "uni-util"], DirectedEdge["uni-util", "array"], DirectedEdge["uni-util", "base"], DirectedEdge["uni-util", "bytestring"], DirectedEdge["uni-util", "containers"], DirectedEdge["uni-util", "directory"], DirectedEdge["uni-util", "ghc-prim"], DirectedEdge["uni-util", "mtl"], DirectedEdge["uni-util", "network"], DirectedEdge["uni-util", "old-time"], DirectedEdge["uni-util", "parsec"], DirectedEdge["unicode", "base"], DirectedEdge["unicode", "containers"], DirectedEdge["unicode", "unicode"], DirectedEdge["unicode", "utility-ht"], DirectedEdge["unicode-names", "array"], DirectedEdge["unicode-names", "base"], DirectedEdge["unicode-names", "containers"], DirectedEdge["unicode-names", "unicode-properties"], DirectedEdge["unicode-normalization", "base"], DirectedEdge["unicode-normalization", "bytestring"], DirectedEdge["unicode-normalization", "compact-string"], DirectedEdge["unicode-prelude", "base-unicode-symbols"], DirectedEdge["unicode-prelude", "base"], DirectedEdge["unicode-properties", "array"], DirectedEdge["unicode-properties", "base"], DirectedEdge["unicode-properties", "containers"], DirectedEdge["unicode-show", "base"], DirectedEdge["unicode-symbols", "base-unicode-symbols"], DirectedEdge["unicode-symbols", "base"], DirectedEdge["unicode-symbols", "containers"], DirectedEdge["unicoder", "attoparsec"], DirectedEdge["unicoder", "base"], DirectedEdge["unicoder", "directory"], DirectedEdge["unicoder", "text"], DirectedEdge["unification-fd", "base"], DirectedEdge["unification-fd", "containers"], DirectedEdge["unification-fd", "logict"], DirectedEdge["unification-fd", "mtl"], DirectedEdge["uniform-io", "attoparsec"], DirectedEdge["uniform-io", "base"], DirectedEdge["uniform-io", "bytestring"], DirectedEdge["uniform-io", "data-default-class"], DirectedEdge["uniform-io", "interruptible"], DirectedEdge["uniform-io", "iproute"], DirectedEdge["uniform-io", "monad-control"], DirectedEdge["uniform-io", "network"], DirectedEdge["uniform-io", "transformers"], DirectedEdge["uniform-io", "transformers-base"], DirectedEdge["uniform-pair", "base"], DirectedEdge["uniform-pair", "deepseq"], DirectedEdge["uniform-pair", "prelude-extras"], DirectedEdge["union", "base"], DirectedEdge["union", "deepseq"], DirectedEdge["union", "profunctors"], DirectedEdge["union", "tagged"], DirectedEdge["union", "vinyl"], DirectedEdge["union-find", "base"], DirectedEdge["union-find", "containers"], DirectedEdge["union-find", "transformers"], DirectedEdge["union-find-array", "array"], DirectedEdge["union-find-array", "base"], DirectedEdge["union-find-array", "mtl"], DirectedEdge["union-map", "base"], DirectedEdge["union-map", "containers"], DirectedEdge["union-map", "extensible"], DirectedEdge["uniplate", "base"], DirectedEdge["uniplate", "containers"], DirectedEdge["uniplate", "hashable"], DirectedEdge["uniplate", "syb"], DirectedEdge["uniplate", "unordered-containers"], DirectedEdge["unique", "base"], DirectedEdge["unique", "ghc-prim"], DirectedEdge["unique", "hashable"], DirectedEdge["unique-logic", "base"], DirectedEdge["unique-logic", "transformers"], DirectedEdge["unique-logic", "utility-ht"], DirectedEdge["unique-logic-tf", "base"], DirectedEdge["unique-logic-tf", "containers"], DirectedEdge["unique-logic-tf", "explicit-exception"], DirectedEdge["unique-logic-tf", "transformers"], DirectedEdge["unique-logic-tf", "utility-ht"], DirectedEdge["uniqueid", "base"], DirectedEdge["unit", "base"], DirectedEdge["unit-constraint", "base"], DirectedEdge["unit-constraint", "constraints"], DirectedEdge["units", "base"], DirectedEdge["units", "containers"], DirectedEdge["units", "deepseq"], DirectedEdge["units", "lens"], DirectedEdge["units", "linear"], DirectedEdge["units", "mtl"], DirectedEdge["units", "multimap"], DirectedEdge["units", "singletons"], DirectedEdge["units", "syb"], DirectedEdge["units", "template-haskell"], DirectedEdge["units", "th-desugar"], DirectedEdge["units", "units-parser"], DirectedEdge["units", "vector-space"], DirectedEdge["units-attoparsec", "attoparsec"], DirectedEdge["units-attoparsec", "base"], DirectedEdge["units-attoparsec", "template-haskell"], DirectedEdge["units-attoparsec", "text"], DirectedEdge["units-attoparsec", "units"], DirectedEdge["units-attoparsec", "units-defs"], DirectedEdge["units-defs", "base"], DirectedEdge["units-defs", "template-haskell"], DirectedEdge["units-defs", "units"], DirectedEdge["units-parser", "base"], DirectedEdge["units-parser", "containers"], DirectedEdge["units-parser", "mtl"], DirectedEdge["units-parser", "multimap"], DirectedEdge["units-parser", "parsec"], DirectedEdge["unittyped", "base"], DirectedEdge["universal-binary", "base"], DirectedEdge["universal-binary", "binary"], DirectedEdge["universal-binary", "bytestring"], DirectedEdge["universe", "universe-instances-base"], DirectedEdge["universe", "universe-instances-extended"], DirectedEdge["universe", "universe-instances-trans"], DirectedEdge["universe", "universe-reverse-instances"], DirectedEdge["universe-base", "base"], DirectedEdge["universe-instances-base", "base"], DirectedEdge["universe-instances-base", "containers"], DirectedEdge["universe-instances-base", "universe-base"], DirectedEdge["universe-instances-extended", "adjunctions"], DirectedEdge["universe-instances-extended", "base"], DirectedEdge["universe-instances-extended", "comonad"], DirectedEdge["universe-instances-extended", "universe-instances-base"], DirectedEdge["universe-instances-extended", "void"], DirectedEdge["universe-instances-trans", "base"], DirectedEdge["universe-instances-trans", "mtl"], DirectedEdge["universe-instances-trans", "transformers"], DirectedEdge["universe-instances-trans", "universe-base"], DirectedEdge["universe-instances-trans", "universe-instances-base"], DirectedEdge["universe-reverse-instances", "base"], DirectedEdge["universe-reverse-instances", "containers"], DirectedEdge["universe-reverse-instances", "universe-instances-base"], DirectedEdge["universe-th", "base"], DirectedEdge["universe-th", "composition"], DirectedEdge["universe-th", "mtl"], DirectedEdge["universe-th", "template-haskell"], DirectedEdge["universe-th", "tuple"], DirectedEdge["universe-th", "uniplate"], DirectedEdge["unix", "base"], DirectedEdge["unix", "bytestring"], DirectedEdge["unix", "time"], DirectedEdge["unix", "unbuildable"], DirectedEdge["unix-bytestring", "base"], DirectedEdge["unix-bytestring", "bytestring"], DirectedEdge["unix-compat", "base"], DirectedEdge["unix-compat", "directory"], DirectedEdge["unix-compat", "old-time"], DirectedEdge["unix-compat", "time"], DirectedEdge["unix-compat", "unix"], DirectedEdge["unix-fcntl", "base"], DirectedEdge["unix-fcntl", "foreign-var"], DirectedEdge["unix-fcntl", "unix"], DirectedEdge["unix-fcntl", "unix-fcntl"], DirectedEdge["unix-handle", "base"], DirectedEdge["unix-handle", "unix"], DirectedEdge["unix-io-extra", "base"], DirectedEdge["unix-memory", "base"], DirectedEdge["unix-process-conduit", "keter"], DirectedEdge["unix-process-conduit", "base"], DirectedEdge["unix-process-conduit", "bytestring"], DirectedEdge["unix-process-conduit", "conduit"], DirectedEdge["unix-process-conduit", "directory"], DirectedEdge["unix-process-conduit", "filepath"], DirectedEdge["unix-process-conduit", "process"], DirectedEdge["unix-process-conduit", "stm"], DirectedEdge["unix-process-conduit", "time"], DirectedEdge["unix-process-conduit", "transformers"], DirectedEdge["unix-process-conduit", "unix"], DirectedEdge["unix-pty-light", "base"], DirectedEdge["unix-pty-light", "unix"], DirectedEdge["unix-time", "base"], DirectedEdge["unix-time", "binary"], DirectedEdge["unix-time", "bytestring"], DirectedEdge["unix-time", "old-time"], DirectedEdge["unlambda", "array"], DirectedEdge["unlambda", "base"], DirectedEdge["unlambda", "mtl"], DirectedEdge["unlambda", "unix"], DirectedEdge["unlit", "base"], DirectedEdge["unlit", "directory"], DirectedEdge["unlit", "text"], DirectedEdge["unm-hip", "array"], DirectedEdge["unm-hip", "base"], DirectedEdge["unm-hip", "bytestring"], DirectedEdge["unm-hip", "containers"], DirectedEdge["unm-hip", "process"], DirectedEdge["unm-hip", "vector"], DirectedEdge["unordered-containers", "base"], DirectedEdge["unordered-containers", "deepseq"], DirectedEdge["unordered-containers", "hashable"], DirectedEdge["unordered-containers-rematch", "base"], DirectedEdge["unordered-containers-rematch", "hashable"], DirectedEdge["unordered-containers-rematch", "rematch"], DirectedEdge["unordered-containers-rematch", "unordered-containers"], DirectedEdge["unordered-graphs", "base"], DirectedEdge["unordered-graphs", "deepseq"], DirectedEdge["unordered-graphs", "dlist"], DirectedEdge["unordered-graphs", "hashable"], DirectedEdge["unordered-graphs", "unordered-containers"], DirectedEdge["unpack-funcs", "base"], DirectedEdge["unpack-funcs", "bytestring"], DirectedEdge["unpack-funcs", "primitive"], DirectedEdge["unpack-funcs", "template-haskell"], DirectedEdge["unpack-funcs", "transformers"], DirectedEdge["unpack-funcs", "vector"], DirectedEdge["unroll-ghc-plugin", "base"], DirectedEdge["unroll-ghc-plugin", "ghc"], DirectedEdge["unsafe", "base"], DirectedEdge["unsafe-promises", "base"], DirectedEdge["unsafe-promises", "threads"], DirectedEdge["unsafely", "base"], DirectedEdge["unsafely", "tagged"], DirectedEdge["unsafely", "unsafely"], DirectedEdge["unsafeperformst", "base"], DirectedEdge["unscramble", "array"], DirectedEdge["unscramble", "base"], DirectedEdge["unscramble", "optparse-applicative"], DirectedEdge["unscramble", "stream-fusion"], DirectedEdge["unscramble", "unordered-containers"], DirectedEdge["unsequential", "base"], DirectedEdge["unsequential", "base-prelude"], DirectedEdge["unsequential", "dlist"], DirectedEdge["unsequential", "transformers"], DirectedEdge["unusable-pkg", "base"], DirectedEdge["uom-plugin", "base"], DirectedEdge["uom-plugin", "containers"], DirectedEdge["uom-plugin", "deepseq"], DirectedEdge["uom-plugin", "ghc"], DirectedEdge["uom-plugin", "ghc-tcplugins-extra"], DirectedEdge["uom-plugin", "template-haskell"], DirectedEdge["uom-plugin", "units-parser"], DirectedEdge["up", "base"], DirectedEdge["up", "directory"], DirectedEdge["up", "filepath"], DirectedEdge["up", "lambda-options"], DirectedEdge["up", "mtl"], DirectedEdge["up", "split"], DirectedEdge["up-grade", "base"], DirectedEdge["up-grade", "ports-tools"], DirectedEdge["up-grade", "process"], DirectedEdge["uploadcare", "aeson"], DirectedEdge["uploadcare", "attoparsec"], DirectedEdge["uploadcare", "base"], DirectedEdge["uploadcare", "bytestring"], DirectedEdge["uploadcare", "cryptohash"], DirectedEdge["uploadcare", "hex"], DirectedEdge["uploadcare", "http-conduit"], DirectedEdge["uploadcare", "http-types"], DirectedEdge["uploadcare", "old-locale"], DirectedEdge["uploadcare", "time"], DirectedEdge["upskirt", "sundown"], DirectedEdge["upskirt", "base"], DirectedEdge["upskirt", "bytestring"], DirectedEdge["ureader", "ansi-wl-pprint"], DirectedEdge["ureader", "async"], DirectedEdge["ureader", "base"], DirectedEdge["ureader", "bytestring"], DirectedEdge["ureader", "containers"], DirectedEdge["ureader", "curl"], DirectedEdge["ureader", "data-default"], DirectedEdge["ureader", "deepseq"], DirectedEdge["ureader", "directory"], DirectedEdge["ureader", "download-curl"], DirectedEdge["ureader", "feed"], DirectedEdge["ureader", "filepath"], DirectedEdge["ureader", "implicit-params"], DirectedEdge["ureader", "network"], DirectedEdge["ureader", "old-locale"], DirectedEdge["ureader", "opml"], DirectedEdge["ureader", "optparse-applicative"], DirectedEdge["ureader", "parallel-io"], DirectedEdge["ureader", "split"], DirectedEdge["ureader", "tagsoup"], DirectedEdge["ureader", "terminal-size"], DirectedEdge["ureader", "text"], DirectedEdge["ureader", "time"], DirectedEdge["ureader", "xml"], DirectedEdge["urembed", "base"], DirectedEdge["urembed", "bytestring"], DirectedEdge["urembed", "directory"], DirectedEdge["urembed", "filepath"], DirectedEdge["urembed", "language-javascript"], DirectedEdge["urembed", "mime-types"], DirectedEdge["urembed", "mtl"], DirectedEdge["urembed", "optparse-applicative"], DirectedEdge["urembed", "process"], DirectedEdge["urembed", "syb"], DirectedEdge["urembed", "text"], DirectedEdge["uri", "base"], DirectedEdge["uri", "parsec"], DirectedEdge["uri", "safe"], DirectedEdge["uri", "utf8-string"], DirectedEdge["uri-bytestring", "attoparsec"], DirectedEdge["uri-bytestring", "base"], DirectedEdge["uri-bytestring", "blaze-builder"], DirectedEdge["uri-bytestring", "bytestring"], DirectedEdge["uri-conduit", "base"], DirectedEdge["uri-conduit", "bytestring"], DirectedEdge["uri-conduit", "conduit"], DirectedEdge["uri-conduit", "containers"], DirectedEdge["uri-conduit", "deepseq"], DirectedEdge["uri-conduit", "failure"], DirectedEdge["uri-conduit", "monad-control"], DirectedEdge["uri-conduit", "network"], DirectedEdge["uri-conduit", "system-fileio"], DirectedEdge["uri-conduit", "system-filepath"], DirectedEdge["uri-conduit", "text"], DirectedEdge["uri-conduit", "transformers"], DirectedEdge["uri-encode", "base"], DirectedEdge["uri-encode", "bytestring"], DirectedEdge["uri-encode", "network"], DirectedEdge["uri-encode", "network-uri"], DirectedEdge["uri-encode", "text"], DirectedEdge["uri-encode", "utf8-string"], DirectedEdge["uri-enumerator", "uri-conduit"], DirectedEdge["uri-enumerator", "base"], DirectedEdge["uri-enumerator", "bytestring"], DirectedEdge["uri-enumerator", "containers"], DirectedEdge["uri-enumerator", "enumerator"], DirectedEdge["uri-enumerator", "failure"], DirectedEdge["uri-enumerator", "network"], DirectedEdge["uri-enumerator", "text"], DirectedEdge["uri-enumerator", "transformers"], DirectedEdge["uri-enumerator-file", "uri-conduit"], DirectedEdge["uri-enumerator-file", "base"], DirectedEdge["uri-enumerator-file", "bytestring"], DirectedEdge["uri-enumerator-file", "containers"], DirectedEdge["uri-enumerator-file", "enumerator"], DirectedEdge["uri-enumerator-file", "lifted-base"], DirectedEdge["uri-enumerator-file", "monad-control"], DirectedEdge["uri-enumerator-file", "network"], DirectedEdge["uri-enumerator-file", "system-fileio"], DirectedEdge["uri-enumerator-file", "system-filepath"], DirectedEdge["uri-enumerator-file", "text"], DirectedEdge["uri-enumerator-file", "transformers"], DirectedEdge["uri-enumerator-file", "uri-enumerator"], DirectedEdge["uri-template", "base"], DirectedEdge["uri-template", "containers"], DirectedEdge["uri-template", "utf8-string"], DirectedEdge["uri-templater", "ansi-wl-pprint"], DirectedEdge["uri-templater", "base"], DirectedEdge["uri-templater", "charset"], DirectedEdge["uri-templater", "containers"], DirectedEdge["uri-templater", "dlist"], DirectedEdge["uri-templater", "HTTP"], DirectedEdge["uri-templater", "mtl"], DirectedEdge["uri-templater", "parsers"], DirectedEdge["uri-templater", "template-haskell"], DirectedEdge["uri-templater", "text"], DirectedEdge["uri-templater", "trifecta"], DirectedEdge["uri-templater", "unordered-containers"], DirectedEdge["uri-templater", "vector"], DirectedEdge["url", "base"], DirectedEdge["url", "utf8-string"], DirectedEdge["url-generic", "base"], DirectedEdge["url-generic", "mtl"], DirectedEdge["url-generic", "syb"], DirectedEdge["urlcheck", "base"], DirectedEdge["urlcheck", "bytestring"], DirectedEdge["urlcheck", "containers"], DirectedEdge["urlcheck", "mtl"], DirectedEdge["urlcheck", "network"], DirectedEdge["urlcheck", "old-time"], DirectedEdge["urldecode", "base"], DirectedEdge["urldecode", "network"], DirectedEdge["urldisp-happstack", "base"], DirectedEdge["urldisp-happstack", "bytestring"], DirectedEdge["urldisp-happstack", "happstack-server"], DirectedEdge["urldisp-happstack", "mtl"], DirectedEdge["urlencoded", "base"], DirectedEdge["urlencoded", "mtl"], DirectedEdge["urlencoded", "network"], DirectedEdge["urlencoded", "network-uri"], DirectedEdge["urlencoded", "QuickCheck"], DirectedEdge["urlencoded", "split"], DirectedEdge["urlpath", "base"], DirectedEdge["urlpath", "exceptions"], DirectedEdge["urlpath", "mmorph"], DirectedEdge["urlpath", "monad-control"], DirectedEdge["urlpath", "monad-logger"], DirectedEdge["urlpath", "mtl"], DirectedEdge["urlpath", "path-extra"], DirectedEdge["urlpath", "resourcet"], DirectedEdge["urlpath", "transformers"], DirectedEdge["urlpath", "transformers-base"], DirectedEdge["urn", "base"], DirectedEdge["urn", "parsec"], DirectedEdge["urxml", "base"], DirectedEdge["urxml", "filepath"], DirectedEdge["urxml", "mtl"], DirectedEdge["urxml", "optparse-applicative"], DirectedEdge["urxml", "parsec"], DirectedEdge["urxml", "process"], DirectedEdge["urxml", "syb"], DirectedEdge["usb", "base"], DirectedEdge["usb", "bindings-libusb"], DirectedEdge["usb", "bytestring"], DirectedEdge["usb", "containers"], DirectedEdge["usb", "ghc-prim"], DirectedEdge["usb", "text"], DirectedEdge["usb", "vector"], DirectedEdge["usb-enumerator", "base"], DirectedEdge["usb-enumerator", "base-unicode-symbols"], DirectedEdge["usb-enumerator", "bindings-libusb"], DirectedEdge["usb-enumerator", "iteratee"], DirectedEdge["usb-enumerator", "monad-control"], DirectedEdge["usb-enumerator", "transformers"], DirectedEdge["usb-enumerator", "usb"], DirectedEdge["usb-hid", "attoparsec"], DirectedEdge["usb-hid", "base"], DirectedEdge["usb-hid", "bytestring"], DirectedEdge["usb-hid", "usb"], DirectedEdge["usb-id-database", "base"], DirectedEdge["usb-id-database", "base-unicode-symbols"], DirectedEdge["usb-id-database", "bytestring"], DirectedEdge["usb-id-database", "containers"], DirectedEdge["usb-id-database", "containers-unicode-symbols"], DirectedEdge["usb-id-database", "parsimony"], DirectedEdge["usb-iteratee", "base"], DirectedEdge["usb-iteratee", "base-unicode-symbols"], DirectedEdge["usb-iteratee", "bindings-libusb"], DirectedEdge["usb-iteratee", "iteratee"], DirectedEdge["usb-iteratee", "monad-control"], DirectedEdge["usb-iteratee", "usb"], DirectedEdge["usb-iteratee", "vector"], DirectedEdge["usb-safe", "base"], DirectedEdge["usb-safe", "base-unicode-symbols"], DirectedEdge["usb-safe", "bindings-libusb"], DirectedEdge["usb-safe", "bytestring"], DirectedEdge["usb-safe", "iteratee"], DirectedEdge["usb-safe", "regions"], DirectedEdge["usb-safe", "text"], DirectedEdge["usb-safe", "transformers"], DirectedEdge["usb-safe", "usb"], DirectedEdge["userid", "aeson"], DirectedEdge["userid", "base"], DirectedEdge["userid", "boomerang"], DirectedEdge["userid", "safecopy"], DirectedEdge["userid", "web-routes"], DirectedEdge["userid", "web-routes-th"], DirectedEdge["users", "aeson"], DirectedEdge["users", "base"], DirectedEdge["users", "bcrypt"], DirectedEdge["users", "path-pieces"], DirectedEdge["users", "text"], DirectedEdge["users", "time"], DirectedEdge["users-persistent", "base"], DirectedEdge["users-persistent", "bytestring"], DirectedEdge["users-persistent", "esqueleto"], DirectedEdge["users-persistent", "mtl"], DirectedEdge["users-persistent", "persistent"], DirectedEdge["users-persistent", "persistent-template"], DirectedEdge["users-persistent", "text"], DirectedEdge["users-persistent", "time"], DirectedEdge["users-persistent", "transformers"], DirectedEdge["users-persistent", "users"], DirectedEdge["users-persistent", "uuid"], DirectedEdge["users-postgresql-simple", "base"], DirectedEdge["users-postgresql-simple", "bytestring"], DirectedEdge["users-postgresql-simple", "mtl"], DirectedEdge["users-postgresql-simple", "postgresql-simple"], DirectedEdge["users-postgresql-simple", "text"], DirectedEdge["users-postgresql-simple", "time"], DirectedEdge["users-postgresql-simple", "users"], DirectedEdge["users-postgresql-simple", "uuid"], DirectedEdge["users-test", "base"], DirectedEdge["users-test", "hspec"], DirectedEdge["users-test", "text"], DirectedEdge["users-test", "users"], DirectedEdge["utc", "attoparsec"], DirectedEdge["utc", "base"], DirectedEdge["utc", "bytestring"], DirectedEdge["utc", "clock"], DirectedEdge["utc", "exceptions"], DirectedEdge["utc", "text"], DirectedEdge["utf8-env", "base"], DirectedEdge["utf8-env", "mtl"], DirectedEdge["utf8-env", "utf8-string"], DirectedEdge["utf8-light", "base"], DirectedEdge["utf8-light", "bytestring"], DirectedEdge["utf8-light", "ghc-prim"], DirectedEdge["utf8-prelude", "base"], DirectedEdge["utf8-prelude", "utf8-string"], DirectedEdge["utf8-string", "base"], DirectedEdge["utf8-string", "bytestring"], DirectedEdge["utility-ht", "base"], DirectedEdge["uu-cco", "ansi-terminal"], DirectedEdge["uu-cco", "base"], DirectedEdge["uu-cco-examples", "base"], DirectedEdge["uu-cco-examples", "uu-cco"], DirectedEdge["uu-cco-examples", "uuagc"], DirectedEdge["uu-cco-examples", "uuagc-cabal"], DirectedEdge["uu-cco-hut-parsing", "base"], DirectedEdge["uu-cco-hut-parsing", "uu-cco"], DirectedEdge["uu-cco-hut-parsing", "uulib"], DirectedEdge["uu-cco-uu-parsinglib", "base"], DirectedEdge["uu-cco-uu-parsinglib", "ListLike"], DirectedEdge["uu-cco-uu-parsinglib", "uu-cco"], DirectedEdge["uu-cco-uu-parsinglib", "uu-parsinglib"], DirectedEdge["uu-interleaved", "base"], DirectedEdge["uu-options", "base"], DirectedEdge["uu-options", "lenses"], DirectedEdge["uu-options", "mtl"], DirectedEdge["uu-options", "template-haskell"], DirectedEdge["uu-options", "transformers"], DirectedEdge["uu-options", "uu-interleaved"], DirectedEdge["uu-options", "uu-parsinglib"], DirectedEdge["uu-parsinglib", "base"], DirectedEdge["uu-parsinglib", "ListLike"], DirectedEdge["uu-parsinglib", "time"], DirectedEdge["uu-parsinglib", "uu-interleaved"], DirectedEdge["uu-tc", "base"], DirectedEdge["uuagc", "array"], DirectedEdge["uuagc", "base"], DirectedEdge["uuagc", "containers"], DirectedEdge["uuagc", "directory"], DirectedEdge["uuagc", "filepath"], DirectedEdge["uuagc", "ghc-prim"], DirectedEdge["uuagc", "haskell-src-exts"], DirectedEdge["uuagc", "mtl"], DirectedEdge["uuagc", "uuagc"], DirectedEdge["uuagc", "uuagc-cabal"], DirectedEdge["uuagc", "uulib"], DirectedEdge["uuagc-bootstrap", "array"], DirectedEdge["uuagc-bootstrap", "base"], DirectedEdge["uuagc-bootstrap", "containers"], DirectedEdge["uuagc-bootstrap", "directory"], DirectedEdge["uuagc-bootstrap", "filepath"], DirectedEdge["uuagc-bootstrap", "ghc-prim"], DirectedEdge["uuagc-bootstrap", "haskell-src-exts"], DirectedEdge["uuagc-bootstrap", "mtl"], DirectedEdge["uuagc-bootstrap", "uulib"], DirectedEdge["uuagc-cabal", "base"], DirectedEdge["uuagc-cabal", "Cabal"], DirectedEdge["uuagc-cabal", "containers"], DirectedEdge["uuagc-cabal", "directory"], DirectedEdge["uuagc-cabal", "filepath"], DirectedEdge["uuagc-cabal", "mtl"], DirectedEdge["uuagc-cabal", "process"], DirectedEdge["uuagc-cabal", "uulib"], DirectedEdge["uuagc-diagrams", "base"], DirectedEdge["uuagc-diagrams", "diagrams-lib"], DirectedEdge["uuagc-diagrams", "SVGFonts"], DirectedEdge["uuagd", "base"], DirectedEdge["uuagd", "blaze-html"], DirectedEdge["uuagd", "process"], DirectedEdge["uuid", "base"], DirectedEdge["uuid", "binary"], DirectedEdge["uuid", "bytestring"], DirectedEdge["uuid", "cryptonite"], DirectedEdge["uuid", "memory"], DirectedEdge["uuid", "network-info"], DirectedEdge["uuid", "random"], DirectedEdge["uuid", "text"], DirectedEdge["uuid", "time"], DirectedEdge["uuid", "uuid-types"], DirectedEdge["uuid-aeson", "aeson"], DirectedEdge["uuid-aeson", "base"], DirectedEdge["uuid-aeson", "text"], DirectedEdge["uuid-aeson", "uuid"], DirectedEdge["uuid-le", "base"], DirectedEdge["uuid-le", "bytestring"], DirectedEdge["uuid-le", "uuid"], DirectedEdge["uuid-orphans", "base"], DirectedEdge["uuid-orphans", "safecopy"], DirectedEdge["uuid-orphans", "text"], DirectedEdge["uuid-orphans", "uuid-types"], DirectedEdge["uuid-orphans", "web-routes"], DirectedEdge["uuid-quasi", "base"], DirectedEdge["uuid-quasi", "template-haskell"], DirectedEdge["uuid-quasi", "uuid"], DirectedEdge["uuid-types", "base"], DirectedEdge["uuid-types", "binary"], DirectedEdge["uuid-types", "bytestring"], DirectedEdge["uuid-types", "deepseq"], DirectedEdge["uuid-types", "hashable"], DirectedEdge["uuid-types", "random"], DirectedEdge["uuid-types", "text"], DirectedEdge["uulib", "base"], DirectedEdge["uulib", "ghc-prim"], DirectedEdge["uvector", "base"], DirectedEdge["uvector", "ghc-prim"], DirectedEdge["uvector-algorithms", "base"], DirectedEdge["uvector-algorithms", "uvector"], DirectedEdge["uxadt", "base"], DirectedEdge["uxadt", "json"], DirectedEdge["uxadt", "MissingH"], DirectedEdge["uxadt", "mtl"], DirectedEdge["uzbl-with-source", "base"], DirectedEdge["uzbl-with-source", "process"], DirectedEdge["v4l2", "base"], DirectedEdge["v4l2", "bindings-DSL"], DirectedEdge["v4l2", "bindings-posix"], DirectedEdge["v4l2", "containers"], DirectedEdge["v4l2", "ioctl"], DirectedEdge["v4l2-examples", "base"], DirectedEdge["v4l2-examples", "GLUT"], DirectedEdge["vacuum", "array"], DirectedEdge["vacuum", "base"], DirectedEdge["vacuum", "containers"], DirectedEdge["vacuum", "ghc-prim"], DirectedEdge["vacuum-cairo", "base"], DirectedEdge["vacuum-cairo", "cairo"], DirectedEdge["vacuum-cairo", "deepseq"], DirectedEdge["vacuum-cairo", "directory"], DirectedEdge["vacuum-cairo", "gtk"], DirectedEdge["vacuum-cairo", "pretty"], DirectedEdge["vacuum-cairo", "process"], DirectedEdge["vacuum-cairo", "strict-concurrency"], DirectedEdge["vacuum-cairo", "svgcairo"], DirectedEdge["vacuum-cairo", "vacuum"], DirectedEdge["vacuum-graphviz", "base"], DirectedEdge["vacuum-graphviz", "filepath"], DirectedEdge["vacuum-graphviz", "graphviz"], DirectedEdge["vacuum-graphviz", "vacuum"], DirectedEdge["vacuum-opengl", "base"], DirectedEdge["vacuum-opengl", "bitmap"], DirectedEdge["vacuum-opengl", "bitmap-opengl"], DirectedEdge["vacuum-opengl", "directory"], DirectedEdge["vacuum-opengl", "filepath"], DirectedEdge["vacuum-opengl", "GLUT"], DirectedEdge["vacuum-opengl", "network"], DirectedEdge["vacuum-opengl", "OpenGL"], DirectedEdge["vacuum-opengl", "pretty"], DirectedEdge["vacuum-opengl", "process"], DirectedEdge["vacuum-opengl", "stb-image"], DirectedEdge["vacuum-opengl", "vacuum"], DirectedEdge["vacuum-ubigraph", "base"], DirectedEdge["vacuum-ubigraph", "containers"], DirectedEdge["vacuum-ubigraph", "hubigraph"], DirectedEdge["vacuum-ubigraph", "vacuum"], DirectedEdge["vado", "attoparsec"], DirectedEdge["vado", "base"], DirectedEdge["vado", "directory"], DirectedEdge["vado", "filepath"], DirectedEdge["vado", "process"], DirectedEdge["vado", "text"], DirectedEdge["valid-names", "base"], DirectedEdge["valid-names", "containers"], DirectedEdge["valid-names", "MonadRandom"], DirectedEdge["validate", "digestive-functors"], DirectedEdge["validate-input", "base"], DirectedEdge["validate-input", "bytestring"], DirectedEdge["validate-input", "either"], DirectedEdge["validate-input", "mtl"], DirectedEdge["validate-input", "pcre-heavy"], DirectedEdge["validate-input", "semigroups"], DirectedEdge["validate-input", "string-conversions"], DirectedEdge["validate-input", "text"], DirectedEdge["validated-literals", "base"], DirectedEdge["validated-literals", "bytestring"], DirectedEdge["validated-literals", "template-haskell"], DirectedEdge["validation", "base"], DirectedEdge["validation", "bifunctors"], DirectedEdge["validation", "lens"], DirectedEdge["validation", "mtl"], DirectedEdge["validation", "semigroupoids"], DirectedEdge["validation", "semigroups"], DirectedEdge["validation", "transformers"], DirectedEdge["validations", "base"], DirectedEdge["validations", "containers"], DirectedEdge["validations", "digestive-functors"], DirectedEdge["validations", "mtl"], DirectedEdge["validations", "text"], DirectedEdge["validations", "transformers"], DirectedEdge["value-supply", "base"], DirectedEdge["vampire", "base"], DirectedEdge["vampire", "deepseq"], DirectedEdge["vampire", "directory"], DirectedEdge["vampire", "dlist"], DirectedEdge["vampire", "fgl"], DirectedEdge["vampire", "graphviz"], DirectedEdge["vampire", "haskell-src-exts"], DirectedEdge["vampire", "mtl"], DirectedEdge["vampire", "optparse-applicative"], DirectedEdge["vampire", "process"], DirectedEdge["vampire", "uniplate"], DirectedEdge["var", "base"], DirectedEdge["var", "ghc-prim"], DirectedEdge["var", "transformers"], DirectedEdge["varan", "ansi-terminal"], DirectedEdge["varan", "base"], DirectedEdge["varan", "bytestring"], DirectedEdge["varan", "cmdargs"], DirectedEdge["varan", "mtl"], DirectedEdge["varan", "parallel"], DirectedEdge["varan", "random"], DirectedEdge["varan", "statistics"], DirectedEdge["variable-precision", "base"], DirectedEdge["variable-precision", "complex-generic"], DirectedEdge["variable-precision", "floatshow"], DirectedEdge["variable-precision", "integer-gmp"], DirectedEdge["variable-precision", "type-level-natural-number"], DirectedEdge["variables", "base"], DirectedEdge["variables", "mtl"], DirectedEdge["variables", "stm"], DirectedEdge["varying", "base"], DirectedEdge["varying", "time"], DirectedEdge["varying", "transformers"], DirectedEdge["varying", "varying"], DirectedEdge["vault", "base"], DirectedEdge["vault", "containers"], DirectedEdge["vault", "hashable"], DirectedEdge["vault", "unordered-containers"], DirectedEdge["vaultaire-common", "async"], DirectedEdge["vaultaire-common", "attoparsec"], DirectedEdge["vaultaire-common", "base"], DirectedEdge["vaultaire-common", "blaze-builder"], DirectedEdge["vaultaire-common", "bytestring"], DirectedEdge["vaultaire-common", "cereal"], DirectedEdge["vaultaire-common", "containers"], DirectedEdge["vaultaire-common", "hashable"], DirectedEdge["vaultaire-common", "hslogger"], DirectedEdge["vaultaire-common", "locators"], DirectedEdge["vaultaire-common", "old-locale"], DirectedEdge["vaultaire-common", "packer"], DirectedEdge["vaultaire-common", "QuickCheck"], DirectedEdge["vaultaire-common", "siphash"], DirectedEdge["vaultaire-common", "text"], DirectedEdge["vaultaire-common", "time"], DirectedEdge["vaultaire-common", "transformers"], DirectedEdge["vaultaire-common", "unix"], DirectedEdge["vaultaire-common", "unordered-containers"], DirectedEdge["vcache", "base"], DirectedEdge["vcache", "bytestring"], DirectedEdge["vcache", "containers"], DirectedEdge["vcache", "direct-murmur-hash"], DirectedEdge["vcache", "easy-file"], DirectedEdge["vcache", "filelock"], DirectedEdge["vcache", "lmdb"], DirectedEdge["vcache", "random"], DirectedEdge["vcache", "stm"], DirectedEdge["vcache", "transformers"], DirectedEdge["vcache-trie", "array"], DirectedEdge["vcache-trie", "base"], DirectedEdge["vcache-trie", "bytestring"], DirectedEdge["vcache-trie", "bytestring-builder"], DirectedEdge["vcache-trie", "vcache"], DirectedEdge["vcard", "base"], DirectedEdge["vcard", "bytestring"], DirectedEdge["vcard", "containers"], DirectedEdge["vcard", "mime-directory"], DirectedEdge["vcatt", "base"], DirectedEdge["vcatt", "extra"], DirectedEdge["vcatt", "shelly"], DirectedEdge["vcatt", "system-filepath"], DirectedEdge["vcatt", "text"], DirectedEdge["vcatt", "vcatt"], DirectedEdge["vcd", "base"], DirectedEdge["vcd", "polyparse"], DirectedEdge["vcs-revision", "base"], DirectedEdge["vcs-revision", "process"], DirectedEdge["vcs-web-hook-parse", "aeson"], DirectedEdge["vcs-web-hook-parse", "base"], DirectedEdge["vcs-web-hook-parse", "bytestring"], DirectedEdge["vcs-web-hook-parse", "text"], DirectedEdge["vcsgui", "base"], DirectedEdge["vcsgui", "directory"], DirectedEdge["vcsgui", "filepath"], DirectedEdge["vcsgui", "gtk"], DirectedEdge["vcsgui", "mtl"], DirectedEdge["vcsgui", "process"], DirectedEdge["vcsgui", "text"], DirectedEdge["vcsgui", "vcswrapper"], DirectedEdge["vcswrapper", "base"], DirectedEdge["vcswrapper", "containers"], DirectedEdge["vcswrapper", "directory"], DirectedEdge["vcswrapper", "filepath"], DirectedEdge["vcswrapper", "hxt"], DirectedEdge["vcswrapper", "mtl"], DirectedEdge["vcswrapper", "parsec"], DirectedEdge["vcswrapper", "process"], DirectedEdge["vcswrapper", "split"], DirectedEdge["vcswrapper", "text"], DirectedEdge["vect", "base"], DirectedEdge["vect", "random"], DirectedEdge["vect-floating", "linear"], DirectedEdge["vect-floating", "base"], DirectedEdge["vect-floating", "random"], DirectedEdge["vect-floating-accelerate", "linear-accelerate"], DirectedEdge["vect-floating-accelerate", "accelerate"], DirectedEdge["vect-floating-accelerate", "base"], DirectedEdge["vect-floating-accelerate", "vect-floating"], DirectedEdge["vect-opengl", "base"], DirectedEdge["vect-opengl", "OpenGL"], DirectedEdge["vect-opengl", "vect"], DirectedEdge["vector", "base"], DirectedEdge["vector", "deepseq"], DirectedEdge["vector", "ghc-prim"], DirectedEdge["vector", "primitive"], DirectedEdge["vector-algorithms", "base"], DirectedEdge["vector-algorithms", "bytestring"], DirectedEdge["vector-algorithms", "mtl"], DirectedEdge["vector-algorithms", "mwc-random"], DirectedEdge["vector-algorithms", "primitive"], DirectedEdge["vector-algorithms", "vector"], DirectedEdge["vector-algorithms", "vector-algorithms"], DirectedEdge["vector-binary", "base"], DirectedEdge["vector-binary", "binary"], DirectedEdge["vector-binary", "vector"], DirectedEdge["vector-binary-instances", "base"], DirectedEdge["vector-binary-instances", "binary"], DirectedEdge["vector-binary-instances", "vector"], DirectedEdge["vector-buffer", "base"], DirectedEdge["vector-buffer", "deepseq"], DirectedEdge["vector-buffer", "vector"], DirectedEdge["vector-bytestring", "base"], DirectedEdge["vector-bytestring", "bytestring"], DirectedEdge["vector-bytestring", "criterion"], DirectedEdge["vector-bytestring", "deepseq"], DirectedEdge["vector-bytestring", "ghc-prim"], DirectedEdge["vector-bytestring", "primitive"], DirectedEdge["vector-bytestring", "vector"], DirectedEdge["vector-bytestring", "vector-bytestring"], DirectedEdge["vector-clock", "base"], DirectedEdge["vector-clock", "binary"], DirectedEdge["vector-clock", "ghc-prim"], DirectedEdge["vector-clock", "hashable"], DirectedEdge["vector-conduit", "base"], DirectedEdge["vector-conduit", "conduit"], DirectedEdge["vector-conduit", "primitive"], DirectedEdge["vector-conduit", "vector"], DirectedEdge["vector-fftw", "base"], DirectedEdge["vector-fftw", "primitive"], DirectedEdge["vector-fftw", "storable-complex"], DirectedEdge["vector-fftw", "vector"], DirectedEdge["vector-functorlazy", "base"], DirectedEdge["vector-functorlazy", "ghc-prim"], DirectedEdge["vector-functorlazy", "primitive"], DirectedEdge["vector-functorlazy", "vector"], DirectedEdge["vector-functorlazy", "vector-th-unbox"], DirectedEdge["vector-heterogenous", "base"], DirectedEdge["vector-heterogenous", "vector"], DirectedEdge["vector-instances", "base"], DirectedEdge["vector-instances", "comonad"], DirectedEdge["vector-instances", "keys"], DirectedEdge["vector-instances", "pointed"], DirectedEdge["vector-instances", "semigroupoids"], DirectedEdge["vector-instances", "semigroups"], DirectedEdge["vector-instances", "vector"], DirectedEdge["vector-instances-collections", "base"], DirectedEdge["vector-instances-collections", "collections-api"], DirectedEdge["vector-instances-collections", "template-haskell"], DirectedEdge["vector-instances-collections", "vector"], DirectedEdge["vector-mmap", "base"], DirectedEdge["vector-mmap", "mmap"], DirectedEdge["vector-mmap", "primitive"], DirectedEdge["vector-mmap", "vector"], DirectedEdge["vector-random", "base"], DirectedEdge["vector-random", "vector"], DirectedEdge["vector-read-instances", "vector"], DirectedEdge["vector-read-instances", "base"], DirectedEdge["vector-read-instances", "vector"], DirectedEdge["vector-sized", "base"], DirectedEdge["vector-sized", "deepseq"], DirectedEdge["vector-sized", "vector"], DirectedEdge["vector-space", "base"], DirectedEdge["vector-space", "Boolean"], DirectedEdge["vector-space", "MemoTrie"], DirectedEdge["vector-space", "NumInstances"], DirectedEdge["vector-space-map", "base"], DirectedEdge["vector-space-map", "containers"], DirectedEdge["vector-space-map", "vector-space"], DirectedEdge["vector-space-opengl", "base"], DirectedEdge["vector-space-opengl", "OpenGL"], DirectedEdge["vector-space-opengl", "vector-space"], DirectedEdge["vector-space-points", "base"], DirectedEdge["vector-space-points", "vector-space"], DirectedEdge["vector-static", "base"], DirectedEdge["vector-static", "primitive"], DirectedEdge["vector-static", "vector"], DirectedEdge["vector-strategies", "base"], DirectedEdge["vector-strategies", "deepseq"], DirectedEdge["vector-strategies", "parallel"], DirectedEdge["vector-strategies", "vector"], DirectedEdge["vector-th-unbox", "base"], DirectedEdge["vector-th-unbox", "template-haskell"], DirectedEdge["vector-th-unbox", "vector"], DirectedEdge["verbalexpressions", "base"], DirectedEdge["verbalexpressions", "regex-pcre"], DirectedEdge["verbosity", "base"], DirectedEdge["verbosity", "binary"], DirectedEdge["verbosity", "cereal"], DirectedEdge["verbosity", "data-default-class"], DirectedEdge["verbosity", "deepseq"], DirectedEdge["verbosity", "ghc-prim"], DirectedEdge["verbosity", "transformers"], DirectedEdge["verdict", "base"], DirectedEdge["verdict", "markdown-unlit"], DirectedEdge["verdict", "mtl"], DirectedEdge["verdict", "text"], DirectedEdge["verdict", "transformers"], DirectedEdge["verdict", "verdict"], DirectedEdge["verdict-json", "aeson"], DirectedEdge["verdict-json", "base"], DirectedEdge["verdict-json", "containers"], DirectedEdge["verdict-json", "text"], DirectedEdge["verdict-json", "unordered-containers"], DirectedEdge["verdict-json", "vector"], DirectedEdge["verdict-json", "verdict"], DirectedEdge["verdict-json", "verdict-json"], DirectedEdge["verilog", "array"], DirectedEdge["verilog", "base"], DirectedEdge["versions", "base"], DirectedEdge["versions", "megaparsec"], DirectedEdge["versions", "semigroups"], DirectedEdge["versions", "text"], DirectedEdge["vhd", "base"], DirectedEdge["vhd", "byteable"], DirectedEdge["vhd", "bytestring"], DirectedEdge["vhd", "cereal"], DirectedEdge["vhd", "cipher-aes"], DirectedEdge["vhd", "cryptohash"], DirectedEdge["vhd", "directory"], DirectedEdge["vhd", "filepath"], DirectedEdge["vhd", "mmap"], DirectedEdge["vhd", "random"], DirectedEdge["vhd", "storable-endian"], DirectedEdge["vhd", "text"], DirectedEdge["vhd", "time"], DirectedEdge["vhd", "vhd"], DirectedEdge["vhdl", "base"], DirectedEdge["vhdl", "mtl"], DirectedEdge["vhdl", "pretty"], DirectedEdge["vhdl", "regex-posix"], DirectedEdge["views", "definitive-base"], DirectedEdge["views", "base"], DirectedEdge["views", "mtl"], DirectedEdge["vigilance", "acid-state"], DirectedEdge["vigilance", "aeson"], DirectedEdge["vigilance", "async"], DirectedEdge["vigilance", "attoparsec"], DirectedEdge["vigilance", "base"], DirectedEdge["vigilance", "blaze-builder"], DirectedEdge["vigilance", "bytestring"], DirectedEdge["vigilance", "classy-prelude"], DirectedEdge["vigilance", "configurator"], DirectedEdge["vigilance", "containers"], DirectedEdge["vigilance", "data-store"], DirectedEdge["vigilance", "directory"], DirectedEdge["vigilance", "either"], DirectedEdge["vigilance", "entropy"], DirectedEdge["vigilance", "errors"], DirectedEdge["vigilance", "fast-logger"], DirectedEdge["vigilance", "http-streams"], DirectedEdge["vigilance", "http-types"], DirectedEdge["vigilance", "io-streams"], DirectedEdge["vigilance", "lens"], DirectedEdge["vigilance", "mime-mail"], DirectedEdge["vigilance", "monad-logger"], DirectedEdge["vigilance", "monad-loops"], DirectedEdge["vigilance", "mtl"], DirectedEdge["vigilance", "optparse-applicative"], DirectedEdge["vigilance", "safecopy"], DirectedEdge["vigilance", "stm"], DirectedEdge["vigilance", "template-haskell"], DirectedEdge["vigilance", "text"], DirectedEdge["vigilance", "time"], DirectedEdge["vigilance", "transformers"], DirectedEdge["vigilance", "unix"], DirectedEdge["vigilance", "unordered-containers"], DirectedEdge["vigilance", "vector"], DirectedEdge["vigilance", "wai"], DirectedEdge["vigilance", "wai-extra"], DirectedEdge["vigilance", "warp"], DirectedEdge["vigilance", "yesod"], DirectedEdge["vigilance", "yesod-core"], DirectedEdge["vigilance", "yesod-platform"], DirectedEdge["vimeta", "aeson"], DirectedEdge["vimeta", "base"], DirectedEdge["vimeta", "byline"], DirectedEdge["vimeta", "bytestring"], DirectedEdge["vimeta", "containers"], DirectedEdge["vimeta", "directory"], DirectedEdge["vimeta", "either"], DirectedEdge["vimeta", "filepath"], DirectedEdge["vimeta", "http-client"], DirectedEdge["vimeta", "http-client-tls"], DirectedEdge["vimeta", "http-types"], DirectedEdge["vimeta", "mtl"], DirectedEdge["vimeta", "old-locale"], DirectedEdge["vimeta", "optparse-applicative"], DirectedEdge["vimeta", "parsec"], DirectedEdge["vimeta", "process"], DirectedEdge["vimeta", "temporary"], DirectedEdge["vimeta", "text"], DirectedEdge["vimeta", "themoviedb"], DirectedEdge["vimeta", "time"], DirectedEdge["vimeta", "time-locale-compat"], DirectedEdge["vimeta", "transformers"], DirectedEdge["vimeta", "vimeta"], DirectedEdge["vimeta", "xdg-basedir"], DirectedEdge["vimeta", "yaml"], DirectedEdge["vimus", "base"], DirectedEdge["vimus", "bytestring"], DirectedEdge["vimus", "containers"], DirectedEdge["vimus", "data-default"], DirectedEdge["vimus", "deepseq"], DirectedEdge["vimus", "directory"], DirectedEdge["vimus", "filepath"], DirectedEdge["vimus", "libmpd"], DirectedEdge["vimus", "mtl"], DirectedEdge["vimus", "old-locale"], DirectedEdge["vimus", "process"], DirectedEdge["vimus", "template-haskell"], DirectedEdge["vimus", "time"], DirectedEdge["vimus", "time-locale-compat"], DirectedEdge["vimus", "utf8-string"], DirectedEdge["vimus", "vimus"], DirectedEdge["vimus", "wcwidth"], DirectedEdge["vintage-basic", "array"], DirectedEdge["vintage-basic", "base"], DirectedEdge["vintage-basic", "directory"], DirectedEdge["vintage-basic", "filepath"], DirectedEdge["vintage-basic", "HUnit"], DirectedEdge["vintage-basic", "mtl"], DirectedEdge["vintage-basic", "parsec"], DirectedEdge["vintage-basic", "process"], DirectedEdge["vintage-basic", "random"], DirectedEdge["vintage-basic", "regex-base"], DirectedEdge["vintage-basic", "regex-posix"], DirectedEdge["vintage-basic", "time"], DirectedEdge["vinyl", "base"], DirectedEdge["vinyl", "ghc-prim"], DirectedEdge["vinyl-gl", "base"], DirectedEdge["vinyl-gl", "containers"], DirectedEdge["vinyl-gl", "GLUtil"], DirectedEdge["vinyl-gl", "linear"], DirectedEdge["vinyl-gl", "OpenGL"], DirectedEdge["vinyl-gl", "tagged"], DirectedEdge["vinyl-gl", "transformers"], DirectedEdge["vinyl-gl", "vector"], DirectedEdge["vinyl-gl", "vinyl"], DirectedEdge["vinyl-json", "aeson"], DirectedEdge["vinyl-json", "base"], DirectedEdge["vinyl-json", "bytestring"], DirectedEdge["vinyl-json", "hscolour"], DirectedEdge["vinyl-json", "template-haskell"], DirectedEdge["vinyl-json", "text"], DirectedEdge["vinyl-json", "vinyl"], DirectedEdge["vinyl-operational", "base"], DirectedEdge["vinyl-operational", "operational"], DirectedEdge["vinyl-operational", "operational-extra"], DirectedEdge["vinyl-operational", "vinyl-plus"], DirectedEdge["vinyl-plus", "base"], DirectedEdge["vinyl-plus", "contravariant"], DirectedEdge["vinyl-plus", "ghc-prim"], DirectedEdge["vinyl-plus", "profunctors"], DirectedEdge["vinyl-plus", "transformers"], DirectedEdge["vinyl-plus", "unordered-containers"], DirectedEdge["vinyl-plus", "vinyl"], DirectedEdge["vinyl-utils", "base"], DirectedEdge["vinyl-utils", "contravariant"], DirectedEdge["vinyl-utils", "transformers"], DirectedEdge["vinyl-utils", "vinyl"], DirectedEdge["vinyl-vectors", "base"], DirectedEdge["vinyl-vectors", "bytestring"], DirectedEdge["vinyl-vectors", "constraints"], DirectedEdge["vinyl-vectors", "data-default"], DirectedEdge["vinyl-vectors", "microlens"], DirectedEdge["vinyl-vectors", "primitive"], DirectedEdge["vinyl-vectors", "template-haskell"], DirectedEdge["vinyl-vectors", "text"], DirectedEdge["vinyl-vectors", "vector"], DirectedEdge["vinyl-vectors", "vector-algorithms"], DirectedEdge["vinyl-vectors", "vinyl"], DirectedEdge["vinyl-vectors", "vinyl-vectors"], DirectedEdge["virthualenv", "base"], DirectedEdge["virthualenv", "bytestring"], DirectedEdge["virthualenv", "Cabal"], DirectedEdge["virthualenv", "directory"], DirectedEdge["virthualenv", "file-embed"], DirectedEdge["virthualenv", "filepath"], DirectedEdge["virthualenv", "mtl"], DirectedEdge["virthualenv", "process"], DirectedEdge["virthualenv", "safe"], DirectedEdge["virthualenv", "split"], DirectedEdge["visibility", "base"], DirectedEdge["visibility", "containers"], DirectedEdge["vision", "array"], DirectedEdge["vision", "base"], DirectedEdge["vision", "containers"], DirectedEdge["vision", "directory"], DirectedEdge["vision", "filepath"], DirectedEdge["vision", "glib"], DirectedEdge["vision", "gtk"], DirectedEdge["vision", "json"], DirectedEdge["vision", "MonadCatchIO-transformers"], DirectedEdge["vision", "mtl"], DirectedEdge["vision", "parsec"], DirectedEdge["vision", "PSQueue"], DirectedEdge["vision", "stm"], DirectedEdge["vision", "url"], DirectedEdge["vision", "utf8-string"], DirectedEdge["vision", "xmms2-client"], DirectedEdge["vision", "xmms2-client-glib"], DirectedEdge["visual-graphrewrite", "base"], DirectedEdge["visual-graphrewrite", "cairo"], DirectedEdge["visual-graphrewrite", "containers"], DirectedEdge["visual-graphrewrite", "directory"], DirectedEdge["visual-graphrewrite", "fgl"], DirectedEdge["visual-graphrewrite", "glade"], DirectedEdge["visual-graphrewrite", "graphviz"], DirectedEdge["visual-graphrewrite", "gtk"], DirectedEdge["visual-graphrewrite", "haskell-src"], DirectedEdge["visual-graphrewrite", "ipprint"], DirectedEdge["visual-graphrewrite", "isevaluated"], DirectedEdge["visual-graphrewrite", "lazysmallcheck"], DirectedEdge["visual-graphrewrite", "parallel"], DirectedEdge["visual-graphrewrite", "pretty"], DirectedEdge["visual-graphrewrite", "process"], DirectedEdge["visual-graphrewrite", "strict-concurrency"], DirectedEdge["visual-graphrewrite", "svgcairo"], DirectedEdge["visual-graphrewrite", "value-supply"], DirectedEdge["visual-prof", "base"], DirectedEdge["visual-prof", "containers"], DirectedEdge["visual-prof", "directory"], DirectedEdge["visual-prof", "filepath"], DirectedEdge["visual-prof", "haskell-src-exts"], DirectedEdge["visual-prof", "mtl"], DirectedEdge["visual-prof", "pretty"], DirectedEdge["visual-prof", "process"], DirectedEdge["visual-prof", "regexpr"], DirectedEdge["visual-prof", "split"], DirectedEdge["visual-prof", "uniplate"], DirectedEdge["vivid", "base"], DirectedEdge["vivid", "binary"], DirectedEdge["vivid", "bytestring"], DirectedEdge["vivid", "containers"], DirectedEdge["vivid", "filepath"], DirectedEdge["vivid", "hashable"], DirectedEdge["vivid", "MonadRandom"], DirectedEdge["vivid", "mtl"], DirectedEdge["vivid", "network"], DirectedEdge["vivid", "process"], DirectedEdge["vivid", "random"], DirectedEdge["vivid", "random-shuffle"], DirectedEdge["vivid", "split"], DirectedEdge["vivid", "stm"], DirectedEdge["vivid", "time"], DirectedEdge["vivid", "transformers"], DirectedEdge["vk-aws-route53", "aws"], DirectedEdge["vk-aws-route53", "base"], DirectedEdge["vk-aws-route53", "bytestring"], DirectedEdge["vk-aws-route53", "containers"], DirectedEdge["vk-aws-route53", "http-conduit"], DirectedEdge["vk-aws-route53", "http-types"], DirectedEdge["vk-aws-route53", "old-locale"], DirectedEdge["vk-aws-route53", "resourcet"], DirectedEdge["vk-aws-route53", "text"], DirectedEdge["vk-aws-route53", "time"], DirectedEdge["vk-aws-route53", "xml-conduit"], DirectedEdge["vk-aws-route53", "xml-hamlet"], DirectedEdge["vk-posix-pty", "base"], DirectedEdge["vk-posix-pty", "bytestring"], DirectedEdge["vk-posix-pty", "process"], DirectedEdge["vk-posix-pty", "unix"], DirectedEdge["vk-posix-pty", "vk-posix-pty"], DirectedEdge["vocabulary-kadma", "base"], DirectedEdge["vocabulary-kadma", "smaoin"], DirectedEdge["void", "base"], DirectedEdge["void", "deepseq"], DirectedEdge["void", "ghc-prim"], DirectedEdge["void", "hashable"], DirectedEdge["void", "semigroups"], DirectedEdge["vorbiscomment", "base"], DirectedEdge["vorbiscomment", "binary-strict"], DirectedEdge["vorbiscomment", "bytestring"], DirectedEdge["vorbiscomment", "mtl"], DirectedEdge["vorbiscomment", "utf8-string"], DirectedEdge["vowpal-utils", "base"], DirectedEdge["vowpal-utils", "bytestring"], DirectedEdge["voyeur", "base"], DirectedEdge["voyeur", "bytestring"], DirectedEdge["voyeur", "process"], DirectedEdge["voyeur", "utf8-string"], DirectedEdge["vrpn", "base"], DirectedEdge["vte", "base"], DirectedEdge["vte", "glib"], DirectedEdge["vte", "gtk"], DirectedEdge["vte", "pango"], DirectedEdge["vtegtk3", "base"], DirectedEdge["vtegtk3", "glib"], DirectedEdge["vtegtk3", "pango"], DirectedEdge["vty", "base"], DirectedEdge["vty", "blaze-builder"], DirectedEdge["vty", "bytestring"], DirectedEdge["vty", "containers"], DirectedEdge["vty", "data-default"], DirectedEdge["vty", "deepseq"], DirectedEdge["vty", "directory"], DirectedEdge["vty", "filepath"], DirectedEdge["vty", "hashable"], DirectedEdge["vty", "microlens"], DirectedEdge["vty", "microlens-mtl"], DirectedEdge["vty", "microlens-th"], DirectedEdge["vty", "mtl"], DirectedEdge["vty", "parallel"], DirectedEdge["vty", "parsec"], DirectedEdge["vty", "stm"], DirectedEdge["vty", "terminfo"], DirectedEdge["vty", "text"], DirectedEdge["vty", "transformers"], DirectedEdge["vty", "unix"], DirectedEdge["vty", "utf8-string"], DirectedEdge["vty", "vector"], DirectedEdge["vty", "vty"], DirectedEdge["vty-examples", "array"], DirectedEdge["vty-examples", "base"], DirectedEdge["vty-examples", "bytestring"], DirectedEdge["vty-examples", "Cabal"], DirectedEdge["vty-examples", "containers"], DirectedEdge["vty-examples", "data-default"], DirectedEdge["vty-examples", "deepseq"], DirectedEdge["vty-examples", "lens"], DirectedEdge["vty-examples", "mtl"], DirectedEdge["vty-examples", "parallel"], DirectedEdge["vty-examples", "parsec"], DirectedEdge["vty-examples", "QuickCheck"], DirectedEdge["vty-examples", "random"], DirectedEdge["vty-examples", "string-qq"], DirectedEdge["vty-examples", "terminfo"], DirectedEdge["vty-examples", "text"], DirectedEdge["vty-examples", "unix"], DirectedEdge["vty-examples", "utf8-string"], DirectedEdge["vty-examples", "vector"], DirectedEdge["vty-examples", "vty"], DirectedEdge["vty-menu", "base"], DirectedEdge["vty-menu", "vty"], DirectedEdge["vty-ui", "brick"], DirectedEdge["vty-ui", "array"], DirectedEdge["vty-ui", "base"], DirectedEdge["vty-ui", "bytestring"], DirectedEdge["vty-ui", "containers"], DirectedEdge["vty-ui", "data-default"], DirectedEdge["vty-ui", "directory"], DirectedEdge["vty-ui", "filepath"], DirectedEdge["vty-ui", "mtl"], DirectedEdge["vty-ui", "QuickCheck"], DirectedEdge["vty-ui", "random"], DirectedEdge["vty-ui", "regex-base"], DirectedEdge["vty-ui", "stm"], DirectedEdge["vty-ui", "text"], DirectedEdge["vty-ui", "time"], DirectedEdge["vty-ui", "unix"], DirectedEdge["vty-ui", "vector"], DirectedEdge["vty-ui", "vty"], DirectedEdge["vty-ui", "vty-ui"], DirectedEdge["vty-ui-extras", "base"], DirectedEdge["vty-ui-extras", "regex-base"], DirectedEdge["vty-ui-extras", "regex-pcre"], DirectedEdge["vty-ui-extras", "vty"], DirectedEdge["vty-ui-extras", "vty-ui"], DirectedEdge["vulkan", "base"], DirectedEdge["vulkan", "vector-sized"], DirectedEdge["wacom-daemon", "aeson"], DirectedEdge["wacom-daemon", "base"], DirectedEdge["wacom-daemon", "bytestring"], DirectedEdge["wacom-daemon", "containers"], DirectedEdge["wacom-daemon", "directory"], DirectedEdge["wacom-daemon", "filepath"], DirectedEdge["wacom-daemon", "Glob"], DirectedEdge["wacom-daemon", "libnotify"], DirectedEdge["wacom-daemon", "process"], DirectedEdge["wacom-daemon", "select"], DirectedEdge["wacom-daemon", "text"], DirectedEdge["wacom-daemon", "udev"], DirectedEdge["wacom-daemon", "unordered-containers"], DirectedEdge["wacom-daemon", "vector"], DirectedEdge["wacom-daemon", "yaml"], DirectedEdge["waddle", "base"], DirectedEdge["waddle", "binary"], DirectedEdge["waddle", "bytestring"], DirectedEdge["waddle", "case-insensitive"], DirectedEdge["waddle", "containers"], DirectedEdge["waddle", "directory"], DirectedEdge["waddle", "JuicyPixels"], DirectedEdge["waddle", "waddle"], DirectedEdge["wai", "base"], DirectedEdge["wai", "blaze-builder"], DirectedEdge["wai", "bytestring"], DirectedEdge["wai", "bytestring-builder"], DirectedEdge["wai", "http-types"], DirectedEdge["wai", "network"], DirectedEdge["wai", "text"], DirectedEdge["wai", "transformers"], DirectedEdge["wai", "vault"], DirectedEdge["wai-accept-language", "base"], DirectedEdge["wai-accept-language", "bytestring"], DirectedEdge["wai-accept-language", "file-embed"], DirectedEdge["wai-accept-language", "http-types"], DirectedEdge["wai-accept-language", "text"], DirectedEdge["wai-accept-language", "wai"], DirectedEdge["wai-accept-language", "wai-accept-language"], DirectedEdge["wai-accept-language", "wai-app-static"], DirectedEdge["wai-accept-language", "wai-extra"], DirectedEdge["wai-accept-language", "warp"], DirectedEdge["wai-app-file-cgi", "array"], DirectedEdge["wai-app-file-cgi", "attoparsec"], DirectedEdge["wai-app-file-cgi", "attoparsec-conduit"], DirectedEdge["wai-app-file-cgi", "base"], DirectedEdge["wai-app-file-cgi", "blaze-builder"], DirectedEdge["wai-app-file-cgi", "blaze-html"], DirectedEdge["wai-app-file-cgi", "bytestring"], DirectedEdge["wai-app-file-cgi", "case-insensitive"], DirectedEdge["wai-app-file-cgi", "conduit"], DirectedEdge["wai-app-file-cgi", "conduit-extra"], DirectedEdge["wai-app-file-cgi", "containers"], DirectedEdge["wai-app-file-cgi", "data-default-class"], DirectedEdge["wai-app-file-cgi", "directory"], DirectedEdge["wai-app-file-cgi", "filepath"], DirectedEdge["wai-app-file-cgi", "http-client"], DirectedEdge["wai-app-file-cgi", "http-conduit"], DirectedEdge["wai-app-file-cgi", "http-date"], DirectedEdge["wai-app-file-cgi", "http-types"], DirectedEdge["wai-app-file-cgi", "io-choice"], DirectedEdge["wai-app-file-cgi", "lifted-base"], DirectedEdge["wai-app-file-cgi", "mime-types"], DirectedEdge["wai-app-file-cgi", "network"], DirectedEdge["wai-app-file-cgi", "process"], DirectedEdge["wai-app-file-cgi", "sockaddr"], DirectedEdge["wai-app-file-cgi", "static-hash"], DirectedEdge["wai-app-file-cgi", "text"], DirectedEdge["wai-app-file-cgi", "transformers"], DirectedEdge["wai-app-file-cgi", "unix"], DirectedEdge["wai-app-file-cgi", "wai"], DirectedEdge["wai-app-file-cgi", "wai-conduit"], DirectedEdge["wai-app-file-cgi", "warp"], DirectedEdge["wai-app-static", "base"], DirectedEdge["wai-app-static", "blaze-builder"], DirectedEdge["wai-app-static", "blaze-html"], DirectedEdge["wai-app-static", "blaze-markup"], DirectedEdge["wai-app-static", "bytestring"], DirectedEdge["wai-app-static", "containers"], DirectedEdge["wai-app-static", "cryptonite"], DirectedEdge["wai-app-static", "directory"], DirectedEdge["wai-app-static", "file-embed"], DirectedEdge["wai-app-static", "filepath"], DirectedEdge["wai-app-static", "http-date"], DirectedEdge["wai-app-static", "http-types"], DirectedEdge["wai-app-static", "memory"], DirectedEdge["wai-app-static", "mime-types"], DirectedEdge["wai-app-static", "old-locale"], DirectedEdge["wai-app-static", "optparse-applicative"], DirectedEdge["wai-app-static", "template-haskell"], DirectedEdge["wai-app-static", "text"], DirectedEdge["wai-app-static", "time"], DirectedEdge["wai-app-static", "transformers"], DirectedEdge["wai-app-static", "unix-compat"], DirectedEdge["wai-app-static", "unordered-containers"], DirectedEdge["wai-app-static", "wai"], DirectedEdge["wai-app-static", "wai-app-static"], DirectedEdge["wai-app-static", "wai-extra"], DirectedEdge["wai-app-static", "warp"], DirectedEdge["wai-app-static", "zlib"], DirectedEdge["wai-conduit", "base"], DirectedEdge["wai-conduit", "blaze-builder"], DirectedEdge["wai-conduit", "bytestring"], DirectedEdge["wai-conduit", "conduit"], DirectedEdge["wai-conduit", "http-types"], DirectedEdge["wai-conduit", "transformers"], DirectedEdge["wai-conduit", "wai"], DirectedEdge["wai-cors", "attoparsec"], DirectedEdge["wai-cors", "base"], DirectedEdge["wai-cors", "base-unicode-symbols"], DirectedEdge["wai-cors", "bytestring"], DirectedEdge["wai-cors", "case-insensitive"], DirectedEdge["wai-cors", "charset"], DirectedEdge["wai-cors", "http-types"], DirectedEdge["wai-cors", "mtl"], DirectedEdge["wai-cors", "parsers"], DirectedEdge["wai-cors", "resourcet"], DirectedEdge["wai-cors", "transformers"], DirectedEdge["wai-cors", "transformers-compat"], DirectedEdge["wai-cors", "wai"], DirectedEdge["wai-devel", "array"], DirectedEdge["wai-devel", "base"], DirectedEdge["wai-devel", "blaze-html"], DirectedEdge["wai-devel", "bytestring"], DirectedEdge["wai-devel", "Cabal-ide-backend"], DirectedEdge["wai-devel", "directory"], DirectedEdge["wai-devel", "file-embed"], DirectedEdge["wai-devel", "filepath"], DirectedEdge["wai-devel", "fsnotify"], DirectedEdge["wai-devel", "ghc"], DirectedEdge["wai-devel", "Glob"], DirectedEdge["wai-devel", "http-client"], DirectedEdge["wai-devel", "http-conduit"], DirectedEdge["wai-devel", "http-reverse-proxy"], DirectedEdge["wai-devel", "http-types"], DirectedEdge["wai-devel", "ide-backend"], DirectedEdge["wai-devel", "MissingH"], DirectedEdge["wai-devel", "network"], DirectedEdge["wai-devel", "optparse-applicative"], DirectedEdge["wai-devel", "process"], DirectedEdge["wai-devel", "shakespeare"], DirectedEdge["wai-devel", "split"], DirectedEdge["wai-devel", "stm"], DirectedEdge["wai-devel", "streaming-commons"], DirectedEdge["wai-devel", "system-filepath"], DirectedEdge["wai-devel", "text"], DirectedEdge["wai-devel", "time"], DirectedEdge["wai-devel", "transformers"], DirectedEdge["wai-devel", "wai"], DirectedEdge["wai-devel", "wai-devel"], DirectedEdge["wai-devel", "warp"], DirectedEdge["wai-devel", "websockets"], DirectedEdge["wai-digestive-functors", "base"], DirectedEdge["wai-digestive-functors", "digestive-functors"], DirectedEdge["wai-digestive-functors", "http-types"], DirectedEdge["wai-digestive-functors", "resourcet"], DirectedEdge["wai-digestive-functors", "text"], DirectedEdge["wai-digestive-functors", "transformers"], DirectedEdge["wai-digestive-functors", "wai"], DirectedEdge["wai-digestive-functors", "wai-extra"], DirectedEdge["wai-digestive-functors", "wai-util"], DirectedEdge["wai-dispatch", "base"], DirectedEdge["wai-dispatch", "text"], DirectedEdge["wai-dispatch", "wai"], DirectedEdge["wai-dispatch", "yesod-routes"], DirectedEdge["wai-eventsource", "wai-extra"], DirectedEdge["wai-eventsource", "wai"], DirectedEdge["wai-extra", "aeson"], DirectedEdge["wai-extra", "ansi-terminal"], DirectedEdge["wai-extra", "base"], DirectedEdge["wai-extra", "base64-bytestring"], DirectedEdge["wai-extra", "blaze-builder"], DirectedEdge["wai-extra", "bytestring"], DirectedEdge["wai-extra", "case-insensitive"], DirectedEdge["wai-extra", "containers"], DirectedEdge["wai-extra", "cookie"], DirectedEdge["wai-extra", "data-default-class"], DirectedEdge["wai-extra", "deepseq"], DirectedEdge["wai-extra", "directory"], DirectedEdge["wai-extra", "fast-logger"], DirectedEdge["wai-extra", "http-types"], DirectedEdge["wai-extra", "iproute"], DirectedEdge["wai-extra", "lifted-base"], DirectedEdge["wai-extra", "network"], DirectedEdge["wai-extra", "old-locale"], DirectedEdge["wai-extra", "resourcet"], DirectedEdge["wai-extra", "streaming-commons"], DirectedEdge["wai-extra", "stringsearch"], DirectedEdge["wai-extra", "text"], DirectedEdge["wai-extra", "time"], DirectedEdge["wai-extra", "transformers"], DirectedEdge["wai-extra", "unix"], DirectedEdge["wai-extra", "unix-compat"], DirectedEdge["wai-extra", "vault"], DirectedEdge["wai-extra", "void"], DirectedEdge["wai-extra", "wai"], DirectedEdge["wai-extra", "wai-logger"], DirectedEdge["wai-extra", "zlib"], DirectedEdge["wai-frontend-monadcgi", "base"], DirectedEdge["wai-frontend-monadcgi", "bytestring"], DirectedEdge["wai-frontend-monadcgi", "case-insensitive"], DirectedEdge["wai-frontend-monadcgi", "cgi"], DirectedEdge["wai-frontend-monadcgi", "containers"], DirectedEdge["wai-frontend-monadcgi", "http-types"], DirectedEdge["wai-frontend-monadcgi", "transformers"], DirectedEdge["wai-frontend-monadcgi", "wai"], DirectedEdge["wai-graceful", "base"], DirectedEdge["wai-graceful", "http-types"], DirectedEdge["wai-graceful", "mtl"], DirectedEdge["wai-graceful", "resourcet"], DirectedEdge["wai-graceful", "unix"], DirectedEdge["wai-graceful", "wai"], DirectedEdge["wai-handler-devel", "yesod-bin"], DirectedEdge["wai-handler-devel", "attoparsec"], DirectedEdge["wai-handler-devel", "base"], DirectedEdge["wai-handler-devel", "bytestring"], DirectedEdge["wai-handler-devel", "cmdargs"], DirectedEdge["wai-handler-devel", "directory"], DirectedEdge["wai-handler-devel", "hint"], DirectedEdge["wai-handler-devel", "http-types"], DirectedEdge["wai-handler-devel", "network"], DirectedEdge["wai-handler-devel", "old-time"], DirectedEdge["wai-handler-devel", "text"], DirectedEdge["wai-handler-devel", "time"], DirectedEdge["wai-handler-devel", "transformers"], DirectedEdge["wai-handler-devel", "wai"], DirectedEdge["wai-handler-devel", "wai-extra"], DirectedEdge["wai-handler-devel", "warp"], DirectedEdge["wai-handler-fastcgi", "base"], DirectedEdge["wai-handler-fastcgi", "bytestring"], DirectedEdge["wai-handler-fastcgi", "wai"], DirectedEdge["wai-handler-fastcgi", "wai-extra"], DirectedEdge["wai-handler-launch", "async"], DirectedEdge["wai-handler-launch", "base"], DirectedEdge["wai-handler-launch", "blaze-builder"], DirectedEdge["wai-handler-launch", "bytestring"], DirectedEdge["wai-handler-launch", "http-types"], DirectedEdge["wai-handler-launch", "process"], DirectedEdge["wai-handler-launch", "streaming-commons"], DirectedEdge["wai-handler-launch", "transformers"], DirectedEdge["wai-handler-launch", "wai"], DirectedEdge["wai-handler-launch", "warp"], DirectedEdge["wai-handler-scgi", "wai-extra"], DirectedEdge["wai-handler-scgi", "base"], DirectedEdge["wai-handler-scgi", "bytestring"], DirectedEdge["wai-handler-scgi", "wai"], DirectedEdge["wai-handler-scgi", "wai-extra"], DirectedEdge["wai-handler-snap", "base"], DirectedEdge["wai-handler-snap", "bytestring"], DirectedEdge["wai-handler-snap", "containers"], DirectedEdge["wai-handler-snap", "enumerator"], DirectedEdge["wai-handler-snap", "snap-core"], DirectedEdge["wai-handler-snap", "snap-server"], DirectedEdge["wai-handler-snap", "transformers"], DirectedEdge["wai-handler-snap", "wai"], DirectedEdge["wai-handler-webkit", "base"], DirectedEdge["wai-handler-webkit", "wai"], DirectedEdge["wai-handler-webkit", "warp"], DirectedEdge["wai-hastache", "base"], DirectedEdge["wai-hastache", "bytestring"], DirectedEdge["wai-hastache", "hastache"], DirectedEdge["wai-hastache", "http-types"], DirectedEdge["wai-hastache", "transformers"], DirectedEdge["wai-hastache", "wai"], DirectedEdge["wai-hmac-auth", "base"], DirectedEdge["wai-hmac-auth", "base64-bytestring"], DirectedEdge["wai-hmac-auth", "bifunctors"], DirectedEdge["wai-hmac-auth", "byteable"], DirectedEdge["wai-hmac-auth", "bytestring"], DirectedEdge["wai-hmac-auth", "containers"], DirectedEdge["wai-hmac-auth", "cryptohash"], DirectedEdge["wai-hmac-auth", "http-types"], DirectedEdge["wai-hmac-auth", "monad-loops"], DirectedEdge["wai-hmac-auth", "mtl"], DirectedEdge["wai-hmac-auth", "transformers"], DirectedEdge["wai-hmac-auth", "wai"], DirectedEdge["wai-lens", "base"], DirectedEdge["wai-lens", "bytestring"], DirectedEdge["wai-lens", "http-types"], DirectedEdge["wai-lens", "lens"], DirectedEdge["wai-lens", "network"], DirectedEdge["wai-lens", "text"], DirectedEdge["wai-lens", "vault"], DirectedEdge["wai-lens", "wai"], DirectedEdge["wai-lite", "simple"], DirectedEdge["wai-lite", "base"], DirectedEdge["wai-lite", "bytestring"], DirectedEdge["wai-lite", "conduit"], DirectedEdge["wai-lite", "http-types"], DirectedEdge["wai-lite", "text"], DirectedEdge["wai-lite", "transformers"], DirectedEdge["wai-lite", "wai"], DirectedEdge["wai-lite", "wai-extra"], DirectedEdge["wai-logger", "base"], DirectedEdge["wai-logger", "blaze-builder"], DirectedEdge["wai-logger", "byteorder"], DirectedEdge["wai-logger", "bytestring"], DirectedEdge["wai-logger", "case-insensitive"], DirectedEdge["wai-logger", "fast-logger"], DirectedEdge["wai-logger", "http-types"], DirectedEdge["wai-logger", "network"], DirectedEdge["wai-logger", "old-locale"], DirectedEdge["wai-logger", "time"], DirectedEdge["wai-logger", "unix"], DirectedEdge["wai-logger", "unix-time"], DirectedEdge["wai-logger", "wai"], DirectedEdge["wai-logger-prefork", "base"], DirectedEdge["wai-logger-prefork", "bytestring"], DirectedEdge["wai-logger-prefork", "date-cache"], DirectedEdge["wai-logger-prefork", "fast-logger"], DirectedEdge["wai-logger-prefork", "http-types"], DirectedEdge["wai-logger-prefork", "unix"], DirectedEdge["wai-logger-prefork", "wai"], DirectedEdge["wai-logger-prefork", "wai-logger"], DirectedEdge["wai-make-assets", "base"], DirectedEdge["wai-make-assets", "bytestring"], DirectedEdge["wai-make-assets", "directory"], DirectedEdge["wai-make-assets", "getopt-generics"], DirectedEdge["wai-make-assets", "http-types"], DirectedEdge["wai-make-assets", "shake"], DirectedEdge["wai-make-assets", "string-conversions"], DirectedEdge["wai-make-assets", "wai"], DirectedEdge["wai-make-assets", "wai-app-static"], DirectedEdge["wai-make-assets", "warp"], DirectedEdge["wai-middleware-cache", "base"], DirectedEdge["wai-middleware-cache", "binary"], DirectedEdge["wai-middleware-cache", "blaze-builder-conduit"], DirectedEdge["wai-middleware-cache", "bytestring"], DirectedEdge["wai-middleware-cache", "conduit"], DirectedEdge["wai-middleware-cache", "crypto-conduit"], DirectedEdge["wai-middleware-cache", "http-types"], DirectedEdge["wai-middleware-cache", "wai"], DirectedEdge["wai-middleware-cache-redis", "base"], DirectedEdge["wai-middleware-cache-redis", "binary"], DirectedEdge["wai-middleware-cache-redis", "blaze-builder-conduit"], DirectedEdge["wai-middleware-cache-redis", "bytestring"], DirectedEdge["wai-middleware-cache-redis", "case-insensitive"], DirectedEdge["wai-middleware-cache-redis", "conduit"], DirectedEdge["wai-middleware-cache-redis", "hedis"], DirectedEdge["wai-middleware-cache-redis", "hedis-pile"], DirectedEdge["wai-middleware-cache-redis", "http-types"], DirectedEdge["wai-middleware-cache-redis", "transformers"], DirectedEdge["wai-middleware-cache-redis", "wai"], DirectedEdge["wai-middleware-cache-redis", "wai-middleware-cache"], DirectedEdge["wai-middleware-caching", "base"], DirectedEdge["wai-middleware-caching", "blaze-builder"], DirectedEdge["wai-middleware-caching", "bytestring"], DirectedEdge["wai-middleware-caching", "http-types"], DirectedEdge["wai-middleware-caching", "wai"], DirectedEdge["wai-middleware-caching-lru", "base"], DirectedEdge["wai-middleware-caching-lru", "blaze-builder"], DirectedEdge["wai-middleware-caching-lru", "bytestring"], DirectedEdge["wai-middleware-caching-lru", "http-types"], DirectedEdge["wai-middleware-caching-lru", "lrucache"], DirectedEdge["wai-middleware-caching-lru", "text"], DirectedEdge["wai-middleware-caching-lru", "wai"], DirectedEdge["wai-middleware-caching-lru", "wai-middleware-caching"], DirectedEdge["wai-middleware-caching-redis", "base"], DirectedEdge["wai-middleware-caching-redis", "blaze-builder"], DirectedEdge["wai-middleware-caching-redis", "bytestring"], DirectedEdge["wai-middleware-caching-redis", "hedis"], DirectedEdge["wai-middleware-caching-redis", "http-types"], DirectedEdge["wai-middleware-caching-redis", "text"], DirectedEdge["wai-middleware-caching-redis", "wai"], DirectedEdge["wai-middleware-caching-redis", "wai-middleware-caching"], DirectedEdge["wai-middleware-catch", "base"], DirectedEdge["wai-middleware-catch", "bytestring"], DirectedEdge["wai-middleware-catch", "http-types"], DirectedEdge["wai-middleware-catch", "lifted-base"], DirectedEdge["wai-middleware-catch", "wai"], DirectedEdge["wai-middleware-consul", "async"], DirectedEdge["wai-middleware-consul", "base"], DirectedEdge["wai-middleware-consul", "base-prelude"], DirectedEdge["wai-middleware-consul", "bytestring"], DirectedEdge["wai-middleware-consul", "conduit"], DirectedEdge["wai-middleware-consul", "conduit-extra"], DirectedEdge["wai-middleware-consul", "consul-haskell"], DirectedEdge["wai-middleware-consul", "enclosed-exceptions"], DirectedEdge["wai-middleware-consul", "http-client"], DirectedEdge["wai-middleware-consul", "http-types"], DirectedEdge["wai-middleware-consul", "monad-control"], DirectedEdge["wai-middleware-consul", "monad-logger"], DirectedEdge["wai-middleware-consul", "network"], DirectedEdge["wai-middleware-consul", "process"], DirectedEdge["wai-middleware-consul", "resourcet"], DirectedEdge["wai-middleware-consul", "text"], DirectedEdge["wai-middleware-consul", "transformers"], DirectedEdge["wai-middleware-consul", "void"], DirectedEdge["wai-middleware-consul", "wai"], DirectedEdge["wai-middleware-consul", "wai-app-static"], DirectedEdge["wai-middleware-consul", "wai-conduit"], DirectedEdge["wai-middleware-consul", "wai-extra"], DirectedEdge["wai-middleware-consul", "wai-middleware-consul"], DirectedEdge["wai-middleware-consul", "warp"], DirectedEdge["wai-middleware-content-type", "aeson"], DirectedEdge["wai-middleware-content-type", "base"], DirectedEdge["wai-middleware-content-type", "blaze-builder"], DirectedEdge["wai-middleware-content-type", "blaze-html"], DirectedEdge["wai-middleware-content-type", "bytestring"], DirectedEdge["wai-middleware-content-type", "clay"], DirectedEdge["wai-middleware-content-type", "exceptions"], DirectedEdge["wai-middleware-content-type", "hashable"], DirectedEdge["wai-middleware-content-type", "http-media"], DirectedEdge["wai-middleware-content-type", "http-types"], DirectedEdge["wai-middleware-content-type", "lucid"], DirectedEdge["wai-middleware-content-type", "mmorph"], DirectedEdge["wai-middleware-content-type", "monad-control"], DirectedEdge["wai-middleware-content-type", "monad-logger"], DirectedEdge["wai-middleware-content-type", "mtl"], DirectedEdge["wai-middleware-content-type", "pandoc"], DirectedEdge["wai-middleware-content-type", "resourcet"], DirectedEdge["wai-middleware-content-type", "shakespeare"], DirectedEdge["wai-middleware-content-type", "text"], DirectedEdge["wai-middleware-content-type", "transformers"], DirectedEdge["wai-middleware-content-type", "transformers-base"], DirectedEdge["wai-middleware-content-type", "unordered-containers"], DirectedEdge["wai-middleware-content-type", "urlpath"], DirectedEdge["wai-middleware-content-type", "wai"], DirectedEdge["wai-middleware-content-type", "wai-transformers"], DirectedEdge["wai-middleware-crowd", "authenticate"], DirectedEdge["wai-middleware-crowd", "base"], DirectedEdge["wai-middleware-crowd", "base64-bytestring"], DirectedEdge["wai-middleware-crowd", "binary"], DirectedEdge["wai-middleware-crowd", "blaze-builder"], DirectedEdge["wai-middleware-crowd", "bytestring"], DirectedEdge["wai-middleware-crowd", "case-insensitive"], DirectedEdge["wai-middleware-crowd", "clientsession"], DirectedEdge["wai-middleware-crowd", "containers"], DirectedEdge["wai-middleware-crowd", "cookie"], DirectedEdge["wai-middleware-crowd", "gitrev"], DirectedEdge["wai-middleware-crowd", "http-client"], DirectedEdge["wai-middleware-crowd", "http-client-tls"], DirectedEdge["wai-middleware-crowd", "http-reverse-proxy"], DirectedEdge["wai-middleware-crowd", "http-types"], DirectedEdge["wai-middleware-crowd", "optparse-applicative"], DirectedEdge["wai-middleware-crowd", "resourcet"], DirectedEdge["wai-middleware-crowd", "template-haskell"], DirectedEdge["wai-middleware-crowd", "text"], DirectedEdge["wai-middleware-crowd", "time"], DirectedEdge["wai-middleware-crowd", "transformers"], DirectedEdge["wai-middleware-crowd", "unix-compat"], DirectedEdge["wai-middleware-crowd", "vault"], DirectedEdge["wai-middleware-crowd", "wai"], DirectedEdge["wai-middleware-crowd", "wai-app-static"], DirectedEdge["wai-middleware-crowd", "wai-extra"], DirectedEdge["wai-middleware-crowd", "wai-middleware-crowd"], DirectedEdge["wai-middleware-crowd", "warp"], DirectedEdge["wai-middleware-etag", "base"], DirectedEdge["wai-middleware-etag", "base64-bytestring"], DirectedEdge["wai-middleware-etag", "bytestring"], DirectedEdge["wai-middleware-etag", "cryptohash"], DirectedEdge["wai-middleware-etag", "filepath"], DirectedEdge["wai-middleware-etag", "http-date"], DirectedEdge["wai-middleware-etag", "http-types"], DirectedEdge["wai-middleware-etag", "unix-compat"], DirectedEdge["wai-middleware-etag", "unordered-containers"], DirectedEdge["wai-middleware-etag", "wai"], DirectedEdge["wai-middleware-gunzip", "base"], DirectedEdge["wai-middleware-gunzip", "bytestring"], DirectedEdge["wai-middleware-gunzip", "http-types"], DirectedEdge["wai-middleware-gunzip", "streaming-commons"], DirectedEdge["wai-middleware-gunzip", "wai"], DirectedEdge["wai-middleware-headers", "base"], DirectedEdge["wai-middleware-headers", "bytestring"], DirectedEdge["wai-middleware-headers", "http-types"], DirectedEdge["wai-middleware-headers", "wai"], DirectedEdge["wai-middleware-hmac", "base"], DirectedEdge["wai-middleware-hmac", "base64-bytestring"], DirectedEdge["wai-middleware-hmac", "byteable"], DirectedEdge["wai-middleware-hmac", "bytestring"], DirectedEdge["wai-middleware-hmac", "case-insensitive"], DirectedEdge["wai-middleware-hmac", "cryptohash"], DirectedEdge["wai-middleware-hmac", "http-types"], DirectedEdge["wai-middleware-hmac", "transformers"], DirectedEdge["wai-middleware-hmac", "wai"], DirectedEdge["wai-middleware-hmac-client", "base"], DirectedEdge["wai-middleware-hmac-client", "base64-bytestring"], DirectedEdge["wai-middleware-hmac-client", "byteable"], DirectedEdge["wai-middleware-hmac-client", "bytestring"], DirectedEdge["wai-middleware-hmac-client", "case-insensitive"], DirectedEdge["wai-middleware-hmac-client", "cryptohash"], DirectedEdge["wai-middleware-hmac-client", "http-client"], DirectedEdge["wai-middleware-hmac-client", "http-types"], DirectedEdge["wai-middleware-hmac-client", "mtl"], DirectedEdge["wai-middleware-hmac-client", "old-locale"], DirectedEdge["wai-middleware-hmac-client", "time"], DirectedEdge["wai-middleware-hmac-client", "transformers"], DirectedEdge["wai-middleware-hmac-client", "wai-middleware-hmac-client"], DirectedEdge["wai-middleware-metrics", "base"], DirectedEdge["wai-middleware-metrics", "ekg-core"], DirectedEdge["wai-middleware-metrics", "http-types"], DirectedEdge["wai-middleware-metrics", "text"], DirectedEdge["wai-middleware-metrics", "time"], DirectedEdge["wai-middleware-metrics", "wai"], DirectedEdge["wai-middleware-preprocessor", "base"], DirectedEdge["wai-middleware-preprocessor", "directory"], DirectedEdge["wai-middleware-preprocessor", "mtl"], DirectedEdge["wai-middleware-preprocessor", "split"], DirectedEdge["wai-middleware-preprocessor", "text"], DirectedEdge["wai-middleware-preprocessor", "wai"], DirectedEdge["wai-middleware-preprocessor", "wai-middleware-static"], DirectedEdge["wai-middleware-prometheus", "base"], DirectedEdge["wai-middleware-prometheus", "bytestring"], DirectedEdge["wai-middleware-prometheus", "data-default"], DirectedEdge["wai-middleware-prometheus", "http-types"], DirectedEdge["wai-middleware-prometheus", "prometheus-client"], DirectedEdge["wai-middleware-prometheus", "text"], DirectedEdge["wai-middleware-prometheus", "time"], DirectedEdge["wai-middleware-prometheus", "wai"], DirectedEdge["wai-middleware-route", "base"], DirectedEdge["wai-middleware-route", "bytestring"], DirectedEdge["wai-middleware-route", "http-types"], DirectedEdge["wai-middleware-route", "text"], DirectedEdge["wai-middleware-route", "wai"], DirectedEdge["wai-middleware-route", "yesod-routes"], DirectedEdge["wai-middleware-static", "base"], DirectedEdge["wai-middleware-static", "base16-bytestring"], DirectedEdge["wai-middleware-static", "bytestring"], DirectedEdge["wai-middleware-static", "containers"], DirectedEdge["wai-middleware-static", "cryptohash"], DirectedEdge["wai-middleware-static", "directory"], DirectedEdge["wai-middleware-static", "expiring-cache-map"], DirectedEdge["wai-middleware-static", "filepath"], DirectedEdge["wai-middleware-static", "http-types"], DirectedEdge["wai-middleware-static", "mime-types"], DirectedEdge["wai-middleware-static", "mtl"], DirectedEdge["wai-middleware-static", "old-locale"], DirectedEdge["wai-middleware-static", "text"], DirectedEdge["wai-middleware-static", "time"], DirectedEdge["wai-middleware-static", "wai"], DirectedEdge["wai-middleware-static-caching", "wai-middleware-static"], DirectedEdge["wai-middleware-static-caching", "base"], DirectedEdge["wai-middleware-static-caching", "base16-bytestring"], DirectedEdge["wai-middleware-static-caching", "bytestring"], DirectedEdge["wai-middleware-static-caching", "containers"], DirectedEdge["wai-middleware-static-caching", "cryptohash"], DirectedEdge["wai-middleware-static-caching", "directory"], DirectedEdge["wai-middleware-static-caching", "expiring-cache-map"], DirectedEdge["wai-middleware-static-caching", "filepath"], DirectedEdge["wai-middleware-static-caching", "http-types"], DirectedEdge["wai-middleware-static-caching", "mtl"], DirectedEdge["wai-middleware-static-caching", "old-locale"], DirectedEdge["wai-middleware-static-caching", "text"], DirectedEdge["wai-middleware-static-caching", "time"], DirectedEdge["wai-middleware-static-caching", "unix"], DirectedEdge["wai-middleware-static-caching", "wai"], DirectedEdge["wai-middleware-throttle", "base"], DirectedEdge["wai-middleware-throttle", "blaze-builder"], DirectedEdge["wai-middleware-throttle", "containers"], DirectedEdge["wai-middleware-throttle", "hashable"], DirectedEdge["wai-middleware-throttle", "http-types"], DirectedEdge["wai-middleware-throttle", "network"], DirectedEdge["wai-middleware-throttle", "stm"], DirectedEdge["wai-middleware-throttle", "token-bucket"], DirectedEdge["wai-middleware-throttle", "transformers"], DirectedEdge["wai-middleware-throttle", "wai"], DirectedEdge["wai-middleware-verbs", "base"], DirectedEdge["wai-middleware-verbs", "errors"], DirectedEdge["wai-middleware-verbs", "exceptions"], DirectedEdge["wai-middleware-verbs", "hashable"], DirectedEdge["wai-middleware-verbs", "http-types"], DirectedEdge["wai-middleware-verbs", "mmorph"], DirectedEdge["wai-middleware-verbs", "monad-logger"], DirectedEdge["wai-middleware-verbs", "mtl"], DirectedEdge["wai-middleware-verbs", "resourcet"], DirectedEdge["wai-middleware-verbs", "text"], DirectedEdge["wai-middleware-verbs", "transformers"], DirectedEdge["wai-middleware-verbs", "transformers-base"], DirectedEdge["wai-middleware-verbs", "unordered-containers"], DirectedEdge["wai-middleware-verbs", "wai"], DirectedEdge["wai-middleware-verbs", "wai-middleware-content-type"], DirectedEdge["wai-middleware-verbs", "wai-transformers"], DirectedEdge["wai-middleware-verbs", "warp"], DirectedEdge["wai-predicates", "attoparsec"], DirectedEdge["wai-predicates", "base"], DirectedEdge["wai-predicates", "bytestring"], DirectedEdge["wai-predicates", "bytestring-conversion"], DirectedEdge["wai-predicates", "case-insensitive"], DirectedEdge["wai-predicates", "cookie"], DirectedEdge["wai-predicates", "http-types"], DirectedEdge["wai-predicates", "singletons"], DirectedEdge["wai-predicates", "transformers"], DirectedEdge["wai-predicates", "vault"], DirectedEdge["wai-predicates", "vector"], DirectedEdge["wai-predicates", "wai"], DirectedEdge["wai-request-spec", "base"], DirectedEdge["wai-request-spec", "bytestring"], DirectedEdge["wai-request-spec", "case-insensitive"], DirectedEdge["wai-request-spec", "containers"], DirectedEdge["wai-request-spec", "http-types"], DirectedEdge["wai-request-spec", "text"], DirectedEdge["wai-request-spec", "wai"], DirectedEdge["wai-responsible", "base"], DirectedEdge["wai-responsible", "bytestring"], DirectedEdge["wai-responsible", "http-types"], DirectedEdge["wai-responsible", "wai"], DirectedEdge["wai-route", "base"], DirectedEdge["wai-route", "bytestring"], DirectedEdge["wai-route", "http-types"], DirectedEdge["wai-route", "unordered-containers"], DirectedEdge["wai-route", "wai"], DirectedEdge["wai-router", "base"], DirectedEdge["wai-router", "text"], DirectedEdge["wai-router", "wai"], DirectedEdge["wai-routes", "aeson"], DirectedEdge["wai-routes", "base"], DirectedEdge["wai-routes", "blaze-builder"], DirectedEdge["wai-routes", "bytestring"], DirectedEdge["wai-routes", "case-insensitive"], DirectedEdge["wai-routes", "containers"], DirectedEdge["wai-routes", "cookie"], DirectedEdge["wai-routes", "data-default-class"], DirectedEdge["wai-routes", "filepath"], DirectedEdge["wai-routes", "http-types"], DirectedEdge["wai-routes", "mime-types"], DirectedEdge["wai-routes", "monad-loops"], DirectedEdge["wai-routes", "mtl"], DirectedEdge["wai-routes", "path-pieces"], DirectedEdge["wai-routes", "random"], DirectedEdge["wai-routes", "template-haskell"], DirectedEdge["wai-routes", "text"], DirectedEdge["wai-routes", "vault"], DirectedEdge["wai-routes", "wai"], DirectedEdge["wai-routes", "wai-app-static"], DirectedEdge["wai-routes", "wai-extra"], DirectedEdge["wai-routing", "attoparsec"], DirectedEdge["wai-routing", "base"], DirectedEdge["wai-routing", "bytestring"], DirectedEdge["wai-routing", "bytestring-conversion"], DirectedEdge["wai-routing", "case-insensitive"], DirectedEdge["wai-routing", "cookie"], DirectedEdge["wai-routing", "http-types"], DirectedEdge["wai-routing", "transformers"], DirectedEdge["wai-routing", "wai"], DirectedEdge["wai-routing", "wai-predicates"], DirectedEdge["wai-routing", "wai-route"], DirectedEdge["wai-session", "base"], DirectedEdge["wai-session", "blaze-builder"], DirectedEdge["wai-session", "bytestring"], DirectedEdge["wai-session", "containers"], DirectedEdge["wai-session", "cookie"], DirectedEdge["wai-session", "http-types"], DirectedEdge["wai-session", "StateVar"], DirectedEdge["wai-session", "time"], DirectedEdge["wai-session", "transformers"], DirectedEdge["wai-session", "vault"], DirectedEdge["wai-session", "wai"], DirectedEdge["wai-session-alt", "base"], DirectedEdge["wai-session-alt", "blaze-builder"], DirectedEdge["wai-session-alt", "bytestring"], DirectedEdge["wai-session-alt", "cookie"], DirectedEdge["wai-session-alt", "http-types"], DirectedEdge["wai-session-alt", "time"], DirectedEdge["wai-session-alt", "vault"], DirectedEdge["wai-session-alt", "wai-transformers"], DirectedEdge["wai-session-clientsession", "base"], DirectedEdge["wai-session-clientsession", "bytestring"], DirectedEdge["wai-session-clientsession", "cereal"], DirectedEdge["wai-session-clientsession", "clientsession"], DirectedEdge["wai-session-clientsession", "errors"], DirectedEdge["wai-session-clientsession", "transformers"], DirectedEdge["wai-session-clientsession", "wai-session"], DirectedEdge["wai-session-postgresql", "base"], DirectedEdge["wai-session-postgresql", "bytestring"], DirectedEdge["wai-session-postgresql", "cereal"], DirectedEdge["wai-session-postgresql", "cookie"], DirectedEdge["wai-session-postgresql", "data-default"], DirectedEdge["wai-session-postgresql", "entropy"], DirectedEdge["wai-session-postgresql", "postgresql-simple"], DirectedEdge["wai-session-postgresql", "resource-pool"], DirectedEdge["wai-session-postgresql", "text"], DirectedEdge["wai-session-postgresql", "time"], DirectedEdge["wai-session-postgresql", "transformers"], DirectedEdge["wai-session-postgresql", "wai"], DirectedEdge["wai-session-postgresql", "wai-session"], DirectedEdge["wai-session-tokyocabinet", "base"], DirectedEdge["wai-session-tokyocabinet", "bytestring"], DirectedEdge["wai-session-tokyocabinet", "cereal"], DirectedEdge["wai-session-tokyocabinet", "errors"], DirectedEdge["wai-session-tokyocabinet", "tokyocabinet-haskell"], DirectedEdge["wai-session-tokyocabinet", "transformers"], DirectedEdge["wai-session-tokyocabinet", "wai-session"], DirectedEdge["wai-static-cache", "base"], DirectedEdge["wai-static-cache", "bytestring"], DirectedEdge["wai-static-cache", "cityhash"], DirectedEdge["wai-static-cache", "conduit"], DirectedEdge["wai-static-cache", "conduit-combinators"], DirectedEdge["wai-static-cache", "containers"], DirectedEdge["wai-static-cache", "http-types"], DirectedEdge["wai-static-cache", "resourcet"], DirectedEdge["wai-static-cache", "system-filepath"], DirectedEdge["wai-static-cache", "text"], DirectedEdge["wai-static-cache", "transformers"], DirectedEdge["wai-static-cache", "vector"], DirectedEdge["wai-static-cache", "vector-algorithms"], DirectedEdge["wai-static-cache", "wai"], DirectedEdge["wai-static-pages", "base"], DirectedEdge["wai-static-pages", "blaze-builder"], DirectedEdge["wai-static-pages", "bytestring"], DirectedEdge["wai-static-pages", "conduit"], DirectedEdge["wai-static-pages", "directory"], DirectedEdge["wai-static-pages", "http-types"], DirectedEdge["wai-static-pages", "text"], DirectedEdge["wai-static-pages", "wai"], DirectedEdge["wai-static-pages", "wai-extra"], DirectedEdge["wai-test", "wai-extra"], DirectedEdge["wai-test", "wai"], DirectedEdge["wai-thrift", "base"], DirectedEdge["wai-thrift", "blaze-builder"], DirectedEdge["wai-thrift", "bytestring"], DirectedEdge["wai-thrift", "http-types"], DirectedEdge["wai-thrift", "thrift"], DirectedEdge["wai-thrift", "wai"], DirectedEdge["wai-throttler", "base"], DirectedEdge["wai-throttler", "bytestring"], DirectedEdge["wai-throttler", "containers"], DirectedEdge["wai-throttler", "http-types"], DirectedEdge["wai-throttler", "time"], DirectedEdge["wai-throttler", "wai"], DirectedEdge["wai-transformers", "base"], DirectedEdge["wai-transformers", "exceptions"], DirectedEdge["wai-transformers", "transformers"], DirectedEdge["wai-transformers", "wai"], DirectedEdge["wai-util", "aeson"], DirectedEdge["wai-util", "base"], DirectedEdge["wai-util", "blaze-builder"], DirectedEdge["wai-util", "bytestring"], DirectedEdge["wai-util", "conduit"], DirectedEdge["wai-util", "http-accept"], DirectedEdge["wai-util", "http-types"], DirectedEdge["wai-util", "network-uri"], DirectedEdge["wai-util", "text"], DirectedEdge["wai-util", "transformers"], DirectedEdge["wai-util", "wai"], DirectedEdge["wai-util", "wai-extra"], DirectedEdge["wai-websockets", "base"], DirectedEdge["wai-websockets", "blaze-builder"], DirectedEdge["wai-websockets", "bytestring"], DirectedEdge["wai-websockets", "case-insensitive"], DirectedEdge["wai-websockets", "file-embed"], DirectedEdge["wai-websockets", "http-types"], DirectedEdge["wai-websockets", "network"], DirectedEdge["wai-websockets", "text"], DirectedEdge["wai-websockets", "transformers"], DirectedEdge["wai-websockets", "wai"], DirectedEdge["wai-websockets", "wai-app-static"], DirectedEdge["wai-websockets", "wai-websockets"], DirectedEdge["wai-websockets", "warp"], DirectedEdge["wai-websockets", "websockets"], DirectedEdge["wait-handle", "base"], DirectedEdge["waitfree", "base"], DirectedEdge["waitfree", "containers"], DirectedEdge["waitra", "aeson"], DirectedEdge["waitra", "base"], DirectedEdge["waitra", "bytestring"], DirectedEdge["waitra", "directory"], DirectedEdge["waitra", "filepath"], DirectedEdge["waitra", "http-types"], DirectedEdge["waitra", "regex-applicative"], DirectedEdge["waitra", "template-haskell"], DirectedEdge["waitra", "text"], DirectedEdge["waitra", "wai"], DirectedEdge["waitra", "wai-app-static"], DirectedEdge["waitra", "waitra"], DirectedEdge["waitra", "warp"], DirectedEdge["warc", "attoparsec"], DirectedEdge["warc", "base"], DirectedEdge["warc", "bytestring"], DirectedEdge["warc", "errors"], DirectedEdge["warc", "exceptions"], DirectedEdge["warc", "filepath"], DirectedEdge["warc", "free"], DirectedEdge["warc", "lens"], DirectedEdge["warc", "mmorph"], DirectedEdge["warc", "optparse-applicative"], DirectedEdge["warc", "pipes"], DirectedEdge["warc", "pipes-attoparsec"], DirectedEdge["warc", "pipes-bytestring"], DirectedEdge["warc", "pipes-zlib"], DirectedEdge["warc", "text"], DirectedEdge["warc", "time"], DirectedEdge["warc", "transformers"], DirectedEdge["warc", "warc"], DirectedEdge["warp", "array"], DirectedEdge["warp", "async"], DirectedEdge["warp", "auto-update"], DirectedEdge["warp", "base"], DirectedEdge["warp", "blaze-builder"], DirectedEdge["warp", "bytestring"], DirectedEdge["warp", "bytestring-builder"], DirectedEdge["warp", "case-insensitive"], DirectedEdge["warp", "containers"], DirectedEdge["warp", "ghc-prim"], DirectedEdge["warp", "hashable"], DirectedEdge["warp", "http-date"], DirectedEdge["warp", "http-types"], DirectedEdge["warp", "iproute"], DirectedEdge["warp", "network"], DirectedEdge["warp", "network-bytestring"], DirectedEdge["warp", "simple-sendfile"], DirectedEdge["warp", "stm"], DirectedEdge["warp", "streaming-commons"], DirectedEdge["warp", "text"], DirectedEdge["warp", "time"], DirectedEdge["warp", "unix"], DirectedEdge["warp", "unix-compat"], DirectedEdge["warp", "vault"], DirectedEdge["warp", "wai"], DirectedEdge["warp-dynamic", "base"], DirectedEdge["warp-dynamic", "data-default"], DirectedEdge["warp-dynamic", "dyre"], DirectedEdge["warp-dynamic", "http-types"], DirectedEdge["warp-dynamic", "wai"], DirectedEdge["warp-dynamic", "warp"], DirectedEdge["warp-dynamic", "warp-dynamic"], DirectedEdge["warp-static", "wai-app-static"], DirectedEdge["warp-static", "base"], DirectedEdge["warp-static", "bytestring"], DirectedEdge["warp-static", "cmdargs"], DirectedEdge["warp-static", "containers"], DirectedEdge["warp-static", "directory"], DirectedEdge["warp-static", "mime-types"], DirectedEdge["warp-static", "text"], DirectedEdge["warp-static", "wai-app-static"], DirectedEdge["warp-static", "wai-extra"], DirectedEdge["warp-static", "warp"], DirectedEdge["warp-tls", "base"], DirectedEdge["warp-tls", "bytestring"], DirectedEdge["warp-tls", "data-default-class"], DirectedEdge["warp-tls", "network"], DirectedEdge["warp-tls", "streaming-commons"], DirectedEdge["warp-tls", "tls"], DirectedEdge["warp-tls", "wai"], DirectedEdge["warp-tls", "warp"], DirectedEdge["warp-tls-uid", "base"], DirectedEdge["warp-tls-uid", "bytestring"], DirectedEdge["warp-tls-uid", "certificate"], DirectedEdge["warp-tls-uid", "conduit"], DirectedEdge["warp-tls-uid", "crypto-random"], DirectedEdge["warp-tls-uid", "http-types"], DirectedEdge["warp-tls-uid", "network"], DirectedEdge["warp-tls-uid", "network-conduit"], DirectedEdge["warp-tls-uid", "pem"], DirectedEdge["warp-tls-uid", "tls"], DirectedEdge["warp-tls-uid", "tls-extra"], DirectedEdge["warp-tls-uid", "unix"], DirectedEdge["warp-tls-uid", "wai"], DirectedEdge["warp-tls-uid", "warp"], DirectedEdge["warp-tls-uid", "warp-tls-uid"], DirectedEdge["watchdog", "base"], DirectedEdge["watchdog", "mtl"], DirectedEdge["watchdog", "time"], DirectedEdge["watcher", "base"], DirectedEdge["watcher", "basic-prelude"], DirectedEdge["watcher", "containers"], DirectedEdge["watcher", "hinotify"], DirectedEdge["watcher", "system-fileio"], DirectedEdge["watcher", "system-filepath"], DirectedEdge["watchit", "base"], DirectedEdge["watchit", "fsnotify"], DirectedEdge["watchit", "optparse-applicative"], DirectedEdge["watchit", "process"], DirectedEdge["watchit", "resource-pool"], DirectedEdge["watchit", "streaming-commons"], DirectedEdge["watchit", "system-filepath"], DirectedEdge["watchit", "text"], DirectedEdge["wavconvert", "base"], DirectedEdge["wavconvert", "directory"], DirectedEdge["wavconvert", "filepath"], DirectedEdge["wavconvert", "process"], DirectedEdge["wavefront", "attoparsec"], DirectedEdge["wavefront", "base"], DirectedEdge["wavefront", "dlist"], DirectedEdge["wavefront", "filepath"], DirectedEdge["wavefront", "mtl"], DirectedEdge["wavefront", "text"], DirectedEdge["wavefront", "transformers"], DirectedEdge["wavefront", "vector"], DirectedEdge["wavesurfer", "base"], DirectedEdge["wavesurfer", "binary"], DirectedEdge["wavesurfer", "bytestring"], DirectedEdge["wavesurfer", "bytestring-lexing"], DirectedEdge["wavesurfer", "bytestring-show"], DirectedEdge["wavesurfer", "delimited-text"], DirectedEdge["wavy", "base"], DirectedEdge["wavy", "binary"], DirectedEdge["wavy", "bytestring"], DirectedEdge["wavy", "containers"], DirectedEdge["wavy", "filepath"], DirectedEdge["wavy", "pretty-show"], DirectedEdge["wavy", "riff"], DirectedEdge["wavy", "split"], DirectedEdge["wavy", "vector"], DirectedEdge["wavy", "wavy"], DirectedEdge["wcwidth", "attoparsec"], DirectedEdge["wcwidth", "base"], DirectedEdge["wcwidth", "bytestring"], DirectedEdge["wcwidth", "containers"], DirectedEdge["wcwidth", "setlocale"], DirectedEdge["wcwidth", "utf8-string"], DirectedEdge["weather-api", "aeson"], DirectedEdge["weather-api", "attoparsec"], DirectedEdge["weather-api", "base"], DirectedEdge["weather-api", "bytestring"], DirectedEdge["weather-api", "HTTP"], DirectedEdge["weather-api", "network"], DirectedEdge["weather-api", "utf8-string"], DirectedEdge["weather-api", "vector"], DirectedEdge["web-browser-in-haskell", "base"], DirectedEdge["web-browser-in-haskell", "gtk"], DirectedEdge["web-browser-in-haskell", "webkit"], DirectedEdge["web-css", "base"], DirectedEdge["web-css", "text"], DirectedEdge["web-encodings", "base"], DirectedEdge["web-encodings", "bytestring"], DirectedEdge["web-encodings", "convertible-text"], DirectedEdge["web-encodings", "directory"], DirectedEdge["web-encodings", "failure"], DirectedEdge["web-encodings", "HUnit"], DirectedEdge["web-encodings", "old-locale"], DirectedEdge["web-encodings", "QuickCheck"], DirectedEdge["web-encodings", "test-framework"], DirectedEdge["web-encodings", "test-framework-hunit"], DirectedEdge["web-encodings", "text"], DirectedEdge["web-encodings", "time"], DirectedEdge["web-fpco", "base"], DirectedEdge["web-fpco", "happstack-server"], DirectedEdge["web-fpco", "safe"], DirectedEdge["web-fpco", "snap"], DirectedEdge["web-fpco", "snap-core"], DirectedEdge["web-fpco", "snap-server"], DirectedEdge["web-inv-route", "base"], DirectedEdge["web-inv-route", "bytestring"], DirectedEdge["web-inv-route", "case-insensitive"], DirectedEdge["web-inv-route", "containers"], DirectedEdge["web-inv-route", "happstack-server"], DirectedEdge["web-inv-route", "hashable"], DirectedEdge["web-inv-route", "http-types"], DirectedEdge["web-inv-route", "invertible"], DirectedEdge["web-inv-route", "network-uri"], DirectedEdge["web-inv-route", "snap-core"], DirectedEdge["web-inv-route", "text"], DirectedEdge["web-inv-route", "transformers"], DirectedEdge["web-inv-route", "unordered-containers"], DirectedEdge["web-inv-route", "wai"], DirectedEdge["web-mongrel2", "base"], DirectedEdge["web-mongrel2", "bytestring"], DirectedEdge["web-mongrel2", "data-default"], DirectedEdge["web-mongrel2", "file-embed"], DirectedEdge["web-mongrel2", "HStringTemplate"], DirectedEdge["web-mongrel2", "json"], DirectedEdge["web-mongrel2", "mtl"], DirectedEdge["web-mongrel2", "old-time"], DirectedEdge["web-mongrel2", "parsec"], DirectedEdge["web-mongrel2", "system-uuid"], DirectedEdge["web-mongrel2", "template-haskell"], DirectedEdge["web-mongrel2", "text"], DirectedEdge["web-mongrel2", "zeromq-haskell"], DirectedEdge["web-page", "base"], DirectedEdge["web-page", "blaze-builder"], DirectedEdge["web-page", "blaze-html"], DirectedEdge["web-page", "bytestring"], DirectedEdge["web-page", "clay"], DirectedEdge["web-page", "containers"], DirectedEdge["web-page", "jmacro"], DirectedEdge["web-page", "lens"], DirectedEdge["web-page", "mtl"], DirectedEdge["web-page", "Stream"], DirectedEdge["web-page", "text"], DirectedEdge["web-page", "vector"], DirectedEdge["web-page", "wl-pprint-text"], DirectedEdge["web-plugins", "base"], DirectedEdge["web-plugins", "containers"], DirectedEdge["web-plugins", "mtl"], DirectedEdge["web-plugins", "stm"], DirectedEdge["web-plugins", "text"], DirectedEdge["web-routes", "base"], DirectedEdge["web-routes", "blaze-builder"], DirectedEdge["web-routes", "bytestring"], DirectedEdge["web-routes", "exceptions"], DirectedEdge["web-routes", "ghc-prim"], DirectedEdge["web-routes", "http-types"], DirectedEdge["web-routes", "mtl"], DirectedEdge["web-routes", "parsec"], DirectedEdge["web-routes", "split"], DirectedEdge["web-routes", "text"], DirectedEdge["web-routes", "utf8-string"], DirectedEdge["web-routes-boomerang", "base"], DirectedEdge["web-routes-boomerang", "boomerang"], DirectedEdge["web-routes-boomerang", "mtl"], DirectedEdge["web-routes-boomerang", "parsec"], DirectedEdge["web-routes-boomerang", "text"], DirectedEdge["web-routes-boomerang", "web-routes"], DirectedEdge["web-routes-happstack", "base"], DirectedEdge["web-routes-happstack", "bytestring"], DirectedEdge["web-routes-happstack", "happstack-server"], DirectedEdge["web-routes-happstack", "text"], DirectedEdge["web-routes-happstack", "web-routes"], DirectedEdge["web-routes-hsp", "base"], DirectedEdge["web-routes-hsp", "hsp"], DirectedEdge["web-routes-hsp", "text"], DirectedEdge["web-routes-hsp", "web-routes"], DirectedEdge["web-routes-mtl", "web-routes"], DirectedEdge["web-routes-mtl", "base"], DirectedEdge["web-routes-mtl", "web-routes"], DirectedEdge["web-routes-quasi", "base"], DirectedEdge["web-routes-quasi", "bytestring"], DirectedEdge["web-routes-quasi", "HUnit"], DirectedEdge["web-routes-quasi", "path-pieces"], DirectedEdge["web-routes-quasi", "QuickCheck"], DirectedEdge["web-routes-quasi", "template-haskell"], DirectedEdge["web-routes-quasi", "test-framework"], DirectedEdge["web-routes-quasi", "test-framework-hunit"], DirectedEdge["web-routes-quasi", "text"], DirectedEdge["web-routes-quasi", "wai"], DirectedEdge["web-routes-quasi", "wai-extra"], DirectedEdge["web-routes-quasi", "web-encodings"], DirectedEdge["web-routes-regular", "base"], DirectedEdge["web-routes-regular", "parsec"], DirectedEdge["web-routes-regular", "regular"], DirectedEdge["web-routes-regular", "text"], DirectedEdge["web-routes-regular", "web-routes"], DirectedEdge["web-routes-th", "base"], DirectedEdge["web-routes-th", "parsec"], DirectedEdge["web-routes-th", "split"], DirectedEdge["web-routes-th", "template-haskell"], DirectedEdge["web-routes-th", "text"], DirectedEdge["web-routes-th", "web-routes"], DirectedEdge["web-routes-transformers", "web-routes"], DirectedEdge["web-routes-transformers", "base"], DirectedEdge["web-routes-transformers", "transformers"], DirectedEdge["web-routes-transformers", "web-routes"], DirectedEdge["web-routes-wai", "base"], DirectedEdge["web-routes-wai", "bytestring"], DirectedEdge["web-routes-wai", "http-types"], DirectedEdge["web-routes-wai", "text"], DirectedEdge["web-routes-wai", "wai"], DirectedEdge["web-routes-wai", "web-routes"], DirectedEdge["web-routing", "base"], DirectedEdge["web-routing", "bytestring"], DirectedEdge["web-routing", "primitive"], DirectedEdge["web-routing", "text"], DirectedEdge["web-routing", "types-compat"], DirectedEdge["web-routing", "unordered-containers"], DirectedEdge["webapi", "aeson"], DirectedEdge["webapi", "base"], DirectedEdge["webapi", "binary"], DirectedEdge["webapi", "blaze-builder"], DirectedEdge["webapi", "bytestring"], DirectedEdge["webapi", "bytestring-lexing"], DirectedEdge["webapi", "bytestring-trie"], DirectedEdge["webapi", "case-insensitive"], DirectedEdge["webapi", "containers"], DirectedEdge["webapi", "cookie"], DirectedEdge["webapi", "exceptions"], DirectedEdge["webapi", "http-client"], DirectedEdge["webapi", "http-client-tls"], DirectedEdge["webapi", "http-media"], DirectedEdge["webapi", "http-types"], DirectedEdge["webapi", "network-uri"], DirectedEdge["webapi", "QuickCheck"], DirectedEdge["webapi", "resourcet"], DirectedEdge["webapi", "text"], DirectedEdge["webapi", "time"], DirectedEdge["webapi", "transformers"], DirectedEdge["webapi", "vector"], DirectedEdge["webapi", "wai"], DirectedEdge["webapi", "wai-extra"], DirectedEdge["webapp", "aeson"], DirectedEdge["webapp", "base"], DirectedEdge["webapp", "base16-bytestring"], DirectedEdge["webapp", "blaze-builder"], DirectedEdge["webapp", "bytestring"], DirectedEdge["webapp", "case-insensitive"], DirectedEdge["webapp", "http-types"], DirectedEdge["webapp", "mtl"], DirectedEdge["webapp", "network"], DirectedEdge["webapp", "optparse-applicative"], DirectedEdge["webapp", "regex-posix"], DirectedEdge["webapp", "stm"], DirectedEdge["webapp", "streaming-commons"], DirectedEdge["webapp", "text"], DirectedEdge["webapp", "transformers"], DirectedEdge["webapp", "unix"], DirectedEdge["webapp", "wai"], DirectedEdge["webapp", "warp"], DirectedEdge["webapp", "warp-tls"], DirectedEdge["webapp", "zlib"], DirectedEdge["webcloud", "base"], DirectedEdge["webcloud", "bytestring"], DirectedEdge["webcloud", "cgi"], DirectedEdge["webcloud", "optparse-applicative"], DirectedEdge["webcloud", "webcloud"], DirectedEdge["webcrank", "attoparsec"], DirectedEdge["webcrank", "base"], DirectedEdge["webcrank", "blaze-builder"], DirectedEdge["webcrank", "bytestring"], DirectedEdge["webcrank", "case-insensitive"], DirectedEdge["webcrank", "either"], DirectedEdge["webcrank", "exceptions"], DirectedEdge["webcrank", "http-date"], DirectedEdge["webcrank", "http-media"], DirectedEdge["webcrank", "http-types"], DirectedEdge["webcrank", "lens"], DirectedEdge["webcrank", "mtl"], DirectedEdge["webcrank", "semigroups"], DirectedEdge["webcrank", "text"], DirectedEdge["webcrank", "transformers"], DirectedEdge["webcrank", "unordered-containers"], DirectedEdge["webcrank", "utf8-string"], DirectedEdge["webcrank-dispatch", "base"], DirectedEdge["webcrank-dispatch", "hvect"], DirectedEdge["webcrank-dispatch", "mtl"], DirectedEdge["webcrank-dispatch", "path-pieces"], DirectedEdge["webcrank-dispatch", "reroute"], DirectedEdge["webcrank-dispatch", "text"], DirectedEdge["webcrank-dispatch", "unordered-containers"], DirectedEdge["webcrank-wai", "base"], DirectedEdge["webcrank-wai", "bytestring"], DirectedEdge["webcrank-wai", "exceptions"], DirectedEdge["webcrank-wai", "lens"], DirectedEdge["webcrank-wai", "mtl"], DirectedEdge["webcrank-wai", "unix-compat"], DirectedEdge["webcrank-wai", "unordered-containers"], DirectedEdge["webcrank-wai", "wai"], DirectedEdge["webcrank-wai", "wai-lens"], DirectedEdge["webcrank-wai", "webcrank"], DirectedEdge["webcrank-wai", "webcrank-dispatch"], DirectedEdge["webdriver", "aeson"], DirectedEdge["webdriver", "attoparsec"], DirectedEdge["webdriver", "base"], DirectedEdge["webdriver", "base64-bytestring"], DirectedEdge["webdriver", "bytestring"], DirectedEdge["webdriver", "data-default-class"], DirectedEdge["webdriver", "directory"], DirectedEdge["webdriver", "directory-tree"], DirectedEdge["webdriver", "exceptions"], DirectedEdge["webdriver", "filepath"], DirectedEdge["webdriver", "http-client"], DirectedEdge["webdriver", "http-types"], DirectedEdge["webdriver", "lifted-base"], DirectedEdge["webdriver", "monad-control"], DirectedEdge["webdriver", "network"], DirectedEdge["webdriver", "network-uri"], DirectedEdge["webdriver", "scientific"], DirectedEdge["webdriver", "temporary"], DirectedEdge["webdriver", "text"], DirectedEdge["webdriver", "time"], DirectedEdge["webdriver", "transformers"], DirectedEdge["webdriver", "transformers-base"], DirectedEdge["webdriver", "unordered-containers"], DirectedEdge["webdriver", "vector"], DirectedEdge["webdriver", "zip-archive"], DirectedEdge["webdriver-angular", "aeson"], DirectedEdge["webdriver-angular", "base"], DirectedEdge["webdriver-angular", "language-javascript"], DirectedEdge["webdriver-angular", "template-haskell"], DirectedEdge["webdriver-angular", "text"], DirectedEdge["webdriver-angular", "transformers"], DirectedEdge["webdriver-angular", "unordered-containers"], DirectedEdge["webdriver-angular", "webdriver"], DirectedEdge["webdriver-snoy", "webdriver"], DirectedEdge["webdriver-snoy", "aeson"], DirectedEdge["webdriver-snoy", "attoparsec"], DirectedEdge["webdriver-snoy", "base"], DirectedEdge["webdriver-snoy", "base64-bytestring"], DirectedEdge["webdriver-snoy", "bytestring"], DirectedEdge["webdriver-snoy", "cond"], DirectedEdge["webdriver-snoy", "data-default"], DirectedEdge["webdriver-snoy", "directory"], DirectedEdge["webdriver-snoy", "directory-tree"], DirectedEdge["webdriver-snoy", "exceptions"], DirectedEdge["webdriver-snoy", "filepath"], DirectedEdge["webdriver-snoy", "http-client"], DirectedEdge["webdriver-snoy", "http-types"], DirectedEdge["webdriver-snoy", "lifted-base"], DirectedEdge["webdriver-snoy", "monad-control"], DirectedEdge["webdriver-snoy", "mtl"], DirectedEdge["webdriver-snoy", "network"], DirectedEdge["webdriver-snoy", "scientific"], DirectedEdge["webdriver-snoy", "temporary"], DirectedEdge["webdriver-snoy", "text"], DirectedEdge["webdriver-snoy", "time"], DirectedEdge["webdriver-snoy", "transformers"], DirectedEdge["webdriver-snoy", "transformers-base"], DirectedEdge["webdriver-snoy", "unordered-containers"], DirectedEdge["webdriver-snoy", "vector"], DirectedEdge["webdriver-snoy", "zip-archive"], DirectedEdge["webfinger-client", "aeson"], DirectedEdge["webfinger-client", "base"], DirectedEdge["webfinger-client", "bytestring"], DirectedEdge["webfinger-client", "data-default-class"], DirectedEdge["webfinger-client", "hashable"], DirectedEdge["webfinger-client", "http-client"], DirectedEdge["webfinger-client", "http-client-tls"], DirectedEdge["webfinger-client", "http-types"], DirectedEdge["webfinger-client", "link-relations"], DirectedEdge["webfinger-client", "text"], DirectedEdge["webfinger-client", "unordered-containers"], DirectedEdge["webfinger-client", "uri-bytestring"], DirectedEdge["webidl", "base"], DirectedEdge["webidl", "bytestring"], DirectedEdge["webidl", "HSFFIG"], DirectedEdge["webidl", "LEXER"], DirectedEdge["webidl", "parsec"], DirectedEdge["webidl", "pretty"], DirectedEdge["webidl", "utf8-env"], DirectedEdge["webidl", "utf8-string"], DirectedEdge["webify", "base"], DirectedEdge["webify", "binary"], DirectedEdge["webify", "binary-strict"], DirectedEdge["webify", "blaze-builder"], DirectedEdge["webify", "bytestring"], DirectedEdge["webify", "containers"], DirectedEdge["webify", "filepath"], DirectedEdge["webify", "hopfli"], DirectedEdge["webify", "optparse-applicative"], DirectedEdge["webify", "text"], DirectedEdge["webify", "vector"], DirectedEdge["webify", "xmlgen"], DirectedEdge["webify", "zlib"], DirectedEdge["webkit", "base"], DirectedEdge["webkit", "bytestring"], DirectedEdge["webkit", "cairo"], DirectedEdge["webkit", "glib"], DirectedEdge["webkit", "gtk"], DirectedEdge["webkit", "mtl"], DirectedEdge["webkit", "pango"], DirectedEdge["webkit", "text"], DirectedEdge["webkit", "transformers"], DirectedEdge["webkit-javascriptcore", "base"], DirectedEdge["webkitgtk3", "base"], DirectedEdge["webkitgtk3", "bytestring"], DirectedEdge["webkitgtk3", "cairo"], DirectedEdge["webkitgtk3", "glib"], DirectedEdge["webkitgtk3", "mtl"], DirectedEdge["webkitgtk3", "pango"], DirectedEdge["webkitgtk3", "text"], DirectedEdge["webkitgtk3", "transformers"], DirectedEdge["webkitgtk3-javascriptcore", "base"], DirectedEdge["webpage", "base"], DirectedEdge["webpage", "blaze-html"], DirectedEdge["webpage", "data-default"], DirectedEdge["webpage", "lucid"], DirectedEdge["webpage", "text"], DirectedEdge["webrtc-vad", "base"], DirectedEdge["webrtc-vad", "primitive"], DirectedEdge["webrtc-vad", "vector"], DirectedEdge["webserver", "base"], DirectedEdge["webserver", "bytestring"], DirectedEdge["webserver", "c10k"], DirectedEdge["webserver", "containers"], DirectedEdge["webserver", "directory"], DirectedEdge["webserver", "filepath"], DirectedEdge["webserver", "network"], DirectedEdge["webserver", "old-locale"], DirectedEdge["webserver", "parsec"], DirectedEdge["webserver", "process"], DirectedEdge["webserver", "stm"], DirectedEdge["webserver", "time"], DirectedEdge["webserver", "unix"], DirectedEdge["webserver", "zlib"], DirectedEdge["websnap", "base"], DirectedEdge["websnap", "filepath"], DirectedEdge["websnap", "gtk"], DirectedEdge["websnap", "webkit"], DirectedEdge["websockets", "attoparsec"], DirectedEdge["websockets", "base"], DirectedEdge["websockets", "base64-bytestring"], DirectedEdge["websockets", "binary"], DirectedEdge["websockets", "blaze-builder"], DirectedEdge["websockets", "bytestring"], DirectedEdge["websockets", "case-insensitive"], DirectedEdge["websockets", "containers"], DirectedEdge["websockets", "entropy"], DirectedEdge["websockets", "network"], DirectedEdge["websockets", "random"], DirectedEdge["websockets", "SHA"], DirectedEdge["websockets", "text"], DirectedEdge["websockets", "websockets"], DirectedEdge["websockets-snap", "base"], DirectedEdge["websockets-snap", "bytestring"], DirectedEdge["websockets-snap", "enumerator"], DirectedEdge["websockets-snap", "mtl"], DirectedEdge["websockets-snap", "snap-core"], DirectedEdge["websockets-snap", "snap-server"], DirectedEdge["websockets-snap", "websockets"], DirectedEdge["webwire", "base"], DirectedEdge["webwire", "base64-bytestring"], DirectedEdge["webwire", "blaze-builder"], DirectedEdge["webwire", "blaze-html"], DirectedEdge["webwire", "bytestring"], DirectedEdge["webwire", "case-insensitive"], DirectedEdge["webwire", "containers"], DirectedEdge["webwire", "cookie"], DirectedEdge["webwire", "cprng-aes"], DirectedEdge["webwire", "hamlet"], DirectedEdge["webwire", "http-types"], DirectedEdge["webwire", "netwire"], DirectedEdge["webwire", "shakespeare-css"], DirectedEdge["webwire", "shakespeare-js"], DirectedEdge["webwire", "text"], DirectedEdge["webwire", "time"], DirectedEdge["webwire", "transformers"], DirectedEdge["webwire", "wai"], DirectedEdge["webwire", "wai-extra"], DirectedEdge["wedding-announcement", "base"], DirectedEdge["wedged", "array"], DirectedEdge["wedged", "base"], DirectedEdge["wedged", "colour"], DirectedEdge["wedged", "containers"], DirectedEdge["wedged", "diagrams-cairo"], DirectedEdge["wedged", "diagrams-lib"], DirectedEdge["wedged", "MonadRandom"], DirectedEdge["wedged", "strict"], DirectedEdge["weigh", "base"], DirectedEdge["weigh", "deepseq"], DirectedEdge["weigh", "mtl"], DirectedEdge["weigh", "process"], DirectedEdge["weigh", "split"], DirectedEdge["weigh", "template-haskell"], DirectedEdge["weighted-regexp", "array"], DirectedEdge["weighted-regexp", "base"], DirectedEdge["weighted-regexp", "criterion"], DirectedEdge["weighted-regexp", "QuickCheck"], DirectedEdge["weighted-search", "base"], DirectedEdge["welshy", "aeson"], DirectedEdge["welshy", "base"], DirectedEdge["welshy", "blaze-builder"], DirectedEdge["welshy", "bytestring"], DirectedEdge["welshy", "conduit"], DirectedEdge["welshy", "http-types"], DirectedEdge["welshy", "lifted-base"], DirectedEdge["welshy", "resourcet"], DirectedEdge["welshy", "text"], DirectedEdge["welshy", "transformers"], DirectedEdge["welshy", "unordered-containers"], DirectedEdge["welshy", "wai"], DirectedEdge["welshy", "warp"], DirectedEdge["werewolf", "aeson"], DirectedEdge["werewolf", "base"], DirectedEdge["werewolf", "containers"], DirectedEdge["werewolf", "directory"], DirectedEdge["werewolf", "extra"], DirectedEdge["werewolf", "filepath"], DirectedEdge["werewolf", "interpolate"], DirectedEdge["werewolf", "lens"], DirectedEdge["werewolf", "MonadRandom"], DirectedEdge["werewolf", "mtl"], DirectedEdge["werewolf", "optparse-applicative"], DirectedEdge["werewolf", "random-shuffle"], DirectedEdge["werewolf", "template-haskell"], DirectedEdge["werewolf", "text"], DirectedEdge["werewolf", "transformers"], DirectedEdge["werewolf", "werewolf"], DirectedEdge["werewolf-slack", "aeson"], DirectedEdge["werewolf-slack", "base"], DirectedEdge["werewolf-slack", "bytestring"], DirectedEdge["werewolf-slack", "extra"], DirectedEdge["werewolf-slack", "http-client"], DirectedEdge["werewolf-slack", "http-client-tls"], DirectedEdge["werewolf-slack", "http-types"], DirectedEdge["werewolf-slack", "mtl"], DirectedEdge["werewolf-slack", "optparse-applicative"], DirectedEdge["werewolf-slack", "process"], DirectedEdge["werewolf-slack", "text"], DirectedEdge["werewolf-slack", "wai"], DirectedEdge["werewolf-slack", "warp"], DirectedEdge["werewolf-slack", "werewolf"], DirectedEdge["wheb-mongo", "base"], DirectedEdge["wheb-mongo", "bson"], DirectedEdge["wheb-mongo", "mongoDB"], DirectedEdge["wheb-mongo", "mtl"], DirectedEdge["wheb-mongo", "text"], DirectedEdge["wheb-mongo", "Wheb"], DirectedEdge["wheb-redis", "base"], DirectedEdge["wheb-redis", "bytestring"], DirectedEdge["wheb-redis", "hedis"], DirectedEdge["wheb-redis", "mtl"], DirectedEdge["wheb-redis", "text"], DirectedEdge["wheb-redis", "Wheb"], DirectedEdge["wheb-strapped", "base"], DirectedEdge["wheb-strapped", "mtl"], DirectedEdge["wheb-strapped", "StrappedTemplates"], DirectedEdge["wheb-strapped", "text"], DirectedEdge["wheb-strapped", "Wheb"], DirectedEdge["while-lang-parser", "base"], DirectedEdge["while-lang-parser", "indents"], DirectedEdge["while-lang-parser", "parsec"], DirectedEdge["whim", "base"], DirectedEdge["whim", "containers"], DirectedEdge["whim", "GLUT"], DirectedEdge["whim", "mtl"], DirectedEdge["whim", "OpenGL"], DirectedEdge["whim", "process"], DirectedEdge["whim", "random"], DirectedEdge["whiskers", "base"], DirectedEdge["whiskers", "parsec"], DirectedEdge["whiskers", "template-haskell"], DirectedEdge["whitespace", "random"], DirectedEdge["whois", "base"], DirectedEdge["whois", "network"], DirectedEdge["whois", "network-uri"], DirectedEdge["whois", "split"], DirectedEdge["why3", "array"], DirectedEdge["why3", "base"], DirectedEdge["why3", "bytestring"], DirectedEdge["why3", "containers"], DirectedEdge["why3", "deepseq"], DirectedEdge["why3", "directory"], DirectedEdge["why3", "filepath"], DirectedEdge["why3", "monadLib"], DirectedEdge["why3", "pretty"], DirectedEdge["why3", "pretty-show"], DirectedEdge["why3", "profunctors"], DirectedEdge["why3", "text"], DirectedEdge["wigner-symbols", "base"], DirectedEdge["wikicfp-scraper", "attoparsec"], DirectedEdge["wikicfp-scraper", "base"], DirectedEdge["wikicfp-scraper", "bytestring"], DirectedEdge["wikicfp-scraper", "scalpel"], DirectedEdge["wikicfp-scraper", "text"], DirectedEdge["wikicfp-scraper", "time"], DirectedEdge["wikipedia4epub", "base"], DirectedEdge["wikipedia4epub", "bytestring"], DirectedEdge["wikipedia4epub", "directory"], DirectedEdge["wikipedia4epub", "epub"], DirectedEdge["wikipedia4epub", "filepath"], DirectedEdge["wikipedia4epub", "HTTP"], DirectedEdge["wikipedia4epub", "network"], DirectedEdge["wikipedia4epub", "regex-base"], DirectedEdge["wikipedia4epub", "regex-posix"], DirectedEdge["wikipedia4epub", "tagsoup"], DirectedEdge["wikipedia4epub", "url"], DirectedEdge["wikipedia4epub", "xml"], DirectedEdge["wikipedia4epub", "zip-archive"], DirectedEdge["wikipedia4epub", "zlib"], DirectedEdge["win-hp-path", "base"], DirectedEdge["win-hp-path", "process"], DirectedEdge["win-hp-path", "split"], DirectedEdge["win-hp-path", "win-hp-path"], DirectedEdge["windowslive", "base"], DirectedEdge["windowslive", "Crypto"], DirectedEdge["windowslive", "dataenc"], DirectedEdge["windowslive", "HUnit"], DirectedEdge["windowslive", "mtl"], DirectedEdge["windowslive", "network"], DirectedEdge["windowslive", "parsec"], DirectedEdge["windowslive", "pretty"], DirectedEdge["windowslive", "split"], DirectedEdge["windowslive", "time"], DirectedEdge["windowslive", "urlencoded"], DirectedEdge["winerror", "base"], DirectedEdge["winio", "base"], DirectedEdge["winio", "bytestring"], DirectedEdge["winio", "extensible-exceptions"], DirectedEdge["winio", "network"], DirectedEdge["winio", "winerror"], DirectedEdge["wiring", "base"], DirectedEdge["wiring", "mtl"], DirectedEdge["wiring", "template-haskell"], DirectedEdge["wiring", "transformers"], DirectedEdge["with-location", "base"], DirectedEdge["withdependencies", "base"], DirectedEdge["withdependencies", "conduit"], DirectedEdge["withdependencies", "containers"], DirectedEdge["withdependencies", "mtl"], DirectedEdge["witherable", "base"], DirectedEdge["witherable", "base-orphans"], DirectedEdge["witherable", "containers"], DirectedEdge["witherable", "hashable"], DirectedEdge["witherable", "transformers"], DirectedEdge["witherable", "unordered-containers"], DirectedEdge["witherable", "vector"], DirectedEdge["witness", "base"], DirectedEdge["witness", "categories"], DirectedEdge["witness", "constraints"], DirectedEdge["witness", "transformers"], DirectedEdge["witty", "base"], DirectedEdge["witty", "bytestring"], DirectedEdge["witty", "network"], DirectedEdge["witty", "unix"], DirectedEdge["wizards", "base"], DirectedEdge["wizards", "containers"], DirectedEdge["wizards", "control-monad-free"], DirectedEdge["wizards", "haskeline"], DirectedEdge["wizards", "mtl"], DirectedEdge["wizards", "transformers"], DirectedEdge["wkt", "base"], DirectedEdge["wkt", "lens"], DirectedEdge["wkt", "linear"], DirectedEdge["wkt", "trifecta"], DirectedEdge["wl-pprint", "base"], DirectedEdge["wl-pprint-ansiterm", "ansi-terminal"], DirectedEdge["wl-pprint-ansiterm", "base"], DirectedEdge["wl-pprint-ansiterm", "bytestring"], DirectedEdge["wl-pprint-ansiterm", "containers"], DirectedEdge["wl-pprint-ansiterm", "mtl"], DirectedEdge["wl-pprint-ansiterm", "nats"], DirectedEdge["wl-pprint-ansiterm", "semigroups"], DirectedEdge["wl-pprint-ansiterm", "text"], DirectedEdge["wl-pprint-ansiterm", "transformers"], DirectedEdge["wl-pprint-ansiterm", "wl-pprint-extras"], DirectedEdge["wl-pprint-extras", "base"], DirectedEdge["wl-pprint-extras", "containers"], DirectedEdge["wl-pprint-extras", "nats"], DirectedEdge["wl-pprint-extras", "semigroupoids"], DirectedEdge["wl-pprint-extras", "semigroups"], DirectedEdge["wl-pprint-extras", "text"], DirectedEdge["wl-pprint-extras", "utf8-string"], DirectedEdge["wl-pprint-terminfo", "base"], DirectedEdge["wl-pprint-terminfo", "bytestring"], DirectedEdge["wl-pprint-terminfo", "containers"], DirectedEdge["wl-pprint-terminfo", "nats"], DirectedEdge["wl-pprint-terminfo", "semigroups"], DirectedEdge["wl-pprint-terminfo", "terminfo"], DirectedEdge["wl-pprint-terminfo", "text"], DirectedEdge["wl-pprint-terminfo", "transformers"], DirectedEdge["wl-pprint-terminfo", "wl-pprint-extras"], DirectedEdge["wl-pprint-text", "base"], DirectedEdge["wl-pprint-text", "text"], DirectedEdge["wlc-hs", "base"], DirectedEdge["wlc-hs", "containers"], DirectedEdge["wlc-hs", "data-default"], DirectedEdge["wlc-hs", "lens"], DirectedEdge["wlc-hs", "pretty"], DirectedEdge["wlc-hs", "process"], DirectedEdge["wlc-hs", "transformers"], DirectedEdge["wlc-hs", "xkbcommon"], DirectedEdge["wobsurv", "aeson"], DirectedEdge["wobsurv", "attoparsec"], DirectedEdge["wobsurv", "base-prelude"], DirectedEdge["wobsurv", "bytestring"], DirectedEdge["wobsurv", "hastache"], DirectedEdge["wobsurv", "http-types"], DirectedEdge["wobsurv", "monad-control"], DirectedEdge["wobsurv", "network"], DirectedEdge["wobsurv", "network-simple"], DirectedEdge["wobsurv", "old-locale"], DirectedEdge["wobsurv", "pipes"], DirectedEdge["wobsurv", "pipes-bytestring"], DirectedEdge["wobsurv", "pipes-network"], DirectedEdge["wobsurv", "pipes-parse"], DirectedEdge["wobsurv", "pipes-safe"], DirectedEdge["wobsurv", "pipes-text"], DirectedEdge["wobsurv", "safe"], DirectedEdge["wobsurv", "stm"], DirectedEdge["wobsurv", "stm-containers"], DirectedEdge["wobsurv", "system-fileio"], DirectedEdge["wobsurv", "system-filepath"], DirectedEdge["wobsurv", "text"], DirectedEdge["wobsurv", "time"], DirectedEdge["wobsurv", "transformers"], DirectedEdge["wobsurv", "unordered-containers"], DirectedEdge["wobsurv", "wobsurv"], DirectedEdge["wobsurv", "yaml"], DirectedEdge["woffex", "base"], DirectedEdge["woffex", "binary"], DirectedEdge["woffex", "bytestring"], DirectedEdge["woffex", "filepath"], DirectedEdge["woffex", "zlib"], DirectedEdge["wol", "base"], DirectedEdge["wol", "network"], DirectedEdge["wol", "split"], DirectedEdge["wolf", "aeson"], DirectedEdge["wolf", "amazonka"], DirectedEdge["wolf", "amazonka-core"], DirectedEdge["wolf", "amazonka-swf"], DirectedEdge["wolf", "async"], DirectedEdge["wolf", "base"], DirectedEdge["wolf", "basic-prelude"], DirectedEdge["wolf", "bytestring"], DirectedEdge["wolf", "conduit"], DirectedEdge["wolf", "conduit-extra"], DirectedEdge["wolf", "exceptions"], DirectedEdge["wolf", "fast-logger"], DirectedEdge["wolf", "formatting"], DirectedEdge["wolf", "http-conduit"], DirectedEdge["wolf", "http-types"], DirectedEdge["wolf", "lens"], DirectedEdge["wolf", "monad-control"], DirectedEdge["wolf", "monad-logger"], DirectedEdge["wolf", "mtl"], DirectedEdge["wolf", "mtl-compat"], DirectedEdge["wolf", "optparse-applicative"], DirectedEdge["wolf", "resourcet"], DirectedEdge["wolf", "safe"], DirectedEdge["wolf", "shelly"], DirectedEdge["wolf", "system-filepath"], DirectedEdge["wolf", "text"], DirectedEdge["wolf", "time"], DirectedEdge["wolf", "transformers"], DirectedEdge["wolf", "transformers-base"], DirectedEdge["wolf", "unordered-containers"], DirectedEdge["wolf", "uuid"], DirectedEdge["wolf", "wolf"], DirectedEdge["wolf", "yaml"], DirectedEdge["wolf", "zlib"], DirectedEdge["woot", "base"], DirectedEdge["woot", "vector"], DirectedEdge["word-trie", "base"], DirectedEdge["word-trie", "binary"], DirectedEdge["word-trie", "containers"], DirectedEdge["word-vector", "base"], DirectedEdge["word-vector", "bytestring"], DirectedEdge["word-vector", "ghc-prim"], DirectedEdge["word-vector", "vector"], DirectedEdge["word12", "base"], DirectedEdge["word12", "bytestring"], DirectedEdge["word24", "base"], DirectedEdge["word8", "base"], DirectedEdge["wordexp", "array"], DirectedEdge["wordexp", "base"], DirectedEdge["wordexp", "semigroups"], DirectedEdge["wordpass", "base"], DirectedEdge["wordpass", "containers"], DirectedEdge["wordpass", "deepseq"], DirectedEdge["wordpass", "directory"], DirectedEdge["wordpass", "filepath"], DirectedEdge["wordpass", "hflags"], DirectedEdge["wordpass", "random-fu"], DirectedEdge["wordpass", "random-source"], DirectedEdge["wordpass", "text"], DirectedEdge["wordpass", "unix-compat"], DirectedEdge["wordpass", "vector"], DirectedEdge["words", "base"], DirectedEdge["words", "directory"], DirectedEdge["words", "text"], DirectedEdge["wordsearch", "array"], DirectedEdge["wordsearch", "base"], DirectedEdge["wordsearch", "containers"], DirectedEdge["wordsearch", "fclabels"], DirectedEdge["wordsetdiff", "ansi-terminal"], DirectedEdge["wordsetdiff", "base"], DirectedEdge["wordsetdiff", "bytestring"], DirectedEdge["wordsetdiff", "containers"], DirectedEdge["wordsetdiff", "directory"], DirectedEdge["wordsetdiff", "filepath"], DirectedEdge["wordsetdiff", "hashmap"], DirectedEdge["wordsetdiff", "process"], DirectedEdge["workflow-osx", "base"], DirectedEdge["workflow-osx", "bv"], DirectedEdge["workflow-osx", "bytestring"], DirectedEdge["workflow-osx", "exceptions"], DirectedEdge["workflow-osx", "filepath"], DirectedEdge["workflow-osx", "free"], DirectedEdge["workflow-osx", "http-types"], DirectedEdge["workflow-osx", "mtl"], DirectedEdge["workflow-osx", "transformers"], DirectedEdge["workflow-osx", "workflow-osx"], DirectedEdge["wp-archivebot", "base"], DirectedEdge["wp-archivebot", "feed"], DirectedEdge["wp-archivebot", "HTTP"], DirectedEdge["wp-archivebot", "network"], DirectedEdge["wp-archivebot", "parallel"], DirectedEdge["wp-archivebot", "tagsoup"], DirectedEdge["wrap", "base"], DirectedEdge["wraparound", "base"], DirectedEdge["wraxml", "base"], DirectedEdge["wraxml", "containers"], DirectedEdge["wraxml", "data-accessor"], DirectedEdge["wraxml", "explicit-exception"], DirectedEdge["wraxml", "HaXml"], DirectedEdge["wraxml", "hxt"], DirectedEdge["wraxml", "hxt-filter"], DirectedEdge["wraxml", "polyparse"], DirectedEdge["wraxml", "tagchup"], DirectedEdge["wraxml", "tagsoup"], DirectedEdge["wraxml", "transformers"], DirectedEdge["wraxml", "utility-ht"], DirectedEdge["wraxml", "xml-basic"], DirectedEdge["wreq", "aeson"], DirectedEdge["wreq", "attoparsec"], DirectedEdge["wreq", "authenticate-oauth"], DirectedEdge["wreq", "base"], DirectedEdge["wreq", "base16-bytestring"], DirectedEdge["wreq", "byteable"], DirectedEdge["wreq", "bytestring"], DirectedEdge["wreq", "case-insensitive"], DirectedEdge["wreq", "containers"], DirectedEdge["wreq", "cryptohash"], DirectedEdge["wreq", "exceptions"], DirectedEdge["wreq", "ghc-prim"], DirectedEdge["wreq", "hashable"], DirectedEdge["wreq", "http-client"], DirectedEdge["wreq", "http-client-tls"], DirectedEdge["wreq", "http-types"], DirectedEdge["wreq", "lens"], DirectedEdge["wreq", "lens-aeson"], DirectedEdge["wreq", "mime-types"], DirectedEdge["wreq", "psqueues"], DirectedEdge["wreq", "template-haskell"], DirectedEdge["wreq", "text"], DirectedEdge["wreq", "time"], DirectedEdge["wreq", "time-locale-compat"], DirectedEdge["wreq", "unordered-containers"], DirectedEdge["wreq-sb", "wreq"], DirectedEdge["wreq-sb", "aeson"], DirectedEdge["wreq-sb", "attoparsec"], DirectedEdge["wreq-sb", "authenticate-oauth"], DirectedEdge["wreq-sb", "base"], DirectedEdge["wreq-sb", "base16-bytestring"], DirectedEdge["wreq-sb", "byteable"], DirectedEdge["wreq-sb", "bytestring"], DirectedEdge["wreq-sb", "case-insensitive"], DirectedEdge["wreq-sb", "containers"], DirectedEdge["wreq-sb", "cryptohash"], DirectedEdge["wreq-sb", "exceptions"], DirectedEdge["wreq-sb", "ghc-prim"], DirectedEdge["wreq-sb", "hashable"], DirectedEdge["wreq-sb", "http-client"], DirectedEdge["wreq-sb", "http-client-tls"], DirectedEdge["wreq-sb", "http-types"], DirectedEdge["wreq-sb", "lens"], DirectedEdge["wreq-sb", "lens-aeson"], DirectedEdge["wreq-sb", "mime-types"], DirectedEdge["wreq-sb", "old-locale"], DirectedEdge["wreq-sb", "psqueues"], DirectedEdge["wreq-sb", "template-haskell"], DirectedEdge["wreq-sb", "text"], DirectedEdge["wreq-sb", "time"], DirectedEdge["wreq-sb", "unordered-containers"], DirectedEdge["wright", "base"], DirectedEdge["wright", "bed-and-breakfast"], DirectedEdge["wright", "containers"], DirectedEdge["wsdl", "base"], DirectedEdge["wsdl", "bytestring"], DirectedEdge["wsdl", "conduit"], DirectedEdge["wsdl", "exceptions"], DirectedEdge["wsdl", "mtl"], DirectedEdge["wsdl", "network-uri"], DirectedEdge["wsdl", "resourcet"], DirectedEdge["wsdl", "text"], DirectedEdge["wsdl", "xml-conduit"], DirectedEdge["wsdl", "xml-types"], DirectedEdge["wsedit", "base"], DirectedEdge["wsedit", "bencode"], DirectedEdge["wsedit", "bytestring"], DirectedEdge["wsedit", "containers"], DirectedEdge["wsedit", "directory"], DirectedEdge["wsedit", "safe"], DirectedEdge["wsedit", "utf8-string"], DirectedEdge["wtk", "base"], DirectedEdge["wtk", "old-locale"], DirectedEdge["wtk", "time"], DirectedEdge["wtk", "transformers"], DirectedEdge["wtk-gtk", "base"], DirectedEdge["wtk-gtk", "containers"], DirectedEdge["wtk-gtk", "gtk"], DirectedEdge["wtk-gtk", "lenses"], DirectedEdge["wtk-gtk", "mtl"], DirectedEdge["wtk-gtk", "old-locale"], DirectedEdge["wtk-gtk", "parsec"], DirectedEdge["wtk-gtk", "time"], DirectedEdge["wtk-gtk", "wtk"], DirectedEdge["wumpus-basic", "base"], DirectedEdge["wumpus-basic", "containers"], DirectedEdge["wumpus-basic", "directory"], DirectedEdge["wumpus-basic", "filepath"], DirectedEdge["wumpus-basic", "vector-space"], DirectedEdge["wumpus-basic", "wumpus-core"], DirectedEdge["wumpus-core", "base"], DirectedEdge["wumpus-core", "containers"], DirectedEdge["wumpus-core", "time"], DirectedEdge["wumpus-core", "vector-space"], DirectedEdge["wumpus-drawing", "base"], DirectedEdge["wumpus-drawing", "containers"], DirectedEdge["wumpus-drawing", "vector-space"], DirectedEdge["wumpus-drawing", "wumpus-basic"], DirectedEdge["wumpus-drawing", "wumpus-core"], DirectedEdge["wumpus-microprint", "base"], DirectedEdge["wumpus-microprint", "vector-space"], DirectedEdge["wumpus-microprint", "wumpus-basic"], DirectedEdge["wumpus-microprint", "wumpus-core"], DirectedEdge["wumpus-microprint", "wumpus-drawing"], DirectedEdge["wumpus-tree", "base"], DirectedEdge["wumpus-tree", "containers"], DirectedEdge["wumpus-tree", "vector-space"], DirectedEdge["wumpus-tree", "wumpus-basic"], DirectedEdge["wumpus-tree", "wumpus-core"], DirectedEdge["wumpus-tree", "wumpus-drawing"], DirectedEdge["wuss", "base"], DirectedEdge["wuss", "bytestring"], DirectedEdge["wuss", "connection"], DirectedEdge["wuss", "network"], DirectedEdge["wuss", "websockets"], DirectedEdge["wx", "base"], DirectedEdge["wx", "stm"], DirectedEdge["wx", "time"], DirectedEdge["wx", "wxcore"], DirectedEdge["wxAsteroids", "base"], DirectedEdge["wxAsteroids", "directory"], DirectedEdge["wxAsteroids", "random"], DirectedEdge["wxAsteroids", "wx"], DirectedEdge["wxAsteroids", "wxcore"], DirectedEdge["wxFruit", "base"], DirectedEdge["wxFruit", "old-time"], DirectedEdge["wxFruit", "wx"], DirectedEdge["wxFruit", "wxcore"], DirectedEdge["wxFruit", "Yampa"], DirectedEdge["wxc", "base"], DirectedEdge["wxc", "split"], DirectedEdge["wxc", "wxdirect"], DirectedEdge["wxcore", "array"], DirectedEdge["wxcore", "base"], DirectedEdge["wxcore", "bytestring"], DirectedEdge["wxcore", "containers"], DirectedEdge["wxcore", "directory"], DirectedEdge["wxcore", "filepath"], DirectedEdge["wxcore", "parsec"], DirectedEdge["wxcore", "stm"], DirectedEdge["wxcore", "time"], DirectedEdge["wxcore", "wxc"], DirectedEdge["wxcore", "wxdirect"], DirectedEdge["wxdirect", "base"], DirectedEdge["wxdirect", "containers"], DirectedEdge["wxdirect", "directory"], DirectedEdge["wxdirect", "filepath"], DirectedEdge["wxdirect", "parsec"], DirectedEdge["wxdirect", "process"], DirectedEdge["wxdirect", "strict"], DirectedEdge["wxdirect", "time"], DirectedEdge["wxhnotepad", "base"], DirectedEdge["wxhnotepad", "wx"], DirectedEdge["wxhnotepad", "wxcore"], DirectedEdge["wxturtle", "base"], DirectedEdge["wxturtle", "convertible"], DirectedEdge["wxturtle", "Imlib"], DirectedEdge["wxturtle", "wx"], DirectedEdge["wxturtle", "yjsvg"], DirectedEdge["wxturtle", "yjtools"], DirectedEdge["wybor", "ansi-terminal"], DirectedEdge["wybor", "base"], DirectedEdge["wybor", "conduit"], DirectedEdge["wybor", "containers"], DirectedEdge["wybor", "lens"], DirectedEdge["wybor", "resourcet"], DirectedEdge["wybor", "semigroups"], DirectedEdge["wybor", "terminal-size"], DirectedEdge["wybor", "text"], DirectedEdge["wybor", "transformers"], DirectedEdge["wybor", "unix"], DirectedEdge["wyvern", "base"], DirectedEdge["wyvern", "bytestring"], DirectedEdge["wyvern", "ConfigFile"], DirectedEdge["wyvern", "containers"], DirectedEdge["wyvern", "dgs"], DirectedEdge["wyvern", "directory"], DirectedEdge["wyvern", "filepath"], DirectedEdge["wyvern", "mtl"], DirectedEdge["wyvern", "parsec"], DirectedEdge["wyvern", "process"], DirectedEdge["wyvern", "sgf"], DirectedEdge["wyvern", "split"], DirectedEdge["x-dsp", "array"], DirectedEdge["x-dsp", "base"], DirectedEdge["x-dsp", "bytestring"], DirectedEdge["x-dsp", "containers"], DirectedEdge["x-dsp", "monads-tf"], DirectedEdge["x-dsp", "text"], DirectedEdge["x-dsp", "transformers"], DirectedEdge["x-dsp", "type-level"], DirectedEdge["x11-xim", "base"], DirectedEdge["x11-xim", "utf8-string"], DirectedEdge["x11-xinput", "base"], DirectedEdge["x11-xinput", "containers"], DirectedEdge["x11-xinput", "mtl"], DirectedEdge["x509", "asn1-encoding"], DirectedEdge["x509", "asn1-parse"], DirectedEdge["x509", "asn1-types"], DirectedEdge["x509", "base"], DirectedEdge["x509", "bytestring"], DirectedEdge["x509", "containers"], DirectedEdge["x509", "cryptonite"], DirectedEdge["x509", "hourglass"], DirectedEdge["x509", "memory"], DirectedEdge["x509", "mtl"], DirectedEdge["x509", "pem"], DirectedEdge["x509-store", "asn1-encoding"], DirectedEdge["x509-store", "asn1-types"], DirectedEdge["x509-store", "base"], DirectedEdge["x509-store", "bytestring"], DirectedEdge["x509-store", "containers"], DirectedEdge["x509-store", "cryptonite"], DirectedEdge["x509-store", "mtl"], DirectedEdge["x509-store", "pem"], DirectedEdge["x509-system", "asn1-encoding"], DirectedEdge["x509-system", "base"], DirectedEdge["x509-system", "bytestring"], DirectedEdge["x509-system", "containers"], DirectedEdge["x509-system", "directory"], DirectedEdge["x509-system", "filepath"], DirectedEdge["x509-system", "mtl"], DirectedEdge["x509-system", "pem"], DirectedEdge["x509-system", "process"], DirectedEdge["x509-system", "x509-store"], DirectedEdge["x509-util", "asn1-encoding"], DirectedEdge["x509-util", "asn1-types"], DirectedEdge["x509-util", "base"], DirectedEdge["x509-util", "bytestring"], DirectedEdge["x509-util", "cryptonite"], DirectedEdge["x509-util", "directory"], DirectedEdge["x509-util", "hourglass"], DirectedEdge["x509-util", "pem"], DirectedEdge["x509-util", "x509-store"], DirectedEdge["x509-util", "x509-system"], DirectedEdge["x509-util", "x509-validation"], DirectedEdge["x509-validation", "asn1-encoding"], DirectedEdge["x509-validation", "asn1-types"], DirectedEdge["x509-validation", "base"], DirectedEdge["x509-validation", "byteable"], DirectedEdge["x509-validation", "bytestring"], DirectedEdge["x509-validation", "containers"], DirectedEdge["x509-validation", "cryptonite"], DirectedEdge["x509-validation", "data-default-class"], DirectedEdge["x509-validation", "hourglass"], DirectedEdge["x509-validation", "memory"], DirectedEdge["x509-validation", "mtl"], DirectedEdge["x509-validation", "pem"], DirectedEdge["x509-validation", "x509-store"], DirectedEdge["xattr", "base"], DirectedEdge["xattr", "bytestring"], DirectedEdge["xattr", "unix"], DirectedEdge["xbattbar", "base"], DirectedEdge["xbattbar", "old-time"], DirectedEdge["xbattbar", "select"], DirectedEdge["xcb-types", "base"], DirectedEdge["xcb-types", "containers"], DirectedEdge["xcb-types", "mtl"], DirectedEdge["xcb-types", "pretty"], DirectedEdge["xcb-types", "xml"], DirectedEdge["xcffib", "attoparsec"], DirectedEdge["xcffib", "base"], DirectedEdge["xcffib", "bytestring"], DirectedEdge["xcffib", "containers"], DirectedEdge["xcffib", "directory"], DirectedEdge["xcffib", "filemanip"], DirectedEdge["xcffib", "filepath"], DirectedEdge["xcffib", "language-python"], DirectedEdge["xcffib", "mtl"], DirectedEdge["xcffib", "optparse-applicative"], DirectedEdge["xcffib", "split"], DirectedEdge["xcffib", "xcb-types"], DirectedEdge["xcffib", "xcffib"], DirectedEdge["xchat-plugin", "base"], DirectedEdge["xchat-plugin", "directory"], DirectedEdge["xchat-plugin", "filepath"], DirectedEdge["xchat-plugin", "process"], DirectedEdge["xchat-plugin", "unix"], DirectedEdge["xcp", "base"], DirectedEdge["xcp", "bytestring"], DirectedEdge["xcp", "containers"], DirectedEdge["xcp", "mtl"], DirectedEdge["xcp", "network"], DirectedEdge["xcp", "transformers"], DirectedEdge["xdcc", "ascii-progress"], DirectedEdge["xdcc", "base"], DirectedEdge["xdcc", "bytestring"], DirectedEdge["xdcc", "case-insensitive"], DirectedEdge["xdcc", "concurrent-extra"], DirectedEdge["xdcc", "concurrent-output"], DirectedEdge["xdcc", "errors"], DirectedEdge["xdcc", "iproute"], DirectedEdge["xdcc", "irc-ctcp"], DirectedEdge["xdcc", "irc-dcc"], DirectedEdge["xdcc", "lifted-base"], DirectedEdge["xdcc", "network"], DirectedEdge["xdcc", "optparse-applicative"], DirectedEdge["xdcc", "path"], DirectedEdge["xdcc", "random"], DirectedEdge["xdcc", "simpleirc"], DirectedEdge["xdcc", "transformers"], DirectedEdge["xdcc", "unix-compat"], DirectedEdge["xdg-basedir", "base"], DirectedEdge["xdg-basedir", "directory"], DirectedEdge["xdg-basedir", "filepath"], DirectedEdge["xdg-userdirs", "base"], DirectedEdge["xdg-userdirs", "containers"], DirectedEdge["xdg-userdirs", "directory"], DirectedEdge["xdg-userdirs", "filepath"], DirectedEdge["xdg-userdirs", "xdg-basedir"], DirectedEdge["xdot", "base"], DirectedEdge["xdot", "cairo"], DirectedEdge["xdot", "graphviz"], DirectedEdge["xdot", "mtl"], DirectedEdge["xdot", "polyparse"], DirectedEdge["xdot", "text"], DirectedEdge["xdot", "transformers"], DirectedEdge["xdot", "xdot"], DirectedEdge["xenstore", "base"], DirectedEdge["xenstore", "bytestring"], DirectedEdge["xenstore", "cereal"], DirectedEdge["xenstore", "mtl"], DirectedEdge["xenstore", "network"], DirectedEdge["xfconf", "base"], DirectedEdge["xfconf", "glib"], DirectedEdge["xfconf", "HUnit"], DirectedEdge["xfconf", "QuickCheck"], DirectedEdge["xfconf", "test-framework"], DirectedEdge["xfconf", "test-framework-hunit"], DirectedEdge["xformat", "base"], DirectedEdge["xhaskell-library", "regex-pderiv"], DirectedEdge["xhaskell-library", "base"], DirectedEdge["xhaskell-library", "bytestring"], DirectedEdge["xhaskell-library", "containers"], DirectedEdge["xhaskell-library", "ghc-prim"], DirectedEdge["xhaskell-library", "mtl"], DirectedEdge["xhaskell-library", "parsec"], DirectedEdge["xhaskell-library", "regex-base"], DirectedEdge["xhb", "base"], DirectedEdge["xhb", "binary"], DirectedEdge["xhb", "byteorder"], DirectedEdge["xhb", "bytestring"], DirectedEdge["xhb", "containers"], DirectedEdge["xhb", "network"], DirectedEdge["xhb", "parsec"], DirectedEdge["xhb", "stm"], DirectedEdge["xhb", "Xauth"], DirectedEdge["xhb-atom-cache", "base"], DirectedEdge["xhb-atom-cache", "hashable"], DirectedEdge["xhb-atom-cache", "mtl"], DirectedEdge["xhb-atom-cache", "transformers"], DirectedEdge["xhb-atom-cache", "unordered-containers"], DirectedEdge["xhb-atom-cache", "xhb"], DirectedEdge["xhb-ewmh", "base"], DirectedEdge["xhb-ewmh", "binary"], DirectedEdge["xhb-ewmh", "bytestring"], DirectedEdge["xhb-ewmh", "dlist"], DirectedEdge["xhb-ewmh", "hashable"], DirectedEdge["xhb-ewmh", "mtl"], DirectedEdge["xhb-ewmh", "transformers"], DirectedEdge["xhb-ewmh", "xhb"], DirectedEdge["xhb-ewmh", "xhb-atom-cache"], DirectedEdge["xhtml", "base"], DirectedEdge["xhtml-combinators", "base"], DirectedEdge["xhtml-combinators", "containers"], DirectedEdge["xhtml-combinators", "random"], DirectedEdge["xhtml-combinators", "text"], DirectedEdge["xhtml-combinators", "transformers"], DirectedEdge["xhtml-combinators", "xml"], DirectedEdge["xilinx-lava", "array"], DirectedEdge["xilinx-lava", "base"], DirectedEdge["xilinx-lava", "directory"], DirectedEdge["xilinx-lava", "mtl"], DirectedEdge["xilinx-lava", "old-time"], DirectedEdge["xilinx-lava", "process"], DirectedEdge["xine", "base"], DirectedEdge["xine", "containers"], DirectedEdge["xing-api", "aeson"], DirectedEdge["xing-api", "authenticate-oauth"], DirectedEdge["xing-api", "base"], DirectedEdge["xing-api", "bytestring"], DirectedEdge["xing-api", "containers"], DirectedEdge["xing-api", "hamlet"], DirectedEdge["xing-api", "http-conduit"], DirectedEdge["xing-api", "http-types"], DirectedEdge["xing-api", "lifted-base"], DirectedEdge["xing-api", "monad-control"], DirectedEdge["xing-api", "resourcet"], DirectedEdge["xing-api", "shakespeare-i18n"], DirectedEdge["xing-api", "text"], DirectedEdge["xing-api", "time"], DirectedEdge["xing-api", "transformers"], DirectedEdge["xing-api", "warp"], DirectedEdge["xing-api", "xing-api"], DirectedEdge["xing-api", "yesod-core"], DirectedEdge["xinput-conduit", "base"], DirectedEdge["xinput-conduit", "bytestring"], DirectedEdge["xinput-conduit", "conduit"], DirectedEdge["xinput-conduit", "conduit-extra"], DirectedEdge["xinput-conduit", "transformers"], DirectedEdge["xkbcommon", "base"], DirectedEdge["xkbcommon", "bytestring"], DirectedEdge["xkbcommon", "cpphs"], DirectedEdge["xkbcommon", "data-flags"], DirectedEdge["xkbcommon", "filepath"], DirectedEdge["xkbcommon", "process"], DirectedEdge["xkbcommon", "storable-record"], DirectedEdge["xkbcommon", "template-haskell"], DirectedEdge["xkbcommon", "text"], DirectedEdge["xkbcommon", "transformers"], DirectedEdge["xkcd", "base"], DirectedEdge["xkcd", "bytestring"], DirectedEdge["xkcd", "directory"], DirectedEdge["xkcd", "filepath"], DirectedEdge["xkcd", "HTTP"], DirectedEdge["xkcd", "network"], DirectedEdge["xkcd", "tagsoup"], DirectedEdge["xlsior", "attoparsec"], DirectedEdge["xlsior", "base"], DirectedEdge["xlsior", "blaze-markup"], DirectedEdge["xlsior", "bytestring"], DirectedEdge["xlsior", "conduit"], DirectedEdge["xlsior", "conduit-extra"], DirectedEdge["xlsior", "data-default"], DirectedEdge["xlsior", "exceptions"], DirectedEdge["xlsior", "mtl"], DirectedEdge["xlsior", "resourcet"], DirectedEdge["xlsior", "scientific"], DirectedEdge["xlsior", "text"], DirectedEdge["xlsior", "time"], DirectedEdge["xlsior", "time-locale-compat"], DirectedEdge["xlsior", "vector"], DirectedEdge["xlsior", "xml-conduit"], DirectedEdge["xlsior", "xml-types"], DirectedEdge["xlsior", "zip-archive"], DirectedEdge["xlsx", "base"], DirectedEdge["xlsx", "binary-search"], DirectedEdge["xlsx", "bytestring"], DirectedEdge["xlsx", "conduit"], DirectedEdge["xlsx", "containers"], DirectedEdge["xlsx", "data-default"], DirectedEdge["xlsx", "digest"], DirectedEdge["xlsx", "lens"], DirectedEdge["xlsx", "mtl"], DirectedEdge["xlsx", "old-locale"], DirectedEdge["xlsx", "text"], DirectedEdge["xlsx", "time"], DirectedEdge["xlsx", "transformers"], DirectedEdge["xlsx", "utf8-string"], DirectedEdge["xlsx", "vector"], DirectedEdge["xlsx", "xml-conduit"], DirectedEdge["xlsx", "xml-types"], DirectedEdge["xlsx", "zip-archive"], DirectedEdge["xlsx", "zlib"], DirectedEdge["xlsx-tabular", "aeson"], DirectedEdge["xlsx-tabular", "base"], DirectedEdge["xlsx-tabular", "bytestring"], DirectedEdge["xlsx-tabular", "containers"], DirectedEdge["xlsx-tabular", "data-default"], DirectedEdge["xlsx-tabular", "lens"], DirectedEdge["xlsx-tabular", "text"], DirectedEdge["xlsx-tabular", "xlsx"], DirectedEdge["xlsx-templater", "base"], DirectedEdge["xlsx-templater", "bytestring"], DirectedEdge["xlsx-templater", "conduit"], DirectedEdge["xlsx-templater", "containers"], DirectedEdge["xlsx-templater", "data-default"], DirectedEdge["xlsx-templater", "parsec"], DirectedEdge["xlsx-templater", "text"], DirectedEdge["xlsx-templater", "time"], DirectedEdge["xlsx-templater", "transformers"], DirectedEdge["xlsx-templater", "xlsx"], DirectedEdge["xml", "base"], DirectedEdge["xml", "bytestring"], DirectedEdge["xml", "text"], DirectedEdge["xml-basic", "applicative"], DirectedEdge["xml-basic", "base"], DirectedEdge["xml-basic", "containers"], DirectedEdge["xml-basic", "data-accessor"], DirectedEdge["xml-basic", "explicit-exception"], DirectedEdge["xml-basic", "special-functors"], DirectedEdge["xml-basic", "utility-ht"], DirectedEdge["xml-catalog", "base"], DirectedEdge["xml-catalog", "bytestring"], DirectedEdge["xml-catalog", "conduit"], DirectedEdge["xml-catalog", "containers"], DirectedEdge["xml-catalog", "text"], DirectedEdge["xml-catalog", "transformers"], DirectedEdge["xml-catalog", "uri-conduit"], DirectedEdge["xml-catalog", "xml-conduit"], DirectedEdge["xml-conduit", "attoparsec"], DirectedEdge["xml-conduit", "base"], DirectedEdge["xml-conduit", "blaze-builder"], DirectedEdge["xml-conduit", "blaze-html"], DirectedEdge["xml-conduit", "blaze-markup"], DirectedEdge["xml-conduit", "bytestring"], DirectedEdge["xml-conduit", "conduit"], DirectedEdge["xml-conduit", "conduit-extra"], DirectedEdge["xml-conduit", "containers"], DirectedEdge["xml-conduit", "data-default"], DirectedEdge["xml-conduit", "deepseq"], DirectedEdge["xml-conduit", "monad-control"], DirectedEdge["xml-conduit", "resourcet"], DirectedEdge["xml-conduit", "text"], DirectedEdge["xml-conduit", "transformers"], DirectedEdge["xml-conduit", "xml-types"], DirectedEdge["xml-conduit-parse", "base"], DirectedEdge["xml-conduit-parse", "conduit"], DirectedEdge["xml-conduit-parse", "conduit-parse"], DirectedEdge["xml-conduit-parse", "containers"], DirectedEdge["xml-conduit-parse", "exceptions"], DirectedEdge["xml-conduit-parse", "parsers"], DirectedEdge["xml-conduit-parse", "text"], DirectedEdge["xml-conduit-parse", "xml-conduit"], DirectedEdge["xml-conduit-parse", "xml-types"], DirectedEdge["xml-conduit-writer", "base"], DirectedEdge["xml-conduit-writer", "containers"], DirectedEdge["xml-conduit-writer", "dlist"], DirectedEdge["xml-conduit-writer", "mtl"], DirectedEdge["xml-conduit-writer", "text"], DirectedEdge["xml-conduit-writer", "xml-conduit"], DirectedEdge["xml-conduit-writer", "xml-types"], DirectedEdge["xml-enumerator", "xml-conduit"], DirectedEdge["xml-enumerator", "attoparsec"], DirectedEdge["xml-enumerator", "attoparsec-enumerator"], DirectedEdge["xml-enumerator", "base"], DirectedEdge["xml-enumerator", "blaze-builder"], DirectedEdge["xml-enumerator", "blaze-builder-enumerator"], DirectedEdge["xml-enumerator", "bytestring"], DirectedEdge["xml-enumerator", "containers"], DirectedEdge["xml-enumerator", "data-default"], DirectedEdge["xml-enumerator", "enumerator"], DirectedEdge["xml-enumerator", "failure"], DirectedEdge["xml-enumerator", "text"], DirectedEdge["xml-enumerator", "transformers"], DirectedEdge["xml-enumerator", "xml-types"], DirectedEdge["xml-enumerator-combinators", "base"], DirectedEdge["xml-enumerator-combinators", "bytestring"], DirectedEdge["xml-enumerator-combinators", "containers"], DirectedEdge["xml-enumerator-combinators", "enumerator"], DirectedEdge["xml-enumerator-combinators", "hspec"], DirectedEdge["xml-enumerator-combinators", "HUnit"], DirectedEdge["xml-enumerator-combinators", "text"], DirectedEdge["xml-enumerator-combinators", "transformers"], DirectedEdge["xml-enumerator-combinators", "xml-enumerator"], DirectedEdge["xml-enumerator-combinators", "xml-types"], DirectedEdge["xml-extractors", "base"], DirectedEdge["xml-extractors", "mtl"], DirectedEdge["xml-extractors", "safe"], DirectedEdge["xml-extractors", "transformers"], DirectedEdge["xml-extractors", "xml"], DirectedEdge["xml-hamlet", "base"], DirectedEdge["xml-hamlet", "containers"], DirectedEdge["xml-hamlet", "parsec"], DirectedEdge["xml-hamlet", "shakespeare"], DirectedEdge["xml-hamlet", "template-haskell"], DirectedEdge["xml-hamlet", "text"], DirectedEdge["xml-hamlet", "xml-conduit"], DirectedEdge["xml-helpers", "base"], DirectedEdge["xml-helpers", "xml"], DirectedEdge["xml-html-conduit-lens", "base"], DirectedEdge["xml-html-conduit-lens", "bytestring"], DirectedEdge["xml-html-conduit-lens", "containers"], DirectedEdge["xml-html-conduit-lens", "html-conduit"], DirectedEdge["xml-html-conduit-lens", "lens"], DirectedEdge["xml-html-conduit-lens", "text"], DirectedEdge["xml-html-conduit-lens", "xml-conduit"], DirectedEdge["xml-lens", "base"], DirectedEdge["xml-lens", "case-insensitive"], DirectedEdge["xml-lens", "containers"], DirectedEdge["xml-lens", "lens"], DirectedEdge["xml-lens", "text"], DirectedEdge["xml-lens", "xml-conduit"], DirectedEdge["xml-monad", "base"], DirectedEdge["xml-monad", "mtl"], DirectedEdge["xml-monad", "transformers"], DirectedEdge["xml-monad", "transformers-compose"], DirectedEdge["xml-monad", "xml"], DirectedEdge["xml-parsec", "base"], DirectedEdge["xml-parsec", "HaXml"], DirectedEdge["xml-parsec", "parsec"], DirectedEdge["xml-picklers", "base"], DirectedEdge["xml-picklers", "containers"], DirectedEdge["xml-picklers", "text"], DirectedEdge["xml-picklers", "xml-types"], DirectedEdge["xml-pipe", "base"], DirectedEdge["xml-pipe", "bytestring"], DirectedEdge["xml-pipe", "papillon"], DirectedEdge["xml-pipe", "simple-pipe"], DirectedEdge["xml-prettify", "base"], DirectedEdge["xml-prettify", "cmdargs"], DirectedEdge["xml-prettify", "unix"], DirectedEdge["xml-push", "base"], DirectedEdge["xml-push", "bytestring"], DirectedEdge["xml-push", "crypto-random"], DirectedEdge["xml-push", "handle-like"], DirectedEdge["xml-push", "monad-control"], DirectedEdge["xml-push", "monads-tf"], DirectedEdge["xml-push", "peyotls"], DirectedEdge["xml-push", "random"], DirectedEdge["xml-push", "sasl"], DirectedEdge["xml-push", "simple-pipe"], DirectedEdge["xml-push", "stm"], DirectedEdge["xml-push", "tighttp"], DirectedEdge["xml-push", "transformers-base"], DirectedEdge["xml-push", "uuid"], DirectedEdge["xml-push", "x509-store"], DirectedEdge["xml-push", "x509-validation"], DirectedEdge["xml-push", "xml-pipe"], DirectedEdge["xml-push", "xmpipe"], DirectedEdge["xml-query", "base-prelude"], DirectedEdge["xml-query", "free"], DirectedEdge["xml-query", "text"], DirectedEdge["xml-query-xml-conduit", "base-prelude"], DirectedEdge["xml-query-xml-conduit", "text"], DirectedEdge["xml-query-xml-conduit", "xml-conduit"], DirectedEdge["xml-query-xml-conduit", "xml-query"], DirectedEdge["xml-query-xml-conduit", "xml-query-xml-types"], DirectedEdge["xml-query-xml-conduit", "xml-types"], DirectedEdge["xml-query-xml-types", "base-prelude"], DirectedEdge["xml-query-xml-types", "free"], DirectedEdge["xml-query-xml-types", "html-entities"], DirectedEdge["xml-query-xml-types", "success"], DirectedEdge["xml-query-xml-types", "text"], DirectedEdge["xml-query-xml-types", "transformers"], DirectedEdge["xml-query-xml-types", "xml-query"], DirectedEdge["xml-query-xml-types", "xml-types"], DirectedEdge["xml-to-json", "aeson"], DirectedEdge["xml-to-json", "base"], DirectedEdge["xml-to-json", "bytestring"], DirectedEdge["xml-to-json", "containers"], DirectedEdge["xml-to-json", "curl"], DirectedEdge["xml-to-json", "hashable"], DirectedEdge["xml-to-json", "hxt"], DirectedEdge["xml-to-json", "hxt-curl"], DirectedEdge["xml-to-json", "hxt-expat"], DirectedEdge["xml-to-json", "hxt-tagsoup"], DirectedEdge["xml-to-json", "regex-posix"], DirectedEdge["xml-to-json", "tagsoup"], DirectedEdge["xml-to-json", "text"], DirectedEdge["xml-to-json", "unordered-containers"], DirectedEdge["xml-to-json", "vector"], DirectedEdge["xml-to-json", "xml-to-json"], DirectedEdge["xml-to-json-fast", "base"], DirectedEdge["xml-to-json-fast", "directory"], DirectedEdge["xml-to-json-fast", "process"], DirectedEdge["xml-to-json-fast", "tagsoup"], DirectedEdge["xml-to-json-fast", "text"], DirectedEdge["xml-to-json-fast", "xml-to-json-fast"], DirectedEdge["xml-types", "base"], DirectedEdge["xml-types", "deepseq"], DirectedEdge["xml-types", "ghc-prim"], DirectedEdge["xml-types", "text"], DirectedEdge["xml2html", "base"], DirectedEdge["xml2html", "xml-conduit"], DirectedEdge["xml2json", "aeson"], DirectedEdge["xml2json", "attoparsec"], DirectedEdge["xml2json", "attoparsec-conduit"], DirectedEdge["xml2json", "base"], DirectedEdge["xml2json", "blaze-builder"], DirectedEdge["xml2json", "blaze-builder-conduit"], DirectedEdge["xml2json", "bytestring"], DirectedEdge["xml2json", "case-insensitive"], DirectedEdge["xml2json", "conduit"], DirectedEdge["xml2json", "tagstream-conduit"], DirectedEdge["xml2json", "text"], DirectedEdge["xml2json", "transformers"], DirectedEdge["xml2json", "unordered-containers"], DirectedEdge["xml2json", "vector"], DirectedEdge["xml2x", "array"], DirectedEdge["xml2x", "base"], DirectedEdge["xml2x", "bio"], DirectedEdge["xml2x", "bytestring"], DirectedEdge["xml2x", "containers"], DirectedEdge["xml2x", "directory"], DirectedEdge["xml2x", "xhtml"], DirectedEdge["xmlgen", "base"], DirectedEdge["xmlgen", "blaze-builder"], DirectedEdge["xmlgen", "bytestring"], DirectedEdge["xmlgen", "containers"], DirectedEdge["xmlgen", "mtl"], DirectedEdge["xmlgen", "text"], DirectedEdge["xmlhtml", "base"], DirectedEdge["xmlhtml", "blaze-builder"], DirectedEdge["xmlhtml", "blaze-html"], DirectedEdge["xmlhtml", "blaze-markup"], DirectedEdge["xmlhtml", "bytestring"], DirectedEdge["xmlhtml", "containers"], DirectedEdge["xmlhtml", "parsec"], DirectedEdge["xmlhtml", "text"], DirectedEdge["xmlhtml", "unordered-containers"], DirectedEdge["xmltv", "base"], DirectedEdge["xmltv", "bytestring"], DirectedEdge["xmltv", "configurator"], DirectedEdge["xmltv", "filepath"], DirectedEdge["xmltv", "http-client"], DirectedEdge["xmltv", "network-uri"], DirectedEdge["xmltv", "old-locale"], DirectedEdge["xmltv", "split"], DirectedEdge["xmltv", "terminfo"], DirectedEdge["xmltv", "time"], DirectedEdge["xmltv", "unix"], DirectedEdge["xmltv", "wl-pprint-extras"], DirectedEdge["xmltv", "wl-pprint-terminfo"], DirectedEdge["xmltv", "xdg-basedir"], DirectedEdge["xmltv", "xml"], DirectedEdge["xmms2-client", "base"], DirectedEdge["xmms2-client", "containers"], DirectedEdge["xmms2-client", "mtl"], DirectedEdge["xmms2-client", "utf8-string"], DirectedEdge["xmms2-client-glib", "base"], DirectedEdge["xmms2-client-glib", "xmms2-client"], DirectedEdge["xmobar", "alsa-core"], DirectedEdge["xmobar", "alsa-mixer"], DirectedEdge["xmobar", "base"], DirectedEdge["xmobar", "bytestring"], DirectedEdge["xmobar", "containers"], DirectedEdge["xmobar", "dbus"], DirectedEdge["xmobar", "directory"], DirectedEdge["xmobar", "filepath"], DirectedEdge["xmobar", "hinotify"], DirectedEdge["xmobar", "HTTP"], DirectedEdge["xmobar", "libmpd"], DirectedEdge["xmobar", "mtl"], DirectedEdge["xmobar", "old-locale"], DirectedEdge["xmobar", "parsec"], DirectedEdge["xmobar", "process"], DirectedEdge["xmobar", "regex-compat"], DirectedEdge["xmobar", "stm"], DirectedEdge["xmobar", "time"], DirectedEdge["xmobar", "timezone-olson"], DirectedEdge["xmobar", "timezone-series"], DirectedEdge["xmobar", "transformers"], DirectedEdge["xmobar", "unix"], DirectedEdge["xmobar", "utf8-string"], DirectedEdge["xmobar", "X11-xft"], DirectedEdge["xmonad", "base"], DirectedEdge["xmonad", "containers"], DirectedEdge["xmonad", "data-default"], DirectedEdge["xmonad", "directory"], DirectedEdge["xmonad", "extensible-exceptions"], DirectedEdge["xmonad", "filepath"], DirectedEdge["xmonad", "mtl"], DirectedEdge["xmonad", "process"], DirectedEdge["xmonad", "setlocale"], DirectedEdge["xmonad", "unix"], DirectedEdge["xmonad", "utf8-string"], DirectedEdge["xmonad", "xmonad"], DirectedEdge["xmonad-bluetilebranch", "bluetile"], DirectedEdge["xmonad-bluetilebranch", "base"], DirectedEdge["xmonad-bluetilebranch", "containers"], DirectedEdge["xmonad-bluetilebranch", "directory"], DirectedEdge["xmonad-bluetilebranch", "extensible-exceptions"], DirectedEdge["xmonad-bluetilebranch", "filepath"], DirectedEdge["xmonad-bluetilebranch", "mtl"], DirectedEdge["xmonad-bluetilebranch", "process"], DirectedEdge["xmonad-bluetilebranch", "QuickCheck"], DirectedEdge["xmonad-bluetilebranch", "random"], DirectedEdge["xmonad-bluetilebranch", "unix"], DirectedEdge["xmonad-contrib", "base"], DirectedEdge["xmonad-contrib", "containers"], DirectedEdge["xmonad-contrib", "directory"], DirectedEdge["xmonad-contrib", "extensible-exceptions"], DirectedEdge["xmonad-contrib", "filepath"], DirectedEdge["xmonad-contrib", "mtl"], DirectedEdge["xmonad-contrib", "old-locale"], DirectedEdge["xmonad-contrib", "old-time"], DirectedEdge["xmonad-contrib", "process"], DirectedEdge["xmonad-contrib", "random"], DirectedEdge["xmonad-contrib", "unix"], DirectedEdge["xmonad-contrib", "utf8-string"], DirectedEdge["xmonad-contrib", "X11-xft"], DirectedEdge["xmonad-contrib", "xmonad"], DirectedEdge["xmonad-contrib-bluetilebranch", "base"], DirectedEdge["xmonad-contrib-bluetilebranch", "containers"], DirectedEdge["xmonad-contrib-bluetilebranch", "directory"], DirectedEdge["xmonad-contrib-bluetilebranch", "extensible-exceptions"], DirectedEdge["xmonad-contrib-bluetilebranch", "mtl"], DirectedEdge["xmonad-contrib-bluetilebranch", "old-locale"], DirectedEdge["xmonad-contrib-bluetilebranch", "old-time"], DirectedEdge["xmonad-contrib-bluetilebranch", "process"], DirectedEdge["xmonad-contrib-bluetilebranch", "random"], DirectedEdge["xmonad-contrib-bluetilebranch", "unix"], DirectedEdge["xmonad-contrib-bluetilebranch", "utf8-string"], DirectedEdge["xmonad-contrib-bluetilebranch", "X11-xft"], DirectedEdge["xmonad-contrib-bluetilebranch", "xmonad-bluetilebranch"], DirectedEdge["xmonad-contrib-gpl", "base"], DirectedEdge["xmonad-contrib-gpl", "mtl"], DirectedEdge["xmonad-contrib-gpl", "xmonad"], DirectedEdge["xmonad-contrib-gpl", "xmonad-contrib"], DirectedEdge["xmonad-entryhelper", "base"], DirectedEdge["xmonad-entryhelper", "directory"], DirectedEdge["xmonad-entryhelper", "extensible-exceptions"], DirectedEdge["xmonad-entryhelper", "filepath"], DirectedEdge["xmonad-entryhelper", "mtl"], DirectedEdge["xmonad-entryhelper", "process"], DirectedEdge["xmonad-entryhelper", "unix"], DirectedEdge["xmonad-entryhelper", "xmonad"], DirectedEdge["xmonad-entryhelper", "xmonad-contrib"], DirectedEdge["xmonad-eval", "base"], DirectedEdge["xmonad-eval", "containers"], DirectedEdge["xmonad-eval", "directory"], DirectedEdge["xmonad-eval", "hint"], DirectedEdge["xmonad-eval", "mtl"], DirectedEdge["xmonad-eval", "old-locale"], DirectedEdge["xmonad-eval", "old-time"], DirectedEdge["xmonad-eval", "process"], DirectedEdge["xmonad-eval", "random"], DirectedEdge["xmonad-eval", "unix"], DirectedEdge["xmonad-eval", "xmonad"], DirectedEdge["xmonad-eval", "xmonad-contrib"], DirectedEdge["xmonad-extras", "base"], DirectedEdge["xmonad-extras", "bytestring"], DirectedEdge["xmonad-extras", "containers"], DirectedEdge["xmonad-extras", "directory"], DirectedEdge["xmonad-extras", "hint"], DirectedEdge["xmonad-extras", "HList"], DirectedEdge["xmonad-extras", "libmpd"], DirectedEdge["xmonad-extras", "mtl"], DirectedEdge["xmonad-extras", "network"], DirectedEdge["xmonad-extras", "old-locale"], DirectedEdge["xmonad-extras", "old-time"], DirectedEdge["xmonad-extras", "parsec"], DirectedEdge["xmonad-extras", "process"], DirectedEdge["xmonad-extras", "random"], DirectedEdge["xmonad-extras", "regex-posix"], DirectedEdge["xmonad-extras", "split"], DirectedEdge["xmonad-extras", "template-haskell"], DirectedEdge["xmonad-extras", "unix"], DirectedEdge["xmonad-extras", "xmonad"], DirectedEdge["xmonad-extras", "xmonad-contrib"], DirectedEdge["xmonad-screenshot", "base"], DirectedEdge["xmonad-screenshot", "gtk"], DirectedEdge["xmonad-screenshot", "xmonad"], DirectedEdge["xmonad-utils", "base"], DirectedEdge["xmonad-utils", "ghc"], DirectedEdge["xmonad-utils", "random"], DirectedEdge["xmonad-utils", "unix"], DirectedEdge["xmonad-wallpaper", "base"], DirectedEdge["xmonad-wallpaper", "magic"], DirectedEdge["xmonad-wallpaper", "mtl"], DirectedEdge["xmonad-wallpaper", "random"], DirectedEdge["xmonad-wallpaper", "unix"], DirectedEdge["xmonad-wallpaper", "xmonad"], DirectedEdge["xmonad-windownames", "base"], DirectedEdge["xmonad-windownames", "containers"], DirectedEdge["xmonad-windownames", "utf8-string"], DirectedEdge["xmonad-windownames", "xmonad"], DirectedEdge["xmonad-windownames", "xmonad-contrib"], DirectedEdge["xmpipe", "base"], DirectedEdge["xmpipe", "base64-bytestring"], DirectedEdge["xmpipe", "bytestring"], DirectedEdge["xmpipe", "handle-like"], DirectedEdge["xmpipe", "monads-tf"], DirectedEdge["xmpipe", "sasl"], DirectedEdge["xmpipe", "simple-pipe"], DirectedEdge["xmpipe", "uuid"], DirectedEdge["xmpipe", "xml-pipe"], DirectedEdge["xorshift", "base"], DirectedEdge["xorshift", "random"], DirectedEdge["xorshift", "time"], DirectedEdge["xosd", "base"], DirectedEdge["xournal-builder", "base"], DirectedEdge["xournal-builder", "blaze-builder"], DirectedEdge["xournal-builder", "bytestring"], DirectedEdge["xournal-builder", "double-conversion"], DirectedEdge["xournal-builder", "strict"], DirectedEdge["xournal-builder", "xournal-types"], DirectedEdge["xournal-convert", "base"], DirectedEdge["xournal-convert", "bytestring"], DirectedEdge["xournal-convert", "cairo"], DirectedEdge["xournal-convert", "cmdargs"], DirectedEdge["xournal-convert", "directory"], DirectedEdge["xournal-convert", "filepath"], DirectedEdge["xournal-convert", "HStringTemplate"], DirectedEdge["xournal-convert", "mtl"], DirectedEdge["xournal-convert", "xournal-convert"], DirectedEdge["xournal-convert", "xournal-parser"], DirectedEdge["xournal-convert", "xournal-render"], DirectedEdge["xournal-convert", "xournal-types"], DirectedEdge["xournal-parser", "attoparsec"], DirectedEdge["xournal-parser", "attoparsec-conduit"], DirectedEdge["xournal-parser", "base"], DirectedEdge["xournal-parser", "bytestring"], DirectedEdge["xournal-parser", "conduit"], DirectedEdge["xournal-parser", "conduit-extra"], DirectedEdge["xournal-parser", "containers"], DirectedEdge["xournal-parser", "exceptions"], DirectedEdge["xournal-parser", "lens"], DirectedEdge["xournal-parser", "mtl"], DirectedEdge["xournal-parser", "strict"], DirectedEdge["xournal-parser", "text"], DirectedEdge["xournal-parser", "transformers"], DirectedEdge["xournal-parser", "xml-conduit"], DirectedEdge["xournal-parser", "xml-types"], DirectedEdge["xournal-parser", "xournal-types"], DirectedEdge["xournal-parser", "zlib-conduit"], DirectedEdge["xournal-render", "base"], DirectedEdge["xournal-render", "bytestring"], DirectedEdge["xournal-render", "cairo"], DirectedEdge["xournal-render", "containers"], DirectedEdge["xournal-render", "fclabels"], DirectedEdge["xournal-render", "mtl"], DirectedEdge["xournal-render", "poppler"], DirectedEdge["xournal-render", "strict"], DirectedEdge["xournal-render", "TypeCompose"], DirectedEdge["xournal-render", "xournal-types"], DirectedEdge["xournal-types", "base"], DirectedEdge["xournal-types", "bytestring"], DirectedEdge["xournal-types", "cereal"], DirectedEdge["xournal-types", "containers"], DirectedEdge["xournal-types", "lens"], DirectedEdge["xournal-types", "strict"], DirectedEdge["xournal-types", "TypeCompose"], DirectedEdge["xpathdsv", "base"], DirectedEdge["xpathdsv", "hxt"], DirectedEdge["xpathdsv", "hxt-xpath"], DirectedEdge["xpathdsv", "optparse-applicative"], DirectedEdge["xpathdsv", "text"], DirectedEdge["xsact", "array"], DirectedEdge["xsact", "base"], DirectedEdge["xsact", "containers"], DirectedEdge["xsact", "directory"], DirectedEdge["xsact", "process"], DirectedEdge["xsact", "random"], DirectedEdge["xsact", "unix"], DirectedEdge["xsd", "attoparsec"], DirectedEdge["xsd", "base"], DirectedEdge["xsd", "lens"], DirectedEdge["xsd", "text"], DirectedEdge["xsd", "time"], DirectedEdge["xsha1", "base"], DirectedEdge["xsha1", "HUnit"], DirectedEdge["xsha1", "QuickCheck"], DirectedEdge["xsha1", "uniplate"], DirectedEdge["xsha1", "vector"], DirectedEdge["xslt", "base"], DirectedEdge["xslt", "libxml"], DirectedEdge["xss-sanitize", "attoparsec"], DirectedEdge["xss-sanitize", "base"], DirectedEdge["xss-sanitize", "containers"], DirectedEdge["xss-sanitize", "css-text"], DirectedEdge["xss-sanitize", "network"], DirectedEdge["xss-sanitize", "network-uri"], DirectedEdge["xss-sanitize", "tagsoup"], DirectedEdge["xss-sanitize", "text"], DirectedEdge["xss-sanitize", "utf8-string"], DirectedEdge["xtc", "base"], DirectedEdge["xtc", "wx"], DirectedEdge["xtc", "wxcore"], DirectedEdge["xtest", "base"], DirectedEdge["xturtle", "base"], DirectedEdge["xturtle", "convertible"], DirectedEdge["xturtle", "Imlib"], DirectedEdge["xturtle", "setlocale"], DirectedEdge["xturtle", "X11-xft"], DirectedEdge["xturtle", "x11-xim"], DirectedEdge["xturtle", "yjsvg"], DirectedEdge["xturtle", "yjtools"], DirectedEdge["xxhash", "base"], DirectedEdge["xxhash", "bytestring"], DirectedEdge["xxhash", "crypto-api"], DirectedEdge["xxhash", "tagged"], DirectedEdge["y0l0bot", "base"], DirectedEdge["y0l0bot", "bytestring"], DirectedEdge["y0l0bot", "containers"], DirectedEdge["y0l0bot", "mtl"], DirectedEdge["y0l0bot", "network"], DirectedEdge["y0l0bot", "old-locale"], DirectedEdge["y0l0bot", "old-time"], DirectedEdge["y0l0bot", "safe"], DirectedEdge["y0l0bot", "split"], DirectedEdge["y0l0bot", "text"], DirectedEdge["y0l0bot", "time"], DirectedEdge["yabi", "base"], DirectedEdge["yabi-muno", "base"], DirectedEdge["yabi-muno", "bytestring"], DirectedEdge["yabi-muno", "containers"], DirectedEdge["yabi-muno", "lens"], DirectedEdge["yabi-muno", "mtl"], DirectedEdge["yabi-muno", "mtl-compat"], DirectedEdge["yabi-muno", "parsec"], DirectedEdge["yabi-muno", "yabi-muno"], DirectedEdge["yackage", "base"], DirectedEdge["yackage", "blaze-builder"], DirectedEdge["yackage", "blaze-html"], DirectedEdge["yackage", "bytestring"], DirectedEdge["yackage", "Cabal"], DirectedEdge["yackage", "cmdargs"], DirectedEdge["yackage", "conduit"], DirectedEdge["yackage", "containers"], DirectedEdge["yackage", "directory"], DirectedEdge["yackage", "http-conduit"], DirectedEdge["yackage", "http-types"], DirectedEdge["yackage", "shakespeare"], DirectedEdge["yackage", "tar"], DirectedEdge["yackage", "text"], DirectedEdge["yackage", "transformers"], DirectedEdge["yackage", "unordered-containers"], DirectedEdge["yackage", "vector"], DirectedEdge["yackage", "wai"], DirectedEdge["yackage", "warp"], DirectedEdge["yackage", "yaml"], DirectedEdge["yackage", "yesod-core"], DirectedEdge["yackage", "yesod-form"], DirectedEdge["yackage", "zlib"], DirectedEdge["yahoo-finance-conduit", "attoparsec"], DirectedEdge["yahoo-finance-conduit", "base"], DirectedEdge["yahoo-finance-conduit", "cassava"], DirectedEdge["yahoo-finance-conduit", "conduit"], DirectedEdge["yahoo-finance-conduit", "lens"], DirectedEdge["yahoo-finance-conduit", "mtl"], DirectedEdge["yahoo-finance-conduit", "text"], DirectedEdge["yahoo-finance-conduit", "vector"], DirectedEdge["yahoo-finance-conduit", "wreq"], DirectedEdge["yahoo-web-search", "base"], DirectedEdge["yahoo-web-search", "HTTP"], DirectedEdge["yahoo-web-search", "network"], DirectedEdge["yahoo-web-search", "xml"], DirectedEdge["yajl", "base"], DirectedEdge["yajl", "bytestring"], DirectedEdge["yajl", "text"], DirectedEdge["yajl-enumerator", "base"], DirectedEdge["yajl-enumerator", "bytestring"], DirectedEdge["yajl-enumerator", "enumerator"], DirectedEdge["yajl-enumerator", "json-types"], DirectedEdge["yajl-enumerator", "text"], DirectedEdge["yajl-enumerator", "transformers"], DirectedEdge["yajl-enumerator", "yajl"], DirectedEdge["yall", "base"], DirectedEdge["yall", "categories"], DirectedEdge["yall", "transformers"], DirectedEdge["yamemo", "base"], DirectedEdge["yamemo", "containers"], DirectedEdge["yamemo", "mtl"], DirectedEdge["yaml", "aeson"], DirectedEdge["yaml", "attoparsec"], DirectedEdge["yaml", "base"], DirectedEdge["yaml", "bytestring"], DirectedEdge["yaml", "conduit"], DirectedEdge["yaml", "containers"], DirectedEdge["yaml", "directory"], DirectedEdge["yaml", "enclosed-exceptions"], DirectedEdge["yaml", "filepath"], DirectedEdge["yaml", "raw-strings-qq"], DirectedEdge["yaml", "resourcet"], DirectedEdge["yaml", "scientific"], DirectedEdge["yaml", "semigroups"], DirectedEdge["yaml", "text"], DirectedEdge["yaml", "transformers"], DirectedEdge["yaml", "unordered-containers"], DirectedEdge["yaml", "vector"], DirectedEdge["yaml", "yaml"], DirectedEdge["yaml-config", "base"], DirectedEdge["yaml-config", "deepseq"], DirectedEdge["yaml-config", "text"], DirectedEdge["yaml-config", "unordered-containers"], DirectedEdge["yaml-config", "yaml"], DirectedEdge["yaml-light", "base"], DirectedEdge["yaml-light", "bytestring"], DirectedEdge["yaml-light", "containers"], DirectedEdge["yaml-light", "HsSyck"], DirectedEdge["yaml-light-lens", "base"], DirectedEdge["yaml-light-lens", "bytestring"], DirectedEdge["yaml-light-lens", "bytestring-lexing"], DirectedEdge["yaml-light-lens", "containers"], DirectedEdge["yaml-light-lens", "lens"], DirectedEdge["yaml-light-lens", "yaml-light"], DirectedEdge["yaml-rpc", "aeson"], DirectedEdge["yaml-rpc", "base"], DirectedEdge["yaml-rpc", "bytestring"], DirectedEdge["yaml-rpc", "containers"], DirectedEdge["yaml-rpc", "http-client"], DirectedEdge["yaml-rpc", "http-types"], DirectedEdge["yaml-rpc", "lens"], DirectedEdge["yaml-rpc", "template-haskell"], DirectedEdge["yaml-rpc", "text"], DirectedEdge["yaml-rpc", "th-lift"], DirectedEdge["yaml-rpc", "transformers"], DirectedEdge["yaml-rpc", "unordered-containers"], DirectedEdge["yaml-rpc", "vector"], DirectedEdge["yaml-rpc", "wreq"], DirectedEdge["yaml-rpc", "yaml"], DirectedEdge["yaml-rpc-scotty", "aeson"], DirectedEdge["yaml-rpc-scotty", "base"], DirectedEdge["yaml-rpc-scotty", "containers"], DirectedEdge["yaml-rpc-scotty", "http-types"], DirectedEdge["yaml-rpc-scotty", "mmorph"], DirectedEdge["yaml-rpc-scotty", "scotty"], DirectedEdge["yaml-rpc-scotty", "text"], DirectedEdge["yaml-rpc-scotty", "transformers"], DirectedEdge["yaml-rpc-scotty", "yaml"], DirectedEdge["yaml-rpc-scotty", "yaml-rpc"], DirectedEdge["yaml-rpc-snap", "aeson"], DirectedEdge["yaml-rpc-snap", "base"], DirectedEdge["yaml-rpc-snap", "bytestring"], DirectedEdge["yaml-rpc-snap", "containers"], DirectedEdge["yaml-rpc-snap", "http-types"], DirectedEdge["yaml-rpc-snap", "snap"], DirectedEdge["yaml-rpc-snap", "text"], DirectedEdge["yaml-rpc-snap", "transformers"], DirectedEdge["yaml-rpc-snap", "yaml"], DirectedEdge["yaml-rpc-snap", "yaml-rpc"], DirectedEdge["yaml-union", "base"], DirectedEdge["yaml-union", "bytestring"], DirectedEdge["yaml-union", "optparse-applicative"], DirectedEdge["yaml-union", "unordered-containers"], DirectedEdge["yaml-union", "yaml"], DirectedEdge["yaml-union", "yaml-union"], DirectedEdge["yaml2owl", "base"], DirectedEdge["yaml2owl", "containers"], DirectedEdge["yaml2owl", "directory"], DirectedEdge["yaml2owl", "filepath"], DirectedEdge["yaml2owl", "network"], DirectedEdge["yaml2owl", "swish"], DirectedEdge["yaml2owl", "text"], DirectedEdge["yaml2owl", "xml"], DirectedEdge["yaml2owl", "yaml"], DirectedEdge["yamlkeysdiff", "base"], DirectedEdge["yamlkeysdiff", "containers"], DirectedEdge["yamlkeysdiff", "parsec"], DirectedEdge["yamlkeysdiff", "text"], DirectedEdge["yamlkeysdiff", "unordered-containers"], DirectedEdge["yamlkeysdiff", "yaml"], DirectedEdge["yampa-canvas", "base"], DirectedEdge["yampa-canvas", "blank-canvas"], DirectedEdge["yampa-canvas", "stm"], DirectedEdge["yampa-canvas", "text"], DirectedEdge["yampa-canvas", "time"], DirectedEdge["yampa-canvas", "Yampa"], DirectedEdge["yampa-canvas", "yampa-canvas"], DirectedEdge["yampa-glfw", "base"], DirectedEdge["yampa-glfw", "GLFW-b"], DirectedEdge["yampa-glfw", "newtype"], DirectedEdge["yampa-glfw", "OpenGL"], DirectedEdge["yampa-glfw", "vector-space"], DirectedEdge["yampa-glfw", "Yampa"], DirectedEdge["yampa-glfw", "yampa-glfw"], DirectedEdge["yampa-glut", "base"], DirectedEdge["yampa-glut", "GLUT"], DirectedEdge["yampa-glut", "newtype"], DirectedEdge["yampa-glut", "OpenGL"], DirectedEdge["yampa-glut", "vector-space"], DirectedEdge["yampa-glut", "vector-space-opengl"], DirectedEdge["yampa-glut", "Yampa"], DirectedEdge["yampa-glut", "Yampa-core"], DirectedEdge["yampa-glut", "yampa-glut"], DirectedEdge["yampa2048", "base"], DirectedEdge["yampa2048", "gloss"], DirectedEdge["yampa2048", "random"], DirectedEdge["yampa2048", "Yampa"], DirectedEdge["yaop", "optparse-applicative"], DirectedEdge["yaop", "cmdtheline"], DirectedEdge["yaop", "argparser"], DirectedEdge["yaop", "cmdargs"], DirectedEdge["yaop", "base"], DirectedEdge["yaop", "mtl"], DirectedEdge["yaop", "template-haskell"], DirectedEdge["yap", "base"], DirectedEdge["yarr", "base"], DirectedEdge["yarr", "deepseq"], DirectedEdge["yarr", "fixed-vector"], DirectedEdge["yarr", "ghc-prim"], DirectedEdge["yarr", "missing-foreign"], DirectedEdge["yarr", "primitive"], DirectedEdge["yarr", "template-haskell"], DirectedEdge["yarr-image-io", "base"], DirectedEdge["yarr-image-io", "yarr"], DirectedEdge["yate", "aeson"], DirectedEdge["yate", "attoparsec"], DirectedEdge["yate", "base"], DirectedEdge["yate", "mtl"], DirectedEdge["yate", "scientific"], DirectedEdge["yate", "template-haskell"], DirectedEdge["yate", "text"], DirectedEdge["yate", "unordered-containers"], DirectedEdge["yate", "vector"], DirectedEdge["yavie", "base"], DirectedEdge["yavie", "Cabal"], DirectedEdge["yavie", "directory"], DirectedEdge["yavie", "event-driven"], DirectedEdge["yavie", "filepath"], DirectedEdge["yavie", "monads-tf"], DirectedEdge["yavie", "process"], DirectedEdge["yavie", "regexpr"], DirectedEdge["ycextra", "base"], DirectedEdge["ycextra", "containers"], DirectedEdge["ycextra", "csv"], DirectedEdge["ycextra", "mtl"], DirectedEdge["ycextra", "uniplate"], DirectedEdge["ycextra", "yhccore"], DirectedEdge["yeganesh", "base"], DirectedEdge["yeganesh", "containers"], DirectedEdge["yeganesh", "directory"], DirectedEdge["yeganesh", "filepath"], DirectedEdge["yeganesh", "process"], DirectedEdge["yeganesh", "strict"], DirectedEdge["yeganesh", "time"], DirectedEdge["yeganesh", "unix"], DirectedEdge["yeganesh", "xdg-basedir"], DirectedEdge["yeller", "aeson"], DirectedEdge["yeller", "base"], DirectedEdge["yeller", "bytestring"], DirectedEdge["yeller", "containers"], DirectedEdge["yeller", "http-client"], DirectedEdge["yeller", "http-client-tls"], DirectedEdge["yeller", "http-types"], DirectedEdge["yeller", "network"], DirectedEdge["yeller", "stm"], DirectedEdge["yeller", "text"], DirectedEdge["yeller", "unordered-containers"], DirectedEdge["yes-precure5-command", "base"], DirectedEdge["yes-precure5-command", "Cabal"], DirectedEdge["yes-precure5-command", "containers"], DirectedEdge["yes-precure5-command", "mtl"], DirectedEdge["yes-precure5-command", "parsec"], DirectedEdge["yes-precure5-command", "random"], DirectedEdge["yes-precure5-command", "yes-precure5-command"], DirectedEdge["yeshql", "base"], DirectedEdge["yeshql", "containers"], DirectedEdge["yeshql", "filepath"], DirectedEdge["yeshql", "HDBC"], DirectedEdge["yeshql", "parsec"], DirectedEdge["yeshql", "template-haskell"], DirectedEdge["yesod", "aeson"], DirectedEdge["yesod", "base"], DirectedEdge["yesod", "blaze-html"], DirectedEdge["yesod", "blaze-markup"], DirectedEdge["yesod", "bytestring"], DirectedEdge["yesod", "conduit-extra"], DirectedEdge["yesod", "data-default"], DirectedEdge["yesod", "directory"], DirectedEdge["yesod", "fast-logger"], DirectedEdge["yesod", "monad-control"], DirectedEdge["yesod", "monad-logger"], DirectedEdge["yesod", "safe"], DirectedEdge["yesod", "semigroups"], DirectedEdge["yesod", "shakespeare"], DirectedEdge["yesod", "streaming-commons"], DirectedEdge["yesod", "template-haskell"], DirectedEdge["yesod", "text"], DirectedEdge["yesod", "transformers"], DirectedEdge["yesod", "unix"], DirectedEdge["yesod", "unordered-containers"], DirectedEdge["yesod", "wai"], DirectedEdge["yesod", "wai-extra"], DirectedEdge["yesod", "wai-logger"], DirectedEdge["yesod", "warp"], DirectedEdge["yesod", "yaml"], DirectedEdge["yesod", "yesod-auth"], DirectedEdge["yesod", "yesod-core"], DirectedEdge["yesod", "yesod-form"], DirectedEdge["yesod", "yesod-persistent"], DirectedEdge["yesod-angular", "aeson"], DirectedEdge["yesod-angular", "base"], DirectedEdge["yesod-angular", "containers"], DirectedEdge["yesod-angular", "shakespeare"], DirectedEdge["yesod-angular", "template-haskell"], DirectedEdge["yesod-angular", "text"], DirectedEdge["yesod-angular", "transformers"], DirectedEdge["yesod-angular", "yesod"], DirectedEdge["yesod-angular-ui", "base"], DirectedEdge["yesod-angular-ui", "blaze-html"], DirectedEdge["yesod-angular-ui", "containers"], DirectedEdge["yesod-angular-ui", "directory"], DirectedEdge["yesod-angular-ui", "hjsmin"], DirectedEdge["yesod-angular-ui", "mtl"], DirectedEdge["yesod-angular-ui", "resourcet"], DirectedEdge["yesod-angular-ui", "shakespeare"], DirectedEdge["yesod-angular-ui", "template-haskell"], DirectedEdge["yesod-angular-ui", "text"], DirectedEdge["yesod-angular-ui", "transformers"], DirectedEdge["yesod-angular-ui", "yesod"], DirectedEdge["yesod-angular-ui", "yesod-core"], DirectedEdge["yesod-auth", "aeson"], DirectedEdge["yesod-auth", "authenticate"], DirectedEdge["yesod-auth", "base"], DirectedEdge["yesod-auth", "base16-bytestring"], DirectedEdge["yesod-auth", "base64-bytestring"], DirectedEdge["yesod-auth", "binary"], DirectedEdge["yesod-auth", "blaze-builder"], DirectedEdge["yesod-auth", "blaze-html"], DirectedEdge["yesod-auth", "blaze-markup"], DirectedEdge["yesod-auth", "byteable"], DirectedEdge["yesod-auth", "bytestring"], DirectedEdge["yesod-auth", "conduit"], DirectedEdge["yesod-auth", "conduit-extra"], DirectedEdge["yesod-auth", "containers"], DirectedEdge["yesod-auth", "cryptohash"], DirectedEdge["yesod-auth", "data-default"], DirectedEdge["yesod-auth", "email-validate"], DirectedEdge["yesod-auth", "file-embed"], DirectedEdge["yesod-auth", "http-client"], DirectedEdge["yesod-auth", "http-conduit"], DirectedEdge["yesod-auth", "http-types"], DirectedEdge["yesod-auth", "lifted-base"], DirectedEdge["yesod-auth", "mime-mail"], DirectedEdge["yesod-auth", "network"], DirectedEdge["yesod-auth", "network-uri"], DirectedEdge["yesod-auth", "nonce"], DirectedEdge["yesod-auth", "persistent"], DirectedEdge["yesod-auth", "persistent-template"], DirectedEdge["yesod-auth", "random"], DirectedEdge["yesod-auth", "resourcet"], DirectedEdge["yesod-auth", "safe"], DirectedEdge["yesod-auth", "shakespeare"], DirectedEdge["yesod-auth", "template-haskell"], DirectedEdge["yesod-auth", "text"], DirectedEdge["yesod-auth", "time"], DirectedEdge["yesod-auth", "transformers"], DirectedEdge["yesod-auth", "unordered-containers"], DirectedEdge["yesod-auth", "wai"], DirectedEdge["yesod-auth", "yesod-core"], DirectedEdge["yesod-auth", "yesod-form"], DirectedEdge["yesod-auth", "yesod-persistent"], DirectedEdge["yesod-auth-account", "base"], DirectedEdge["yesod-auth-account", "blaze-html"], DirectedEdge["yesod-auth-account", "bytestring"], DirectedEdge["yesod-auth-account", "mtl"], DirectedEdge["yesod-auth-account", "nonce"], DirectedEdge["yesod-auth-account", "persistent"], DirectedEdge["yesod-auth-account", "pwstore-fast"], DirectedEdge["yesod-auth-account", "text"], DirectedEdge["yesod-auth-account", "yesod-auth"], DirectedEdge["yesod-auth-account", "yesod-core"], DirectedEdge["yesod-auth-account", "yesod-form"], DirectedEdge["yesod-auth-account", "yesod-persistent"], DirectedEdge["yesod-auth-account-fork", "aeson"], DirectedEdge["yesod-auth-account-fork", "base"], DirectedEdge["yesod-auth-account-fork", "blaze-html"], DirectedEdge["yesod-auth-account-fork", "bytestring"], DirectedEdge["yesod-auth-account-fork", "email-validate"], DirectedEdge["yesod-auth-account-fork", "http-types"], DirectedEdge["yesod-auth-account-fork", "mtl"], DirectedEdge["yesod-auth-account-fork", "nonce"], DirectedEdge["yesod-auth-account-fork", "persistent"], DirectedEdge["yesod-auth-account-fork", "pwstore-fast"], DirectedEdge["yesod-auth-account-fork", "random"], DirectedEdge["yesod-auth-account-fork", "tagged"], DirectedEdge["yesod-auth-account-fork", "text"], DirectedEdge["yesod-auth-account-fork", "yesod-auth"], DirectedEdge["yesod-auth-account-fork", "yesod-core"], DirectedEdge["yesod-auth-account-fork", "yesod-form"], DirectedEdge["yesod-auth-account-fork", "yesod-persistent"], DirectedEdge["yesod-auth-basic", "base"], DirectedEdge["yesod-auth-basic", "base64-bytestring"], DirectedEdge["yesod-auth-basic", "bytestring"], DirectedEdge["yesod-auth-basic", "exceptions"], DirectedEdge["yesod-auth-basic", "iproute"], DirectedEdge["yesod-auth-basic", "text"], DirectedEdge["yesod-auth-basic", "wai"], DirectedEdge["yesod-auth-basic", "yesod"], DirectedEdge["yesod-auth-bcrypt", "base"], DirectedEdge["yesod-auth-bcrypt", "bcrypt"], DirectedEdge["yesod-auth-bcrypt", "bytestring"], DirectedEdge["yesod-auth-bcrypt", "text"], DirectedEdge["yesod-auth-bcrypt", "yesod-auth"], DirectedEdge["yesod-auth-bcrypt", "yesod-core"], DirectedEdge["yesod-auth-bcrypt", "yesod-form"], DirectedEdge["yesod-auth-bcrypt", "yesod-persistent"], DirectedEdge["yesod-auth-deskcom", "aeson"], DirectedEdge["yesod-auth-deskcom", "base"], DirectedEdge["yesod-auth-deskcom", "base64-bytestring"], DirectedEdge["yesod-auth-deskcom", "byteable"], DirectedEdge["yesod-auth-deskcom", "bytestring"], DirectedEdge["yesod-auth-deskcom", "cipher-aes"], DirectedEdge["yesod-auth-deskcom", "cprng-aes"], DirectedEdge["yesod-auth-deskcom", "crypto-api"], DirectedEdge["yesod-auth-deskcom", "crypto-random"], DirectedEdge["yesod-auth-deskcom", "cryptohash"], DirectedEdge["yesod-auth-deskcom", "data-default"], DirectedEdge["yesod-auth-deskcom", "http-conduit"], DirectedEdge["yesod-auth-deskcom", "http-types"], DirectedEdge["yesod-auth-deskcom", "template-haskell"], DirectedEdge["yesod-auth-deskcom", "text"], DirectedEdge["yesod-auth-deskcom", "time"], DirectedEdge["yesod-auth-deskcom", "transformers"], DirectedEdge["yesod-auth-deskcom", "yesod-auth"], DirectedEdge["yesod-auth-deskcom", "yesod-core"], DirectedEdge["yesod-auth-fb", "aeson"], DirectedEdge["yesod-auth-fb", "base"], DirectedEdge["yesod-auth-fb", "bytestring"], DirectedEdge["yesod-auth-fb", "conduit"], DirectedEdge["yesod-auth-fb", "fb"], DirectedEdge["yesod-auth-fb", "http-conduit"], DirectedEdge["yesod-auth-fb", "lifted-base"], DirectedEdge["yesod-auth-fb", "shakespeare"], DirectedEdge["yesod-auth-fb", "text"], DirectedEdge["yesod-auth-fb", "time"], DirectedEdge["yesod-auth-fb", "transformers"], DirectedEdge["yesod-auth-fb", "wai"], DirectedEdge["yesod-auth-fb", "yesod-auth"], DirectedEdge["yesod-auth-fb", "yesod-core"], DirectedEdge["yesod-auth-fb", "yesod-fb"], DirectedEdge["yesod-auth-hashdb", "base"], DirectedEdge["yesod-auth-hashdb", "bytestring"], DirectedEdge["yesod-auth-hashdb", "cryptohash"], DirectedEdge["yesod-auth-hashdb", "persistent"], DirectedEdge["yesod-auth-hashdb", "pwstore-fast"], DirectedEdge["yesod-auth-hashdb", "text"], DirectedEdge["yesod-auth-hashdb", "yesod-auth"], DirectedEdge["yesod-auth-hashdb", "yesod-core"], DirectedEdge["yesod-auth-hashdb", "yesod-form"], DirectedEdge["yesod-auth-hashdb", "yesod-persistent"], DirectedEdge["yesod-auth-kerberos", "authenticate-kerberos"], DirectedEdge["yesod-auth-kerberos", "base"], DirectedEdge["yesod-auth-kerberos", "bytestring"], DirectedEdge["yesod-auth-kerberos", "shakespeare"], DirectedEdge["yesod-auth-kerberos", "text"], DirectedEdge["yesod-auth-kerberos", "transformers"], DirectedEdge["yesod-auth-kerberos", "yesod-auth"], DirectedEdge["yesod-auth-kerberos", "yesod-core"], DirectedEdge["yesod-auth-kerberos", "yesod-form"], DirectedEdge["yesod-auth-ldap", "authenticate-ldap"], DirectedEdge["yesod-auth-ldap", "base"], DirectedEdge["yesod-auth-ldap", "bytestring"], DirectedEdge["yesod-auth-ldap", "hamlet"], DirectedEdge["yesod-auth-ldap", "LDAP"], DirectedEdge["yesod-auth-ldap", "text"], DirectedEdge["yesod-auth-ldap", "transformers"], DirectedEdge["yesod-auth-ldap", "yesod-auth"], DirectedEdge["yesod-auth-ldap", "yesod-core"], DirectedEdge["yesod-auth-ldap", "yesod-form"], DirectedEdge["yesod-auth-ldap-mediocre", "aeson"], DirectedEdge["yesod-auth-ldap-mediocre", "base"], DirectedEdge["yesod-auth-ldap-mediocre", "LDAP"], DirectedEdge["yesod-auth-ldap-mediocre", "text"], DirectedEdge["yesod-auth-ldap-mediocre", "yesod-auth"], DirectedEdge["yesod-auth-ldap-mediocre", "yesod-core"], DirectedEdge["yesod-auth-ldap-mediocre", "yesod-form"], DirectedEdge["yesod-auth-ldap-native", "base"], DirectedEdge["yesod-auth-ldap-native", "either"], DirectedEdge["yesod-auth-ldap-native", "ldap-client"], DirectedEdge["yesod-auth-ldap-native", "semigroups"], DirectedEdge["yesod-auth-ldap-native", "text"], DirectedEdge["yesod-auth-ldap-native", "transformers"], DirectedEdge["yesod-auth-ldap-native", "yesod-auth"], DirectedEdge["yesod-auth-ldap-native", "yesod-core"], DirectedEdge["yesod-auth-ldap-native", "yesod-form"], DirectedEdge["yesod-auth-oauth", "authenticate-oauth"], DirectedEdge["yesod-auth-oauth", "base"], DirectedEdge["yesod-auth-oauth", "bytestring"], DirectedEdge["yesod-auth-oauth", "lifted-base"], DirectedEdge["yesod-auth-oauth", "text"], DirectedEdge["yesod-auth-oauth", "transformers"], DirectedEdge["yesod-auth-oauth", "yesod-auth"], DirectedEdge["yesod-auth-oauth", "yesod-core"], DirectedEdge["yesod-auth-oauth", "yesod-form"], DirectedEdge["yesod-auth-oauth2", "aeson"], DirectedEdge["yesod-auth-oauth2", "authenticate"], DirectedEdge["yesod-auth-oauth2", "base"], DirectedEdge["yesod-auth-oauth2", "bytestring"], DirectedEdge["yesod-auth-oauth2", "containers"], DirectedEdge["yesod-auth-oauth2", "http-client"], DirectedEdge["yesod-auth-oauth2", "http-conduit"], DirectedEdge["yesod-auth-oauth2", "http-types"], DirectedEdge["yesod-auth-oauth2", "lifted-base"], DirectedEdge["yesod-auth-oauth2", "load-env"], DirectedEdge["yesod-auth-oauth2", "network"], DirectedEdge["yesod-auth-oauth2", "network-uri"], DirectedEdge["yesod-auth-oauth2", "random"], DirectedEdge["yesod-auth-oauth2", "text"], DirectedEdge["yesod-auth-oauth2", "transformers"], DirectedEdge["yesod-auth-oauth2", "vector"], DirectedEdge["yesod-auth-oauth2", "warp"], DirectedEdge["yesod-auth-oauth2", "yesod"], DirectedEdge["yesod-auth-oauth2", "yesod-auth"], DirectedEdge["yesod-auth-oauth2", "yesod-core"], DirectedEdge["yesod-auth-oauth2", "yesod-form"], DirectedEdge["yesod-auth-pam", "base"], DirectedEdge["yesod-auth-pam", "hamlet"], DirectedEdge["yesod-auth-pam", "pam"], DirectedEdge["yesod-auth-pam", "text"], DirectedEdge["yesod-auth-pam", "yesod-auth"], DirectedEdge["yesod-auth-pam", "yesod-core"], DirectedEdge["yesod-auth-pam", "yesod-form"], DirectedEdge["yesod-auth-smbclient", "base"], DirectedEdge["yesod-auth-smbclient", "hamlet"], DirectedEdge["yesod-auth-smbclient", "sys-auth-smbclient"], DirectedEdge["yesod-auth-smbclient", "text"], DirectedEdge["yesod-auth-smbclient", "yesod-auth"], DirectedEdge["yesod-auth-smbclient", "yesod-core"], DirectedEdge["yesod-auth-smbclient", "yesod-form"], DirectedEdge["yesod-auth-zendesk", "base"], DirectedEdge["yesod-auth-zendesk", "base16-bytestring"], DirectedEdge["yesod-auth-zendesk", "bytestring"], DirectedEdge["yesod-auth-zendesk", "cryptohash"], DirectedEdge["yesod-auth-zendesk", "data-default"], DirectedEdge["yesod-auth-zendesk", "http-conduit"], DirectedEdge["yesod-auth-zendesk", "http-types"], DirectedEdge["yesod-auth-zendesk", "template-haskell"], DirectedEdge["yesod-auth-zendesk", "text"], DirectedEdge["yesod-auth-zendesk", "time"], DirectedEdge["yesod-auth-zendesk", "transformers"], DirectedEdge["yesod-auth-zendesk", "wai"], DirectedEdge["yesod-auth-zendesk", "yesod-auth"], DirectedEdge["yesod-auth-zendesk", "yesod-core"], DirectedEdge["yesod-bin", "async"], DirectedEdge["yesod-bin", "attoparsec"], DirectedEdge["yesod-bin", "base"], DirectedEdge["yesod-bin", "base64-bytestring"], DirectedEdge["yesod-bin", "blaze-builder"], DirectedEdge["yesod-bin", "bytestring"], DirectedEdge["yesod-bin", "Cabal"], DirectedEdge["yesod-bin", "conduit"], DirectedEdge["yesod-bin", "conduit-extra"], DirectedEdge["yesod-bin", "containers"], DirectedEdge["yesod-bin", "data-default-class"], DirectedEdge["yesod-bin", "deepseq"], DirectedEdge["yesod-bin", "directory"], DirectedEdge["yesod-bin", "file-embed"], DirectedEdge["yesod-bin", "filepath"], DirectedEdge["yesod-bin", "fsnotify"], DirectedEdge["yesod-bin", "ghc"], DirectedEdge["yesod-bin", "ghc-paths"], DirectedEdge["yesod-bin", "http-client"], DirectedEdge["yesod-bin", "http-conduit"], DirectedEdge["yesod-bin", "http-reverse-proxy"], DirectedEdge["yesod-bin", "http-types"], DirectedEdge["yesod-bin", "lifted-base"], DirectedEdge["yesod-bin", "network"], DirectedEdge["yesod-bin", "optparse-applicative"], DirectedEdge["yesod-bin", "parsec"], DirectedEdge["yesod-bin", "process"], DirectedEdge["yesod-bin", "project-template"], DirectedEdge["yesod-bin", "resourcet"], DirectedEdge["yesod-bin", "shakespeare"], DirectedEdge["yesod-bin", "split"], DirectedEdge["yesod-bin", "streaming-commons"], DirectedEdge["yesod-bin", "tar"], DirectedEdge["yesod-bin", "template-haskell"], DirectedEdge["yesod-bin", "text"], DirectedEdge["yesod-bin", "time"], DirectedEdge["yesod-bin", "transformers"], DirectedEdge["yesod-bin", "transformers-compat"], DirectedEdge["yesod-bin", "unix-compat"], DirectedEdge["yesod-bin", "unordered-containers"], DirectedEdge["yesod-bin", "wai"], DirectedEdge["yesod-bin", "wai-extra"], DirectedEdge["yesod-bin", "warp"], DirectedEdge["yesod-bin", "warp-tls"], DirectedEdge["yesod-bin", "yaml"], DirectedEdge["yesod-bin", "zlib"], DirectedEdge["yesod-bootstrap", "base"], DirectedEdge["yesod-bootstrap", "blaze-html"], DirectedEdge["yesod-bootstrap", "blaze-markup"], DirectedEdge["yesod-bootstrap", "conduit"], DirectedEdge["yesod-bootstrap", "conduit-extra"], DirectedEdge["yesod-bootstrap", "containers"], DirectedEdge["yesod-bootstrap", "either"], DirectedEdge["yesod-bootstrap", "email-validate"], DirectedEdge["yesod-bootstrap", "lens-family-core"], DirectedEdge["yesod-bootstrap", "lens-family-th"], DirectedEdge["yesod-bootstrap", "MonadRandom"], DirectedEdge["yesod-bootstrap", "mtl"], DirectedEdge["yesod-bootstrap", "persistent"], DirectedEdge["yesod-bootstrap", "shakespeare"], DirectedEdge["yesod-bootstrap", "text"], DirectedEdge["yesod-bootstrap", "time"], DirectedEdge["yesod-bootstrap", "transformers"], DirectedEdge["yesod-bootstrap", "yaml"], DirectedEdge["yesod-bootstrap", "yesod-core"], DirectedEdge["yesod-bootstrap", "yesod-form"], DirectedEdge["yesod-bootstrap", "yesod-markdown"], DirectedEdge["yesod-comments", "base"], DirectedEdge["yesod-comments", "bytestring"], DirectedEdge["yesod-comments", "directory"], DirectedEdge["yesod-comments", "friendly-time"], DirectedEdge["yesod-comments", "gravatar"], DirectedEdge["yesod-comments", "old-locale"], DirectedEdge["yesod-comments", "persistent"], DirectedEdge["yesod-comments", "template-haskell"], DirectedEdge["yesod-comments", "text"], DirectedEdge["yesod-comments", "time"], DirectedEdge["yesod-comments", "wai"], DirectedEdge["yesod-comments", "yesod"], DirectedEdge["yesod-comments", "yesod-auth"], DirectedEdge["yesod-comments", "yesod-form"], DirectedEdge["yesod-comments", "yesod-markdown"], DirectedEdge["yesod-content-pdf", "base"], DirectedEdge["yesod-content-pdf", "blaze-builder"], DirectedEdge["yesod-content-pdf", "blaze-html"], DirectedEdge["yesod-content-pdf", "bytestring"], DirectedEdge["yesod-content-pdf", "conduit"], DirectedEdge["yesod-content-pdf", "data-default"], DirectedEdge["yesod-content-pdf", "directory"], DirectedEdge["yesod-content-pdf", "network-uri"], DirectedEdge["yesod-content-pdf", "process"], DirectedEdge["yesod-content-pdf", "temporary"], DirectedEdge["yesod-content-pdf", "transformers"], DirectedEdge["yesod-content-pdf", "yesod-core"], DirectedEdge["yesod-continuations", "base"], DirectedEdge["yesod-continuations", "datetime"], DirectedEdge["yesod-continuations", "hashable"], DirectedEdge["yesod-continuations", "hashmap"], DirectedEdge["yesod-continuations", "stm"], DirectedEdge["yesod-continuations", "system-uuid"], DirectedEdge["yesod-continuations", "template-haskell"], DirectedEdge["yesod-continuations", "yesod"], DirectedEdge["yesod-core", "aeson"], DirectedEdge["yesod-core", "auto-update"], DirectedEdge["yesod-core", "base"], DirectedEdge["yesod-core", "blaze-builder"], DirectedEdge["yesod-core", "blaze-html"], DirectedEdge["yesod-core", "blaze-markup"], DirectedEdge["yesod-core", "byteable"], DirectedEdge["yesod-core", "bytestring"], DirectedEdge["yesod-core", "case-insensitive"], DirectedEdge["yesod-core", "cereal"], DirectedEdge["yesod-core", "clientsession"], DirectedEdge["yesod-core", "conduit"], DirectedEdge["yesod-core", "conduit-extra"], DirectedEdge["yesod-core", "containers"], DirectedEdge["yesod-core", "cookie"], DirectedEdge["yesod-core", "data-default"], DirectedEdge["yesod-core", "deepseq"], DirectedEdge["yesod-core", "directory"], DirectedEdge["yesod-core", "exceptions"], DirectedEdge["yesod-core", "fast-logger"], DirectedEdge["yesod-core", "http-types"], DirectedEdge["yesod-core", "lifted-base"], DirectedEdge["yesod-core", "monad-control"], DirectedEdge["yesod-core", "monad-logger"], DirectedEdge["yesod-core", "mtl"], DirectedEdge["yesod-core", "mwc-random"], DirectedEdge["yesod-core", "old-locale"], DirectedEdge["yesod-core", "parsec"], DirectedEdge["yesod-core", "path-pieces"], DirectedEdge["yesod-core", "primitive"], DirectedEdge["yesod-core", "random"], DirectedEdge["yesod-core", "resourcet"], DirectedEdge["yesod-core", "safe"], DirectedEdge["yesod-core", "semigroups"], DirectedEdge["yesod-core", "shakespeare"], DirectedEdge["yesod-core", "template-haskell"], DirectedEdge["yesod-core", "text"], DirectedEdge["yesod-core", "time"], DirectedEdge["yesod-core", "transformers"], DirectedEdge["yesod-core", "transformers-base"], DirectedEdge["yesod-core", "unix-compat"], DirectedEdge["yesod-core", "unordered-containers"], DirectedEdge["yesod-core", "vector"], DirectedEdge["yesod-core", "wai"], DirectedEdge["yesod-core", "wai-extra"], DirectedEdge["yesod-core", "wai-logger"], DirectedEdge["yesod-core", "warp"], DirectedEdge["yesod-crud", "base"], DirectedEdge["yesod-crud", "classy-prelude"], DirectedEdge["yesod-crud", "containers"], DirectedEdge["yesod-crud", "MissingH"], DirectedEdge["yesod-crud", "monad-control"], DirectedEdge["yesod-crud", "persistent"], DirectedEdge["yesod-crud", "random"], DirectedEdge["yesod-crud", "safe"], DirectedEdge["yesod-crud", "stm"], DirectedEdge["yesod-crud", "uuid"], DirectedEdge["yesod-crud", "yesod-core"], DirectedEdge["yesod-crud", "yesod-form"], DirectedEdge["yesod-crud", "yesod-persistent"], DirectedEdge["yesod-crud-persist", "base"], DirectedEdge["yesod-crud-persist", "either"], DirectedEdge["yesod-crud-persist", "esqueleto"], DirectedEdge["yesod-crud-persist", "microlens"], DirectedEdge["yesod-crud-persist", "microlens-th"], DirectedEdge["yesod-crud-persist", "persistent"], DirectedEdge["yesod-crud-persist", "text"], DirectedEdge["yesod-crud-persist", "time"], DirectedEdge["yesod-crud-persist", "transformers"], DirectedEdge["yesod-crud-persist", "wai"], DirectedEdge["yesod-crud-persist", "yesod-core"], DirectedEdge["yesod-crud-persist", "yesod-form"], DirectedEdge["yesod-crud-persist", "yesod-markdown"], DirectedEdge["yesod-crud-persist", "yesod-persistent"], DirectedEdge["yesod-csp", "attoparsec"], DirectedEdge["yesod-csp", "base"], DirectedEdge["yesod-csp", "mono-traversable"], DirectedEdge["yesod-csp", "network-uri"], DirectedEdge["yesod-csp", "semigroups"], DirectedEdge["yesod-csp", "syb"], DirectedEdge["yesod-csp", "template-haskell"], DirectedEdge["yesod-csp", "text"], DirectedEdge["yesod-csp", "uniplate"], DirectedEdge["yesod-csp", "yesod"], DirectedEdge["yesod-csp", "yesod-core"], DirectedEdge["yesod-datatables", "aeson"], DirectedEdge["yesod-datatables", "attoparsec"], DirectedEdge["yesod-datatables", "base"], DirectedEdge["yesod-datatables", "bytestring"], DirectedEdge["yesod-datatables", "data-default"], DirectedEdge["yesod-datatables", "persistent"], DirectedEdge["yesod-datatables", "text"], DirectedEdge["yesod-datatables", "yesod"], DirectedEdge["yesod-datatables", "yesod-auth"], DirectedEdge["yesod-datatables", "yesod-core"], DirectedEdge["yesod-datatables", "yesod-default"], DirectedEdge["yesod-datatables", "yesod-form"], DirectedEdge["yesod-datatables", "yesod-static"], DirectedEdge["yesod-default", "base"], DirectedEdge["yesod-default", "yesod-core"], DirectedEdge["yesod-dsl", "aeson"], DirectedEdge["yesod-dsl", "aeson-pretty"], DirectedEdge["yesod-dsl", "array"], DirectedEdge["yesod-dsl", "base"], DirectedEdge["yesod-dsl", "bytestring"], DirectedEdge["yesod-dsl", "Cabal"], DirectedEdge["yesod-dsl", "containers"], DirectedEdge["yesod-dsl", "directory"], DirectedEdge["yesod-dsl", "filepath"], DirectedEdge["yesod-dsl", "hscolour"], DirectedEdge["yesod-dsl", "MissingH"], DirectedEdge["yesod-dsl", "mtl"], DirectedEdge["yesod-dsl", "shakespeare"], DirectedEdge["yesod-dsl", "strict"], DirectedEdge["yesod-dsl", "syb"], DirectedEdge["yesod-dsl", "text"], DirectedEdge["yesod-dsl", "transformers"], DirectedEdge["yesod-dsl", "uniplate"], DirectedEdge["yesod-dsl", "vector"], DirectedEdge["yesod-dsl", "yesod-dsl"], DirectedEdge["yesod-eventsource", "base"], DirectedEdge["yesod-eventsource", "blaze-builder"], DirectedEdge["yesod-eventsource", "conduit"], DirectedEdge["yesod-eventsource", "transformers"], DirectedEdge["yesod-eventsource", "wai"], DirectedEdge["yesod-eventsource", "wai-eventsource"], DirectedEdge["yesod-eventsource", "wai-extra"], DirectedEdge["yesod-eventsource", "yesod-core"], DirectedEdge["yesod-examples", "base"], DirectedEdge["yesod-examples", "blaze-html"], DirectedEdge["yesod-examples", "bytestring"], DirectedEdge["yesod-examples", "data-object"], DirectedEdge["yesod-examples", "data-object-yaml"], DirectedEdge["yesod-examples", "hamlet"], DirectedEdge["yesod-examples", "persistent-sqlite"], DirectedEdge["yesod-examples", "persistent-template"], DirectedEdge["yesod-examples", "stm"], DirectedEdge["yesod-examples", "text"], DirectedEdge["yesod-examples", "transformers"], DirectedEdge["yesod-examples", "yesod"], DirectedEdge["yesod-examples", "yesod-core"], DirectedEdge["yesod-examples", "yesod-static"], DirectedEdge["yesod-fay", "aeson"], DirectedEdge["yesod-fay", "base"], DirectedEdge["yesod-fay", "bytestring"], DirectedEdge["yesod-fay", "data-default"], DirectedEdge["yesod-fay", "directory"], DirectedEdge["yesod-fay", "fay"], DirectedEdge["yesod-fay", "fay-dom"], DirectedEdge["yesod-fay", "filepath"], DirectedEdge["yesod-fay", "monad-loops"], DirectedEdge["yesod-fay", "process"], DirectedEdge["yesod-fay", "shakespeare"], DirectedEdge["yesod-fay", "template-haskell"], DirectedEdge["yesod-fay", "text"], DirectedEdge["yesod-fay", "transformers"], DirectedEdge["yesod-fay", "utf8-string"], DirectedEdge["yesod-fay", "yesod-core"], DirectedEdge["yesod-fay", "yesod-form"], DirectedEdge["yesod-fay", "yesod-static"], DirectedEdge["yesod-fb", "aeson"], DirectedEdge["yesod-fb", "base"], DirectedEdge["yesod-fb", "bytestring"], DirectedEdge["yesod-fb", "conduit"], DirectedEdge["yesod-fb", "crypto-api"], DirectedEdge["yesod-fb", "fb"], DirectedEdge["yesod-fb", "http-conduit"], DirectedEdge["yesod-fb", "text"], DirectedEdge["yesod-fb", "wai"], DirectedEdge["yesod-fb", "yesod-core"], DirectedEdge["yesod-form", "aeson"], DirectedEdge["yesod-form", "attoparsec"], DirectedEdge["yesod-form", "base"], DirectedEdge["yesod-form", "blaze-builder"], DirectedEdge["yesod-form", "blaze-html"], DirectedEdge["yesod-form", "blaze-markup"], DirectedEdge["yesod-form", "byteable"], DirectedEdge["yesod-form", "bytestring"], DirectedEdge["yesod-form", "containers"], DirectedEdge["yesod-form", "data-default"], DirectedEdge["yesod-form", "email-validate"], DirectedEdge["yesod-form", "network"], DirectedEdge["yesod-form", "network-uri"], DirectedEdge["yesod-form", "persistent"], DirectedEdge["yesod-form", "resourcet"], DirectedEdge["yesod-form", "semigroups"], DirectedEdge["yesod-form", "shakespeare"], DirectedEdge["yesod-form", "template-haskell"], DirectedEdge["yesod-form", "text"], DirectedEdge["yesod-form", "time"], DirectedEdge["yesod-form", "transformers"], DirectedEdge["yesod-form", "wai"], DirectedEdge["yesod-form", "xss-sanitize"], DirectedEdge["yesod-form", "yesod-core"], DirectedEdge["yesod-form", "yesod-persistent"], DirectedEdge["yesod-form-json", "aeson"], DirectedEdge["yesod-form-json", "base"], DirectedEdge["yesod-form-json", "bytestring"], DirectedEdge["yesod-form-json", "containers"], DirectedEdge["yesod-form-json", "text"], DirectedEdge["yesod-form-json", "unordered-containers"], DirectedEdge["yesod-form-json", "yesod-core"], DirectedEdge["yesod-form-json", "yesod-form"], DirectedEdge["yesod-form-richtext", "base"], DirectedEdge["yesod-form-richtext", "blaze-builder"], DirectedEdge["yesod-form-richtext", "blaze-html"], DirectedEdge["yesod-form-richtext", "shakespeare"], DirectedEdge["yesod-form-richtext", "text"], DirectedEdge["yesod-form-richtext", "xss-sanitize"], DirectedEdge["yesod-form-richtext", "yesod-core"], DirectedEdge["yesod-form-richtext", "yesod-form"], DirectedEdge["yesod-gitrepo", "base"], DirectedEdge["yesod-gitrepo", "directory"], DirectedEdge["yesod-gitrepo", "enclosed-exceptions"], DirectedEdge["yesod-gitrepo", "http-types"], DirectedEdge["yesod-gitrepo", "lifted-base"], DirectedEdge["yesod-gitrepo", "process"], DirectedEdge["yesod-gitrepo", "temporary"], DirectedEdge["yesod-gitrepo", "text"], DirectedEdge["yesod-gitrepo", "wai"], DirectedEdge["yesod-gitrepo", "yesod-core"], DirectedEdge["yesod-gitrev", "aeson"], DirectedEdge["yesod-gitrev", "base"], DirectedEdge["yesod-gitrev", "gitrev"], DirectedEdge["yesod-gitrev", "template-haskell"], DirectedEdge["yesod-gitrev", "yesod-core"], DirectedEdge["yesod-goodies", "base"], DirectedEdge["yesod-goodies", "blaze-html"], DirectedEdge["yesod-goodies", "bytestring"], DirectedEdge["yesod-goodies", "directory"], DirectedEdge["yesod-goodies", "HTTP"], DirectedEdge["yesod-goodies", "old-locale"], DirectedEdge["yesod-goodies", "pandoc"], DirectedEdge["yesod-goodies", "text"], DirectedEdge["yesod-goodies", "time"], DirectedEdge["yesod-goodies", "yesod"], DirectedEdge["yesod-goodies", "yesod-form"], DirectedEdge["yesod-ip", "base"], DirectedEdge["yesod-ip", "ip"], DirectedEdge["yesod-ip", "path-pieces"], DirectedEdge["yesod-ip", "persistent"], DirectedEdge["yesod-ip", "text"], DirectedEdge["yesod-ip", "yesod-core"], DirectedEdge["yesod-ip", "yesod-form"], DirectedEdge["yesod-job-queue", "aeson"], DirectedEdge["yesod-job-queue", "api-field-json-th"], DirectedEdge["yesod-job-queue", "base"], DirectedEdge["yesod-job-queue", "bytestring"], DirectedEdge["yesod-job-queue", "classy-prelude-yesod"], DirectedEdge["yesod-job-queue", "cron"], DirectedEdge["yesod-job-queue", "file-embed"], DirectedEdge["yesod-job-queue", "hedis"], DirectedEdge["yesod-job-queue", "lens"], DirectedEdge["yesod-job-queue", "monad-logger"], DirectedEdge["yesod-job-queue", "persistent-sqlite"], DirectedEdge["yesod-job-queue", "resourcet"], DirectedEdge["yesod-job-queue", "stm"], DirectedEdge["yesod-job-queue", "text"], DirectedEdge["yesod-job-queue", "time"], DirectedEdge["yesod-job-queue", "uuid"], DirectedEdge["yesod-job-queue", "yesod"], DirectedEdge["yesod-job-queue", "yesod-core"], DirectedEdge["yesod-job-queue", "yesod-job-queue"], DirectedEdge["yesod-json", "base"], DirectedEdge["yesod-json", "yesod-core"], DirectedEdge["yesod-links", "base"], DirectedEdge["yesod-links", "text"], DirectedEdge["yesod-links", "yesod-core"], DirectedEdge["yesod-lucid", "base"], DirectedEdge["yesod-lucid", "lucid"], DirectedEdge["yesod-lucid", "monads-tf"], DirectedEdge["yesod-lucid", "text"], DirectedEdge["yesod-lucid", "yesod-core"], DirectedEdge["yesod-mangopay", "aeson"], DirectedEdge["yesod-mangopay", "base"], DirectedEdge["yesod-mangopay", "bytestring"], DirectedEdge["yesod-mangopay", "conduit"], DirectedEdge["yesod-mangopay", "conduit-extra"], DirectedEdge["yesod-mangopay", "containers"], DirectedEdge["yesod-mangopay", "country-codes"], DirectedEdge["yesod-mangopay", "data-default"], DirectedEdge["yesod-mangopay", "directory"], DirectedEdge["yesod-mangopay", "fast-logger"], DirectedEdge["yesod-mangopay", "hamlet"], DirectedEdge["yesod-mangopay", "hjsmin"], DirectedEdge["yesod-mangopay", "http-conduit"], DirectedEdge["yesod-mangopay", "http-types"], DirectedEdge["yesod-mangopay", "lifted-base"], DirectedEdge["yesod-mangopay", "mangopay"], DirectedEdge["yesod-mangopay", "monad-control"], DirectedEdge["yesod-mangopay", "monad-logger"], DirectedEdge["yesod-mangopay", "persistent"], DirectedEdge["yesod-mangopay", "persistent-postgresql"], DirectedEdge["yesod-mangopay", "persistent-template"], DirectedEdge["yesod-mangopay", "resourcet"], DirectedEdge["yesod-mangopay", "shakespeare"], DirectedEdge["yesod-mangopay", "template-haskell"], DirectedEdge["yesod-mangopay", "text"], DirectedEdge["yesod-mangopay", "time"], DirectedEdge["yesod-mangopay", "wai"], DirectedEdge["yesod-mangopay", "wai-extra"], DirectedEdge["yesod-mangopay", "wai-logger"], DirectedEdge["yesod-mangopay", "warp"], DirectedEdge["yesod-mangopay", "yaml"], DirectedEdge["yesod-mangopay", "yesod"], DirectedEdge["yesod-mangopay", "yesod-auth"], DirectedEdge["yesod-mangopay", "yesod-core"], DirectedEdge["yesod-mangopay", "yesod-form"], DirectedEdge["yesod-mangopay", "yesod-mangopay"], DirectedEdge["yesod-mangopay", "yesod-persistent"], DirectedEdge["yesod-mangopay", "yesod-static"], DirectedEdge["yesod-markdown", "base"], DirectedEdge["yesod-markdown", "blaze-html"], DirectedEdge["yesod-markdown", "blaze-markup"], DirectedEdge["yesod-markdown", "bytestring"], DirectedEdge["yesod-markdown", "directory"], DirectedEdge["yesod-markdown", "pandoc"], DirectedEdge["yesod-markdown", "persistent"], DirectedEdge["yesod-markdown", "shakespeare"], DirectedEdge["yesod-markdown", "texmath"], DirectedEdge["yesod-markdown", "text"], DirectedEdge["yesod-markdown", "xss-sanitize"], DirectedEdge["yesod-markdown", "yesod-core"], DirectedEdge["yesod-markdown", "yesod-form"], DirectedEdge["yesod-media-simple", "base"], DirectedEdge["yesod-media-simple", "bytestring"], DirectedEdge["yesod-media-simple", "diagrams-cairo"], DirectedEdge["yesod-media-simple", "diagrams-core"], DirectedEdge["yesod-media-simple", "diagrams-lib"], DirectedEdge["yesod-media-simple", "directory"], DirectedEdge["yesod-media-simple", "JuicyPixels"], DirectedEdge["yesod-media-simple", "vector"], DirectedEdge["yesod-media-simple", "yesod"], DirectedEdge["yesod-newsfeed", "base"], DirectedEdge["yesod-newsfeed", "blaze-html"], DirectedEdge["yesod-newsfeed", "blaze-markup"], DirectedEdge["yesod-newsfeed", "bytestring"], DirectedEdge["yesod-newsfeed", "containers"], DirectedEdge["yesod-newsfeed", "shakespeare"], DirectedEdge["yesod-newsfeed", "text"], DirectedEdge["yesod-newsfeed", "time"], DirectedEdge["yesod-newsfeed", "xml-conduit"], DirectedEdge["yesod-newsfeed", "yesod-core"], DirectedEdge["yesod-paginate", "base"], DirectedEdge["yesod-paginate", "template-haskell"], DirectedEdge["yesod-paginate", "yesod"], DirectedEdge["yesod-pagination", "base"], DirectedEdge["yesod-pagination", "esqueleto"], DirectedEdge["yesod-pagination", "yesod"], DirectedEdge["yesod-paginator", "base"], DirectedEdge["yesod-paginator", "persistent"], DirectedEdge["yesod-paginator", "resourcet"], DirectedEdge["yesod-paginator", "text"], DirectedEdge["yesod-paginator", "transformers"], DirectedEdge["yesod-paginator", "yesod"], DirectedEdge["yesod-persistent", "base"], DirectedEdge["yesod-persistent", "blaze-builder"], DirectedEdge["yesod-persistent", "conduit"], DirectedEdge["yesod-persistent", "persistent"], DirectedEdge["yesod-persistent", "persistent-template"], DirectedEdge["yesod-persistent", "resource-pool"], DirectedEdge["yesod-persistent", "resourcet"], DirectedEdge["yesod-persistent", "transformers"], DirectedEdge["yesod-persistent", "yesod-core"], DirectedEdge["yesod-platform", "ansi-terminal"], DirectedEdge["yesod-platform", "ansi-wl-pprint"], DirectedEdge["yesod-platform", "asn1-encoding"], DirectedEdge["yesod-platform", "asn1-parse"], DirectedEdge["yesod-platform", "asn1-types"], DirectedEdge["yesod-platform", "attoparsec-conduit"], DirectedEdge["yesod-platform", "authenticate"], DirectedEdge["yesod-platform", "auto-update"], DirectedEdge["yesod-platform", "base"], DirectedEdge["yesod-platform", "base16-bytestring"], DirectedEdge["yesod-platform", "base64-bytestring"], DirectedEdge["yesod-platform", "blaze-builder"], DirectedEdge["yesod-platform", "blaze-builder-conduit"], DirectedEdge["yesod-platform", "blaze-html"], DirectedEdge["yesod-platform", "blaze-markup"], DirectedEdge["yesod-platform", "byteable"], DirectedEdge["yesod-platform", "byteorder"], DirectedEdge["yesod-platform", "cereal"], DirectedEdge["yesod-platform", "cipher-aes"], DirectedEdge["yesod-platform", "cipher-des"], DirectedEdge["yesod-platform", "clientsession"], DirectedEdge["yesod-platform", "conduit"], DirectedEdge["yesod-platform", "conduit-extra"], DirectedEdge["yesod-platform", "connection"], DirectedEdge["yesod-platform", "cookie"], DirectedEdge["yesod-platform", "cprng-aes"], DirectedEdge["yesod-platform", "crypto-api"], DirectedEdge["yesod-platform", "crypto-cipher-types"], DirectedEdge["yesod-platform", "crypto-numbers"], DirectedEdge["yesod-platform", "crypto-pubkey"], DirectedEdge["yesod-platform", "crypto-pubkey-types"], DirectedEdge["yesod-platform", "crypto-random"], DirectedEdge["yesod-platform", "cryptohash"], DirectedEdge["yesod-platform", "cryptohash-conduit"], DirectedEdge["yesod-platform", "css-text"], DirectedEdge["yesod-platform", "data-default"], DirectedEdge["yesod-platform", "data-default-class"], DirectedEdge["yesod-platform", "data-default-instances-base"], DirectedEdge["yesod-platform", "data-default-instances-containers"], DirectedEdge["yesod-platform", "data-default-instances-dlist"], DirectedEdge["yesod-platform", "data-default-instances-old-locale"], DirectedEdge["yesod-platform", "dlist"], DirectedEdge["yesod-platform", "email-validate"], DirectedEdge["yesod-platform", "entropy"], DirectedEdge["yesod-platform", "esqueleto"], DirectedEdge["yesod-platform", "exceptions"], DirectedEdge["yesod-platform", "fast-logger"], DirectedEdge["yesod-platform", "file-embed"], DirectedEdge["yesod-platform", "hamlet"], DirectedEdge["yesod-platform", "hjsmin"], DirectedEdge["yesod-platform", "hspec"], DirectedEdge["yesod-platform", "hspec-expectations"], DirectedEdge["yesod-platform", "html-conduit"], DirectedEdge["yesod-platform", "http-client"], DirectedEdge["yesod-platform", "http-client-tls"], DirectedEdge["yesod-platform", "http-conduit"], DirectedEdge["yesod-platform", "http-date"], DirectedEdge["yesod-platform", "http-reverse-proxy"], DirectedEdge["yesod-platform", "http-types"], DirectedEdge["yesod-platform", "language-javascript"], DirectedEdge["yesod-platform", "lifted-base"], DirectedEdge["yesod-platform", "mime-mail"], DirectedEdge["yesod-platform", "mime-types"], DirectedEdge["yesod-platform", "mmorph"], DirectedEdge["yesod-platform", "monad-control"], DirectedEdge["yesod-platform", "monad-logger"], DirectedEdge["yesod-platform", "monad-loops"], DirectedEdge["yesod-platform", "nats"], DirectedEdge["yesod-platform", "network-conduit"], DirectedEdge["yesod-platform", "optparse-applicative"], DirectedEdge["yesod-platform", "path-pieces"], DirectedEdge["yesod-platform", "pem"], DirectedEdge["yesod-platform", "persistent"], DirectedEdge["yesod-platform", "persistent-template"], DirectedEdge["yesod-platform", "publicsuffixlist"], DirectedEdge["yesod-platform", "pwstore-fast"], DirectedEdge["yesod-platform", "quickcheck-io"], DirectedEdge["yesod-platform", "resource-pool"], DirectedEdge["yesod-platform", "resourcet"], DirectedEdge["yesod-platform", "safe"], DirectedEdge["yesod-platform", "securemem"], DirectedEdge["yesod-platform", "semigroups"], DirectedEdge["yesod-platform", "setenv"], DirectedEdge["yesod-platform", "SHA"], DirectedEdge["yesod-platform", "shakespeare"], DirectedEdge["yesod-platform", "shakespeare-css"], DirectedEdge["yesod-platform", "shakespeare-i18n"], DirectedEdge["yesod-platform", "shakespeare-js"], DirectedEdge["yesod-platform", "shakespeare-text"], DirectedEdge["yesod-platform", "silently"], DirectedEdge["yesod-platform", "simple-sendfile"], DirectedEdge["yesod-platform", "skein"], DirectedEdge["yesod-platform", "socks"], DirectedEdge["yesod-platform", "stm-chans"], DirectedEdge["yesod-platform", "streaming-commons"], DirectedEdge["yesod-platform", "stringsearch"], DirectedEdge["yesod-platform", "system-fileio"], DirectedEdge["yesod-platform", "system-filepath"], DirectedEdge["yesod-platform", "tagged"], DirectedEdge["yesod-platform", "tagsoup"], DirectedEdge["yesod-platform", "tagstream-conduit"], DirectedEdge["yesod-platform", "tf-random"], DirectedEdge["yesod-platform", "tls"], DirectedEdge["yesod-platform", "transformers-base"], DirectedEdge["yesod-platform", "utf8-string"], DirectedEdge["yesod-platform", "void"], DirectedEdge["yesod-platform", "wai"], DirectedEdge["yesod-platform", "wai-app-static"], DirectedEdge["yesod-platform", "wai-extra"], DirectedEdge["yesod-platform", "wai-logger"], DirectedEdge["yesod-platform", "wai-test"], DirectedEdge["yesod-platform", "warp"], DirectedEdge["yesod-platform", "warp-tls"], DirectedEdge["yesod-platform", "x509-store"], DirectedEdge["yesod-platform", "x509-system"], DirectedEdge["yesod-platform", "x509-validation"], DirectedEdge["yesod-platform", "xml-conduit"], DirectedEdge["yesod-platform", "xml-types"], DirectedEdge["yesod-platform", "xss-sanitize"], DirectedEdge["yesod-platform", "yaml"], DirectedEdge["yesod-platform", "yesod"], DirectedEdge["yesod-platform", "yesod-auth"], DirectedEdge["yesod-platform", "yesod-auth-hashdb"], DirectedEdge["yesod-platform", "yesod-core"], DirectedEdge["yesod-platform", "yesod-form"], DirectedEdge["yesod-platform", "yesod-persistent"], DirectedEdge["yesod-platform", "yesod-routes"], DirectedEdge["yesod-platform", "yesod-static"], DirectedEdge["yesod-platform", "yesod-test"], DirectedEdge["yesod-pnotify", "aeson"], DirectedEdge["yesod-pnotify", "base"], DirectedEdge["yesod-pnotify", "shakespeare"], DirectedEdge["yesod-pnotify", "text"], DirectedEdge["yesod-pnotify", "transformers"], DirectedEdge["yesod-pnotify", "yesod"], DirectedEdge["yesod-pnotify", "yesod-form"], DirectedEdge["yesod-pure", "base"], DirectedEdge["yesod-pure", "fast-logger"], DirectedEdge["yesod-pure", "text"], DirectedEdge["yesod-pure", "yesod"], DirectedEdge["yesod-pure", "yesod-core"], DirectedEdge["yesod-purescript", "aeson"], DirectedEdge["yesod-purescript", "base"], DirectedEdge["yesod-purescript", "bytestring"], DirectedEdge["yesod-purescript", "containers"], DirectedEdge["yesod-purescript", "data-default"], DirectedEdge["yesod-purescript", "formatting"], DirectedEdge["yesod-purescript", "fsnotify"], DirectedEdge["yesod-purescript", "mtl"], DirectedEdge["yesod-purescript", "purescript"], DirectedEdge["yesod-purescript", "regex-tdfa"], DirectedEdge["yesod-purescript", "regex-tdfa-text"], DirectedEdge["yesod-purescript", "shakespeare"], DirectedEdge["yesod-purescript", "system-fileio"], DirectedEdge["yesod-purescript", "system-filepath"], DirectedEdge["yesod-purescript", "template-haskell"], DirectedEdge["yesod-purescript", "text"], DirectedEdge["yesod-purescript", "time"], DirectedEdge["yesod-purescript", "transformers"], DirectedEdge["yesod-purescript", "yesod-core"], DirectedEdge["yesod-raml", "aeson"], DirectedEdge["yesod-raml", "base"], DirectedEdge["yesod-raml", "bytestring"], DirectedEdge["yesod-raml", "containers"], DirectedEdge["yesod-raml", "data-default"], DirectedEdge["yesod-raml", "network-uri"], DirectedEdge["yesod-raml", "regex-posix"], DirectedEdge["yesod-raml", "template-haskell"], DirectedEdge["yesod-raml", "text"], DirectedEdge["yesod-raml", "th-lift"], DirectedEdge["yesod-raml", "unordered-containers"], DirectedEdge["yesod-raml", "vector"], DirectedEdge["yesod-raml", "yaml"], DirectedEdge["yesod-raml", "yesod-core"], DirectedEdge["yesod-raml-bin", "base"], DirectedEdge["yesod-raml-bin", "blaze-html"], DirectedEdge["yesod-raml-bin", "blaze-markup"], DirectedEdge["yesod-raml-bin", "bytestring"], DirectedEdge["yesod-raml-bin", "containers"], DirectedEdge["yesod-raml-bin", "http-types"], DirectedEdge["yesod-raml-bin", "optparse-applicative"], DirectedEdge["yesod-raml-bin", "shakespeare"], DirectedEdge["yesod-raml-bin", "template-haskell"], DirectedEdge["yesod-raml-bin", "text"], DirectedEdge["yesod-raml-bin", "wai"], DirectedEdge["yesod-raml-bin", "warp"], DirectedEdge["yesod-raml-bin", "yaml"], DirectedEdge["yesod-raml-bin", "yesod-core"], DirectedEdge["yesod-raml-bin", "yesod-markdown"], DirectedEdge["yesod-raml-bin", "yesod-raml"], DirectedEdge["yesod-raml-bin", "yesod-raml-docs"], DirectedEdge["yesod-raml-bin", "yesod-raml-mock"], DirectedEdge["yesod-raml-docs", "base"], DirectedEdge["yesod-raml-docs", "bytestring"], DirectedEdge["yesod-raml-docs", "containers"], DirectedEdge["yesod-raml-docs", "shakespeare"], DirectedEdge["yesod-raml-docs", "template-haskell"], DirectedEdge["yesod-raml-docs", "text"], DirectedEdge["yesod-raml-docs", "yaml"], DirectedEdge["yesod-raml-docs", "yesod-markdown"], DirectedEdge["yesod-raml-docs", "yesod-raml"], DirectedEdge["yesod-raml-mock", "base"], DirectedEdge["yesod-raml-mock", "bytestring"], DirectedEdge["yesod-raml-mock", "containers"], DirectedEdge["yesod-raml-mock", "template-haskell"], DirectedEdge["yesod-raml-mock", "text"], DirectedEdge["yesod-raml-mock", "yaml"], DirectedEdge["yesod-raml-mock", "yesod-core"], DirectedEdge["yesod-raml-mock", "yesod-raml"], DirectedEdge["yesod-recaptcha", "base"], DirectedEdge["yesod-recaptcha", "bytestring"], DirectedEdge["yesod-recaptcha", "data-default"], DirectedEdge["yesod-recaptcha", "http-conduit"], DirectedEdge["yesod-recaptcha", "http-types"], DirectedEdge["yesod-recaptcha", "lifted-base"], DirectedEdge["yesod-recaptcha", "network"], DirectedEdge["yesod-recaptcha", "network-info"], DirectedEdge["yesod-recaptcha", "resourcet"], DirectedEdge["yesod-recaptcha", "text"], DirectedEdge["yesod-recaptcha", "wai"], DirectedEdge["yesod-recaptcha", "yesod-auth"], DirectedEdge["yesod-recaptcha", "yesod-core"], DirectedEdge["yesod-recaptcha", "yesod-form"], DirectedEdge["yesod-routes", "yesod-core"], DirectedEdge["yesod-routes", "base"], DirectedEdge["yesod-routes", "containers"], DirectedEdge["yesod-routes", "path-pieces"], DirectedEdge["yesod-routes", "template-haskell"], DirectedEdge["yesod-routes", "text"], DirectedEdge["yesod-routes", "vector"], DirectedEdge["yesod-routes-flow", "attoparsec"], DirectedEdge["yesod-routes-flow", "base"], DirectedEdge["yesod-routes-flow", "classy-prelude"], DirectedEdge["yesod-routes-flow", "containers"], DirectedEdge["yesod-routes-flow", "system-fileio"], DirectedEdge["yesod-routes-flow", "system-filepath"], DirectedEdge["yesod-routes-flow", "text"], DirectedEdge["yesod-routes-flow", "yesod-core"], DirectedEdge["yesod-routes-typescript", "attoparsec"], DirectedEdge["yesod-routes-typescript", "base"], DirectedEdge["yesod-routes-typescript", "classy-prelude"], DirectedEdge["yesod-routes-typescript", "system-fileio"], DirectedEdge["yesod-routes-typescript", "text"], DirectedEdge["yesod-routes-typescript", "yesod-core"], DirectedEdge["yesod-routes-typescript", "yesod-routes"], DirectedEdge["yesod-rst", "base"], DirectedEdge["yesod-rst", "blaze-html"], DirectedEdge["yesod-rst", "directory"], DirectedEdge["yesod-rst", "hamlet"], DirectedEdge["yesod-rst", "pandoc"], DirectedEdge["yesod-rst", "persistent"], DirectedEdge["yesod-rst", "text"], DirectedEdge["yesod-rst", "xss-sanitize"], DirectedEdge["yesod-rst", "yesod-core"], DirectedEdge["yesod-rst", "yesod-form"], DirectedEdge["yesod-s3", "base"], DirectedEdge["yesod-s3", "bytestring"], DirectedEdge["yesod-s3", "conduit"], DirectedEdge["yesod-s3", "conduit-extra"], DirectedEdge["yesod-s3", "gd"], DirectedEdge["yesod-s3", "mtl"], DirectedEdge["yesod-s3", "network"], DirectedEdge["yesod-s3", "resourcet"], DirectedEdge["yesod-s3", "text"], DirectedEdge["yesod-s3", "yesod-core"], DirectedEdge["yesod-sass", "base"], DirectedEdge["yesod-sass", "data-default"], DirectedEdge["yesod-sass", "hsass"], DirectedEdge["yesod-sass", "shakespeare"], DirectedEdge["yesod-sass", "template-haskell"], DirectedEdge["yesod-sass", "text"], DirectedEdge["yesod-sass", "yesod-core"], DirectedEdge["yesod-session-redis", "base"], DirectedEdge["yesod-session-redis", "binary"], DirectedEdge["yesod-session-redis", "bytestring"], DirectedEdge["yesod-session-redis", "containers"], DirectedEdge["yesod-session-redis", "cookie"], DirectedEdge["yesod-session-redis", "hedis"], DirectedEdge["yesod-session-redis", "mtl"], DirectedEdge["yesod-session-redis", "network"], DirectedEdge["yesod-session-redis", "pool-conduit"], DirectedEdge["yesod-session-redis", "random"], DirectedEdge["yesod-session-redis", "text"], DirectedEdge["yesod-session-redis", "time"], DirectedEdge["yesod-session-redis", "wai"], DirectedEdge["yesod-session-redis", "yesod-core"], DirectedEdge["yesod-sitemap", "base"], DirectedEdge["yesod-sitemap", "conduit"], DirectedEdge["yesod-sitemap", "containers"], DirectedEdge["yesod-sitemap", "data-default"], DirectedEdge["yesod-sitemap", "text"], DirectedEdge["yesod-sitemap", "time"], DirectedEdge["yesod-sitemap", "xml-conduit"], DirectedEdge["yesod-sitemap", "xml-types"], DirectedEdge["yesod-sitemap", "yesod-core"], DirectedEdge["yesod-static", "async"], DirectedEdge["yesod-static", "attoparsec"], DirectedEdge["yesod-static", "base"], DirectedEdge["yesod-static", "base64-bytestring"], DirectedEdge["yesod-static", "blaze-builder"], DirectedEdge["yesod-static", "byteable"], DirectedEdge["yesod-static", "bytestring"], DirectedEdge["yesod-static", "conduit"], DirectedEdge["yesod-static", "conduit-extra"], DirectedEdge["yesod-static", "containers"], DirectedEdge["yesod-static", "cryptohash"], DirectedEdge["yesod-static", "cryptohash-conduit"], DirectedEdge["yesod-static", "css-text"], DirectedEdge["yesod-static", "data-default"], DirectedEdge["yesod-static", "directory"], DirectedEdge["yesod-static", "file-embed"], DirectedEdge["yesod-static", "filepath"], DirectedEdge["yesod-static", "hashable"], DirectedEdge["yesod-static", "hjsmin"], DirectedEdge["yesod-static", "http-types"], DirectedEdge["yesod-static", "mime-types"], DirectedEdge["yesod-static", "old-time"], DirectedEdge["yesod-static", "process"], DirectedEdge["yesod-static", "resourcet"], DirectedEdge["yesod-static", "template-haskell"], DirectedEdge["yesod-static", "text"], DirectedEdge["yesod-static", "transformers"], DirectedEdge["yesod-static", "unix-compat"], DirectedEdge["yesod-static", "unordered-containers"], DirectedEdge["yesod-static", "wai"], DirectedEdge["yesod-static", "wai-app-static"], DirectedEdge["yesod-static", "yesod-core"], DirectedEdge["yesod-static-angular", "aeson"], DirectedEdge["yesod-static-angular", "base"], DirectedEdge["yesod-static-angular", "blaze-builder"], DirectedEdge["yesod-static-angular", "blaze-markup"], DirectedEdge["yesod-static-angular", "bytestring"], DirectedEdge["yesod-static-angular", "data-default"], DirectedEdge["yesod-static-angular", "directory"], DirectedEdge["yesod-static-angular", "filepath"], DirectedEdge["yesod-static-angular", "hamlet"], DirectedEdge["yesod-static-angular", "language-javascript"], DirectedEdge["yesod-static-angular", "mime-types"], DirectedEdge["yesod-static-angular", "shakespeare"], DirectedEdge["yesod-static-angular", "template-haskell"], DirectedEdge["yesod-static-angular", "text"], DirectedEdge["yesod-static-angular", "yesod"], DirectedEdge["yesod-static-angular", "yesod-core"], DirectedEdge["yesod-static-angular", "yesod-static"], DirectedEdge["yesod-static-angular", "yesod-static-angular"], DirectedEdge["yesod-table", "base"], DirectedEdge["yesod-table", "bytestring"], DirectedEdge["yesod-table", "containers"], DirectedEdge["yesod-table", "contravariant"], DirectedEdge["yesod-table", "semigroups"], DirectedEdge["yesod-table", "text"], DirectedEdge["yesod-table", "yesod-core"], DirectedEdge["yesod-tableview", "base"], DirectedEdge["yesod-tableview", "hamlet"], DirectedEdge["yesod-tableview", "persistent"], DirectedEdge["yesod-tableview", "yesod"], DirectedEdge["yesod-test", "attoparsec"], DirectedEdge["yesod-test", "base"], DirectedEdge["yesod-test", "blaze-builder"], DirectedEdge["yesod-test", "blaze-html"], DirectedEdge["yesod-test", "blaze-markup"], DirectedEdge["yesod-test", "bytestring"], DirectedEdge["yesod-test", "case-insensitive"], DirectedEdge["yesod-test", "containers"], DirectedEdge["yesod-test", "cookie"], DirectedEdge["yesod-test", "hspec-core"], DirectedEdge["yesod-test", "html-conduit"], DirectedEdge["yesod-test", "http-types"], DirectedEdge["yesod-test", "HUnit"], DirectedEdge["yesod-test", "monad-control"], DirectedEdge["yesod-test", "network"], DirectedEdge["yesod-test", "persistent"], DirectedEdge["yesod-test", "text"], DirectedEdge["yesod-test", "time"], DirectedEdge["yesod-test", "transformers"], DirectedEdge["yesod-test", "wai"], DirectedEdge["yesod-test", "wai-extra"], DirectedEdge["yesod-test", "xml-conduit"], DirectedEdge["yesod-test", "xml-types"], DirectedEdge["yesod-test", "yesod-core"], DirectedEdge["yesod-test-json", "aeson"], DirectedEdge["yesod-test-json", "base"], DirectedEdge["yesod-test-json", "bytestring"], DirectedEdge["yesod-test-json", "conduit"], DirectedEdge["yesod-test-json", "hspec"], DirectedEdge["yesod-test-json", "http-types"], DirectedEdge["yesod-test-json", "HUnit"], DirectedEdge["yesod-test-json", "text"], DirectedEdge["yesod-test-json", "transformers"], DirectedEdge["yesod-test-json", "wai"], DirectedEdge["yesod-test-json", "wai-test"], DirectedEdge["yesod-test-json", "yesod-default"], DirectedEdge["yesod-text-markdown", "aeson"], DirectedEdge["yesod-text-markdown", "base"], DirectedEdge["yesod-text-markdown", "markdown"], DirectedEdge["yesod-text-markdown", "persistent"], DirectedEdge["yesod-text-markdown", "shakespeare"], DirectedEdge["yesod-text-markdown", "text"], DirectedEdge["yesod-text-markdown", "yesod-core"], DirectedEdge["yesod-text-markdown", "yesod-form"], DirectedEdge["yesod-text-markdown", "yesod-persistent"], DirectedEdge["yesod-tls", "base"], DirectedEdge["yesod-tls", "fast-logger"], DirectedEdge["yesod-tls", "monad-logger"], DirectedEdge["yesod-tls", "template-haskell"], DirectedEdge["yesod-tls", "unix"], DirectedEdge["yesod-tls", "wai"], DirectedEdge["yesod-tls", "wai-extra"], DirectedEdge["yesod-tls", "warp"], DirectedEdge["yesod-tls", "warp-tls"], DirectedEdge["yesod-tls", "yesod"], DirectedEdge["yesod-transloadit", "aeson"], DirectedEdge["yesod-transloadit", "base"], DirectedEdge["yesod-transloadit", "byteable"], DirectedEdge["yesod-transloadit", "bytestring"], DirectedEdge["yesod-transloadit", "cryptohash"], DirectedEdge["yesod-transloadit", "lens"], DirectedEdge["yesod-transloadit", "lens-aeson"], DirectedEdge["yesod-transloadit", "mime"], DirectedEdge["yesod-transloadit", "network-uri"], DirectedEdge["yesod-transloadit", "old-locale"], DirectedEdge["yesod-transloadit", "shakespeare"], DirectedEdge["yesod-transloadit", "text"], DirectedEdge["yesod-transloadit", "time"], DirectedEdge["yesod-transloadit", "transformers"], DirectedEdge["yesod-transloadit", "unordered-containers"], DirectedEdge["yesod-transloadit", "yesod"], DirectedEdge["yesod-transloadit", "yesod-core"], DirectedEdge["yesod-transloadit", "yesod-form"], DirectedEdge["yesod-vend", "base"], DirectedEdge["yesod-vend", "blaze-html"], DirectedEdge["yesod-vend", "hamlet"], DirectedEdge["yesod-vend", "monad-logger"], DirectedEdge["yesod-vend", "persistent"], DirectedEdge["yesod-vend", "persistent-sqlite"], DirectedEdge["yesod-vend", "resourcet"], DirectedEdge["yesod-vend", "text"], DirectedEdge["yesod-vend", "yesod"], DirectedEdge["yesod-vend", "yesod-form"], DirectedEdge["yesod-vend", "yesod-vend"], DirectedEdge["yesod-websockets", "async"], DirectedEdge["yesod-websockets", "base"], DirectedEdge["yesod-websockets", "conduit"], DirectedEdge["yesod-websockets", "enclosed-exceptions"], DirectedEdge["yesod-websockets", "monad-control"], DirectedEdge["yesod-websockets", "transformers"], DirectedEdge["yesod-websockets", "wai"], DirectedEdge["yesod-websockets", "wai-websockets"], DirectedEdge["yesod-websockets", "websockets"], DirectedEdge["yesod-websockets", "yesod-core"], DirectedEdge["yesod-websockets-extra", "base"], DirectedEdge["yesod-websockets-extra", "enclosed-exceptions"], DirectedEdge["yesod-websockets-extra", "transformers"], DirectedEdge["yesod-websockets-extra", "websockets"], DirectedEdge["yesod-websockets-extra", "yesod-websockets"], DirectedEdge["yesod-worker", "base"], DirectedEdge["yesod-worker", "containers"], DirectedEdge["yesod-worker", "fast-logger"], DirectedEdge["yesod-worker", "monad-control"], DirectedEdge["yesod-worker", "monad-logger"], DirectedEdge["yesod-worker", "persistent"], DirectedEdge["yesod-worker", "resourcet"], DirectedEdge["yesod-worker", "stm"], DirectedEdge["yesod-worker", "template-haskell"], DirectedEdge["yesod-worker", "transformers"], DirectedEdge["yesod-worker", "transformers-base"], DirectedEdge["yesod-worker", "yesod"], DirectedEdge["yesod-worker", "yesod-core"], DirectedEdge["yet-another-logger", "aeson"], DirectedEdge["yet-another-logger", "ansi-terminal"], DirectedEdge["yet-another-logger", "async"], DirectedEdge["yet-another-logger", "base"], DirectedEdge["yet-another-logger", "base-unicode-symbols"], DirectedEdge["yet-another-logger", "bytestring"], DirectedEdge["yet-another-logger", "Cabal"], DirectedEdge["yet-another-logger", "case-insensitive"], DirectedEdge["yet-another-logger", "clock"], DirectedEdge["yet-another-logger", "configuration-tools"], DirectedEdge["yet-another-logger", "deepseq"], DirectedEdge["yet-another-logger", "enclosed-exceptions"], DirectedEdge["yet-another-logger", "exceptions"], DirectedEdge["yet-another-logger", "lens"], DirectedEdge["yet-another-logger", "lifted-base"], DirectedEdge["yet-another-logger", "monad-control"], DirectedEdge["yet-another-logger", "mtl"], DirectedEdge["yet-another-logger", "nats"], DirectedEdge["yet-another-logger", "old-locale"], DirectedEdge["yet-another-logger", "optparse-applicative"], DirectedEdge["yet-another-logger", "stm"], DirectedEdge["yet-another-logger", "stm-chans"], DirectedEdge["yet-another-logger", "text"], DirectedEdge["yet-another-logger", "time"], DirectedEdge["yet-another-logger", "transformers"], DirectedEdge["yet-another-logger", "transformers-base"], DirectedEdge["yet-another-logger", "void"], DirectedEdge["yet-another-logger", "yet-another-logger"], DirectedEdge["yhccore", "base"], DirectedEdge["yhccore", "containers"], DirectedEdge["yhccore", "mtl"], DirectedEdge["yhccore", "pretty"], DirectedEdge["yhccore", "uniplate"], DirectedEdge["yi", "array"], DirectedEdge["yi", "base"], DirectedEdge["yi", "binary"], DirectedEdge["yi", "bytestring"], DirectedEdge["yi", "Cabal"], DirectedEdge["yi", "containers"], DirectedEdge["yi", "data-default"], DirectedEdge["yi", "directory"], DirectedEdge["yi", "dlist"], DirectedEdge["yi", "dynamic-state"], DirectedEdge["yi", "dyre"], DirectedEdge["yi", "exceptions"], DirectedEdge["yi", "filepath"], DirectedEdge["yi", "glib"], DirectedEdge["yi", "gtk"], DirectedEdge["yi", "hashable"], DirectedEdge["yi", "hint"], DirectedEdge["yi", "lens"], DirectedEdge["yi", "mtl"], DirectedEdge["yi", "old-locale"], DirectedEdge["yi", "oo-prototypes"], DirectedEdge["yi", "pango"], DirectedEdge["yi", "parsec"], DirectedEdge["yi", "pointedlist"], DirectedEdge["yi", "process"], DirectedEdge["yi", "QuickCheck"], DirectedEdge["yi", "random"], DirectedEdge["yi", "safe"], DirectedEdge["yi", "semigroups"], DirectedEdge["yi", "split"], DirectedEdge["yi", "stm"], DirectedEdge["yi", "template-haskell"], DirectedEdge["yi", "text"], DirectedEdge["yi", "text-icu"], DirectedEdge["yi", "time"], DirectedEdge["yi", "transformers-base"], DirectedEdge["yi", "unix"], DirectedEdge["yi", "unix-compat"], DirectedEdge["yi", "unordered-containers"], DirectedEdge["yi", "vty"], DirectedEdge["yi", "word-trie"], DirectedEdge["yi", "xdg-basedir"], DirectedEdge["yi", "yi"], DirectedEdge["yi", "yi-language"], DirectedEdge["yi", "yi-rope"], DirectedEdge["yi-contrib", "yi-fuzzy-open"], DirectedEdge["yi-contrib", "yi-snippet"], DirectedEdge["yi-contrib", "base"], DirectedEdge["yi-contrib", "containers"], DirectedEdge["yi-contrib", "directory"], DirectedEdge["yi-contrib", "filepath"], DirectedEdge["yi-contrib", "lens"], DirectedEdge["yi-contrib", "mtl"], DirectedEdge["yi-contrib", "old-locale"], DirectedEdge["yi-contrib", "oo-prototypes"], DirectedEdge["yi-contrib", "split"], DirectedEdge["yi-contrib", "text"], DirectedEdge["yi-contrib", "time"], DirectedEdge["yi-contrib", "transformers-base"], DirectedEdge["yi-contrib", "yi"], DirectedEdge["yi-contrib", "yi-language"], DirectedEdge["yi-contrib", "yi-rope"], DirectedEdge["yi-emacs-colours", "base"], DirectedEdge["yi-emacs-colours", "containers"], DirectedEdge["yi-emacs-colours", "split"], DirectedEdge["yi-emacs-colours", "yi-language"], DirectedEdge["yi-fuzzy-open", "base"], DirectedEdge["yi-fuzzy-open", "binary"], DirectedEdge["yi-fuzzy-open", "containers"], DirectedEdge["yi-fuzzy-open", "data-default"], DirectedEdge["yi-fuzzy-open", "directory"], DirectedEdge["yi-fuzzy-open", "filepath"], DirectedEdge["yi-fuzzy-open", "mtl"], DirectedEdge["yi-fuzzy-open", "text"], DirectedEdge["yi-fuzzy-open", "transformers-base"], DirectedEdge["yi-fuzzy-open", "vector"], DirectedEdge["yi-fuzzy-open", "yi"], DirectedEdge["yi-fuzzy-open", "yi-language"], DirectedEdge["yi-fuzzy-open", "yi-rope"], DirectedEdge["yi-gtk", "yi"], DirectedEdge["yi-language", "array"], DirectedEdge["yi-language", "base"], DirectedEdge["yi-language", "binary"], DirectedEdge["yi-language", "containers"], DirectedEdge["yi-language", "data-default"], DirectedEdge["yi-language", "hashable"], DirectedEdge["yi-language", "lens"], DirectedEdge["yi-language", "oo-prototypes"], DirectedEdge["yi-language", "pointedlist"], DirectedEdge["yi-language", "regex-base"], DirectedEdge["yi-language", "regex-tdfa"], DirectedEdge["yi-language", "template-haskell"], DirectedEdge["yi-language", "transformers-base"], DirectedEdge["yi-language", "unordered-containers"], DirectedEdge["yi-monokai", "base"], DirectedEdge["yi-monokai", "yi"], DirectedEdge["yi-rope", "base"], DirectedEdge["yi-rope", "binary"], DirectedEdge["yi-rope", "bytestring"], DirectedEdge["yi-rope", "charsetdetect-ae"], DirectedEdge["yi-rope", "data-default"], DirectedEdge["yi-rope", "deepseq"], DirectedEdge["yi-rope", "fingertree"], DirectedEdge["yi-rope", "text"], DirectedEdge["yi-rope", "text-icu"], DirectedEdge["yi-snippet", "base"], DirectedEdge["yi-snippet", "containers"], DirectedEdge["yi-snippet", "yi"], DirectedEdge["yi-snippet", "yi-rope"], DirectedEdge["yi-solarized", "base"], DirectedEdge["yi-solarized", "yi"], DirectedEdge["yi-spolsky", "base"], DirectedEdge["yi-spolsky", "yi"], DirectedEdge["yi-vty", "yi"], DirectedEdge["yices", "base"], DirectedEdge["yices", "parsec"], DirectedEdge["yices", "process"], DirectedEdge["yices-easy", "base"], DirectedEdge["yices-easy", "bindings-yices"], DirectedEdge["yices-easy", "containers"], DirectedEdge["yices-easy", "transformers"], DirectedEdge["yices-painless", "base"], DirectedEdge["yices-painless", "containers"], DirectedEdge["yices-painless", "pretty"], DirectedEdge["yices-painless", "strict-concurrency"], DirectedEdge["yices-painless", "vector"], DirectedEdge["yjftp", "base"], DirectedEdge["yjftp", "directory"], DirectedEdge["yjftp", "ftphs"], DirectedEdge["yjftp", "haskeline"], DirectedEdge["yjftp", "hsConfigure"], DirectedEdge["yjftp", "mtl"], DirectedEdge["yjftp", "process"], DirectedEdge["yjftp", "unix"], DirectedEdge["yjftp-libs", "base"], DirectedEdge["yjftp-libs", "directory"], DirectedEdge["yjftp-libs", "ftphs"], DirectedEdge["yjftp-libs", "mtl"], DirectedEdge["yjftp-libs", "process"], DirectedEdge["yjftp-libs", "unix"], DirectedEdge["yjsvg", "base"], DirectedEdge["yjsvg", "HaXml"], DirectedEdge["yjtools", "base"], DirectedEdge["yocto", "base"], DirectedEdge["yocto", "containers"], DirectedEdge["yocto", "parsec"], DirectedEdge["yoctoparsec", "base"], DirectedEdge["yoctoparsec", "free"], DirectedEdge["yoctoparsec", "mtl"], DirectedEdge["yoko", "base"], DirectedEdge["yoko", "bifunctors"], DirectedEdge["yoko", "containers"], DirectedEdge["yoko", "invariant"], DirectedEdge["yoko", "kinds"], DirectedEdge["yoko", "mtl"], DirectedEdge["yoko", "records"], DirectedEdge["yoko", "semigroups"], DirectedEdge["yoko", "template-haskell"], DirectedEdge["yoko", "th-sccs"], DirectedEdge["yoko", "type-cereal"], DirectedEdge["yoko", "type-digits"], DirectedEdge["yoko", "type-equality"], DirectedEdge["yoko", "type-functions"], DirectedEdge["yoko", "type-ord"], DirectedEdge["yoko", "type-ord-spine-cereal"], DirectedEdge["yoko", "type-spine"], DirectedEdge["york-lava", "base"], DirectedEdge["york-lava", "containers"], DirectedEdge["youtube", "base"], DirectedEdge["youtube", "bytestring"], DirectedEdge["youtube", "process"], DirectedEdge["youtube", "utility-ht"], DirectedEdge["yql", "aeson"], DirectedEdge["yql", "base"], DirectedEdge["yql", "base64-bytestring"], DirectedEdge["yql", "bytestring"], DirectedEdge["yql", "containers"], DirectedEdge["yql", "cryptohash"], DirectedEdge["yql", "data-default"], DirectedEdge["yql", "exceptions"], DirectedEdge["yql", "hslogger"], DirectedEdge["yql", "http-conduit"], DirectedEdge["yql", "http-types"], DirectedEdge["yql", "hxt"], DirectedEdge["yql", "lens"], DirectedEdge["yql", "opendatatable"], DirectedEdge["yql", "parsec"], DirectedEdge["yql", "SHA"], DirectedEdge["yql", "text"], DirectedEdge["yql", "transformers"], DirectedEdge["yql", "unordered-containers"], DirectedEdge["yql", "uri-template"], DirectedEdge["yql", "utf8-string"], DirectedEdge["yql", "uuid"], DirectedEdge["yql", "vector"], DirectedEdge["yql", "yql"], DirectedEdge["yql", "zlib"], DirectedEdge["yst", "aeson"], DirectedEdge["yst", "base"], DirectedEdge["yst", "containers"], DirectedEdge["yst", "csv"], DirectedEdge["yst", "directory"], DirectedEdge["yst", "filepath"], DirectedEdge["yst", "HDBC"], DirectedEdge["yst", "HStringTemplate"], DirectedEdge["yst", "lucid"], DirectedEdge["yst", "old-locale"], DirectedEdge["yst", "old-time"], DirectedEdge["yst", "pandoc"], DirectedEdge["yst", "parsec"], DirectedEdge["yst", "scientific"], DirectedEdge["yst", "split"], DirectedEdge["yst", "text"], DirectedEdge["yst", "time"], DirectedEdge["yst", "unordered-containers"], DirectedEdge["yst", "yaml"], DirectedEdge["yuiGrid", "base"], DirectedEdge["yuuko", "base"], DirectedEdge["yuuko", "bytestring"], DirectedEdge["yuuko", "containers"], DirectedEdge["yuuko", "curl"], DirectedEdge["yuuko", "deepseq"], DirectedEdge["yuuko", "directory"], DirectedEdge["yuuko", "filepath"], DirectedEdge["yuuko", "mtl"], DirectedEdge["yuuko", "network"], DirectedEdge["yuuko", "parsec"], DirectedEdge["yxdb-utils", "array"], DirectedEdge["yxdb-utils", "attoparsec"], DirectedEdge["yxdb-utils", "base"], DirectedEdge["yxdb-utils", "bimap"], DirectedEdge["yxdb-utils", "binary"], DirectedEdge["yxdb-utils", "binary-conduit"], DirectedEdge["yxdb-utils", "bytestring"], DirectedEdge["yxdb-utils", "Codec-Compression-LZF"], DirectedEdge["yxdb-utils", "conduit"], DirectedEdge["yxdb-utils", "conduit-combinators"], DirectedEdge["yxdb-utils", "conduit-extra"], DirectedEdge["yxdb-utils", "containers"], DirectedEdge["yxdb-utils", "csv-conduit"], DirectedEdge["yxdb-utils", "Decimal"], DirectedEdge["yxdb-utils", "directory"], DirectedEdge["yxdb-utils", "exceptions"], DirectedEdge["yxdb-utils", "ghc-prim"], DirectedEdge["yxdb-utils", "lens"], DirectedEdge["yxdb-utils", "monad-loops"], DirectedEdge["yxdb-utils", "mtl"], DirectedEdge["yxdb-utils", "newtype"], DirectedEdge["yxdb-utils", "old-locale"], DirectedEdge["yxdb-utils", "parsec"], DirectedEdge["yxdb-utils", "primitive"], DirectedEdge["yxdb-utils", "reinterpret-cast"], DirectedEdge["yxdb-utils", "resourcet"], DirectedEdge["yxdb-utils", "text"], DirectedEdge["yxdb-utils", "text-binary"], DirectedEdge["yxdb-utils", "time"], DirectedEdge["yxdb-utils", "transformers"], DirectedEdge["yxdb-utils", "vector"], DirectedEdge["yxdb-utils", "xml-conduit"], DirectedEdge["yxdb-utils", "yxdb-utils"], DirectedEdge["z3", "base"], DirectedEdge["z3", "containers"], DirectedEdge["z3", "mtl"], DirectedEdge["zalgo", "functional-kmp"], DirectedEdge["zalgo", "base"], DirectedEdge["zampolit", "base"], DirectedEdge["zampolit", "cmdargs"], DirectedEdge["zampolit", "containers"], DirectedEdge["zampolit", "directory"], DirectedEdge["zampolit", "filepath"], DirectedEdge["zampolit", "HSH"], DirectedEdge["zampolit", "MissingH"], DirectedEdge["zampolit", "old-locale"], DirectedEdge["zampolit", "parsec"], DirectedEdge["zampolit", "time"], DirectedEdge["zasni-gerna", "base"], DirectedEdge["zasni-gerna", "papillon"], DirectedEdge["zcache", "array"], DirectedEdge["zcache", "base"], DirectedEdge["zcache", "containers"], DirectedEdge["zenc", "base"], DirectedEdge["zendesk-api", "aeson"], DirectedEdge["zendesk-api", "base"], DirectedEdge["zendesk-api", "bytestring"], DirectedEdge["zendesk-api", "case-insensitive"], DirectedEdge["zendesk-api", "conduit"], DirectedEdge["zendesk-api", "connection"], DirectedEdge["zendesk-api", "data-default"], DirectedEdge["zendesk-api", "failure"], DirectedEdge["zendesk-api", "http-client"], DirectedEdge["zendesk-api", "http-client-tls"], DirectedEdge["zendesk-api", "http-conduit"], DirectedEdge["zendesk-api", "http-types"], DirectedEdge["zendesk-api", "monad-logger"], DirectedEdge["zendesk-api", "mtl"], DirectedEdge["zendesk-api", "pem"], DirectedEdge["zendesk-api", "template-haskell"], DirectedEdge["zendesk-api", "text"], DirectedEdge["zendesk-api", "time"], DirectedEdge["zendesk-api", "tls"], DirectedEdge["zendesk-api", "transformers"], DirectedEdge["zendesk-api", "unordered-containers"], DirectedEdge["zendesk-api", "x509-store"], DirectedEdge["zendesk-api", "x509-validation"], DirectedEdge["zeno", "array"], DirectedEdge["zeno", "base"], DirectedEdge["zeno", "containers"], DirectedEdge["zeno", "directory"], DirectedEdge["zeno", "ghc"], DirectedEdge["zeno", "ghc-paths"], DirectedEdge["zeno", "mtl"], DirectedEdge["zeno", "parallel"], DirectedEdge["zeno", "process"], DirectedEdge["zeno", "random"], DirectedEdge["zeno", "text"], DirectedEdge["zeno", "transformers"], DirectedEdge["zero", "base"], DirectedEdge["zero", "semigroups"], DirectedEdge["zerobin", "aeson"], DirectedEdge["zerobin", "base"], DirectedEdge["zerobin", "base64-bytestring"], DirectedEdge["zerobin", "bytestring"], DirectedEdge["zerobin", "cryptonite"], DirectedEdge["zerobin", "docopt"], DirectedEdge["zerobin", "http-conduit"], DirectedEdge["zerobin", "memory"], DirectedEdge["zerobin", "process"], DirectedEdge["zerobin", "raw-strings-qq"], DirectedEdge["zerobin", "zerobin"], DirectedEdge["zeromq-haskell", "base"], DirectedEdge["zeromq-haskell", "bytestring"], DirectedEdge["zeromq-haskell", "containers"], DirectedEdge["zeromq3-conduit", "base"], DirectedEdge["zeromq3-conduit", "bytestring"], DirectedEdge["zeromq3-conduit", "conduit"], DirectedEdge["zeromq3-conduit", "lifted-base"], DirectedEdge["zeromq3-conduit", "monad-control"], DirectedEdge["zeromq3-conduit", "mtl"], DirectedEdge["zeromq3-conduit", "resourcet"], DirectedEdge["zeromq3-conduit", "transformers"], DirectedEdge["zeromq3-conduit", "zeromq3-haskell"], DirectedEdge["zeromq3-haskell", "async"], DirectedEdge["zeromq3-haskell", "base"], DirectedEdge["zeromq3-haskell", "bytestring"], DirectedEdge["zeromq3-haskell", "containers"], DirectedEdge["zeromq3-haskell", "MonadCatchIO-transformers"], DirectedEdge["zeromq3-haskell", "semigroups"], DirectedEdge["zeromq3-haskell", "transformers"], DirectedEdge["zeromq4-haskell", "async"], DirectedEdge["zeromq4-haskell", "base"], DirectedEdge["zeromq4-haskell", "bytestring"], DirectedEdge["zeromq4-haskell", "containers"], DirectedEdge["zeromq4-haskell", "exceptions"], DirectedEdge["zeromq4-haskell", "ghc-prim"], DirectedEdge["zeromq4-haskell", "monad-control"], DirectedEdge["zeromq4-haskell", "semigroups"], DirectedEdge["zeromq4-haskell", "transformers"], DirectedEdge["zeromq4-haskell", "transformers-base"], DirectedEdge["zeroth", "base"], DirectedEdge["zeroth", "Cabal"], DirectedEdge["zeroth", "derive"], DirectedEdge["zeroth", "directory"], DirectedEdge["zeroth", "filepath"], DirectedEdge["zeroth", "haskell-src-exts"], DirectedEdge["zeroth", "hskeleton"], DirectedEdge["zeroth", "monoid-record"], DirectedEdge["zeroth", "process"], DirectedEdge["zeroth", "syb"], DirectedEdge["zeroth", "template-haskell"], DirectedEdge["zigbee-znet25", "base"], DirectedEdge["zigbee-znet25", "bytestring"], DirectedEdge["zigbee-znet25", "cereal"], DirectedEdge["zigbee-znet25", "MissingH"], DirectedEdge["zigbee-znet25", "mtl"], DirectedEdge["zigbee-znet25", "transformers"], DirectedEdge["zim-parser", "array"], DirectedEdge["zim-parser", "base"], DirectedEdge["zim-parser", "binary"], DirectedEdge["zim-parser", "binary-conduit"], DirectedEdge["zim-parser", "bytestring"], DirectedEdge["zim-parser", "conduit"], DirectedEdge["zim-parser", "conduit-extra"], DirectedEdge["zim-parser", "lzma-conduit"], DirectedEdge["zim-parser", "resourcet"], DirectedEdge["zip", "base"], DirectedEdge["zip", "bytestring"], DirectedEdge["zip", "bzlib-conduit"], DirectedEdge["zip", "case-insensitive"], DirectedEdge["zip", "cereal"], DirectedEdge["zip", "conduit"], DirectedEdge["zip", "conduit-extra"], DirectedEdge["zip", "containers"], DirectedEdge["zip", "digest"], DirectedEdge["zip", "exceptions"], DirectedEdge["zip", "filepath"], DirectedEdge["zip", "mtl"], DirectedEdge["zip", "path"], DirectedEdge["zip", "path-io"], DirectedEdge["zip", "plan-b"], DirectedEdge["zip", "resourcet"], DirectedEdge["zip", "semigroups"], DirectedEdge["zip", "text"], DirectedEdge["zip", "time"], DirectedEdge["zip", "transformers"], DirectedEdge["zip-archive", "array"], DirectedEdge["zip-archive", "base"], DirectedEdge["zip-archive", "binary"], DirectedEdge["zip-archive", "bytestring"], DirectedEdge["zip-archive", "containers"], DirectedEdge["zip-archive", "digest"], DirectedEdge["zip-archive", "directory"], DirectedEdge["zip-archive", "filepath"], DirectedEdge["zip-archive", "mtl"], DirectedEdge["zip-archive", "old-time"], DirectedEdge["zip-archive", "pretty"], DirectedEdge["zip-archive", "text"], DirectedEdge["zip-archive", "time"], DirectedEdge["zip-archive", "unix"], DirectedEdge["zip-archive", "zip-archive"], DirectedEdge["zip-archive", "zlib"], DirectedEdge["zip-conduit", "base"], DirectedEdge["zip-conduit", "bytestring"], DirectedEdge["zip-conduit", "cereal"], DirectedEdge["zip-conduit", "conduit"], DirectedEdge["zip-conduit", "conduit-extra"], DirectedEdge["zip-conduit", "digest"], DirectedEdge["zip-conduit", "directory"], DirectedEdge["zip-conduit", "filepath"], DirectedEdge["zip-conduit", "mtl"], DirectedEdge["zip-conduit", "old-time"], DirectedEdge["zip-conduit", "resourcet"], DirectedEdge["zip-conduit", "time"], DirectedEdge["zip-conduit", "transformers"], DirectedEdge["zip-conduit", "utf8-string"], DirectedEdge["zipedit", "base"], DirectedEdge["zipedit", "directory"], DirectedEdge["zipedit", "mtl"], DirectedEdge["zipedit", "process"], DirectedEdge["zipkin", "base"], DirectedEdge["zipkin", "bytestring"], DirectedEdge["zipkin", "mtl"], DirectedEdge["zipkin", "safe"], DirectedEdge["zipper", "base"], DirectedEdge["zipper", "multirec"], DirectedEdge["zippers", "base"], DirectedEdge["zippers", "lens"], DirectedEdge["zippers", "profunctors"], DirectedEdge["zippers", "semigroupoids"], DirectedEdge["zippo", "base"], DirectedEdge["zippo", "mtl"], DirectedEdge["zippo", "yall"], DirectedEdge["zlib", "base"], DirectedEdge["zlib", "bytestring"], DirectedEdge["zlib", "ghc-prim"], DirectedEdge["zlib-bindings", "base"], DirectedEdge["zlib-bindings", "bytestring"], DirectedEdge["zlib-bindings", "zlib"], DirectedEdge["zlib-conduit", "conduit-extra"], DirectedEdge["zlib-conduit", "base"], DirectedEdge["zlib-conduit", "conduit"], DirectedEdge["zlib-enum", "base"], DirectedEdge["zlib-enum", "bytestring"], DirectedEdge["zlib-enum", "enumerator"], DirectedEdge["zlib-enum", "QuickCheck"], DirectedEdge["zlib-enum", "test-framework"], DirectedEdge["zlib-enum", "transformers"], DirectedEdge["zlib-enum", "zlib-bindings"], DirectedEdge["zlib-lens", "base"], DirectedEdge["zlib-lens", "bytestring"], DirectedEdge["zlib-lens", "profunctors"], DirectedEdge["zlib-lens", "zlib"], DirectedEdge["zmcat", "base"], DirectedEdge["zmcat", "bytestring"], DirectedEdge["zmcat", "zeromq3-haskell"], DirectedEdge["zmcat", "zmcat"], DirectedEdge["zmidi-core", "base"], DirectedEdge["zmidi-core", "binary"], DirectedEdge["zmidi-core", "bytestring"], DirectedEdge["zmidi-core", "containers"], DirectedEdge["zmidi-score", "aeson"], DirectedEdge["zmidi-score", "base"], DirectedEdge["zmidi-score", "binary"], DirectedEdge["zmidi-score", "containers"], DirectedEdge["zmidi-score", "data-ordlist"], DirectedEdge["zmidi-score", "deepseq"], DirectedEdge["zmidi-score", "deepseq-generics"], DirectedEdge["zmidi-score", "directory"], DirectedEdge["zmidi-score", "filepath"], DirectedEdge["zmidi-score", "mtl"], DirectedEdge["zmidi-score", "parallel-io"], DirectedEdge["zmidi-score", "text"], DirectedEdge["zmidi-score", "zmidi-core"], DirectedEdge["zmqat", "base"], DirectedEdge["zmqat", "classy-prelude"], DirectedEdge["zmqat", "optparse-applicative"], DirectedEdge["zmqat", "semigroups"], DirectedEdge["zmqat", "zeromq4-haskell"], DirectedEdge["zoneinfo", "base"], DirectedEdge["zoneinfo", "time"], DirectedEdge["zoom", "base"], DirectedEdge["zoom", "directory"], DirectedEdge["zoom", "filepath"], DirectedEdge["zoom", "ghc"], DirectedEdge["zoom", "hamlet"], DirectedEdge["zoom", "hint"], DirectedEdge["zoom", "mtl"], DirectedEdge["zoom", "template-haskell"], DirectedEdge["zoom", "text"], DirectedEdge["zoom-cache", "base"], DirectedEdge["zoom-cache", "blaze-builder"], DirectedEdge["zoom-cache", "bytestring"], DirectedEdge["zoom-cache", "containers"], DirectedEdge["zoom-cache", "data-default"], DirectedEdge["zoom-cache", "iteratee"], DirectedEdge["zoom-cache", "iteratee-compress"], DirectedEdge["zoom-cache", "ListLike"], DirectedEdge["zoom-cache", "MonadCatchIO-transformers"], DirectedEdge["zoom-cache", "mtl"], DirectedEdge["zoom-cache", "old-locale"], DirectedEdge["zoom-cache", "QuickCheck"], DirectedEdge["zoom-cache", "time"], DirectedEdge["zoom-cache", "transformers"], DirectedEdge["zoom-cache", "type-level"], DirectedEdge["zoom-cache", "ui-command"], DirectedEdge["zoom-cache", "unix"], DirectedEdge["zoom-cache", "zlib"], DirectedEdge["zoom-cache-pcm", "base"], DirectedEdge["zoom-cache-pcm", "blaze-builder"], DirectedEdge["zoom-cache-pcm", "bytestring"], DirectedEdge["zoom-cache-pcm", "containers"], DirectedEdge["zoom-cache-pcm", "iteratee"], DirectedEdge["zoom-cache-pcm", "ListLike"], DirectedEdge["zoom-cache-pcm", "mtl"], DirectedEdge["zoom-cache-pcm", "type-level"], DirectedEdge["zoom-cache-pcm", "zoom-cache"], DirectedEdge["zoom-cache-sndfile", "base"], DirectedEdge["zoom-cache-sndfile", "bytestring"], DirectedEdge["zoom-cache-sndfile", "containers"], DirectedEdge["zoom-cache-sndfile", "data-default"], DirectedEdge["zoom-cache-sndfile", "hsndfile"], DirectedEdge["zoom-cache-sndfile", "hsndfile-vector"], DirectedEdge["zoom-cache-sndfile", "mtl"], DirectedEdge["zoom-cache-sndfile", "ui-command"], DirectedEdge["zoom-cache-sndfile", "vector"], DirectedEdge["zoom-cache-sndfile", "zoom-cache"], DirectedEdge["zoom-cache-sndfile", "zoom-cache-pcm"], DirectedEdge["zoom-refs", "base"], DirectedEdge["zoom-refs", "lens"], DirectedEdge["zoom-refs", "stm"], DirectedEdge["zot", "base"], DirectedEdge["zot", "monads-tf"], DirectedEdge["zsh-battery", "base"], DirectedEdge["zsh-battery", "directory"], DirectedEdge["zsh-battery", "filepath"], DirectedEdge["zsh-battery", "mtl"], DirectedEdge["ztail", "array"], DirectedEdge["ztail", "base"], DirectedEdge["ztail", "bytestring"], DirectedEdge["ztail", "filepath"], DirectedEdge["ztail", "hinotify"], DirectedEdge["ztail", "process"], DirectedEdge["ztail", "regex-posix"], DirectedEdge["ztail", "time"], DirectedEdge["ztail", "unix"], DirectedEdge["ztail", "unordered-containers"]}]